,projectname,classification,commenttext,label,code,time,yes_vote,no_vote,svm_pred_0,svm_pred_0_proba,svm_pred_1,svm_pred_1_proba,svm_pred_2,svm_pred_2_proba,svm_pred_3,svm_pred_3_proba,svm_pred_4,svm_pred_4_proba,svm_pred_5,svm_pred_5_proba
0,hibernate-distribution-3.3.2.GA,DEFECT,"// this is only needed (afaict) for processing results from the query cache; // however, this cannot possibly work in the case of discovered types...",yes,undetermined,0,0,0,no,0.17175837541035813,no,0.12618255109074616,no,0.10797643431487638,no,0.10120651308230268,no,0.10310370897977642,no,0.09874866104760567
1,hibernate-distribution-3.3.2.GA,DEFECT,// note that this timestamp is not correct if the connection provider // returns an older JDBC connection that was associated with a // transaction that was already begun before openSession() was called // (don't know any possible solution to this!),yes,undetermined,0,0,0,no,0.12006222339625526,no,0.0956575812860686,yes,0.9946047228167383,yes,0.995660014908026,yes,0.9955786266541644,yes,0.9959272169263003
2,hibernate-distribution-3.3.2.GA,DEFECT,"//TODO: This is assertion is disabled because there is a bug that means the //	  original owner of a transient, uninitialized collection is not known //	  if the collection is re-referenced by a different object associated //	  with the current Session //throw new AssertionFailure(""bug loading unowned collection"");",yes,undetermined,0,0,0,yes,0.7514104350170887,yes,0.6268492175644718,yes,0.6473220162929056,yes,0.6341975221813834,yes,0.6620382339174314,yes,0.6746422877795627
3,hibernate-distribution-3.3.2.GA,DEFECT,"// This does not support the Cache SQL 'DISTINCT BY (comma-list)' extensions, // but this extension is not supported through Hibernate anyway.",yes,undetermined,0,0,0,no,0.08481871240611268,yes,0.9931387352959279,yes,0.9946184887793087,yes,0.9956702062234979,yes,0.9955834778443302,yes,0.9959329287196407
4,hibernate-distribution-3.3.2.GA,DEFECT,"//TODO: when this is the entry point, we should use an INNER_JOIN for fetching the many-to-many elements!",yes,undetermined,0,0,0,yes,0.9950408548804953,yes,0.9931372576949318,yes,0.9946156153494962,yes,0.9956650451643092,yes,0.9955796650239236,yes,0.9959353290740288
5,hibernate-distribution-3.3.2.GA,DEFECT,"// could happen for custom Criteria impls.  Not likely, but... // 		for long term solution, see HHH-3514",yes,undetermined,0,0,0,no,0.023417188532811623,yes,0.9931316684313267,yes,0.9946134525373719,yes,0.9956727813779691,yes,0.9955864489548938,yes,0.9959342358608338
6,hibernate-distribution-3.3.2.GA,DEFECT,//TODO: currently broken for unique-key references (does not detect //      change to unique key property of the associated object) //the owner of the association is not the owner of the id,yes,undetermined,0,0,0,yes,0.8718229379188417,yes,0.970160031733462,yes,0.9946067719653665,yes,0.9956761174143621,yes,0.9955969447381522,yes,0.995933358116565
7,hibernate-distribution-3.3.2.GA,DEFECT,//TODO: currently broken for unique-key references (does not detect //      change to unique key property of the associated object),yes,undetermined,0,0,0,yes,0.9321788626813362,yes,0.9931358430569802,yes,0.9946165104873671,yes,0.9956714027873828,yes,0.9955852494246218,yes,0.9959395737525609
8,hibernate-distribution-3.3.2.GA,DEFECT,"//TODO: entities CAN be compared, by PK and entity name, fix this!",yes,undetermined,0,0,0,yes,0.9999834925546333,yes,0.9999877359042846,yes,0.9999943653890415,yes,0.9999961887755776,yes,0.999995683919128,yes,0.9999964844777833
9,hibernate-distribution-3.3.2.GA,DEFECT,// TODO: does not work for EntityMode.DOM4J yet!,yes,undetermined,0,0,0,yes,0.9999999999469218,yes,0.9999999997901543,yes,0.9999999999310037,yes,0.9999999999677284,yes,0.9999999999617408,yes,0.9999999999751563
10,hibernate-distribution-3.3.2.GA,DEFECT,"// TODO: Deal with the ""optional"" attribute in the <join> mapping; // this code assumes that optional defaults to ""true"" because it // doesn't actually seem to work in the fetch=""join"" code // // Note that actual proper handling of optional-ality here is actually // more involved than this patch assumes.  Remember that we might have // multiple <join/> mappings associated with a single entity.  Really // a couple of things need to happen to properly handle optional here: //  1) First and foremost, when handling multiple <join/>s, we really //      should be using the entity root table as the driving table; //      another option here would be to choose some non-optional joined //      table to use as the driving table.  In all likelihood, just using //      the root table is much simplier //  2) Need to add the FK columns corresponding to each joined table //      to the generated select list; these would then be used when //      iterating the result set to determine whether all non-optional //      data is present // My initial thoughts on the best way to deal with this would be // to introduce a new SequentialSelect abstraction that actually gets // generated in the persisters (ok, SingleTable...) and utilized here. // It would encapsulated all this required optional-ality checking...",yes,undetermined,0,0,0,yes,0.9747653867478899,yes,0.9931260557970911,yes,0.9946103498314718,yes,0.9956722657532641,yes,0.9955929646357093,yes,0.9959382690775824
11,hibernate-distribution-3.3.2.GA,DEFECT,"//TODO: would be nice to use false, but issues with MS SQL",yes,undetermined,0,0,0,yes,0.9958376674666288,yes,0.9931299856082645,yes,0.994617975581761,yes,0.9956730594395073,yes,0.9955798718180021,yes,0.9959259317166599
12,hibernate-distribution-3.3.2.GA,DEFECT,"//TODO: not really completely correct, since //      the uoe could occur while resolving //      associations, leaving the PC in an //      inconsistent state",yes,undetermined,0,0,0,yes,0.8265733142684291,yes,0.8265877110100955,yes,0.8372743063240765,yes,0.8533630512399816,yes,0.8517529993197951,yes,0.8533905214902937
13,hibernate-distribution-3.3.2.GA,DEFECT,//TODO: this is kinda inconsistent with CollectionType,yes,undetermined,0,0,0,yes,0.950870386019983,yes,0.9931364572819793,yes,0.9946228291410193,yes,0.9956674234714501,yes,0.9955868747733606,yes,0.9959437069894274
14,hibernate-distribution-3.3.2.GA,DEFECT,"// For a one-to-many, a <bag> is not really a bag; // it is *really* a set, since it can't contain the // same element twice. It could be considered a bug // in the mapping dtd that <bag> allows <one-to-many>.",yes,undetermined,0,0,0,no,0.08532448226005213,yes,0.9931375656476539,yes,0.9946134856430519,yes,0.9956684232421447,yes,0.9955818669724561,yes,0.9959350500970595
15,hibernate-distribution-3.3.2.GA,DEFECT,"//TODO: entities CAN be compared, by PK, fix this! -> only if/when we can extract the id values....",yes,undetermined,0,0,0,yes,0.989282087519735,yes,0.9931347046311362,yes,0.9946160862294131,yes,0.995671964393117,yes,0.9955852060971803,yes,0.995928864083885
16,hibernate-distribution-3.3.2.GA,DEFECT,//TODO: old version did not require hashmap lookup: //keys[collectionOwner].getIdentifier(),yes,undetermined,0,0,0,yes,0.7017788284092923,yes,0.6454686880044157,yes,0.6605762965300854,yes,0.6829002197856443,yes,0.6768347900404158,yes,0.6603347263133887
17,hibernate-distribution-3.3.2.GA,DEFECT,// TODO: this disables laziness even in non-pojo entity modes:,yes,undetermined,0,0,0,yes,0.9683504945965471,yes,0.993128968605302,yes,0.994616792791435,yes,0.9956614233786016,yes,0.9955848848831649,yes,0.9959370297820259
18,hibernate-distribution-3.3.2.GA,DEFECT,"// TODO: at the point where we are resolving collection references, we don't // know if the uk value has been resolved (depends if it was earlier or // later in the mapping document) - now, we could try and use e.getStatus() // to decide to semiResolve(), trouble is that initializeEntity() reuses // the same array for resolved and hydrated values",yes,undetermined,0,0,0,yes,0.7168995774966395,yes,0.7495631929630119,yes,0.7882581580034383,yes,0.7915598297696642,yes,0.7940083356083637,yes,0.8026816408532164
19,hibernate-distribution-3.3.2.GA,DEFECT,//TODO: currently we don't know a SessionFactory reference when building the Tuplizer //      THIS IS A BUG (embedded-xml=false on component) // TODO : fix this after HHH-1907 is complete,yes,undetermined,0,0,0,yes,0.9999999896229593,yes,0.9999999031957472,yes,0.9999999113727097,yes,0.9999999463382653,yes,0.9999999443778866,yes,0.9999999578029497
20,hibernate-distribution-3.3.2.GA,DEFECT,//TODO: this requires that the collection is defined after the //      referenced property in the mapping file (ok?),yes,undetermined,0,0,0,yes,0.7901954184959037,yes,0.8045963382384893,yes,0.8485383828880196,yes,0.9246896931516725,yes,0.9955895774733585,yes,0.9959368479691824
21,hibernate-distribution-3.3.2.GA,DEFECT,// TODO : currently we really do not handle ValueInclusion.PARTIAL... // ValueInclusion.PARTIAL would indicate parts of a component need to // be included in the select; currently we then just render the entire // component into the select clause in that case.,yes,undetermined,0,0,0,yes,0.9535334736094216,yes,0.9931368336708462,yes,0.9946138215438637,yes,0.9956679893460791,yes,0.9955757902274952,yes,0.9959368895924753
22,hibernate-distribution-3.3.2.GA,DEFECT,//TODO: is this completely correct?,yes,undetermined,0,0,0,yes,0.9999997435406648,yes,0.9999995390014039,yes,0.9999995782769043,yes,0.9999998200850522,yes,0.9999998100384004,yes,0.9999998539414958
23,hibernate-distribution-3.3.2.GA,DEFECT,// TODO: what if batchUpdate is a callablestatement ? // calls executeBatch(),yes,undetermined,0,0,0,yes,0.9728443893546639,yes,0.9931458259399593,yes,0.9946238464881397,yes,0.9956592208996884,yes,0.995589417474657,yes,0.9959409390622294
24,hibernate-distribution-3.3.2.GA,DEFECT,// This doesn't actually seem to work but it *might* // work on some dbs. Also it doesn't work if there // are multiple columns of results because it // is not accounting for the suffix: // return new String[] { getDiscriminatorColumnName() };,yes,undetermined,0,0,0,yes,0.7096621919003949,yes,0.6459838591287697,yes,0.6360279480181491,yes,0.6345448808841817,yes,0.6236571398358051,yes,0.6234875264747868
25,hibernate-distribution-3.3.2.GA,DEFECT,"// First, validate all the enabled filters... //TODO: this implementation has bad performance",yes,undetermined,0,0,0,yes,0.9712672437443858,yes,0.9931398194490232,yes,0.9946160740190915,yes,0.9956617689545401,yes,0.9955817830352325,yes,0.9959348390326169
26,hibernate-distribution-3.3.2.GA,DEFECT,"//TODO: passing null here, because this method is not really used for DOM4J at the moment //      but it is still a bug, if we don't get rid of this!",yes,undetermined,0,0,0,yes,0.9999992280079357,yes,0.999998678560547,yes,0.9999992475551915,yes,0.9999996197460466,yes,0.9999996177746299,yes,0.9999997087952405
27,hibernate-distribution-3.3.2.GA,DEFECT,// TODO : this really needs to be delayed unitl after we definitively know the operand node type; // where this is currently a problem is parameters for which where we cannot unequivocally // resolve an expected type,yes,undetermined,0,0,0,yes,0.9923077100112677,yes,0.9931358452946715,yes,0.9946214135542691,yes,0.9956726111771097,yes,0.9955878890934386,yes,0.9959348669818654
28,hibernate-distribution-3.3.2.GA,DEFECT,"/*
		  * Algorithm
		  * Check for any level one nullability breaks
		  * Look at non null components to
		  *   recursively check next level of nullability breaks
		  * Look at Collections contraining component to
		  *   recursively check next level of nullability breaks
		  *
		  *
		  * In the previous implementation, not-null stuffs where checked
		  * filtering by level one only updateable
		  * or insertable columns. So setting a sub component as update=""false""
		  * has no effect on not-null check if the main component had good checkeability
		  * In this implementation, we keep this feature.
		  * However, I never see any documentation mentioning that, but it's for
		  * sure a limitation.
		  */",yes,undetermined,0,0,0,no,0.12938484203556117,no,0.06979558144080869,yes,0.9946176938957401,yes,0.9956626888377442,yes,0.9955821901879137,yes,0.9959350084302719
29,hibernate-distribution-3.3.2.GA,DEFECT,"// assume that the row was not there since it previously had only null // values, so do an INSERT instead //TODO: does not respect dynamic-insert",yes,undetermined,0,0,0,no,0.19011717557243604,no,0.2564902019455533,no,0.2738328223967718,no,0.2888240578018543,no,0.28071487891180885,no,0.27071676267551253
30,hibernate-distribution-3.3.2.GA,DEFECT,// todo : this call will not work for anything other than pojos!,yes,undetermined,0,0,0,yes,0.9999994966715329,yes,0.9999988946186547,yes,0.9999991960360669,yes,0.9999994932746322,yes,0.9999994584433181,yes,0.9999995638538762
31,hibernate-distribution-3.3.2.GA,DEFECT,//note that this implementation is kinda broken //for components with many-to-one associations,yes,undetermined,0,0,0,no,0.27410043885157803,no,0.3725492241366629,no,0.33831299899289097,no,0.33621982569296693,no,0.32819581803366193,no,0.3202588840787044
32,hibernate-distribution-3.3.2.GA,DEFECT,"//no need to take a snapshot - this is a  //performance optimization, but not really //important, except for entities with huge  //mutable property values",yes,undetermined,0,0,0,no,0.12183739981474294,no,0.11484031308548143,no,0.13822407486715066,no,0.12815519487912067,no,0.1257403323903597,no,0.12016771184703026
33,hibernate-distribution-3.3.2.GA,DEFECT,// TODO : this is broke for subqueries in statements other than selects...,yes,undetermined,0,0,0,yes,0.9936128185560312,yes,0.9931321204444776,yes,0.9946179900478394,yes,0.9956706543765289,yes,0.9955925550146195,yes,0.9959382881478652
34,hibernate-distribution-3.3.2.GA,DEFECT,"/*
         * The following types are not supported in RDMS/JDBC and therefore commented out.
         * However, in some cases, mapping them to CHARACTER columns works
         * for many applications, but does not work for all cases.
         */",yes,undetermined,0,0,0,no,0.28445156173247116,no,0.2631842902341455,no,0.24698312793879323,no,0.24874889797527647,no,0.24927785739301644,no,0.24623779039135374
35,hibernate-distribution-3.3.2.GA,DEFECT,// TODO : should this be an error?,yes,undetermined,0,0,0,yes,0.9999999976945556,yes,0.9999999943813461,yes,0.9999999950512997,yes,0.9999999969040111,yes,0.9999999967436818,yes,0.999999997726957
36,hibernate-distribution-3.3.2.GA,DEFECT,"// three general cases we check here as to whether to render a physical SQL join: // 1) is our parent a DotNode as well?  If so, our property reference is // 		being further de-referenced... // 2) is this a DML statement // 3) we were asked to generate any needed joins (generateJoins==true) *OR* //		we are currently processing a select or from clause // (an additional check is the REGRESSION_STYLE_JOIN_SUPPRESSION check solely intended for the test suite) // // The REGRESSION_STYLE_JOIN_SUPPRESSION is an additional check // intended solely for use within the test suite.  This forces the // implicit join resolution to behave more like the classic parser. // The underlying issue is that classic translator is simply wrong // about its decisions on whether or not to render an implicit join // into a physical SQL join in a lot of cases.  The piece it generally // tends to miss is that INNER joins effect the results by further // restricting the data set!  A particular manifestation of this is // the fact that the classic translator will skip the physical join // for ToOne implicit joins *if the query is shallow*; the result // being that Query.list() and Query.iterate() could return // different number of results!",yes,undetermined,0,0,0,no,0.208617260148189,no,0.10456581416492408,no,0.09636024518437616,yes,0.9956590331925956,yes,0.9955912616781656,yes,0.9959381086592765
37,hibernate-distribution-3.3.2.GA,DEFECT,// TODO: figure out how this should be set. /////////////////////////////////////////////////////////////////////////////// // This was the reason for failures regarding INDEX_OP and subclass joins on // theta-join dialects; not sure what behaviour we were trying to emulate ;) //		joinSequence = joinSequence.getFromPart();	// Emulate the old addFromOnly behavior.,yes,undetermined,0,0,0,yes,0.924915206389622,yes,0.9931315143359728,yes,0.9946082560772614,yes,0.9956769293392158,yes,0.9955927991417832,yes,0.9959334185099457
38,hibernate-distribution-3.3.2.GA,DEFECT,"// The preference here would be //   SQLFunctionTemplate( Hibernate.TIMESTAMP, ""current_timestamp(?1)"", false) // but this appears not to work. // Jay Nance 2006-09-22",yes,undetermined,0,0,0,no,0.3086635176913208,no,0.28232217781536134,no,0.316286619289517,no,0.3456397824958637,no,0.34366953882036433,no,0.33447633721187336
39,hibernate-distribution-3.3.2.GA,DEFECT,"//TODO: would be nice to use false, but issues with MS SQL",yes,undetermined,0,0,0,yes,0.9958376674666288,yes,0.9931299856082645,yes,0.994617975581761,yes,0.9956730594395073,yes,0.9955798718180021,yes,0.9959259317166599
40,hibernate-distribution-3.3.2.GA,DEFECT,"//TODO: inexact, what we really need to know is: are any outer joins used?",yes,undetermined,0,0,0,yes,0.978323235310977,yes,0.9931397872284566,yes,0.994627199699117,yes,0.9956603509775704,yes,0.9955884485635066,yes,0.9959446908134536
41,hibernate-distribution-3.3.2.GA,DEFECT,"//TODO: would be nice to use false, but issues with MS SQL",yes,undetermined,0,0,0,yes,0.9958376674666288,yes,0.9931299856082645,yes,0.994617975581761,yes,0.9956730594395073,yes,0.9955798718180021,yes,0.9959259317166599
42,hibernate-distribution-3.3.2.GA,DEFECT,"// TODO : not sure which (either?) is correct, could not find docs on how to do this. // did find various blogs and forums mentioning that select CURRENT_TIMESTAMP // does not work...",yes,undetermined,0,0,0,yes,0.9956352074043703,yes,0.9947394833680402,yes,0.9955123490198288,yes,0.9959540008065924,yes,0.9957308534018119,yes,0.9959312295755324
43,hibernate-distribution-3.3.2.GA,DEFECT,// TODO: cannot use generateSuffixes() - it handles the initial suffix differently.,yes,undetermined,0,0,0,no,0.3865646273687115,no,0.30001011228442337,no,0.32310047763628663,no,0.34405967060143544,no,0.34076859138306764,no,0.3385604433311906
44,hibernate-distribution-3.3.2.GA,DEFECT,"//Don't need this, because we should never ever be selecting no columns in an insert ... select... //and because it causes a bug on DB2",yes,undetermined,0,0,0,no,0.05433989309916814,yes,0.9931345781851622,yes,0.9946041749730833,yes,0.9956570363457226,yes,0.9955818240532114,yes,0.9959328656157405
45,hibernate-distribution-3.3.2.GA,DEFECT,// starts with an alias (old style) // semi-bad thing about this: can't re-alias another alias.....,yes,undetermined,0,0,0,no,0.06161012314035063,yes,0.9931374704621185,yes,0.994611300890192,yes,0.9956642080203021,yes,0.9955895600690299,yes,0.9959338865951886
46,hibernate-distribution-3.3.2.GA,DEFECT,//TODO: BUG! this currently fails for named queries for non-POJO entities,yes,undetermined,0,0,0,yes,0.9952137891249158,yes,0.9936764738886761,yes,0.9946188833851628,yes,0.9956685593707135,yes,0.9955848588345511,yes,0.9959272895936773
47,hibernate-distribution-3.3.2.GA,DEFECT,"//FIXME we don't have the associated entity table name here, has to be done in a second pass",yes,undetermined,0,0,0,yes,0.941666642841267,yes,0.9931222104537621,yes,0.9946166864977506,yes,0.9956612782525289,yes,0.995581821934204,yes,0.9959274623003356
48,hibernate-distribution-3.3.2.GA,DEFECT,// this call is side-effecty,yes,undetermined,0,0,0,no,0.00725929346486238,yes,0.9931228707258963,yes,0.9946148802819526,yes,0.9956634115765135,yes,0.9955859340734424,yes,0.9959335544278202
49,hibernate-distribution-3.3.2.GA,DEFECT,"// RDMS does not directly support the trim() function, we use rtrim() and ltrim()",yes,undetermined,0,0,0,no,0.0061027780532095025,yes,0.9931227615138041,yes,0.9946197045897492,yes,0.9956706886188758,yes,0.9955817364279452,yes,0.9959269788475056
50,hibernate-distribution-3.3.2.GA,DEFECT,// note: at least my local SQL Server 2005 Express shows this not working...,yes,undetermined,0,0,0,no,0.13035745459325895,no,0.26854843572966375,no,0.27928948731702036,no,0.3074077238933844,no,0.3041881075635509,no,0.29957101844058615
51,hibernate-distribution-3.3.2.GA,DEFECT,// note: at least my local MySQL 5.1 install shows this not working...,yes,undetermined,0,0,0,no,0.1587046002821861,no,0.26061560561860425,no,0.2621788140225184,no,0.2754869932609957,no,0.27069634390129926,no,0.2659349139582434
52,hibernate-distribution-3.3.2.GA,DESIGN,"// use COUNT as the default.  This mimics the old behavior, although // NONE might be a better option moving forward in the case of callable",yes,undetermined,0,0,0,no,0.06949290304365853,yes,0.9931433733458805,yes,0.994612542366379,yes,0.9956707223325146,yes,0.9955859681641007,yes,0.9959318474040731
53,hibernate-distribution-3.3.2.GA,DESIGN,//perhaps not really necessary...,yes,undetermined,0,0,0,yes,0.9320363171223547,yes,0.9931389861394754,yes,0.9946231473235797,yes,0.9956709170338027,yes,0.9955924274039416,yes,0.9959326193925622
54,hibernate-distribution-3.3.2.GA,DESIGN,// todo : what else to do here?,yes,undetermined,0,0,0,yes,0.9742900410078031,yes,0.9931258817176841,yes,0.9946064829990491,yes,0.9956612165085214,yes,0.9955852612801912,yes,0.9959299617032853
55,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: disable batch loading if lockMode > READ?,yes,undetermined,0,0,0,yes,0.6839293253758285,yes,0.648278648660724,yes,0.6826441597366036,yes,0.6573803906070534,yes,0.6936278289400643,yes,0.6974339522107637
56,hibernate-distribution-3.3.2.GA,DESIGN,// todo : what else to do here?,yes,undetermined,0,0,0,yes,0.9742900410078031,yes,0.9931258817176841,yes,0.9946064829990491,yes,0.9956612165085214,yes,0.9955852612801912,yes,0.9959299617032853
57,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: to handle concurrent writes correctly, the client should pass in a Lock",yes,undetermined,0,0,0,yes,0.95148475523064,yes,0.9931357175302034,yes,0.9946192002327016,yes,0.9956687389550883,yes,0.995588688780586,yes,0.9959278823493245
58,hibernate-distribution-3.3.2.GA,DESIGN,"// turn hibernate.c3p0.* into c3p0.*, so c3p0 // gets a chance to see all hibernate.c3p0.*",yes,undetermined,0,0,0,no,0.02319961139165622,yes,0.9931258344823524,yes,0.9946206888145963,yes,0.9956701431308611,yes,0.9955869674330982,yes,0.9959379054297297
59,hibernate-distribution-3.3.2.GA,DESIGN,//note there is a wierd implementation in the client side,yes,undetermined,0,0,0,no,0.007132011382728321,yes,0.9931253895237904,yes,0.9946132544582288,yes,0.995671567925788,yes,0.9955875969771654,yes,0.9959376491981681
60,hibernate-distribution-3.3.2.GA,DESIGN,// todo: this was added to support initializing an entity's EntityEntry snapshot during reattach; // this should be refactored to instead expose a method to assemble a EntityEntry based on this // state for return.,yes,undetermined,0,0,0,yes,0.9893468052374801,yes,0.9931298816512084,yes,0.9946142204770825,yes,0.9956679824942338,yes,0.9955910791434996,yes,0.9959395610434646
61,hibernate-distribution-3.3.2.GA,DESIGN,// Do we need to drop constraints before dropping tables in this dialect?,yes,undetermined,0,0,0,no,0.02967446066778852,yes,0.9931387795053627,yes,0.9946132804663061,yes,0.9956650672037607,yes,0.9955771921935238,yes,0.9959301146730556
62,hibernate-distribution-3.3.2.GA,DESIGN,"/**
     * FIXME Per the RegionFactory class Javadoc, this constructor version
     * should not be necessary.
     * 
     * @param props The configuration properties
     */",yes,undetermined,0,0,0,yes,0.9963688569540528,yes,0.9949218154216514,yes,0.9953598183851775,yes,0.9956602572794699,yes,0.9955897006360699,yes,0.9959313233627838
63,hibernate-distribution-3.3.2.GA,DESIGN,// Does this dialect support check constraints?,yes,undetermined,0,0,0,no,0.002294845924385737,yes,0.9931354820917334,yes,0.9946093824986192,yes,0.9956608364408577,yes,0.9955887151608265,yes,0.9959311114486763
64,hibernate-distribution-3.3.2.GA,DESIGN,// this is called by SessionFactory irregardless; we just disregard here; // could also add a check to SessionFactory to only conditionally call start,yes,undetermined,0,0,0,no,0.28054870619261624,no,0.28177334063692555,no,0.25420906561619067,no,0.24477044917221252,no,0.238850511373548,no,0.23027207306962028
65,hibernate-distribution-3.3.2.GA,DESIGN,// Does this dialect support the UNIQUE column syntax?,yes,undetermined,0,0,0,no,0.0313178093864324,yes,0.9931423097575843,yes,0.9946114756044659,yes,0.9956623471807454,yes,0.995591682123406,yes,0.9959328056813866
66,hibernate-distribution-3.3.2.GA,DESIGN,// this is done here 'cos we might only know the type here (ugly!) // TODO: improve this a lot:,yes,undetermined,0,0,0,yes,0.999999819767813,yes,0.9999998495882713,yes,0.9999998925644765,yes,0.9999999471600546,yes,0.9999999413106678,yes,0.9999999296214492
67,hibernate-distribution-3.3.2.GA,DESIGN,// Does this dialect support the FOR UPDATE syntax?,yes,undetermined,0,0,0,no,0.03128457132407808,yes,0.9964559099566145,yes,0.997345670033732,yes,0.9999862151423393,yes,0.9999853952948168,yes,0.9999879441878007
68,hibernate-distribution-3.3.2.GA,DESIGN,// todo : what is the implication of this?,yes,undetermined,0,0,0,yes,0.9999996766108961,yes,0.9999996591811086,yes,0.9999996448514797,yes,0.9999998610016149,yes,0.9999998690380979,yes,0.9999998977296889
69,hibernate-distribution-3.3.2.GA,DESIGN,// todo : YUCK!!!,yes,undetermined,0,0,0,yes,0.9999999415730743,yes,0.9999999371335891,yes,0.9999999860535862,yes,0.9999999951764421,yes,0.9999999949187864,yes,0.9999999963684013
70,hibernate-distribution-3.3.2.GA,DESIGN,"// todo : again, how *should* this work for non-pojo entities?",yes,undetermined,0,0,0,yes,0.9999995445307481,yes,0.9999993093379786,yes,0.9999996673040438,yes,0.9999997899015588,yes,0.9999997800651763,yes,0.9999998339818116
71,hibernate-distribution-3.3.2.GA,DESIGN,"// Does this dialect support FOR UPDATE OF, allowing particular rows to be locked?",yes,undetermined,0,0,0,no,0.04103191526604495,yes,0.9931423170763224,yes,0.9946143235153321,yes,0.9956725413323495,yes,0.9955855013791712,yes,0.9959250449659286
72,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: really bad, evil hack to fix!!!",yes,undetermined,0,0,0,yes,0.9999999999999689,yes,0.9999999999998663,yes,0.9999999999999647,yes,0.9999999999999699,yes,0.9999999999999699,yes,0.9999999999999699
73,hibernate-distribution-3.3.2.GA,DESIGN,"//aliasRefNode.resolve( false, false, aliasRefNode.getText() ); //TODO: is it kosher to do it here? //TODO: is it kosher to do it here?",yes,undetermined,0,0,0,yes,0.9957706711376528,yes,0.9954120455254459,yes,0.9961754413336508,yes,0.9970049714419941,yes,0.9968821120848577,yes,0.9971486532438345
74,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: better to degrade to lazy=""false"" if uninstrumented",yes,undetermined,0,0,0,yes,0.9999979651038421,yes,0.9974493353048939,yes,0.9999903101096146,yes,0.9999939494257865,yes,0.9999934830490539,yes,0.9999951144680039
75,hibernate-distribution-3.3.2.GA,DESIGN,// Does this dialect support the Oracle-style FOR UPDATE NOWAIT syntax?,yes,undetermined,0,0,0,no,0.009707644401565534,yes,0.9931349825582272,yes,0.9946266790234071,yes,0.9956741157293212,yes,0.995586183138643,yes,0.9959352605219471
76,hibernate-distribution-3.3.2.GA,DESIGN,"/**
     * FIXME Per the RegionFactory class Javadoc, this constructor version
     * should not be necessary.
     * 
     * @param props The configuration properties
     */",yes,undetermined,0,0,0,yes,0.9963688569540528,yes,0.9949218154216514,yes,0.9953598183851775,yes,0.9956602572794699,yes,0.9955897006360699,yes,0.9959313233627838
77,hibernate-distribution-3.3.2.GA,DESIGN,//Icky workaround for MySQL bug:,yes,undetermined,0,0,0,yes,0.9999838511407299,yes,0.9999831109966381,yes,0.9999902865833322,yes,0.9999943048789043,yes,0.9999939066935906,yes,0.9999950800723217
78,hibernate-distribution-3.3.2.GA,DESIGN,// we have to set up the table later!! yuck,yes,undetermined,0,0,0,no,0.19964076997420332,no,0.18867466242527686,no,0.1959918081785149,no,0.19851640146132649,no,0.196882851016492,no,0.19010109156523722
79,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: Somehow add the newly created foreign keys to the internal collection,yes,undetermined,0,0,0,yes,0.9679539118933662,yes,0.9931438567560608,yes,0.9946175263530804,yes,0.9956689814136236,yes,0.9955804838997988,yes,0.9959317535563142
80,hibernate-distribution-3.3.2.GA,DESIGN,// This inner class implements a case statement....perhaps im being a bit over-clever here,yes,undetermined,0,0,0,no,0.5420902466171087,no,0.5157730817135563,no,0.5,no,0.5107666890872974,no,0.5092040221621634,no,0.5073052057064482
81,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: merge into one method!,yes,undetermined,0,0,0,yes,0.9965879165403545,yes,0.9962213000730387,yes,0.9969574282342798,yes,0.9973925392400294,yes,0.997315458822199,yes,0.9999818824959882
82,hibernate-distribution-3.3.2.GA,DESIGN,// TODO: this is a bit of copy/paste from IndexedCollection.createPrimaryKey(),yes,undetermined,0,0,0,yes,0.9999995093358746,yes,0.9999998899499772,yes,0.999999915449635,yes,0.9999999503493484,yes,0.9999999459110924,yes,0.9999999595889794
83,hibernate-distribution-3.3.2.GA,DESIGN,// TODO: what type?,yes,undetermined,0,0,0,yes,0.8824846395084474,yes,0.8615769706828105,yes,0.8709499595730593,yes,0.8804343989283197,yes,0.8784525513159307,yes,0.8806525399138151
84,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: inefficient,yes,undetermined,0,0,0,yes,0.988006163718985,yes,0.9931355929894786,yes,0.9946211657145735,yes,0.9956691683385515,yes,0.9955928797530214,yes,0.9959376454621719
85,hibernate-distribution-3.3.2.GA,DESIGN,//FIXME: get the PersistentClass,yes,undetermined,0,0,0,yes,0.9374050331026402,yes,0.9931347438479952,yes,0.9946210221390125,yes,0.995668608919329,yes,0.995593245267652,yes,0.9959414949555165
86,hibernate-distribution-3.3.2.GA,DESIGN,// todo : we can remove this once the deprecated ctor can be made private...,yes,undetermined,0,0,0,yes,0.9961292513694004,yes,0.9970533203645194,yes,0.9973931576944695,yes,0.9999861568783464,yes,0.9999851189218952,yes,0.9999879727761627
87,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: this is too conservative; if all preceding joins were  //      also inner joins, we could use an inner join here",yes,undetermined,0,0,0,yes,0.8348632901843358,yes,0.810192124077322,yes,0.8218804173849636,yes,0.8807795295361347,yes,0.8795029832594607,yes,0.8818483578420765
88,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: redesign how PropertyAccessors are acquired...,yes,undetermined,0,0,0,yes,0.9999999288767649,yes,0.9999997806397205,yes,0.9999999060105914,yes,0.9999999475389473,yes,0.9999999449908594,yes,0.9999999601193033
89,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : not so sure this is needed...,yes,undetermined,0,0,0,yes,0.999999999212961,yes,0.9999999980328285,yes,0.9999999989031766,yes,0.9999999996072987,yes,0.9999999996081671,yes,0.9999999997342037
90,hibernate-distribution-3.3.2.GA,DESIGN,// todo : we can remove this once the deprecated ctor can be made private...,yes,undetermined,0,0,0,yes,0.9961292513694004,yes,0.9970533203645194,yes,0.9973931576944695,yes,0.9999861568783464,yes,0.9999851189218952,yes,0.9999879727761627
91,hibernate-distribution-3.3.2.GA,DESIGN,//create an index on the key columns??,yes,undetermined,0,0,0,no,0.0007242549838176992,yes,0.9931290480529239,yes,0.9946089863306675,yes,0.9956603007959322,yes,0.995580378012384,yes,0.9959325433122919
92,hibernate-distribution-3.3.2.GA,DESIGN,"/* TODO: joinKeyColumnName & foreignKeyColumnName should be called either here or at a
			 * slightly higer level in the stack (to get all the information we need)
			 * Right now HbmBinder does not support the
			 */",yes,undetermined,0,0,0,yes,0.987374152332886,yes,0.9931309707906087,yes,0.9946048212614919,yes,0.995661788245557,yes,0.9955869733245274,yes,0.995937138503739
93,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: improve this hack!,yes,undetermined,0,0,0,yes,0.9999999999999699,yes,0.9999999999999699,yes,0.9999999999999699,yes,0.9999999999999699,yes,0.9999999999999699,yes,0.9999999999999699
94,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: bad implementation, cos it depends upon ordering of mapping doc //      fixing this requires that Collection/PersistentClass gain access //      to the Mappings reference from Configuration (or the filterDefinitions //      map directly) sometime during Configuration.buildSessionFactory //      (after all the types/filter-defs are known and before building //      persisters).",yes,undetermined,0,0,0,yes,0.6537368217641554,yes,0.7371106075368341,yes,0.7361499239100977,yes,0.734384160150881,yes,0.7714363757252917,yes,0.7588894934947498
95,hibernate-distribution-3.3.2.GA,DESIGN,//use of trim() here is ugly?,yes,undetermined,0,0,0,yes,0.9171206896075138,yes,0.993124048435366,yes,0.9946105161052325,yes,0.995675796013997,yes,0.9955917976293145,yes,0.9959325705192902
96,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: ideally we need the construction of PropertyAccessor to take the following: //      1) EntityMode //      2) EntityMode-specific data (i.e., the classname for pojo entities) //      3) Property-specific data based on the EntityMode (i.e., property-name or dom4j-node-name) // The easiest way, with the introduction of the new runtime-metamodel classes, would be the // the following predicates: //      1) PropertyAccessorFactory.getPropertyAccessor() takes references to both a //          org.hibernate.metadata.EntityModeMetadata and org.hibernate.metadata.Property //      2) What is now termed a ""PropertyAccessor"" stores any values needed from those two //          pieces of information //      3) Code can then simply call PropertyAccess.getGetter() with no parameters; likewise with //          PropertyAccessor.getSetter()",yes,undetermined,0,0,0,yes,0.7798927173835346,yes,0.6974478485086013,yes,0.6849421988608716,yes,0.7457923311353405,yes,0.7441335346942552,yes,0.7437288896509182
97,hibernate-distribution-3.3.2.GA,DESIGN,// can happen because of the multiple ways Cache.remove() // can be invoked :(,yes,undetermined,0,0,0,no,0.0025307902213471695,yes,0.9931332688249658,yes,0.9946184728141281,yes,0.9956600740498456,yes,0.9955835192025648,yes,0.9959323279257745
98,hibernate-distribution-3.3.2.GA,DESIGN,//ick!,yes,undetermined,0,0,0,no,0.0036523008980329486,no,0.005504726900042388,no,0.006461868463342029,no,0.00788716525811375,no,0.0079850989855144,no,0.007268429553841039
99,hibernate-distribution-3.3.2.GA,DESIGN,// todo : we can remove this once the deprecated ctor can be made private...,yes,undetermined,0,0,0,yes,0.9961292513694004,yes,0.9970533203645194,yes,0.9973931576944695,yes,0.9999861568783464,yes,0.9999851189218952,yes,0.9999879727761627
100,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO: this is very suboptimal for some subclasses (namely components), // since it does not take advantage of two-phase-load",yes,undetermined,0,0,0,yes,0.8630950534130233,yes,0.8873313193125167,yes,0.8915057940339451,yes,0.8958094738182466,yes,0.8935795087007617,yes,0.8961897581407782
101,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: should this be Session.instantiate(Persister, ...)?",yes,undetermined,0,0,0,yes,0.9935162582126211,yes,0.9950933955906794,yes,0.9954478243619991,yes,0.9962910913211573,yes,0.9961760374637839,yes,0.9964697122836618
102,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: suck this into initLaziness!,yes,undetermined,0,0,0,yes,0.999999999374112,yes,0.999999998317124,yes,0.9999999944906772,yes,0.9999999970720373,yes,0.9999999969429679,yes,0.9999999977828179
103,hibernate-distribution-3.3.2.GA,DESIGN,// todo : we can remove this once the deprecated ctor can be made private...,yes,undetermined,0,0,0,yes,0.9961292513694004,yes,0.9970533203645194,yes,0.9973931576944695,yes,0.9999861568783464,yes,0.9999851189218952,yes,0.9999879727761627
104,hibernate-distribution-3.3.2.GA,DESIGN,"// 'hibernate.temp.use_jdbc_metadata_defaults' is a temporary magic value. // The need for it is intended to be alleviated with future developement, thus it is // not defined as an Environment constant... // // it is used to control whether we should consult the JDBC metadata to determine // certain Settings default values; it is useful to *not* do this when the database // may not be available (mainly in tools usage).",yes,undetermined,0,0,0,no,0.1517245699618228,no,0.10858603937413394,no,0.09359655557561274,yes,0.995658356003176,yes,0.9955871261209411,yes,0.9959435483262823
105,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: is this right??,yes,undetermined,0,0,0,yes,0.9999999999999699,yes,0.9999999999999699,yes,0.9999999999999699,yes,0.9999999999999699,yes,0.9999999999999699,yes,0.9999999999999699
106,hibernate-distribution-3.3.2.GA,DESIGN,//ie. the subquery! yuck!,yes,undetermined,0,0,0,no,0.1710747414189854,no,0.2039437435612955,no,0.2557817114704565,no,0.2976569493794805,no,0.29696910153520867,no,0.2912565201852312
107,hibernate-distribution-3.3.2.GA,DESIGN,//use of a stringbuffer to workaround a JDK bug,yes,undetermined,0,0,0,yes,0.9999988376356178,yes,0.9999978177489623,yes,0.9999987067078375,yes,0.9999991909022921,yes,0.9999991339066965,yes,0.9999993155359139
108,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: copy/paste from recreate(),yes,undetermined,0,0,0,yes,0.9750655294846614,yes,0.9931205793161626,yes,0.9946109374156983,yes,0.995669417465341,yes,0.9955865112877873,yes,0.9959337750644843
109,hibernate-distribution-3.3.2.GA,DESIGN,"//workaround, for backward compatibility of sets with no //not-null columns, assume all columns are used in the //row locator SQL",yes,undetermined,0,0,0,no,0.1252462764427919,no,0.19066010307793252,no,0.17590516538405584,no,0.16665668722637772,no,0.16334706819189185,no,0.16042366706365574
110,hibernate-distribution-3.3.2.GA,DESIGN,// todo : this eventually needs to be removed,yes,undetermined,0,0,0,yes,0.9999966616378557,yes,0.9931256149005033,yes,0.9946156311602066,yes,0.9956639606501544,yes,0.9955785279882489,yes,0.9959311242519717
111,hibernate-distribution-3.3.2.GA,DESIGN,// todo : remove,yes,undetermined,0,0,0,yes,0.9999972244816053,yes,0.9999990613097499,yes,0.9999995213329024,yes,0.9999997043498783,yes,0.9999996782158194,yes,0.9999997535346236
112,hibernate-distribution-3.3.2.GA,DESIGN,"//just to help out during the load (ugly, i know)",yes,undetermined,0,0,0,no,0.3431171899133508,no,0.5,no,0.5393368333219541,no,0.5522221862200296,yes,0.5783671339982799,yes,0.5742900965457092
113,hibernate-distribution-3.3.2.GA,DESIGN,// hack/workaround as sqlquery impl depend on having a key.,yes,undetermined,0,0,0,yes,0.9999982951721664,yes,0.9999980208802864,yes,0.9999988085514744,yes,0.9999993918912491,yes,0.9999994044431906,yes,0.9999995332427216
114,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: handle the case of a foreign key to something other than the pk,yes,undetermined,0,0,0,yes,0.8958876431380189,yes,0.7740364387965513,yes,0.7946552400100049,yes,0.8060176871061641,yes,0.816741291568586,yes,0.8162618216510039
115,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: assumes all collections disassemble to an array!,yes,undetermined,0,0,0,yes,0.7996158620053019,yes,0.6467823088628575,yes,0.668364959625289,yes,0.7041441041104729,yes,0.7029783595396453,yes,0.7070219112761723
116,hibernate-distribution-3.3.2.GA,DESIGN,// todo : would love to have this work on a notification basis //    where the successful binding of an entity/subclass would //    emit a notification which the extendsQueue entries could //    react to...,yes,undetermined,0,0,0,yes,0.9441431275818418,yes,0.9931222451456945,yes,0.9946117453015871,yes,0.9956692096873617,yes,0.9955852102747406,yes,0.9959295883888125
117,hibernate-distribution-3.3.2.GA,DESIGN,// TODO: is it really neceassry to provide Configuration to CollectionPersisters ? Should it not be enough with associated class ? // or why does EntityPersister's not get access to configuration ? // // The only reason I could see that Configuration gets passed to collection persisters // is so that they can look up the dom4j node name of the entity element in case // no explicit node name was applied at the collection element level.  Are you kidding me? // Trivial to fix then.  Just store and expose the node name on the entity persister // (which the collection persister looks up anyway via other means...).,yes,undetermined,0,0,0,yes,0.9530359430725489,yes,0.9931399210468058,yes,0.9946249509577799,yes,0.9956673628758798,yes,0.995583038908044,yes,0.9959331013972426
118,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: deprecated, remove eventually",yes,undetermined,0,0,0,yes,0.9813794554178096,yes,0.9931509403463437,yes,0.9946239014228209,yes,0.995661069469076,yes,0.995588339472133,yes,0.9959307950364426
119,hibernate-distribution-3.3.2.GA,DESIGN,//TODO possibly relax that,yes,undetermined,0,0,0,yes,0.9919874853113281,yes,0.9931427953523098,yes,0.9946178371150469,yes,0.9956682653653959,yes,0.9955954152550723,yes,0.9959282879772602
120,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO : this is a bit dodgy, come up with a better way to check this (plus see above comment)",yes,undetermined,0,0,0,yes,0.9999979978703917,yes,0.9999998307606204,yes,0.9999997529461607,yes,0.9999998028234381,yes,0.9999997778722204,yes,0.9999998325599054
121,hibernate-distribution-3.3.2.GA,DESIGN,//use a degenerated strategy for backward compatibility,yes,undetermined,0,0,0,no,0.0033739868854906633,yes,0.9931345807668265,yes,0.9946140338868545,yes,0.9956571494044693,yes,0.9955856815078026,yes,0.9959334921961491
122,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: this is temporary in that the end result will probably not take a Property reference per-se.,yes,undetermined,0,0,0,yes,0.9999932995484191,yes,0.9967899246925451,yes,0.9970094944255246,yes,0.9999827999532599,yes,0.9999830582512786,yes,0.999986160688398
123,hibernate-distribution-3.3.2.GA,DESIGN,// todo : better to handle dynamic filters through implicit DynamicFilterParameterSpecification // see the discussion there in DynamicFilterParameterSpecification's javadocs as to why // it is currently not done that way.,yes,undetermined,0,0,0,yes,0.9999978940455474,yes,0.9999974256824105,yes,0.999998671039967,yes,0.9999993724982238,yes,0.9999993317692731,yes,0.9999994743754517
124,hibernate-distribution-3.3.2.GA,DESIGN,// get the right object from the list ... would it be easier to just call getEntity() ??,yes,undetermined,0,0,0,no,0.016229095229248862,yes,0.9931345509333575,yes,0.994610183839045,yes,0.9956701011711688,yes,0.995581919764961,yes,0.9959319808811334
125,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO: should ""record"" how many properties we have reffered to - and if we  //       don't get'em'all we throw an exception! Way better than trial and error ;)",yes,undetermined,0,0,0,yes,0.9752535079596405,yes,0.9931476640756656,yes,0.9946208195804349,yes,0.9956619806453674,yes,0.9955893759231558,yes,0.995939554065739
126,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: this dependency is kinda Bad,yes,undetermined,0,0,0,yes,0.9964034007008551,yes,0.999993210781596,yes,0.9999958028021919,yes,0.9999976134512014,yes,0.9999974559640348,yes,0.9999979628082909
127,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: get SQL rendering out of this package!,yes,undetermined,0,0,0,yes,0.9969441246560433,yes,0.9965681512388422,yes,0.9967937075704988,yes,0.9974304409918865,yes,0.9973568676549546,yes,0.9999825430221815
128,hibernate-distribution-3.3.2.GA,DESIGN,// why does this matter?,yes,undetermined,0,0,0,no,0.4603621672307174,no,0.48409702876305605,no,0.5,no,0.5100270456744963,no,0.5051268022911239,no,0.5
129,hibernate-distribution-3.3.2.GA,DESIGN,"// important, to account for newly saved entities in query // todo : some kind of check for new status...",yes,undetermined,0,0,0,yes,0.9790408710872285,yes,0.9931330118651455,yes,0.9946190296233638,yes,0.995664718393355,yes,0.9955875300845901,yes,0.9959269680033216
130,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: get SQL rendering out of this package!,yes,undetermined,0,0,0,yes,0.9969441246560433,yes,0.9965681512388422,yes,0.9967937075704988,yes,0.9974304409918865,yes,0.9973568676549546,yes,0.9999825430221815
131,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: can we *always* use the ""null property"" approach for everything?",yes,undetermined,0,0,0,yes,0.997050535491516,yes,0.9967797552561051,yes,0.9974262863211332,yes,0.9999828598878083,yes,0.9999829224641861,yes,0.9999853246278131
132,hibernate-distribution-3.3.2.GA,DESIGN,"// does this need holdlock also? : return tableName + "" with (updlock, rowlock, holdlock)"";",yes,undetermined,0,0,0,no,0.13980892755728358,no,0.13915246072427911,no,0.1335845519251724,no,0.12708686406492672,no,0.125253231920003,no,0.12089650445586975
133,hibernate-distribution-3.3.2.GA,DESIGN,"//for sets, we should end the collection load after resolving //the entities, since we might call hashCode() on the elements //TODO: or we could do this polymorphically, and have two //      different operations implemented differently for arrays",yes,undetermined,0,0,0,yes,0.9948361856828027,yes,0.9967094287015278,yes,0.9971933427276226,yes,0.9999852407128397,yes,0.9999859443638981,yes,0.9999877218661584
134,hibernate-distribution-3.3.2.GA,DESIGN,// todo : remove this and just have subclasses use Isolater/IsolatedWork directly...,yes,undetermined,0,0,0,yes,0.9915250440516198,yes,0.9972861724998909,yes,0.9999814184498159,yes,0.9999878789012364,yes,0.9999869760704405,yes,0.9999892946363109
135,hibernate-distribution-3.3.2.GA,DESIGN,"// sql-server, at least needed this dropped after use; strange!",yes,undetermined,0,0,0,no,0.014105010247904145,yes,0.9931403117757951,yes,0.994610363837142,yes,0.9956695605389096,yes,0.9955898091268468,yes,0.9959271045257945
136,hibernate-distribution-3.3.2.GA,DESIGN,// is it necessary to register %exact since it can only appear in a where clause?,yes,undetermined,0,0,0,no,0.019509840673962116,yes,0.9931401355452062,yes,0.9946245327965684,yes,0.9956609982803741,yes,0.9955799764025897,yes,0.9959267996279909
137,hibernate-distribution-3.3.2.GA,DESIGN,"//for arrays, we should end the collection load before resolving //the entities, since the actual array instances are not instantiated //during loading //TODO: or we could do this polymorphically, and have two //      different operations implemented differently for arrays",yes,undetermined,0,0,0,yes,0.9660760252400817,yes,0.9931264735112467,yes,0.9946198266248965,yes,0.9956631651333662,yes,0.9955857650961254,yes,0.9959319254138161
138,hibernate-distribution-3.3.2.GA,DESIGN,// Does this dialect support the ALTER TABLE syntax?,yes,undetermined,0,0,0,no,0.02739656690127223,yes,0.9931404886698094,yes,0.9946241654515545,yes,0.9956594091957085,yes,0.9955818599159745,yes,0.9959369270270719
139,hibernate-distribution-3.3.2.GA,DESIGN,"// This next bit is to allow for both unsaved-value=""negative"" // and for ""older"" behavior where version number did not get // seeded if it was already set in the object // TODO: shift it into unsaved-value strategy",yes,undetermined,0,0,0,yes,0.8525362361570853,yes,0.8505087500799516,yes,0.8666644354275816,yes,0.8643223597701917,yes,0.863893034169925,yes,0.8598172318999826
140,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: reenable if we also fix the above todo,yes,undetermined,0,0,0,yes,0.9999999663180572,yes,0.99999992158629,yes,0.9999999739352127,yes,0.9999999874191254,yes,0.9999999876138327,yes,0.9999999912532677
141,hibernate-distribution-3.3.2.GA,DESIGN,// orphans should not be deleted during copy??,yes,undetermined,0,0,0,no,0.005581309877550361,yes,0.9931335251294615,yes,0.9946251209471321,yes,0.9956628523112155,yes,0.9955759111866097,yes,0.9959355327080649
142,hibernate-distribution-3.3.2.GA,DESIGN,// orphans should not be deleted during merge??,yes,undetermined,0,0,0,no,0.02037599171367743,yes,0.9931330112852425,yes,0.9946119069294097,yes,0.9956660306596173,yes,0.9955772346866261,yes,0.9959328550236167
143,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: suck this logic into the collection!,yes,undetermined,0,0,0,yes,0.9999980868089969,yes,0.9999958880528482,yes,0.9999928206245451,yes,0.9999951472683715,yes,0.999996027784256,yes,0.9999969943041717
144,hibernate-distribution-3.3.2.GA,DESIGN,// todo : we can actually just determine this from the incoming EntityEntry-s,yes,undetermined,0,0,0,yes,0.9952749314504015,yes,0.9931360959558649,yes,0.9946053665275962,yes,0.9956766995580051,yes,0.9955957615169014,yes,0.9959291615589186
145,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: this bit actually has to be called after all cascades! //      but since identity insert is called *synchronously*, //      instead of asynchronously as other actions, it isn't",yes,undetermined,0,0,0,yes,0.9308792348126326,yes,0.9931249509862706,yes,0.9946201043998315,yes,0.9956682726340591,yes,0.9955820606689316,yes,0.9959387866825004
146,hibernate-distribution-3.3.2.GA,DESIGN,// this class has no proxies (so do a shortcut),yes,undetermined,0,0,0,no,0.0094479641661775,yes,0.9931349166781417,yes,0.994628369703726,yes,0.9956626645691963,yes,0.995586649234886,yes,0.995932584878394
147,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: Should this be an InitializeEntityEventListener??? (watch out for performance!),yes,undetermined,0,0,0,yes,0.9999999354928784,yes,0.9999999486713802,yes,0.9999999618529971,yes,0.999999978007011,yes,0.999999976677434,yes,0.9999999830147549
148,hibernate-distribution-3.3.2.GA,DESIGN,"// todo : need map? the prob is a proper key, right?",yes,undetermined,0,0,0,yes,0.9999959961917709,yes,0.999993946552134,yes,0.999998532770169,yes,0.999998954456103,yes,0.9999991384587741,yes,0.9999992998437016
149,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: better to pass the id in as an argument?,yes,undetermined,0,0,0,yes,0.9999886511335818,yes,0.9972915512796622,yes,0.9999856220008607,yes,0.9999912095249639,yes,0.9999924359224969,yes,0.9999961832975122
150,hibernate-distribution-3.3.2.GA,DESIGN,//do we even really need this? the update will fail anyway....,yes,undetermined,0,0,0,no,0.38189829389896285,no,0.37664402090038673,no,0.363448063187411,no,0.35622683914070763,no,0.3448771439523991,no,0.3403745280896063
151,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: would it be better to do a refresh from db?,yes,undetermined,0,0,0,yes,0.9999950532997175,yes,0.9999967351572737,yes,0.9999983879469792,yes,0.9999990600322934,yes,0.9999989465515718,yes,0.9999991667323768
152,hibernate-distribution-3.3.2.GA,DESIGN,"/**
	 * This form used from annotations (?).  Essentially the same as the above using a
	 * resultset-mapping reference, but without cacheMode, readOnly, and comment.
	 *
	 * FIXME: annotations do not use it, so it can be remove from my POV
	 * @deprecated
	 *
	 *
	 * @param query The sql query string
	 * @param resultSetRef The result-set-mapping name
	 * @param querySpaces Any specified query spaces (used for auto-flushing)
	 * @param cacheable Whether the query results are cacheable
	 * @param cacheRegion If cacheable, the region into which to store the results
	 * @param timeout A JDBC-level timeout to be applied
	 * @param fetchSize A JDBC-level fetch-size to be applied
	 * @param flushMode The flush mode to use for this query
	 * @param parameterTypes parameter type map
	 * @param callable Does the query string represent a callable object (i.e., proc)
	 */",yes,undetermined,0,0,0,yes,0.9029237943606567,yes,0.9931391899394547,yes,0.994615754414129,yes,0.9956676629328038,yes,0.9955839858597576,yes,0.9959351539796404
153,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: ugly here:,yes,undetermined,0,0,0,yes,0.9999999999774685,yes,0.9999999999959233,yes,0.9999999999989992,yes,0.9999999999996796,yes,0.9999999999996606,yes,0.9999999999997919
154,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: not quite sure about the full implications of this!,yes,undetermined,0,0,0,yes,0.9958484991551163,yes,0.9954542194750376,yes,0.9965339528093167,yes,0.99727752769224,yes,0.9972170028772683,yes,0.9974730869786054
155,hibernate-distribution-3.3.2.GA,DESIGN,// this only works because collection entries are kept in a sequenced // map by persistence context (maybe we should do like entities and // keep a separate sequences set...) //TODO: calling entrySet on an IdentityMap is SLOW!!,yes,undetermined,0,0,0,yes,0.9875414660753681,yes,0.9931268848487844,yes,0.9946170637631644,yes,0.995667289573583,yes,0.9955813978186098,yes,0.9959401687058083
156,hibernate-distribution-3.3.2.GA,DESIGN,"// todo : i'd much rather have this done from #endLoadingCollection(CollectionPersister,LoadingCollectionEntry)...",yes,undetermined,0,0,0,yes,0.9999991087936674,yes,0.999997706746701,yes,0.9999985472558386,yes,0.9999991813398772,yes,0.999999153854088,yes,0.9999993428712111
157,hibernate-distribution-3.3.2.GA,DESIGN,"// todo : hack!!! // NOTE : here we cleanup the load context when we have no more local // LCE entries.  This ""works"" for the time being because really // only the collection load contexts are implemented.  Long term, // this cleanup should become part of the ""close result set"" // processing from the (sandbox/jdbc) jdbc-container code.",yes,undetermined,0,0,0,yes,0.9961325041382398,yes,0.993142195957289,yes,0.9946139174672736,yes,0.995668564905413,yes,0.9955776816908152,yes,0.9959278635560797
158,hibernate-distribution-3.3.2.GA,DESIGN,// todo : add the notion of enabled filters to the CacheKey to differentiate filtered collections from non-filtered; //      but CacheKey is currently used for both collections and entities; would ideally need to define two seperate ones; //      currently this works in conjuction with the check on //      DefaultInitializeCollectionEventHandler.initializeCollectionFromCache() (which makes sure to not read from //      cache with enabled filters). // EARLY EXIT!!!!!,yes,undetermined,0,0,0,no,0.447558388738703,no,0.3957859757590642,no,0.39229751100846094,no,0.3918319219770361,no,0.3903747246154229,no,0.38829165129603616
159,hibernate-distribution-3.3.2.GA,DESIGN,//PostLoad is needed for EJB3 //TODO: reuse the PostLoadEvent...,yes,undetermined,0,0,0,yes,0.9833513312784071,yes,0.9931502806647157,yes,0.9946155299505364,yes,0.9956606356648917,yes,0.9955881345258165,yes,0.9959365148963096
160,hibernate-distribution-3.3.2.GA,DESIGN,// todo : should we check the current isolation mode explicitly?,yes,undetermined,0,0,0,yes,0.9917499584620368,yes,0.995230846881029,yes,0.995996429669866,yes,0.9967657943416629,yes,0.9967495368046493,yes,0.997025851922843
161,hibernate-distribution-3.3.2.GA,DESIGN,// brand new collection //TODO: or an array!! we can't lock objects with arrays now??,yes,undetermined,0,0,0,yes,0.8722845220485016,yes,0.8397481164179712,yes,0.9487236459367454,yes,0.9956639851678323,yes,0.9955778975136816,yes,0.9959314225526814
162,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO: iteratively get transient entities and retry merge until one of the following conditions: //       1) transientCopyCache.size() == 0 //       2) transientCopyCache.size() is not decreasing and copyCache.size() is not increasing // TODO: find out if retrying can add entities to copyCache (don't think it can...) // For now, just retry once; throw TransientObjectException if there are still any transient entities",yes,undetermined,0,0,0,yes,0.9901624025195852,yes,0.9931484692421976,yes,0.9946154623093982,yes,0.9956708941419087,yes,0.9955911879033834,yes,0.9959373595700851
163,hibernate-distribution-3.3.2.GA,DESIGN,"// null or brand new collection // this will also (inefficiently) handle arrays, which have // no snapshot, so we can't do any better",yes,undetermined,0,0,0,no,0.11484526735173821,no,0.0782881277001237,yes,0.9946077537769619,yes,0.9956657257196503,yes,0.9955905604030428,yes,0.995940765695042
164,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : perhaps we should additionally require that the incoming entity // version be equivalent to the defined unsaved-value?,yes,undetermined,0,0,0,yes,0.9831092206718579,yes,0.9931326203931069,yes,0.9946180857251794,yes,0.9956607358371795,yes,0.9955889603316741,yes,0.995938220532135
165,hibernate-distribution-3.3.2.GA,DESIGN,"/**
 * Provides query splitting methods, which were originally in QueryTranslator.
 * <br>
 * TODO: This will need to be refactored at some point.
 *
 * @author josh
 */",yes,undetermined,0,0,0,yes,0.9858624849104283,yes,0.9931407741618506,yes,0.9946197618047544,yes,0.9956681752000162,yes,0.995579700112795,yes,0.9959367713355034
166,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : most of below was taken verbatim from DotNode; should either delegate this logic or super-type it,yes,undetermined,0,0,0,yes,0.9944902561088971,yes,0.9934614331685901,yes,0.994627583470515,yes,0.9956615044541982,yes,0.9955875062361542,yes,0.9959345127275913
167,hibernate-distribution-3.3.2.GA,DESIGN,"// todo : currently expects that the individual with expressions apply to the same sql table join. //      This may not be the case for joined-subclass where the property values //      might be coming from different tables in the joined hierarchy.  At some //      point we should expand this to support that capability.  However, that has //      some difficulties: //          1) the biggest is how to handle ORs when the individual comparisons are //              linked to different sql joins. //          2) here we would need to track each comparison individually, along with //              the join alias to which it applies and then pass that information //              back to the FromElement so it can pass it along to the JoinSequence",yes,undetermined,0,0,0,yes,0.8824478133852435,yes,0.8138601170099083,yes,0.8295290763462657,yes,0.8958029914097438,yes,0.8913084762195641,yes,0.8938378151500326
168,hibernate-distribution-3.3.2.GA,DESIGN,"// No explicit select expression; render the id and properties // projection lists for every persister in the from clause into // a single 'token node'. //TODO: the only reason we need this stuff now is collection filters, //      we should get rid of derived select clause completely!",yes,undetermined,0,0,0,yes,0.9239161351984144,yes,0.9931300064143811,yes,0.9946207905879976,yes,0.9956672108111914,yes,0.9955912023764437,yes,0.9959324451209558
169,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : better way?!?,yes,undetermined,0,0,0,yes,0.9999999999253268,yes,0.9999999999243304,yes,0.9999999999842414,yes,0.9999999999945843,yes,0.9999999999937921,yes,0.999999999996128
170,hibernate-distribution-3.3.2.GA,DESIGN,"/////////////////////////////////////////////////////////////////////// // HACK ALERT !!!!!!!!!!!!!!!!!!!!!!!!!!!! // Attempt to work around ""ghost"" ImpliedFromElements that occasionally // show up between the actual things being joined.  This consistently // occurs from index nodes (at least against many-to-many).  Not sure // if there are other conditions // // Essentially, look-ahead to the next FromElement that actually // writes something to the SQL",yes,undetermined,0,0,0,yes,0.8329405355753985,yes,0.7674046175948993,yes,0.7510367004875619,yes,0.7406818543734064,yes,0.7425971731750406,yes,0.7446398113102471
171,hibernate-distribution-3.3.2.GA,DESIGN,// Not possible to simply re-use the versionPropertyNode here as it causes // OOM errors due to circularity :(,yes,undetermined,0,0,0,no,0.059947854074627764,yes,0.9931424625896398,yes,0.994603297233613,yes,0.995661067182624,yes,0.9955867082656573,yes,0.9959336460180905
172,hibernate-distribution-3.3.2.GA,DESIGN,"// this function has a template -> restore output, apply the template and write the result out // TODO: Downcast to avoid using an interface?  Yuck.",yes,undetermined,0,0,0,yes,0.8551263845839334,yes,0.8505754021274792,yes,0.8836816210750528,yes,0.8849651426094807,yes,0.8803342638410853,yes,0.8850129321548694
173,hibernate-distribution-3.3.2.GA,DESIGN,"// at some point the generate phase needs to be moved out of here, // because a single object-level DML might spawn multiple SQL DML // command executions. // // Possible to just move the sql generation for dml stuff, but for // consistency-sake probably best to just move responsiblity for // the generation phase completely into the delegates // (QueryLoader/StatementExecutor) themselves.  Also, not sure why // QueryLoader currently even has a dependency on this at all; does // it need it?  Ideally like to see the walker itself given to the delegates directly...",yes,undetermined,0,0,0,yes,0.9203160903080021,yes,0.9931344863421353,yes,0.9946144872175199,yes,0.9956724554161198,yes,0.9955869118067661,yes,0.9959389149830363
174,hibernate-distribution-3.3.2.GA,DESIGN,//TODO:this is only needed during compilation .. can we eliminate the instvar?,yes,undetermined,0,0,0,yes,0.9999975489738699,yes,0.9999937335506722,yes,0.9999970487798036,yes,0.9999984840252513,yes,0.9999987583578369,yes,0.9999990245944734
175,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : absolutely no usages of this constructor form; can it go away?,yes,undetermined,0,0,0,yes,0.7713509219738788,yes,0.9622862451457037,yes,0.9946111464444832,yes,0.995657998770399,yes,0.995584611908109,yes,0.9959355402705676
176,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: is this a bit ugly?,yes,undetermined,0,0,0,yes,0.999999999999338,yes,0.9999999999995697,yes,0.9999999999998025,yes,0.9999999999999382,yes,0.9999999999999338,yes,0.9999999999999614
177,hibernate-distribution-3.3.2.GA,DESIGN,"// even here, if only properties mapped to the ""base table"" are referenced // in the set and where clauses, this could be handled by the BasicDelegate. // TODO : decide if it is better performance-wise to perform that check, or to simply use the MultiTableUpdateDelegate",yes,undetermined,0,0,0,yes,0.9874757893366446,yes,0.993143799708779,yes,0.9946214336453143,yes,0.995667051828672,yes,0.9955885669917613,yes,0.9959330800759704
178,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : remove these last two as batcher is no longer managing connections,yes,undetermined,0,0,0,yes,0.9414321799401578,yes,0.9931430536716865,yes,0.9946265420786851,yes,0.9956710805516372,yes,0.9955867955274066,yes,0.9959436597789664
179,hibernate-distribution-3.3.2.GA,DESIGN,"// VERY IMPORTANT!!!! - This class needs to be free of any static references // to any CGLIB or Javassist classes.  Otherwise, users will always need both // on their classpaths no matter which (if either) they use. // // Another option here would be to remove the Hibernate.isPropertyInitialized() // method and have the users go through the SessionFactory to get this information.",yes,undetermined,0,0,0,no,0.4693074482116636,no,0.4262360219277436,no,0.3673747809900851,no,0.36056663001738387,no,0.3554610725324686,no,0.34991510704309137
180,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO : we really need to be able to deal with component paths here also; // this is difficult because the hql-sql grammar expects all those node types // to be FromReferenceNodes.  One potential fix here would be to convert the // IntoClause to just use a FromClause/FromElement combo (as a child of the // InsertStatement) and move all this logic into the InsertStatement.  That's // probably the easiest approach (read: least amount of changes to the grammar // and code), but just doesn't feel right as then an insert would contain // 2 from-clauses",yes,undetermined,0,0,0,yes,0.9773832707801041,yes,0.9931412633082671,yes,0.9946227447249822,yes,0.9956704839234101,yes,0.99557971400518,yes,0.9959353796382338
181,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO : an optimization here would be to consider cascade deletes and not gen those delete statements; //      the difficulty is the ordering of the tables here vs the cascade attributes on the persisters -> //          the table info gotten here should really be self-contained (i.e., a class representation //          defining all the needed attributes), then we could then get an array of those",yes,undetermined,0,0,0,yes,0.9457411973206582,yes,0.993136169982016,yes,0.9946123632005969,yes,0.9956656158694913,yes,0.9955885993500182,yes,0.9959292833172625
182,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: switch statements are always evil! We already had bugs because  //      of forgotten token types. Use polymorphism for this!,yes,undetermined,0,0,0,yes,0.9856392449074977,yes,0.9931431196339137,yes,0.9946202946946926,yes,0.9956671001473154,yes,0.9955878384506369,yes,0.9959381902112807
183,hibernate-distribution-3.3.2.GA,DESIGN,// really there are two situations where it should be ok to allow the insertion // into properties defined on a superclass: //      1) union-subclass with an abstract root entity //      2) discrim-subclass // // #1 is handled already because of the fact that // UnionSubclassPersister alreay always returns 0 // for this call... // // we may want to disallow it for discrim-subclass just for // consistency-sake (currently does not work anyway)...,yes,undetermined,0,0,0,yes,0.7654414280936785,yes,0.6552283610787384,yes,0.6384396222357693,yes,0.660487660020375,yes,0.6646185147918885,yes,0.6649857507419272
184,hibernate-distribution-3.3.2.GA,DESIGN,// implicit joins are always(?) ok to reuse,yes,undetermined,0,0,0,no,0.00703732492052116,yes,0.9931243916018925,yes,0.9946249537106742,yes,0.9956626440683293,yes,0.9955757255505511,yes,0.9959362599245221
185,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: used to be exprNoParens! was this needed?,yes,undetermined,0,0,0,yes,0.9999999436014967,yes,0.9999999500142647,yes,0.9999999761469627,yes,0.9999999868720633,yes,0.9999999851190848,yes,0.9999999891708917
186,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : we may also want to check that the types here map to exactly one column/JDBC-type //      can't think of a situation where arithmetic expression between multi-column mappings //      makes any sense.,yes,undetermined,0,0,0,yes,0.9812197535195164,yes,0.9931357034375421,yes,0.9946191847544646,yes,0.9956626693759499,yes,0.9955852407692181,yes,0.9959332820753675
187,hibernate-distribution-3.3.2.GA,DESIGN,// we do not know either type //BLIND GUESS!,yes,undetermined,0,0,0,no,0.035590063990720205,yes,0.9931344080993898,yes,0.9946055428358659,yes,0.9956638847915359,yes,0.9955818434743163,yes,0.9959402074104616
188,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO: get SQL rendering out of here, create an AST for the join expressions. // Use the SQL generator grammar to generate the SQL text for the index expression.",yes,undetermined,0,0,0,no,0.5702913855026285,no,0.48847193435298036,no,0.47632557602391484,yes,0.5802974642767603,yes,0.576813669606428,yes,0.5781055497029542
189,hibernate-distribution-3.3.2.GA,DESIGN,"// We would probably refactor to have LogicParser (builds a tree of simple // expressions connected by and, or, not), ExpressionParser (translates // from OO terms like foo, foo.Bar, foo.Bar.Baz to SQL terms like // FOOS.ID, FOOS.BAR_ID, etc) and PathExpressionParser (which does much // the same thing it does now)",yes,undetermined,0,0,0,no,0.26111975137141274,no,0.2860731484441117,no,0.26143278075090676,no,0.31496419929826,no,0.31310651870241446,no,0.306398656482664
190,hibernate-distribution-3.3.2.GA,DESIGN,// short-circuit for performance...,yes,undetermined,0,0,0,no,0.006963055675214992,yes,0.993143188724979,yes,0.9946046476291296,yes,0.9956695033571362,yes,0.9955849258003269,yes,0.9959391830821684
191,hibernate-distribution-3.3.2.GA,DESIGN,"// not absolutely necessary, but does help with aggressive release",yes,undetermined,0,0,0,no,0.005558435503937547,yes,0.993122952964869,yes,0.9946192780967673,yes,0.995669445332036,yes,0.9955802885131442,yes,0.9959308636007984
192,hibernate-distribution-3.3.2.GA,DESIGN,// try block is a hack around fact that currently tuplizers are not // given the opportunity to resolve a subclass entity name.  this // allows the (we assume custom) interceptor the ability to // influence this decision if we were not able to based on the // given entityName,yes,undetermined,0,0,0,yes,0.8766668252769523,yes,0.826226561374239,yes,0.8431909729325495,yes,0.8552176552537615,yes,0.859863080698941,yes,0.8591566748360264
193,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: this is one of the ugliest and most fragile pieces of code in Hibernate....,yes,undetermined,0,0,0,yes,0.9833188691267968,yes,0.9931303316135319,yes,0.9946090477869706,yes,0.9956688517787192,yes,0.9955845587699437,yes,0.9959375068092462
194,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: implement functionality //  this might be painful to do here, as the ""join post processing"" for //  the subquery has already been performed (meaning that for //  theta-join dialects, the join conditions have already been moved //  over to the where clause).  A ""simple"" solution here might to //  perform ""join post processing"" once for the entire query (including //  any subqueries) at one fell swoop",yes,undetermined,0,0,0,yes,0.811597151698846,yes,0.6632752369405258,yes,0.692867876441228,yes,0.7761196950315196,yes,0.7733937021999423,yes,0.7727706695806069
195,hibernate-distribution-3.3.2.GA,DESIGN,//yuck!,yes,undetermined,0,0,0,yes,0.6106456751092043,yes,0.6903180920059907,yes,0.7850507744976528,yes,0.8406696936396173,yes,0.8405687966215362,yes,0.8425671306145328
196,hibernate-distribution-3.3.2.GA,DESIGN,"// ignore it; the incoming property could not be found so we // cannot be sure what to do here.  At the very least, the // safest is to simply not apply any dereference toggling...",yes,undetermined,0,0,0,no,0.4235061104007309,no,0.3824244026123679,no,0.35555062619690747,no,0.38401325947049675,no,0.3651163135006334,no,0.35234597747352925
197,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: make this a bit nicer,yes,undetermined,0,0,0,yes,0.9999855928924067,yes,0.996949960690424,yes,0.9969217010371246,yes,0.9999817175663522,yes,0.9974805761146978,yes,0.9999841739076244
198,hibernate-distribution-3.3.2.GA,DESIGN,// yuck!,yes,undetermined,0,0,0,yes,0.6106456751092043,yes,0.6903180920059907,yes,0.7850507744976528,yes,0.8406696936396173,yes,0.8405687966215362,yes,0.8425671306145328
199,hibernate-distribution-3.3.2.GA,DESIGN,// todo : potentially look at optimizing these two arrays,yes,undetermined,0,0,0,yes,0.9474745254081738,yes,0.9931308709013377,yes,0.994610937399098,yes,0.9956621798832805,yes,0.9955851602922151,yes,0.9959358239899514
200,hibernate-distribution-3.3.2.GA,DESIGN,//note that i parameter is now unused (delete it?),yes,undetermined,0,0,0,no,0.2780252404884291,no,0.23252999330059027,no,0.18358223396219073,no,0.17021305140933718,no,0.16713084793185404,no,0.16245362783269404
201,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO: Figure out a better way to get the FROM elements in a proper tree structure. // If this is not the destination of a many-to-many, add it as a child of the origin.",yes,undetermined,0,0,0,yes,0.9969152006931273,yes,0.9954625758493524,yes,0.9962378467885545,yes,0.996708235664403,yes,0.9965991513355906,yes,0.9969410785917231
202,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : this constructor form is *only* used from constructor directly below us; can it go away?,yes,undetermined,0,0,0,yes,0.9265477776616768,yes,0.9931508771408526,yes,0.9946185853045729,yes,0.9956669192325481,yes,0.9955781674140471,yes,0.995939928759425
203,hibernate-distribution-3.3.2.GA,DESIGN,// todo : remove,yes,undetermined,0,0,0,yes,0.9999972244816053,yes,0.9999990613097499,yes,0.9999995213329024,yes,0.9999997043498783,yes,0.9999996782158194,yes,0.9999997535346236
204,hibernate-distribution-3.3.2.GA,DESIGN,"// We should reengineer this class so that, rather than the current ad - // hoc linear approach to processing a stream of tokens, we instead // build up a tree of expressions.",yes,undetermined,0,0,0,no,0.18067967688274691,no,0.15797268076217397,no,0.15259717194802352,no,0.16271898629322776,no,0.16906994385890153,no,0.16280229831658188
205,hibernate-distribution-3.3.2.GA,DESIGN,"// todo : should this get moved to PersistentContext? // logically, is PersistentContext the ""thing"" to which an interceptor gets attached?",yes,undetermined,0,0,0,yes,0.999997272250344,yes,0.9999971736296649,yes,0.9999985803155508,yes,0.9999992594806392,yes,0.9999992512082362,yes,0.9999994346602331
206,hibernate-distribution-3.3.2.GA,DESIGN,// TODO: something much better - look at the type of the other expression! // TODO: Have comparisonExpression and/or arithmeticExpression rules complete the resolution of boolean nodes.,yes,undetermined,0,0,0,yes,0.9999997671031378,yes,0.9999984586328435,yes,0.9999990460991653,yes,0.9999994137576885,yes,0.9999993537498075,yes,0.9999994903752409
207,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: this class does too many things! we need a different //kind of path expression parser for each of the diffferent //ways in which path expressions can occur,yes,undetermined,0,0,0,yes,0.9666752826978696,yes,0.9931373545104784,yes,0.9946174893248277,yes,0.9956734865484568,yes,0.9955867433803149,yes,0.995931359774649
208,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: optimize this better!,yes,undetermined,0,0,0,yes,0.9999999813467533,yes,0.9999999676100189,yes,0.9999999785445592,yes,0.9999999900315214,yes,0.9999999889360022,yes,0.9999999919782007
209,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: should we allow suffixes on these ?,yes,undetermined,0,0,0,yes,0.9962624422968035,yes,0.995196020515322,yes,0.9962131712414279,yes,0.9970200066067331,yes,0.9970065094855332,yes,0.9972693052230495
210,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: is this really necessary????,yes,undetermined,0,0,0,yes,0.9999999845321398,yes,0.9999999698934138,yes,0.9999999717758945,yes,0.999999985233564,yes,0.9999999855196409,yes,0.9999999894863404
211,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : not sure the best way to handle this. // The non-performant way :,yes,undetermined,0,0,0,yes,0.9999996980275285,yes,0.999999747249359,yes,0.9999999181073594,yes,0.9999999585436502,yes,0.9999999585051128,yes,0.9999999691141033
212,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: is there a better way?,yes,undetermined,0,0,0,yes,0.9999999984866407,yes,0.999999999037684,yes,0.9999999997349787,yes,0.9999999998931317,yes,0.9999999998842558,yes,0.9999999999237404
213,hibernate-distribution-3.3.2.GA,DESIGN,//The class is now way to complex!,yes,undetermined,0,0,0,no,0.033971335545003485,yes,0.9931323257505015,yes,0.9946158418479453,yes,0.9956661188235331,yes,0.9955864891777909,yes,0.9959302933783366
214,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : would be really nice to cache the spec on the query-def so as to not have to re-calc the hash; // currently not doable though because of the resultset-ref stuff...,yes,undetermined,0,0,0,yes,0.9202069166807049,yes,0.9931323943281397,yes,0.9946184045084949,yes,0.9956693491999073,yes,0.9955903704038584,yes,0.9959322716247422
215,hibernate-distribution-3.3.2.GA,DESIGN,//name from a super query (a bit inelegant that it shows up here),yes,undetermined,0,0,0,no,0.06729684808178317,yes,0.993143177542382,yes,0.9946160256044256,yes,0.9956603330499914,yes,0.9955841523653297,yes,0.9959412704091245
216,hibernate-distribution-3.3.2.GA,DESIGN,//real hacky... // used to count the nesting of parentheses,yes,undetermined,0,0,0,no,0.1033978333941326,no,0.11355320977184409,no,0.12366101086030024,no,0.13293090345015166,no,0.13351694289643404,no,0.1285709338642509
217,hibernate-distribution-3.3.2.GA,DESIGN,// todo : we can remove this once the deprecated ctor can be made private...,yes,undetermined,0,0,0,yes,0.9961292513694004,yes,0.9970533203645194,yes,0.9973931576944695,yes,0.9999861568783464,yes,0.9999851189218952,yes,0.9999879727761627
218,hibernate-distribution-3.3.2.GA,DESIGN,"//put() has nowait semantics, is this really appropriate? //note that it needs to be async replication, never local or sync",yes,undetermined,0,0,0,no,0.5070146743203809,no,0.455736857828408,no,0.44572661043354134,no,0.4374282875078431,no,0.42864760015632264,no,0.42749776980243215
219,hibernate-distribution-3.3.2.GA,DESIGN,"// ugly hack for cases like ""elements(foo.bar.collection)"" // (multi-part path expression ending in elements or indices)",yes,undetermined,0,0,0,yes,0.9741281235271961,yes,0.9931220401341105,yes,0.9946211341442565,yes,0.9956595438281585,yes,0.9955847871955678,yes,0.9959328320409787
220,hibernate-distribution-3.3.2.GA,DESIGN,// FIXME Hacky workaround to JBCACHE-1202,yes,undetermined,0,0,0,yes,0.9999999999995706,yes,0.9999999999988218,yes,0.9999999999996925,yes,0.9999999999999016,yes,0.9999999999998973,yes,0.9999999999999387
221,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: COPY/PASTE FROM SessionImpl, pull up!",yes,undetermined,0,0,0,yes,0.9658646194560557,yes,0.9931483158791818,yes,0.9946230869443037,yes,0.9956702163492369,yes,0.9955759440823971,yes,0.9959360191286974
222,hibernate-distribution-3.3.2.GA,DESIGN,"// todo : need to find a clean way to handle the ""event source"" role // a seperate classs responsible for generating/dispatching events just duplicates most of the Session methods... // passing around seperate reto interceptor, factory, actionQueue, and persistentContext is not manageable...",yes,undetermined,0,0,0,yes,0.9786638772384234,yes,0.9931307348251115,yes,0.9946083777352462,yes,0.9956714378208658,yes,0.9955873143725793,yes,0.9959369397091624
223,hibernate-distribution-3.3.2.GA,DESIGN,//Must be done here because of side-effect! yuck...,yes,undetermined,0,0,0,no,0.1270781533154879,no,0.21832752695179508,no,0.23423722672604957,no,0.2461291390437442,no,0.24280018083240695,no,0.23719013611235748
224,hibernate-distribution-3.3.2.GA,DESIGN,//We should actually rework this class to not implement Parser //and just process path expressions in the most convenient way.,yes,undetermined,0,0,0,yes,0.7174105110763378,yes,0.6888371844067664,yes,0.698962402640564,yes,0.7264425373496635,yes,0.7238108140941553,yes,0.7226414618899003
225,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : should remove this exposure //  and have all references to the session's batcher use the ConnectionManager.,yes,undetermined,0,0,0,yes,0.9999999050381232,yes,0.9999997800566641,yes,0.9999998785094331,yes,0.9999999385155377,yes,0.9999999366648465,yes,0.9999999517790493
226,hibernate-distribution-3.3.2.GA,DESIGN,// we may be screwed here since the collection action is about to execute // and we do not know the final owner key value,yes,undetermined,0,0,0,no,0.01575233874437465,yes,0.99314014603007,yes,0.994615331360188,yes,0.9956579562555101,yes,0.9955788247611604,yes,0.9959341783055417
227,hibernate-distribution-3.3.2.GA,DESIGN,"// Needed the ""clazz_"" check to work around union-subclasses // TODO : is there a way to tell whether a persister is truly discrim-column based inheritence?",yes,undetermined,0,0,0,yes,0.9642618736067021,yes,0.9931321147613731,yes,0.9946153083181086,yes,0.9956602466262952,yes,0.9955833623231171,yes,0.9959363170156709
228,hibernate-distribution-3.3.2.GA,DESIGN,//work around a bug in all known connection pools....,yes,undetermined,0,0,0,no,0.4504359257220405,no,0.37707793031909514,no,0.38836714967255254,no,0.4059642576358882,no,0.42369966940418996,no,0.4205206007592338
229,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: reuse the PreLoadEvent,yes,undetermined,0,0,0,yes,0.9959347859418585,yes,0.999989723137912,yes,0.9999945692674583,yes,0.9999967103092665,yes,0.9999968238918432,yes,0.9999975051390374
230,hibernate-distribution-3.3.2.GA,DESIGN,// Need a better way to define the suffixes here...,yes,undetermined,0,0,0,no,0.5413453931697516,yes,0.5658941921149774,yes,0.5997695273991185,yes,0.6323949867192045,yes,0.6306269386953586,yes,0.6306686625032975
231,hibernate-distribution-3.3.2.GA,DESIGN,//workaround for WebLogic,yes,undetermined,0,0,0,yes,0.9806463981988515,yes,0.9931358238755439,yes,0.9946133158754459,yes,0.9956684720102422,yes,0.9955846686572296,yes,0.9959334671331392
232,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: temporary,yes,undetermined,0,0,0,yes,0.9999999167493371,yes,0.999999546442088,yes,0.9999997521186464,yes,0.9999998531206032,yes,0.9999998435990035,yes,0.9999998831491798
233,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : YUCK!!!  fix after HHH-1907 is complete,yes,undetermined,0,0,0,yes,0.9971452533094171,yes,0.9931402552422903,yes,0.994615353502835,yes,0.9956679923792296,yes,0.9955970598774683,yes,0.9959367954364292
234,hibernate-distribution-3.3.2.GA,DESIGN,// would be great to move all this below here into another method that could also be used // from the new scrolling stuff. // // Would need to change the way the max-row stuff is handled (i.e. behind an interface) so // that I could do the control breaking at the means to know when to stop,yes,undetermined,0,0,0,yes,0.8898594604668154,yes,0.9150715695108922,yes,0.9946099644606443,yes,0.9956660005839585,yes,0.9955826003067204,yes,0.9959387981576212
235,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: the i==entitySpan-1 bit depends upon subclass implementation (very bad),yes,undetermined,0,0,0,yes,0.9952097986470495,yes,0.9954548566697822,yes,0.9963496123050298,yes,0.9969733140914818,yes,0.9969059336001647,yes,0.9971642879075896
236,hibernate-distribution-3.3.2.GA,DESIGN,"// some messy, complex stuff here, since createCriteria() can take an // aliased path, or a path rooted at the creating criteria instance",yes,undetermined,0,0,0,no,0.017467588809234293,yes,0.9931389084955535,yes,0.99461332428113,yes,0.9956729333951306,yes,0.9955911684218148,yes,0.9959282472334733
237,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: add a CriteriaImplementor interface //      this class depends directly upon CriteriaImpl in the impl package...,yes,undetermined,0,0,0,yes,0.9351025416895855,yes,0.9931351996576461,yes,0.9946096165819679,yes,0.9956618007841249,yes,0.9955840579995958,yes,0.9959295454145959
238,hibernate-distribution-3.3.2.GA,DESIGN,"// polymorphism not really handled completely correctly, // perhaps...well, actually its ok, assuming that the // entity name used in the lookup is the same as the // the one used here, which it will be",yes,undetermined,0,0,0,yes,0.6070924343098665,no,0.5508799220351719,no,0.5238979100736603,no,0.5430543592571133,no,0.5457032513860196,no,0.5458391608056797
239,hibernate-distribution-3.3.2.GA,DESIGN,//This is not very nice (and quite slow):,yes,undetermined,0,0,0,yes,0.6091420051657572,yes,0.6033909930171759,yes,0.6075128228497018,yes,0.6230828328956334,yes,0.6209185963354287,yes,0.6198621639249235
240,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: get SQL rendering out of here,yes,undetermined,0,0,0,yes,0.9927989182824515,yes,0.9931330270872852,yes,0.9946082557700101,yes,0.9956706618927128,yes,0.9955838395518707,yes,0.9959357791255772
241,hibernate-distribution-3.3.2.GA,DESIGN,// meant to handle dynamic instantiation queries...(Copy from QueryLoader),yes,undetermined,0,0,0,no,0.003659097516397253,yes,0.9931329317462955,yes,0.9946208513877622,yes,0.9956692595203702,yes,0.9955911339835496,yes,0.9959420780612086
242,hibernate-distribution-3.3.2.GA,DESIGN,// Make sure this is a defined parameter and check the incoming value type // TODO: what should be the actual exception type here?,yes,undetermined,0,0,0,yes,0.9858237347259999,yes,0.9931445995219784,yes,0.9946166721508309,yes,0.9956743166765997,yes,0.995590886806948,yes,0.9959402371884767
243,hibernate-distribution-3.3.2.GA,DESIGN,// worrying about proxies is perhaps a little bit of overkill here...,yes,undetermined,0,0,0,yes,0.6748742158038797,yes,0.832297645070908,yes,0.8445948086350649,yes,0.8661364770493315,yes,0.8652434473776729,yes,0.867489273919979
244,hibernate-distribution-3.3.2.GA,DESIGN,// todo : throw exception?  maybe warn if not the same?,yes,undetermined,0,0,0,yes,0.9931900438757348,yes,0.9935710655299496,yes,0.9949765738497798,yes,0.9956623417290235,yes,0.9956367220011942,yes,0.9960098168687478
245,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: make EntityPersister *not* depend on SessionFactoryImplementor //interface, if possible",yes,undetermined,0,0,0,yes,0.9962061933353753,yes,0.994092394596357,yes,0.99584052087526,yes,0.9962653132515927,yes,0.9961912708103593,yes,0.9965487135063615
246,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : what amount of significant digits need to be supported here? //      - from the DecimalFormat docs: //          [significant digits] = [minimum integer digits] + [maximum fraction digits],yes,undetermined,0,0,0,no,0.2110812697135547,no,0.2164200756881601,no,0.23661700030921157,no,0.25423344405128495,no,0.250295017744677,no,0.24545783855933248
247,hibernate-distribution-3.3.2.GA,DESIGN,"//for backward compatibility, allow a set with no not-null  //element columns, using all columns in the row locater SQL //TODO: create an implicit not null constraint on all cols?",yes,undetermined,0,0,0,no,0.2265738887594236,no,0.34808679815678206,no,0.33388549646464166,no,0.3328338574123988,no,0.3226077355049247,no,0.31975975754919644
248,hibernate-distribution-3.3.2.GA,DESIGN,// todo : we can remove this once the deprecated ctor can be made private...,yes,undetermined,0,0,0,yes,0.9961292513694004,yes,0.9970533203645194,yes,0.9973931576944695,yes,0.9999861568783464,yes,0.9999851189218952,yes,0.9999879727761627
249,hibernate-distribution-3.3.2.GA,DESIGN,// TODO: copy/paste from ManyToOneType,yes,undetermined,0,0,0,yes,0.9968157585251641,yes,0.9999977417462058,yes,0.9999988632020849,yes,0.9999993603666113,yes,0.9999993153205711,yes,0.9999994669818443
250,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: code duplication with SingleTableEntityPersister,yes,undetermined,0,0,0,yes,0.9999904860426545,yes,0.9953012647556102,yes,0.9967427080650556,yes,0.9999833841429947,yes,0.9999824488196869,yes,0.9999855079689399
251,hibernate-distribution-3.3.2.GA,DESIGN,// todo : throw exception?,yes,undetermined,0,0,0,yes,0.9723916640826964,yes,0.9931425936739906,yes,0.9946247458932133,yes,0.9956701468257996,yes,0.995584475266142,yes,0.995935427056256
252,hibernate-distribution-3.3.2.GA,DESIGN,//should this interface extend PropertyMapping?,yes,undetermined,0,0,0,no,0.3394949226422513,no,0.3196038398175727,no,0.30642184457715543,no,0.30269664020196385,no,0.2987383855948287,no,0.2934913394576958
253,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO: here is why we need to make bytecode provider global :( // TODO : again, fix this after HHH-1907 is complete",yes,undetermined,0,0,0,yes,0.9999999981842681,yes,0.9999999856902198,yes,0.9999999924827343,yes,0.9999999959618933,yes,0.9999999957466161,yes,0.9999999969513271
254,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: currently keeps Getters and Setters (instead of PropertyAccessors) because of the way getGetter() and getSetter() are implemented currently; yuck!,yes,undetermined,0,0,0,yes,0.997414700290428,yes,0.9971056671615689,yes,0.9999864617695725,yes,0.9999918589906016,yes,0.9999916329035424,yes,0.9999930790438377
255,hibernate-distribution-3.3.2.GA,DESIGN,// todo : we can remove this once the deprecated ctor can be made private...,yes,undetermined,0,0,0,yes,0.9961292513694004,yes,0.9970533203645194,yes,0.9973931576944695,yes,0.9999861568783464,yes,0.9999851189218952,yes,0.9999879727761627
256,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: Yuck! This is not quite good enough, it's a quick //hack around the problem of having a to-one association //that refers to an embedded component:",yes,undetermined,0,0,0,yes,0.9999999852582521,yes,0.9999999481025387,yes,0.9999999763249595,yes,0.9999999868574396,yes,0.9999999869819597,yes,0.9999999900634565
257,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: implement caching?! proxies?!,yes,undetermined,0,0,0,yes,0.9760823583726362,yes,0.9931431286541477,yes,0.9946166529789385,yes,0.9956737884628709,yes,0.9955970102761819,yes,0.9959378557658121
258,hibernate-distribution-3.3.2.GA,DESIGN,// is this really necessary?,yes,undetermined,0,0,0,no,0.31413833595611235,no,0.2844429079998185,no,0.27061982107936167,no,0.2830994220465217,no,0.28105357060781827,no,0.2749059625024217
259,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: this is a little inefficient, don't need to do a whole //      deep replaceElements() call",yes,undetermined,0,0,0,yes,0.9965826774978653,yes,0.9963852788364022,yes,0.9967080080258657,yes,0.9971913724874274,yes,0.9971225855373368,yes,0.9973716599176071
260,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: this is a bit arbitrary, expose a switch to the user?",yes,undetermined,0,0,0,yes,0.9838517547664931,yes,0.9931415186793349,yes,0.9946162630435972,yes,0.9956666366610797,yes,0.9955940339457455,yes,0.9959292665206356
261,hibernate-distribution-3.3.2.GA,DESIGN,"/**
	 * @return collection removal
	 * FIXME: even if isInverse=""true""?
	 */",yes,undetermined,0,0,0,yes,0.9350558838915666,yes,0.9931335352489009,yes,0.9946118441047774,yes,0.9956750310605867,yes,0.9955940142757657,yes,0.9959330450012133
262,hibernate-distribution-3.3.2.GA,DESIGN,// TODO: Fix this so it will work for non-POJO entity mode,yes,undetermined,0,0,0,yes,0.9999998532671598,yes,0.9999996096009426,yes,0.9999997136832329,yes,0.9999998072098341,yes,0.9999997927720814,yes,0.9999998413259797
263,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: move these to a new JoinableType abstract class, //extended by EntityType and PersistentCollectionType:",yes,undetermined,0,0,0,yes,0.999994031412828,yes,0.9999836502021362,yes,0.9999894793377174,yes,0.9999922226729169,yes,0.999991845639673,yes,0.9999932907828247
264,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: would be nice to handle proxy classes elegantly!,yes,undetermined,0,0,0,yes,0.9916426513606993,yes,0.9931355218454379,yes,0.9946129912314899,yes,0.9956576374819055,yes,0.9955875190397561,yes,0.9959316016112951
265,hibernate-distribution-3.3.2.GA,DESIGN,"//SPACES //TODO: i'm not sure, but perhaps we should exclude //      abstract denormalized tables?",yes,undetermined,0,0,0,yes,0.9999811651803091,yes,0.9974383230104619,yes,0.9999905432162264,yes,0.9999942684496415,yes,0.9999941832360703,yes,0.9999953066048858
266,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: is there a more elegant way than downcasting?,yes,undetermined,0,0,0,yes,0.9999869834693463,yes,0.9999897137373767,yes,0.9999958801065869,yes,0.9999978574259148,yes,0.9999978190552712,yes,0.9999982637694396
267,hibernate-distribution-3.3.2.GA,DESIGN,// todo : remove,yes,undetermined,0,0,0,yes,0.9999972244816053,yes,0.9999990613097499,yes,0.9999995213329024,yes,0.9999997043498783,yes,0.9999996782158194,yes,0.9999997535346236
268,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: remove use of instanceof!,yes,undetermined,0,0,0,yes,0.999997829906776,yes,0.9999962056959003,yes,0.9999973160453591,yes,0.9999978193906275,yes,0.9999975765565332,yes,0.9999980492807882
269,hibernate-distribution-3.3.2.GA,DESIGN,//create an index on the key columns??,yes,undetermined,0,0,0,no,0.0007242549838176992,yes,0.9931290480529239,yes,0.9946089863306675,yes,0.9956603007959322,yes,0.995580378012384,yes,0.9959325433122919
270,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: make this a bit nicer,yes,undetermined,0,0,0,yes,0.9999855928924067,yes,0.996949960690424,yes,0.9969217010371246,yes,0.9999817175663522,yes,0.9974805761146978,yes,0.9999841739076244
271,hibernate-distribution-3.3.2.GA,DESIGN,// todo : we can remove this once the deprecated ctor can be made private...,yes,undetermined,0,0,0,yes,0.9961292513694004,yes,0.9970533203645194,yes,0.9973931576944695,yes,0.9999861568783464,yes,0.9999851189218952,yes,0.9999879727761627
272,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: perhaps this should be some other RuntimeException...,yes,undetermined,0,0,0,yes,0.999999996945834,yes,0.9999999921071504,yes,0.9999999967676982,yes,0.9999999986989788,yes,0.9999999986125625,yes,0.9999999990268745
273,hibernate-distribution-3.3.2.GA,DESIGN,//Yuck:,yes,undetermined,0,0,0,yes,0.6106456751092043,yes,0.6903180920059907,yes,0.7850507744976528,yes,0.8406696936396173,yes,0.8405687966215362,yes,0.8425671306145328
274,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: need some caching scheme? really comes down to decision  //      regarding amount of state (if any) kept on PropertyAccessors,yes,undetermined,0,0,0,yes,0.8085800191041905,yes,0.7843423069359362,yes,0.812035537174554,yes,0.819735680873092,yes,0.8187893742549245,yes,0.8223885162233432
275,hibernate-distribution-3.3.2.GA,DESIGN,// todo : this eventually needs to be removed,yes,undetermined,0,0,0,yes,0.9999966616378557,yes,0.9931256149005033,yes,0.9946156311602066,yes,0.9956639606501544,yes,0.9955785279882489,yes,0.9959311242519717
276,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: design new lifecycle for ProxyFactory,yes,undetermined,0,0,0,yes,0.9446455979410158,yes,0.9931379979353435,yes,0.9946165488896691,yes,0.995667256318778,yes,0.995593886064516,yes,0.995933154710015
277,hibernate-distribution-3.3.2.GA,DESIGN,"// todo: we should really just collect these from the various SelectExpressions, rather than regenerating here",yes,undetermined,0,0,0,yes,0.9899384001410302,yes,0.9931427570664908,yes,0.9946225788972229,yes,0.9956657393368232,yes,0.9955868983207794,yes,0.9959261497209815
278,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO: Should this really return null?  If not, figure out something better to do here.",yes,undetermined,0,0,0,yes,0.9999998496095731,yes,0.9999994376354746,yes,0.9999997123255149,yes,0.999999809789075,yes,0.9999998048484203,yes,0.9999998414165724
279,hibernate-distribution-3.3.2.GA,DESIGN,// todo : should seriously consider not allowing a txn to begin from a child session //      can always route the request to the root session...,yes,undetermined,0,0,0,yes,0.8549478946342032,yes,0.86179603082928,yes,0.8800241084894819,yes,0.891675947648961,yes,0.8905389351586933,yes,0.8935344933016985
280,hibernate-distribution-3.3.2.GA,DESIGN,"// should indicate that we are processing an INSERT/UPDATE/DELETE // query with a subquery implied via a collection property // function. Here, we need to use the table name itself as the // qualification alias. // TODO : verify this works for all databases... // TODO : is this also the case in non-""indexed"" scenarios?",yes,undetermined,0,0,0,yes,0.9999985831717093,yes,0.9999958135185306,yes,0.9999963847813436,yes,0.9999961438654603,yes,0.9999961377508668,yes,0.9999969727446045
281,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : this really needs to be delayed unitl after we definitively know all node types // where this is currently a problem is parameters for which where we cannot unequivocally // resolve an expected type,yes,undetermined,0,0,0,yes,0.9941455182538664,yes,0.9931311455205514,yes,0.9946258292977855,yes,0.9956708219056413,yes,0.9955917163639723,yes,0.9959438543936519
282,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO : make this the factory for ""entity mode related"" sessions; // also means making this the target of transaction-synch and the // thing that knows how to cascade things between related sessions // // At that point, perhaps this thing is a ""SessionContext"", and // ConnectionManager is a ""JDBCContext""?  A ""SessionContext"" should // live in the impl package...",yes,undetermined,0,0,0,yes,0.9856580510097731,yes,0.9931243333393267,yes,0.9946126588414946,yes,0.9956771791993908,yes,0.9955858044367982,yes,0.9959333404545259
283,hibernate-distribution-3.3.2.GA,DESIGN,// create an index on the key columns??,yes,undetermined,0,0,0,no,0.0007242549838176992,yes,0.9931290480529239,yes,0.9946089863306675,yes,0.9956603007959322,yes,0.995580378012384,yes,0.9959325433122919
284,hibernate-distribution-3.3.2.GA,DESIGN,//is this ok?,yes,undetermined,0,0,0,no,0.007086671869393395,no,0.010966751949910154,no,0.009111897101728553,yes,0.9956675719857021,yes,0.9955883359149993,yes,0.9959296407162346
285,hibernate-distribution-3.3.2.GA,DESIGN,"//init the table here instead of earlier, so that we can get a quoted table name //TODO: would it be better to simply pass the qualified table name, instead of //      splitting it up into schema/catalog/table names",yes,undetermined,0,0,0,yes,0.8388132004593113,yes,0.8898739469853189,yes,0.8920293677501294,yes,0.8947255585992899,yes,0.8923373642910454,yes,0.892813108795865
286,hibernate-distribution-3.3.2.GA,DESIGN,// perhaps this should be an exception since it is only ever used // in the above method?,yes,undetermined,0,0,0,no,0.38130923378854564,yes,0.5888902578459452,yes,0.6129575915983501,yes,0.6387744190283988,yes,0.6330223097085678,yes,0.6310827332502963
287,hibernate-distribution-3.3.2.GA,DESIGN,// NOTE: this assumes something about how propertySelectFragment is implemented by the subclass! // was toUnqotedAliasStrings( getdiscriminatorColumnName() ) before - now tried // to remove that unqoting and missing aliases..,yes,undetermined,0,0,0,no,0.31429756189239505,no,0.23961641489518598,no,0.24906949159545927,no,0.22519492863967236,no,0.22192807754638655,no,0.21690335281563525
288,hibernate-distribution-3.3.2.GA,DESIGN,"// Put a placeholder in entries, so we don't recurse back and try to save() the // same object again. QUESTION: should this be done before onSave() is called? // likewise, should it be done before onUpdate()?",yes,undetermined,0,0,0,no,0.1286865288376494,no,0.09363205170167024,yes,0.9946175102053357,yes,0.995657176355809,yes,0.995579402492484,yes,0.9959298703281179
289,hibernate-distribution-3.3.2.GA,DESIGN,"//before cascade! //TODO: should this be Session.instantiate(Persister, ...)?",yes,undetermined,0,0,0,yes,0.9757627153899839,yes,0.9931302812266825,yes,0.9946090587998844,yes,0.9956597308336597,yes,0.9955828097128472,yes,0.9959281812149987
290,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: we should throw an exception if we really *know* for sure   //      that this is a detached instance, rather than just assuming //throw new StaleObjectStateException(entityName, id);",yes,undetermined,0,0,0,yes,0.992382453976577,yes,0.9931353066098096,yes,0.994613719583964,yes,0.9956638523529273,yes,0.9955782294598752,yes,0.995929178191626
291,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO: The order in which entities are saved may matter (e.g., a particular transient entity //       may need to be saved before other transient entities can be saved; //       Keep retrying the batch of transient entities until either: //       1) there are no transient entities left in transientCopyCache //       or 2) no transient entities were saved in the last batch // For now, just run through the transient entities and retry the merge",yes,undetermined,0,0,0,no,0.43941590159206395,no,0.37913973201184953,no,0.40591850930119533,no,0.39012460987656955,no,0.39307215039880933,no,0.3901535577582921
292,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: if object was an uninitialized proxy, this is inefficient, //      resulting in two SQL selects",yes,undetermined,0,0,0,yes,0.8505489529289232,yes,0.8252022559866892,yes,0.8546437919454056,yes,0.864861692322627,yes,0.8625296319706066,yes,0.8658491578351958
293,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: put this stuff back in to read snapshot from //      the second-level cache (needs some extra work),yes,undetermined,0,0,0,yes,0.9895970353532241,yes,0.9931419028323155,yes,0.9946121272477033,yes,0.9956596279191483,yes,0.9955905121523604,yes,0.9959330609442074
294,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: not quite sure about the full implications of this!,yes,undetermined,0,0,0,yes,0.9958484991551163,yes,0.9954542194750376,yes,0.9965339528093167,yes,0.99727752769224,yes,0.9972170028772683,yes,0.9974730869786054
295,hibernate-distribution-3.3.2.GA,DESIGN,//this is kinda the best we can do...,yes,undetermined,0,0,0,no,0.29609511142888584,no,0.5321019962075337,yes,0.5754514395310167,yes,0.6093523134913247,yes,0.6068993063636708,yes,0.6059656965742157
296,hibernate-distribution-3.3.2.GA,DESIGN,/* trim done to workaround stupid oracle bug that cant handle whitespaces before a { in a sp */,yes,undetermined,0,0,0,yes,0.9371108058859879,yes,0.9931395294251011,yes,0.994613843642668,yes,0.9956684185576875,yes,0.9955805979532694,yes,0.9959281347035407
297,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: this needn't exclude subclasses...,yes,undetermined,0,0,0,yes,0.9785235625665774,yes,0.9931376855959626,yes,0.9946175151933165,yes,0.9956644027171123,yes,0.9955801308172461,yes,0.9959423922115926
298,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: we use two visitors here, inefficient!",yes,undetermined,0,0,0,yes,0.9950379981457396,yes,0.9969812331727747,yes,0.997475136631322,yes,0.9999854709766446,yes,0.9999845722332995,yes,0.9999872410854499
299,hibernate-distribution-3.3.2.GA,DESIGN,/* trim done to workaround stupid oracle bug that cant handle whitespaces before a { in a sp */,yes,undetermined,0,0,0,yes,0.9371108058859879,yes,0.9931395294251011,yes,0.994613843642668,yes,0.9956684185576875,yes,0.9955805979532694,yes,0.9959281347035407
300,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: does this really need to be here? //      does the collection already have //      it's own up-to-date snapshot?,yes,undetermined,0,0,0,yes,0.9940293118044288,yes,0.9936524026085887,yes,0.9946079407308156,yes,0.9956628539547149,yes,0.9955833798852618,yes,0.9959321296331182
301,hibernate-distribution-3.3.2.GA,DESIGN,"// otherwise, a trim-specification and/or a trim-character // have been specified;  we need to decide which options // are present and ""do the right thing"" // should leading trim-characters be trimmed? // should trailing trim-characters be trimmed? // the trim-character // the trim-source",yes,undetermined,0,0,0,no,0.020200608963197027,yes,0.9931302702233027,yes,0.9946111436092473,yes,0.9956662402025018,yes,0.9955821236763198,yes,0.9959295777361155
302,hibernate-distribution-3.3.2.GA,DESIGN,"//it is possible that the tree-walking in OuterJoinLoader can get to //an association defined by a subclass, in which case the property-ref //might refer to a property defined on a subclass of the current class //in this case, the table name is not known - this temporary solution  //assumes that the property-ref refers to a property of the subclass //table that the association belongs to (a reasonable guess) //TODO: fix this, add: OuterJoinLoadable.getSubclassPropertyTableName(String propertyName)",yes,undetermined,0,0,0,yes,0.8877538132543908,yes,0.7826284009755474,yes,0.795013860717851,yes,0.8111415752828296,yes,0.7990925806702059,yes,0.7920729526530375
303,hibernate-distribution-3.3.2.GA,DESIGN,// TODO: an alternative is to check if the owner has changed; if it hasn't then // return collection.getOwner(),yes,undetermined,0,0,0,yes,0.8562517165022416,yes,0.8511973790899585,yes,0.8821853288701951,yes,0.8914653950545469,yes,0.9069492635501832,yes,0.9959346469171293
304,hibernate-distribution-3.3.2.GA,DESIGN,//I suppose?,yes,undetermined,0,0,0,no,0.0025032581598442233,yes,0.9931329678278573,yes,0.9946082232615145,yes,0.9956680244102838,yes,0.9955868666372099,yes,0.9959350861202196
305,hibernate-distribution-3.3.2.GA,DESIGN,"// TBD should this be varbinary($1)? //		registerColumnType(Types.VARBINARY,     ""binary($1)"");",yes,undetermined,0,0,0,no,0.02841932128388139,yes,0.9931370090175509,yes,0.9946110805297513,yes,0.9956609515211206,yes,0.9955850599586146,yes,0.9959382544230785
306,hibernate-distribution-3.3.2.GA,DESIGN,//shortcut,yes,undetermined,0,0,0,no,0.004202674779365701,yes,0.9931442760828683,yes,0.9946209679871995,yes,0.9956660823930858,yes,0.9955915081731558,yes,0.9959349330159099
307,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: we should provide some way to get keys of collection of statistics to make it easier to retrieve from a GUI perspective,yes,undetermined,0,0,0,yes,0.9913602253030531,yes,0.994039806333642,yes,0.9953527823528965,yes,0.9958666389665203,yes,0.995807510662365,yes,0.9962767182827282
308,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO : probably better to calculate these and pass them in, as it'll be more performant",yes,undetermined,0,0,0,yes,0.9999995540982554,yes,0.9999990519773135,yes,0.9999994819799716,yes,0.9999997175257488,yes,0.9999996820121196,yes,0.9999997502147558
309,hibernate-distribution-3.3.2.GA,DESIGN,// todo : should we additionally check the current isolation mode explicitly?,yes,undetermined,0,0,0,yes,0.9708480609244654,yes,0.9931215337541638,yes,0.9946100302327974,yes,0.9956691866953682,yes,0.9955874672378765,yes,0.9959351064916844
310,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: simply remove this override //      if we fix the above todos,yes,undetermined,0,0,0,yes,0.9855215639139532,yes,0.9931432159370667,yes,0.9946161259036462,yes,0.9956701597803106,yes,0.9955853385444133,yes,0.9959393149413063
311,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: get SQL rendering out of this package!,yes,undetermined,0,0,0,yes,0.9969441246560433,yes,0.9965681512388422,yes,0.9967937075704988,yes,0.9974304409918865,yes,0.9973568676549546,yes,0.9999825430221815
312,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: get SQL rendering out of this package!,yes,undetermined,0,0,0,yes,0.9969441246560433,yes,0.9965681512388422,yes,0.9967937075704988,yes,0.9974304409918865,yes,0.9973568676549546,yes,0.9999825430221815
313,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: get SQL rendering out of this package!,yes,undetermined,0,0,0,yes,0.9969441246560433,yes,0.9965681512388422,yes,0.9967937075704988,yes,0.9974304409918865,yes,0.9973568676549546,yes,0.9999825430221815
314,hibernate-distribution-3.3.2.GA,DESIGN,// todo : is there really any reason to kkeep trying if this fails once?,yes,undetermined,0,0,0,yes,0.9764951379874438,yes,0.9931279781514359,yes,0.9946105215161717,yes,0.9956676737935134,yes,0.995592707053294,yes,0.9959307775703928
315,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO : not sure this is correct, could not find docs on how to do this.",yes,undetermined,0,0,0,yes,0.9999995723398526,yes,0.9999990371397535,yes,0.9999993726974524,yes,0.9999996667299965,yes,0.9999996635558165,yes,0.9999997488778976
316,hibernate-distribution-3.3.2.GA,DESIGN,//HSQL has no Blob/Clob support .... but just put these here for now!,yes,undetermined,0,0,0,no,0.02032835711849515,yes,0.9931323974605836,yes,0.9946033346192487,yes,0.9956736573314385,yes,0.9955867480785933,yes,0.9959378812936668
317,hibernate-distribution-3.3.2.GA,DESIGN,// merges don't cascade to uninitialized collections //			//TODO: perhaps this does need to cascade after all....,yes,undetermined,0,0,0,yes,0.9598841886876147,yes,0.9931320307789939,yes,0.99462551531238,yes,0.9956671851357353,yes,0.9955817048567082,yes,0.9959303901242498
318,hibernate-distribution-3.3.2.GA,DESIGN,// yick!  need this for proper serialization/deserialization handling...,yes,undetermined,0,0,0,no,0.1027417698167641,no,0.06620565601388735,yes,0.9946144385930659,yes,0.9956663930911244,yes,0.995576174105666,yes,0.9959354384365482
319,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: should orphans really be deleted during lock???,yes,undetermined,0,0,0,yes,0.9239112835933729,yes,0.9931244778362995,yes,0.9946064508701156,yes,0.9956697830730072,yes,0.9955817333871994,yes,0.9959316351998743
320,hibernate-distribution-3.3.2.GA,DESIGN,// todo : move to StringHelper?,yes,undetermined,0,0,0,yes,0.9999999705337224,yes,0.9999998949757734,yes,0.9999999481000378,yes,0.9999999662955759,yes,0.9999999637486682,yes,0.9999999736839246
321,hibernate-distribution-3.3.2.GA,DESIGN,// Sets can be just a view of a part of another collection. // do we need to copy it to be sure it won't be changing // underneath us? // ie. this.set.addAll(set);,yes,undetermined,0,0,0,no,0.18089449342819708,no,0.23186399034454622,no,0.19253082913759695,no,0.16982623842966796,no,0.1653867733504163,no,0.15984080965329756
322,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO: It would be really, really nice to use this to also model components!",yes,undetermined,0,0,0,yes,0.9999972670001973,yes,0.9999963037585361,yes,0.9999977794077697,yes,0.9999985400065575,yes,0.9999984854318427,yes,0.9999987869467432
323,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: move to .sql package!!,yes,undetermined,0,0,0,yes,0.9999864042454729,yes,0.9973420717109327,yes,0.9999896521349744,yes,0.9999934958139752,yes,0.9999931470882464,yes,0.9999945009341599
324,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: look at the owning property and check that it  //      isn't lazy (by instrumentation),yes,undetermined,0,0,0,yes,0.98766190661929,yes,0.9931312901905504,yes,0.9946246820781189,yes,0.9956671958290838,yes,0.9955809333680482,yes,0.9959345542394512
325,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : add this info to the translator and aggregate it here...,yes,undetermined,0,0,0,yes,0.9999958580394265,yes,0.999991680603507,yes,0.9999934428883903,yes,0.9999967997920035,yes,0.9999967358589935,yes,0.999997544668909
326,hibernate-distribution-3.3.2.GA,DESIGN,//TODO possibly relax that,yes,undetermined,0,0,0,yes,0.9919874853113281,yes,0.9931427953523098,yes,0.9946178371150469,yes,0.9956682653653959,yes,0.9955954152550723,yes,0.9959282879772602
327,hibernate-distribution-3.3.2.GA,DESIGN,//TODO possibly relax that,yes,undetermined,0,0,0,yes,0.9919874853113281,yes,0.9931427953523098,yes,0.9946178371150469,yes,0.9956682653653959,yes,0.9955954152550723,yes,0.9959282879772602
328,hibernate-distribution-3.3.2.GA,DESIGN,// would be better to use the element-type to determine // whether the old and the new are equal here; the problem being // we do not necessarily have access to the element type in all // cases,yes,undetermined,0,0,0,no,0.442098109096883,no,0.4087646637177182,no,0.3585717744521317,no,0.4079325505149882,no,0.39526191850593684,no,0.38967723410057287
329,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: code duplication with JoinedSubclassEntityPersister,yes,undetermined,0,0,0,yes,0.9999904860426545,yes,0.9953012647556102,yes,0.9967427080650556,yes,0.9999833841429947,yes,0.9999824488196869,yes,0.9999855079689399
330,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: refactor to .sql package,yes,undetermined,0,0,0,yes,0.9999894880417044,yes,0.9999865779305412,yes,0.9999938496455457,yes,0.9999969341117267,yes,0.999996806167245,yes,0.9999974603198742
331,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: *two* hashmap lookups here is one too many...,yes,undetermined,0,0,0,yes,0.8455851161915611,yes,0.812862015261626,yes,0.8170457232373619,yes,0.8321645744101465,yes,0.8277873588481114,yes,0.8303876824212452
332,hibernate-distribution-3.3.2.GA,DESIGN,"//note that this method could easily be moved up to BasicEntityPersister, //if we ever needed to reuse it from other subclasses",yes,undetermined,0,0,0,no,0.061616007275762434,yes,0.9931216682097227,yes,0.9946164123396513,yes,0.9956620455056222,yes,0.9955917367760243,yes,0.9959381753321419
333,hibernate-distribution-3.3.2.GA,DESIGN,"// from the collection of associations, locate OJA for the // ManyToOne corresponding to this persister to fully // define the many-to-many; we need that OJA so that we can // use its alias here // TODO : is there a better way here?",yes,undetermined,0,0,0,yes,0.9950756032454421,yes,0.9931264285551661,yes,0.9946201309470203,yes,0.9956642093210903,yes,0.9955911121153964,yes,0.9959381068120196
334,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: this class depends directly upon CriteriaImpl,  //      in the impl package ... add a CriteriaImplementor  //      interface",yes,undetermined,0,0,0,yes,0.9351025416895855,yes,0.9931351996576461,yes,0.9946096165819679,yes,0.9956618007841249,yes,0.9955840579995958,yes,0.9959295454145959
335,hibernate-distribution-3.3.2.GA,DESIGN,// Do we need to qualify index names with the schema name?,yes,undetermined,0,0,0,no,0.03686226417075519,yes,0.9931343108454727,yes,0.9946141712832527,yes,0.9956721073854157,yes,0.9955814325572796,yes,0.9959330749947084
336,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: We probably should have a StatisticsNotPublishedException, to make it clean",yes,undetermined,0,0,0,yes,0.9999999998866508,yes,0.9999999995114244,yes,0.9999999998215023,yes,0.999999999922743,yes,0.9999999999156292,yes,0.9999999999432783
337,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: get SQL rendering out of this package!,yes,undetermined,0,0,0,yes,0.9969441246560433,yes,0.9965681512388422,yes,0.9967937075704988,yes,0.9974304409918865,yes,0.9973568676549546,yes,0.9999825430221815
338,hibernate-distribution-3.3.2.GA,DESIGN,//yukky! Don't you have subclasses for that! //TODO race conditions can happen here,yes,undetermined,0,0,0,yes,0.9899075715992169,yes,0.99312594879671,yes,0.9946165195353,yes,0.9956699550505985,yes,0.9955935694834255,yes,0.9959316393409949
339,hibernate-distribution-3.3.2.GA,DESIGN,// NOTE VERY HACKISH WORKAROUND!! // TODO: Fix this so it will work for non-POJO entity mode,yes,undetermined,0,0,0,yes,0.9999999999614635,yes,0.999999999833999,yes,0.9999999999037322,yes,0.9999999999514332,yes,0.9999999999480427,yes,0.9999999999659006
340,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: need to make the majority of this functionality into a top-level support class for custom impl support,yes,undetermined,0,0,0,yes,0.9918211177028813,yes,0.9936655278681311,yes,0.9946218959988646,yes,0.995671265854271,yes,0.9955924971798946,yes,0.995929964019724
341,hibernate-distribution-3.3.2.GA,DESIGN,"// for DOM4J ""collections"" only // TODO: it would be better if this was done at the higher level by Printer",yes,undetermined,0,0,0,yes,0.9935294237130917,yes,0.9931467190649794,yes,0.994699515530799,yes,0.9957632264824678,yes,0.9956157827461088,yes,0.9959728439384675
342,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: inefficient if that cache is just going to ignore the updated state!,yes,undetermined,0,0,0,yes,0.7754078918012831,yes,0.7988388562385371,yes,0.8100095821690019,yes,0.8113651458829433,yes,0.8166594098472479,yes,0.8177475544042878
343,hibernate-distribution-3.3.2.GA,DESIGN,// TODO: an alternative is to check if the owner has changed; if it hasn't then // get the ID from collection.getOwner(),yes,undetermined,0,0,0,yes,0.859540676048032,yes,0.8422594005353589,yes,0.8758568631349795,yes,0.882630546973454,yes,0.9158267077962733,yes,0.9959402069952866
344,hibernate-distribution-3.3.2.GA,DESIGN,//TODO:refactor + make this method private,yes,undetermined,0,0,0,yes,0.9999996470816148,yes,0.999998850102662,yes,0.9999988892331982,yes,0.9999992467442915,yes,0.9999991989763918,yes,0.9999993737490037
345,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : keep seperate notions of QT[] here for shallow/non-shallow queries...,yes,undetermined,0,0,0,no,0.48431074177803723,no,0.41013726096158387,no,0.4384723012576624,no,0.5065417089071687,no,0.5068569255403784,no,0.5050931765680401
346,hibernate-distribution-3.3.2.GA,DESIGN,// todo : temporary //      needed because currently persister is the one that //      creates and renders the join fragments for inheritence //      hierarchies...,yes,undetermined,0,0,0,yes,0.8437836882892824,yes,0.7920352768776401,yes,0.8043569962232601,yes,0.853222251862437,yes,0.8519805273519626,yes,0.8543594229913797
347,hibernate-distribution-3.3.2.GA,DESIGN,// this is called by SessionFactory irregardless; we just disregard here; // could also add a check to SessionFactory to only conditionally call stop,yes,undetermined,0,0,0,no,0.24714565644064113,no,0.25310565077495883,no,0.23766947924828966,no,0.224315602270901,no,0.21764145410119648,no,0.2097374248058129
348,hibernate-distribution-3.3.2.GA,DESIGN,//swaldman 2004-02-07: modify to allow null values to signify fall through to c3p0 PoolConfig defaults,yes,undetermined,0,0,0,no,0.011817413953014394,yes,0.9931286312471524,yes,0.9946148324391353,yes,0.9956715043000393,yes,0.9955882356540596,yes,0.9959343824045666
349,hibernate-distribution-3.3.2.GA,DESIGN,"// work around that crazy issue where the tree contains // ""empty"" FromElements (no text); afaict, this is caused // by FromElementFactory.createCollectionJoin()",yes,undetermined,0,0,0,no,0.5129465447745601,no,0.387126912418705,no,0.3703154486817548,no,0.3443346426997744,no,0.47751845301921025,no,0.47112651224858365
350,hibernate-distribution-3.3.2.GA,DESIGN,"//kinda ugly, but needed for collections with a ""."" node mapping",yes,undetermined,0,0,0,no,0.27288227210670496,no,0.47943420173980605,no,0.5,no,0.5204346860536035,no,0.5445660812283557,no,0.5452231211061079
351,hibernate-distribution-3.3.2.GA,DESIGN,//FIXME: get the PersistentClass,yes,undetermined,0,0,0,yes,0.9374050331026402,yes,0.9931347438479952,yes,0.9946210221390125,yes,0.995668608919329,yes,0.995593245267652,yes,0.9959414949555165
352,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO : would be great to have a Mapping#hasNonIdentifierPropertyNamedId method // I don't believe that Mapping#getReferencedPropertyType accounts for the identifier property; so // if it returns for a property named 'id', then we should have a non-id field named id",yes,undetermined,0,0,0,yes,0.9009771526969168,yes,0.9931257748712062,yes,0.9946173691663194,yes,0.9956746698932337,yes,0.9955927837158167,yes,0.9959391567923277
353,hibernate-distribution-3.3.2.GA,DESIGN,// entity name will not be available for non-POJO entities // TODO: cache the entity name somewhere so that it is available to this exception,yes,undetermined,0,0,0,yes,0.905754869507058,yes,0.993146597873121,yes,0.9946184999813252,yes,0.995667533290166,yes,0.9955955152956817,yes,0.9959296074619478
354,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: is this really necessary????,yes,undetermined,0,0,0,yes,0.9999999845321398,yes,0.9999999698934138,yes,0.9999999717758945,yes,0.999999985233564,yes,0.9999999855196409,yes,0.9999999894863404
355,hibernate-distribution-3.3.2.GA,DESIGN,//index += getPropertyColumnSpan( i ); //TODO:  this is kinda slow...,yes,undetermined,0,0,0,yes,0.9432743784743771,yes,0.993147937918637,yes,0.9946054401177925,yes,0.9956756596824016,yes,0.9955920322884905,yes,0.9959404780253577
356,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: move to .sql package, and refactor with similar things!",yes,undetermined,0,0,0,yes,0.9999832381830844,yes,0.995458895497788,yes,0.9966695766293786,yes,0.9973878800203207,yes,0.9973064674602764,yes,0.9999819503644609
357,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: I am not so sure about the exception handling in this bit!,yes,undetermined,0,0,0,yes,0.9999932764491807,yes,0.9999913721941428,yes,0.9999955091040863,yes,0.9999970353611906,yes,0.9999969745469716,yes,0.9999975989197897
358,hibernate-distribution-3.3.2.GA,DESIGN,//ugly little workaround for fact that createUniqueKeyLoaders() does not handle component properties,yes,undetermined,0,0,0,yes,0.9999877247920246,yes,0.9999837970538071,yes,0.9999885799998378,yes,0.9999922360646097,yes,0.9999919695730124,yes,0.9999931365307253
359,hibernate-distribution-3.3.2.GA,DESIGN,// append the SQL to return the generated identifier //TODO: suck into Insert,yes,undetermined,0,0,0,yes,0.9632126298547622,yes,0.9931215421963503,yes,0.9946250723863889,yes,0.9956677039683209,yes,0.9955807250511759,yes,0.9959402698789976
360,hibernate-distribution-3.3.2.GA,DESIGN,"//This is really ugly, but necessary:",yes,undetermined,0,0,0,yes,0.9916720830388508,yes,0.993498325678578,yes,0.9950144424284392,yes,0.9960530643305747,yes,0.996056859015048,yes,0.99637993282731
361,hibernate-distribution-3.3.2.GA,DESIGN,// todo : modify the class definition if not already transformed...,yes,undetermined,0,0,0,yes,0.9304286123077224,yes,0.9931349617022148,yes,0.9946236738430908,yes,0.9956652712459954,yes,0.9955871243479407,yes,0.9959349084184651
362,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: should we use SELECT .. FOR UPDATE?,yes,undetermined,0,0,0,yes,0.9999959029670685,yes,0.9999929272289794,yes,0.9999952839707998,yes,0.9999963031682312,yes,0.9999959677216834,yes,0.9999967435333437
363,hibernate-distribution-3.3.2.GA,DESIGN,"/** Create an action that will evict collection and entity regions based on queryspaces (table names).
	 *  TODO: cache the autodetected information and pass it in instead.
	 **/",yes,undetermined,0,0,0,yes,0.9345501905161877,yes,0.9931377487167511,yes,0.9946215961096949,yes,0.9956585711027403,yes,0.9955856728091961,yes,0.995933275596203
364,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: is this 100% correct?,yes,undetermined,0,0,0,yes,0.9999995529034571,yes,0.9999987534798925,yes,0.9999989498226133,yes,0.9999994628436151,yes,0.9999994505235696,yes,0.9999995756793459
365,hibernate-distribution-3.3.2.GA,DESIGN,/////////////////////////////////////////////////////////////////////////// // USED ONLY FOR REGRESSION TESTING!!!! // // todo : obviously get rid of all this junk ;) ///////////////////////////////////////////////////////////////////////////,yes,undetermined,0,0,0,yes,0.9295526973786543,yes,0.9931469609233204,yes,0.9946119572723715,yes,0.9956669629202879,yes,0.995584260219605,yes,0.9959315715433759
366,hibernate-distribution-3.3.2.GA,DESIGN,// NOTE: this assumes something about how propertySelectFragment is implemented by the subclass! // was toUnqotedAliasStrings( getIdentiferColumnNames() ) before - now tried // to remove that unqoting and missing aliases..,yes,undetermined,0,0,0,no,0.31429756189239505,no,0.23961641489518598,no,0.24906949159545927,no,0.22519492863967236,no,0.22192807754638655,no,0.21690335281563525
367,hibernate-distribution-3.3.2.GA,DESIGN,//use of a stringbuffer to workaround a JDK bug,yes,undetermined,0,0,0,yes,0.9999988376356178,yes,0.9999978177489623,yes,0.9999987067078375,yes,0.9999991909022921,yes,0.9999991339066965,yes,0.9999993155359139
368,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: move into collection type, so we can use polymorphism!",yes,undetermined,0,0,0,yes,0.9999992216098811,yes,0.9999975176179718,yes,0.9999819548142745,yes,0.9999867916162649,yes,0.9999858588906635,yes,0.9999888420532606
369,hibernate-distribution-3.3.2.GA,DESIGN,// TODO should we just collect these like with the collections above?,yes,undetermined,0,0,0,yes,0.9930244297132012,yes,0.9931316127297944,yes,0.9946145246825072,yes,0.9956652439590917,yes,0.995586543374277,yes,0.9959333155865481
370,hibernate-distribution-3.3.2.GA,DESIGN,"// todo : should really move this log statement to CollectionType, where this is used from...",yes,undetermined,0,0,0,yes,0.9999958789347003,yes,0.9999895320293117,yes,0.9999926413115788,yes,0.9999955811695183,yes,0.99999569501068,yes,0.9999966058578065
371,hibernate-distribution-3.3.2.GA,DESIGN,// FIXME Hacky workaround to JBCACHE-1202,yes,undetermined,0,0,0,yes,0.9999999999995706,yes,0.9999999999988218,yes,0.9999999999996925,yes,0.9999999999999016,yes,0.9999999999998973,yes,0.9999999999999387
372,hibernate-distribution-3.3.2.GA,DESIGN,//hum ... should we cascade anyway? throw an exception? fine like it is?,yes,undetermined,0,0,0,no,0.3121129084390226,no,0.3167681529138651,no,0.28973659721899203,no,0.29569537840626114,no,0.2923654348183717,no,0.28942287229655816
373,hibernate-distribution-3.3.2.GA,DESIGN,// todo: this might really even be moved into the cfg package and used as the basis for all things which are configurable.,yes,undetermined,0,0,0,yes,0.9973608948474905,yes,0.996560546583906,yes,0.9967692682766137,yes,0.9972246885859518,yes,0.9969114680559193,yes,0.997171748757869
374,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: copy/paste from insertRows(),yes,undetermined,0,0,0,yes,0.9968157585251641,yes,0.9999977417462058,yes,0.9999988632020849,yes,0.9999993603666113,yes,0.9999993153205711,yes,0.9999994669818443
375,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: suck into event class,yes,undetermined,0,0,0,yes,0.9999995065111791,yes,0.9999988252541687,yes,0.9999993393072174,yes,0.999999552764667,yes,0.9999995189684816,yes,0.9999996238206987
376,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: never reached, since getTypeName() actually throws an exception!",yes,undetermined,0,0,0,yes,0.9111624581718777,yes,0.9931409780621752,yes,0.9946156577404587,yes,0.9956735167878706,yes,0.9955936541015716,yes,0.9959351587996964
377,hibernate-distribution-3.3.2.GA,DESIGN,"// This, is used by SessionFactoryImpl to hand to the generated SessionImpl; // was the only reason I could see that we cannot just use null as // Settings.cacheProvider",yes,undetermined,0,0,0,no,0.01566954322382005,yes,0.9931379847305059,yes,0.994612118450373,yes,0.9956653195930198,yes,0.9955852726616582,yes,0.9959251123273153
378,hibernate-distribution-3.3.2.GA,DESIGN,// xmlforest requires a new kind of function constructor,yes,undetermined,0,0,0,no,0.013185514959942102,yes,0.993134541177136,yes,0.9946249624612579,yes,0.9956732385056104,yes,0.9955909206215645,yes,0.9959325495726483
379,hibernate-distribution-3.3.2.GA,DESIGN,// TODO Is this a valid operation on a timestamps cache?,yes,undetermined,0,0,0,yes,0.9188661799069291,yes,0.9931238715651656,yes,0.9946087991444681,yes,0.9956598472846274,yes,0.9955841113065858,yes,0.9959351386523126
380,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO: I considered validating the presence of the TS cache here, // but decided to defer unti getQueryCacheInstance() in case the  // cache is never actually used",yes,undetermined,0,0,0,yes,0.601649364070836,yes,0.7478361313788011,yes,0.7654032000559059,yes,0.7700070929313138,yes,0.8329898782818038,yes,0.8322393451838048
381,hibernate-distribution-3.3.2.GA,DESIGN,// TODO Why not use the timestamp in a DataVersion?,yes,undetermined,0,0,0,yes,0.9999998255845776,yes,0.9999996698524668,yes,0.9999999045694025,yes,0.9999999472290343,yes,0.9999999446406875,yes,0.9999999585114095
382,hibernate-distribution-3.3.2.GA,DESIGN,// todo : eventually merge this with TreeCache and just add optional opt-lock support there.,yes,undetermined,0,0,0,yes,0.9060803693832452,yes,0.9931452280502481,yes,0.9946208229949207,yes,0.9956615611835488,yes,0.9955843472119215,yes,0.9959296560698159
383,hibernate-distribution-3.3.2.GA,DESIGN,"/**
     * FIXME Per the RegionFactory class Javadoc, this constructor version
     * should not be necessary.
     * 
     * @param props The configuration properties
     */",yes,undetermined,0,0,0,yes,0.9963688569540528,yes,0.9949218154216514,yes,0.9953598183851775,yes,0.9956602572794699,yes,0.9955897006360699,yes,0.9959313233627838
384,hibernate-distribution-3.3.2.GA,DESIGN,"/**
     * FIXME Per the RegionFactory class Javadoc, this constructor version
     * should not be necessary.
     * 
     * @param props The configuration properties
     */",yes,undetermined,0,0,0,yes,0.9963688569540528,yes,0.9949218154216514,yes,0.9953598183851775,yes,0.9956602572794699,yes,0.9955897006360699,yes,0.9959313233627838
385,hibernate-distribution-3.3.2.GA,DESIGN,"// work around the ""feature"" where tree cache is validating the // inserted node during the next transaction.  no idea...",yes,undetermined,0,0,0,no,0.13302657320845446,no,0.10607374168693778,no,0.10480738758309359,no,0.09162181911192112,yes,0.9955792544930614,yes,0.9959348380847537
386,hibernate-distribution-3.3.2.GA,DESIGN,"/**
     * FIXME Per the RegionFactory class Javadoc, this constructor version
     * should not be necessary.
     * 
     * @param props The configuration properties
     */",yes,undetermined,0,0,0,yes,0.9963688569540528,yes,0.9949218154216514,yes,0.9953598183851775,yes,0.9956602572794699,yes,0.9955897006360699,yes,0.9959313233627838
387,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO: I considered validating TS cache config here, // but decided to defer unti getTimestampsCacheInstance() in case the  // cache is never actually used",yes,undetermined,0,0,0,yes,0.6225188365590975,yes,0.7666282548045457,yes,0.7839405817476411,yes,0.7877492255612862,yes,0.843755104764595,yes,0.8426237437389289
388,hibernate-distribution-3.3.2.GA,DESIGN,// can happen because of the multiple ways Cache.remove() // can be invoked :(,yes,undetermined,0,0,0,no,0.0025307902213471695,yes,0.9931332688249658,yes,0.9946184728141281,yes,0.9956600740498456,yes,0.9955835192025648,yes,0.9959323279257745
389,hibernate-distribution-3.3.2.GA,DESIGN,//need to do that here rather than in the save event listener to let //the post insert events to have a id-filled entity when IDENTITY is used (EJB3),yes,undetermined,0,0,0,no,0.19279466510016718,no,0.13428374457566833,no,0.12451610548917998,no,0.11597471455130158,no,0.1167222776279777,no,0.11271170804158827
390,hibernate-distribution-3.3.2.GA,DESIGN,// unhappy about this being public ... is there a better way?,yes,undetermined,0,0,0,yes,0.6540562976065422,yes,0.6977066638816504,yes,0.7288860088476108,yes,0.7671068266942226,yes,0.7619689790525316,yes,0.7637979313089104
391,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO : safe to interpret ""map.remove(key) == null"" as non-dirty?",yes,undetermined,0,0,0,yes,0.9382494456045335,yes,0.993130402835461,yes,0.9946168100925638,yes,0.9956752094546631,yes,0.9955864838710509,yes,0.9959340682026518
392,hibernate-distribution-3.3.2.GA,DESIGN,// FIXME hack to work around fact that calling // Node added = root.addChild( fqn ); doesn't  // properly set the version on the node,yes,undetermined,0,0,0,yes,0.9999994431926181,yes,0.9999983693382374,yes,0.9999989065208992,yes,0.9999993867033025,yes,0.9999996464140831,yes,0.999999724565747
393,hibernate-distribution-3.3.2.GA,DESIGN,"// work around the ""feature"" where tree cache is validating the // inserted node during the next transaction. no idea...",yes,undetermined,0,0,0,no,0.13302657320845446,no,0.10607374168693778,no,0.10480738758309359,no,0.09162181911192112,yes,0.9955792544930614,yes,0.9959348380847537
394,hibernate-distribution-3.3.2.GA,DESIGN,// TODO Is this a valid operation on a timestamps cache?,yes,undetermined,0,0,0,yes,0.9188661799069291,yes,0.9931238715651656,yes,0.9946087991444681,yes,0.9956598472846274,yes,0.9955841113065858,yes,0.9959351386523126
395,hibernate-distribution-3.3.2.GA,DESIGN,// todo : what else to do here?,yes,undetermined,0,0,0,yes,0.9742900410078031,yes,0.9931258817176841,yes,0.9946064829990491,yes,0.9956612165085214,yes,0.9955852612801912,yes,0.9959299617032853
396,hibernate-distribution-3.3.2.GA,DESIGN,// TODO: Replace this with a more elegant solution.,yes,undetermined,0,0,0,yes,0.9999996877593141,yes,0.9999994970580649,yes,0.9999998352749492,yes,0.9999999182154892,yes,0.9999999139514829,yes,0.9999999343024064
397,hibernate-distribution-3.3.2.GA,DESIGN,// short cut check...,yes,undetermined,0,0,0,no,0.005854217697320303,yes,0.9931358742138711,yes,0.9946132709313329,yes,0.995660585255586,yes,0.9955880505770338,yes,0.9959364771482663
398,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: to handle concurrent writes correctly, this should return a Lock to the client",yes,undetermined,0,0,0,yes,0.9889048405387701,yes,0.9971577976576028,yes,0.9999828011329861,yes,0.9999888601963869,yes,0.9999885852865237,yes,0.9999907242792211
399,hibernate-distribution-3.3.2.GA,DESIGN,"//put() has nowait semantics, is this really appropriate? //note that it needs to be async replication, never local or sync",yes,undetermined,0,0,0,no,0.5070146743203809,no,0.455736857828408,no,0.44572661043354134,no,0.4374282875078431,no,0.42864760015632264,no,0.42749776980243215
400,hibernate-distribution-3.3.2.GA,DESIGN,"// this is ugly here, but needed because its a subquery",yes,undetermined,0,0,0,yes,0.9751280500469152,yes,0.993141167650134,yes,0.9946225428800359,yes,0.9956660337388213,yes,0.9955872681575956,yes,0.9959430575257362
401,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : will need reference to session factory to fully complete HHH-1907,yes,undetermined,0,0,0,yes,0.9432788289852855,yes,0.993123540547354,yes,0.9946035730924897,yes,0.9956627100366202,yes,0.9955864551836229,yes,0.9959341732815306
402,hibernate-distribution-3.3.2.GA,DESIGN,//yuck!,yes,undetermined,0,0,0,yes,0.6106456751092043,yes,0.6903180920059907,yes,0.7850507744976528,yes,0.8406696936396173,yes,0.8405687966215362,yes,0.8425671306145328
403,hibernate-distribution-3.3.2.GA,DESIGN,// inheritance cycle detection (paranoid check),yes,undetermined,0,0,0,no,0.004397976335995239,yes,0.9931348411186602,yes,0.9946098247971553,yes,0.9956647583961749,yes,0.9955947427487093,yes,0.9959346547208155
404,hibernate-distribution-3.3.2.GA,DESIGN,// todo : remove,yes,undetermined,0,0,0,yes,0.9999972244816053,yes,0.9999990613097499,yes,0.9999995213329024,yes,0.9999997043498783,yes,0.9999996782158194,yes,0.9999997535346236
405,hibernate-distribution-3.3.2.GA,DESIGN,// TODO: encapsulate the protected instance variables!,yes,undetermined,0,0,0,yes,0.8513623274236911,yes,0.8432670926180604,yes,0.8567309858823623,yes,0.8706260503272975,yes,0.8703433557982017,yes,0.873549177455984
406,hibernate-distribution-3.3.2.GA,DESIGN,//polymorphism comment above,yes,undetermined,0,0,0,no,0.00446890684072453,yes,0.9931383620131193,yes,0.9946263374092313,yes,0.995671104936205,yes,0.9955888520964284,yes,0.995940774838022
407,hibernate-distribution-3.3.2.GA,DOCUMENTATION,//TODO find a decent name before documenting,yes,undetermined,0,0,0,yes,0.75944931874294,yes,0.7671607396123922,yes,0.8189150183064533,yes,0.8459458683504854,yes,0.8440726701819737,yes,0.8471353071846768
408,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"// add an entry for this type of entity. // we can be assured that all referenced entities have already // been processed, // so specify that this entity is with the latest batch. // doing the batch number before adding the name to the list is // a faster way to get an accurate number.",yes,undetermined,0,0,0,no,0.14870617900854868,no,0.06998620943831803,yes,0.9946133454097951,yes,0.9956652412895388,yes,0.9955805126138753,yes,0.9959321323288473
409,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// TODO: handle TypeDefs,yes,undetermined,0,0,0,yes,0.9954655130814548,yes,0.9963202828210865,yes,0.9999843875591061,yes,0.9999900612590326,yes,0.9999897781105315,yes,0.9999917523660092
410,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"//TODO: get all properties, not just the fetched ones!",yes,undetermined,0,0,0,yes,0.8154245351215813,yes,0.6558733695268585,yes,0.6668691303026191,yes,0.6920067394348322,yes,0.6941807697648639,yes,0.6956431408875207
411,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: native ids,yes,undetermined,0,0,0,yes,0.9298842063448451,yes,0.9931226107031144,yes,0.994617113354306,yes,0.9956624343138084,yes,0.9955854167204824,yes,0.9959347083579966
412,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"// TODO: bindpropertyresults(alias, returnElem)",yes,undetermined,0,0,0,yes,0.9967107583506533,yes,0.9949417287232291,yes,0.995854292650645,yes,0.9964207162119381,yes,0.9963139220034655,yes,0.9966315303089431
413,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: handle property-ref,yes,undetermined,0,0,0,yes,0.9468281373914403,yes,0.9931447824706583,yes,0.9946225341992702,yes,0.995667875294185,yes,0.9955909154858841,yes,0.9959417209144394
414,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: validate existing of property with the chosen name. (secondpass ),yes,undetermined,0,0,0,yes,0.969306822143649,yes,0.9931359161053964,yes,0.9946113640956661,yes,0.9956596726554097,yes,0.9955911959058253,yes,0.9959270911320837
415,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"//TODO: get all properties, not just the fetched ones!",yes,undetermined,0,0,0,yes,0.8154245351215813,yes,0.6558733695268585,yes,0.6668691303026191,yes,0.6920067394348322,yes,0.6941807697648639,yes,0.6956431408875207
416,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: check that entry.getIdentifier().equals(requestedId),yes,undetermined,0,0,0,yes,0.7174251845769924,yes,0.6748170452285669,yes,0.7023254883721214,yes,0.7358136578022103,yes,0.7370894150342504,yes,0.7398385964270932
417,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// TODO: RESTRICT VIOLATION,yes,undetermined,0,0,0,no,0.548526161850035,yes,0.5717283046534414,yes,0.6491670543960631,yes,0.699593702822297,yes,0.697072085368819,yes,0.6988132153424658
418,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"//TODO: assertion only, could be optimized away",yes,undetermined,0,0,0,yes,0.9732791085142743,yes,0.9931394170258894,yes,0.9946080983750332,yes,0.9956743264321154,yes,0.9955837308814113,yes,0.995936640429106
419,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"// TODO: lowercasing done here. Was done ""at random"" before; maybe not needed at all ?",yes,undetermined,0,0,0,yes,0.9933569473800422,yes,0.9931283449448444,yes,0.9963726946833183,yes,0.9968819073331957,yes,0.9967750216596037,yes,0.997076099513075
420,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"//TODO: optimize away this lookup for entities w/o unsaved-value=""undefined""",yes,undetermined,0,0,0,yes,0.7650675932798048,yes,0.7651945289220249,yes,0.789041417017903,yes,0.8092775176052187,yes,0.80647569098943,yes,0.8095156254616566
421,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// TODO: toLowerCase was not done before. Only used in Template.,yes,undetermined,0,0,0,yes,0.895861749655651,yes,0.9018647342313173,yes,0.9946079441214674,yes,0.9956665252964435,yes,0.9955949114466354,yes,0.9959346275510395
422,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"//TODO: arithmetic expressions, multiple new Foo(...)",yes,undetermined,0,0,0,yes,0.855695471746536,yes,0.8798708104741919,yes,0.9077605068558862,yes,0.9956660512919976,yes,0.9955850205612875,yes,0.9959359090409369
423,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: check that entry.getIdentifier().equals(requestedId),yes,undetermined,0,0,0,yes,0.7174251845769924,yes,0.6748170452285669,yes,0.7023254883721214,yes,0.7358136578022103,yes,0.7370894150342504,yes,0.7398385964270932
424,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// TODO: not visible to the user!,yes,undetermined,0,0,0,yes,0.9999943194138947,yes,0.9999905987016415,yes,0.9999955966920885,yes,0.9999977622039684,yes,0.9999976283112794,yes,0.9999981100998222
425,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: proxies!,yes,undetermined,0,0,0,yes,0.9834077121777216,yes,0.9999844821877368,yes,0.9999921235175425,yes,0.9999963635497877,yes,0.9999962541110078,yes,0.9999969950219422
426,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: can we limit stored procedures ?!,yes,undetermined,0,0,0,yes,0.9588242845682671,yes,0.993126631896054,yes,0.9946148776132168,yes,0.9956600984657569,yes,0.9955933738420677,yes,0.9959295058920308
427,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: formulas ?,yes,undetermined,0,0,0,no,0.01108450116238773,no,0.010983556682987627,no,0.00909444328901823,no,0.008067650457139275,no,0.007989377549034525,no,0.007263500918457884
428,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// TODO: better error message since we actually support composites if names are explicitly listed.,yes,undetermined,0,0,0,yes,0.9844503945459024,yes,0.9931410304156598,yes,0.9946177837459944,yes,0.9956664250769217,yes,0.9955867110444426,yes,0.9959398089635103
429,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: use these in methods above,yes,undetermined,0,0,0,yes,0.9999984175538958,yes,0.9999986940389654,yes,0.9999992669691428,yes,0.9999995176420056,yes,0.999999481103822,yes,0.9999995924527464
430,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"//TODO: cache the persister, this shows up in yourkit",yes,undetermined,0,0,0,yes,0.992734594699397,yes,0.9956824169070841,yes,0.996233604732658,yes,0.9966289335089458,yes,0.9967326466573404,yes,0.9969753054401757
431,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"//TODO: add referencedClass to disambiguate to FKs on the same //      columns, pointing to different tables",yes,undetermined,0,0,0,no,0.4805453341165511,no,0.4932506507675752,no,0.518262521365062,no,0.5428859479236701,no,0.5409486847688301,no,0.5446203049401179
432,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: create uk loaders for component properties,yes,undetermined,0,0,0,yes,0.9541084676763824,yes,0.9931371961010582,yes,0.9946237967124503,yes,0.9956637842431921,yes,0.995585016727425,yes,0.9959270231647785
433,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// TODO : still need to make CollectionPersisters EntityMode-aware,yes,undetermined,0,0,0,yes,0.9999946637063488,yes,0.9999834872594494,yes,0.9999906304127723,yes,0.999994257823836,yes,0.9999936017024792,yes,0.9999948899735288
434,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: terrible implementation!,yes,undetermined,0,0,0,yes,0.99999326015127,yes,0.9999834435673399,yes,0.9999883041716779,yes,0.9999916599973859,yes,0.9999910798498381,yes,0.9999927385490118
435,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"//TODO: eventually put this back in, once we think all is fixed //Object otherAlias = columnsUnique.put(qualifiedColumn, columnAlias);",yes,undetermined,0,0,0,yes,0.995372083649862,yes,0.9931337808536865,yes,0.9946125933220018,yes,0.9956614777758528,yes,0.9955933433755838,yes,0.9959293407920273
436,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// TODO: I don't really like this implementation; it would be better if // this was handled by searchForDirtyCollections(),yes,undetermined,0,0,0,yes,0.9999999631435494,yes,0.9999998988956084,yes,0.9999999391766785,yes,0.9999999627571413,yes,0.9999999589408316,yes,0.9999999689718243
437,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// TODO: check if key contains the owner ID,yes,undetermined,0,0,0,yes,0.8539873977017065,yes,0.8437885689908043,yes,0.8979209907246323,yes,0.9108205502717446,yes,0.995583077507658,yes,0.9959332187144064
438,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: cache this in an instvar,yes,undetermined,0,0,0,yes,0.9999999209770417,yes,0.999999831370731,yes,0.9999997759700322,yes,0.9999998482836873,yes,0.9999998508700573,yes,0.9999998858878414
439,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// TODO : temporary initial step towards HHH-1907,yes,undetermined,0,0,0,yes,0.6015195181679762,no,0.25724532964791513,no,0.19720770003022695,no,0.21126797315301454,no,0.20683655254360594,no,0.2025253457269708
440,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// todo : remove this once ComponentMetamodel is complete and merged,yes,undetermined,0,0,0,yes,0.999982116343907,yes,0.9999853112264888,yes,0.9999894761177006,yes,0.9999944598179339,yes,0.9999942449303623,yes,0.9999953088371552
441,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: add owner argument!!,yes,undetermined,0,0,0,yes,0.8289661874618639,yes,0.8287228395065572,yes,0.8616992092619911,yes,0.8780352654223526,yes,0.9078189831310742,yes,0.9959367687708454
442,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"//TODO handle supportsNotNullUnique=false, but such a case does not exist in the wild so far",yes,undetermined,0,0,0,yes,0.6564429425912754,no,0.5510615549369833,yes,0.5858710703189584,yes,0.5961551725241029,yes,0.5924600711539657,yes,0.5934251737409862
443,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// TODO: better error message since we actually support composites if names are explicitly listed.,yes,undetermined,0,0,0,yes,0.9844503945459024,yes,0.9931410304156598,yes,0.9946177837459944,yes,0.9956664250769217,yes,0.9955867110444426,yes,0.9959398089635103
444,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: for some dialects it would be appropriate to add the renderOrderByPropertiesSelect() to other select strings,yes,undetermined,0,0,0,yes,0.9999872124812024,yes,0.9973724834051293,yes,0.9999878965655408,yes,0.9999920839416764,yes,0.999991606377841,yes,0.999993286853295
445,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: unnecessary for databases with ANSI-style joins,yes,undetermined,0,0,0,yes,0.7339233852595706,yes,0.6639522629077407,yes,0.6592441588568079,yes,0.7028359444640767,yes,0.7003009240957468,yes,0.7056177912677677
446,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: maybe call it getRowSelection() ?,yes,undetermined,0,0,0,yes,0.999999809713779,yes,0.9999998166105878,yes,0.9999999186815264,yes,0.999999949606838,yes,0.9999999444551043,yes,0.9999999578704788
447,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: make this handle multiple collection roles!,yes,undetermined,0,0,0,yes,0.9948820781265613,yes,0.9931330796222829,yes,0.994621823315799,yes,0.995668210886389,yes,0.9955885030438074,yes,0.9959284273281002
448,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: include the rowids!!!!,yes,undetermined,0,0,0,yes,0.9999947845849895,yes,0.999987560693579,yes,0.9999940193157183,yes,0.9999965274185485,yes,0.9999967400295939,yes,0.999997409028701
449,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"// if we are still not resolved, we might represent a constant. //      needed to add this here because the allowance of //      naked-prop-refs in the grammar collides with the //      definition of literals/constants (""nondeterminism""). //      TODO: cleanup the grammar so that ""processConstants"" is always just handled from here",yes,undetermined,0,0,0,yes,0.7846905064298502,yes,0.6798586981496416,yes,0.6739713037985945,yes,0.6737918329368318,yes,0.661079452173521,yes,0.6634816058396449
450,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// TODO : or should we return 'containsTableAlias'??,yes,undetermined,0,0,0,yes,0.9999999956575085,yes,0.9999999747588477,yes,0.9999999919920339,yes,0.999999996383106,yes,0.9999999962630371,yes,0.9999999973886396
451,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,/////////////////////////////////////////////////////////////////////// // TODO : look at perhaps caching this...,yes,undetermined,0,0,0,yes,0.9999999665954348,yes,0.9999999767851889,yes,0.9999999881539379,yes,0.9999999939153973,yes,0.9999999934868807,yes,0.9999999954129979
452,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: avoid this for non-new instances where mightBeDirty==false,yes,undetermined,0,0,0,yes,0.9939256148022932,yes,0.9931235444778592,yes,0.9946130140460481,yes,0.9956774190180683,yes,0.995587744774796,yes,0.9959355991365005
453,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: theoretically non-threadsafe...,yes,undetermined,0,0,0,yes,0.9843720337783691,yes,0.9931470308716512,yes,0.9946269528790144,yes,0.995675968251022,yes,0.99558971824113,yes,0.9959296293661984
454,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// todo : look at optimizing these...,yes,undetermined,0,0,0,yes,0.9973534001133766,yes,0.9999918722771178,yes,0.9999960275363385,yes,0.9999974243956822,yes,0.9999972830527819,yes,0.9999978790961236
455,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// todo : cache this sql...,yes,undetermined,0,0,0,yes,0.9999818318800137,yes,0.999988999956356,yes,0.9999867585556755,yes,0.9999916128099287,yes,0.9999919618251063,yes,0.9999932572475932
456,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"/**
	 * TODO: Check if Mimer SQL cannot handle the way DB2 does
	 */",yes,undetermined,0,0,0,yes,0.8242140264627832,yes,0.9064916959834176,yes,0.9946128196263079,yes,0.9956599494817145,yes,0.9955838873995208,yes,0.995928612201969
457,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"//TODO: if we are using identity columns, fetch the identifier",yes,undetermined,0,0,0,yes,0.6492752249253663,yes,0.6314557707206652,yes,0.6787599994466036,yes,0.6985495380035887,yes,0.697667928436426,yes,0.6994078049597168
458,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO check there is no actual definition elemnents when a ref is defined,yes,undetermined,0,0,0,no,0.4290236913321607,no,0.5322631529957131,no,0.5519594279389898,yes,0.5868342676591796,no,0.5687029661088523,no,0.5608867265645753
459,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// table=null -> an association // - fill it in later //TODO fill in the mappings for table == null,yes,undetermined,0,0,0,no,0.3642806222026576,no,0.32999850330305597,no,0.3323114652599579,no,0.32061685357900543,no,0.31501577163248995,no,0.305439061929851
460,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// table=null -> an association - fill // it in later //TODO fill in the mappings for table == null,yes,undetermined,0,0,0,no,0.3642806222026576,no,0.32999850330305597,no,0.3323114652599579,no,0.32061685357900543,no,0.31501577163248995,no,0.305439061929851
461,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// todo : add support for READ_WRITE ( + NONSTRICT_READ_WRITE ??? ),yes,undetermined,0,0,0,yes,0.9854808661645099,yes,0.9931341999805976,yes,0.9946082642176544,yes,0.9956606320775381,yes,0.9955846298246404,yes,0.9959414760933418
462,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: return new Lock(ts);,yes,undetermined,0,0,0,yes,0.9098731026116227,yes,0.9931387827477548,yes,0.9946242912726907,yes,0.9956642058490911,yes,0.9955844261670523,yes,0.995938215146519
463,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// todo : add support for READ_WRITE ( + NONSTRICT_READ_WRITE ??? ),yes,undetermined,0,0,0,yes,0.9854808661645099,yes,0.9931341999805976,yes,0.9946082642176544,yes,0.9956606320775381,yes,0.9955846298246404,yes,0.9959414760933418
464,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// TODO : why aren't these the same?,yes,undetermined,0,0,0,yes,0.9999999940748421,yes,0.9999999839768638,yes,0.999999992911818,yes,0.9999999962349886,yes,0.9999999960606001,yes,0.999999997185963
465,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: proxies!,yes,undetermined,0,0,0,yes,0.9834077121777216,yes,0.9999844821877368,yes,0.9999921235175425,yes,0.9999963635497877,yes,0.9999962541110078,yes,0.9999969950219422
466,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: proxies!,yes,undetermined,0,0,0,yes,0.9834077121777216,yes,0.9999844821877368,yes,0.9999921235175425,yes,0.9999963635497877,yes,0.9999962541110078,yes,0.9999969950219422
467,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"//TODO: if we support multiple fetch groups, we would need //      to clone the set of lazy properties!",yes,undetermined,0,0,0,yes,0.8970293672904621,yes,0.8377031816007672,yes,0.8425058855060144,yes,0.8463386172951326,yes,0.8444770515314065,yes,0.8464823502056811
468,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO mappings.getLogicalTableName(ownerTable),yes,undetermined,0,0,0,yes,0.9628086317485955,yes,0.9931306494537816,yes,0.994626569758099,yes,0.9956676420640616,yes,0.9955848203024067,yes,0.9959349555081815
469,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: if lock.getTimestamp().equals(ts),yes,undetermined,0,0,0,no,0.489162327828775,yes,0.790249190189783,yes,0.8221797359925035,yes,0.8577301785443129,yes,0.8596968864533829,yes,0.8635348383922269
470,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"//TODO: always true for now, but not if we later decide to support elements() in the from clause",yes,undetermined,0,0,0,yes,0.98664210127465,yes,0.9931321080780049,yes,0.9946067402249609,yes,0.9956609426061198,yes,0.9955782592207217,yes,0.9959333801461372
471,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// we could move this inside if we wanted to // tolerate collection initializations during // collection dirty checking:,yes,undetermined,0,0,0,no,0.10274077589378432,no,0.04873830869624244,yes,0.9946139767604414,yes,0.9956720558917749,yes,0.9955952878545075,yes,0.9959397128858295
472,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// See if the user configured a multiplexer stack,no,undetermined,0,0,0,no,0.0009861749640659716,no,0.0011701654996330536,no,0.0009328226795976937,no,0.0007965514014332976,no,0.0008027802963532306,no,0.0007157327524590869
473,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//root entity comes *last*,no,undetermined,0,0,0,no,0.001928249930701483,no,0.0016073659544020593,no,0.0014486431854317224,no,0.0014305747652851723,no,0.001446808756410315,no,0.0012718417507828234
474,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//==elementType ??,no,undetermined,0,0,0,no,0.0077415812778349755,no,0.004933597204890805,no,0.005218161237151702,no,0.0061112206604550705,no,0.006172170137663241,no,0.005597250634069139
475,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//scan the query string for class names appearing in the from clause and replace //with all persistent implementors of the class/interface, returning multiple //query strings (make sure we don't pick up a class in the select clause!)",no,undetermined,0,0,0,no,0.03045138886751242,no,0.010959509710688285,no,0.00908739060168579,no,0.008038678572448109,no,0.008001313027909936,no,0.007267616655286605
476,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//identifier collections not supported for 1-to-many,no,undetermined,0,0,0,no,0.025767399110144855,no,0.010990933033420427,no,0.008482377091742333,no,0.0076503827958249405,no,0.007417762338098532,no,0.00669834674181922
477,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// potentialTrimCharacterArgIndex = 1 assumes that a // trim-specification has been specified.  we handle the // exception to that explicitly,no,undetermined,0,0,0,no,0.003670620351366443,no,0.010952999353806893,no,0.009097995449702684,no,0.008066463793605325,no,0.008005010129691929,no,0.007289712661645208
478,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0011622327290709787,no,0.0011638242245380203,no,0.0011173140002844785,no,0.0014774358081173686,no,0.0015026092631850257,no,0.00133634356530595
479,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if the current depth is 0, the root thing being loaded is the // many-to-many collection itself.  Here, it is alright to use // an inner join...",no,undetermined,0,0,0,no,0.07057313621781332,no,0.010990776503694387,no,0.009094531581050452,no,0.008051200680360584,no,0.007986415743715914,no,0.0072697360968132585
480,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// update removed rows fks to null,no,undetermined,0,0,0,no,0.007817783737179783,no,0.007860282508474134,no,0.007254397400348555,no,0.006846590521021982,no,0.006752753769067688,no,0.0060347170022699735
481,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//registerFunction( ""trim"", new StandardSQLFunction( ""trim"", Hibernate.STRING ) );",no,undetermined,0,0,0,no,0.0032929924440430127,no,0.010976361672831036,no,0.009108944467403873,no,0.008054929329004899,no,0.007998898129251588,no,0.007276581647054452
482,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//			buf.append( selectFragment( lhsAlias, """" ) )//ignore suffix for collection columns!",no,undetermined,0,0,0,no,0.0014059206879358556,no,0.0024205789495006036,no,0.001888315434106896,no,0.0017265630051999975,no,0.001728618307908711,no,0.001557428412154605
483,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// initialize the Set of queried identifier spaces (ie. tables),no,undetermined,0,0,0,no,0.0032508516515783676,no,0.002470252263383779,no,0.002150660918515165,no,0.001966163157866296,no,0.0019064864801756234,no,0.0016504009670530175
484,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//use suffix for the entity columns,no,undetermined,0,0,0,no,0.0017578853276393805,no,0.003839899663742321,no,0.003314814202464528,no,0.0029672084555364977,no,0.0029193455642616073,no,0.0026246873629669973
485,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we got here because we assumed that an instance // with an assigned id was detached, when it was // really persistent",no,undetermined,0,0,0,no,0.017083881699884704,no,0.010976045579159587,no,0.009104626184858758,no,0.008068098245617213,no,0.008002632636297054,no,0.007286611413149655
486,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the class hierarchy structure,no,undetermined,0,0,0,no,0.008098061905673424,no,0.008324989162407117,no,0.007138509789972647,no,0.00623063666230692,no,0.00620856987273612,no,0.005639565391254096
487,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// remove the current element from insertions. It will be added back later.,no,undetermined,0,0,0,no,0.012517965014859338,no,0.009129233661781274,no,0.00703402866865985,no,0.005813393131234761,no,0.005525276941592671,no,0.004991659155702498
488,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//private final String rootTableName;,no,undetermined,0,0,0,no,0.00395045307966005,no,0.004160604286218897,no,0.0031884687417165656,no,0.0026358628308533073,no,0.0026087677453512296,no,0.0023221261370892456
489,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// NOTE : this is being used from the process of shutting down a // SessionFactory. Specific things to consider: // (1) this clearing of the region should not propagate to // other nodes on the cluster (if any); this is the // cache-mode-local option bit... // (2) really just trying a best effort to cleanup after // ourselves; lock failures, etc are not critical here; // this is the fail-silently option bit...",no,undetermined,0,0,0,yes,0.6563497748219249,yes,0.5702781450298777,no,0.5225951025517109,no,0.48453454745396296,no,0.47109367060214397,no,0.46443048026040734
490,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//INITIALIZATION:,no,undetermined,0,0,0,no,0.0006590144322292369,no,0.0010354026967498073,no,0.0010137863060803816,no,0.0009996794460799734,no,0.0009963751691272778,no,0.0008829246608544712
491,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is persister-centric and/or EntityInfo-centric ~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.028999602749170513,no,0.010980815010552144,no,0.009099175506111017,no,0.008049138057223777,no,0.007985674036370741,no,0.00728622277145674
492,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//not null ... (start with 1) is implicit,no,undetermined,0,0,0,no,0.02655822760308283,no,0.007535637281952804,no,0.005856346986638892,no,0.005156604219400277,no,0.0051154441741919875,no,0.00462021616902271
493,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// continue loop,no,undetermined,0,0,0,no,0.0006174330082868723,no,0.0007503283818475242,no,0.000673006367109415,no,0.0006735990834800174,no,0.0006661567393455585,no,0.0005847192671123115
494,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// return existing object or initialized proxy (unless deleted),no,undetermined,0,0,0,no,0.004428575078114764,no,0.005256446716414462,no,0.004344804267927459,no,0.003927959845366476,no,0.003644485180851208,no,0.003274631283087326
495,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the list of entity names that indicate the batch number,no,undetermined,0,0,0,no,0.005869113997186553,no,0.004056810708860183,no,0.009103177514386008,no,0.008061771098909671,no,0.008003514476876526,no,0.0072808612348301245
496,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//disassembled state gets put in a new array (we write to cache by value!),no,undetermined,0,0,0,no,0.010482589992279962,no,0.010994199419621504,no,0.009113443915069935,no,0.00803290652423249,no,0.007161114571920686,no,0.006240728072663265
497,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Add these directly to the executions queue,no,undetermined,0,0,0,no,0.009623790826601586,no,0.010959591392685842,no,0.009105910435341119,no,0.008067828774874428,no,0.007988323312545835,no,0.007271322886263414
498,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Execute the SQL:,no,undetermined,0,0,0,no,0.0006462442227912411,no,0.002076567345550764,no,0.0018228230440547237,no,0.0018290062752852946,no,0.0018140181701611637,no,0.0015772332982568543
499,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//sort the updates by fk,no,undetermined,0,0,0,no,0.021473039293350114,no,0.0062757664925312115,no,0.005017991210557918,no,0.004421397745441643,no,0.0043939294631822655,no,0.0039633038673240265
500,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This could also just be true all the time...,no,undetermined,0,0,0,no,0.054437945052504357,no,0.010970598564158232,no,0.009090507327543176,no,0.008046997520214533,no,0.00798134559392196,no,0.0072727964935600095
501,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the mapping of entity names to their latest batch numbers.,no,undetermined,0,0,0,no,0.006687268121777353,no,0.0053362239771234995,no,0.006887004688089162,no,0.006350605350304302,no,0.006612518988961157,no,0.006032666098868848
502,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//chop the last union (all),no,undetermined,0,0,0,no,0.002195357135897123,no,0.0013248956245576775,no,0.0011497319020941307,no,0.0010989225301876876,no,0.0011108455165371512,no,0.000976683470587802
503,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// note that for sequential scrolling, we make the assumption that // the first persister element is the ""root entity""",no,undetermined,0,0,0,no,0.035412285681043376,no,0.010969240306541492,no,0.00909855022034564,no,0.008069181893614672,no,0.008009102314603904,no,0.007277847182717013
504,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//TODO: check this....,no,undetermined,0,0,0,yes,0.9950972177884903,yes,0.9931387706956971,yes,0.8021828672887956,yes,0.8138290007823243,yes,0.8141961251936756,yes,0.8150493142610337
505,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// for deprecated saveOrUpdateCopy(),no,undetermined,0,0,0,no,0.014221580258880673,no,0.010978497757591492,no,0.008847564873459604,no,0.00708781371498384,no,0.006998920759184692,no,0.006349286578213095
506,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//INITIALIZATION:,no,undetermined,0,0,0,no,0.0006590144322292369,no,0.0010354026967498073,no,0.0010137863060803816,no,0.0009996794460799734,no,0.0009963751691272778,no,0.0008829246608544712
507,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// 23000: Check constraint violation: {0} // 23001: Unique index or primary key violation: {0},no,undetermined,0,0,0,no,0.004530535336889567,no,0.007718537064771359,no,0.007429696179655628,no,0.007045439332068611,no,0.007367595847731497,no,0.006643895532126943
508,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the closure of all properties in the entire hierarchy including // subclasses and superclasses of this class,no,undetermined,0,0,0,no,0.01014359910496339,no,0.009671007766591822,no,0.008055313734260156,no,0.007301395733076546,no,0.007320035239031056,no,0.006625956563831734
509,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//expressionTerminators.add("",""); // deliberately excluded",no,undetermined,0,0,0,no,0.0024045797657174,no,0.003216635401662903,no,0.003247648899228153,no,0.0034012306353936135,no,0.0034398562904114226,no,0.0031672652049424036
510,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// subclass discrimination works by assigning particular // values to certain combinations of null primary key // values in the outer join using an SQL CASE,no,undetermined,0,0,0,no,0.01092115117703936,no,0.010981540428205245,no,0.009117468332128037,no,0.008071925341233832,no,0.007986688772945122,no,0.007290637876413821
511,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//tokens that close a sub expression //tokens that open a sub expression //tokens that would indicate a sub expression is a boolean expression,no,undetermined,0,0,0,no,0.009093287450750467,no,0.00863532740125698,no,0.008368513994851707,no,0.007020708053992417,no,0.007049533821475819,no,0.006302948211430258
512,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Multi-param numeric dialect functions...,no,undetermined,0,0,0,no,0.04347306306334086,no,0.010957135905719825,no,0.00909435125773447,no,0.008049257497025206,no,0.007986751673518547,no,0.007273865612864113
513,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Use theta style (for regression) // Move the node up, after the origin node.",no,undetermined,0,0,0,no,0.005034980030214937,no,0.00858574714060067,no,0.006807859301156911,no,0.0057427295073805154,no,0.006429532650226188,no,0.005834842893094
514,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Multi-param date dialect functions...,no,undetermined,0,0,0,no,0.06186172510870589,no,0.010992119989247427,no,0.009089850664778154,no,0.008055315810413015,no,0.007982973311737392,no,0.007284185305293698
515,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0011622327290709787,no,0.0011638242245380203,no,0.0011173140002844785,no,0.0014774358081173686,no,0.0015026092631850257,no,0.00133634356530595
516,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// add the main query,no,undetermined,0,0,0,no,0.002476643843202839,no,0.003945227312632277,no,0.0034693800674147363,no,0.0030866146487022322,no,0.002897775048588234,no,0.0026721031356371256
517,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// SQLException support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0031616485130454876,no,0.005211319076773351,no,0.0049006461946087924,no,0.005085624013719255,no,0.005125339576007875,no,0.004640232136925195
518,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//add the restriction to the outer select,no,undetermined,0,0,0,no,0.0008121207393638875,no,0.0010351972921451944,no,0.0008739883692963981,no,0.0006277903720209951,no,0.0006394676165203618,no,0.0005633508369772771
519,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// bit_length feels a bit broken to me. We have to cast to char in order to // pass when a numeric value is supplied. But of course the answers given will // be wildly different for these two datatypes. 1234.5678 will be 9 bytes as // a char string but will be 8 or 16 bytes as a true numeric. // Jay Nance 2006-09-22,no,undetermined,0,0,0,no,0.062316247626642174,no,0.010969097187452568,no,0.00909566997541838,no,0.008042466004397527,no,0.007977367444513304,no,0.007277719948683077
520,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This assumes you will want to ignore any update counts ,no,undetermined,0,0,0,no,0.004060027518415423,no,0.0026355786487327667,no,0.002366182763219317,no,0.002110223236153524,no,0.002039590708111076,no,0.001828082302656734
521,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//skip the FROM keyword in params,no,undetermined,0,0,0,no,0.002853038650162256,no,0.0008401657542772648,no,0.0006903101505867496,no,0.000601807817010354,no,0.0005973753135635022,no,0.000515196062731041
522,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Custom sql,no,undetermined,0,0,0,no,0.0015612581290046351,no,0.0040820556495537,no,0.004076381873537434,no,0.004376118180720686,no,0.004434775440098644,no,0.00400151010167643
523,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// return a newly loaded object,no,undetermined,0,0,0,no,0.018031232370469837,no,0.010976578686120737,no,0.009101251571944528,no,0.008054941566745055,no,0.0079911488343229,no,0.007269599078526474
524,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// make it circular-reference safe,no,undetermined,0,0,0,no,0.014152813028431537,no,0.010980294926392497,no,0.00910058793186174,no,0.008074829225738173,no,0.00799127224305668,no,0.007282010926523594
525,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//Cope with special cases of AND, NOT, ()",no,undetermined,0,0,0,no,0.012052481251421885,no,0.010972197070578192,no,0.00910366829885314,no,0.008077198837220792,no,0.008003968118888819,no,0.007275761406161993
526,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// subclass closure properties,no,undetermined,0,0,0,no,0.0068087610080175085,no,0.006868167883745598,no,0.0061351402410424576,no,0.006284247938851019,no,0.006321139040383074,no,0.005750466913203483
527,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// for dialects which are known to not support ANSI-SQL row-value-constructor syntax, // we should mutate the tree.",no,undetermined,0,0,0,no,0.021006013173804697,no,0.010987920517370544,no,0.009099301650016446,no,0.008060654109151407,no,0.007976800037180898,no,0.007267543288181636
528,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0011622327290709787,no,0.0011638242245380203,no,0.0011173140002844785,no,0.0014774358081173686,no,0.0015026092631850257,no,0.00133634356530595
529,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we have the form: trim(from trimSource). //      This is functionally equivalent to trim(trimSource) // EARLY EXIT!!!!,no,undetermined,0,0,0,no,0.010170396381590518,no,0.0069105987726562484,no,0.005412693050027661,no,0.004631112857319791,no,0.004599876720310991,no,0.004174906529957739
530,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// SUBCLASSES,no,undetermined,0,0,0,no,0.00028887095134856095,no,0.0008656944912933525,no,0.0008731021489232224,no,0.000937172075490488,no,0.0009414638865616048,no,0.0008237722651421258
531,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//need to hydrate it.,no,undetermined,0,0,0,no,0.028309369936669306,no,0.010987484720237447,no,0.009106463485055729,no,0.008066099856055862,no,0.007976829101002055,no,0.007270495366914872
532,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//starts with 1, implicitly",no,undetermined,0,0,0,no,0.007251750185818929,no,0.009951259646047452,no,0.00910471896140147,no,0.008062144968621749,no,0.007996103317061581,no,0.007291765336907726
533,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// instantiate a new instance,no,undetermined,0,0,0,no,0.002451118314782336,no,0.0036546089850455258,no,0.0033742874745234922,no,0.0033585531688730573,no,0.003361057261817335,no,0.0030056205287238135
534,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// simple nullability constraint,no,undetermined,0,0,0,no,0.0010715266823525054,no,0.0010629099536343784,no,0.003228711509741333,no,0.003430830513931437,no,0.0034516998421645485,no,0.003101194118942735
535,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//we need to upgrade the lock mode to the mode requested,no,undetermined,0,0,0,no,0.011300573877651019,no,0.010509363627779284,no,0.007844725243957663,no,0.007599896049529971,no,0.007627504802880878,no,0.00691044803664526
536,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	register the type of the out param - an Oracle specific type,no,undetermined,0,0,0,no,0.02999685043748504,no,0.01096802491933676,no,0.00907866240980987,no,0.008070028577425488,no,0.007995116005342796,no,0.007281805558986246
537,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// look for a proxy,no,undetermined,0,0,0,no,0.0020208757566305686,no,0.0019490445751545067,no,0.0016842702173070615,no,0.0014058662076634999,no,0.0014109437680672938,no,0.001241184077302406
538,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// features which change between 8i, 9i, and 10g ~~~~~~~~~~~~~~~~~~~~~~~~~~",no,undetermined,0,0,0,no,0.001116183019750985,no,0.0013474457070578498,no,0.0012291893831707017,no,0.0012479059618564052,no,0.0012436508593017001,no,0.0010949468944145913
539,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// evicts don't cascade to uninitialized collections,no,undetermined,0,0,0,no,0.005024619468969853,no,0.007253476120613882,no,0.00614818481530285,no,0.005490084849062692,no,0.005454008761086511,no,0.004936009868277985
540,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// features which remain constant across 8i, 9i, and 10g ~~~~~~~~~~~~~~~~~~",no,undetermined,0,0,0,no,0.0018783883483374296,no,0.002369032154181044,no,0.002139085608136625,no,0.002274835320592237,no,0.0022656711848472347,no,0.002015504118814214
541,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// need to treat this as if it where optimistic-lock=""all"" (dirty does *not* make sense); // first we need to locate the ""loaded"" state // // Note, it potentially could be a proxy, so perform the location the safe way...",no,undetermined,0,0,0,no,0.13276659734084575,no,0.08125232645532555,no,0.009092828268204485,no,0.008049551813279697,no,0.007996306832601012,no,0.007278477936793216
542,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//( (Column) sc.getTable().getPrimaryKey().getColumnIterator().next() ).getName();,no,undetermined,0,0,0,no,0.008886307573113233,no,0.009583995176652144,no,0.008421195833345869,no,0.00772764867771141,no,0.007695528339529478,no,0.0070112972298902905
543,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// might happen with a managed connection,no,undetermined,0,0,0,no,0.027234665566608432,no,0.010974598684681166,no,0.009102284605958763,no,0.008058352603999846,no,0.007988097818208027,no,0.007281093122097387
544,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// don't need subclass tables, because they can't appear in conditions",no,undetermined,0,0,0,no,0.08245964869759828,no,0.010976816922376181,no,0.009096936141374317,no,0.0080530456920724,no,0.007988736768149885,no,0.007268901596289904
545,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// not final-static to avoid possible classcast exceptions if using different oracle drivers.,no,undetermined,0,0,0,no,0.021134732083566306,no,0.010972581947822671,no,0.009080713674207944,no,0.008049251563900153,no,0.00799149822824698,no,0.0072630499210219355
546,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Make 100% certain that this is called before any subsequent ScheduledUpdate.afterTransactionCompletion()!!,no,undetermined,0,0,0,no,0.03047991364411061,no,0.010962861015519083,no,0.009087413805642016,no,0.008053046171362961,no,0.007976703517376582,no,0.007263063777723891
547,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//private List aliases = new ArrayList();,no,undetermined,0,0,0,no,0.0055766170248973635,no,0.00448302213938402,no,0.0038426241129834644,no,0.0032811772165804083,no,0.0032468185167357985,no,0.0029022284759613083
548,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The reason for this is SQL doesn't let you sort by an expression you are // not returning in the result set.,no,undetermined,0,0,0,no,0.09428836398895231,no,0.010974019705187115,no,0.009102980349464485,no,0.008063776887094988,no,0.007987130674420114,no,0.007268843885966376
549,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// register resolvers set via Environment property,no,undetermined,0,0,0,no,0.007658767019810328,no,0.009638776668285472,no,0.00910469360824066,no,0.008068439049632517,no,0.007995954849283534,no,0.007287282480831366
550,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// an existing collection that was either non-empty or uninitialized // is replaced by null or a different collection // (if the collection is uninitialized, hibernate has no way of // knowing if the collection is actually empty without querying the db)",no,undetermined,0,0,0,no,0.028933747003901906,no,0.01097602287134159,no,0.009105342747846818,no,0.008065755784412508,no,0.00798799715884651,no,0.007278639317253046
551,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//update all the modified entries,no,undetermined,0,0,0,no,0.0005063882682449024,no,0.0006254427434310004,no,0.0006576689479644677,no,0.0006293676559938507,no,0.0006287334776067597,no,0.0005439142157098008
552,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// special case where we need to force incloude all subclass joins,no,undetermined,0,0,0,no,0.010853335480503422,no,0.010961333402044785,no,0.008540221071349005,no,0.007724486022453387,no,0.007811904136708252,no,0.007113012210484848
553,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we did not find a collection element in the result set, so we // ensure that a collection is created with the owner's identifier, // since what we have is an empty collection",no,undetermined,0,0,0,no,0.007067184941216162,no,0.006641767659120467,no,0.0035329350162738075,no,0.0027874889049284346,no,0.002730604385703757,no,0.0025338011385729934
554,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// binary %Stream // character %Stream,no,undetermined,0,0,0,no,0.0002707720083546438,no,0.0006674000573993111,no,0.0006178715838022812,no,0.0006131823241435847,no,0.0006285753992253481,no,0.00054634786604847
555,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ignore it,no,undetermined,0,0,0,no,0.00030777415557510876,no,0.0003162494532172495,no,0.0002467722531601372,no,0.00020355913896470565,no,0.00019974574344350894,no,0.0001699757441878991
556,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//getDefaultProperties().setProperty(Environment.STATEMENT_BATCH_SIZE, NO_BATCH);",no,undetermined,0,0,0,no,0.0018875146714077001,no,0.002779184844152184,no,0.0030606063149186814,no,0.004259874741453942,no,0.004271627062178676,no,0.0038512279035845926
557,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// assumes that types are all of span 1,no,undetermined,0,0,0,no,0.0016209141483524952,no,0.0013810016757959992,no,0.0011776894481111827,no,0.001051407394061895,no,0.0010810009113364802,no,0.0009488447430746807
558,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// hibernate impelemnts cast in Dialect.java,no,undetermined,0,0,0,no,0.02120897094394208,no,0.01098484980612798,no,0.009107542324048397,no,0.00805971322173023,no,0.007987610367730692,no,0.007273012808182129
559,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// this is the root (versioned) table, and we are using version-based // optimistic locking;  if we are not updating the version, also don't // check it (unless this is a ""generated"" version column)!",no,undetermined,0,0,0,no,0.03697238594640624,no,0.010951929951958754,no,0.009081901899879716,no,0.008039318875259615,no,0.007995620153938126,no,0.007271866074375336
560,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// aggregate functions shouldn't be registered, right? //registerFunction( ""list"", new StandardSQLFunction(""list"",Hibernate.STRING) ); // stopped on $list",no,undetermined,0,0,0,no,0.004857726993370423,no,0.005853365343330439,no,0.0049024845316887845,no,0.004493113808156418,no,0.004396862824443912,no,0.003957997290861506
561,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//its the given optional object,no,undetermined,0,0,0,no,0.00585621506409032,no,0.008618462843604855,no,0.007763565715440282,no,0.007223103931002675,no,0.007207650189511024,no,0.006523197930879209
562,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the class hierarchy structure,no,undetermined,0,0,0,no,0.008098061905673424,no,0.008324989162407117,no,0.007138509789972647,no,0.00623063666230692,no,0.00620856987273612,no,0.005639565391254096
563,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//decide which ResultSet to get the property value from:,no,undetermined,0,0,0,no,0.0073173025079437334,no,0.010978579248477865,no,0.009112792008699673,no,0.008054257387594996,no,0.008006423143372974,no,0.007284908833443431
564,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// properties of this class, including inherited properties",no,undetermined,0,0,0,no,0.016465920468352047,no,0.008890652885670237,no,0.008247141616206448,no,0.007997667560571405,no,0.008007825652134119,no,0.007278523145562629
565,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// otherwise assume the parent is the the criteria that created us,no,undetermined,0,0,0,no,0.006834206791364778,no,0.007172758562060926,no,0.004830092094312232,no,0.004191432404980124,no,0.004289145964973044,no,0.0038849517486919246
566,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the closure of all columns used by the entire hierarchy including // subclasses and superclasses of this class,no,undetermined,0,0,0,no,0.007876510198316294,no,0.011001366426920584,no,0.009091500075241572,no,0.00806301726183855,no,0.008008915217483287,no,0.00726671582207296
567,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we can go straight to the first required row,no,undetermined,0,0,0,no,0.0016676864859381034,no,0.001809011366693963,no,0.0015060127477855118,no,0.0013945817867574814,no,0.001403029577868538,no,0.00123772816840643
568,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// now look up the object we are really interested in! // (this lets us correctly handle proxies and multi-row // or multi-column queries),no,undetermined,0,0,0,no,0.050850562123284454,no,0.01097081729348891,no,0.00909816376215177,no,0.008058963778227873,no,0.007989367035224786,no,0.007263197309513885
569,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//before adding to collection!,no,undetermined,0,0,0,no,0.008966065719851127,no,0.007855624105265552,no,0.00703214988338741,no,0.006284501266585267,no,0.006244276504029912,no,0.005763691575142024
570,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// discriminator column,no,undetermined,0,0,0,no,0.0028671201522917637,no,0.0017438703334039412,no,0.0017945642846258945,no,0.0019069399621760488,no,0.0019250212801072142,no,0.0017146112365772027
571,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Code to handle subclasses of topClass,no,undetermined,0,0,0,no,0.009583942228119677,no,0.010986077544721971,no,0.009078543827185719,no,0.008049347392044826,no,0.007985508597670095,no,0.007273655743690801
572,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//INITIALIZATION:,no,undetermined,0,0,0,no,0.0006590144322292369,no,0.0010354026967498073,no,0.0010137863060803816,no,0.0009996794460799734,no,0.0009963751691272778,no,0.0008829246608544712
573,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//NONE, because its the requested lock mode, not the actual! ",no,undetermined,0,0,0,no,0.0024087831502290504,no,0.003094493552571723,no,0.0023801734889134004,no,0.0023002755411851462,no,0.0016960204170667463,no,0.0015284221640266811
574,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//private final Map propertyTableNumbersByName = new HashMap();,no,undetermined,0,0,0,no,0.0036537128068662873,no,0.0045660972840568925,no,0.004010326951662355,no,0.003504636647281349,no,0.0034487612469260133,no,0.003083356815314351
575,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// conceivable that the dialect ctor could throw HibernateExceptions, so don't re-wrap",no,undetermined,0,0,0,no,0.01810614521110253,no,0.010963014277495835,no,0.009102451670103755,no,0.008058769799204862,no,0.008001361144428868,no,0.007285164373484563
576,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// CLASS + TABLE,no,undetermined,0,0,0,no,0.0009316993560384445,no,0.0008477637778196368,no,0.0006963359187509211,no,0.0005754572750623395,no,0.0005751707261378909,no,0.0005007474728792014
577,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// synchronized to avoid multi-thread access issues; defined as method synch to avoid // potential deadlock issues due to nature of code.,no,undetermined,0,0,0,no,0.037160322326348603,no,0.010974378753960904,no,0.009093236846310184,no,0.008039305225001054,no,0.007993221599763813,no,0.007282196527546549
578,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// required to exception table // iconst_0 // i,no,undetermined,0,0,0,no,0.0017466124218916768,no,0.0019867984649053053,no,0.0016390276105708646,no,0.0014137112113769847,no,0.0014162298500935222,no,0.0012551073454982137
579,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// for now, just ""re-flatten"" the metamodel since this is temporary stuff anyway (HHH-1907)",no,undetermined,0,0,0,no,0.16909703264836257,no,0.09506925168785983,no,0.009090347418136059,no,0.008058041417655365,no,0.007974990272241933,no,0.00727756035214955
580,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// checkcast // cast the bean into a raw bean,no,undetermined,0,0,0,no,0.010701914433003333,no,0.00965419323868959,no,0.008746426263470993,no,0.007964039433330117,no,0.007922660281101855,no,0.0072017420101172765
581,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// this one only really needed for badly-behaved applications! // (if the TransactionManager has a Sychronization registered, // its a noop) // (actually we do need it for downgrading locks)",no,undetermined,0,0,0,no,0.06088338435097819,no,0.010983074881618642,no,0.009099980534767653,no,0.008057311776446313,no,0.007994090082297404,no,0.007287522923748434
582,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// checkcast (case of primitive type) // invokevirtual (case of primitive type),no,undetermined,0,0,0,no,0.0023397474030749468,no,0.002490660343400359,no,0.0019850701957542915,no,0.0017841634173318285,no,0.0017982410776415745,no,0.0016009243588055464
583,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// at this point we have (drivingSqlAlias) the SQL alias of the driving table // corresponding to the given user alias.  However, the driving table is not // (necessarily) the table against which we want to apply locks.  Mainly, // the exception case here is joined-subclass hierarchies where we instead // want to apply the lock against the root table (for all other strategies, // it just happens that driving and root are the same).",no,undetermined,0,0,0,no,0.04528199802713706,no,0.010989805691128684,no,0.009095428621343828,no,0.008054249403393877,no,0.008000030015346257,no,0.007282977052865904
584,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* | this | bean | args | i | raw bean | exception | */,no,undetermined,0,0,0,no,0.009742496157554167,no,0.009017235253870165,no,0.007404851878454098,no,0.006487564292355764,no,0.006453492602538619,no,0.005858121560744671
585,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Get the first child to be considered.  Sub-classes may do this differently in order to skip nodes that // are not select expressions (e.g. DISTINCT).,no,undetermined,0,0,0,no,0.012509556494613985,no,0.00988818995273487,no,0.00842787389830129,no,0.008057601309576093,no,0.007993509806912422,no,0.007267636155877685
586,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// new // BulkAccessorException,no,undetermined,0,0,0,no,0.0011524323874586727,no,0.0015456798653536268,no,0.0013203825020007525,no,0.0011328021668317815,no,0.0011285461793092777,no,0.0009805867107047217
587,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//""as"" is not in KEYWORDS",no,undetermined,0,0,0,no,0.000492991734376373,no,0.0005459269670375181,no,0.00046312002027072767,no,0.0004308576812112185,no,0.0004359041579510393,no,0.0003769703924926495
588,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// getfield // get field ""$JAVASSIST_CALLBACK"" defined already",no,undetermined,0,0,0,no,0.0025211707824416133,no,0.0029385026092617755,no,0.0030513526981745783,no,0.0033545342517391236,no,0.003531029266658369,no,0.0031820985872174057
589,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// all DistinctRootEntityResultTransformer are considered equal ~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0002216408164829619,no,0.0002983100088826772,no,0.00026420212749855783,no,0.0002513104892945846,no,0.0002572963284115916,no,0.00022234741505728402
590,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// dup,no,undetermined,0,0,0,no,0.0036523008980329486,no,0.005504726900042388,no,0.006314442177293934,no,0.007228505873153519,no,0.007254147695472099,no,0.006603303470002272
591,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// todo : move this to SF per HHH-3517; also see HHH-1907 and ComponentMetamodel,no,undetermined,0,0,0,yes,0.9450774292051745,no,0.010970495076032044,no,0.009094071399162764,no,0.008068509756686321,no,0.007992206413002533,no,0.007288167821483206
592,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// putfield // put field ""$JAVASSIST_CALLBACK"" defined already",no,undetermined,0,0,0,no,0.0038561241536079448,no,0.004748132214304296,no,0.0049311854871762345,no,0.005431507213040615,no,0.005681505453963237,no,0.005147499921959544
593,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Configure the cache to use our TM,no,undetermined,0,0,0,no,0.0071854451793596135,no,0.007223833319155583,no,0.006048267940375828,no,0.005587572700734985,no,0.005797556092775061,no,0.005212042247789215
594,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* local variables | this | callback | */,no,undetermined,0,0,0,no,0.00732169941748383,no,0.006664183853518945,no,0.005647355014330817,no,0.005262937815298685,no,0.005017856273309432,no,0.004510983602305161
595,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// find the batch number associated with the current association, if any.",no,undetermined,0,0,0,no,0.0029511430899284113,no,0.0021306007932814404,no,0.0021961374460019965,no,0.0018947592179800322,no,0.001951714967085294,no,0.0017189389461690304
596,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// invokeinterface,no,undetermined,0,0,0,no,0.0036523008980329486,no,0.005504726900042388,no,0.006461868463342029,no,0.00788716525811375,no,0.0079850989855144,no,0.007268429553841039
597,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we *always* assume an instance with a null // identifier or no identifier property is unsaved!,no,undetermined,0,0,0,no,0.006830470719352734,no,0.005119819686735615,no,0.004364578956686456,no,0.003926401889812747,no,0.0038559652177036995,no,0.0033537465741096412
598,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// DDL support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.005970561712932206,no,0.009205169778684838,no,0.009101288728053773,no,0.008055348796357609,no,0.008001481245638098,no,0.007266355414561567
599,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// seems to not really... //	public boolean supportsRowValueConstructorSyntax() { //		return true; //	},no,undetermined,0,0,0,no,0.07565495936451687,no,0.0109968253708609,no,0.009095070025804617,no,0.008051967285769129,no,0.007982845136704704,no,0.00728941117028101
600,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// below is for Cache' that don't have str in 2007.1 there is str and we register str directly,no,undetermined,0,0,0,no,0.00499555521284799,no,0.009413070629557915,no,0.008255926184800096,no,0.007296816675651546,no,0.0073556934003451676,no,0.006640423078640515
601,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.20578690578476505,no,0.13670269420699718,no,0.13274291040411743,no,0.13589192087436133,no,0.13603243554029018,no,0.13136960479731605
602,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// byte,no,undetermined,0,0,0,no,0.010656182635558767,no,0.010990241707831873,no,0.009103516646109344,no,0.008046780571985053,no,0.008005741455760341,no,0.0072807066507445456
603,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the column doesnt exist at all.,no,undetermined,0,0,0,no,0.006665744063193229,no,0.0063847241753167295,no,0.005340208880536056,no,0.004855024332499999,no,0.004867913831600814,no,0.004398458995331106
604,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// note that %string is deprecated,no,undetermined,0,0,0,no,0.11795029502800877,no,0.06480218058178512,no,0.009110663357830475,no,0.008064203586724508,no,0.007996274779360402,no,0.0072779316865045265
605,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//If the object is already loaded, return the loaded one",no,undetermined,0,0,0,no,0.0052033555569879686,no,0.0031364977109856434,no,0.002396671964798476,no,0.002054880721772795,no,0.002076158326421989,no,0.0018555234738013588
606,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// create new lock that times out immediately,no,undetermined,0,0,0,no,0.005074620324649069,no,0.005678233773084353,no,0.00451071303316623,no,0.0046039066023145,no,0.004607257669642385,no,0.00414325294549136
607,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// convenience methods relating to operations across arrays of types...,no,undetermined,0,0,0,no,0.013799173478668674,no,0.01044276551164709,no,0.009096776235398143,no,0.008059253792129609,no,0.008007751771934074,no,0.007282935832654351
608,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we really could refresh the item if it // is not a lock, but it might be slower //return freshTimestamp < txTimestamp",no,undetermined,0,0,0,no,0.055446731414696006,no,0.010984133855582626,no,0.009101481511130808,no,0.008054383342366852,no,0.007985094033794314,no,0.007270188022313567
609,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Due to the complexity in initializing the SelectClause, do not generate one here. // If it is not found; simply return null... // // Also, do not cache since it gets generated well after we are created.",no,undetermined,0,0,0,no,0.21190377184750883,no,0.26329972182851835,no,0.2156954581312567,no,0.2281216602609476,no,0.22583242335255163,no,0.21060827522043563
610,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// DISCRIMINATOR,no,undetermined,0,0,0,no,0.0036523008980329486,no,0.0018747438929654615,no,0.0020780385771097666,no,0.0023334647268353588,no,0.002354929831862368,no,0.0021033870660343585
611,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// VersionType impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //      Note : simply returns null for seed() and next() as the only known //      application of binary types for versioning is for use with the //      TIMESTAMP datatype supported by Sybase and SQL Server, which //      are completely db-generated values...",no,undetermined,0,0,0,no,0.10652328749476321,no,0.06338252893606806,no,0.009100286491152368,no,0.00807348275489332,no,0.007980839595774373,no,0.007268170217498052
612,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // Pre-flushing section // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.003419982146395073,no,0.004233742677723774,no,0.0038409204179843245,no,0.0036957721773992697,no,0.0037036848659903437,no,0.0032566284624771426
613,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Use the lower case function name. // Remember whether we're in a SELECT clause or not.,no,undetermined,0,0,0,no,0.003985642422766332,no,0.00731701906352824,no,0.0056027437774493465,no,0.004948897059838101,no,0.004881753844388979,no,0.004443402414255374
614,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// %upper is deprecated,no,undetermined,0,0,0,no,0.06505943544501891,no,0.010988833310865117,no,0.009085076757076075,no,0.008064720820356707,no,0.00798689484086262,no,0.007272971081300977
615,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// let this take precedence if defined, since it works for // assigned identifiers",no,undetermined,0,0,0,no,0.014622205553896,no,0.010166824827069834,no,0.009021231286021529,no,0.008045717243385675,no,0.007987070700771072,no,0.007275248072999473
616,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//throw new UnsupportedOperationException(""Can't write to a readonly object"");",no,undetermined,0,0,0,no,0.012245779135111445,no,0.01097623330704288,no,0.009083432361788017,no,0.008046464415390751,no,0.008007579029991215,no,0.00726814074625119
617,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the contract of EntityTuplizer.determineConcreteSubclassEntityName says that returning null // is an indication that the specified entity-name (this.getEntityName) should be used.,no,undetermined,0,0,0,no,0.08613875714769158,no,0.010969742284624372,no,0.009078622644037476,no,0.008037745527873596,no,0.007988899399544606,no,0.007273064822419557
618,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// SUBCLASSES,no,undetermined,0,0,0,no,0.00028887095134856095,no,0.0008656944912933525,no,0.0008731021489232224,no,0.000937172075490488,no,0.0009414638865616048,no,0.0008237722651421258
619,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// according to both the ANSI-SQL and EJB3 specs, trim can either take // exactly one parameter or a variable number of parameters between 1 and 4. // from the SQL spec: // // <trim function> ::= //      TRIM <left paren> <trim operands> <right paren> // // <trim operands> ::= //      [ [ <trim specification> ] [ <trim character> ] FROM ] <trim source> // // <trim specification> ::= //      LEADING //      | TRAILING //      | BOTH // // If only <trim specification> is omitted, BOTH is assumed; // if <trim character> is omitted, space is assumed",no,undetermined,0,0,0,no,0.0028797630951562566,no,0.01097669109421257,no,0.009111713949048429,no,0.008053235355675358,no,0.007984639173863163,no,0.007269513051132185
620,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The syntax used to add a foreign key constraint to a table.,no,undetermined,0,0,0,no,0.0026056785537183283,no,0.004830577416991573,no,0.003697685761615805,no,0.0030300104294284677,no,0.003131003760576787,no,0.002790620913725762
621,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//note: it is conceptually possible that a UserType could map null to //	  a non-null value, so the following is arguable:",no,undetermined,0,0,0,no,0.03429210245874745,no,0.010990893759153228,no,0.009095206372172352,no,0.008051761643784643,no,0.007988512120362846,no,0.00727506017258656
622,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Execute the SQL:,no,undetermined,0,0,0,no,0.0006462442227912411,no,0.002076567345550764,no,0.0018228230440547237,no,0.0018290062752852946,no,0.0018140181701611637,no,0.0015772332982568543
623,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// note: interfaces is assumed to already contain HibernateProxy.class,no,undetermined,0,0,0,no,0.00514782875116254,no,0.005096631119859086,no,0.0043864373698933,no,0.0040855521560330165,no,0.004071263020033154,no,0.003650715683620149
624,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// identifier-commalist,no,undetermined,0,0,0,no,0.0027239009779670875,no,0.0035626331493234563,no,0.003853615365109204,no,0.004225001666775515,no,0.004111799785791357,no,0.003613056796923157
625,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// note: interfaces is assumed to already contain HibernateProxy.class,no,undetermined,0,0,0,no,0.00514782875116254,no,0.005096631119859086,no,0.0043864373698933,no,0.0040855521560330165,no,0.004071263020033154,no,0.003650715683620149
626,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//assembled state gets put in a new array (we read from cache by value!),no,undetermined,0,0,0,no,0.006955578386006771,no,0.0073804694136886525,no,0.006020450399929386,no,0.0052763812342061294,no,0.005135729305588649,no,0.004477983774392992
627,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we do not have to worry about queued additions to uninitialized // collections, since they can only occur for inverse collections!",no,undetermined,0,0,0,no,0.010474020904638162,no,0.0056422461545902036,no,0.004713373891379574,no,0.004310131725014556,no,0.004358947987494208,no,0.0039000405575962327
628,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// disassemble named parameters,no,undetermined,0,0,0,no,0.0086182825843444,no,0.008425368598533043,no,0.008328429692447719,no,0.008071612116245075,no,0.008003931593763402,no,0.007267002257958221
629,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if not wrappered yet, its dirty (this can't occur, because // we now always call wrap() before getting to here) // return ( ! (obj instanceof PersistentCollection) ) ? //true : searchForDirtyCollections( (PersistentCollection) obj, type );",no,undetermined,0,0,0,no,0.2632630419275849,no,0.215036800337467,no,0.16022037591077512,no,0.145276155523998,no,0.1439670060995591,no,0.13744043450575077
630,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// again, CCS did not have such a concept; but a reasonable // proximity is to clear the cache after transaction *as long as* // the underlying cache is not JTA aware.",no,undetermined,0,0,0,no,0.02231342090287834,no,0.010955999806128535,no,0.009094601383941105,no,0.008065797334989066,no,0.007979044715796193,no,0.007279853828794794
631,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Oracle driver reports to support getGeneratedKeys(), but they only // support the version taking an array of the names of the columns to // be returned (via its RETURNING clause).  No other driver seems to // support this overloaded version.",no,undetermined,0,0,0,no,0.011813694715598686,no,0.010996650045750175,no,0.009089645830075802,no,0.008049893898048006,no,0.007998008833469421,no,0.007264863403896354
632,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// again, CCS did not have such a concept; however a reasonable // proximity is to clear the cache.  For non-transaction aware // caches, we will also do a clear at the end of the transaction",no,undetermined,0,0,0,no,0.06399221277126643,no,0.010989322778142617,no,0.009114080610166593,no,0.00806240369857853,no,0.007992594630428292,no,0.007260384507564715
633,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// remove all collections for the entity from the session-level cache,no,undetermined,0,0,0,no,0.011659011301431724,no,0.005424206870639835,no,0.004582104930525746,no,0.0038909951642642293,no,0.003903952547120465,no,0.0035256063122214927
634,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// invokeinterface // callback.write*(..),no,undetermined,0,0,0,no,0.0011266091172008686,no,0.0015325816249440228,no,0.0016203172070424626,no,0.0017794735946566778,no,0.0016799260590469127,no,0.0014821929472778148
635,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// moved up from AbstractEntityPersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.01121989854291454,no,0.009938305471206525,no,0.00892242722655482,no,0.008064917609040332,no,0.007998386716349117,no,0.007288244758992968
636,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// JOINS,no,undetermined,0,0,0,no,0.0033246268600302217,no,0.01098268916377986,no,0.009114747453191597,no,0.008068743615055007,no,0.008002250385309247,no,0.007284267146887482
637,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If this is an entity and the property is the identifier property, then use getIdentifierType(). //      Note that the propertyName.equals( propertyPath ) checks whether we have a component //      key reference, where the component class property name is the same as the //      entity id property name; if the two are not equal, this is the case and //      we'd need to ""fall through"" to using the property mapping.",no,undetermined,0,0,0,no,0.06195902638220765,no,0.010982484912720669,no,0.00911774595126991,no,0.008043411887782619,no,0.007997167195416965,no,0.007273343843270297
638,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// classes mentioned in extends not available - so put it in queue,no,undetermined,0,0,0,no,0.01164821176318155,no,0.010990971703840346,no,0.009085757909334673,no,0.008064763780848269,no,0.007995129867688558,no,0.0072661200156468025
639,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is Tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.005222017797431835,no,0.004026040512082543,no,0.0031740303291583633,no,0.0028988890955783182,no,0.0029027830450137687,no,0.002595783290163902
640,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//propertyTableNumbersByName.put( prop.getName(), join );",no,undetermined,0,0,0,no,0.008863060924240171,no,0.008156257761142363,no,0.008694022115891218,no,0.00805090967903884,no,0.007983556867962517,no,0.007260121911010335
641,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Needed to bump this up to DotNode, because that is the only thing which currently // knows about the property-ref path in the correct format; it is either this, or // recurse over the DotNodes constructing the property path just like DotNode does // internally",no,undetermined,0,0,0,no,0.1236549489965754,no,0.14453828792976597,no,0.14476761612279584,no,0.14644901976146774,no,0.1397931346791028,no,0.13059138773973847
642,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Access cached SQL,no,undetermined,0,0,0,no,0.0016429715725474474,no,0.001997938375960564,no,0.0017356834147407216,no,0.0017637988795826726,no,0.0017214715920273792,no,0.0015353854628983089
643,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is tuplizer-centric, but is passed a session ~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",no,undetermined,0,0,0,no,0.007953969764272466,no,0.0060855143745244,no,0.0047436146221374875,no,0.004540025001006517,no,0.004564207975779435,no,0.004104940727016445
644,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//figure out which tables need to be fetched,no,undetermined,0,0,0,no,0.03671160117524499,no,0.010996362849481644,no,0.00910121429038495,no,0.008039863760675479,no,0.007998677166731544,no,0.00727725699929307
645,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	private final List persisters = new ArrayList();,no,undetermined,0,0,0,no,0.029542995513537555,no,0.0109935790535655,no,0.00908082424692535,no,0.008049525728875285,no,0.007973408334298807,no,0.007277710614369898
646,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//figure out which columns are needed,no,undetermined,0,0,0,no,0.015428056123584874,no,0.007782739207798918,no,0.006612454272289971,no,0.005922870267121738,no,0.005803080120340851,no,0.005296635088795859
647,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// it is possible for this method to be called during flush processing, // so make certain that we do not accidently initialize an uninitialized proxy",no,undetermined,0,0,0,no,0.031221191462928878,no,0.010987712154151156,no,0.009101846789956637,no,0.008069006568237643,no,0.007997920678762826,no,0.007269626502851051
648,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//figure out which formulas are needed,no,undetermined,0,0,0,no,0.06294542477230586,no,0.010956574583817331,no,0.009114917575521719,no,0.008049361360365975,no,0.007988988386028826,no,0.007277891491457175
649,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//get em on the second pass!,no,undetermined,0,0,0,no,0.0025717468424477185,no,0.00410249857770616,no,0.003703786407205179,no,0.0036518990149373215,no,0.0035998001864877547,no,0.0031933858546846425
650,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//render the SQL,no,undetermined,0,0,0,no,0.0020687968900628866,no,0.0035522019455724516,no,0.0034432846412023104,no,0.005313647525853215,no,0.005449881184920672,no,0.004948833847255974
651,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// local cache, so we use synchronization",no,undetermined,0,0,0,no,0.0035332354333494098,no,0.0035426043736086973,no,0.00284154441435436,no,0.0024122965152798474,no,0.0024491761039495234,no,0.002147029497716677
652,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// SQL strings,no,undetermined,0,0,0,no,0.003684306300804167,no,0.005192665845276777,no,0.004961275539844294,no,0.004911703595831828,no,0.0049130815380884615,no,0.004455738037608035
653,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*public static Object[] clone(Class elementClass, Object[] array) {
		Object[] result = (Object[]) Array.newInstance( elementClass, array.length );
		System.arraycopy(array, 0, result, 0, array.length);
		return result;
	}*/",no,undetermined,0,0,0,no,0.0033232678812661126,no,0.0030003141132273954,no,0.002588758863097326,no,0.00218297876362407,no,0.0021582713210236398,no,0.0019205172440521744
654,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// IDENTITY support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0038055099842015973,no,0.006290250142500855,no,0.006302838389877842,no,0.006230431483934431,no,0.006337917602018714,no,0.005713957596470157
655,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if there is no resulting row, return null",no,undetermined,0,0,0,no,0.000569005907974561,no,0.000516406131913155,no,0.000400115553824779,no,0.00034659149899464133,no,0.0003530267316360195,no,0.00029790343586282334
656,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// *load_1 // each type,no,undetermined,0,0,0,no,0.0029773507893143484,no,0.002768880098153857,no,0.002273454380339381,no,0.002271958126983886,no,0.002280034897017661,no,0.0020448328320852127
657,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// unfortunately not really safe to normalize this // to 1 as an initial value like we do the others // because we would not be able to control this if // we are using a sequence...,no,undetermined,0,0,0,no,0.05967994850960029,no,0.010991794590513445,no,0.009090567461556308,no,0.008060842249078678,no,0.007975385791264685,no,0.007266795607413993
658,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0036523008980329486,no,0.005504726900042388,no,0.006461868463342029,no,0.00788716525811375,no,0.0079850989855144,no,0.007268429553841039
659,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// select topic, syntax from information_schema.help // where section like 'Function%' order by section, topic // // see also ->  http://www.h2database.com/html/functions.html",no,undetermined,0,0,0,no,0.0025807150009469425,no,0.0038223095100014233,no,0.003121426325023462,no,0.0026297974480811916,no,0.0026334428959081026,no,0.0023428024813773813
660,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The optional SQL string defined in the where attribute,no,undetermined,0,0,0,no,0.0010217909145865025,no,0.0010721083064250615,no,0.0007841532822830747,no,0.0006876325693991976,no,0.0008200670633811014,no,0.0007201568568045212
661,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//pass this as an argument only to avoid double looking,no,undetermined,0,0,0,no,0.0025731140588270357,no,0.0025735542823756767,no,0.002067772609517011,no,0.0017906533253580332,no,0.001772373521729498,no,0.0017594056195260283
662,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// for version properties marked as being generated, make sure they are ""always"" // generated; aka, ""insert"" is invalid; this is dis-allowed by the DTD, // but just to make sure...",no,undetermined,0,0,0,no,0.053604433396095275,no,0.010987827234720539,no,0.009079555666448191,no,0.008057275526956505,no,0.00797862091254683,no,0.007276375958618273
663,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// added this caching as I noticed that getType() is being called multiple times...,no,undetermined,0,0,0,no,0.04586537451309081,no,0.010997465358990703,no,0.00910275039121556,no,0.008042597441809615,no,0.007989213143744177,no,0.007274640483885556
664,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//information about lazy properties of this class,no,undetermined,0,0,0,no,0.09091924258247513,no,0.010992303488070227,no,0.009098645810209959,no,0.008055937817791403,no,0.007989019501587378,no,0.00726972336840954
665,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If there are any scalars (non-entities) selected, render the select column aliases.",no,undetermined,0,0,0,no,0.0018832024605063287,no,0.0024561043311421165,no,0.002221431773045541,no,0.002246872661582302,no,0.002242453940956461,no,0.001993375024788013
666,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//information about all columns/formulas in class hierarchy,no,undetermined,0,0,0,no,0.007013218004933391,no,0.010358651851606917,no,0.009104865142316829,no,0.008058484670492343,no,0.007993937881656116,no,0.007263814839873236
667,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Inner classes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.002559435220755832,no,0.002817114265807261,no,0.002730193209012714,no,0.0026403992954440714,no,0.002658881189488797,no,0.002382866251794019
668,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ( (Column) discrim.getColumnIterator().next() ).setType(type);,no,undetermined,0,0,0,no,0.0058955883202960755,no,0.0063823428050275004,no,0.0056036319065675515,no,0.005448525840302838,no,0.005608779283553629,no,0.005069084438439377
669,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// saveOrUpdateCopy() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.003697584464565059,no,0.004580318408068663,no,0.004437259774740605,no,0.004552848076803018,no,0.004571026210489164,no,0.004097419766382173
670,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// dynamic filters attached to the class-level,no,undetermined,0,0,0,no,0.015406181155970932,no,0.010957571724104507,no,0.009097854608149804,no,0.00806635489145455,no,0.007993520725370351,no,0.007274932991846325
671,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// the loaded owner will be set to null after the collection is removed, // so capture its value as the affected owner so it is accessible to // both pre- and post- events",no,undetermined,0,0,0,no,0.004296975747671451,no,0.004973588684300879,no,0.003980449016909838,no,0.0036035637058513988,no,0.003940051695605068,no,0.004388411747184139
672,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0641280735528765,no,0.010988435534997185,no,0.009100582785933191,no,0.008064914798189337,no,0.007987322895229985,no,0.007268418886846721
673,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// assume we are in an auto-commit state,no,undetermined,0,0,0,no,0.0016641058328698175,no,0.0015994526787819225,no,0.0012791289339056996,no,0.001143605165841887,no,0.001073567283053544,no,0.0009443299906710076
674,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// CUSTOM SQL,no,undetermined,0,0,0,no,0.0015612581290046351,no,0.0040820556495537,no,0.004076381873537434,no,0.004376118180720686,no,0.004434775440098644,no,0.00400151010167643
675,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// cascade first, so that all unsaved objects get their // copy created before we actually copy //cascadeOnMerge(event, persister, entity, copyCache, Cascades.CASCADE_BEFORE_MERGE);",no,undetermined,0,0,0,no,0.0020837854435892234,no,0.004036457371225124,no,0.003609569295139275,no,0.0031159940953751396,no,0.0030473083653299116,no,0.002711613353582786
676,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// model.getKey().setType( new Type( model.getIdentifier() ) );,no,undetermined,0,0,0,no,0.013112016843161333,no,0.010987208669228686,no,0.00909942788206725,no,0.008053403786845298,no,0.007993675494296502,no,0.007281035298359188
677,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is Tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.005222017797431835,no,0.004026040512082543,no,0.0031740303291583633,no,0.0028988890955783182,no,0.0029027830450137687,no,0.002595783290163902
678,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The syntax used to add a column to a table,no,undetermined,0,0,0,no,0.003978288270592226,no,0.010526682583016436,no,0.008552344080042525,no,0.006663804967350728,no,0.006624369454608987,no,0.006125439518538907
679,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// simple, because we can't have a one-to-one or a collection  // (or even a property-ref) in a composite-element:",no,undetermined,0,0,0,no,0.008115004236160362,no,0.008140509588182132,no,0.004424598286723781,no,0.0037331280190227344,no,0.00373444243806064,no,0.0031709886070061433
680,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Completely optional cascading drop clause.,no,undetermined,0,0,0,no,0.006202581097434639,no,0.010968975817387023,no,0.009091745674481174,no,0.008051381995848999,no,0.007995059891622873,no,0.007284913470462194
681,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// during deserialization, we need to reconnect all proxies and // collections to this session, as well as the EntityEntry and // CollectionEntry instances; these associations are transient // because serialization is used for different things.",no,undetermined,0,0,0,no,0.07982183734073041,no,0.010981373594690686,no,0.009087140428623125,no,0.008050116208969074,no,0.008003770074417547,no,0.007266667787680198
682,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// PROPERTIES,no,undetermined,0,0,0,no,0.005377607631194809,no,0.005100804320321773,no,0.004930592196729065,no,0.00516214485141379,no,0.005224368233705591,no,0.0047147296611339635
683,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//sqlResultTypes = ( Type[] ) sqlResultTypeList.toArray( new Type[sqlResultTypeList.size()] );,no,undetermined,0,0,0,no,0.019276803911380765,no,0.010991200836141584,no,0.00910036853533686,no,0.008062330304609941,no,0.007978499339838898,no,0.007261760787223043
684,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0036523008980329486,no,0.005504726900042388,no,0.006461868463342029,no,0.00788716525811375,no,0.0079850989855144,no,0.007268429553841039
685,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// potentialTrimCharacterArgIndex = 1 assumes that a // trim-specification has been specified.  we handle the // exception to that explicitly,no,undetermined,0,0,0,no,0.003670620351366443,no,0.010952999353806893,no,0.009097995449702684,no,0.008066463793605325,no,0.008005010129691929,no,0.007289712661645208
686,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// IDENTIFIER,no,undetermined,0,0,0,no,0.0027239009779670875,no,0.0035626331493234563,no,0.003853615365109204,no,0.004225001666775515,no,0.004111799785791357,no,0.003613056796923157
687,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// We call getKeyFromResultSet() here so that we can know the // key value upon which to perform the breaking logic.  However, // it is also then called from getRowFromResultSet() which is certainly // not the most efficient.  But the call here is needed, and there // currently is no other way without refactoring of the doQuery()/getRowFromResultSet() // methods",no,undetermined,0,0,0,no,0.5134569490159284,yes,0.615643008942761,yes,0.6658484193232621,yes,0.6807207597157706,yes,0.6711120027595391,yes,0.6680059119715949
688,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// VERSION,no,undetermined,0,0,0,no,0.006385531622029708,no,0.007262900656608625,no,0.007250074195821753,no,0.007169081587545386,no,0.007143566505276777,no,0.006501595480915559
689,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//operations which cascade as far as the collection also cascade to collection elements,no,undetermined,0,0,0,no,0.004331550674187549,no,0.006210498886027431,no,0.0027935759172541927,no,0.002224640610171383,no,0.0022430651066205546,no,0.0020207992526308153
690,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//WHERE STRING,no,undetermined,0,0,0,no,0.013454870906858792,no,0.008069301351694102,no,0.006366232974775539,no,0.005551679284112093,no,0.005675658961166175,no,0.005132119534148656
691,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The loop ensures atomicity of the // select + update even for no transaction // or read committed isolation level,no,undetermined,0,0,0,no,0.0013919708618020219,no,0.001432662378828642,no,0.0011727302819939105,no,0.0009563371964193251,no,0.0011170659612579556,no,0.0009859914170417007
692,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// SUBCLASS PROPERTY CLOSURE,no,undetermined,0,0,0,no,0.008144183724941176,no,0.007670710668509938,no,0.006794168866918559,no,0.006789813182321206,no,0.006876950401286065,no,0.006247500038023222
693,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// in an effort to avoid concurrent-modification-exceptions (from // potential recursive calls back through here as a result of the // eventual call to PersistentCollection#endRead), we scan the // internal loadingCollections map for matches and store those matches // in a temp collection.  the temp collection is then used to ""drive"" // the #endRead processing.",no,undetermined,0,0,0,no,0.027838683712639468,no,0.0109884455301466,no,0.009102265617330348,no,0.008056696715455308,no,0.007988065734235718,no,0.007265110095439915
694,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//before add :-),no,undetermined,0,0,0,no,0.0014990151707313672,no,0.0020274693751679914,no,0.002392884688401798,no,0.002279821119837892,no,0.0022832111692811423,no,0.0021648817699539157
695,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// the configured transaction-factory says it only supports // local callback mode, so no sense attempting to register a // JTA Synchronization",no,undetermined,0,0,0,no,0.00930113784210925,no,0.008603426735853575,no,0.006460522037089415,no,0.0050210494968681825,no,0.005542765365359189,no,0.0050656382399408804
696,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Handle any filters applied to the class level,no,undetermined,0,0,0,no,0.008951369286740141,no,0.005334719455189091,no,0.007031870542509299,no,0.006523160002597338,no,0.006488329386434141,no,0.005892286515974458
697,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// sybase driver (jConnect) throwing NPE here in certain // cases, but we'll just handle the general ""unexpected"" case",no,undetermined,0,0,0,no,0.03636326772143227,no,0.010957881784882445,no,0.009093309693112573,no,0.008064942266291288,no,0.008009361372199921,no,0.007290415782314612
698,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// only one-to-one is lazy fetched,no,undetermined,0,0,0,no,0.0035231002585158705,no,0.002087202469099016,no,0.001824600669657716,no,0.0016906594355218152,no,0.0017040538599191269,no,0.001516511466287864
699,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// replicate does cascade to uninitialized collections,no,undetermined,0,0,0,no,0.005947369567817798,no,0.010984334214816219,no,0.009099171494858099,no,0.008061386357890287,no,0.00800097623200688,no,0.007276685325769426
700,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//note early exit here:,no,undetermined,0,0,0,no,0.018366683103836746,no,0.010975207618519925,no,0.009079186627970193,no,0.008067628943481675,no,0.007984205734167936,no,0.0072864740529168
701,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/**
	 * Translates an AST join type (i.e., the token type) into a JoinFragment.XXX join type.
	 *
	 * @param astJoinType The AST join type (from HqlSqlTokenTypes or SqlTokenTypes)
	 * @return a JoinFragment.XXX join type.
	 * @see JoinFragment
	 * @see SqlTokenTypes
	 */",no,undetermined,0,0,0,no,0.30438973042122264,no,0.13412864803752486,no,0.11494952372413335,no,0.15663873084102248,no,0.15707329263796793,no,0.15212079228700984
702,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// NOTE: this assumes something about how propertySelectFragment is implemented by the subclass!,no,undetermined,0,0,0,no,0.34068098220759996,no,0.20360740020513568,no,0.17957735055641633,no,0.1748834397027763,no,0.17378618521626807,no,0.16878232467339227
703,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//deliberately ignore return value!,no,undetermined,0,0,0,no,0.000749482701498373,no,0.0008712643586649134,no,0.0007903155505089264,no,0.0007403188346157542,no,0.000733815186193297,no,0.0006393301579036977
704,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//strip leading "", """,no,undetermined,0,0,0,no,0.0019651936256530186,no,0.0021916572454792455,no,0.0020502353898247507,no,0.0021570947532728014,no,0.0021670034332423316,no,0.0019291622777456356
705,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if the metadata allowed proxy creation and caller did not request forceful eager loading, // generate a proxy",no,undetermined,0,0,0,no,0.003403611969319406,no,0.002432714060315862,no,0.0017924976406289157,no,0.0016837854706727223,no,0.0016948168909285272,no,0.001406974933638285
706,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if there is no resulting row, return null",no,undetermined,0,0,0,no,0.000569005907974561,no,0.000516406131913155,no,0.000400115553824779,no,0.00034659149899464133,no,0.0003530267316360195,no,0.00029790343586282334
707,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If this from element is a collection and the path is a collection property (maxIndex, etc.) then // generate a sub-query.",no,undetermined,0,0,0,no,0.03279113098181862,no,0.01097482325456043,no,0.009093311191349162,no,0.008058701375055995,no,0.0079969466019394,no,0.0072846038961278245
708,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//otherwise return the ""hydrated"" state (ie. associations are not resolved)",no,undetermined,0,0,0,no,0.004729644332919369,no,0.0031792853970630383,no,0.0020937778810088364,no,0.0018281648555727214,no,0.0018200610482870113,no,0.0016282337063764838
709,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The name of the SQL function that transforms a string to lowercase,no,undetermined,0,0,0,no,0.01209278065739097,no,0.010975768593507362,no,0.0091014240135249,no,0.008058190658758268,no,0.007994418312798467,no,0.007280659713102976
710,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//null owner ok??,no,undetermined,0,0,0,no,0.00012207617715927427,no,0.000234769378128647,no,0.00023192093697239116,no,0.0003980440677877706,no,0.0005109520076491333,no,0.0006881010183540838
711,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// essentially, if the real session is closed allow any // method call to pass through since the real session // will complain by throwing an appropriate exception; // NOTE that allowing close() above has the same basic effect, //   but we capture that there simply to perform the unbind...",no,undetermined,0,0,0,no,0.009388900545612708,no,0.00949918485869314,no,0.007934548173473829,no,0.007463484351144892,no,0.007055055725004374,no,0.006380049953065379
712,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// automatically makes a column with the default name if none is specifed by XML,no,undetermined,0,0,0,no,0.0034920536484518735,no,0.0036237700812426503,no,0.0029727665640136534,no,0.002488146467608043,no,0.0020133692864109853,no,0.001789311671593235
713,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// just ignore,no,undetermined,0,0,0,no,0.00024239081524421574,no,0.00024087311172671754,no,0.00019474683892236363,no,0.00016781703396971442,no,0.00016712907651180193,no,0.0001397707161826479
714,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this is the exception returned by ReflectHelper.getConstructor() if it cannot // locate an appropriate constructor,no,undetermined,0,0,0,no,0.01191405210628832,no,0.010973535250731954,no,0.009095943564342335,no,0.008068526452420849,no,0.007997668573201363,no,0.00728840813550706
715,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// ok in normal Hibernate usage to delete a detached entity; JPA however // forbids it, thus this is a hook for HEM to affect this behavior",no,undetermined,0,0,0,no,0.09537400665573227,no,0.010967646034860161,no,0.009094296061120943,no,0.008067737281926068,no,0.008003927185950978,no,0.0072712669755844
716,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// null sql means that the only lazy properties // are shared PK one-to-one associations which are // handled differently in the Type#nullSafeGet code...,no,undetermined,0,0,0,no,0.018645692561441128,no,0.010969752243606643,no,0.008986344309568538,no,0.007975265255523608,no,0.007840345073180455,no,0.0071757369838510695
717,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if the property mapping consists of all formulas,  // make it non-updateable",no,undetermined,0,0,0,no,0.004035535226535797,no,0.005281280437752458,no,0.006009605748195133,no,0.005773311625374366,no,0.005913968277235861,no,0.0053592282140009296
718,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// the user specifically supplied insert=""true"", // which constitutes an illegal combo",no,undetermined,0,0,0,no,0.0026447512875665278,no,0.0030450628563456427,no,0.0025594274623323473,no,0.002410244392788376,no,0.0024064293049364215,no,0.0021559758257754156
719,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if the property mapping consists of all formulas,  // make it insertable",no,undetermined,0,0,0,no,0.007016276374109384,no,0.009254280130924226,no,0.00829428823441292,no,0.007972219675137069,no,0.008001549482501438,no,0.007275685992312334
720,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//it might be an unwrapped collection reference! //try to find a wrapper (slowish),no,undetermined,0,0,0,no,0.019155194817280893,no,0.010971843689907257,no,0.009083248833475558,no,0.00805605244168606,no,0.007991527436298006,no,0.007283750334852507
721,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Custom SQL,no,undetermined,0,0,0,no,0.0015612581290046351,no,0.0040820556495537,no,0.004076381873537434,no,0.004376118180720686,no,0.004434775440098644,no,0.00400151010167643
722,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//tableName = mappings.getNamingStrategy().propertyToTableName( className, path );",no,undetermined,0,0,0,no,0.0015061554650585567,no,0.0036585403282836846,no,0.003185357239988456,no,0.003065416146805786,no,0.003078238866417142,no,0.0027350038991977767
723,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*package*/,no,undetermined,0,0,0,no,0.004437760287425697,no,0.004876701033127142,no,0.004453796219161608,no,0.004528643871969353,no,0.004494747150569872,no,0.004042588878453024
724,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// return,no,undetermined,0,0,0,no,0.0007108479426811011,no,0.0005626488816341576,no,0.0004678183472785233,no,0.00040429721458336174,no,0.00040553700375767915,no,0.0003555070972592494
725,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// the entry will be removed after the flush, and will no longer // override the stale snapshot // This is now handled by removeEntity() in EntityDeleteAction //persistenceContext.removeDatabaseSnapshot(key);",no,undetermined,0,0,0,no,0.007789485326770335,no,0.0036598890483919696,no,0.003631076141269634,no,0.0028174447833029933,no,0.002779260149338152,no,0.0024785289665529182
726,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//bad cast,no,undetermined,0,0,0,no,0.04167972073589185,no,0.010977822302220415,no,0.009098541935886916,no,0.008064818180462785,no,0.007985707118039996,no,0.007279499187996903
727,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*ArrayList list = new ArrayList();
			list.addAll( getKey().getConstraintColumns() );
			list.addAll( getIndex().getConstraintColumns() );
			getCollectionTable().createUniqueKey(list);*/",no,undetermined,0,0,0,no,0.008119360701110087,no,0.006924221648175721,no,0.006089186482637552,no,0.0054893607287512455,no,0.005435199923676889,no,0.00488686208633976
728,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//property-refs for associations defined on a //component are not supported, so no need to slice",no,undetermined,0,0,0,no,0.027266280489948176,no,0.01098263919823473,no,0.009107784664382255,no,0.00806944152162409,no,0.007993671379691683,no,0.007278694413628182
729,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we have an embedded composite identifier,no,undetermined,0,0,0,no,0.008013472856084817,no,0.006710687950146484,no,0.004115918311393399,no,0.003958496580064157,no,0.003882970815834462,no,0.0034373542632148858
730,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if there is no property-ref, assume the join //is to the subclass table (ie. the table of the //subclass that the association belongs to)",no,undetermined,0,0,0,no,0.008426453490951773,no,0.004057203803384505,no,0.003468478958197212,no,0.0037936647814032567,no,0.003390648155686783,no,0.0029248231975343786
731,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//stops flush being called multiple times if this method is recursively called,no,undetermined,0,0,0,no,0.03472908525006059,no,0.010998363258964687,no,0.009088020452714136,no,0.008073504994265169,no,0.00799364700981626,no,0.007272133728850977
732,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Create a new FROM node for the referenced class.,no,undetermined,0,0,0,no,0.004179497116478456,no,0.0032511959596636655,no,0.0038642447215349617,no,0.0035744510573166455,no,0.004894847053955816,no,0.0038889155975462817
733,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Custom sql,no,undetermined,0,0,0,no,0.0015612581290046351,no,0.0040820556495537,no,0.004076381873537434,no,0.004376118180720686,no,0.004434775440098644,no,0.00400151010167643
734,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// performance op to avoid the array search,no,undetermined,0,0,0,no,0.0033252651194872708,no,0.003912026533589086,no,0.002882320723429993,no,0.002472052193957966,no,0.002453886320614139,no,0.002181981387284235
735,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// now get an existing proxy for each row element (if there is one),no,undetermined,0,0,0,no,0.0005432638682628393,no,0.00048200218738373655,no,0.0003227516602452483,no,0.00026488162881314865,no,0.0002658323768468181,no,0.00023380931662716727
736,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ORPHAN DELETE (used for programmer error detection),no,undetermined,0,0,0,no,0.010572317053552065,no,0.010974023397205525,no,0.00909727942799531,no,0.00805453801539526,no,0.008001613701456356,no,0.007284366871397812
737,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// empty means no scoping,no,undetermined,0,0,0,no,0.0004928974100757703,no,0.0007201092652430891,no,0.0006417536283842651,no,0.0005898092382412267,no,0.0005921042517268929,no,0.0005152617673609243
738,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//Enable for HHH-440, which we don't like:",no,undetermined,0,0,0,no,0.00967287328682807,no,0.0017570876998421819,no,0.0009019718990620811,no,0.0007654789859326682,no,0.0007545016141749683,no,0.0006661064021850874
739,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*(LockMode) anything*/,no,undetermined,0,0,0,no,0.0011490734398127314,no,0.001250513058951385,no,0.0011244170004205865,no,0.0011323091316377694,no,0.001136835813720716,no,0.0010122963213886576
740,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//this.forceCacheRefresh = forceCacheRefresh;,no,undetermined,0,0,0,no,0.010358309598248858,no,0.005778328137354053,no,0.001690050431674278,no,0.002124246986513711,no,0.0020472981116130655,no,0.001855013037669199
741,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// this is a collection initializer, so we must create a collection // for each of the passed-in keys, to account for the possibility // that the collection is empty and has no rows in the result set",no,undetermined,0,0,0,no,0.016722961705039233,no,0.0109817121790975,no,0.0078714205349041,no,0.005829932187632061,no,0.006271301261469652,no,0.005754126875471173
742,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// an ""embedded"" component (composite ids and unique) // note that this does not handle nested components",no,undetermined,0,0,0,no,0.10062877063245883,no,0.09918651670657976,no,0.009093071985174039,no,0.008074435307892666,no,0.007991791022171952,no,0.00726418432099005
743,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// and perform the load,no,undetermined,0,0,0,no,0.004256308870639574,no,0.003416314197090528,no,0.002626662680279058,no,0.0023767838762011207,no,0.002392588695057042,no,0.002126688388313042
744,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ALIASES,no,undetermined,0,0,0,no,0.0020673897058752434,no,0.0030268636584364957,no,0.00339115932122617,no,0.0034400045161462264,no,0.0034478648767079707,no,0.0030891412533184596
745,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// cache these since they are stateless // this one could even be static...,no,undetermined,0,0,0,no,0.21970620124898327,no,0.2512889569986996,no,0.24592330959021896,no,0.24227991421155434,no,0.24131543161021782,no,0.23006221947420682
746,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// a nested composite element,no,undetermined,0,0,0,no,0.0071876445170961836,no,0.00654430373957058,no,0.003757470927485871,no,0.0036194761480318467,no,0.0036015760337013195,no,0.0032388634441414587
747,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is tuplizer-centric, but is passed a session ~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",no,undetermined,0,0,0,no,0.007953969764272466,no,0.0060855143745244,no,0.0047436146221374875,no,0.004540025001006517,no,0.004564207975779435,no,0.004104940727016445
748,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Must occur after resolving identifiers!,no,undetermined,0,0,0,no,0.005180877817530052,no,0.0065609716123912285,no,0.006406239725541153,no,0.006770617291734094,no,0.006906394896614516,no,0.006322752693504637
749,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Get the persister for the _subclass_,no,undetermined,0,0,0,no,0.013825870831629436,no,0.009096112922462438,no,0.007862701242385018,no,0.006135377596279573,no,0.0060597306557018385,no,0.0054819223140134205
750,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aliases for composite-id's,no,undetermined,0,0,0,no,0.011216564211723278,no,0.009949805153050354,no,0.007200348921413634,no,0.00655423186670246,no,0.0067138009866266925,no,0.006028539771746135
751,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//		SQLQueryParser parser = new SQLQueryParser( //				sqlQuery, //				processor.getAlias2Persister(), //				processor.getAlias2Return(), //				aliases, //				collAliases, //				collPersisters, //				suffixes, //				collSuffixes //		); // //		sql = parser.process(); // //		namedParameterBindPoints = parser.getNamedParameters();",no,undetermined,0,0,0,no,0.004883146721393324,no,0.005498531806281983,no,0.005189443967574656,no,0.005291199706561991,no,0.0052989126378515895,no,0.004800871255668442
752,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Fetch embedded identifiers propertynames from the ""virtual"" identifier component",no,undetermined,0,0,0,no,0.006053420960550392,no,0.003494884097376757,no,0.0029511482746172003,no,0.0026043752426337485,no,0.00255377853969793,no,0.002227901009817491
753,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we need to grab the version value from the entity, otherwise // we have issues with generated-version entities that may have // multiple actions queued during the same flush",no,undetermined,0,0,0,no,0.033038791297679046,no,0.010981397269886308,no,0.009112271257223189,no,0.00804324072876305,no,0.00799096886106986,no,0.007290535616998583
754,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// embedded composite ids ( alias.idname1, alias.idname2 )",no,undetermined,0,0,0,no,0.01207620072550846,no,0.01098536492345831,no,0.00711574257911385,no,0.006447752733167943,no,0.006451619670037266,no,0.005849047503996178
755,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// NOTE: we need to do the wrap here even if its not ""dirty"", // because collections need wrapping but changes to _them_ // don't dirty the container. Also, for versioned data, we // need to wrap before calling searchForDirtyCollections",no,undetermined,0,0,0,no,0.100565184974375,no,0.04932076599098664,no,0.0091011312901574,no,0.008063839078545009,no,0.008004608226451165,no,0.007269258544434161
756,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// TODO: skip formulas?,no,undetermined,0,0,0,yes,0.9641888671153204,no,0.010982167605272172,no,0.009109969385321945,no,0.008046438740288797,no,0.007995465923647584,no,0.007286134573195513
757,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// GUID support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.008536450356792357,no,0.010956466982036641,no,0.008870195627723702,no,0.007531277946007438,no,0.007437394555520648,no,0.0067441054352208275
758,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// invokeinterface // invoke Enabled.getInterceptFieldCallback(),no,undetermined,0,0,0,no,0.0019644681594873288,no,0.002815976125557844,no,0.0031245939124428627,no,0.003383232408157896,no,0.003418900569545976,no,0.0030699519812043925
759,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// hibernate seems to ignore this type...,no,undetermined,0,0,0,no,0.025134338436637173,no,0.01096128628060809,no,0.009093718009080312,no,0.00805271419123782,no,0.007976045669666185,no,0.0072734883538206774
760,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//don't need filters for the static loaders,no,undetermined,0,0,0,no,0.02720235514169528,no,0.010997663485762199,no,0.009112943375179766,no,0.008064475405004606,no,0.007995209516217152,no,0.007274300044195994
761,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// The user requested a ""greater"" (i.e. more restrictive) form of // pessimistic lock",no,undetermined,0,0,0,no,0.0028604238653083965,no,0.003349813936382757,no,0.0032276570213530227,no,0.003398835314412142,no,0.0034414474299951344,no,0.003105386702384998
762,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//do two passes, for collection property-ref!",no,undetermined,0,0,0,no,0.03214827661396155,no,0.010981843585689991,no,0.0091166899175334,no,0.008053781594584405,no,0.007986580964262259,no,0.007290785544466098
763,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*public boolean dropTemporaryTableAfterUse() {
		//we have to, because postgres sets current tx
		//to rollback only after a failed create table
		return true;
	}*/",no,undetermined,0,0,0,no,0.005180832358715511,no,0.0028435735596750904,no,0.002069486712395975,no,0.0016440938917982875,no,0.001642663107585068,no,0.0014538861317319725
764,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// select the correct row by either pk or rowid,no,undetermined,0,0,0,no,0.015100407772161943,no,0.010971054037789824,no,0.009098653819904354,no,0.008059319013179102,no,0.008002955953601313,no,0.00727931184767942
765,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//			optimizer = getFactory().getSettings().getBytecodeProvider().getReflectionOptimizer( //					mappedClass, getterNames, setterNames, propTypes //			);",no,undetermined,0,0,0,no,0.0036523008980329486,no,0.005504726900042388,no,0.006461868463342029,no,0.00788716525811375,no,0.0079850989855144,no,0.007268429553841039
766,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//TODO: eventually, rowIdName[j]",no,undetermined,0,0,0,yes,0.9476282441666536,no,0.01096571052858967,no,0.009112292747991173,no,0.008065421337735763,no,0.007996486345948167,no,0.007278347490420732
767,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//include the discriminator and class-level where, but not filters",no,undetermined,0,0,0,no,0.018514355498134228,no,0.008753657681630235,no,0.008649375784833022,no,0.007566202559182687,no,0.0077106165625218616,no,0.006985164333992141
768,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//lazy = !join;,no,undetermined,0,0,0,no,0.0056667673820716925,no,0.002721449545963455,no,0.0028659928096327362,no,0.0037269796199752127,no,0.003776126048279361,no,0.0034229184368762505
769,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//not absolutely necessary, but helps for some //equals()/hashCode() implementations",no,undetermined,0,0,0,no,0.011914071956044922,no,0.010986561202625433,no,0.009099478048091655,no,0.008038660148894913,no,0.008004218271410015,no,0.007263931745673491
770,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// this is a property of the table, which we are updating",no,undetermined,0,0,0,no,0.02599376080964421,no,0.010067074925130709,no,0.008870925243439626,no,0.008049187776215315,no,0.007715152516224666,no,0.007008172278520444
771,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if the hibernate-mapping did not specify a schema/catalog, use the defaults //specified by properties - but note that if the schema/catalog were specified //in hibernate-mapping, or as params, they will already be initialized and //will override the values set here (they are in identifierGeneratorProperties)",no,undetermined,0,0,0,no,0.013124413347044473,no,0.010957845267862068,no,0.009095196069612803,no,0.008049802825997168,no,0.007986915037355323,no,0.0072706026699701325
772,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This should only be possible if the caches are constructor injected ,no,undetermined,0,0,0,no,0.052748881499863336,no,0.010973217382440408,no,0.009097244859009982,no,0.008040774841504712,no,0.00798066272635655,no,0.007274276753092029
773,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// transactions marked for rollback-only cause some TM impls to throw exceptions,no,undetermined,0,0,0,no,0.01728598575571027,no,0.010970749980272568,no,0.009102347755859561,no,0.008064905245137895,no,0.007975945761780493,no,0.0072795460340270325
774,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// special shortcut for id properties, skip the join! // this must only occur at the _end_ of a path expression",no,undetermined,0,0,0,no,0.025365417245814367,no,0.01098827647108463,no,0.009109922459712974,no,0.008063270628334632,no,0.007986406688623018,no,0.007259067800935982
775,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// IMPL NOTE : due to the delayed population of setters (setters cached // 		for performance), we really cannot pro0perly define equality for // 		this transformer",no,undetermined,0,0,0,no,0.0390171356021848,no,0.01096379695692921,no,0.009088282865555393,no,0.008061360565428367,no,0.007992054647872624,no,0.007273949752246146
776,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ( (Column) ( (SimpleValue) ic.getIndex() ).getColumnIterator().next() // ).setNullable(false);,no,undetermined,0,0,0,no,0.005363774717715062,no,0.0045353485434960795,no,0.004590334254859694,no,0.0042580320122405525,no,0.004372800288593813,no,0.0039519839925100326
777,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we have a mapped identifier property and the root of // the incoming property path matched that identifier // property,no,undetermined,0,0,0,no,0.012963515082041244,no,0.009258774403080705,no,0.007918527977435565,no,0.007367782964394348,no,0.006964596436285157,no,0.00614576448802938
778,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// contained elements:,no,undetermined,0,0,0,no,0.0019858948282340774,no,0.003080036749829445,no,0.003424445658811511,no,0.003985276418637332,no,0.004086458306843388,no,0.0036310300782165777
779,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//        },no,undetermined,0,0,0,no,0.0036523008980329486,no,0.005504726900042388,no,0.006461868463342029,no,0.00788716525811375,no,0.0079850989855144,no,0.007268429553841039
780,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// for non-inverse one-to-many, with a not-null fk, add a backref!",no,undetermined,0,0,0,no,0.043206744969026066,no,0.010962609722557765,no,0.009100958318340591,no,0.008047619741704745,no,0.007990780542431977,no,0.007275888610655262
781,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//to stop the class from being unloaded,no,undetermined,0,0,0,no,0.006075914329167585,no,0.007026629188425824,no,0.006218050596457637,no,0.0056240192699754535,no,0.005506439873164637,no,0.004985284895404456
782,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// mappings might contain either the ""raw"" extends name (in the case of // an entity-name mapping) or a FQN (in the case of a POJO mapping).",no,undetermined,0,0,0,no,0.004086409882950266,no,0.0073237561594574055,no,0.005623175416503914,no,0.004773189712224454,no,0.005274822457615252,no,0.004827190243046139
783,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// for objects that came in via update(),no,undetermined,0,0,0,no,0.0007064843084053863,no,0.000652978837347357,no,0.000564160615818554,no,0.0005409308348394154,no,0.0004736963599944712,no,0.0004103307579467983
784,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//use dialect default properties,no,undetermined,0,0,0,no,0.004470232076217731,no,0.008330293176194553,no,0.007171102273289888,no,0.006738460645924414,no,0.006715239913232285,no,0.006114531233271037
785,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// increment the version number (if necessary),no,undetermined,0,0,0,no,0.005213630808255811,no,0.004817463591706908,no,0.004538437261731037,no,0.004134188810749086,no,0.004117747805186751,no,0.003696774298570071
786,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The cache provider is needed when we either have second-level cache enabled // or query cache enabled.  Note that useSecondLevelCache is enabled by default,no,undetermined,0,0,0,no,0.00755107467250767,no,0.009885974822541044,no,0.009108128344719876,no,0.007908471014756715,no,0.007987820664993693,no,0.007280503957150035
787,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//information about all properties in class hierarchy,no,undetermined,0,0,0,no,0.01755970039625546,no,0.008879674343546376,no,0.00735086044959852,no,0.006408477355461114,no,0.006437367764684999,no,0.005810302358777819
788,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//		String provider = properties.getProperty( Environment.BYTECODE_PROVIDER ); //		log.info( ""Bytecode provider name : "" + provider ); //		BytecodeProvider bytecodeProvider = buildBytecodeProvider( provider ); //		settings.setBytecodeProvider( bytecodeProvider );",no,undetermined,0,0,0,no,0.004023676199051166,no,0.004546263777903432,no,0.005511479052859854,no,0.005506203629239876,no,0.005507952221205902,no,0.004972463970848377
789,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0025781356200505175,no,0.002285504329619269,no,0.002264916835005399,no,0.00321405128346898,no,0.0032656744680917894,no,0.002926951544400822
790,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we are using ""all"" or ""dirty"" property-based optimistic locking",no,undetermined,0,0,0,no,0.026615689083691007,no,0.010992456112269199,no,0.009116500796251058,no,0.008074561045700193,no,0.007986998777525378,no,0.00728128609855398
791,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// orphans should be deleted during save/update,no,undetermined,0,0,0,no,0.0030109930724853983,no,0.010962567698314296,no,0.00910048800223194,no,0.008058175765279623,no,0.007996916550622624,no,0.007263993736243042
792,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// maybe a concrete SQLpropertyresult type, but Map is exactly what is required at the moment",no,undetermined,0,0,0,no,0.2423845329894187,no,0.18903461033282665,no,0.16570672722577232,no,0.15181605492785372,no,0.1513209774625182,no,0.14489079271664776
793,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// for some reason the antlr.CommonAST initialization routines force // this method to get called twice.  The first time with an empty string,no,undetermined,0,0,0,no,0.0019252971185170244,no,0.0023358258276404203,no,0.001944687126745074,no,0.001531574649900934,no,0.0015381196385424957,no,0.0013580136632003557
794,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// do a check,no,undetermined,0,0,0,no,0.003326744801522989,no,0.007487936641767979,no,0.006986777291955518,no,0.00585847781280205,no,0.0056952560363959705,no,0.0050755097761834645
795,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//			sqlAliasSuffixes[i] = element.getColumnAliasSuffix();,no,undetermined,0,0,0,no,0.0005693741332549053,no,0.0005890797313572086,no,0.0005694552241655899,no,0.0005223197795221822,no,0.0005214419307642042,no,0.0004571084557384249
796,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	void setShowSqlEnabled(boolean b) { //		showSql = b; //	} // //	void setFormatSqlEnabled(boolean b) { //		formatSql = b; //	},no,undetermined,0,0,0,no,8.997512170012627e-05,no,0.00011607224748822339,no,9.798913147245861e-05,no,8.909722052552612e-05,no,8.92900419529082e-05,no,7.452585962636214e-05
797,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//materialize associations (and initialize the object) later,no,undetermined,0,0,0,no,0.00517007401340871,no,0.004412119328743176,no,0.003361702572089214,no,0.0029763973690657567,no,0.0029134528576677528,no,0.0025587712628379273
798,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	private ComponentTuplizerFactory componentTuplizerFactory; todo : HHH-3517 and HHH-1907,no,undetermined,0,0,0,yes,0.618132249920272,no,0.02162322967152422,no,0.0073955067907671085,no,0.006851077300825415,no,0.0068049591709751925,no,0.006171748728169823
799,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//fetch=""join"" overrides default laziness //fetch=""join"" overrides default laziness",no,undetermined,0,0,0,no,0.002404816119119871,no,0.0014676738471698955,no,0.0012843052450132511,no,0.0015079783187951867,no,0.0015227516317622483,no,0.0013580103953419846
800,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// drop them in reverse order in case db needs it done that way...,no,undetermined,0,0,0,no,0.029404191984545972,no,0.010986995907619812,no,0.00911862945765823,no,0.008060797747027742,no,0.008008980507198442,no,0.007275652096957989
801,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// This check is needed since processing leaves the cursor // after the last physical row for the current logical row; // thus if we are after the last physical row, this might be // caused by either: //      1) scrolling to the last logical row //      2) scrolling past the last logical row // In the latter scenario, the previous logical row // really is the last logical row. // // In all other cases, we should process back two // logical records (the current logic row, plus the // previous logical row).",no,undetermined,0,0,0,no,0.011262395040535363,no,0.008082912134257112,no,0.006138105842358853,no,0.0061654219826018306,no,0.006158299645373799,no,0.00557283792153307
802,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// the owning entity may have been deleted and its identifier unset due to // identifier-rollback; in which case, try to look up its identifier from // the persistence context",no,undetermined,0,0,0,no,0.008329032159844622,no,0.006357567218028255,no,0.0051518452824101365,no,0.004546336342640789,no,0.004382227107456969,no,0.003617629753390691
803,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// build an array with indices equal to the total number // of actual returns in the result Hibernate will return // for this query (scalars + non-scalars),no,undetermined,0,0,0,no,0.02069283824128813,no,0.010993362486409001,no,0.009101287831992436,no,0.008057188026603608,no,0.007996845629059158,no,0.007279857965642089
804,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	public ComponentTuplizerFactory getComponentTuplizerFactory() { //		return componentTuplizerFactory; //	},no,undetermined,0,0,0,no,0.004827582653350053,no,0.0032668892069269823,no,0.002601307707630766,no,0.0021702159339340903,no,0.0021444946235422793,no,0.001911570112219406
805,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Mckoi has no known variation of a ""SELECT ... FOR UPDATE"" syntax...",no,undetermined,0,0,0,no,0.003229137842845488,no,0.006403376219076484,no,0.005561729671127138,no,0.005136169272293776,no,0.005063746673906715,no,0.004637898128435513
806,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// it is or was referenced _somewhere_,no,undetermined,0,0,0,no,0.0036445548830308944,no,0.003084742789512878,no,0.005281094869410118,no,0.005732596027251726,no,0.0075196213780348905,no,0.005690087596918607
807,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// should be ok performance-wise to generate new delegate instances for each // request since these are locally stack-scoped.  Besides, it makes the code // much easier to read than the old TransactionHelper stuff...",no,undetermined,0,0,0,no,0.05381968206053805,no,0.010981488416046679,no,0.009112136257904474,no,0.008055221916937978,no,0.007988766016483509,no,0.007261425552844511
808,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// nothing to do; even if the operand is a parameter, no way we could // infer an appropriate expected type here",no,undetermined,0,0,0,no,0.22211553969251727,no,0.22974573703812304,no,0.22922429066394304,no,0.2212624465371573,no,0.22251853063311097,no,0.2171936946262013
809,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the root of the incoming property path matched one // of the embedded composite identifier properties,no,undetermined,0,0,0,no,0.005403216881394117,no,0.0034319351061804708,no,0.002258014163259969,no,0.0019736836790070194,no,0.001839978728839975,no,0.0015936974440892394
810,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// add normal properties,no,undetermined,0,0,0,no,0.0025674688188104706,no,0.0025284263419157326,no,0.0023314705077653263,no,0.002211212244478497,no,0.002216633665172927,no,0.002043142614390165
811,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.00862972063202151,no,0.007967255528345126,no,0.00910789471143575,no,0.008074108734301146,no,0.007996075274266124,no,0.007279033978319552
812,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// add the discriminator,no,undetermined,0,0,0,no,0.0030090882579394333,no,0.0015147927801242307,no,0.001435000790745544,no,0.0014120278692539012,no,0.0014251109429856562,no,0.0012901031635504773
813,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// handles arrays and newly instantiated collections,no,undetermined,0,0,0,no,0.00428251779174212,no,0.0018009410668228564,no,0.0014703093652916732,no,0.0013011381032422514,no,0.001296224116833505,no,0.0011756892493461131
814,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if either its role changed,",no,undetermined,0,0,0,no,0.0017471780715974702,no,0.0023941758890101295,no,0.0018504381795310366,no,0.0017382849213934376,no,0.0016222189622105575,no,0.0015609441918075495
815,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//noncritical, swallow and let the other propagate!",no,undetermined,0,0,0,no,0.0028925478524752016,no,0.002800582911070134,no,0.002501268144376974,no,0.002380773908383516,no,0.0023465765731766988,no,0.0020939744244300833
816,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we will need to create new entries,no,undetermined,0,0,0,no,0.014452761873250636,no,0.010996424112799417,no,0.009108986852039707,no,0.008062354796129894,no,0.00798754954188162,no,0.007268593190951132
817,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this piece is needed for usage in select clause,no,undetermined,0,0,0,no,0.031377920050665795,no,0.010966874750173182,no,0.009078718534894262,no,0.008070128966674568,no,0.007984404944159985,no,0.007273812833232147
818,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// no-op. We don't own the cache so we shouldn't stop it.,no,undetermined,0,0,0,no,0.0013615635413822464,no,0.0010012437039960058,no,0.0008405402085133504,no,0.0006253915002638396,no,0.000669380767734936,no,0.0005654124653354191
819,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// key is an entity involved with the operation performed by the listener; // value can be either a copy of the entity or the entity itself,no,undetermined,0,0,0,no,0.005230496724308793,no,0.005572867315895886,no,0.005430368782293741,no,0.00489518644039067,no,0.004740879832880161,no,0.004222435771007984
820,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Get the names of the columns used to link between the collection // owner and the collection elements.,no,undetermined,0,0,0,no,0.0030820883708898546,no,0.005998711341920577,no,0.004685527673070168,no,0.003916882588509096,no,0.00410325377646155,no,0.004260635363678539
821,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//let's assume that there is only one lazy fetch group, for now!",no,undetermined,0,0,0,no,0.003710172842272896,no,0.0022452331365633922,no,0.0016936102314656497,no,0.0013476784183061809,no,0.0013196383600099556,no,0.001181670263095319
822,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// more specifically : ""? [op] datetime"" //      1) if the operator is MINUS, the param needs to be of //          some datetime type //      2) if the operator is PLUS, the param needs to be of //          some numeric type",no,undetermined,0,0,0,no,0.25505119253600345,no,0.12290141397905886,no,0.03341693976101457,no,0.00807342245585109,no,0.007980860184977229,no,0.007283095983721975
823,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// don't even bother trying to read any further,no,undetermined,0,0,0,no,0.008822092489026372,no,0.007899460122217726,no,0.006690757194076045,no,0.005900025611861742,no,0.005839738531619615,no,0.005281953585270829
824,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// add normal properties,no,undetermined,0,0,0,no,0.0025674688188104706,no,0.0025284263419157326,no,0.0023314705077653263,no,0.002211212244478497,no,0.002216633665172927,no,0.002043142614390165
825,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// prepend value and type list with null for any positions before the wanted position.,no,undetermined,0,0,0,no,0.008514179454301735,no,0.00560918992786677,no,0.0058638626250107784,no,0.004814023320766067,no,0.004702781724070256,no,0.0042154143358905825
826,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//+ ""_"" + referencedColumnName not used for backward compatibility",no,undetermined,0,0,0,no,0.012704919975093345,no,0.010978736086350124,no,0.009115457943541124,no,0.008050112746744144,no,0.008000480387742858,no,0.007289564280674256
827,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// static helper methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.004479472433965775,no,0.004918203126587441,no,0.004283249037531568,no,0.004042640676726905,no,0.004048909168076321,no,0.003645275242735542
828,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// add the discriminator,no,undetermined,0,0,0,no,0.0030090882579394333,no,0.0015147927801242307,no,0.001435000790745544,no,0.0014120278692539012,no,0.0014251109429856562,no,0.0012901031635504773
829,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Base Expectation impls ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0010540309001706972,no,0.0031976089849414533,no,0.0032547671341332345,no,0.0036000663102029483,no,0.0037597140283833143,no,0.003385795076511937
830,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this property belongs on the table and is to be inserted,no,undetermined,0,0,0,no,0.18649147823271897,no,0.14587880977041034,no,0.1517516793527198,no,0.15591069415341904,no,0.22638120232984768,no,0.21431003969566256
831,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// need to extract the component values and check for subtype replacements...,no,undetermined,0,0,0,no,0.02431734115642809,no,0.011000412074935047,no,0.009092376972016281,no,0.00807227556448537,no,0.00799872578170957,no,0.0072728577288868985
832,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// add the primary key,no,undetermined,0,0,0,no,0.0024077331123469412,no,0.0020244562797391086,no,0.0016482755970587254,no,0.0013826437369605562,no,0.0015314179461332186,no,0.0013596703761541268
833,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// note that for sequential scrolling, we make the assumption that // the first persister element is the ""root entity""",no,undetermined,0,0,0,no,0.035412285681043376,no,0.010969240306541492,no,0.00909855022034564,no,0.008069181893614672,no,0.008009102314603904,no,0.007277847182717013
834,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Impl Note: allows multiple collection fetches as long as the // entire fecthed graph still ""points back"" to a single // root entity for return",no,undetermined,0,0,0,no,0.041584763599302875,no,0.010969210426262326,no,0.009098451526928049,no,0.008039970810932629,no,0.00799459141598325,no,0.0072714855722680214
835,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//		registerColumnType( Types.BLOB, 16777215, ""mediumblob"" ); //		registerColumnType( Types.BLOB, 65535, ""blob"" );",no,undetermined,0,0,0,no,0.0027701244882389967,no,0.008563493964995665,no,0.008631129116979457,no,0.008065222001722796,no,0.00799372809356865,no,0.007292818419262668
836,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// delegate already handles PK columns,no,undetermined,0,0,0,no,0.0009033449814297756,no,0.0008694753574678361,no,0.0008390707975791431,no,0.0007846984117750846,no,0.0007807445755495436,no,0.0006833867208205542
837,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// properties of this class, including inherited properties",no,undetermined,0,0,0,no,0.016465920468352047,no,0.008890652885670237,no,0.008247141616206448,no,0.007997667560571405,no,0.008007825652134119,no,0.007278523145562629
838,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//ie. e.status==DELETED,no,undetermined,0,0,0,no,0.003777846707210045,no,0.007722027200368255,no,0.00790928761614559,no,0.008052734827685001,no,0.008009351537918168,no,0.007285295440002496
839,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// kept for backward compatibility until after the 3.1beta5 release of HA,no,undetermined,0,0,0,no,0.005076771196597367,no,0.01097720739667701,no,0.009091425458480457,no,0.00806438803997945,no,0.00800122499554483,no,0.007286518720121233
840,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// legacy behavior, apply the bridge...",no,undetermined,0,0,0,no,0.005415493713397646,no,0.00723641976104366,no,0.006439398155387273,no,0.006096228753005746,no,0.0062469903876181294,no,0.005666868109828166
841,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if an exception occurs during flush, user must call rollback()",no,undetermined,0,0,0,no,0.00464753084023067,no,0.0031192976478867547,no,0.0026263045272096517,no,0.0023490913756134,no,0.0024238297324586785,no,0.0021775624043245496
842,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Turn off includeSubclasses on all FromElements.,no,undetermined,0,0,0,no,0.009897240303777123,no,0.010973146616529589,no,0.009088004398196991,no,0.008069912139160171,no,0.00798513049200057,no,0.007278927095278142
843,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// can't just return null here, since that would // cause an owning component to become null",no,undetermined,0,0,0,no,0.10095030432112859,no,0.10184559731429679,no,0.10356136452947973,no,0.10026296951081398,no,0.09721965990468132,no,0.007265946735364218
844,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the object is transient or detached,no,undetermined,0,0,0,no,0.01786724864642213,no,0.010785479157844158,no,0.00908600764167389,no,0.007786953989384312,no,0.007723537967006193,no,0.007009617759627356
845,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Now update only the tables with dirty properties (and the table with the version number),no,undetermined,0,0,0,no,0.008928353662737367,no,0.004064200849679651,no,0.003087620275319372,no,0.002558897857034608,no,0.0024761616076328327,no,0.0022116851038733905
846,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Render the SQL query,no,undetermined,0,0,0,no,0.0021383471199140076,no,0.004142369144257067,no,0.0034782373307642076,no,0.005380345624738516,no,0.005219232909474582,no,0.004759279893437974
847,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// We must return a valid RDMS/RSA command from this method to // prevent RDMS/RSA from issuing *ERROR 400,no,undetermined,0,0,0,no,0.052731104252698134,no,0.010968068569263625,no,0.00908090658962022,no,0.00805370149024217,no,0.00798644954442893,no,0.007267698088848359
848,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Write the values of fields onto the prepared statement - we MUST use the state at the time the // insert was issued (cos of foreign key constraints). Not necessarily the object's current state,no,undetermined,0,0,0,no,0.0007210026067060523,no,0.0009084649933001374,no,0.0006532074258461081,no,0.0005312260579078,no,0.0004816981571303088,no,0.0003624259424733625
849,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// registerColumnType(Types.VARBINARY, ""CHARACTER($l)""); // registerColumnType(Types.BLOB, ""CHARACTER($l)"" );  // For use prior to CP 11.0 // registerColumnType(Types.CLOB, ""CHARACTER($l)"" );",no,undetermined,0,0,0,no,0.0030652820085499415,no,0.010967812527581826,no,0.009076231903878913,no,0.00806137755041506,no,0.007993396328012365,no,0.0072809018760160394
850,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// TODO : shouldnt inserts be Expectations.NONE?,no,undetermined,0,0,0,yes,0.8404938774859366,yes,0.8604824415811592,yes,0.8886837945728374,yes,0.9053079808155199,no,0.008009686379433504,no,0.0072706784269153234
851,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//a proxy cannot be transient and it breaks ForeignKeys.isTransient,no,undetermined,0,0,0,no,0.01602837038670913,no,0.010992949025019304,no,0.009104934489308896,no,0.008051518735843385,no,0.007993482821386186,no,0.0072825627747913155
852,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//don't bother trying to update, we know there is no row there yet",no,undetermined,0,0,0,no,0.01805516818326443,no,0.010981277856742692,no,0.009103338003445755,no,0.00804400082872073,no,0.007989801983146659,no,0.007269932856134619
853,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This is the root level node. // Generate an explicit from clause at the root.,no,undetermined,0,0,0,no,0.014868051337760655,no,0.008482962245188441,no,0.00797322337349395,no,0.007411678394423038,no,0.007714930753841318,no,0.007013955609629609
854,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// CHECK,no,undetermined,0,0,0,no,9.355060221159787e-05,no,0.0002859390220611493,no,0.0002750664077859276,no,0.00022885984013507133,no,0.00022082978536909595,no,0.00018337141161228464
855,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// actual cache of the entries.  soft references are used for both the keys and the // values here since the values pertaining to the MRU entries are kept in a // seperate hard reference cache (to avoid their enqueuement/garbage-collection).,no,undetermined,0,0,0,no,0.009447837733909378,no,0.008025906059249731,no,0.006849988601805967,no,0.00578261685339703,no,0.005406953253413668,no,0.004875818662768077
856,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if all fields are null, we might need to delete existing row",no,undetermined,0,0,0,no,0.03599730359701057,no,0.010970186513679434,no,0.009095481827463182,no,0.008056796734362848,no,0.007994230628543455,no,0.0072846024910121114
857,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//stops flush being called multiple times if this method is recursively called,no,undetermined,0,0,0,no,0.03472908525006059,no,0.010998363258964687,no,0.009088020452714136,no,0.008073504994265169,no,0.00799364700981626,no,0.007272133728850977
858,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//note: updates to joined tables can't be batched...,no,undetermined,0,0,0,no,0.028157123458635285,no,0.010989301480006219,no,0.009103901794596289,no,0.008050560036429507,no,0.007987541214961076,no,0.0072683187060290306
859,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// String Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0022836249845657832,no,0.001229836619007973,no,0.0011272892618946822,no,0.0011410924543007492,no,0.0011378921619392525,no,0.0009990051923384022
860,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// starting index,no,undetermined,0,0,0,no,0.003615682326365016,no,0.009410952357208301,no,0.009006995737287696,no,0.008051132076198876,no,0.008004180969957031,no,0.007267385057356012
861,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// object have been loaded with setReadOnly(true); HHH-2236,no,undetermined,0,0,0,no,0.010049988660798852,no,0.0028124740436453436,no,0.001792002879394066,no,0.0016079504102971978,no,0.0016070024152231817,no,0.00140603732479893
862,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/**
	 * Build a ResultSetMappingDefinition given a containing element for the ""return-XXX"" elements
	 *
	 * @param resultSetElem The element containing the return definitions.
	 * @param path No clue...
	 * @param mappings The current processing state.
	 * @return The description of the mappings...
	 */",no,undetermined,0,0,0,no,0.3472525706287122,no,0.3345417651016977,no,0.31061102589937845,no,0.3116316327768697,no,0.314063104109208,no,0.3071761278133237
863,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	private List collectionOwnerAliases = new ArrayList(); //	private List collectionAliases = new ArrayList(); //	private List collectionPersisters = new ArrayList(); //	private List collectionResults = new ArrayList();,no,undetermined,0,0,0,no,0.008545168137581289,no,0.005484459285514504,no,0.004366970493104472,no,0.0037399404891513563,no,0.0037022114184283757,no,0.003317943581458996
864,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Write any appropriate versioning conditional parameters,no,undetermined,0,0,0,no,0.010444585444984463,no,0.010423593301430613,no,0.009092175110158243,no,0.008050732681490775,no,0.007986540649318476,no,0.007278295574714053
865,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//check if the detached object being merged is the parent,no,undetermined,0,0,0,no,0.0028466060897856683,no,0.002649683241124101,no,0.002291816415467834,no,0.002034809060492879,no,0.0020532666872328073,no,0.00183176339157307
866,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Render the SQL query,no,undetermined,0,0,0,no,0.0021383471199140076,no,0.004142369144257067,no,0.0034782373307642076,no,0.005380345624738516,no,0.005219232909474582,no,0.004759279893437974
867,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// determine if the collection elements are entities...,no,undetermined,0,0,0,no,0.0048190117007337165,no,0.005504657743028097,no,0.005001845864870084,no,0.004468199487351417,no,0.004668742177814405,no,0.004404320457355403
868,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Do the key. The key is immutable so we can use the _current_ object state - not necessarily // the state at the time the delete was issued,no,undetermined,0,0,0,no,0.00328528623034384,no,0.003922305770109681,no,0.003279850517740681,no,0.0027123186774367755,no,0.0027826092296290095,no,0.002424510772436975
869,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Let return-propertys override whatever the persister has for aliases.,no,undetermined,0,0,0,no,0.00365045131271026,no,0.002730629015263814,no,0.0023021945179577262,no,0.0018380590513728,no,0.0018148829014445133,no,0.0016309205059232986
870,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// We should use the _current_ object state (ie. after any updates that occurred during flush),no,undetermined,0,0,0,no,0.019429859897297116,no,0.01097548069084492,no,0.009104553272358842,no,0.00806175083067938,no,0.007999239821227166,no,0.007275614206530518
871,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// might need to run a different filter entirely after the flush // because the collection role may have changed,no,undetermined,0,0,0,no,0.15685763772408434,no,0.07664239462057906,no,0.009102965269243795,no,0.008072590132421486,no,0.00798135759003292,no,0.007266776073756975
872,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// amazingly, these two will work because AbstractCollection // uses iterator() to fill the array",no,undetermined,0,0,0,no,0.06475578727456917,no,0.010970170309177392,no,0.009112185169598327,no,0.008053067912236806,no,0.00799170444278766,no,0.007281269742104688
873,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// can't cache this stuff either (per-invocation) // we are given a map of user-alias -> lock mode // create a new map of sql-alias -> lock mode,no,undetermined,0,0,0,no,0.05379827497960518,no,0.010958478283996011,no,0.009110793199503114,no,0.00804147555983041,no,0.007990141113667793,no,0.007270385575377505
874,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//note: dirtyFields==null means we had no snapshot, and we couldn't get one using select-before-update //	  oldFields==null just means we had no snapshot to begin with (we might have used select-before-update to get the dirtyFields)",no,undetermined,0,0,0,no,0.006247344490345938,no,0.005451686284005349,no,0.009093568103542065,no,0.007634282392641361,no,0.007281810384839937,no,0.006568340780925084
875,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// loop through all the associations of the current entity and make sure that they are processed // before the current batch number,no,undetermined,0,0,0,no,0.004831994118250049,no,0.0020448768782243454,no,0.002609436302276071,no,0.0021963807098905963,no,0.0022489233803900392,no,0.002017595797712764
876,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ParameterContainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.005867700963281545,no,0.007493263746119705,no,0.007138832996983271,no,0.00758391619001369,no,0.007580076956105815,no,0.006900524203758815
877,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.20578690578476505,no,0.13670269420699718,no,0.13274291040411743,no,0.13589192087436133,no,0.13603243554029018,no,0.13136960479731605
878,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// note that if we load this collection from a cartesian product // the multiplicity would be broken ... so use an idbag instead,no,undetermined,0,0,0,no,0.07339157675508964,no,0.010984408875127633,no,0.009111333424498241,no,0.008060574867753254,no,0.008005310219305284,no,0.0072731133213389245
879,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* COLUMN and TABLE should be renamed but it would break the public API */,no,undetermined,0,0,0,no,0.30863141723883214,no,0.28386406110459,no,0.2781525945426357,no,0.2639228027793786,no,0.2617812482076351,no,0.252642111867339
880,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// For many-to-many joins, use the tablename from the queryable collection for the default text.",no,undetermined,0,0,0,no,0.007329994515577064,no,0.005478301134755681,no,0.003555043146450791,no,0.003487434661597622,no,0.003396999285186477,no,0.003092981140734315
881,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//int result = 17; //result = 37 * result + type.hashCode(); //result = 37 * result + ( value==null ? 0 : value.hashCode() ); //return result;,no,undetermined,0,0,0,no,0.0030874437979677544,no,0.0034145280296927418,no,0.003759432556329999,no,0.0033451229587953446,no,0.003313248620899775,no,0.0029473067051494456
882,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// For the case of dynamic-update=""true"", we need to generate the UPDATE SQL",no,undetermined,0,0,0,no,0.006748376397191699,no,0.006469083395764856,no,0.004848620458410804,no,0.004668852794899003,no,0.004669476118000489,no,0.004197096678237088
883,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// merge() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.007733105769152208,no,0.010990232463044819,no,0.009094624017628209,no,0.008058461199351986,no,0.007990602278307949,no,0.007269061798818435
884,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Default to collections sharing entity cache if there is one,no,undetermined,0,0,0,no,0.0017301413752306067,no,0.0013670388279971933,no,0.0010586808065941335,no,0.0009509116741818069,no,0.0009954884627611923,no,0.0008732134117093861
885,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// --Commented out by Inspection (12/4/04 9:10 AM): public abstract void addCondition(String alias, String[] columns, String condition);",no,undetermined,0,0,0,no,0.009915009299302767,no,0.009711443465841742,no,0.00793824611357835,no,0.0067744675672336,no,0.006744491586723383,no,0.0061851161223706605
886,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// don't need to check laziness (dirty checking algorithm handles that),no,undetermined,0,0,0,no,0.1247708816156704,no,0.034407273799031725,no,0.009117263272799221,no,0.0080598713847263,no,0.007987960789125876,no,0.0072599924336083045
887,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*rootTableName = persistentClass.getRootTable().getQualifiedName( 
				factory.getDialect(), 
				factory.getDefaultCatalog(), 
				factory.getDefaultSchema() 
		);*/",no,undetermined,0,0,0,no,0.0067988073821727705,no,0.009729337009529016,no,0.009101177833358436,no,0.008068362850268854,no,0.008007841305407798,no,0.007286692637799496
888,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// For the case of dynamic-update=""false"", or no snapshot, we use the static SQL",no,undetermined,0,0,0,no,0.0019997509131375584,no,0.0018113437047879606,no,0.00246931747165781,no,0.0020254715284979815,no,0.0020177256059501552,no,0.0017908774577888886
889,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//abort the save (the object is already saved by a circular cascade),no,undetermined,0,0,0,no,0.008621017544678745,no,0.009864184231809363,no,0.008840870423575724,no,0.007604927048800357,no,0.007373091303064478,no,0.006666470813320666
890,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if not ""get"", then try ""is""",no,undetermined,0,0,0,no,0.002349891043804876,no,0.0020537928137518238,no,0.0017216794722656372,no,0.001309806428466908,no,0.0013137569724239813,no,0.0012626633649071635
891,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// remove initial "" and """,no,undetermined,0,0,0,no,0.00045621830504689507,no,0.0005181876551088705,no,0.00038309699096383126,no,0.0003190719904650325,no,0.00031016819227716163,no,0.0002645364672084523
892,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Default to sharing the entity cache if there is one,no,undetermined,0,0,0,no,0.001144125477947245,no,0.001297043785923198,no,0.0010050323424502508,no,0.0008998778172802641,no,0.0009546889602026354,no,0.0008316081431088471
893,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we have the form: trim(trimSource) //      so we trim leading and trailing spaces,no,undetermined,0,0,0,no,0.006355045386393586,no,0.010976022831311452,no,0.009089100848417101,no,0.008066782527445577,no,0.007996936777268805,no,0.007276618760633653
894,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// For the case of dynamic-insert=""true"", we need to generate the INSERT SQL",no,undetermined,0,0,0,no,0.003713782971260086,no,0.004543390490751606,no,0.0033350529126690643,no,0.003150338751507099,no,0.0031734285542391397,no,0.00283283714943258
895,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if it was a reference to self, don't need to nullify // unless we are using native id generation, in which // case we definitely need to nullify",no,undetermined,0,0,0,no,0.015935510510321053,no,0.01038863987598553,no,0.007187923145680507,no,0.006082482104027257,no,0.006154189805051834,no,0.005692219068935086
896,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// For the case of dynamic-insert=""true"", we need to generate the INSERT SQL",no,undetermined,0,0,0,no,0.003713782971260086,no,0.004543390490751606,no,0.0033350529126690643,no,0.003150338751507099,no,0.0031734285542391397,no,0.00283283714943258
897,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//the user visible aliases, which are unknown to the superclass, //these are not the actual ""physical"" SQL aliases",no,undetermined,0,0,0,no,0.0024161366524027717,no,0.0021755757648132196,no,0.0018230398569424376,no,0.0022850458052676484,no,0.0020641207152053516,no,0.0018566508588235243
898,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// For the case of dynamic-insert=""false"", use the static SQL",no,undetermined,0,0,0,no,0.002474073582693381,no,0.00292455889613815,no,0.002156396154212746,no,0.0018706893352641101,no,0.0018251989229580697,no,0.0016194499681748038
899,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if a composite key, use ""( (foo = ? and bar = ?) or (foo = ? and bar = ?) )"" for batching //TODO: unnecessary for databases with ANSI-style joins",no,undetermined,0,0,0,no,0.4842497591823159,no,0.42519736916810696,no,0.368146397296903,no,0.4173342548239056,no,0.4219300903688862,no,0.41895153481508574
900,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// For the case of dynamic-insert=""false"", use the static SQL",no,undetermined,0,0,0,no,0.002474073582693381,no,0.00292455889613815,no,0.002156396154212746,no,0.0018706893352641101,no,0.0018251989229580697,no,0.0016194499681748038
901,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the class hierarchy structure,no,undetermined,0,0,0,no,0.008098061905673424,no,0.008324989162407117,no,0.007138509789972647,no,0.00623063666230692,no,0.00620856987273612,no,0.005639565391254096
902,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//a shortcut if its location didn't change!,no,undetermined,0,0,0,no,0.00501238486416334,no,0.010957838801185166,no,0.009084755895062583,no,0.008044973337697665,no,0.007989649780896689,no,0.007278394122342611
903,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//swaldman 2006-08-28: define c3p0-style configuration parameters for properties with //                     hibernate-specific overrides to detect and warn about conflicting //                     declarations,no,undetermined,0,0,0,no,0.028846464840223872,no,0.010976574805554872,no,0.009091725512300872,no,0.008056659304080933,no,0.007989627133195107,no,0.0072759418220531575
904,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// not supported,no,undetermined,0,0,0,no,0.009391968882519232,no,0.008761820117932065,no,0.007817703322787037,no,0.00698180525199814,no,0.00693665754974756,no,0.006263044148371853
905,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Need to use the identifier type of the collection owner // since the incoming is value is actually the owner's id. // Using the collection's key type causes problems with // property-ref keys...,no,undetermined,0,0,0,no,0.05538692951722291,no,0.010970615990234916,no,0.009084828820674714,no,0.008061523472087571,no,0.007975688747844581,no,0.007283755197203749
906,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if we instantiate a collection during the flush() process, // we must ignore it for the rest of the flush()",no,undetermined,0,0,0,no,0.00740544351005618,no,0.0030763435686503924,no,0.0023825693848297295,no,0.0019351409734148742,no,0.0020490032863241863,no,0.0018490855654060112
907,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// moved up from AbstractEntityPersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.01121989854291454,no,0.009938305471206525,no,0.00892242722655482,no,0.008064917609040332,no,0.007998386716349117,no,0.007288244758992968
908,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// new collections that get found + wrapped // during flush shouldn't be ignored,no,undetermined,0,0,0,no,0.017675925437823356,no,0.008698851804718445,no,0.006764016141335032,no,0.0057971018958953725,no,0.0060380412313231656,no,0.0054879750521046
909,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// meant to handle dynamic instantiation queries...,no,undetermined,0,0,0,no,0.0033463824212895165,no,0.010990358660212958,no,0.009108327993311712,no,0.00806816931973746,no,0.008007894818412497,no,0.007293483563849417
910,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//a newly wrapped collection is NOT dirty (or we get unnecessary version updates),no,undetermined,0,0,0,no,0.05609576552747383,no,0.010967426648314951,no,0.009104966659250648,no,0.008067212159543556,no,0.008007428707087986,no,0.007275458060163912
911,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// local cache, so we use synchronization",no,undetermined,0,0,0,no,0.0035332354333494098,no,0.0035426043736086973,no,0.00284154441435436,no,0.0024122965152798474,no,0.0024491761039495234,no,0.002147029497716677
912,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Always add the collection's query spaces.,no,undetermined,0,0,0,no,0.008889692992689645,no,0.008874909812471467,no,0.006096280747010521,no,0.004988332075900518,no,0.004601905229364722,no,0.004234300535671428
913,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//the BLOB type requires a size arguement - this defaults to //bytes - no arg defaults to 1 whole byte! //other argument mods include K - kilobyte, M - megabyte, G - gigabyte. //refer to the PBdevelopers guide for more info.",no,undetermined,0,0,0,no,0.03352777472546742,no,0.01098572788091796,no,0.009089899437059344,no,0.00804712687264115,no,0.007988116311533231,no,0.007267552049784023
914,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// detached collections that get found + reattached // during flush shouldn't be ignored,no,undetermined,0,0,0,no,0.009679943980764912,no,0.005064143288167894,no,0.00411800637025901,no,0.0035499592489825985,no,0.003695810996558071,no,0.0033235506587688374
915,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// revert to traditional hibernate behavior of setting initialPoolSize to minPoolSize // unless otherwise specified with a c3p0.*-style parameter.,no,undetermined,0,0,0,no,0.006735331455216623,no,0.00964225890543714,no,0.006961076567837614,no,0.006410479107184568,no,0.006496030567145329,no,0.005891517141371314
916,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we need to utilize dynamic delete statements,no,undetermined,0,0,0,no,0.00736072099805083,no,0.00783997305400209,no,0.006612748316871168,no,0.006130394492945884,no,0.006211994931265455,no,0.005640841806621845
917,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//columns.add(columnName); //aliases.add(tableAlias);,no,undetermined,0,0,0,no,0.0011197439015056337,no,0.0027633235226500463,no,0.0025143031417161153,no,0.002285425095572984,no,0.0022439751520208977,no,0.002114078718814247
918,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// otherwise, utilize the static delete statements",no,undetermined,0,0,0,no,0.002953573723930367,no,0.003128834008114377,no,0.001983069441962282,no,0.0017194043219366333,no,0.001778200892268709,no,0.0015828203452406698
919,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// intentionally empty,no,undetermined,0,0,0,no,0.0062029637849833775,no,0.006988658068479712,no,0.006647053667740506,no,0.0064179509147434715,no,0.00653565950775097,no,0.005941618381082593
920,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*public boolean equals(Object other) {
		read();
		return bag.equals(other);
	}

	public int hashCode(Object other) {
		read();
		return bag.hashCode();
	}*/",no,undetermined,0,0,0,no,0.004166904192613107,no,0.01016528834268106,no,0.008430764456652891,no,0.007793213370433427,no,0.007800316513888308,no,0.007110872981936591
921,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//final boolean forceCacheRefresh,",no,undetermined,0,0,0,no,0.0001382254626651015,no,0.00018676860229683545,no,0.00015313937064195146,no,0.00013158445774651422,no,0.00013154098918303182,no,0.00010987896739092158
922,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//just a performance opt!,no,undetermined,0,0,0,no,0.019145863880834512,no,0.010989339010210266,no,0.0090918220160395,no,0.008049240875741692,no,0.007984832358795534,no,0.007270286037419612
923,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Essentially: // 1) If we have a local (Hibernate) transaction in progress //      and it already has the UserTransaction cached, use that //      UserTransaction to determine the status. // 2) If a transaction manager has been located, use //      that transaction manager to determine the status. // 3) Finally, as the last resort, try to lookup the //      UserTransaction via JNDI and use that to determine the //      status.",no,undetermined,0,0,0,no,0.0074794159330908985,no,0.00515957948994036,no,0.004035899662139092,no,0.0038959105034590824,no,0.004498311709938626,no,0.004158312102819159
924,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//just a performance opt!,no,undetermined,0,0,0,no,0.019145863880834512,no,0.010989339010210266,no,0.0090918220160395,no,0.008049240875741692,no,0.007984832358795534,no,0.007270286037419612
925,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// used to set the type of the parent dot node,no,undetermined,0,0,0,no,0.005816553285606528,no,0.003334470397196363,no,0.0028712204814109023,no,0.0024622818653263537,no,0.0026216856799340803,no,0.0023583604781359335
926,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//all joins join to the pk of the driving table,no,undetermined,0,0,0,no,0.0030744928099357585,no,0.0025079017414525477,no,0.002211162945027054,no,0.003107352680771309,no,0.0030787547888007404,no,0.002762469673286162
927,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// more specifically : ""datetime [op] ?"" //      1) if the operator is MINUS, we really cannot determine //          the expected type as either another datetime or //          numeric would be valid //      2) if the operator is PLUS, the param needs to be of //          some numeric type",no,undetermined,0,0,0,no,0.10102075194227729,no,0.06142651382620658,no,0.009112355702204656,no,0.0066878851512582604,no,0.006630902573506854,no,0.006030594517072759
928,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//notice that we skip the first table; it is the driving table!,no,undetermined,0,0,0,no,0.0019039926616365402,no,0.0008038047765912301,no,0.0006180496998020598,no,0.000553710851771465,no,0.0005532850781924443,no,0.00048009407997756464
929,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aliases named identifier ( alias.idname ),no,undetermined,0,0,0,no,0.007507674404088465,no,0.008014004789229132,no,0.008077397025960654,no,0.007810953963313662,no,0.007535289890075069,no,0.006788395934438521
930,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//skip the driving table,no,undetermined,0,0,0,no,0.001438484236909668,no,0.00036287009182227407,no,0.000309520915284873,no,0.00030276443708110895,no,0.0003066322462914892,no,0.00026342867127809985
931,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// inserts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.003292479061451821,no,0.004038138786983745,no,0.004321208388057485,no,0.005112401826066954,no,0.00028486974806732904,no,0.00024351508075497877
932,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//get 'em in the right order (not that it really matters),no,undetermined,0,0,0,no,0.021700721770577806,no,0.010975988386111654,no,0.009102114811038942,no,0.008056574434389967,no,0.008013240780542445,no,0.007272158348825861
933,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*package*/,no,undetermined,0,0,0,no,0.004437760287425697,no,0.004876701033127142,no,0.004453796219161608,no,0.004528643871969353,no,0.004494747150569872,no,0.004042588878453024
934,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//NOTE EARLY EXIT!,no,undetermined,0,0,0,no,0.005046302398143233,no,0.0035759389019286605,no,0.0029371527467461234,no,0.00270068247031243,no,0.0026841669436306528,no,0.0024229950349091522
935,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0036523008980329486,no,0.005504726900042388,no,0.006461868463342029,no,0.00788716525811375,no,0.0079850989855144,no,0.007268429553841039
936,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// trying via forName() first to be as close to DriverManager's semantics,no,undetermined,0,0,0,no,0.002634667357760736,no,0.00218334907482004,no,0.0019011196864890014,no,0.0017670189368120843,no,0.0017121588650818402,no,0.0015105653046554334
937,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//this bit is only *really* absolutely necessary for handling //requestedId, but is also good if we merge multiple object //graphs, since it helps ensure uniqueness",no,undetermined,0,0,0,no,0.18440411054810052,no,0.37054478723828754,no,0.4033195798007686,no,0.3861768802180485,no,0.37696407501324486,no,0.36951050515196093
938,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	private boolean showSql; //	private boolean formatSql;,no,undetermined,0,0,0,no,8.794616449391885e-05,no,9.237791493671946e-05,no,6.427757378369545e-05,no,5.028970208423736e-05,no,5.0166251438312784e-05,no,4.137826625798227e-05
939,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// in case we were deserialized in a different JVM, look for an instance with the same name // (alternatively we could do an actual JNDI lookup here....)",no,undetermined,0,0,0,no,0.0922405634322992,no,0.010967376746091348,no,0.009083720641552143,no,0.0080531989826685,no,0.008009805369779532,no,0.007271037342716811
940,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// try to make sure we don't wrap and already wrapped session,no,undetermined,0,0,0,no,0.008156225215790734,no,0.005060550714523844,no,0.003848728258108885,no,0.0032428193930221414,no,0.0032261704578010223,no,0.002890862698664004
941,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If this is an implied join in a FROM clause, then use ANSI-style joining, and set the // flag on the FromElement that indicates that it was implied in the FROM clause itself.",no,undetermined,0,0,0,no,0.017007873247945542,no,0.01024091922114545,no,0.009108113856273291,no,0.008051706672198651,no,0.00799857780515018,no,0.007268620438825577
942,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//render the where and from parts,no,undetermined,0,0,0,no,0.006688573332425018,no,0.006816058085636341,no,0.005805577881380022,no,0.006579353643344147,no,0.006981729758993403,no,0.006405503086517159
943,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// There is already an existing batch for this type of entity. // Check to see if the latest batch is acceptable.,no,undetermined,0,0,0,no,0.017791680893220887,no,0.008010374211569032,no,0.009104151522268773,no,0.008073989141412878,no,0.007997561145554622,no,0.007285096769458834
944,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// allow these to go through the the real session no matter what,no,undetermined,0,0,0,no,0.010340853753731503,no,0.008347073388516327,no,0.006889663915100026,no,0.006060686152390959,no,0.006217104719598425,no,0.005628599762954689
945,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Don't really know all the codes required to adequately decipher returned jdbc exceptions here. // simply allow the failure to be eaten and the subsequent insert-selects/deletes should fail,no,undetermined,0,0,0,no,0.08696462816212028,no,0.01096920368612813,no,0.009097200680067143,no,0.008063613094947075,no,0.007990748253774412,no,0.00726852282131032
946,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//we *could* regerate this inside each called method!,no,undetermined,0,0,0,no,0.03645467247446774,no,0.010980607166621206,no,0.009105050373403931,no,0.008038902800431597,no,0.008000252317936258,no,0.00727896711368266
947,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the CascadingAction implementations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0034902363227269657,no,0.003381497276904272,no,0.0029325057763475324,no,0.0027327827835128683,no,0.002761970674183822,no,0.002472012597112438
948,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//now render the joins,no,undetermined,0,0,0,no,0.002317946345466462,no,0.006318008171897715,no,0.005307885159638595,no,0.008042401435983063,no,0.00798974638966871,no,0.00728487863941801
949,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If you're closing down the ConnectionProvider chances are an // is not a real big deal, just warn",no,undetermined,0,0,0,no,0.006931275239820988,no,0.006934259248878543,no,0.0055744928419612354,no,0.004742463319289848,no,0.004688781066107148,no,0.00418922168501554
950,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// create a new batch for this type. The batch number is the number of current batches.,no,undetermined,0,0,0,no,0.02032330032468904,no,0.010953984219095901,no,0.009111409347896872,no,0.008076550508344724,no,0.00799962603645594,no,0.0072867396419155775
951,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// keyword support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0032808514532378045,no,0.0054770098956915415,no,0.005275932090581005,no,0.004967807718956364,no,0.00489071410135004,no,0.00432168461758292
952,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This will add the new from element to the origin.,no,undetermined,0,0,0,no,0.013342588753689317,no,0.010961093099581433,no,0.009106755189912894,no,0.00804898327010911,no,0.00798891969123361,no,0.007287469732899687
953,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the closure of all columns used by the entire hierarchy including // subclasses and superclasses of this class,no,undetermined,0,0,0,no,0.007876510198316294,no,0.011001366426920584,no,0.009091500075241572,no,0.00806301726183855,no,0.008008915217483287,no,0.00726671582207296
954,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//now render the select clause,no,undetermined,0,0,0,no,0.0026601644055735995,no,0.006484429335151123,no,0.006140551314016938,no,0.008043556461611912,no,0.007981708049204892,no,0.007287009788271499
955,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The keyword used to insert a row without specifying // any column values,no,undetermined,0,0,0,no,0.001968079196260096,no,0.002332174680305048,no,0.0020365631532711773,no,0.0018852358179869627,no,0.0018608770439094355,no,0.00164439654403232
956,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//now tie it all together,no,undetermined,0,0,0,no,0.002179530914189893,no,0.0026940428172227155,no,0.0024084212683816103,no,0.002355608950719915,no,0.0023787227429405595,no,0.0021309334676193805
957,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Does the LIMIT clause take a ""maximum"" row number instead of a total number of returned rows?",no,undetermined,0,0,0,no,0.008872815359694511,no,0.010983083555816842,no,0.00909384460456269,no,0.008057045652580733,no,0.007983392859502662,no,0.007277159990545669
958,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//insert/update/delete SQL,no,undetermined,0,0,0,no,0.0005056563032542299,no,0.0007171102535809879,no,0.0006174199591636847,no,0.0005837295050505723,no,0.0005792464352648549,no,0.0005024138618323618
959,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The keyword used to specify a nullable column.,no,undetermined,0,0,0,no,0.0043437712867733114,no,0.004762841311692114,no,0.005018704669811536,no,0.004435497571098816,no,0.0043959721602588155,no,0.003965200357309584
960,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//select SQL,no,undetermined,0,0,0,no,0.0015415311462570601,no,0.002158897299658954,no,0.0019611460665449197,no,0.0019528594782884214,no,0.001953301799412932,no,0.0017451936642463707
961,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//overriden to avoid System.exit,no,undetermined,0,0,0,no,0.006343528254521876,no,0.006034546826047481,no,0.005189799882948374,no,0.00478908111925175,no,0.004744795685437245,no,0.0042894832838730815
962,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//no need to check laziness, dirty checking handles that",no,undetermined,0,0,0,no,0.05657529699214172,no,0.010978684400227652,no,0.0067950778287476695,no,0.006017465024931379,no,0.006032296388928287,no,0.005436275466511558
963,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.005945121301321387,no,0.010999657612858645,no,0.009110493142860004,no,0.00807287006381875,no,0.007996504011256551,no,0.007278524436233779
964,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Fully resolve the map reference, create implicit joins.",no,undetermined,0,0,0,no,0.01520402004035086,no,0.010978195435719365,no,0.009097211876853627,no,0.008061943377106612,no,0.00799703899627482,no,0.0072891385825765735
965,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// break the outer loop !!!,no,undetermined,0,0,0,no,0.0006309920297766767,no,0.0009216798873302372,no,0.0008026781872305286,no,0.0006104339603342757,no,0.0006091138633870272,no,0.0005316570080189044
966,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// since this entity will now be processed in the latest possible batch, // we can be assured that it will come after all other associations, // there's not need to continue checking.",no,undetermined,0,0,0,no,0.09506612013209867,no,0.010983427859005615,no,0.009109679569450939,no,0.008072012527822438,no,0.008002345817707606,no,0.00728933170860205
967,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// remove any snapshot, not really for memory management purposes, but // rather because it might now be stale, and there is no longer any  // EntityEntry to take precedence // This is now handled by removeEntity() //session.getPersistenceContext().removeDatabaseSnapshot(key);",no,undetermined,0,0,0,no,0.09063732443048807,no,0.010990142594118735,no,0.009100051504720975,no,0.00805435548024165,no,0.007986296336763466,no,0.007263308835017353
968,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The basic implementation is to simply use the node's text,no,undetermined,0,0,0,no,0.01443520613160549,no,0.010973573389999297,no,0.009101312433255248,no,0.008063731328574365,no,0.007989742003491482,no,0.007268859132375539
969,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// InterSystems Cache' does not current support ""SELECT ... FOR UPDATE"" syntax... // Set your transaction mode to READ_COMMITTED before using",no,undetermined,0,0,0,no,0.028274203247485512,no,0.010976336239926103,no,0.009092829386539141,no,0.008041053461509637,no,0.007985176706542987,no,0.007277875136236646
970,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//cascade to current collection elements,no,undetermined,0,0,0,no,0.004854154085617958,no,0.006932056309791345,no,0.004917622367439121,no,0.004401488418083987,no,0.004432594884767022,no,0.004038954894308492
971,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.006547506246461415,no,0.008740606355176617,no,0.008777707696816024,no,0.008043268747741495,no,0.007999654021596971,no,0.007269092274182314
972,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//not really necessary, but good for consistency...",no,undetermined,0,0,0,no,0.08000679413449657,no,0.010968385163939533,no,0.009101077501678441,no,0.008065220799947011,no,0.007986688259147683,no,0.007274222272187407
973,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Try to find out the name of the primary key to create it as identity if the IdentityGenerator is used,no,undetermined,0,0,0,no,0.0031919596477188897,no,0.004170763539915601,no,0.0032913081254247814,no,0.002906720231681705,no,0.003073620487768033,no,0.002743088417063452
974,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we can't cascade to non-embedded elements,no,undetermined,0,0,0,no,0.009780388995614144,no,0.010978136085062633,no,0.009115433684653706,no,0.008072372988253846,no,0.00799711096181062,no,0.007274501309993225
975,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//postDelete: // After actually deleting a row, record the fact that the instance no longer  // exists on the database (needed for identity-column key generation), and // remove it from the session cache",no,undetermined,0,0,0,no,0.0022742550343635183,no,0.0023700578569441767,no,0.0015860002615641652,no,0.0013416523117946932,no,0.0014611156831804994,no,0.0012783195931729172
976,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//a newly instantiated collection can't have orphans,no,undetermined,0,0,0,no,0.011452975810008346,no,0.010930384440303167,no,0.005244720316481391,no,0.004386623608190133,no,0.004310609105579521,no,0.003955590317957652
977,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Don't hold the JBC node lock throughout the tx, as that // prevents reads and other updates",no,undetermined,0,0,0,no,0.009316762005579706,no,0.006912280640781701,no,0.005665188279949141,no,0.005535528886228239,no,0.005843338205909884,no,0.00533239630690366
978,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// check the version unsaved-value, if appropriate",no,undetermined,0,0,0,no,0.003491973504035527,no,0.0033416007319619907,no,0.0031776035596966074,no,0.003071211008830005,no,0.0031359304316226585,no,0.002819448234462802
979,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Create the SessionFactory from hibernate.cfg.xml,no,undetermined,0,0,0,no,0.0022602541501932855,no,0.004218366238533746,no,0.003713254065669073,no,0.003760631895735753,no,0.0035799165807321284,no,0.003223353390367123
980,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// handle orphaned entities!!,no,undetermined,0,0,0,no,0.008387321793075223,no,0.00988202937452788,no,0.009110041398561955,no,0.007986025879069372,no,0.007995913834054817,no,0.007286720946517189
981,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ignore,no,undetermined,0,0,0,no,9.704158853977813e-05,no,0.0001028234778214713,no,8.618023972266878e-05,no,7.500503008764863e-05,no,7.548377628387645e-05,no,6.317234672920366e-05
982,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// check the id unsaved-value,no,undetermined,0,0,0,no,0.003685609955421083,no,0.002954419365615108,no,0.0024626795979522122,no,0.002342786784380914,no,0.002637434675513609,no,0.0023360239946572845
983,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if we get here, it is possible that we have a proxy 'in the way' of the merge map resolution... // 		NOTE: decided to put this here rather than in the above loop as I was nervous about the performance //		of the loop-in-loop especially considering this is far more likely the 'edge case'",no,undetermined,0,0,0,no,0.16110137323941703,no,0.2012865010849766,no,0.19682450126441312,no,0.20141078892414516,no,0.19557435484539165,no,0.19157690661120003
984,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// check to see if it is in the second-level cache,no,undetermined,0,0,0,no,0.01097914975426074,no,0.010976220828789478,no,0.009085337320352776,no,0.008041719813372369,no,0.007976551503947257,no,0.007265134824478935
985,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Custom SQL (would be better if these were private),no,undetermined,0,0,0,no,0.1385523740951451,no,0.20137683905012893,no,0.1859518897883184,no,0.19441810108599925,no,0.19181552913668842,no,0.18399342243565414
986,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,///////////////////////////////////////////////////////////////////////,no,undetermined,0,0,0,no,0.0036523008980329486,no,0.005504726900042388,no,0.006461868463342029,no,0.00788716525811375,no,0.0079850989855144,no,0.007268429553841039
987,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// our column span is the number of columns in the PK,no,undetermined,0,0,0,no,0.0016043828311040704,no,0.0020502191849742515,no,0.0017661669670122236,no,0.001546274842960727,no,0.0015468968211576131,no,0.0013833975315433967
988,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// For property references generate <tablealias>.<columnname> as <projectionalias>,no,undetermined,0,0,0,no,0.004650275557859573,no,0.0037124708210695867,no,0.0030055858626782486,no,0.0027918617091384486,no,0.0028013808867908803,no,0.0024991001588589436
989,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// in case we were deserialized in a different JVM, look for an instance with the same name // (alternatively we could do an actual JNDI lookup here....)",no,undetermined,0,0,0,no,0.0922405634322992,no,0.010967376746091348,no,0.009083720641552143,no,0.0080531989826685,no,0.008009805369779532,no,0.007271037342716811
990,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0036523008980329486,no,0.005504726900042388,no,0.006461868463342029,no,0.00788716525811375,no,0.0079850989855144,no,0.007268429553841039
991,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// KEY,no,undetermined,0,0,0,no,0.001098376126014934,no,0.000373061776759769,no,0.0002704965529507288,no,0.0002608871058925787,no,0.0003378165000104013,no,0.0002826123035065364
992,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//force immediate execution of the insert,no,undetermined,0,0,0,no,0.0015744072838550565,no,0.0017103775367423599,no,0.001509446584717966,no,0.00127613596135434,no,0.0012563755691562006,no,0.0011020281842156255
993,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// general purpose parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0015537365720725456,no,0.0017304419817690997,no,0.001722256030368593,no,0.0019380633199056444,no,0.0019291966005262969,no,0.0017258477665170475
994,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// entities ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.00854609235667327,no,0.010966927113357162,no,0.009105437824234716,no,0.00806817317788694,no,0.00800556047996419,no,0.007283596868666666
995,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.006547506246461415,no,0.008740606355176617,no,0.008777707696816024,no,0.008043268747741495,no,0.007999654021596971,no,0.007269092274182314
996,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Loaded entity instances, by EntityUniqueKey",no,undetermined,0,0,0,no,0.014069143934991554,no,0.006842942486785003,no,0.0060299781320589515,no,0.005456892248219889,no,0.005249631508929976,no,0.004784377494895072
997,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//allow any identifier quoted with backtick //only recognizes identifiers beginning with a letter,no,undetermined,0,0,0,no,0.01177010667096274,no,0.00887892197187725,no,0.007950659657171098,no,0.00712149597363525,no,0.006997672570295326,no,0.0063110137844049645
998,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// collections ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.006877684920162939,no,0.004335376863207058,no,0.004051483087399281,no,0.0044672191998971975,no,0.004544710001972188,no,0.004146529446004289
999,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Configurable implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.10944411237706692,no,0.14777847171881248,no,0.1598510362136642,no,0.1733342212014335,no,0.17242430940719672,no,0.16728275407274307
1000,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Identity map of EntityEntry instances, by the entity instance",no,undetermined,0,0,0,no,0.006204576621719241,no,0.0039710191077700265,no,0.0033951873812679556,no,0.0029386232856991263,no,0.0027901999723632656,no,0.002492347880143346
1001,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Write HTML footer,no,undetermined,0,0,0,no,0.0009791374041225947,no,0.0014990511162677044,no,0.0014779435957318812,no,0.00151187905825751,no,0.0014501593004880805,no,0.0012832156031040184
1002,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Entity proxies, by EntityKey",no,undetermined,0,0,0,no,0.008168410538461924,no,0.010971054117378549,no,0.009106506324069107,no,0.008063060329674049,no,0.00799936823026085,no,0.007285079312421284
1003,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// delete does cascade to uninitialized collections,no,undetermined,0,0,0,no,0.006365728146686904,no,0.008938002567201082,no,0.007297903294445643,no,0.006325690591895337,no,0.006255363394781491,no,0.005653510123625687
1004,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Snapshots of current database state for entities // that have *not* been loaded,no,undetermined,0,0,0,no,0.008269962150861959,no,0.007035613430067126,no,0.006589661644943482,no,0.0062533812199866015,no,0.006176497431065642,no,0.005597388270814606
1005,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// NativeSQL: collect key column and auto-aliases,no,undetermined,0,0,0,no,0.0012038917329587095,no,0.0014728066160195083,no,0.0012598863269981729,no,0.001160995676359908,no,0.0012143510434318029,no,0.001055873103863733
1006,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Identity map of array holder ArrayHolder instances, by the array instance",no,undetermined,0,0,0,no,0.0020595317225676115,no,0.001987936513993466,no,0.0017023532081637005,no,0.0015240420109481584,no,0.001493192223922528,no,0.0013154107840308497
1007,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//unquotedKeyColumnNames = StringHelper.unQuote(keyColumnAliases);,no,undetermined,0,0,0,no,0.0036523008980329486,no,0.005504726900042388,no,0.006461868463342029,no,0.007381783953439597,no,0.007450385858817557,no,0.006779123257571662
1008,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//cannot occur,no,undetermined,0,0,0,no,0.0012768550030466978,no,0.00152432878485838,no,0.0015267911040071577,no,0.0015600827452603588,no,0.0015670737205484963,no,0.0013876214697489194
1009,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Don't need to lock the cache here, since if someone // else inserted the same pk first, the insert would fail",no,undetermined,0,0,0,no,0.0064550676017871835,no,0.006745796355925521,no,0.005043265638040083,no,0.004290899850254108,no,0.00632746215696146,no,0.00543076591215311
1010,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//cannot occur,no,undetermined,0,0,0,no,0.0012768550030466978,no,0.00152432878485838,no,0.0015267911040071577,no,0.0015600827452603588,no,0.0015670737205484963,no,0.0013876214697489194
1011,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This is not strictly true.  We actually just need to make sure that // it is ordered by root-entity PK and that that order-by comes before // any non-root-entity ordering...,no,undetermined,0,0,0,no,0.057780172921013354,no,0.010969743002813037,no,0.009106633343293556,no,0.008052943668351218,no,0.007997258451989127,no,0.007272852935764432
1012,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// try ""get""",no,undetermined,0,0,0,no,0.0006328548904164413,no,0.0008195267751873473,no,0.0007329308879098961,no,0.0006745563588419141,no,0.0006710566124796032,no,0.0005885723509869247
1013,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// pass control along to the rest of the processing chain,no,undetermined,0,0,0,no,0.003209571659285728,no,0.0030666753270191076,no,0.0028635072492949067,no,0.002839843807604221,no,0.0027692082126222,no,0.00245691575230137
1014,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Set of EntityKeys of deleted objects,no,undetermined,0,0,0,no,0.0010857037122187654,no,0.0021581714680419107,no,0.0018018402402158688,no,0.0017449141374378083,no,0.0016918861937671487,no,0.0014797477535350902
1015,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// all this only really needs to consider properties // of this class, not its subclasses, but since we // are reusing code used for sequential selects, we // use the subclass closure",no,undetermined,0,0,0,no,0.3479209713767129,no,0.279071339024261,no,0.2596680579413269,no,0.24691525072428439,no,0.24358506309167485,no,0.2386550551155758
1016,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// A list of collection wrappers that were instantiating during result set // processing, that we will need to initialize at the end of the query",no,undetermined,0,0,0,no,0.024802331378731432,no,0.010960940465352693,no,0.009083353452511633,no,0.008046523526756302,no,0.007984568498266823,no,0.00728177676614919
1017,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*protected void initPropertyPaths(
			final String path,
			final Type type,
			final String[] columns,
			final String[] formulaTemplates,
			final Mapping factory)
	throws MappingException {
		//addFormulaPropertyPath(path, type, formulaTemplates);
		initPropertyPaths(path, type, columns, formulaTemplates, factory);
	}*/",no,undetermined,0,0,0,no,0.0035490246741549983,no,0.006868974297560329,no,0.005147333683990131,no,0.004327487589878318,no,0.004350486607806677,no,0.003920284853363544
1018,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Downgrade locks,no,undetermined,0,0,0,no,0.002915056750133515,no,0.003738603893262097,no,0.00432744557985312,no,0.005147246795396242,no,0.005205229889110557,no,0.00471418540280558
1019,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//( (Column) model.getTable().getPrimaryKey().getColumnIterator().next() ).getName();,no,undetermined,0,0,0,no,0.010592930245891434,no,0.010982361982227141,no,0.00910962089956251,no,0.008069443447594018,no,0.007981420916297336,no,0.007281799844197863
1020,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// do nothing...,no,undetermined,0,0,0,no,0.0026603375353391992,no,0.003094147110700841,no,0.002527109803647395,no,0.002256606520692637,no,0.0022264173318832198,no,0.0019676410969491197
1021,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Deserialize //-----------------------------------------------------------------------,no,undetermined,0,0,0,no,0.0036523008980329486,no,0.005504726900042388,no,0.006461868463342029,no,0.00788716525811375,no,0.0079850989855144,no,0.007268429553841039
1022,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// do nothing...,no,undetermined,0,0,0,no,0.0026603375353391992,no,0.003094147110700841,no,0.002527109803647395,no,0.002256606520692637,no,0.0022264173318832198,no,0.0019676410969491197
1023,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Actually the semantics of the next three are really ""Bag"" // Note that, unlike objects, collection insertions, updates, // deletions are not really remembered between flushes. We // just re-use the same Lists for convenience.",no,undetermined,0,0,0,no,0.10129793600966282,no,0.13247681085059607,no,0.11860093973727406,no,0.1109821207076626,no,0.10877808029182197,no,0.10472224867363462
1024,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	public boolean isShowSqlEnabled() { //		return showSql; //	} // //	public boolean isFormatSqlEnabled() { //		return formatSql; //	},no,undetermined,0,0,0,no,0.0004620331783512005,no,0.00024630333691012585,no,0.00018164315478598405,no,0.00014424528884021597,no,0.0001433047113465927,no,0.00012078906455529678
1025,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//with two-deep subqueries, the same alias would get generated for //both using the old method (criteriaQuery.generateSQLAlias()), so //that is now used as a fallback if the main criteria alias isn't set",no,undetermined,0,0,0,no,0.03968749663851561,no,0.010961229770858807,no,0.009097892888762286,no,0.00805584642721017,no,0.007990454777683554,no,0.007281146382682547
1026,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*(array==null) ? tempList.size() :*/,no,undetermined,0,0,0,no,0.001684555162079017,no,0.0015801264716546243,no,0.0013862001240568657,no,0.001280932499893253,no,0.0012905645401560491,no,0.001103206869984254
1027,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//sort the updates by pk,no,undetermined,0,0,0,no,0.0032276350074893186,no,0.0021141251392388515,no,0.0017684056462885479,no,0.0015830098149331308,no,0.001579348387441317,no,0.001396733376113838
1028,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// should be safe to only ever expect EntityPersister references here,no,undetermined,0,0,0,no,0.007399316102412847,no,0.010818408159428592,no,0.008873945141684053,no,0.008063483199588013,no,0.008003582461050431,no,0.007254302617074058
1029,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//optimize the hash size to eliminate a rehash.,no,undetermined,0,0,0,no,0.030227023757757786,no,0.010967255350773822,no,0.009109135120411347,no,0.008038618169103211,no,0.007992005701183285,no,0.007272018270072311
1030,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//unwrap the object,no,undetermined,0,0,0,no,0.0017443478884702252,no,0.0025089438037158756,no,0.0023629664945408195,no,0.00233178634449197,no,0.002278443294683445,no,0.0020222273218561096
1031,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Impl note: takes advantage of the fact that an escpaed single quote // embedded within a quote-block can really be handled as two seperate // quote-blocks for the purposes of this method...,no,undetermined,0,0,0,no,0.06473505453417823,no,0.010969341669243706,no,0.009113071260762266,no,0.00804964581225572,no,0.007990607779030384,no,0.0072722241205543875
1032,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// again, CCS did not have such a concept; but a reasonable // proximity is to clear the cache after transaction *as long as* // the underlying cache is not JTA aware.",no,undetermined,0,0,0,no,0.02231342090287834,no,0.010955999806128535,no,0.009094601383941105,no,0.008065797334989066,no,0.007979044715796193,no,0.007279853828794794
1033,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the entity associated with the current action.,no,undetermined,0,0,0,no,0.0037675803908950663,no,0.004368766252925984,no,0.003646165448898524,no,0.003419977612326546,no,0.0033954099067879844,no,0.003032521501394633
1034,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this page intentionally left blank :),no,undetermined,0,0,0,no,0.012887054889357343,no,0.010979484384690257,no,0.009104414701541354,no,0.008045225170846736,no,0.00797808775883202,no,0.007275375774255538
1035,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// unfortunately this stuff can't be cached because // it is per-invocation, not constant for the // QueryTranslator instance",no,undetermined,0,0,0,no,0.14187346547245094,no,0.08537427955326882,no,0.009110848404236682,no,0.008047679858973129,no,0.007999488738177143,no,0.007283232099818688
1036,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//initialize + unwrap the object,no,undetermined,0,0,0,no,0.0012041636388407638,no,0.001560774235175894,no,0.0013456853571772415,no,0.0012545962671140858,no,0.0012375444175701856,no,0.0010658248164647623
1037,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// SEQUENCE support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.008605833965731365,no,0.009236950036992953,no,0.008546883683790474,no,0.008067873018558866,no,0.008005795866799103,no,0.007275172496583134
1038,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// do not do anything,no,undetermined,0,0,0,no,0.0021719714330033163,no,0.002211125200886687,no,0.0016108040926041901,no,0.0013267398834655368,no,0.0013108151071059306,no,0.0011683227606403342
1039,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we can't batch joined inserts, *especially* not if it is an identity insert; // nor can we batch statements where the expectation is based on an output param",no,undetermined,0,0,0,no,0.024187823732146962,no,0.010971995014653287,no,0.009082326023262983,no,0.00804832600603518,no,0.007986418837386367,no,0.007274843456877618
1040,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//,no,undetermined,0,0,0,no,0.0036523008980329486,no,0.005504726900042388,no,0.006461868463342029,no,0.00788716525811375,no,0.0079850989855144,no,0.007268429553841039
1041,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// unfortunately this stuff can't be cached because // it is per-invocation, not constant for the // QueryTranslator instance",no,undetermined,0,0,0,no,0.14187346547245094,no,0.08537427955326882,no,0.009110848404236682,no,0.008047679858973129,no,0.007999488738177143,no,0.007283232099818688
1042,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//return the proxied object,no,undetermined,0,0,0,no,0.004776434877886392,no,0.0051776802089840675,no,0.004997576793070336,no,0.00520623840230484,no,0.005154288087857199,no,0.004649985417561661
1043,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// else no collection element, but also no owner",no,undetermined,0,0,0,no,0.0004463189536357022,no,0.0005098506945034791,no,0.00026152686849296823,no,0.0002085021116562251,no,0.00023090341177442206,no,0.0002532298085394015
1044,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ignore,no,undetermined,0,0,0,no,9.704158853977813e-05,no,0.0001028234778214713,no,8.618023972266878e-05,no,7.500503008764863e-05,no,7.548377628387645e-05,no,6.317234672920366e-05
1045,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we have the form: trim(trimSource) //      so we trim leading and trailing spaces // EARLY EXIT!!!!,no,undetermined,0,0,0,no,0.004547442464364531,no,0.006645964387392899,no,0.005180076503914389,no,0.00447680906426448,no,0.0044545078587940904,no,0.004033058575335787
1046,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//overwrite old proxy,no,undetermined,0,0,0,no,0.000512222330164194,no,0.0006591157481866258,no,0.0005707586818680544,no,0.0005568584101981825,no,0.0005394645477153031,no,0.00046822539993099073
1047,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// the MRU cache used to keep hard references to the most recently used query plans; // note : LRU here is a bit of a misnomer, it indicates that LRU entries are removed, the // actual kept entries are the MRU entries",no,undetermined,0,0,0,no,0.021684373961615863,no,0.010995988362924619,no,0.00908848836708065,no,0.008057043183544802,no,0.008003439797590446,no,0.007289066043805585
1048,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// early exit...,no,undetermined,0,0,0,no,0.0012308318987046829,no,0.0010243170538795194,no,0.0009095420391860735,no,0.0008708338326286836,no,0.0008757209531325773,no,0.0007785241760039121
1049,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Handles things like: // a and b or c // a and ( b or c ) // not a and not b // not ( a and b ) // x between y and z            (overloaded ""and"") // x in ( a, b, c )             (overloaded brackets) // not not a // a is not null                (overloaded ""not"") // etc...... // and expressions like // foo = bar                    (maps to: foo.id = bar.id) // foo.Bar = 'foo'              (maps to: foo.bar = 'foo') // foo.Bar.Baz = 1.0            (maps to: foo.bar = bar.id and bar.baz = 1.0) // 1.0 = foo.Bar.Baz            (maps to: bar.baz = 1.0 and foo.Bar = bar.id) // foo.Bar.Baz = a.B.C          (maps to: bar.Baz = b.C and foo.Bar = bar.id and a.B = b.id) // foo.Bar.Baz + a.B.C          (maps to: bar.Baz + b.C and foo.Bar = bar.id and a.B = b.id) // ( foo.Bar.Baz + 1.0 ) < 2.0  (maps to: ( bar.Baz + 1.0 ) < 2.0 and foo.Bar = bar.id)",no,undetermined,0,0,0,no,0.013192053597154052,no,0.010986120467159318,no,0.009118862470214439,no,0.008045356711858723,no,0.007979974854536246,no,0.007275350431367743
1050,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// or should it actually throw an exception?,no,undetermined,0,0,0,no,0.07265355202257424,no,0.010963968630202514,no,0.009087817587797057,no,0.008047367770203859,no,0.007991284258441022,no,0.00727264120297207
1051,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// both many-to-one and one-to-one are represented as a // Property.  EntityPersister is relying on this value to // determine ""lazy fetch groups"" in terms of field-level // interception.  So we need to make sure that we return // true here for the case of many-to-one and one-to-one // with lazy=""no-proxy"" // // * impl note - lazy=""no-proxy"" currently forces both // lazy and unwrap to be set to true.  The other case we // are extremely interested in here is that of lazy=""proxy"" // where lazy is set to true, but unwrap is set to false. // thus we use both here under the assumption that this // return is really only ever used during persister // construction to determine the lazy property/field fetch // groupings.  If that assertion changes then this check // needs to change as well.  Partially, this is an issue with // the overloading of the term ""lazy"" here...",no,undetermined,0,0,0,no,0.32937015110459067,no,0.1929935973367577,no,0.1714130837066271,no,0.1791953124318787,no,0.18081155538324364,no,0.17738444461086517
1052,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The property is a component...,no,undetermined,0,0,0,no,0.03850209548268336,no,0.010971266548881052,no,0.009092695901655897,no,0.008072068276745642,no,0.007986827854200343,no,0.007291069374904508
1053,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// the ids are fully resolved, so compare them with isDirty(), not isModified()",no,undetermined,0,0,0,no,0.024832369809915943,no,0.010965274559497046,no,0.009093664013218521,no,0.0080506329241432,no,0.00800931107345855,no,0.0072746000917345765
1054,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//cant instantiate,no,undetermined,0,0,0,no,0.001964015863541702,no,0.0031008071792491265,no,0.003070584994368137,no,0.003308401373829664,no,0.0033393264913197367,no,0.002990260802816759
1055,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//QueryJoinFragment join = q.createJoinFragment(useThetaStyleJoin);,no,undetermined,0,0,0,no,0.0023849941949564486,no,0.0013098325583089335,no,0.0013968965349858541,no,0.0020924342039645165,no,0.0021561620598768354,no,0.0019249965609719093
1056,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if it is a property of an embedded component, invoke on the ""identifier""",no,undetermined,0,0,0,no,0.019689770531535047,no,0.009973772118975247,no,0.007869087520027651,no,0.0068432649077601986,no,0.006523329302806649,no,0.005786305518758811
1057,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// SUBCLASSES,no,undetermined,0,0,0,no,0.00028887095134856095,no,0.0008656944912933525,no,0.0008731021489232224,no,0.000937172075490488,no,0.0009414638865616048,no,0.0008237722651421258
1058,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// otherwise:,no,undetermined,0,0,0,no,0.011293770569949122,no,0.010958294189964503,no,0.006701128754620663,no,0.0069330307305826185,no,0.007204730250038558,no,0.00659671069482104
1059,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// starts with the name of a mapped class (new style),no,undetermined,0,0,0,no,0.008740690597998825,no,0.010978806843244112,no,0.009098055269699434,no,0.00804455471347368,no,0.007982550505331013,no,0.007271329859297242
1060,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//treat it just like a new collection,no,undetermined,0,0,0,no,0.020611001593906518,no,0.010952405071866594,no,0.00864597773185705,no,0.007556255360071281,no,0.007469380296145875,no,0.006910937864507557
1061,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// We must return a valid RDMS/RSA command from this method to // prevent RDMS/RSA from issuing *ERROR 400,no,undetermined,0,0,0,no,0.052731104252698134,no,0.010968068569263625,no,0.00908090658962022,no,0.00805370149024217,no,0.00798644954442893,no,0.007267698088848359
1062,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// skip finalize methods,no,undetermined,0,0,0,no,0.002329819789541001,no,0.0005793991296406102,no,0.0004835756533830719,no,0.00048472133364357097,no,0.0004867334145196901,no,0.0004210337494255003
1063,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// return the (fully resolved) identifier value, but do not resolve // to the actual referenced entity instance // NOTE: the owner of the association is not really the owner of the id!",no,undetermined,0,0,0,no,0.04310031773288139,no,0.010970101907562629,no,0.009109527080218841,no,0.00804416975269173,no,0.00799681806231231,no,0.007283471677993178
1064,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//do this work only at the very highest level of the load //don't let this method be called recursively,no,undetermined,0,0,0,no,0.21723416151656302,no,0.11140227797899042,no,0.15376529215223791,no,0.1408231581289005,no,0.1375734614635546,no,0.13415003843023973
1065,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//	public static JDBCException newJDBCException(String string, SQLException root, String sql) { //		string = string + "" ["" + sql + ']'; //		log.error(string, root); //		logExceptions(root); //		return new JDBCException(string, root, sql); //	} // //	public static JDBCException newJDBCException(String string, SQLException root) { //		log.error(string, root); //		logExceptions(root); //		return new JDBCException(string, root); //	}",no,undetermined,0,0,0,no,0.0037670636255184133,no,0.0029710048470817626,no,0.0022620147650708063,no,0.0019351661083818466,no,0.0019220739442767077,no,0.0017078033645786341
1066,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//note that each iteration of the loop may add new elements,no,undetermined,0,0,0,no,0.006409605832550415,no,0.005980057924264066,no,0.00461635338827797,no,0.004206572003642581,no,0.00418149622537955,no,0.0038217964708848365
1067,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if we know there is exactly 1 row, we can skip. // it would be great if we could _always_ skip this; // it is a problem for <key-many-to-one>",no,undetermined,0,0,0,no,0.1113632858584547,no,0.05360110582772527,no,0.009092903765132786,no,0.008058160374394814,no,0.00798441195791676,no,0.007274167438217207
1068,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/* This can never happen because this rule will always eliminate the child NOT.
			case NOT:
				return x.getFirstChild();			// (NOT (NOT x) ) => (x)
*/",no,undetermined,0,0,0,no,0.035309664637872065,no,0.010980643794838674,no,0.009109897317913222,no,0.008052356591692145,no,0.007975441390608577,no,0.0072692772892294115
1069,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we need to obtain the lock before any actions are // executed, since this may be an inverse=""true"" // bidirectional association and it is one of the // earlier entity actions which actually updates // the database (this action is resposible for // second-level cache invalidation only)",no,undetermined,0,0,0,no,0.06969871230411527,no,0.010965605621336435,no,0.009079946554785938,no,0.008059555415582587,no,0.00797789796034112,no,0.007263346410703123
1070,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// HHH-2481 make sure the callback gets cleared, otherwise the instance stays in a static thread local.",no,undetermined,0,0,0,no,0.010093380086989508,no,0.005329989043819147,no,0.002929555228092045,no,0.0025194128571913144,no,0.002443133130388157,no,0.0021761734290826084
1071,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//no point doing this if NONE was requested,no,undetermined,0,0,0,no,0.0008368349241382186,no,0.0012944900080788953,no,0.0015408454378458064,no,0.0013782743117699949,no,0.0010806775100227102,no,0.0009463415098501386
1072,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// while constructor is running,no,undetermined,0,0,0,no,0.009202183851007649,no,0.010977011147528498,no,0.009096847399170282,no,0.008051093347609789,no,0.007975388682564711,no,0.0072914487847510505
1073,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The keyword used to specify a nullable column.,no,undetermined,0,0,0,no,0.0043437712867733114,no,0.004762841311692114,no,0.005018704669811536,no,0.004435497571098816,no,0.0043959721602588155,no,0.003965200357309584
1074,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// while constructor is running,no,undetermined,0,0,0,no,0.009202183851007649,no,0.010977011147528498,no,0.009096847399170282,no,0.008051093347609789,no,0.007975388682564711,no,0.0072914487847510505
1075,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//there is probably a row there, so try to update //if no rows were updated, we will find out",no,undetermined,0,0,0,no,0.00384957044915996,no,0.0037683595778982555,no,0.0029949099573143307,no,0.0025542445106796125,no,0.0024408864437641667,no,0.0021722842572549322
1076,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// note: interface is assumed to already contain HibernateProxy.class,no,undetermined,0,0,0,no,0.012763652388067445,no,0.010979265591831568,no,0.00911698851325577,no,0.00806056332070576,no,0.008011423500694094,no,0.007279087052329409
1077,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//do nothing to avoid a lazy property initialization,no,undetermined,0,0,0,no,0.00596560257604191,no,0.004685234528510031,no,0.0037701159798043875,no,0.0032332517564729346,no,0.003221167073531859,no,0.0029201912335579594
1078,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// interfaces // arguments,no,undetermined,0,0,0,no,0.0008249279709638993,no,0.0012758185008084914,no,0.0013458528212274207,no,0.0015008702545842602,no,0.0015248097544084591,no,0.00133920071919491
1079,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Not called at runtime so doesn't matter if its slow :),no,undetermined,0,0,0,no,0.009948111252820835,no,0.008993193584094663,no,0.007950215203708349,no,0.007211123877462818,no,0.007282315194370979,no,0.006629133375243087
1080,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//TODO!,no,undetermined,0,0,0,no,0.01108450116238773,no,0.010983556682987627,no,0.00909444328901823,no,0.008067650457139275,no,0.007989377549034525,no,0.007263500918457884
1081,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Chop off the rest of the tree.,no,undetermined,0,0,0,no,0.004940814031036157,no,0.003130595790164154,no,0.0026168244047920985,no,0.002248641297988205,no,0.0024571986785913175,no,0.0021733780524314013
1082,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Get the caller,no,undetermined,0,0,0,no,0.0019317701830443754,no,0.003074954837327725,no,0.0029265116224009603,no,0.002843921744786141,no,0.002895738356865303,no,0.0026128035783047465
1083,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// prefer re-generation of identity!,no,undetermined,0,0,0,no,0.0016401879188133975,no,0.002213344020815059,no,0.002233803860581587,no,0.0023477281716352007,no,0.002386908912559755,no,0.002126261333285805
1084,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Get the caller principals,no,undetermined,0,0,0,no,0.0019317701830443754,no,0.003074954837327725,no,0.0029265116224009603,no,0.002843921744786141,no,0.002895738356865303,no,0.0026128035783047465
1085,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// refresh doesn't cascade to uninitialized collections,no,undetermined,0,0,0,no,0.004772502928724994,no,0.005702640780839419,no,0.004773074938862552,no,0.004238430167474059,no,0.004229019769116408,no,0.0038170580160720156
1086,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//private static final Alias DEFAULT_ALIAS = new Alias(10, null);",no,undetermined,0,0,0,no,0.0071803145834967936,no,0.006604396103888571,no,0.005328349088945033,no,0.004115848110121026,no,0.004060520137470124,no,0.0035949104514735723
1087,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//do nothing,no,undetermined,0,0,0,no,0.0026603375353391992,no,0.003094147110700841,no,0.002527109803647395,no,0.002256606520692637,no,0.0022264173318832198,no,0.0019676410969491197
1088,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*public boolean isNonExistant(EntityKey key) {
		return nonExistantEntityKeys.contains(key);
	}*/",no,undetermined,0,0,0,no,0.0010556485426639031,no,0.00046170747223720307,no,0.0003145991125285232,no,0.0002635786966275403,no,0.00043046438942148424,no,0.0003385339170228476
1089,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// generate id select fragment and then property select fragment for // each expression, just like generateSelectFragments().",no,undetermined,0,0,0,no,0.055556900426435435,no,0.010968735027757383,no,0.009088844754865431,no,0.00806365494297305,no,0.007981482127235597,no,0.007268014133661404
1090,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*public boolean isNonExistant(EntityUniqueKey key) {
		return nonExistentEntityUniqueKeys.contains(key);
	}*/",no,undetermined,0,0,0,no,0.0010556485426639031,no,0.00046170747223720307,no,0.0003145991125285232,no,0.0002635786966275403,no,0.00043046438942148424,no,0.0003385339170228476
1091,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//special case ... this is the leaf of the containment graph, even though not immutable",no,undetermined,0,0,0,no,0.011792499355039607,no,0.010573483060128534,no,0.008938943487103815,no,0.008067953792253548,no,0.007928623028360378,no,0.007158323643243339
1092,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// iterate all the entities currently associated with the persistence context.,no,undetermined,0,0,0,no,0.012996657338508372,no,0.010969150320045019,no,0.009117311124111764,no,0.00805644961630059,no,0.007981486821642786,no,0.007279677302765045
1093,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// According to both the ANSI-SQL and JPA specs, trim takes a variable number of parameters between 1 and 4. // at least one paramer (trimSource) is required.  From the SQL spec: // // <trim function> ::= //      TRIM <left paren> <trim operands> <right paren> // // <trim operands> ::= //      [ [ <trim specification> ] [ <trim character> ] FROM ] <trim source> // // <trim specification> ::= //      LEADING //      | TRAILING //      | BOTH // // If <trim specification> is omitted, BOTH is assumed. // If <trim character> is omitted, space is assumed",no,undetermined,0,0,0,no,0.0026587797508470378,no,0.010819396485935882,no,0.009039296625989832,no,0.007968453197194159,no,0.007885798349930966,no,0.007201870692410803
1094,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// does this entity entry pertain to the entity persister in which we are interested (owner)?,no,undetermined,0,0,0,no,0.021363640684499603,no,0.010990603574843119,no,0.009088138493201189,no,0.008041609613093173,no,0.007991950816261969,no,0.007265547916812336
1095,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/////////////////////////////////////////////////////////////////////// // Prepare persisters and link them up with their cache // region/access-strategy,no,undetermined,0,0,0,no,0.03616619900103899,no,0.010976411256189244,no,0.009116022902039946,no,0.008065845399439556,no,0.008001820138616413,no,0.007277739359162508
1096,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//check if the managed object is the parent,no,undetermined,0,0,0,no,0.004376522060260645,no,0.004084258693950211,no,0.0036632149400066152,no,0.0033417618888694905,no,0.0034649253112142057,no,0.003156758486491942
1097,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Allows various loaders (ok mainly the QueryLoader :) to check // whether scrolling of their result set should be allowed. // // By default it is allowed.,no,undetermined,0,0,0,no,0.011490096204575544,no,0.010933351177375789,no,0.009096290806237872,no,0.008057202360468552,no,0.008002599803143372,no,0.007268841969065293
1098,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// otherwise, the proxy was pruned during the serialization process",no,undetermined,0,0,0,no,0.0017505023899448604,no,0.0019464231877174014,no,0.001771686840336057,no,0.0015566103604554259,no,0.001805148095464257,no,0.0016033974187731955
1099,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// does not handle arrays (thats ok, cos they can't be lazy) // or newly instantiated collections, so we can do the cast",no,undetermined,0,0,0,no,0.03952786224577252,no,0.010987870524970921,no,0.009092016669495833,no,0.008047581868540224,no,0.007985824702138987,no,0.007277104897182497
1100,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// adds remove as a sort-of alias for delete...,no,undetermined,0,0,0,no,0.013631901175985705,no,0.009670220993295989,no,0.007428146433109047,no,0.005945035537233914,no,0.005881830161266358,no,0.005310860055320741
1101,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//unquotedIdentifierColumnName = identifierColumnAlias;,no,undetermined,0,0,0,no,0.0036523008980329486,no,0.005504726900042388,no,0.006461868463342029,no,0.00788716525811375,no,0.0079850989855144,no,0.007268429553841039
1102,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//return lhsPersister.getSubclassPropertyColumnNames(property);,no,undetermined,0,0,0,no,0.0016971115299517351,no,0.0012091377287081564,no,0.0009497686389047506,no,0.000805797633667047,no,0.0008200261910281145,no,0.0007260516887252622
1103,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// saves / updates don't cascade to uninitialized collections,no,undetermined,0,0,0,no,0.004417510055982489,no,0.00509584578720134,no,0.004386881086725499,no,0.004085107885811386,no,0.004083632596966061,no,0.0036933369583795747
1104,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//EARLY EXIT,no,undetermined,0,0,0,no,0.0012308318987046829,no,0.0010243170538795194,no,0.0009095420391860735,no,0.0008708338326286836,no,0.0008757209531325773,no,0.0007785241760039121
1105,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// create our own copy of the user-supplied tuplizer impl map,no,undetermined,0,0,0,no,0.0019399844855318624,no,0.0023586818592072774,no,0.0018825989503247517,no,0.0016128153441016023,no,0.0015953203070241606,no,0.0014177308464377403
1106,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if the identifier is quoted, remove the quotes",no,undetermined,0,0,0,no,0.008781751441751513,no,0.007029316523842096,no,0.005872421150210615,no,0.005249871123515091,no,0.0051809429069880645,no,0.004604075180578028
1107,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we can do the cast since orphan-delete does not apply to: // 1. newly instantiated collections // 2. arrays (we can't track orphans for detached arrays),no,undetermined,0,0,0,no,0.030848385566998246,no,0.010985644778321601,no,0.009109696271156662,no,0.008062823035413003,no,0.007984891189559107,no,0.007275836544342305
1108,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//truncate the identifier to the max alias length, less the suffix length",no,undetermined,0,0,0,no,0.004321519417763122,no,0.0036800799968865817,no,0.003197944435633592,no,0.002741997020196068,no,0.0027418749460343737,no,0.0024256677362352957
1109,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0036523008980329486,no,0.005504726900042388,no,0.006461868463342029,no,0.00788716525811375,no,0.0079850989855144,no,0.007268429553841039
1110,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//full joins are not supported.. yet!,no,undetermined,0,0,0,no,0.03108952718638617,no,0.010962596645770591,no,0.009099320957023094,no,0.008052816844562835,no,0.007990825127506731,no,0.007276384433535579
1111,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		 You may still have other ResultSets or update counts left to process here //		 but you can't do it now or the ResultSet you just got will be closed,no,undetermined,0,0,0,no,0.029444279503865575,no,0.010981441794164782,no,0.009100010918001528,no,0.008058553772209305,no,0.008000697812299224,no,0.007283397201379873
1112,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// null is not considered the same type as Integer. //$NON-NLS-1 //$NON-NLS-1,no,undetermined,0,0,0,no,0.0042838797789523765,no,0.003963569996059618,no,0.003017013305922019,no,0.002590480471616326,no,0.002546627869437913,no,0.0022730723935250135
1113,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// properly handle property-ref-based associations,no,undetermined,0,0,0,no,0.008789708653109794,no,0.01096527787231674,no,0.00908383425908529,no,0.00805390309170542,no,0.007990439826341853,no,0.007275285119067333
1114,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the outerJoinsAfterWhere needs to come before where clause to properly // handle dynamic filters,no,undetermined,0,0,0,no,0.02595748979309187,no,0.010989554396883905,no,0.009114817899882346,no,0.008044310324938839,no,0.007994839378179434,no,0.00728476050865905
1115,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// determine the id getter and setter methods from the proxy interface (if any) // determine all interfaces needed by the resulting proxy,no,undetermined,0,0,0,no,0.007544198279840884,no,0.00524197453475734,no,0.0040906923265090845,no,0.0037373266595015445,no,0.003791417625140638,no,0.00342998644494375
1116,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//$NON-NLS-1,no,undetermined,0,0,0,no,0.0017380500760647442,no,0.001776973943580999,no,0.001626506321839593,no,0.0015851967679545124,no,0.0015759521750899027,no,0.0013871181378158478
1117,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// add another (inner) nested select // add the main query // close off the inner nested select,no,undetermined,0,0,0,no,0.0029893810533957936,no,0.0024035770990018714,no,0.0017286604151102959,no,0.0014058738473997647,no,0.0013609448029264408,no,0.001225532470198993
1118,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//$NON-NLS-1,no,undetermined,0,0,0,no,0.0017380500760647442,no,0.001776973943580999,no,0.001626506321839593,no,0.0015851967679545124,no,0.0015759521750899027,no,0.0013871181378158478
1119,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		origin.addDestination( destination ); // This was the cause of HHH-242 //		origin.setType( FROM_FRAGMENT );			// Set the parent node type so that the AST is properly formed. // The destination node will have all the FROM text. // The parent node is a collection join too (voodoo - see JoinProcessor),no,undetermined,0,0,0,no,0.008063696518857995,no,0.0031805029538653712,no,0.0018273560505481096,no,0.0017146583507368384,no,0.0018886325455105826,no,0.0016538548575277313
1120,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//$NON-NLS-1,no,undetermined,0,0,0,no,0.0017380500760647442,no,0.001776973943580999,no,0.001626506321839593,no,0.0015851967679545124,no,0.0015759521750899027,no,0.0013871181378158478
1121,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// then handle any user-defined entity modes...,no,undetermined,0,0,0,no,0.005521270669304307,no,0.005022436057975266,no,0.0051027508788573156,no,0.0049358333292125875,no,0.005114378114100443,no,0.004664958431304585
1122,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//$NON-NLS-1,no,undetermined,0,0,0,no,0.0017380500760647442,no,0.001776973943580999,no,0.001626506321839593,no,0.0015851967679545124,no,0.0015759521750899027,no,0.0013871181378158478
1123,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0011622327290709787,no,0.0011638242245380203,no,0.0011173140002844785,no,0.0014774358081173686,no,0.0015026092631850257,no,0.00133634356530595
1124,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// strip off any leading 'and' token,no,undetermined,0,0,0,no,0.0030379456143878776,no,0.0016803869566574794,no,0.001416990760726462,no,0.0012800075064218963,no,0.001269618409907305,no,0.001115891387423802
1125,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// then the pojo tuplizer, using the dynamic-map tuplizer if no pojo representation is available",no,undetermined,0,0,0,no,0.0015338937258480663,no,0.001797799576703089,no,0.0014462327594791224,no,0.0012409549688599066,no,0.0013091706149963793,no,0.0011781722372099842
1126,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// if the condition is not already there...,no,undetermined,0,0,0,no,0.006661232292706453,no,0.005125261386498399,no,0.004118481234221766,no,0.003396599180433481,no,0.003332969532192273,no,0.0029556352076901262
1127,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// this has been shown to happen occasionally in rare cases // when using a transaction manager + transaction-timeout // where the timeout calls back through Hibernate's // registered transaction synchronization on a separate // ""reaping"" thread.  In cases where that reaping thread // executes through this block at the same time the main // application thread does we can get into situations where // these CMEs occur.  And though it is not ""allowed"" per-se, // the end result without handling it specifically is infinite // looping.  So here, we simply break the loop",no,undetermined,0,0,0,no,0.10697582184152332,no,0.08406385141735866,no,0.009104817444575523,no,0.008066481767918448,no,0.00797805046010762,no,0.007275120064928862
1128,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//dontSpace.add(""'"");",no,undetermined,0,0,0,no,0.0022489375652719173,no,0.0025673895198015982,no,0.0020103593442279094,no,0.001793213280982257,no,0.00176609790574439,no,0.0018086116746016687
1129,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//	public ComponentMetamodel(Component component, SessionFactoryImplementor sessionFactory) {",no,undetermined,0,0,0,no,0.020298876875144176,no,0.01098730703153757,no,0.00908228768270067,no,0.008043798127333562,no,0.007993700072656993,no,0.007264563188183835
1130,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//for MySQL,no,undetermined,0,0,0,no,0.0017402889735429782,no,0.0018705497726505132,no,0.0015469175392361781,no,0.0013992951625283116,no,0.0013904673154769287,no,0.0012288347683980596
1131,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Detect discriminator values...,no,undetermined,0,0,0,no,0.003427455136573893,no,0.002582548197498572,no,0.0027243811467930093,no,0.0029789720029984933,no,0.002969140094604404,no,0.0026672823448428877
1132,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/**
	 * Set a custom entity resolver. This entity resolver must be
	 * set before addXXX(misc) call.
	 * Default value is {@link org.hibernate.util.DTDEntityResolver}
	 *
	 * @param entityResolver entity resolver to use
	 */",no,undetermined,0,0,0,no,0.018147133284007085,no,0.010975501039120202,no,0.009117440964820617,no,0.008041684830879445,no,0.007993566174597636,no,0.007280985209836868
1133,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Handle any filters applied to this collection,no,undetermined,0,0,0,no,0.020357849310732253,no,0.008855438833158705,no,0.0068669869854096725,no,0.006237146810181439,no,0.006265358963020408,no,0.005718151222155649
1134,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//handle a property-ref,no,undetermined,0,0,0,no,0.002829850268289682,no,0.010992599073735117,no,0.009110590974027588,no,0.008048259463166826,no,0.00799245579386669,no,0.007284299310805088
1135,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if we could not register a synchronization, //do the before/after completion callbacks //ourself (but we need to let jdbcContext //know that this is what we are going to //do, so it doesn't keep trying to register //synchronizations)",no,undetermined,0,0,0,no,0.07937423367132598,no,0.010963610259264907,no,0.009078477424131223,no,0.008060136800296967,no,0.007994122497687932,no,0.007273923302953155
1136,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//HashMap columnsUnique = new HashMap();,no,undetermined,0,0,0,no,0.001446626113592596,no,0.00210176288495992,no,0.0021957008013505255,no,0.0023955249694112748,no,0.0024035936786296597,no,0.0021350182643061037
1137,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// then the pojo tuplizer, using the dynamic-map tuplizer if no pojo representation is available",no,undetermined,0,0,0,no,0.0015338937258480663,no,0.001797799576703089,no,0.0014462327594791224,no,0.0012409549688599066,no,0.0013091706149963793,no,0.0011781722372099842
1138,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//null caused some problems,no,undetermined,0,0,0,no,0.03921153072153394,no,0.010968497104133392,no,0.009092846861843697,no,0.008064764894165232,no,0.007979354161804196,no,0.007264758422085556
1139,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// two conditions where we need to transform this to a theta-join syntax: //      1) 'elem' is the ""root from-element"" in correlated subqueries //      2) The DotNode.useThetaStyleImplicitJoins has been set to true //          and 'elem' represents an implicit join",no,undetermined,0,0,0,no,0.024662438184688495,no,0.010967912346910405,no,0.009101226646976823,no,0.008053644281082057,no,0.007992834370598889,no,0.007274304370605579
1140,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*package*/,no,undetermined,0,0,0,no,0.004437760287425697,no,0.004876701033127142,no,0.004453796219161608,no,0.004528643871969353,no,0.004494747150569872,no,0.004042588878453024
1141,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// cascade the refresh prior to refreshing this entity,no,undetermined,0,0,0,no,0.007560504457470859,no,0.009118291078101547,no,0.00762774802402358,no,0.007022381477579139,no,0.006949430588610349,no,0.00630234236903474
1142,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//not sure if this would ever be null but wanted to be careful,no,undetermined,0,0,0,no,0.008738735748338328,no,0.009425789741045687,no,0.009099734658180631,no,0.008052697396200785,no,0.007991391931524096,no,0.007267638467836906
1143,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Impl note: takes advantage of the fact that an escpaed single quote // embedded within a quote-block can really be handled as two seperate // quote-blocks for the purposes of this method...,no,undetermined,0,0,0,no,0.06473505453417823,no,0.010969341669243706,no,0.009113071260762266,no,0.00804964581225572,no,0.007990607779030384,no,0.0072722241205543875
1144,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//even on inverse=""true""",no,undetermined,0,0,0,no,0.010620295854833773,no,0.010977861354035279,no,0.009093434143113114,no,0.008045001726234137,no,0.007996479763615418,no,0.007277660512642017
1145,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// PROPERTIES,no,undetermined,0,0,0,no,0.005377607631194809,no,0.005100804320321773,no,0.004930592196729065,no,0.00516214485141379,no,0.005224368233705591,no,0.0047147296611339635
1146,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*package*/,no,undetermined,0,0,0,no,0.004437760287425697,no,0.004876701033127142,no,0.004453796219161608,no,0.004528643871969353,no,0.004494747150569872,no,0.004042588878453024
1147,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we need to dirty check many-to-ones with not-found=""ignore"" in order  // to update the cache (not the database), since in this case a null // entity reference can lose information",no,undetermined,0,0,0,no,0.1148929814065059,no,0.06395929209635384,no,0.00908869288515335,no,0.008065369162705015,no,0.007981716722382936,no,0.0072768463138506555
1148,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*package*/,no,undetermined,0,0,0,no,0.004437760287425697,no,0.004876701033127142,no,0.004453796219161608,no,0.004528643871969353,no,0.004494747150569872,no,0.004042588878453024
1149,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// register hibernate types for default use in scalar sqlquery type auto detection,no,undetermined,0,0,0,no,0.007551371024610642,no,0.01098426359112312,no,0.009114821126321983,no,0.008060460081339422,no,0.0079890040946269,no,0.00728195332944924
1150,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If true then execute db updates, otherwise just generate and display updates",no,undetermined,0,0,0,no,0.004621025127866496,no,0.0043830563914337714,no,0.002787889957288394,no,0.0024357078049027227,no,0.00245827805467399,no,0.002184913956139345
1151,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// SQLFunction implementation,no,undetermined,0,0,0,no,0.011073257039148595,no,0.010958283404820387,no,0.009087169526191378,no,0.008059914786309378,no,0.007980795431339406,no,0.007265729149023407
1152,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we only release the connection,no,undetermined,0,0,0,no,0.017155112442435342,no,0.010989112084728988,no,0.009093277378979312,no,0.00805240487438019,no,0.007998240124458595,no,0.007274494035890846
1153,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//we only check the version when _upgrading_ lock modes,no,undetermined,0,0,0,no,0.0024795762697284868,no,0.0031578139339593666,no,0.0026498223944224283,no,0.0026615129389905485,no,0.0026849705756992284,no,0.0024012682724617847
1154,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// deprecated option...,no,undetermined,0,0,0,no,0.01590532621413915,no,0.010964208530780613,no,0.009100381801753345,no,0.008052564227601077,no,0.007995805759181759,no,0.007283635676097885
1155,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// only carry on if the method has no parameters,no,undetermined,0,0,0,no,0.0009445687393053088,no,0.0012551365493680712,no,0.0010533502760245491,no,0.0009095834836196283,no,0.0009280497633644642,no,0.0008357387211992781
1156,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*NativeSQLQueryReturn*/,no,undetermined,0,0,0,no,0.0036523008980329486,no,0.005504726900042388,no,0.006461868463342029,no,0.00788716525811375,no,0.0079850989855144,no,0.007268429553841039
1157,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//woops we got an instance of another class hierarchy branch,no,undetermined,0,0,0,no,0.006710642611281169,no,0.008217965233312561,no,0.006359646330497797,no,0.005756099044477587,no,0.005731607030247558,no,0.005201926914544948
1158,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// COMPOSITE-ID,no,undetermined,0,0,0,no,0.012746822420568087,no,0.010805404959679063,no,0.007099602049123992,no,0.006942215721270074,no,0.007435301358652796,no,0.006612705154853271
1159,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Create an OuterJoinGenerator for this dialect.,no,undetermined,0,0,0,no,0.0704490081192766,no,0.010982669819366804,no,0.00910693633269481,no,0.008062194556109459,no,0.007998627010821508,no,0.007287743214674958
1160,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if an exception occurs during flush, user must call rollback()",no,undetermined,0,0,0,no,0.00464753084023067,no,0.0031192976478867547,no,0.0026263045272096517,no,0.0023490913756134,no,0.0024238297324586785,no,0.0021775624043245496
1161,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*<String>*/,no,undetermined,0,0,0,no,0.003205151690652445,no,0.0029642217946896283,no,0.0023241209708094387,no,0.0021786718817279876,no,0.0021581040253422046,no,0.0019247352143914843
1162,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//actually, this last test is probably unnecessary, since  //beforeCompletion() doesn't get called during rollback",no,undetermined,0,0,0,no,0.03441631973000771,no,0.010952482664223686,no,0.009106786450492288,no,0.008056247771285246,no,0.007976493132352911,no,0.007276473411167601
1163,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we need to step through the rows one row at a time (slow),no,undetermined,0,0,0,no,0.004540797984474656,no,0.005312311048858589,no,0.0037176225290489473,no,0.0029981527455776417,no,0.003007040565364017,no,0.002701257473464992
1164,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//final boolean forceCacheRefresh,",no,undetermined,0,0,0,no,0.0001382254626651015,no,0.00018676860229683545,no,0.00015313937064195146,no,0.00013158445774651422,no,0.00013154098918303182,no,0.00010987896739092158
1165,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.003568339892969459,no,0.008376698813620563,no,0.0073742123328351065,no,0.008068392444027692,no,0.008004775321311485,no,0.007278763247404769
1166,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Create an DotNode AST for the path and resolve it.,no,undetermined,0,0,0,no,0.021497763370532243,no,0.010245558644081831,no,0.007584284536760039,no,0.0069289149146140915,no,0.006827066721426816,no,0.005902933127611607
1167,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//its already loaded so don't need to hydrate it,no,undetermined,0,0,0,no,0.0050237389626235284,no,0.0032436121255280882,no,0.0024033930867599414,no,0.002093773161967,no,0.002080633523671751,no,0.0018772097149454573
1168,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if an exception occurs during flush, user must call rollback()",no,undetermined,0,0,0,no,0.00464753084023067,no,0.0031192976478867547,no,0.0026263045272096517,no,0.0023490913756134,no,0.0024238297324586785,no,0.0021775624043245496
1169,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// orphans should be deleted during delete,no,undetermined,0,0,0,no,0.009344441310711575,no,0.010981854375627095,no,0.0090970276831403,no,0.008071995847729038,no,0.007999313855032938,no,0.007283502099113045
1170,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// swallow it, and continue to roll back JTA transaction",no,undetermined,0,0,0,no,0.007628806274248793,no,0.0056561911272774755,no,0.004752398657826847,no,0.004194402877016243,no,0.004617833018696831,no,0.0041564351609597455
1171,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// here, we have two possibilities: // 		1) the property-name matches the explicitly identifier property name //		2) the property-name matches the implicit 'id' property name",no,undetermined,0,0,0,no,0.013014565821041246,no,0.00941388158688958,no,0.00791566909937257,no,0.007452139512628455,no,0.007025790858641505,no,0.006430506710700612
1172,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// so the transaction is already rolled back, by JTA spec",no,undetermined,0,0,0,no,0.01768605664245675,no,0.010966392900738716,no,0.009079951077023725,no,0.008055978003065376,no,0.007995542694288465,no,0.007262812881806452
1173,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we found a collection element in the result set,no,undetermined,0,0,0,no,0.0018291296699482205,no,0.001446936171975524,no,0.0009613156184641345,no,0.0005860075812464908,no,0.0005964933939360215,no,0.0005186176348764238
1174,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this method is a noop if there is a Synchronization!,no,undetermined,0,0,0,no,0.009012676061473967,no,0.007700396609249731,no,0.005978842575021985,no,0.006210445863058139,no,0.006065505202926953,no,0.0054438311187301755
1175,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// register the standard dialect resolver,no,undetermined,0,0,0,no,0.0020647255175872546,no,0.004273455952696444,no,0.0037468000856051087,no,0.0036235433776904327,no,0.0036710165931300096,no,0.003302922913541366
1176,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// why is all others non final ?,no,undetermined,0,0,0,no,0.19007419302975995,no,0.17644476203232481,no,0.16406758121333403,no,0.15378417297629232,no,0.15149412121582514,no,0.14632082315869763
1177,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// even though we might find a pre-existing element by join path, we may not be able to reuse it...",no,undetermined,0,0,0,no,0.03156894736567278,no,0.010957739258873672,no,0.009085338455444014,no,0.008039595002667859,no,0.00798043407524998,no,0.007268995500238977
1178,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// HELLA IMPORTANT OPTIMIZATION!!!,no,undetermined,0,0,0,no,0.004151649343019938,no,0.005675689733940669,no,0.005662694565066259,no,0.005317443338332244,no,0.005295161245492203,no,0.004784000984374217
1179,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//include the discriminator and class-level where, but not filters",no,undetermined,0,0,0,no,0.018514355498134228,no,0.008753657681630235,no,0.008649375784833022,no,0.007566202559182687,no,0.0077106165625218616,no,0.006985164333992141
1180,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*return that.type.equals(type) && 
			EqualsHelper.equals(that.value, value);*/",no,undetermined,0,0,0,no,0.002544363262115507,no,0.0021621171257721265,no,0.0016134900038430704,no,0.001543563313894189,no,0.001574327824903084,no,0.0013906191548387385
1181,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//null child could occur for no from clause in a filter,no,undetermined,0,0,0,no,0.012177104230572411,no,0.009942649306680158,no,0.008801281092536301,no,0.0074634968562673305,no,0.00742115679659669,no,0.006729235701821086
1182,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The 'from element' that the property is in.,no,undetermined,0,0,0,no,0.011924009163057676,no,0.005150141966107288,no,0.004352839209485909,no,0.003927554546847277,no,0.0042950430194185546,no,0.003965596389344355
1183,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Since the result set cursor is always left at the first // physical row after the ""last processed"", we need to jump // back one position to get the key value we are interested // in skipping",no,undetermined,0,0,0,no,0.0010501238268679687,no,0.0010261844964979774,no,0.0007669113988446245,no,0.0007954049468381468,no,0.0008043233170480101,no,0.0006904430591110612
1184,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// WebSphere, however, is not a sane JEE/JTA container...",no,undetermined,0,0,0,no,0.010951931697919366,no,0.0099718490855074,no,0.009114159957156847,no,0.008061687406994415,no,0.007997021370049184,no,0.0072749785606334065
1185,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// loop through all the associated entities and make sure they have been // processed before the latest // batch associated with this entity type.,no,undetermined,0,0,0,no,0.011335002834462652,no,0.009752921189318,no,0.009079586387953479,no,0.008064774841324548,no,0.00799435960844017,no,0.007291012713957186
1186,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// for sane JEE/JTA containers, the transaction itself functions as its identifier...",no,undetermined,0,0,0,no,0.002079155803697774,no,0.0014797434958448439,no,0.0012522688747691154,no,0.0011382516650380254,no,0.0012827044512948348,no,0.0011211623948812277
1187,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// First, try to find a matching constructor accepting a ViolatedConstraintNameExtracter param...",no,undetermined,0,0,0,no,0.00831432229222063,no,0.0077984643044565856,no,0.0068465329199949515,no,0.006243964165361808,no,0.006175257666311536,no,0.005580265658056206
1188,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//swallow, the transaction was finished",no,undetermined,0,0,0,no,0.001303187279605524,no,0.0013265081208107834,no,0.001572312796826308,no,0.001538514072626616,no,0.0019301472874037181,no,0.001722357234825158
1189,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//will be ignored, using the existing Entry instead",no,undetermined,0,0,0,no,0.003613233689331677,no,0.0036247506005366837,no,0.0032274906965326818,no,0.002959665969873423,no,0.002870097941234702,no,0.0025673340936922047
1190,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// 60 seconds,no,undetermined,0,0,0,no,0.0051382502110223546,no,0.006783377809153082,no,0.0070706438197657645,no,0.00778326732777689,no,0.007851590057064753,no,0.0071428059517003595
1191,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// this property belongs to the table and it is not specifically // excluded from optimistic locking by optimistic-lock=""false""",no,undetermined,0,0,0,no,0.02091928283284095,no,0.01097706898193535,no,0.0071425828344038374,no,0.006727307655989406,no,0.006515258209859986,no,0.005878037812806218
1192,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Don't hold a transactional lock for this ,no,undetermined,0,0,0,no,0.021105988174312112,no,0.01096999929279398,no,0.009099250394786946,no,0.008067502480440884,no,0.00800970971436877,no,0.007281524915410405
1193,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// some collections are not lazy:,no,undetermined,0,0,0,no,0.025600863950317344,no,0.00992376443202064,no,0.008438412368766565,no,0.00769576112680884,no,0.007730797978436874,no,0.007244070194313104
1194,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Fix up the resident flag,no,undetermined,0,0,0,no,0.0320802006519132,no,0.010977652707090236,no,0.009095407540583278,no,0.008060798580824995,no,0.007997248705905388,no,0.007276967262661122
1195,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Does the LIMIT clause come at the start of the SELECT statement, rather than at the end?",no,undetermined,0,0,0,no,0.01711580694561978,no,0.01097594028082081,no,0.009102762511263721,no,0.008047246073783846,no,0.008009746651966323,no,0.007259884171273736
1196,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// all AliasToEntityMapResultTransformer are considered equal ~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0002216408164829619,no,0.0002983100088826772,no,0.00026420212749855783,no,0.0002513104892945846,no,0.0002572963284115916,no,0.00022234741505728402
1197,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//the following two lines were added to ensure that this.params is not null, which //can happen with two-deep nested subqueries",no,undetermined,0,0,0,no,0.053166184392220255,no,0.011002309843943025,no,0.009088320618850069,no,0.008055478454029237,no,0.00799843512172586,no,0.007262152499864527
1198,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Set the attributes of the property reference expression.,no,undetermined,0,0,0,no,0.013965935283307548,no,0.009727529512977843,no,0.007260272918152569,no,0.005579031749335393,no,0.005278910195466236,no,0.004764160515185723
1199,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the current batch number is the latest batch for this entity type.,no,undetermined,0,0,0,no,0.018235341090814736,no,0.006889761074351295,no,0.00909249048317483,no,0.008064366719903784,no,0.007981252523855632,no,0.007272958854005337
1200,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//take a snapshot,no,undetermined,0,0,0,no,0.0017884959016027894,no,0.002359016006705357,no,0.005242049759338288,no,0.0052446147124086614,no,0.00524645878633881,no,0.004711645968159645
1201,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//we can inner join to superclass tables (the row MUST be there) //we can never inner join to subclass tables,no,undetermined,0,0,0,no,0.010028704707583987,no,0.004504085251610224,no,0.0038200178087144797,no,0.003900262882728294,no,0.003929732166186931,no,0.0035337807391238704
1202,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Never evict this node,no,undetermined,0,0,0,no,0.01245109027661074,no,0.010953667926384072,no,0.009104309215794472,no,0.008066144118920999,no,0.00799418141875149,no,0.007282470394044315
1203,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Does the collection referenced by this FromElement // specify an order-by attribute?  If so, attach it to // the query's order-by",no,undetermined,0,0,0,no,0.012162153242176654,no,0.009599016184546132,no,0.009097462884421094,no,0.008045141423709897,no,0.007987337941858824,no,0.007271141869651429
1204,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Create the join element under the from element.,no,undetermined,0,0,0,no,0.004243655993332104,no,0.0021602173302889545,no,0.0018565453784275196,no,0.002157411637731713,no,0.0021448277236614213,no,0.0019194528067794329
1205,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// for merging of versioned entities, we consider the version having // been changed only when: // 1) the two version values are different; //      *AND* // 2) The target actually represents database state! // // This second condition is a special case which allows // an entity to be merged during the same transaction // (though during a seperate operation) in which it was // originally persisted/saved",no,undetermined,0,0,0,no,0.008509970378123613,no,0.00642907457196025,no,0.0056675253952646505,no,0.004676500652805024,no,0.00534044909142999,no,0.004875900608701779
1206,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Moved here from SelectClause [jsd],no,undetermined,0,0,0,no,0.09720957593960079,no,0.010977742246361012,no,0.009113191724859799,no,0.008046337344874884,no,0.007980986562872132,no,0.007273127033829112
1207,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// pre-determine and cache the hashcode,no,undetermined,0,0,0,no,0.008764028188867746,no,0.009615342951937238,no,0.008047160637622622,no,0.00740819360005921,no,0.007736060172724574,no,0.006959979502485394
1208,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,///////////////////////////////////////////////////////////////////////////,no,undetermined,0,0,0,no,0.0036523008980329486,no,0.005504726900042388,no,0.006461868463342029,no,0.00788716525811375,no,0.0079850989855144,no,0.007268429553841039
1209,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// (NOT (BETWEEN a b) ) => (NOT_BETWEEN a b),no,undetermined,0,0,0,no,0.02100871321129485,no,0.010955355173507124,no,0.009103314996912899,no,0.008068686697303701,no,0.007998759690728732,no,0.00726860822321645
1210,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Make sure the root node for the region exists and  // has a DataVersion that never complains,no,undetermined,0,0,0,no,0.0038285257705049113,no,0.003004476883500441,no,0.0022807394763559533,no,0.00187840719917306,no,0.00195835094444092,no,0.0017303841705194382
1211,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//			ps.close(); //just close it; do NOT try to return it to the pool! //NOTE: early exit!,no,undetermined,0,0,0,no,0.0003738241251152792,no,0.0002827272048566008,no,0.000191699440980114,no,0.00015743824558168038,no,0.00015773663491236537,no,0.00013346982595424924
1212,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// map of EntityMode -> Tuplizer,no,undetermined,0,0,0,no,0.002431583558226016,no,0.0026177254954813946,no,0.0023913104176770954,no,0.002180378798797867,no,0.002135785563553609,no,0.0018988581736502346
1213,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Now write the values of fields onto the prepared statement,no,undetermined,0,0,0,no,0.001435073316110126,no,0.0014933426396373528,no,0.0011489797775933563,no,0.0010703948587625844,no,0.000964628936163345,no,0.000853362843328671
1214,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this is a virtual id property...,no,undetermined,0,0,0,no,0.07445417035303252,no,0.010959626906277449,no,0.009103773851380798,no,0.008067094747075761,no,0.007979493848899158,no,0.007262676283746488
1215,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Need to use the identifier type of the collection owner // since the incoming is value is actually the owner's id. // Using the collection's key type causes problems with // property-ref keys...,no,undetermined,0,0,0,no,0.05538692951722291,no,0.010970615990234916,no,0.009084828820674714,no,0.008061523472087571,no,0.007975688747844581,no,0.007283755197203749
1216,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// create our own copy of the user-supplied tuplizer impl map,no,undetermined,0,0,0,no,0.0019399844855318624,no,0.0023586818592072774,no,0.0018825989503247517,no,0.0016128153441016023,no,0.0015953203070241606,no,0.0014177308464377403
1217,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// The current_timestamp is more accurate, but only known to be supported // in SQL Server 7.0 and later (i.e., Sybase not known to support it at all)",no,undetermined,0,0,0,no,0.07663028087368041,no,0.010973327543700508,no,0.009084577813940571,no,0.008062837268582427,no,0.00797911426903209,no,0.007273650087029859
1218,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//this one needed only for guessEntityMode(),no,undetermined,0,0,0,no,0.036661084378649074,no,0.010983694902765654,no,0.00908800765561916,no,0.008058180994851692,no,0.008009568576653758,no,0.007270459377028213
1219,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/* will check current level if some of them are not null
		 * or sublevels if they exist
		 */",no,undetermined,0,0,0,no,0.022727110070556677,no,0.010986596018349167,no,0.009115284220156391,no,0.008071387530433412,no,0.008004478001682542,no,0.007279266575896911
1220,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Build the dynamic-map tuplizer...,no,undetermined,0,0,0,no,0.0006805016537427635,no,0.0010286891037533657,no,0.0008765797404505622,no,0.000800545223880706,no,0.000815227170425355,no,0.0007149608434506485
1221,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Pointbase has no known variation of a ""SELECT ... FOR UPDATE"" syntax...",no,undetermined,0,0,0,no,0.0052247357214532265,no,0.007176996896530476,no,0.005753225389811342,no,0.005069229402466591,no,0.004974929478380815,no,0.004560449290696211
1222,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// then dom4j tuplizer, if dom4j representation is available",no,undetermined,0,0,0,no,0.004897855729572606,no,0.0070613596287172195,no,0.006395640323050606,no,0.0061885286456240095,no,0.006202070865913686,no,0.005851589491951547
1223,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// See if the entity is already bound to this session, if not look at the // entity identifier and assume that the entity is persistent if the // id is not ""unsaved"" (that is, we rely on foreign keys to keep // database integrity)",no,undetermined,0,0,0,no,0.04408594506228563,no,0.010978516113335595,no,0.00909384440459177,no,0.008068665315569983,no,0.007978410527361144,no,0.007291709140385362
1224,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// do the work,no,undetermined,0,0,0,no,0.048998755622155464,no,0.010964928176047195,no,0.009078085955608033,no,0.008052218808819074,no,0.007998716202712586,no,0.007272732459676817
1225,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// if its an uninitialized proxy it can't be transient,no,undetermined,0,0,0,no,0.006969512891032768,no,0.004207188034844255,no,0.003245951638392111,no,0.0028367217056359966,no,0.002810553446735257,no,0.002527284645157965
1226,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// We've been here before,no,undetermined,0,0,0,no,0.005179666886403815,no,0.005988835158476865,no,0.006164960039499171,no,0.005889979424064576,no,0.00594907574732854,no,0.005228714708478748
1227,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//return the id, so we can use it to reset the proxy id //return result;",no,undetermined,0,0,0,no,0.017738373592044634,no,0.007219220641890478,no,0.005509761694112326,no,0.004608479225571594,no,0.004852113596823286,no,0.00440183848627081
1228,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Build the dynamic-map tuplizer...,no,undetermined,0,0,0,no,0.0006805016537427635,no,0.0010286891037533657,no,0.0008765797404505622,no,0.000800545223880706,no,0.000815227170425355,no,0.0007149608434506485
1229,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// return false here, as most databases do not properly support this construct...",no,undetermined,0,0,0,no,0.11996075338597392,no,0.08687574678199807,no,0.009098804010944258,no,0.008042510494682764,no,0.007988670854668829,no,0.007266317772805203
1230,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// do the work,no,undetermined,0,0,0,no,0.048998755622155464,no,0.010964928176047195,no,0.009078085955608033,no,0.008052218808819074,no,0.007998716202712586,no,0.007272732459676817
1231,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is persister-centric and/or EntityInfo-centric ~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.028999602749170513,no,0.010980815010552144,no,0.009099175506111017,no,0.008049138057223777,no,0.007985674036370741,no,0.00728622277145674
1232,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// put the ""standard"" tuplizers into the tuplizer map first",no,undetermined,0,0,0,no,0.0015772342990874888,no,0.001747384818882637,no,0.001438005437812847,no,0.0012782297695966083,no,0.0012892327665123815,no,0.0011330738445175569
1233,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// hit the database, after checking the session cache for a snapshot",no,undetermined,0,0,0,no,0.012127430805850516,no,0.00895619792799204,no,0.009098364398560788,no,0.008050580829344671,no,0.007983378960268805,no,0.007289821683931354
1234,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// found a ctor, but it was not publicly accessible so try to request accessibility",no,undetermined,0,0,0,no,0.003664250155889464,no,0.0032827369604405197,no,0.0032061379510454537,no,0.0030696209563787604,no,0.0031038109664614823,no,0.0027936896150691872
1235,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// our parent is another dot node, meaning we are being further dereferenced. // thus we need to generate a join unless the parent refers to the associated // entity's PK (because 'our' table would know the FK).",no,undetermined,0,0,0,no,0.04086753417662549,no,0.010953513631830315,no,0.009111168815107231,no,0.00804673126174681,no,0.00800717624370089,no,0.00727368510648632
1236,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	private final SessionFactoryImplementor sessionFactory;,no,undetermined,0,0,0,no,0.00421430796006627,no,0.005380635867644573,no,0.004527541916242074,no,0.003950563629539035,no,0.00392179550511284,no,0.003513249421708589
1237,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Search for collections by reachability, updating their role. // We don't want to touch collections reachable from a deleted object",no,undetermined,0,0,0,no,0.011815682166375715,no,0.006787979617766698,no,0.005270125688711541,no,0.004550157042610704,no,0.0043572781144692015,no,0.003950431519436136
1238,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// cached for efficiency...,no,undetermined,0,0,0,no,0.002426058002984216,no,0.0027684414611782713,no,0.0023519874669638906,no,0.0023908208461425147,no,0.002340479539920307,no,0.0020913339456959195
1239,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// sql server just returns automatically,no,undetermined,0,0,0,no,0.006895062202244086,no,0.010977944764434835,no,0.009096745440837925,no,0.008060156057829667,no,0.00799297061344799,no,0.007269800234063849
1240,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		this.sessionFactory = sessionFactory;,no,undetermined,0,0,0,no,0.010358309598248858,no,0.005778328137354053,no,0.001690050431674278,no,0.002124246986513711,no,0.0020472981116130655,no,0.001855013037669199
1241,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0035916353889064853,no,0.00270531702328145,no,0.0022335087846470088,no,0.0019118158733423618,no,0.0018904160055146432,no,0.001674030057516098
1242,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//it was not embedded, so the argument is just an id",no,undetermined,0,0,0,no,0.007638314126789868,no,0.005909004206344609,no,0.0050733977139139005,no,0.00461775275317605,no,0.0045237599162576605,no,0.004738832425732391
1243,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we have specialized case of a detached entity from the // perspective of the merge operation.  Specifically, we // have an incoming entity instance which has a corresponding // entry in the current persistence context, but registered // under a different entity instance",no,undetermined,0,0,0,no,0.009319250059372924,no,0.006266078334725401,no,0.004680550308350464,no,0.00391578321668795,no,0.0037680370715649407,no,0.003394108411817371
1244,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// then dom4j tuplizer, if dom4j representation is available",no,undetermined,0,0,0,no,0.004897855729572606,no,0.0070613596287172195,no,0.006395640323050606,no,0.0061885286456240095,no,0.006202070865913686,no,0.005851589491951547
1245,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//where fragment must be empty!,no,undetermined,0,0,0,no,0.04380533827740389,no,0.010957271230339774,no,0.00908897172768196,no,0.008070117869782026,no,0.007984955776463609,no,0.007270723628804319
1246,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// or its key changed,no,undetermined,0,0,0,no,0.00036936355699734,no,0.00028956329345349155,no,0.00021400023298909543,no,0.00020064033422460313,no,0.0002205567578538375,no,0.0001961137869660741
1247,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//					int parameterStart = getWalker().getNumberOfParametersInSetClause(); //					List allParams = getIdSelectParameterSpecifications(); //					Iterator whereParams = allParams.subList( parameterStart, allParams.size() ).iterator();",no,undetermined,0,0,0,no,0.006547656188182114,no,0.005478484211183327,no,0.005180139974253737,no,0.005438358094483343,no,0.005417953858538283,no,0.00488627087349784
1248,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// put the ""standard"" tuplizers into the tuplizer map first",no,undetermined,0,0,0,no,0.0015772342990874888,no,0.001747384818882637,no,0.001438005437812847,no,0.0012782297695966083,no,0.0012892327665123815,no,0.0011330738445175569
1249,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.005452460430046176,no,0.008487496339120286,no,0.007950526847067619,no,0.007636212462427558,no,0.0076275681038799,no,0.006911826638174355
1250,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we will need to remove ye olde entries,no,undetermined,0,0,0,no,0.008655461449165548,no,0.00791107710763789,no,0.006743701893327735,no,0.005857977536219163,no,0.005746718582534035,no,0.005238110510612786
1251,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// add the current fragment to the THETA_JOINS node,no,undetermined,0,0,0,no,0.0036919762539798944,no,0.0025676021092865486,no,0.0020878056772029164,no,0.0018266862127142118,no,0.002038008781941565,no,0.001827244397529479
1252,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// force initialize!,no,undetermined,0,0,0,no,0.0009352633685460184,no,0.0009569435569276745,no,0.0008109198405586825,no,0.0007272522861499738,no,0.0007392790309229147,no,0.0006238168490755418
1253,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// lock doesn't cascade to uninitialized collections,no,undetermined,0,0,0,no,0.003613513570865729,no,0.005010520474412595,no,0.004102818189822398,no,0.003955393477146072,no,0.003940523465143386,no,0.0035556398389592673
1254,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//return currentId;,no,undetermined,0,0,0,no,0.0007108479426811011,no,0.0005626488816341576,no,0.0004678183472785233,no,0.00040429721458336174,no,0.00040553700375767915,no,0.0003555070972592494
1255,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//unquotedIdentifierColumnName = null;,no,undetermined,0,0,0,no,0.0004106504170040871,no,0.00031124162424282987,no,0.00026165298237795087,no,0.0002296754985917646,no,0.00022729781506706265,no,0.00017642367527152618
1256,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//reset the id,no,undetermined,0,0,0,no,0.00700002567662263,no,0.003971288021979626,no,0.0035641954194062615,no,0.0034039892458324252,no,0.00361987106651278,no,0.003219021278663894
1257,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//addInitializedCollection(collection, persister, id);",no,undetermined,0,0,0,no,0.029799086757431852,no,0.010977386621022786,no,0.009079983511594019,no,0.008043880090224843,no,0.007976494193589973,no,0.007267007058157977
1258,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// CollectionPropertyMapping processes everything except 'index'.,no,undetermined,0,0,0,no,0.003165227486753323,no,0.006011821842549951,no,0.0057049166997131095,no,0.004916919764039812,no,0.004875200465577243,no,0.004376665253573304
1259,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if it is an uninitialized proxy, pointing //with this session, then when it is accessed, //the underlying instance will be ""contained""",no,undetermined,0,0,0,no,0.009796331593931364,no,0.006894046084712557,no,0.006196801647152793,no,0.00651598032509335,no,0.006431153046025488,no,0.005940975595199221
1260,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//reset the version,no,undetermined,0,0,0,no,0.0023575322595400156,no,0.001915350699393181,no,0.0017338215370221637,no,0.0016649149998006708,no,0.0016580252310659602,no,0.0014839291532503984
1261,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Note: this simply constructs a ""raw"" SQL_TOKEN representing the // where fragment and injects this into the tree.  This ""works""; // however it is probably not the best long-term solution. // // At some point we probably want to apply an additional grammar to // properly tokenize this where fragment into constituent parts // focused on the operators embedded within the fragment.",no,undetermined,0,0,0,yes,0.8708290343931065,yes,0.8245356871877758,yes,0.8144249539545905,yes,0.8217074629945597,yes,0.8267660241595731,yes,0.8296932773023095
1262,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the default is to simply not lazy fetch properties for now...,no,undetermined,0,0,0,no,0.010715966078984642,no,0.005871314514510343,no,0.0042668836018493975,no,0.004032085166766224,no,0.003928785845447548,no,0.0035494209205237234
1263,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aliases for identifier ( alias.id ); skip if the entity defines a non-id property named 'id',no,undetermined,0,0,0,no,0.03180162042375482,no,0.010978472324904549,no,0.009091438327222834,no,0.008056831812557274,no,0.008005835968235321,no,0.007272368243941811
1264,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// else if it's elements changed,no,undetermined,0,0,0,no,0.00011768847414717737,no,0.00014683813644247003,no,0.00011613019377585024,no,0.00010377836067870486,no,0.00010468689158689041,no,0.00010200977898881763
1265,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		 This assumes you will want to ignore any update counts ,no,undetermined,0,0,0,no,0.004060027518415423,no,0.0026355786487327667,no,0.002366182763219317,no,0.002110223236153524,no,0.002039590708111076,no,0.001828082302656734
1266,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//ATTRIBUTES MAINTAINED BETWEEN FLUSH CYCLES,no,undetermined,0,0,0,no,0.01566180646589024,no,0.010961994517212689,no,0.009089562367861457,no,0.008051616077277534,no,0.007981521096623359,no,0.007270422925869106
1267,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// now rebuild the insertions list. There is a batch for each entry in the name list.,no,undetermined,0,0,0,no,0.0019683510235104893,no,0.0020399986482580075,no,0.0028407296866836624,no,0.0024599293823785876,no,0.002506178639581974,no,0.0022043273185566323
1268,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// should be safe to only ever expect EntityPersister references here,no,undetermined,0,0,0,no,0.007399316102412847,no,0.010818408159428592,no,0.008873945141684053,no,0.008063483199588013,no,0.008003582461050431,no,0.007254302617074058
1269,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if the original is a PersistentCollection, and that original // was not flagged as dirty, then reset the target's dirty flag // here after the copy operation. // </p> // One thing to be careful of here is a ""bare"" original collection // in which case we should never ever ever reset the dirty flag // on the target because we simply do not know...",no,undetermined,0,0,0,no,0.018356526279055933,no,0.010986293974719164,no,0.009095642110463898,no,0.00807075296215845,no,0.007989370574141558,no,0.007288307244063915
1270,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// session-start/post-flush persistent state,no,undetermined,0,0,0,no,0.0021394446051790916,no,0.0010502605070860124,no,0.0008933056006881383,no,0.0008840831674277248,no,0.0008684054043143709,no,0.000757999377062354
1271,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.20578690578476505,no,0.13670269420699718,no,0.13274291040411743,no,0.13589192087436133,no,0.13603243554029018,no,0.13136960479731605
1272,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// allow the CollectionSnapshot to be serialized,no,undetermined,0,0,0,no,0.006745359520071122,no,0.006559648358551597,no,0.005490059385648248,no,0.004709192910347706,no,0.004606446293006921,no,0.004147374644361278
1273,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// first, break down the returns into maps keyed by alias // so that role returns can be more easily resolved to their owners",no,undetermined,0,0,0,no,0.05085183311952618,no,0.010963215145176154,no,0.009093651504708075,no,0.008053008054666229,no,0.007991257029819756,no,0.007275358742623171
1274,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Add the second join, the one that ends in the destination table.",no,undetermined,0,0,0,no,0.0026722626330903327,no,0.0015444222361473549,no,0.0012507575576860008,no,0.001442395644962798,no,0.0014215112960116187,no,0.0012623695808443136
1275,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Generate an 2d array of column names, the first dimension is parallel with the // return types array.  The second dimension is the list of column names for each // type.",no,undetermined,0,0,0,no,0.010902066402623777,no,0.009395927294199935,no,0.007050055768547578,no,0.006023960213031219,no,0.005975588419373111,no,0.005393742296828905
1276,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ATTRIBUTES USED ONLY DURING FLUSH CYCLE,no,undetermined,0,0,0,no,0.00761915667426549,no,0.007616236423043116,no,0.006219431120444552,no,0.005380461271995821,no,0.005612102613339478,no,0.005041571909366585
1277,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Create SQL_TOKEN nodes for the columns.,no,undetermined,0,0,0,no,0.0007394616652678949,no,0.005891421602838606,no,0.0050544626686288,no,0.004741058227172868,no,0.004455474389829041,no,0.004067360148553397
1278,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// ""current"" means the reference that was found during flush() ",no,undetermined,0,0,0,no,0.0036933135987684746,no,0.002810263703247628,no,0.002509219223538142,no,0.002257081671519738,no,0.002477839610272337,no,0.0022164269732125796
1279,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// RDMS has no known variation of a ""SELECT ... FOR UPDATE"" syntax...",no,undetermined,0,0,0,no,0.0017806094449669707,no,0.003785596050118801,no,0.003026672054856258,no,0.00265402559174622,no,0.002624766776799622,no,0.0023859763281517967
1280,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ignore this row of results! Note the early exit,no,undetermined,0,0,0,no,0.004765719339476157,no,0.0034796661617829106,no,0.002476252287537698,no,0.002042923108098372,no,0.0019949868761296036,no,0.0017943299752635868
1281,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// not final-static to avoid possible classcast exceptions if using different oracle drivers.,no,undetermined,0,0,0,no,0.021134732083566306,no,0.010972581947822671,no,0.009080713674207944,no,0.008049251563900153,no,0.00799149822824698,no,0.0072630499210219355
1282,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// found a ctor, but it was not publicly accessible so try to request accessibility",no,undetermined,0,0,0,no,0.003664250155889464,no,0.0032827369604405197,no,0.0032061379510454537,no,0.0030696209563787604,no,0.0031038109664614823,no,0.0027936896150691872
1283,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Add the new node to the map so that we don't create it twice.,no,undetermined,0,0,0,no,0.004564256450285419,no,0.004830724319776293,no,0.004425626549339201,no,0.0036281735952946913,no,0.0038349805227500078,no,0.003454434081334351
1284,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		return getFactory().getSettings().getBytecodeProvider().getProxyFactoryFactory().buildProxyFactory();,no,undetermined,0,0,0,no,0.0038290329034710684,no,0.004787691539275855,no,0.0051121233007213026,no,0.005770920206018607,no,0.005828449907922857,no,0.005272608332004237
1285,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Oracle driver reports to support getGeneratedKeys(), but they only // support the version taking an array of the names of the columns to // be returned (via its RETURNING clause).  No other driver seems to // support this overloaded version.",no,undetermined,0,0,0,no,0.011813694715598686,no,0.010996650045750175,no,0.009089645830075802,no,0.008049893898048006,no,0.007998008833469421,no,0.007264863403896354
1286,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//not final because proxy factory creation can fail,no,undetermined,0,0,0,no,0.002736624249445852,no,0.0038421020105373297,no,0.0029435528555100347,no,0.0025528735609887214,no,0.002583603220985069,no,0.0023061377199063344
1287,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Register the FromElement with the FROM clause, now that we have the names and aliases.",no,undetermined,0,0,0,no,0.003282868822393433,no,0.004454887577739435,no,0.003549521979906817,no,0.003130080167626933,no,0.003078775532184779,no,0.002771143364211862
1288,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// superclass entity-name,no,undetermined,0,0,0,no,0.0031379674240682998,no,0.003079028244570293,no,0.003203472690642786,no,0.0033543359394995875,no,0.0033429609215246637,no,0.002982526443333761
1289,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// First allow the actual type to control the return value. (the actual underlying sqltype could actually be different),no,undetermined,0,0,0,no,0.04609012589327737,no,0.01095882487104002,no,0.009091024475930264,no,0.0080595895965117,no,0.00800271039534587,no,0.0072754915380921934
1290,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.20578690578476505,no,0.13670269420699718,no,0.13274291040411743,no,0.13589192087436133,no,0.13603243554029018,no,0.13136960479731605
1291,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// cascade-save to collections AFTER the collection owner was saved,no,undetermined,0,0,0,no,0.002911101996151698,no,0.0038393499450945293,no,0.0032370716771152213,no,0.0028368983718430256,no,0.003230277976193426,no,0.00356955176955415
1292,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0036523008980329486,no,0.005504726900042388,no,0.006461868463342029,no,0.00788716525811375,no,0.0079850989855144,no,0.007268429553841039
1293,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// ""pass along"" our initial embedded parameter node(s) to the first generated // sql fragment so that it can be handled later for parameter binding...",no,undetermined,0,0,0,no,0.010394265652445762,no,0.007408496305880158,no,0.005709186214125271,no,0.004951088197383702,no,0.004900885250738313,no,0.004421309755211868
1294,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// ""loaded"" means the reference that is consistent  // with the current database state",no,undetermined,0,0,0,no,0.003994051061638855,no,0.003124234925888696,no,0.0024666139548958394,no,0.0023590506384283767,no,0.0023554840553612773,no,0.002117919351724403
1295,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// cache the actual id of the object, not the value of the // property-ref, which might not be initialized",no,undetermined,0,0,0,no,0.15443528020209107,no,0.13755929841325987,no,0.11148455711131076,no,0.09874717676325663,no,0.008000742712656333,no,0.007289219753325628
1296,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//init the aliases, after initing the constructornode",no,undetermined,0,0,0,no,0.0009826042831193175,no,0.001053000980530124,no,0.0008272283501688842,no,0.0006850325042545565,no,0.0007447078898475464,no,0.0006511577983136202
1297,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// You may still have other ResultSets or update counts left to process here  // but you can't do it now or the ResultSet you just got will be closed ,no,undetermined,0,0,0,no,0.029444279503865575,no,0.010981441794164782,no,0.009100010918001528,no,0.008058553772209305,no,0.008000697812299224,no,0.007283397201379873
1298,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.20578690578476505,no,0.13670269420699718,no,0.13274291040411743,no,0.13589192087436133,no,0.13603243554029018,no,0.13136960479731605
1299,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Multi-param string dialect functions...,no,undetermined,0,0,0,no,0.06466223730210224,no,0.010967260697665434,no,0.0090906922361866,no,0.008052697415126979,no,0.007976654399542201,no,0.00728392664108401
1300,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// during flush, we navigate the object graph to // collections and decide what to do with them",no,undetermined,0,0,0,no,0.07979459409983031,no,0.010978341601553641,no,0.009082543478701419,no,0.0080612612765786,no,0.007980894347060535,no,0.007264907858060367
1301,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// save() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0028752530991017025,no,0.00307284543235243,no,0.002996777197854417,no,0.0029908444017961765,no,0.0029863039011818544,no,0.002665751833961329
1302,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//collection.clearDirty(),no,undetermined,0,0,0,no,0.004633236028338807,no,0.002642249425995317,no,0.0005661545280925689,no,0.0005064005458494926,no,0.0005156525125060385,no,0.00043577181309176525
1303,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The 'from element' that represents the elements of the collection.,no,undetermined,0,0,0,no,0.0007234006807217979,no,0.0004834713410349728,no,0.00037839401718026247,no,0.0002849189100041681,no,0.0003033644438573164,no,0.00026522720359138023
1304,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// legacy behavior (with no abstract attribute specified),no,undetermined,0,0,0,no,0.005990628529866306,no,0.007793193240115804,no,0.006494268427140801,no,0.005484070400074611,no,0.005504746480970742,no,0.004977338165309731
1305,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Constructors are always considered scalar results.,no,undetermined,0,0,0,no,0.0041417588456036354,no,0.008001495841237136,no,0.007624732147904524,no,0.007041653914222679,no,0.006971329973879958,no,0.006361427796769265
1306,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Get ready to start adding nodes.,no,undetermined,0,0,0,no,0.00446039133637241,no,0.004541771252668062,no,0.004165841123154279,no,0.003746473080057408,no,0.003615145879381274,no,0.0032718723597163013
1307,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//use the id column alias,no,undetermined,0,0,0,no,0.015567452584060028,no,0.00997815299922181,no,0.007941576523101462,no,0.005383544248436321,no,0.005599251643669633,no,0.005014867865705459
1308,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Collection Types:,no,undetermined,0,0,0,no,0.011062034832308484,no,0.006179629606554155,no,0.002649768574768535,no,0.0023273189575716735,no,0.002360566200878412,no,0.002097048432422514
1309,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// #3 - note that this is also true of ""datetime - :param""...",no,undetermined,0,0,0,no,0.45721023425843477,no,0.25239833365140374,no,0.18822929680774309,no,0.15403920935336904,no,0.15412717504769882,no,0.14883606641566008
1310,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//collection.clearDirty(),no,undetermined,0,0,0,no,0.004633236028338807,no,0.002642249425995317,no,0.0005661545280925689,no,0.0005064005458494926,no,0.0005156525125060385,no,0.00043577181309176525
1311,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we don't need to worry about existing version being uninitialized // because this block isn't called by a re-entrant load (re-entrant // loads _always_ have lock mode NONE),no,undetermined,0,0,0,no,0.029407581896085035,no,0.010974356427179914,no,0.009091226191911427,no,0.00803976764884156,no,0.007986261746351668,no,0.007264232259918101
1312,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//note: this affects the return value!,no,undetermined,0,0,0,no,0.029825995697318492,no,0.010973485421339408,no,0.009104398273113398,no,0.008057142138745107,no,0.007994330647812043,no,0.007271481683311561
1313,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// isTransactionCallbackRegistered denotes whether any Hibernate // Transaction has registered as a callback against this // JDBCContext; only one such callback is allowed.  Directly // serializing this value causes problems with JDBCTransaction, // or really any Transaction impl where the callback is local // to the Transaction instance itself, since that Transaction // is not serialized along with the JDBCContext.  Thus we // handle that fact here explicitly...",no,undetermined,0,0,0,no,0.03443896774155412,no,0.010961307072438179,no,0.009096645427994663,no,0.008042434240648945,no,0.00799323018682013,no,0.00728459998675579
1314,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// NOTE : evict() operates locally only (i.e., does not propogate // to any other nodes in the potential cluster).  This is // exactly what is needed when we destroy() here; destroy() is used // as part of the process of shutting down a SessionFactory; thus // these removals should not be propogated",no,undetermined,0,0,0,yes,0.7345271962230653,yes,0.6466242847258887,yes,0.6359795101291839,yes,0.6374041062905194,yes,0.6245602495341737,yes,0.6230414194175316
1315,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Generate the inner join -- The elements need to be joined to the collection they are in.,no,undetermined,0,0,0,no,0.012489285855825635,no,0.006073212985494788,no,0.005239984547557034,no,0.006029047345917616,no,0.0063237038251327,no,0.0057871591090916516
1316,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// otherwise, perform a ""deep equivalence"" check...",no,undetermined,0,0,0,no,0.0028748060533312393,no,0.002928273732056689,no,0.0020373814187901566,no,0.0020835485748550895,no,0.002127193900921386,no,0.001897083413808912
1317,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// might happen with a managed connection,no,undetermined,0,0,0,no,0.027234665566608432,no,0.010974598684681166,no,0.009102284605958763,no,0.008058352603999846,no,0.007988097818208027,no,0.007281093122097387
1318,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Need to account for allowable '_' within the variant,no,undetermined,0,0,0,no,0.006374188623927226,no,0.007268655100250675,no,0.006845191252478497,no,0.006915463628369485,no,0.0069217892190161796,no,0.0062945712928970405
1319,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// for expected parameter type injection, we expect that the lhs represents // some form of property ref and that the children of the in-list represent // one-or-more params.",no,undetermined,0,0,0,no,0.04073719237920669,no,0.010972337414414815,no,0.009099781661260645,no,0.008066424916050861,no,0.007989827530698542,no,0.007269240979092797
1320,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If there is no WHERE node, make one.",no,undetermined,0,0,0,no,0.0012152845937569022,no,0.0008635460138143795,no,0.0006412339076655234,no,0.0004867078471508568,no,0.0006866235016383621,no,0.0005982314923048608
1321,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we found it in the temp PC.  Should indicate we are in the midst of processing a result set // containing eager fetches via join fetch,no,undetermined,0,0,0,no,0.02831912547581877,no,0.010971604610742458,no,0.009088882688023795,no,0.008072603243355512,no,0.008008248793973136,no,0.007276184009637547
1322,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Add the type to the list of returned sqlResultTypes.,no,undetermined,0,0,0,no,0.0028668888375532214,no,0.002394715615600268,no,0.002211220623624331,no,0.001953761528867608,no,0.0019353507865670328,no,0.0017126501794591069
1323,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0011622327290709787,no,0.0011638242245380203,no,0.0011173140002844785,no,0.0014774358081173686,no,0.0015026092631850257,no,0.00133634356530595
1324,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// create one,no,undetermined,0,0,0,no,0.0005103209143052475,no,0.0007077648675737131,no,0.0005743435645039705,no,0.0005407295789927996,no,0.0005355212029827698,no,0.000465929867883778
1325,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// persists don't cascade to uninitialized collections,no,undetermined,0,0,0,no,0.004806459816575173,no,0.006544479103856739,no,0.005875715972653499,no,0.00554809682472287,no,0.005547896549629498,no,0.005025201818600238
1326,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//lobs cannot be compared,no,undetermined,0,0,0,no,0.004427051202688773,no,0.0067889025579392194,no,0.006700556789513522,no,0.007124863761686767,no,0.006948341574376191,no,0.006311763364364864
1327,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// this property belongs to the table and it is not specifically // excluded from optimistic locking by optimistic-lock=""false""",no,undetermined,0,0,0,no,0.02091928283284095,no,0.01097706898193535,no,0.0071425828344038374,no,0.006727307655989406,no,0.006515258209859986,no,0.005878037812806218
1328,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Blobs are ignored by merge(),no,undetermined,0,0,0,no,0.0064873432858435645,no,0.010979079762278417,no,0.009107292736097726,no,0.008067914328795773,no,0.007980804237855,no,0.0072695588763940265
1329,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// HHH-276 : implied joins in a subselect where clause - The destination needs to be added // to the destination's from clause. // Not sure if this is will fix everything, but it works.",no,undetermined,0,0,0,no,0.3408076211734465,no,0.217304887618507,no,0.17996463460354498,no,0.18165984952000466,no,0.17830176560703354,no,0.17404626186846844
1330,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//value is the entity name,no,undetermined,0,0,0,no,0.004150807212242255,no,0.003805171190695138,no,0.0037194517535039857,no,0.0034006564354774216,no,0.003254478596753551,no,0.0029068105142052683
1331,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// handle the (assumed) valid cases: // #1 - the only valid datetime addition synatx is one or the other is a datetime (but not both),no,undetermined,0,0,0,no,0.01386656408541479,no,0.005564029344625447,no,0.0034684343862668066,no,0.0030151329991572277,no,0.0030487282697600144,no,0.002732818301451553
1332,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//optimization,no,undetermined,0,0,0,no,0.0018775822084875454,no,0.002775299126738415,no,0.002793250207514184,no,0.0028344255413657858,no,0.002839166142340464,no,0.0025415239038071354
1333,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the map of batch numbers to EntityInsertAction lists,no,undetermined,0,0,0,no,0.014186860111419149,no,0.01095968193195387,no,0.009086584278865674,no,0.008054968752158675,no,0.007983299015797524,no,0.007269767509146166
1334,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//optimization //optimization,no,undetermined,0,0,0,no,0.0018775822084875454,no,0.002775299126738415,no,0.002793250207514184,no,0.0028344255413657858,no,0.002839166142340464,no,0.0025415239038071354
1335,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we don't need to worry about any condition in the ON clause // here (toFromFragmentString), since anything in the ON condition // is already applied to the whole query",no,undetermined,0,0,0,no,0.06585434524966423,no,0.010953509439572259,no,0.009097459598391552,no,0.008059439833694095,no,0.007995015385243182,no,0.0072595898926888815
1336,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//re-snapshot,no,undetermined,0,0,0,no,0.0024751119781390328,no,0.004018309950156043,no,0.009109261788080561,no,0.008064943320507468,no,0.008011631952625598,no,0.007279386252713726
1337,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the difficulty here is exactly what do we update in order to // force the version to be incremented in the db...,no,undetermined,0,0,0,no,0.06104191165058034,no,0.010970873870835354,no,0.009101916149348162,no,0.00805658997585462,no,0.008004726269402221,no,0.007288112111114041
1338,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// for convenience to save some lookups,no,undetermined,0,0,0,no,0.018999308730137186,no,0.01097968211174449,no,0.009087990672431486,no,0.008063594251335938,no,0.007981519289638235,no,0.0072913562265150885
1339,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Regions can get instantiated in the course of normal work (e.g. // a named query region will be created the first time the query is // executed), so suspend any ongoing tx",no,undetermined,0,0,0,no,0.05982550125002386,no,0.010970201033177201,no,0.009104379418629264,no,0.008056517709709953,no,0.007997055797749342,no,0.007290740632827024
1340,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//NOTE: this is not updated when properties are fetched lazily!,no,undetermined,0,0,0,no,0.06028092659088188,no,0.0109568327011896,no,0.009085212594897852,no,0.0080424991579942,no,0.007991554141453926,no,0.0072707459603277656
1341,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// An ident node can represent an index expression if the ident // represents a naked property ref //      *Note: this makes the assumption (which is currently the case //      in the hql-sql grammar) that the ident is first resolved //      itself (addrExpr -> resolve()).  The other option, if that //      changes, is to call resolve from here; but it is //      currently un-needed overhead.",no,undetermined,0,0,0,no,0.05387825940190421,no,0.010986834948534165,no,0.009093580526273211,no,0.008037415805220521,no,0.007993165862289557,no,0.007272807257976102
1342,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//EARLY EXIT!,no,undetermined,0,0,0,no,0.0012308318987046829,no,0.0010243170538795194,no,0.0009095420391860735,no,0.0008708338326286836,no,0.0008757209531325773,no,0.0007785241760039121
1343,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	public List getCollectionAliases() { //		return collectionAliases; //	} // //	/*public List getCollectionOwners() { //		return collectionOwners; //	}*/ // //	public List getCollectionOwnerAliases() { //		return collectionOwnerAliases; //	} // //	public List getCollectionPersisters() { //		return collectionPersisters; //	} // //	public Map getAlias2Persister() { //		return alias2Persister; //	} // //	/*public boolean isCollectionInitializer() { //		return isCollectionInitializer; //	}*/ // ////	public List getPersisters() { ////		return persisters; ////	} // //	public Map getAlias2OwnerAlias() { //		return alias2OwnerAlias; //	} // //	public List getScalarTypes() { //		return scalarTypes; //	} //	public List getScalarColumnAliases() { //		return scalarColumnAliases; //	} // //	public List getPropertyResults() { //		return propertyResults; //	} // //	public List getCollectionPropertyResults() { //		return collectionResults; //	} // // //	public Map getAlias2Return() { //		return alias2Return; //	},no,undetermined,0,0,0,no,0.0036867601444507264,no,0.002659494528145924,no,0.0020991497581410497,no,0.0017118096674748537,no,0.0016868561140315397,no,0.0014922018568190882
1344,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//TODO!,no,undetermined,0,0,0,no,0.01108450116238773,no,0.010983556682987627,no,0.00909444328901823,no,0.008067650457139275,no,0.007989377549034525,no,0.007263500918457884
1345,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//This solution would allow us to eliminate the owner arg to disassemble(), but //what if the collection was null, and then later had elements added? seems unsafe //session.getPersistenceContext().getCollectionEntry( (PersistentCollection) value ).getKey();",no,undetermined,0,0,0,no,0.5090151555306537,no,0.45741783510023715,no,0.5297926834975213,no,0.5323498650547165,no,0.5380266463534337,no,0.5600112623326274
1346,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//xml is the entity name,no,undetermined,0,0,0,no,0.0035064258720073414,no,0.003174720457923363,no,0.0031230513707340936,no,0.0027958438041640957,no,0.0027562881313454657,no,0.0024625194899850723
1347,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//named query parameter,no,undetermined,0,0,0,no,0.01444002593915112,no,0.010964386107795583,no,0.009083576469893162,no,0.008062297420710792,no,0.008007032817812003,no,0.00728347042463406
1348,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//tolerates nulls,no,undetermined,0,0,0,no,0.002998928511828799,no,0.0054967217140241284,no,0.006464587276624198,no,0.00753467155130048,no,0.0076884096673284314,no,0.0067646714437778295
1349,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// check to see if our ""propPath"" actually // represents a property on the persister",no,undetermined,0,0,0,no,0.01022067144349868,no,0.006918241336288005,no,0.005983409278913461,no,0.004194988523229729,no,0.004227389856694231,no,0.003843434955783283
1350,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Add the token to the AST.,no,undetermined,0,0,0,no,0.003578000947925692,no,0.0021427080221634084,no,0.0016510947069640247,no,0.0015034983897413703,no,0.0015253392254265634,no,0.0013702352237286507
1351,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Use the table fromElement and the property name to get the array of column names.,no,undetermined,0,0,0,no,0.006181982343083304,no,0.0064090313375437845,no,0.005313151274053652,no,0.004180111365068634,no,0.004028920234569108,no,0.003618319009337635
1352,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Set up the cache factory,no,undetermined,0,0,0,no,0.002006402512400397,no,0.0024466098579197086,no,0.0020179814268501952,no,0.0016973530863194433,no,0.0018186571653482349,no,0.0015950692670643886
1353,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we need to strip off the embedded parens so that sql-gen does not double these up,no,undetermined,0,0,0,no,0.028846553477296474,no,0.010970128787448347,no,0.009115262926503189,no,0.008068604885517581,no,0.007996866467717254,no,0.007269029206135047
1354,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//memory optimization,no,undetermined,0,0,0,no,0.009064447437643062,no,0.010543994525886074,no,0.009095255092167255,no,0.008058182289362241,no,0.007991015738188589,no,0.0072916496362054484
1355,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// then handle any user-defined entity modes...,no,undetermined,0,0,0,no,0.005521270669304307,no,0.005022436057975266,no,0.0051027508788573156,no,0.0049358333292125875,no,0.005114378114100443,no,0.004664958431304585
1356,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*sqlResultTypeList,*/",no,undetermined,0,0,0,no,0.0036523008980329486,no,0.005504726900042388,no,0.006461868463342029,no,0.00788716525811375,no,0.0079850989855144,no,0.007268429553841039
1357,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If this is an implied join in a from element, then use the impled join type which is part of the // tree parser's state (set by the gramamar actions).",no,undetermined,0,0,0,no,0.018580759578976657,no,0.00623155498553698,no,0.004634215636632659,no,0.006682096531320755,no,0.006835927689690295,no,0.00629100884683087
1358,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// metaType is assumed to be single-column type,no,undetermined,0,0,0,no,0.0036777857223124254,no,0.0028595893977034514,no,0.002336689474849665,no,0.002052973364106555,no,0.002031877003199873,no,0.0018080034555798576
1359,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// End unit of work,no,undetermined,0,0,0,no,0.01760131229425874,no,0.010976399067632947,no,0.009101268973565727,no,0.008065709472537234,no,0.007994557263810856,no,0.007264227212711718
1360,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ROW ID,no,undetermined,0,0,0,no,0.0026974321222183757,no,0.0022370704288866825,no,0.0019394844722459355,no,0.001855376697611487,no,0.002023531650135845,no,0.001771313878287597
1361,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//MULTITABLES,no,undetermined,0,0,0,no,0.0036523008980329486,no,0.005504726900042388,no,0.006461868463342029,no,0.00788716525811375,no,0.0079850989855144,no,0.007268429553841039
1362,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//			final List extendsQueue,",no,undetermined,0,0,0,no,0.002017431941995784,no,0.0029044291394594436,no,0.002672820675949496,no,0.0025170131803869816,no,0.0024992757617013452,no,0.0022032167721784813
1363,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Make sure JBC doesn't look one up,no,undetermined,0,0,0,no,0.0022451036687467186,no,0.0020025682804773464,no,0.0018575236847869214,no,0.0016556538768065152,no,0.001669336445973794,no,0.0014847650700685092
1364,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Get all the select expressions (that we just generated) and render the select.,no,undetermined,0,0,0,no,0.0049011908165917375,no,0.004980447736726711,no,0.004123362161071279,no,0.004964944111187773,no,0.004907818782482895,no,0.004455034791689497
1365,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0036523008980329486,no,0.005504726900042388,no,0.006461868463342029,no,0.00788716525811375,no,0.0079850989855144,no,0.007268429553841039
1366,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// visit width-first, then depth",no,undetermined,0,0,0,no,0.0018346428971708587,no,0.0024128174850775548,no,0.002504525300889728,no,0.0026020700817915355,no,0.0025708182314983776,no,0.0022963820209220523
1367,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If the uresolved property path isn't set yet, just use the property name.",no,undetermined,0,0,0,no,0.014008720641528612,no,0.010993718259638609,no,0.009095058398991083,no,0.008062483793881083,no,0.007992109545436594,no,0.007275710714765866
1368,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Look through the FromElement's children to find any collections of values that should be fetched...,no,undetermined,0,0,0,no,0.017403508456284467,no,0.010986561275582342,no,0.009096726391805768,no,0.00804409177582152,no,0.007997381717608382,no,0.007280896567503681
1369,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// identifier-commalist,no,undetermined,0,0,0,no,0.0027239009779670875,no,0.0035626331493234563,no,0.003853615365109204,no,0.004225001666775515,no,0.004111799785791357,no,0.003613056796923157
1370,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//return AssociationType.FOREIGN_KEY_TO_PARENT; //this is better but causes a transient object exception...,no,undetermined,0,0,0,no,0.5129686539846631,no,0.47316402738704033,no,0.45886641435617753,no,0.46129434352990883,no,0.4530059997699544,no,0.4520215751705678
1371,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// collections of values,no,undetermined,0,0,0,no,0.0018911429820401995,no,0.0014169496939668942,no,0.0011863205720294688,no,0.0011553140397067617,no,0.001149155507619476,no,0.001022395687906084
1372,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// copied from Session:,no,undetermined,0,0,0,no,0.030955846244380275,no,0.010996960114299164,no,0.009091339915976654,no,0.008066031259461592,no,0.007992297589921172,no,0.007270560300679567
1373,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// For an explicit many-to-many relationship, add a second join from the intermediate  // (many-to-many) table to the destination table.  Also, make sure that the from element's  // idea of the destination is the destination table.",no,undetermined,0,0,0,no,0.0355822394421486,no,0.010995051474130537,no,0.009104574623159093,no,0.008060116412251702,no,0.007988379832003926,no,0.00727915632236082
1374,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this should not happen since the DTD prevents it,no,undetermined,0,0,0,no,0.01093633485245417,no,0.010980049826645383,no,0.009110791198596776,no,0.008058423478617014,no,0.007987302222206012,no,0.007266848324803982
1375,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Need to parse off the column qualifiers; this is assuming (which is true as of now) // that this is only used from update and delete HQL statement parsing,no,undetermined,0,0,0,no,0.07157483049152608,no,0.010959292633831663,no,0.009084409150617015,no,0.008059117358962292,no,0.007988213293292174,no,0.007259838373576862
1376,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// the current join represents the join between a many-to-many association table // and its ""target"" table.  Here we need to apply any additional filters // defined specifically on the many-to-many",no,undetermined,0,0,0,no,0.012305741749924716,no,0.0028317907517398334,no,0.0017909065145559054,no,0.00176245820633756,no,0.001755014504140602,no,0.0015532330161724351
1377,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If the from element represents a JOIN_FRAGMENT and it is // a theta-style join, convert its type from JOIN_FRAGMENT // to FROM_FRAGMENT",no,undetermined,0,0,0,no,0.004794925206537318,no,0.0034819906277791966,no,0.0027981114779169255,no,0.002507162570233541,no,0.002475426238651302,no,0.0022471024160203306
1378,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//check basic level one nullablilty,no,undetermined,0,0,0,no,0.0031975590898873324,no,0.004124820380253643,no,0.006330230990719319,no,0.0065490391597421566,no,0.006412954508334598,no,0.00581526940868826
1379,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Add a zero (or quite low) timeout option so we don't block. // Ignore any TimeoutException. Basically we forego caching the // query result in order to avoid blocking. // Reads are done with suspended tx, so they should not hold the // lock for long.  Not caching the query result is OK, since // any subsequent read will just see the old result with its // out-of-date timestamp; that result will be discarded and the // db query performed again.",no,undetermined,0,0,0,no,0.010869642125465206,no,0.008085969403586704,no,0.006368466609250515,no,0.004522310524774094,no,0.004185808326016958,no,0.003768332672755807
1380,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//values is not null and is checkable, we'll look deeper",no,undetermined,0,0,0,no,0.01757480398481593,no,0.010961829873733233,no,0.009108441668684887,no,0.008064735708982744,no,0.00799579400041375,no,0.007278639344666566
1381,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Possibly handle :something parameters for the query ?,no,undetermined,0,0,0,no,0.0064180667657821105,no,0.0041665431044497474,no,0.0034036424446367997,no,0.002899523757777399,no,0.002773273666839259,no,0.002497221456535748
1382,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//for non null args, check for components and elements containing components",no,undetermined,0,0,0,no,0.0022420994259188445,no,0.0026760591427911398,no,0.002366373530750823,no,0.002105615029735328,no,0.0020915884788309624,no,0.0018595781560567792
1383,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If we want to handle it bidirectional and detached, we also need to load this // collection with an eager outer-join fetch, this time with Criteria and not HQL:",no,undetermined,0,0,0,no,0.02617395294238805,no,0.010999827872578269,no,0.009092958923915359,no,0.008024173039004654,no,0.008000577798050622,no,0.00728427365048023
1384,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//cache the hashcode,no,undetermined,0,0,0,no,0.004793959731523974,no,0.005489940350371197,no,0.0047956178681327856,no,0.004295533080596985,no,0.0046312149712109535,no,0.004171165389964778
1385,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*public PropertyProjection project() {
		return Projections.property(getPropertyName());
	}*/",no,undetermined,0,0,0,no,0.027480048851541074,no,0.010977655833420754,no,0.0091060157776821,no,0.008058866897074548,no,0.007994013687852734,no,0.007275041438250391
1386,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//persistent collections may have components,no,undetermined,0,0,0,no,0.006341789745865658,no,0.004447213151088462,no,0.004329273347476047,no,0.00464175273384185,no,0.004673613398977999,no,0.004273723351529034
1387,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// We have the JBCWriteMutex, so no other *local* thread will  // be trying to write this key.  // It's possible here some remote thread has come in and // changed the values again, but since we are reading the // values to write to JBC right now, we know we are writing // the latest values; i.e. we don't assume that what we cached // in entry.update() above is what we should write to JBC *now*. // Our write could be redundant, i.e. we are writing what // some remote thread just came in an wrote.  There is a chance  // that yet another remote thread will update us, and we'll then // overwrite that later data in JBC.  But, all remote nodes will // ignore that change in their localCache; the only place it  // will live will be in JBC, where it can only effect the  // initial state transfer values on newly joined nodes  // (i.e. populateLocalCache()).",no,undetermined,0,0,0,no,0.18216048768651488,no,0.11931022391319314,no,0.10820448625692426,no,0.09792247726190413,no,0.007984734682699765,no,0.00727131244457002
1388,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//test out the optimizer:,no,undetermined,0,0,0,no,0.0017177705007296313,no,0.0018022300432611023,no,0.001267179885031257,no,0.0010022324018798825,no,0.0010117916726677012,no,0.0008801447597030576
1389,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//		registerColumnType( Types.VARCHAR, 16777215, ""mediumtext"" );",no,undetermined,0,0,0,no,0.005766968488986537,no,0.010792745361235794,no,0.009092182278644008,no,0.008069024409703992,no,0.008001336497285783,no,0.007279711367667811
1390,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// IDENT might be the name of a class.,no,undetermined,0,0,0,no,0.02513532414192636,no,0.010960893743555224,no,0.009098258624661383,no,0.008037955512214787,no,0.008009595361326534,no,0.007285097883394643
1391,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Here we don't want to suspend the tx. If we do: // 1) We might be caching query results that reflect uncommitted // changes. No tx == no WL on cache node, so other threads // can prematurely see those query results // 2) No tx == immediate replication. More overhead, plus we // spread issue #1 above around the cluster",no,undetermined,0,0,0,no,0.12039978277902626,no,0.10113004368427099,no,0.08696889541330949,no,0.008052834267304793,no,0.007980727741559852,no,0.007272774715396581
1392,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//TODO!!!,no,undetermined,0,0,0,no,0.01108450116238773,no,0.010983556682987627,no,0.00909444328901823,no,0.008067650457139275,no,0.007989377549034525,no,0.007263500918457884
1393,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// for regression testing against output from the old parser... // found it easiest to simply reorder the FromElements here into ascending order // in terms of injecting them into the resulting sql ast in orders relative to those // expected by the old parser; this is definitely another of those ""only needed // for regression purposes"".  The SyntheticAndFactory, then, simply injects them as it // encounters them.",no,undetermined,0,0,0,no,0.11115559219737513,no,0.09283130093030348,no,0.00908354966164337,no,0.00804972348477546,no,0.007993481825399646,no,0.007274209285619606
1394,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//st.setTimestamp( index,  new Timestamp( cal.getTimeInMillis() ), cal ); //JDK 1.5 only",no,undetermined,0,0,0,no,0.02633329656025936,no,0.010424123937492692,no,0.009094356650821436,no,0.008043818751091272,no,0.008002106080216282,no,0.0072841023271635425
1395,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//arbitrary on clause ignored!!,no,undetermined,0,0,0,no,0.001001467729728695,no,0.001494619380237648,no,0.0014246172860384273,no,0.001372752465351498,no,0.0013694164640053114,no,0.0012075863439619107
1396,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//st.setDate( index,  new Date( cal.getTimeInMillis() ), cal ); //JDK 1.5 only",no,undetermined,0,0,0,no,0.036182796628993416,no,0.01096740112942086,no,0.009113099794228103,no,0.008055980041508377,no,0.008005474459086207,no,0.0072869857229763005
1397,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// from javax.naming.Referenceable,no,undetermined,0,0,0,no,0.026869259534564545,no,0.010991936617592629,no,0.009101763310206672,no,0.008060810386899216,no,0.007989469764222911,no,0.007281481126579582
1398,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// both are Timestamps,no,undetermined,0,0,0,no,0.002642416223983936,no,0.006892902817292711,no,0.007189653106183288,no,0.007776329686931854,no,0.007836991507454994,no,0.007146915729345171
1399,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// First, collect all of the select expressions. // NOTE: This must be done *before* invoking setScalarColumnText() because setScalarColumnText() // changes the AST!!!",no,undetermined,0,0,0,no,0.01910596130589429,no,0.01097901297684491,no,0.009101118935494815,no,0.008064799931178729,no,0.008006911224225857,no,0.007269665181776165
1400,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// at least one is a plain old Date,no,undetermined,0,0,0,no,0.006519032893316991,no,0.006845343023770133,no,0.0057595275429389425,no,0.005183659302786508,no,0.005119779529687714,no,0.004642450809840692
1401,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//swallow it (the transaction _was_ successful or successfully rolled back),no,undetermined,0,0,0,no,0.009935619731985111,no,0.008872566457082544,no,0.007713759849139733,no,0.007257907332624221,no,0.007779496867009583,no,0.0070999317700136755
1402,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//check for all components values in the collection,no,undetermined,0,0,0,no,0.0016421125061130768,no,0.0015221569497532066,no,0.0010173676001285477,no,0.000872029914462019,no,0.0008698252741511242,no,0.000798272361109469
1403,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// after *all* persisters and named queries are registered,no,undetermined,0,0,0,no,0.01792557200496325,no,0.010985053960599338,no,0.00909006117567624,no,0.008058864123255963,no,0.007993419898378798,no,0.007285184944987357
1404,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//do the test,no,undetermined,0,0,0,no,0.0025932728085954226,no,0.002880400092894376,no,0.0021792757623492133,no,0.0017293797730257166,no,0.0017370793491895786,no,0.001535256359941031
1405,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// LIMIT support (ala TOP) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.00191252265603269,no,0.004485134897952279,no,0.004139310323994887,no,0.004183473899621443,no,0.004210198021338104,no,0.003755729538498961
1406,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If close() is called, guarantee unbind()",no,undetermined,0,0,0,no,0.0008575703790750795,no,0.001011131922483452,no,0.0009847305094967487,no,0.0008962165776076133,no,0.000895589061503694,no,0.0007779093549688657
1407,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// or BYTE // or TEXT? // or MONEY,no,undetermined,0,0,0,no,0.003578900289543423,no,0.004446131110979911,no,0.0041532140495128544,no,0.004025966437995498,no,0.004010251542459919,no,0.0036144872625738698
1408,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//noop,no,undetermined,0,0,0,no,0.0018154067788869685,no,0.0019879369875564867,no,0.0019421920506270112,no,0.0020706766423144395,no,0.0020766488627519536,no,0.0018518504446880754
1409,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//			        ( implied && DotNode.useThetaStyleImplicitJoins ) ) {,no,undetermined,0,0,0,no,0.0027925249097006262,no,0.0030406756716885495,no,0.0033144067849769816,no,0.0036861030040391623,no,0.0037843093968599234,no,0.0033667389644166635
1410,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if the corresponding SQL value is NULL, the reader we got is NULL as well",no,undetermined,0,0,0,no,0.004033449863230308,no,0.0033292423125501815,no,0.0026154656929721523,no,0.002620489361220924,no,0.0026234892616311704,no,0.0023126071323132987
1411,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If there is no data type for this node, and we're at the end of the path (top most dot node), then // this might be a Java constant.",no,undetermined,0,0,0,no,0.03323655984420541,no,0.010984082874629295,no,0.009082796057740233,no,0.00805281624353844,no,0.007981459341070895,no,0.0072815207310185275
1412,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Fetch Reader content up to the end - and put characters in a StringBuffer,no,undetermined,0,0,0,no,0.0411500512728618,no,0.010991025185205698,no,0.009103443557127815,no,0.008070735884189717,no,0.007975237188656567,no,0.007275304107561322
1413,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The loop ensures atomicity of the // select + update even for no transaction // or read committed isolation level,no,undetermined,0,0,0,no,0.0013919708618020219,no,0.001432662378828642,no,0.0011727302819939105,no,0.0009563371964193251,no,0.0011170659612579556,no,0.0009859914170417007
1414,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Return StringBuffer content as a large String,no,undetermined,0,0,0,no,0.02054808741611209,no,0.010978357107526171,no,0.009089934165205815,no,0.008056672834986286,no,0.008001041003522186,no,0.007264827688989375
1415,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The where clause was added to eliminate this statement from Brute Force Searches.,no,undetermined,0,0,0,no,0.060141191514944146,no,0.01096822527696551,no,0.009089527062674036,no,0.008055930269684012,no,0.008006325136928083,no,0.007274223355636557
1416,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//or Types.LONGVARCHAR?,no,undetermined,0,0,0,no,0.005624289631195214,no,0.0050839645888440385,no,0.005053566969233104,no,0.005292508770514672,no,0.005338394952305032,no,0.004848525245124129
1417,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0011622327290709787,no,0.0011638242245380203,no,0.0011173140002844785,no,0.0014774358081173686,no,0.0015026092631850257,no,0.00133634356530595
1418,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//TODO,no,undetermined,0,0,0,no,0.01108450116238773,no,0.010983556682987627,no,0.00909444328901823,no,0.008067650457139275,no,0.007989377549034525,no,0.007263500918457884
1419,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// We ignore minimalPutOverride. JBossCache putForExternalRead is // already about as minimal as we can get; it will promptly return // if it discovers that the node we want to write to already exists,no,undetermined,0,0,0,no,0.004233211687396574,no,0.0037979099719292544,no,0.003005122147756848,no,0.002705260334692997,no,0.002458471421960479,no,0.0022312933583976302
1420,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Forcefully remove leading ands from where fragments; the grammar will // handle adding them,no,undetermined,0,0,0,no,0.003716103274501865,no,0.0032448571052241747,no,0.002908639820288425,no,0.00250428537199262,no,0.0025694454329267336,no,0.0023017296390918656
1421,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// for non-arrays, we don't need to know the element class //elementType.returnedClass();",no,undetermined,0,0,0,no,0.06520905487669013,no,0.010981011508282512,no,0.009103147063358392,no,0.008066267786473066,no,0.00798670220012417,no,0.007274331134905908
1422,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Chop off the rest of the tree.,no,undetermined,0,0,0,no,0.004940814031036157,no,0.003130595790164154,no,0.0026168244047920985,no,0.002248641297988205,no,0.0024571986785913175,no,0.0021733780524314013
1423,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// grab its state from the ResultSet and keep it in the Session // (but don't yet initialize the object itself) // note that we acquire LockMode.READ even if it was not requested,no,undetermined,0,0,0,no,0.003803387870240865,no,0.003482640975111064,no,0.0028022009073810986,no,0.002346890534466989,no,0.0022244205611359007,no,0.001968139890050753
1424,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//different nullability rules for pk/fk,no,undetermined,0,0,0,no,0.010090865141757563,no,0.004246645106749178,no,0.009093650404363924,no,0.008060168955154637,no,0.007991418926787367,no,0.007289565264143277
1425,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if the types report logical equivalence, return true...",no,undetermined,0,0,0,no,0.029243096471953833,no,0.010955347259103342,no,0.009092185697194406,no,0.00805616415424637,no,0.007991261175559233,no,0.007276245770389894
1426,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//cache this,no,undetermined,0,0,0,no,0.017478795794820038,no,0.010982841156386475,no,0.009105202640530703,no,0.008040631963512644,no,0.007995258818551412,no,0.007287249917038004
1427,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// for a subquery, the alias to use depends on a few things (we // already know this is not an overall SELECT): //      1) if this FROM_ELEMENT represents a correlation to the //          outer-most query //              A) if the outer query represents a multi-table //                  persister, we need to use the given alias //                  in anticipation of one of the multi-table //                  executors being used (as this subquery will //                  actually be used in the ""id select"" phase //                  of that multi-table executor) //              B) otherwise, we need to use the persister's //                  table name as the column qualification //      2) otherwise (not correlated), use the given alias",no,undetermined,0,0,0,no,0.17818110007949017,no,0.11508996880782416,no,0.09074973116635325,no,0.008054517942717604,no,0.007991965715626772,no,0.007265425547285209
1428,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//only really need new array during semiresolve!,no,undetermined,0,0,0,no,0.022639942724233884,no,0.010992033074973356,no,0.00910757281095451,no,0.00804474261368942,no,0.008005813426718507,no,0.007278203929263449
1429,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// classic translator does not support collection of ordinal // param metadata,no,undetermined,0,0,0,no,0.08911099792736253,no,0.010965741145402889,no,0.009084272123520266,no,0.008039845272617852,no,0.007986829242469254,no,0.007270788577752178
1430,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//unwrap it,no,undetermined,0,0,0,no,0.0026510683312862765,no,0.0036846176382772057,no,0.0036687011484866543,no,0.0037899170448825797,no,0.0037815452593656274,no,0.0034019583634357004
1431,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//cache the hashcode,no,undetermined,0,0,0,no,0.004793959731523974,no,0.005489940350371197,no,0.0047956178681327856,no,0.004295533080596985,no,0.0046312149712109535,no,0.004171165389964778
1432,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// an unfetched association can only point to // an entity that already exists in the db,no,undetermined,0,0,0,no,0.0034919253792422846,no,0.00247105789492673,no,0.002852710594003494,no,0.0024185395715588093,no,0.002370099111351256,no,0.0020340313341125206
1433,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// here, we work under the following assumptions: //      ------------ valid cases -------------------------------------- //      1) datetime + {something other than datetime} : always results //              in a datetime ( db will catch invalid conversions ) //      2) datetime - datetime : always results in a DOUBLE //      3) datetime - {something other than datetime} : always results //              in a datetime ( db will catch invalid conversions ) //      ------------ invalid cases ------------------------------------ //      4) datetime + datetime //      5) {something other than datetime} - datetime //      6) datetime * {any type} //      7) datetime / {any type} //      8) {any type} / datetime // doing so allows us to properly handle parameters as either the left // or right side here in the majority of cases",no,undetermined,0,0,0,no,0.02290748274806121,no,0.010975174149502486,no,0.0066563129925798735,no,0.005262605601873414,no,0.005289496112869906,no,0.004783161111164922
1434,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// let the interceptor inspect the instance to decide,no,undetermined,0,0,0,no,0.009091352356039372,no,0.00833703815065663,no,0.006984350905355889,no,0.006635967067072053,no,0.006668111203972402,no,0.006102652523674339
1435,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*
	 * The types represented in the SQL result set.
	 *
	 * @return The types represented in the SQL result set.
	 */",no,undetermined,0,0,0,no,0.0015224532971235963,no,0.0011849056073212547,no,0.000864024633507455,no,0.0006919144081877464,no,0.0007003458730952496,no,0.0006114044620811374
1436,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// let the persister inspect the instance to decide,no,undetermined,0,0,0,no,0.01981115639616645,no,0.010988620542875829,no,0.00910119783582414,no,0.008059312701076946,no,0.00798076771905313,no,0.007286660471464575
1437,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the CascadingAction contract ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.004750417805195459,no,0.0031769759231687314,no,0.0019212095616463242,no,0.0022328799061971326,no,0.0023119915401128084,no,0.0020686031151878784
1438,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//TODO!!!!!!!,no,undetermined,0,0,0,no,0.01108450116238773,no,0.010983556682987627,no,0.00909444328901823,no,0.008067650457139275,no,0.007989377549034525,no,0.007263500918457884
1439,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// DDL support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.005970561712932206,no,0.009205169778684838,no,0.009101288728053773,no,0.008055348796357609,no,0.008001481245638098,no,0.007266355414561567
1440,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Create a new FILTERS node as a parent of all filters,no,undetermined,0,0,0,no,0.008115598942933884,no,0.007528767793388798,no,0.0070755701057248,no,0.006391392325155799,no,0.006568136593710574,no,0.005946064933148223
1441,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if there is no TM configured, we will not be able to access // the javax.transaction.Transaction object in order to // register a synch anyway.",no,undetermined,0,0,0,no,0.01009391715773689,no,0.00661796261198122,no,0.005019536251517693,no,0.0040722159471418135,no,0.004907338216079974,no,0.004490535249811096
1442,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0036523008980329486,no,0.005504726900042388,no,0.006461868463342029,no,0.00788716525811375,no,0.0079850989855144,no,0.007268429553841039
1443,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Establish the region root node with a non-locking data version,no,undetermined,0,0,0,no,0.009608483910868408,no,0.006687638596008941,no,0.006105664735546654,no,0.005674420690603026,no,0.005900771417863978,no,0.005353525301104071
1444,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//public Object instantiate(Object parent, SessionImplementor session) throws HibernateException;",no,undetermined,0,0,0,no,0.009347269703254522,no,0.009910135452253097,no,0.008201449216544329,no,0.007288648906632794,no,0.0070809403626167335,no,0.006431540875466141
1445,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//nothing to do,no,undetermined,0,0,0,no,0.001691737198763833,no,0.0016995465734521789,no,0.0012583296835915931,no,0.0010336609003169827,no,0.0010229564290254076,no,0.0008898242716306033
1446,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//nothing to do,no,undetermined,0,0,0,no,0.001691737198763833,no,0.0016995465734521789,no,0.0012583296835915931,no,0.0010336609003169827,no,0.0010229564290254076,no,0.0008898242716306033
1447,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we use the assumed value, if there is one, to avoid hitting // the database",no,undetermined,0,0,0,no,0.0017269241996642009,no,0.0013923205632019738,no,0.0010764803554851757,no,0.0010855943884657882,no,0.0010614663684684598,no,0.0009248412943183511
1448,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// context-entity-identifier returns null explicitly if the entity // is not associated with the persistence context; so make some // deeper checks...,no,undetermined,0,0,0,no,0.0405278507487873,no,0.010966515235875907,no,0.009086753439108334,no,0.008053035711515097,no,0.007978349481049566,no,0.007275205893741262
1449,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//int count = 0;,no,undetermined,0,0,0,no,0.0020106450602769524,no,0.002915824088509381,no,0.002569751391383253,no,0.0023990838402764914,no,0.0024337453647870653,no,0.0021626557221557
1450,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// putfield // new value of the field,no,undetermined,0,0,0,no,0.004645660327321844,no,0.00554544918384496,no,0.0052031836581738575,no,0.00512745609249345,no,0.004960601886732106,no,0.004435286170860295
1451,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//lobs cannot be compared,no,undetermined,0,0,0,no,0.004427051202688773,no,0.0067889025579392194,no,0.006700556789513522,no,0.007124863761686767,no,0.006948341574376191,no,0.006311763364364864
1452,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//not really necessary, I guess...",no,undetermined,0,0,0,no,0.05217002239968844,no,0.010971723759599648,no,0.009094429988751975,no,0.008054940354089364,no,0.007981481375962288,no,0.00728397519286027
1453,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Clobs are ignored by merge() operation,no,undetermined,0,0,0,no,0.0015540107435727934,no,0.002617299574012051,no,0.0023104014224097956,no,0.0021471833635004975,no,0.002137814993093257,no,0.001899184609796667
1454,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//the first key found after the given key,no,undetermined,0,0,0,no,0.0013290499145876314,no,0.0011267772136872255,no,0.000827674738384162,no,0.0007448214859702132,no,0.0009312084472194273,no,0.0007861916069522994
1455,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// collections cannot be compared,no,undetermined,0,0,0,no,0.004956308909441358,no,0.004753178415592207,no,0.004394196653211919,no,0.004573535478527465,no,0.004513592027048411,no,0.0041054115238043235
1456,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//remember the uk value,no,undetermined,0,0,0,no,0.0031748388285058604,no,0.008742435385331818,no,0.008210686598555202,no,0.008064538324901015,no,0.008011048833353237,no,0.0072788101062444925
1457,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//NOOP,no,undetermined,0,0,0,no,0.0018154067788869685,no,0.0019879369875564867,no,0.0019421920506270112,no,0.0020706766423144395,no,0.0020766488627519536,no,0.0018518504446880754
1458,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//processCollectionProperty(token, q.getCollectionPersister(collectionRole), collectionName);",no,undetermined,0,0,0,no,0.002033399673256706,no,0.002404341250489942,no,0.0024302362459058813,no,0.002540059048806884,no,0.0025649527147918664,no,0.002278125280728999
1459,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//we must use the ""remembered"" uk value, since it is  //not available from the EntityEntry during assembly",no,undetermined,0,0,0,no,0.006125014885068969,no,0.010988013201632089,no,0.009094046329623297,no,0.008047594178900731,no,0.00799657691596304,no,0.007267245490951121
1460,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// collections don't dirty an unversioned parent entity,no,undetermined,0,0,0,no,0.026474015944795593,no,0.01096440918984076,no,0.009103043533325993,no,0.008059080293043018,no,0.007989956792804584,no,0.007286242442013896
1461,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// return false;,no,undetermined,0,0,0,no,0.003180875411652142,no,0.000310709464936283,no,0.0002276155155665587,no,0.00020669740966908348,no,0.00020570378177164544,no,0.00017678532213295952
1462,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// This just handles a particular case of component // projection, perhaps get rid of it and throw an exception",no,undetermined,0,0,0,no,0.20964802512161843,no,0.25705008929390105,no,0.2568140853078619,no,0.2644035707065985,no,0.2626439849139352,no,0.24883585465873
1463,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//NOTE: we avoid joining to the next table if the named property is just the foreign key value,no,undetermined,0,0,0,no,0.00685544888147991,no,0.0071785464789530075,no,0.005303904590099777,no,0.004592565417398009,no,0.004908935294490054,no,0.004292309091793656
1464,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// the key is the owning entity itself, so get the ID from the key",no,undetermined,0,0,0,no,0.004236402418191456,no,0.0026397143336024122,no,0.0024848691802096382,no,0.002111561970143558,no,0.0027525606582238346,no,0.0020536553972762385
1465,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//checkForEnd = false;,no,undetermined,0,0,0,no,0.0032405440611432824,no,0.0009629460346336856,no,0.0009180032662291025,no,0.0009643915689715818,no,0.0009541623994715656,no,0.0008417978334789189
1466,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//ignore subselect keywords,no,undetermined,0,0,0,no,2.866449354558224e-05,no,4.1797552945590086e-05,no,3.833152534428168e-05,no,3.644921491844233e-05,no,3.709137643114907e-05,no,3.0748718755761476e-05
1467,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// copy elements into newly empty target collection,no,undetermined,0,0,0,no,0.004480626075445966,no,0.00968052181621469,no,0.007149545683949615,no,0.006221327383562199,no,0.006096653231036483,no,0.005552586198604937
1468,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//end of array, start filling again from start",no,undetermined,0,0,0,no,0.0022624621264027245,no,0.001811857268095264,no,0.001593500142813931,no,0.0014437270064218887,no,0.001443669331806914,no,0.001278079397598147
1469,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// for a null target, or a target which is the same as the original, we // need to put the merged elements in a new collection",no,undetermined,0,0,0,no,0.0026416251642203997,no,0.001976637372376441,no,0.0014151713457393662,no,0.0012085684323787072,no,0.0012287559168306973,no,0.0010953204691854731
1470,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//we ran out of keys to try,no,undetermined,0,0,0,no,0.004666738856907083,no,0.00426325354562441,no,0.0036831291352404463,no,0.003341327810096647,no,0.0033391558252508008,no,0.0029827070553818153
1471,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// by default just use an unanticipated capacity since we don't // know how to extract the capacity to use from original here...,no,undetermined,0,0,0,no,0.04033291123116899,no,0.010989892906036844,no,0.009080201129564947,no,0.00806800424042753,no,0.007996188882199709,no,0.007288118964781542
1472,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//the first id found after the given id,no,undetermined,0,0,0,no,0.01624902999420422,no,0.009374027801092786,no,0.007606114884966264,no,0.006758339753077332,no,0.007676955848947334,no,0.0068000908274763764
1473,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//we ran out of ids to try,no,undetermined,0,0,0,no,0.005128044873262081,no,0.0071862903633504085,no,0.0053532368402451555,no,0.004882046263487148,no,0.0048971297540618755,no,0.004422591333406017
1474,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// DISCRIMINATOR,no,undetermined,0,0,0,no,0.0036523008980329486,no,0.0018747438929654615,no,0.0020780385771097666,no,0.0023334647268353588,no,0.002354929831862368,no,0.0021033870660343585
1475,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// get the elements back into the target making sure to handle dirty flag,no,undetermined,0,0,0,no,0.008004341337051883,no,0.005557076352804037,no,0.004339554399305069,no,0.0036491181084445856,no,0.0036559191162898307,no,0.0033013969540807704
1476,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// check if collection is currently being loaded,no,undetermined,0,0,0,no,0.018088581256988062,no,0.010978704119068022,no,0.009105165628523834,no,0.008057400583318036,no,0.008007418399090459,no,0.007288750613309747
1477,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// check if it is already completely loaded, but unowned",no,undetermined,0,0,0,no,0.017764102440796146,no,0.010971519308209103,no,0.009093831328710507,no,0.008057012730333716,no,0.00800801531056067,no,0.00727297378770921
1478,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// initialize this collection,no,undetermined,0,0,0,no,0.011190216237334683,no,0.006457362972776647,no,0.0025663869285123923,no,0.002113320132353152,no,0.0021834095501303695,no,0.0018453282668080653
1479,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//TODO!!!!!!!,no,undetermined,0,0,0,no,0.01108450116238773,no,0.010983556682987627,no,0.00909444328901823,no,0.008067650457139275,no,0.007989377549034525,no,0.007263500918457884
1480,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// create a new collection wrapper, to be initialized later",no,undetermined,0,0,0,no,0.03009889154710346,no,0.010979472973417797,no,0.0091121941237145,no,0.008043372223691996,no,0.007987159757566985,no,0.007270266342714213
1481,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Some JDBC drivers erroneously return an empty array here for a null DB value :/,no,undetermined,0,0,0,no,0.02326637014826695,no,0.010971637568543505,no,0.009105814257761394,no,0.00807064978335023,no,0.007985571851816262,no,0.007292011501320352
1482,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//cannot batch fetch by unique key (property-ref associations),no,undetermined,0,0,0,no,0.0032221566887909872,no,0.0024510256026416626,no,0.0019421255190263777,no,0.0016786824170802448,no,0.0016978626882001501,no,0.0014291125064672921
1483,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we already know current is not null...,no,undetermined,0,0,0,no,0.026082056540281614,no,0.010965321895088677,no,0.009084422254424651,no,0.008071847004256838,no,0.007990468127459505,no,0.007269412807388285
1484,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//the owner of the association is not the owner of the id,no,undetermined,0,0,0,no,0.005485159822450037,no,0.0038970763669604652,no,0.00623453547639254,no,0.005697306192118483,no,0.007155021720182323,no,0.0072790783540482035
1485,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ----------------------------------------------------------- Constructors,no,undetermined,0,0,0,no,0.006547506246461415,no,0.008740606355176617,no,0.008777707696816024,no,0.008043268747741495,no,0.007999654021596971,no,0.007269092274182314
1486,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ----------------------------------------------------- Instance Variables,no,undetermined,0,0,0,no,5.3667628758551544e-05,no,8.954412317980397e-05,no,7.333636280917709e-05,no,6.520694803416308e-05,no,6.531350056508702e-05,no,5.4879540741647315e-05
1487,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// --------------------------------------------------------- Public Methods,no,undetermined,0,0,0,no,0.011088699993003895,no,0.010990794582154732,no,0.009082934773556298,no,0.00806457551712339,no,0.007985282212610101,no,0.007261150971561057
1488,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Compare the two maps for equality,no,undetermined,0,0,0,no,0.01393071915888185,no,0.009458917642793331,no,0.0084894871742487,no,0.007845805598997961,no,0.0077663419909984105,no,0.007095321362700339
1489,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Simple tests that require no synchronization,no,undetermined,0,0,0,no,0.0016391094788977705,no,0.0015583115082132702,no,0.0012122453306226246,no,0.001037877280577946,no,0.0010528074027349942,no,0.0009187514518490481
1490,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//Sybase fail if we don't do that, sigh...",no,undetermined,0,0,0,no,0.002900189040653703,no,0.0019286996899501164,no,0.001731937975306139,no,0.0016497946592583883,no,0.0016689495645984638,no,0.0014821672055947846
1491,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// stream closed in the finally,no,undetermined,0,0,0,no,0.0009272897880039956,no,0.0008856169406522486,no,0.000740246016366786,no,0.000658176625507021,no,0.0006693168384966112,no,0.000584941917778999
1492,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// release the jdk internal caches everytime to ensure this // plays nicely with destroyable class-loaders,no,undetermined,0,0,0,no,0.052380382931515056,no,0.010967990088311142,no,0.009095202141233018,no,0.008042923150469457,no,0.007982074244721214,no,0.007270704324033031
1493,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// release the jdk internal caches everytime to ensure this // plays nicely with destroyable class-loaders,no,undetermined,0,0,0,no,0.052380382931515056,no,0.010967990088311142,no,0.009095202141233018,no,0.008042923150469457,no,0.007982074244721214,no,0.007270704324033031
1494,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// try to ""pretty print"" it",no,undetermined,0,0,0,no,0.006286205469412799,no,0.0065217361110127495,no,0.006146472646781851,no,0.005918121442163738,no,0.005872627267302158,no,0.005331588818895579
1495,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// otherwise, just dump it",no,undetermined,0,0,0,no,0.008001725536742433,no,0.009804739253408027,no,0.006134530704859415,no,0.0054476204399240705,no,0.005501589236366412,no,0.004939686556240213
1496,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//its an interface so we can't really tell anything...,no,undetermined,0,0,0,no,0.021366009200417656,no,0.010975499044077356,no,0.00910090773508468,no,0.008060750220195386,no,0.008007398028975408,no,0.007293621434648262
1497,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//its an interface so we can't really tell anything...,no,undetermined,0,0,0,no,0.021366009200417656,no,0.010975499044077356,no,0.00910090773508468,no,0.008060750220195386,no,0.008007398028975408,no,0.007293621434648262
1498,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// use default behavior,no,undetermined,0,0,0,no,0.00162856378314718,no,0.003334663326021902,no,0.0029855671540696964,no,0.002775047605691031,no,0.0028186209405599255,no,0.00253468570308659
1499,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//NOTE: early return,no,undetermined,0,0,0,no,0.005690508329336906,no,0.004007544344356682,no,0.002912955032419817,no,0.0027183961676747028,no,0.0027140268143419043,no,0.0024492561429509075
1500,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we want to be able to just use the defaults, // if JNDI environment properties are not supplied // so don't put null in anywhere",no,undetermined,0,0,0,no,0.004383603808328021,no,0.004148606440209236,no,0.00379469672269347,no,0.003794944159764266,no,0.0036845616655526523,no,0.0033072900020775097
1501,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Clone //-----------------------------------------------------------------------,no,undetermined,0,0,0,no,0.00026025556521101225,no,0.000408023996402103,no,0.0004167796335839648,no,0.00040552110187855106,no,0.0004142649345359399,no,0.00035899617292009165
1502,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Serialize //-----------------------------------------------------------------------,no,undetermined,0,0,0,no,0.00213526294263402,no,0.0030241386106842232,no,0.003282315638142042,no,0.003894127980268868,no,0.003956033425673428,no,0.003586009749595661
1503,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// warning: can cause a recursive calls! (proxy initialization),no,undetermined,0,0,0,no,0.005425802719778472,no,0.004948928822187938,no,0.004124545753204885,no,0.0036256990296780253,no,0.0035854355099000884,no,0.0028975507968921643
1504,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// stream closed in the finally,no,undetermined,0,0,0,no,0.0009272897880039956,no,0.0008856169406522486,no,0.000740246016366786,no,0.000658176625507021,no,0.0006693168384966112,no,0.000584941917778999
1505,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* static methods only - hide constructor */,no,undetermined,0,0,0,no,0.004542870992345933,no,0.005343161115903203,no,0.004353970558592987,no,0.0037293471488272596,no,0.0036960074253473206,no,0.0033103092196308456
1506,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*&& !('_'==character)*/,no,undetermined,0,0,0,no,0.000887929880204159,no,0.002585781756888747,no,0.00246573085155968,no,0.002443753269009075,no,0.0024003295413400723,no,0.002142505400829458
1507,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// returnign null!,no,undetermined,0,0,0,no,0.0004106504170040871,no,0.00031124162424282987,no,0.00026165298237795087,no,0.0002296754985917646,no,0.00022729781506706265,no,0.00017642367527152618
1508,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// returnign null!,no,undetermined,0,0,0,no,0.0004106504170040871,no,0.00031124162424282987,no,0.00026165298237795087,no,0.0002296754985917646,no,0.00022729781506706265,no,0.00017642367527152618
1509,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// includes last '.',no,undetermined,0,0,0,no,0.0028173268931134376,no,0.0033281726981152877,no,0.0027796430099920606,no,0.0025752289686838013,no,0.0025848157490481146,no,0.002300695722321212
1510,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// +1 to include the following '.',no,undetermined,0,0,0,no,0.005529136358656286,no,0.0041853385039016784,no,0.0035781547711759643,no,0.0032568685509507464,no,0.0032618566036862503,no,0.0029137565069430986
1511,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// first time we find match!,no,undetermined,0,0,0,no,0.0008446501226073924,no,0.0008805147324892832,no,0.0006511747114854512,no,0.000542771194659652,no,0.0005437582740550604,no,0.0004739837295973609
1512,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// entityNames may now include slashes for the representations //classname may be an inner class,no,undetermined,0,0,0,no,0.009938297273410241,no,0.0102665015219984,no,0.008446696618688071,no,0.007963899684284778,no,0.00797558276966436,no,0.007279626889995165
1513,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// wrapped iterators,no,undetermined,0,0,0,no,0.01684478122954198,no,0.01097468139079338,no,0.009115564661349652,no,0.00805636933286757,no,0.007995227008719774,no,0.007294777547305146
1514,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// index of current iterator in the wrapped iterators array,no,undetermined,0,0,0,no,0.010677158926376584,no,0.007625351428836147,no,0.005716667873607833,no,0.0048491697136392896,no,0.004820836337765227,no,0.004350940866661403
1515,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the current iterator,no,undetermined,0,0,0,no,0.001402995515121197,no,0.0009097438169172103,no,0.0007710172536425838,no,0.0007951253968378698,no,0.0008030786703492977,no,0.0007069423058666792
1516,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the last used iterator,no,undetermined,0,0,0,no,0.0015120998442896417,no,0.0011772925267178917,no,0.0010064633991203485,no,0.000977603179401376,no,0.000988086597108306,no,0.0008700302378478635
1517,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//it was a boolean expression,no,undetermined,0,0,0,no,0.001102931151443697,no,0.0009217577691259569,no,0.000839406845130299,no,0.0006397891084006101,no,0.0006315015568229386,no,0.0005451706429980292
1518,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// call this before any Iterator method to make sure that the current Iterator // is not exhausted,no,undetermined,0,0,0,no,0.029148744343976993,no,0.010980771377273981,no,0.009102159562628487,no,0.008070629045243154,no,0.007985375080084485,no,0.007290360786260463
1519,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//doable if needed,no,undetermined,0,0,0,yes,0.7047818039842019,yes,0.6694132100116277,yes,0.6889800620832429,yes,0.7055173028706448,yes,0.707338299161566,yes,0.7095495668762273
1520,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// set last used iterator here, in case the user calls remove // before calling hasNext() or next() (although they shouldn't)",no,undetermined,0,0,0,no,0.04764758276730153,no,0.010957907636952346,no,0.009111097817469346,no,0.008069849665805472,no,0.00798107940667056,no,0.00727180424001318
1521,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// peek ahead,no,undetermined,0,0,0,no,0.0006791213817672697,no,0.0007493278113649726,no,0.0007175353701069354,no,0.0007283022731692524,no,0.0007357109628306796,no,0.0006406058953925629
1522,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if we reach the end of the string w/o finding the // matching end, that is an exception",no,undetermined,0,0,0,no,0.0019649258667011446,no,0.0020371741902571565,no,0.0016696733648907875,no,0.0014830363815133295,no,0.0015307572632603248,no,0.0013659132986299182
1523,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// there were no queued additions // and the role has a cache,no,undetermined,0,0,0,no,0.0022959459221695935,no,0.003742635953114285,no,0.0031454148597930306,no,0.0028232386988335675,no,0.0029105307814986723,no,0.0025752919662012643
1524,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Print page,no,undetermined,0,0,0,no,0.005140721363697571,no,0.007895013566515398,no,0.008030007297282196,no,0.008067724491931971,no,0.008000905938221683,no,0.007289402782771823
1525,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// and this is not a forced initialization during flush,no,undetermined,0,0,0,no,0.024669780977750414,no,0.010973320383201932,no,0.009077776067796438,no,0.008057927359321461,no,0.007982579163461418,no,0.007277384124532988
1526,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we have a placeholder, spin forward till we find the end",no,undetermined,0,0,0,no,0.004389146227574969,no,0.005753709385096243,no,0.006015981413655221,no,0.005305443806486826,no,0.005303409154013095,no,0.004798468666268737
1527,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// make sure spinning forward did not put us past the end of the buffer...,no,undetermined,0,0,0,no,0.008995743639556566,no,0.010609146515734606,no,0.008365226964024896,no,0.007233750197193139,no,0.006994367882433683,no,0.005867844762242294
1528,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// First, try to locate this resource through the current // context classloader.",no,undetermined,0,0,0,no,0.010585453400371708,no,0.005185516130891012,no,0.003963497486346068,no,0.0035213157544483004,no,0.0034663451230367024,no,0.0030977714548224597
1529,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Next, try to locate this resource through this class's classloader",no,undetermined,0,0,0,no,0.034933797943249946,no,0.010987471931456173,no,0.009091221798658003,no,0.008074805764204543,no,0.007980852969680364,no,0.007264046435098573
1530,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Next, try to locate this resource through the system classloader",no,undetermined,0,0,0,no,0.025884518482895046,no,0.010306219764705242,no,0.008468597140950829,no,0.007580536564995784,no,0.007672300167193582,no,0.00696935466305051
1531,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Anywhere else we should look?,no,undetermined,0,0,0,no,0.02626259749601925,no,0.010954556228707325,no,0.0090861334739681,no,0.008072151012738669,no,0.00801078964201658,no,0.007268094855216372
1532,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// would need an IdentitySet for this!,no,undetermined,0,0,0,no,0.5365369010298073,no,0.37475827563111347,no,0.42049862950113287,no,0.4258164148197655,no,0.42394075860205843,no,0.3999409592068954
1533,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Arrays.asList doesn't do primitive arrays,no,undetermined,0,0,0,no,0.017139816939975405,no,0.010961073590617198,no,0.009114078634295017,no,0.00804791467185617,no,0.007998484319231239,no,0.00726508818805058
1534,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_0,no,undetermined,0,0,0,no,0.0036523008980329486,no,0.00513915212545195,no,0.005027493849438599,no,0.005065922042797434,no,0.0050777015913364455,no,0.004591248132509578
1535,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//faster?,no,undetermined,0,0,0,no,0.016400418755629413,no,0.010985963633323765,no,0.009083087542074606,no,0.008059955966885773,no,0.007983572053128517,no,0.007277444911443211
1536,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//pass the entity-name, if not a collection-id",no,undetermined,0,0,0,no,0.008436698977488053,no,0.0068609942251320315,no,0.005362955981245017,no,0.004539640397987151,no,0.004560412037075292,no,0.004404506821412092
1537,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// right represents a joins originating from left; or // both right and left reprersent joins originating from the same FromElement,no,undetermined,0,0,0,no,0.007770342024694297,no,0.010980087505975051,no,0.009087610353686623,no,0.008062940163423259,no,0.00801172827333935,no,0.007285623797605577
1538,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the name of a class,no,undetermined,0,0,0,no,0.0008525879297911596,no,0.0008875326941501572,no,0.0006424124679025808,no,0.0005002172908127094,no,0.0004926915963715891,no,0.0004258865156409057
1539,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Its the listener class name,no,undetermined,0,0,0,no,0.005002403976281534,no,0.004876047289881886,no,0.004079470941393977,no,0.003792301914285185,no,0.0038386372456197795,no,0.003415335241511886
1540,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//allow 9,8,7,6,5,4,3,2,1",no,undetermined,0,0,0,no,0.008720013630879885,no,0.00921863703705614,no,0.008864640037681228,no,0.008053420602309458,no,0.00798657695492969,no,0.007265430410918955
1541,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// default to element set if no elements() specified,no,undetermined,0,0,0,no,9.196300998653687e-05,no,0.00010909778181499062,no,8.414754642248582e-05,no,6.404078602810223e-05,no,6.531188517976206e-05,no,5.470470477880014e-05
1542,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// look for the instance by uuid,no,undetermined,0,0,0,no,0.003718524466598062,no,0.0032335388312233074,no,0.002760200660951237,no,0.0024039063758825624,no,0.0023791649866663662,no,0.0021182614394511146
1543,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// first, lets determine whether to apply cglib or javassist based instrumentation...",no,undetermined,0,0,0,no,0.002515091619727921,no,0.0020150390780795235,no,0.0016598940637855336,no,0.0018134218319939336,no,0.00180242295849316,no,0.0015672962112777758
1544,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Make sure we don't override previous set values,no,undetermined,0,0,0,no,0.0007229535195214512,no,0.0007708480363968583,no,0.0005973143038999557,no,0.0005023146860008739,no,0.00048811847639013714,no,0.00042191347412675467
1545,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//entirely optional!!,no,undetermined,0,0,0,no,0.008935188150163961,no,0.01097677309375263,no,0.009092264639896977,no,0.008060156549543836,no,0.00799414322497109,no,0.007283857742147294
1546,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Its the listener instance (or better be),no,undetermined,0,0,0,no,0.15554958243883482,no,0.16515435956660904,no,0.17286117022866404,no,0.1823408832851318,no,0.1767331585768167,no,0.17191027202975878
1547,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//context.unbind(boundName);,no,undetermined,0,0,0,no,0.0058637905019966975,no,0.007671239505974617,no,0.008466251443134109,no,0.00806520315701301,no,0.007999515642520817,no,0.007271197976173086
1548,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//readResolveObject,no,undetermined,0,0,0,no,0.0036523008980329486,no,0.005504726900042388,no,0.006461868463342029,no,0.00788716525811375,no,0.0079850989855144,no,0.007268429553841039
1549,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//cfg.setProperty(""hibernate.show_sql"", ""true"");",no,undetermined,0,0,0,no,0.0031802950834625026,no,0.00623735443276861,no,0.006233167890634358,no,0.006905800797479589,no,0.006673264294170446,no,0.0060715391092594296
1550,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Defensive, convenience methods",no,undetermined,0,0,0,no,0.002095428905019437,no,0.0026043450676920725,no,0.0025759767163808776,no,0.0026605612525663035,no,0.0026696300843537337,no,0.002395044418926736
1551,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Make sure you log the exception, as it might be swallowed",no,undetermined,0,0,0,no,0.02971574585707915,no,0.010955877827661168,no,0.00911082991069859,no,0.008046675765221141,no,0.008007515014205156,no,0.007280128927179609
1552,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Begin unit of work,no,undetermined,0,0,0,no,0.012459053792100166,no,0.009704111836173644,no,0.008518236974649176,no,0.007782597869025733,no,0.007720619304573644,no,0.007070518333398066
1553,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Write HTML header,no,undetermined,0,0,0,no,0.0013097755501682727,no,0.0018050561753169094,no,0.0015675671147724842,no,0.0014063909105695037,no,0.0013284768160898785,no,0.001175305249388183
1554,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Handle actions,no,undetermined,0,0,0,no,0.0033425922559252924,no,0.0036799438989652614,no,0.00346483089420557,no,0.0029811248880432517,no,0.0030166612634388197,no,0.0027253638999643706
1555,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Start the session to be used for this request,no,undetermined,0,0,0,no,0.0076572273624295984,no,0.004636726206054343,no,0.0037776048545228326,no,0.0033540266718655952,no,0.0034263233679283586,no,0.0030959697057190046
1556,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// cleanup code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.07553183923956645,no,0.010954028795839165,no,0.009108824955922048,no,0.00805917000304674,no,0.00798272613888819,no,0.0072706781487490105
1557,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// make the session available to the session factory's ""current context""",no,undetermined,0,0,0,no,0.007287303331231665,no,0.006811825138520242,no,0.0056672830299746265,no,0.005444370450561111,no,0.005432033468496902,no,0.00490177288861946
1558,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// remove session from ""current context""",no,undetermined,0,0,0,no,0.0070197874879604095,no,0.004974281842149969,no,0.0040669968719364655,no,0.0036169030374773943,no,0.0035442460542700963,no,0.0031627940151577718
1559,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Eager fetch the collection so we can use it detached,no,undetermined,0,0,0,no,0.008186813353213364,no,0.0049272852965160235,no,0.0034616079986608847,no,0.002897025559285906,no,0.002897496919946462,no,0.002624319125657237
1560,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*
        Event anEvent = (Event) session
                .createCriteria(Event.class).setFetchMode(""participants"", FetchMode.JOIN)
                .add( Expression.eq(""id"", eventId) )
                .uniqueResult(); // Eager fetch the colleciton so we can use it detached
        */",no,undetermined,0,0,0,no,0.018435217105434172,no,0.00866566225703346,no,0.007120359364626016,no,0.006393658439612775,no,0.006400786868286287,no,0.005843063384232853
1561,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// End of first unit of work,no,undetermined,0,0,0,no,0.00774749216673337,no,0.005372708471445266,no,0.004186542745075051,no,0.0035854667676600157,no,0.00352910442022908,no,0.003159974047946027
1562,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// or bidirectional safety method, setting both sides: aPerson.addToEvent(anEvent);",no,undetermined,0,0,0,no,0.0012382041692000256,no,0.0011745085786466272,no,0.0011097093553321456,no,0.0010767074082903463,no,0.0010857299956448295,no,0.0009566349887953862
1563,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Begin second unit of work,no,undetermined,0,0,0,no,0.013539334567817026,no,0.01097433943980524,no,0.009086863068485154,no,0.008049015423713007,no,0.0079806700440239,no,0.007265603569959977
1564,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Reattachment of aPerson,no,undetermined,0,0,0,no,0.0010543481988924265,no,0.001085057185584674,no,0.0007989479275439216,no,0.0006374206414208464,no,0.0006145572734326661,no,0.0005336544606686704
1565,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The getEmailAddresses() might trigger a lazy load of the collection,no,undetermined,0,0,0,no,0.06463632209551712,no,0.010969639652365379,no,0.009107583464211042,no,0.008037095747175963,no,0.007979096069353625,no,0.0072772833473165955
1566,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// We need our tm, so get it now and avoid doing other work // if there is a problem",no,undetermined,0,0,0,no,0.04752817067503837,no,0.010994867539076575,no,0.009084951930377243,no,0.008056693578050082,no,0.008000515628171518,no,0.007279201346372643
1567,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Don't hold the JBC node lock throughout the tx, as that // prevents reads and other updates",no,undetermined,0,0,0,no,0.009316762005579706,no,0.006912280640781701,no,0.005665188279949141,no,0.005535528886228239,no,0.005843338205909884,no,0.00533239630690366
1568,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// JBC put a version in the node when it created as part of // some internal operation. We are always newer, but if // the JBC version is > 1 something odd has happened",no,undetermined,0,0,0,no,0.015396730317186259,no,0.010986543635399477,no,0.009103054846200768,no,0.008050772102011034,no,0.007985473284273053,no,0.00727650536583722
1569,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Not null if the Isolation level has been specified in the configuration file. // Otherwise, it is left to the Driver's default value.",no,undetermined,0,0,0,no,0.0036974250658695085,no,0.003424953631413312,no,0.002311137039163409,no,0.0019119071141445137,no,0.001902691800742102,no,0.0016910502808898174
1570,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Configured outside of Hibernate (i.e. Servlet container, or Java Bean Container // already has Proxool pools running, and this provider is to just borrow one of these",no,undetermined,0,0,0,no,0.02651253736559719,no,0.01098219179841652,no,0.009098778821784486,no,0.008060514799945412,no,0.00800242960268038,no,0.00726264845046401
1571,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// loading collection xrefs ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0037120908363510235,no,0.003852199686110934,no,0.0019718351539661184,no,0.0011355365100269388,no,0.0011224981254558638,no,0.0009872712508482001
1572,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Collection load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.009424937702599707,no,0.007423766888296229,no,0.006130362594640677,no,0.006639043400464023,no,0.0064830976783958084,no,0.005944641059557238
1573,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*package*/,no,undetermined,0,0,0,no,0.004437760287425697,no,0.004876701033127142,no,0.004453796219161608,no,0.004528643871969353,no,0.004494747150569872,no,0.004042588878453024
1574,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the cache of the actual plans...,no,undetermined,0,0,0,no,0.002973167040908965,no,0.003527397493040036,no,0.0030744144414580456,no,0.002865652850972715,no,0.0022189753019114656,no,0.0020485576221190155
1575,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// (AS is always optional, for consistency with SQL/OQL)",no,undetermined,0,0,0,no,0.005571158343962022,no,0.005035691411667356,no,0.003928940423302501,no,0.003547407492306487,no,0.0035251929001919096,no,0.0031632147955950865
1576,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*package*/,no,undetermined,0,0,0,no,0.004437760287425697,no,0.004876701033127142,no,0.004453796219161608,no,0.004528643871969353,no,0.004494747150569872,no,0.004042588878453024
1577,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// assumes that types are all of span 1,no,undetermined,0,0,0,no,0.0016209141483524952,no,0.0013810016757959992,no,0.0011776894481111827,no,0.001051407394061895,no,0.0010810009113364802,no,0.0009488447430746807
1578,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// process the ""new"" HQL style where aliases are assigned // _after_ the class name or path expression ie. using // the AS construction",no,undetermined,0,0,0,no,0.0037933260599135113,no,0.002045918567285262,no,0.0016141302285988743,no,0.0012865634516641023,no,0.001320982558345929,no,0.0011664785235911655
1579,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// is a primitive type // invokespecial,no,undetermined,0,0,0,no,0.0020023344837528543,no,0.0020421145665695446,no,0.0017346507451148064,no,0.0015311261207276126,no,0.0015096920441807142,no,0.0013311104500604457
1580,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Start performing the updates,no,undetermined,0,0,0,no,0.0018678963511202758,no,0.0017200407096996406,no,0.0015528790438994857,no,0.0015975285514499113,no,0.0016104543991226367,no,0.0014293549869276966
1581,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// array of primitive type // do nothing,no,undetermined,0,0,0,no,0.0022176307456256454,no,0.0025529468714320237,no,0.0015977423880921204,no,0.0013423245951509244,no,0.001344805967505863,no,0.001185378723832375
1582,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// jdbc params are 1-based,no,undetermined,0,0,0,no,0.004915476797116962,no,0.004789609300969971,no,0.00648236408249155,no,0.0074113089434204495,no,0.007407177721766071,no,0.006816675374168043
1583,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// don't care...,no,undetermined,0,0,0,no,0.0024873308700254695,no,0.0020976536597373838,no,0.0019499522543606547,no,0.0019156508108624753,no,0.0019143290982982064,no,0.0016981355595435948
1584,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// on the inverse, it makes sense that if a ThreadLocalSessionContext- // bound session then gets deserialized to go ahead and re-bind it to // the ThreadLocalSessionContext session map.",no,undetermined,0,0,0,no,0.01871360709321037,no,0.010991994036328508,no,0.00911051047325034,no,0.008062421847766949,no,0.00798789549894526,no,0.007275632142892467
1585,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Recognition code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.008073897874172797,no,0.0068022605766028645,no,0.0061314245480043935,no,0.006071041079113839,no,0.00598565180320844,no,0.005434812537139625
1586,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// handle a path expression or class name that // appears at the start, in the ""new"" HQL // style or an alias that appears at the start // in the ""old"" HQL style",no,undetermined,0,0,0,no,0.04390956358391912,no,0.010973418923524953,no,0.009095855210066327,no,0.00805467791822031,no,0.007990845715292573,no,0.007284213311347695
1587,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//important: reuse the same event instances for performance!,no,undetermined,0,0,0,no,0.02472911621802969,no,0.010966373124412142,no,0.009089985096090486,no,0.008066041177752463,no,0.007985002304753,no,0.007281921504676856
1588,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// don't care...,no,undetermined,0,0,0,no,0.0024873308700254695,no,0.0020976536597373838,no,0.0019499522543606547,no,0.0019156508108624753,no,0.0019143290982982064,no,0.0016981355595435948
1589,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// don't care about other param types here, just those explicitly user-defined...",no,undetermined,0,0,0,no,0.07522449986717447,no,0.010984794825349828,no,0.009105816597675703,no,0.00805679798035845,no,0.007996078580014178,no,0.007274077482568809
1590,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//handle <=, >=, !=, is not, not between, not in",no,undetermined,0,0,0,no,0.03443570584241061,no,0.010980988154128374,no,0.009088935414223304,no,0.008052087432425484,no,0.007979898407963234,no,0.007281231915746573
1591,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// jdbc params are 1-based,no,undetermined,0,0,0,no,0.004915476797116962,no,0.004789609300969971,no,0.00648236408249155,no,0.0074113089434204495,no,0.007407177721766071,no,0.006816675374168043
1592,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// named parameter,no,undetermined,0,0,0,no,0.021928320936397475,no,0.010994942425099243,no,0.009115421341042547,no,0.008042408897523279,no,0.008000982022934233,no,0.007286550508459083
1593,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// could be either an ordinal or JPA-positional parameter,no,undetermined,0,0,0,no,0.01784280481428296,no,0.010975375929517084,no,0.009098365582672118,no,0.008060646910392533,no,0.008003248902372678,no,0.0072934805736247455
1594,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// strip the "" where """,no,undetermined,0,0,0,no,0.00400563609655358,no,0.0033385324395984652,no,0.0027968208190480093,no,0.0026217617020271237,no,0.002908059553766588,no,0.00260341179304665
1595,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// a peek ahead showed this as an JPA-positional parameter,no,undetermined,0,0,0,no,0.004940723902961495,no,0.0038191990850073823,no,0.003348364126538911,no,0.0029774100742683872,no,0.002924910096507225,no,0.0025973025582532393
1596,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// make sure this ""name"" is an integral",no,undetermined,0,0,0,no,0.021290051384586367,no,0.010968735605847355,no,0.009116064821668804,no,0.008059736161780033,no,0.007997708318865558,no,0.00727442967269743
1597,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// at the very least cleanup the data :),no,undetermined,0,0,0,no,0.09556897924940823,no,0.010982141117936554,no,0.009112407040758835,no,0.008073355335585593,no,0.008001494403342685,no,0.00727789576897809
1598,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//60 seconds,no,undetermined,0,0,0,no,0.0051382502110223546,no,0.006783377809153082,no,0.0070706438197657645,no,0.00778326732777689,no,0.007851590057064753,no,0.0071428059517003595
1599,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//cannot be instantiated,no,undetermined,0,0,0,no,0.0013724238497063463,no,0.0015677280626347028,no,0.0013569143671634642,no,0.0010202913174835848,no,0.0010191108885975115,no,0.0009097768358789406
1600,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// transfer an explicitly defined entity name // handle the lazy attribute,no,undetermined,0,0,0,no,0.01688132005515484,no,0.010228588808651835,no,0.009110418271360641,no,0.008042267680731949,no,0.007997232485423727,no,0.007268790219758785
1601,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//keep the behavior consistent even for boundary usages,no,undetermined,0,0,0,no,0.0062847956526808435,no,0.007844010186401006,no,0.009101516281463889,no,0.00807250099006585,no,0.007994477798919623,no,0.00728496900089511
1602,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//keep the behavior consistent even for boundary usages,no,undetermined,0,0,0,no,0.0062847956526808435,no,0.007844010186401006,no,0.009101516281463889,no,0.00807250099006585,no,0.007994477798919623,no,0.00728496900089511
1603,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// perform the actual work,no,undetermined,0,0,0,no,0.02961738080766039,no,0.010958357456735056,no,0.009099377852175594,no,0.008068432007403106,no,0.00800821611368092,no,0.0072814188061304545
1604,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ignore,no,undetermined,0,0,0,no,9.704158853977813e-05,no,0.0001028234778214713,no,8.618023972266878e-05,no,7.500503008764863e-05,no,7.548377628387645e-05,no,6.317234672920366e-05
1605,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//do the failfast put outside the scope of the JTA txn,no,undetermined,0,0,0,no,0.004974639573983897,no,0.004075957218435584,no,0.0032534128728377402,no,0.003050589844212067,no,0.002934812650091311,no,0.0026091489409728608
1606,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// get meta's from // <joined-subclass>,no,undetermined,0,0,0,no,0.009888983016123542,no,0.006971511837454069,no,0.006231239170299659,no,0.005821736051784478,no,0.0061764964055906965,no,0.005602186856816074
1607,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//ignore!,no,undetermined,0,0,0,no,9.704158853977813e-05,no,0.0001028234778214713,no,8.618023972266878e-05,no,7.500503008764863e-05,no,7.548377628387645e-05,no,6.317234672920366e-05
1608,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// parameters on the property mapping should // override parameters in the typedef,no,undetermined,0,0,0,no,0.006240830650538504,no,0.008072683321032614,no,0.007048627686819137,no,0.006414975351666094,no,0.007569383926511129,no,0.006882376970094647
1609,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//NOTE SPECIAL CASE: // default to join and non-lazy for the ""second join"" // of the many-to-many",no,undetermined,0,0,0,no,0.012057311988621082,no,0.0036083496842220755,no,0.0025718048680523076,no,0.0030845149079397785,no,0.0030160458139135283,no,0.0026996512660380557
1610,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// create the node initially with the param name so that it shows // appropriately in the ""original text"" attribute",no,undetermined,0,0,0,no,0.03584380244114484,no,0.010973384386039117,no,0.009077019013094706,no,0.008045041415804421,no,0.007993673269459357,no,0.007263545103395388
1611,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// DYNAMIC INSERT,no,undetermined,0,0,0,no,0.0008334568377994353,no,0.0016738167251514882,no,0.0015346796936390656,no,0.0015865968400594075,no,0.0015982172981094966,no,0.0014151350527162548
1612,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// so we ""clock over"" on the first invocation",no,undetermined,0,0,0,no,0.0014038433946804345,no,0.0014768237205386174,no,0.0011218966164997135,no,0.0010547477588096028,no,0.0010530959249876576,no,0.0009298273002909781
1613,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// state ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0002664242024359563,no,0.0003048734933510659,no,0.0002854344683229232,no,0.0002857210729732322,no,0.0002893437606923378,no,0.0002495522288239559
1614,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// finally handle the exception,no,undetermined,0,0,0,no,0.0023877184637804997,no,0.0022451076695721847,no,0.0019429584545320384,no,0.0016921875775328693,no,0.0017215288643444924,no,0.0015482078945492318
1615,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// a ""detached"" collection that belonged to a different entity",no,undetermined,0,0,0,no,0.011202069952150718,no,0.006956094834875121,no,0.005691946351143982,no,0.005079773490516958,no,0.00514186897787799,no,0.004648421603811901
1616,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	void setComponentTuplizerFactory(ComponentTuplizerFactory componentTuplizerFactory) { //		this.componentTuplizerFactory = componentTuplizerFactory; //	},no,undetermined,0,0,0,no,0.006845757203114514,no,0.007885450395039574,no,0.006630158448806732,no,0.006768760486074527,no,0.006712827129260225,no,0.0060944098988552995
1617,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//element //index -> id,no,undetermined,0,0,0,no,0.0021496088975657248,no,0.002952212302886133,no,0.0025100303723531153,no,0.0022418419024629503,no,0.0023743813777282368,no,0.0020890897676510813
1618,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// note that it might be better to iterate the snapshot but this is safe, // assuming the user implements equals() properly, as required by the Set // contract!",no,undetermined,0,0,0,no,0.15045729065606606,no,0.07980710125322925,no,0.009098618605892181,no,0.008042897325940716,no,0.007980606326363373,no,0.007272501221606857
1619,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// collections detect changes made via their public interface and mark // themselves as dirty as a performance optimization,no,undetermined,0,0,0,no,0.03404842162996717,no,0.01098600941937913,no,0.009115016739217684,no,0.008054893472322836,no,0.00799261276352679,no,0.007264942766138529
1620,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//saveOrUpdateCopy() is deprecated!,no,undetermined,0,0,0,no,0.04543452124166836,no,0.010971691584032706,no,0.009084833224513941,no,0.008044268310737837,no,0.007999743232744685,no,0.007281057021068472
1621,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Set it!,no,undetermined,0,0,0,no,0.0007341477487380733,no,0.001175413799656692,no,0.0009537811584483391,no,0.0007967074325404757,no,0.0007960491696597161,no,0.000682549135550976
1622,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// collectionPersister should not be null, but we don't want to throw // an exception if it is null",no,undetermined,0,0,0,no,0.07835784440537649,no,0.010984942545557284,no,0.009108039068338748,no,0.008068177128084098,no,0.00799128941096558,no,0.00726428570656763
1623,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Case 1: Multi token keywords GROUP BY and ORDER BY // The next token ( LT(2) ) should be 'by'... otherwise, this is just an ident.",no,undetermined,0,0,0,no,0.012876559680367538,no,0.007402090094684683,no,0.0046732177309079664,no,0.0034982893090635897,no,0.003593939185947548,no,0.003225877210523562
1624,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The default SQLExceptionConverter for all dialects is based on SQLState // since SQLErrorCode is extremely vendor-specific.  Specific Dialects // may override to return whatever is most appropriate for that vendor.,no,undetermined,0,0,0,no,0.013793297067040616,no,0.01098813846208708,no,0.0090971034887164,no,0.00804068737342565,no,0.007994531520807858,no,0.007262380626658759
1625,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//only necessary for postgre < 7.4 //http://anoncvs.postgresql.org/cvsweb.cgi/pgsql/doc/src/sgml/ref/create_sequence.sgml,no,undetermined,0,0,0,no,0.019369904886648748,no,0.01096950669172472,no,0.009099937441384702,no,0.00805795775737672,no,0.007995807920877082,no,0.0072784985072279
1626,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// otherwise a null or brand new collection // this will also (inefficiently) handle arrays, which // have no snapshot, so we can't do any better //processArrayOrNewCollection(collection, type);",no,undetermined,0,0,0,no,0.12647205793846794,no,0.08589151392205557,no,0.009099055618493588,no,0.008067411537177957,no,0.008001245142780281,no,0.00728646291262638
1627,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// a ""detached"" collection that originally belonged to the same entity",no,undetermined,0,0,0,no,0.006105284841454367,no,0.004447709923656672,no,0.0040551357214421045,no,0.0033950300610188443,no,0.0033940970890072118,no,0.003050179368511897
1628,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// add the comment // nest the main query in an outer select // add the rownnumber bit into the outer query select list,no,undetermined,0,0,0,no,0.0027093057227217873,no,0.005622375648383036,no,0.004572431381625405,no,0.003090860717532208,no,0.0030030866311294415,no,0.002720672642122964
1629,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		 You may still have other ResultSets or update counts left to process here  //		 but you can't do it now or the ResultSet you just got will be closed ,no,undetermined,0,0,0,no,0.029444279503865575,no,0.010981441794164782,no,0.009100010918001528,no,0.008058553772209305,no,0.008000697812299224,no,0.007283397201379873
1630,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Note: For object <-> SQL datatype mappings see: //	 Configuration Manager | Advanced | SQL | System DDL Datatype Mappings // //	TBD	registerColumnType(Types.BINARY,        ""binary($1)""); // changed 08-11-2005, jsl",no,undetermined,0,0,0,no,0.006728974044623061,no,0.01097575385328885,no,0.009097768143103454,no,0.008058571973403731,no,0.007982599431520385,no,0.007272652824628196
1631,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// See if the second lookahed token can be an identifier.,no,undetermined,0,0,0,no,0.00199135011064327,no,0.001717497788480199,no,0.0013150508997264027,no,0.0011076324175603057,no,0.001074183101863943,no,0.0009202310726963295
1632,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Case 2: The current token is after FROM and before '.'.,no,undetermined,0,0,0,no,0.0010142313630009652,no,0.00075684661029645,no,0.0006128795024777274,no,0.0004918005606113691,no,0.0005131612515606093,no,0.00044700049746390045
1633,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//do nothing,no,undetermined,0,0,0,no,0.0026603375353391992,no,0.003094147110700841,no,0.002527109803647395,no,0.002256606520692637,no,0.0022264173318832198,no,0.0019676410969491197
1634,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// TRIM(end_keyword string-expression-1 FROM string-expression-2) // use Hibernate implementation ""From"" is one of the parameters they pass in position ?3 //registerFunction( ""trim"", new SQLFunctionTemplate(Hibernate.STRING, ""trim(?1 ?2 from ?3)"") );",no,undetermined,0,0,0,no,0.012502845082517845,no,0.0064743388907809955,no,0.004448945532394498,no,0.0032623780218291425,no,0.0031713369108484443,no,0.0028294666814224286
1635,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Whether this dialect has an Identity clause added to the data type or a completely seperate identity // data type,no,undetermined,0,0,0,no,0.01655130009408293,no,0.010968982357465244,no,0.009094250569333315,no,0.008054092141431227,no,0.007985662855505678,no,0.007288011997757517
1636,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// (EQ NULL b) => (IS_NULL b),no,undetermined,0,0,0,no,0.0076003713845164775,no,0.007765403062539924,no,0.007155276107802688,no,0.006922119146920343,no,0.006867729273781033,no,0.006074381279877911
1637,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Create nodes that track line and column number.,no,undetermined,0,0,0,no,0.0010494755152030755,no,0.0010381715056303178,no,0.0007883630643310399,no,0.0006580669730971753,no,0.0006321274618545878,no,0.0005503591091099971
1638,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//do nothing,no,undetermined,0,0,0,no,0.0026603375353391992,no,0.003094147110700841,no,0.002527109803647395,no,0.002256606520692637,no,0.0022264173318832198,no,0.0019676410969491197
1639,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Add NOT if it's negated.,no,undetermined,0,0,0,no,0.004440301325353499,no,0.0050638482410053495,no,0.004671109597164171,no,0.004593701329794736,no,0.004629488666662913,no,0.004255958672064585
1640,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// (EQ a NULL) => (IS_NULL a),no,undetermined,0,0,0,no,0.0076003713845164775,no,0.007765403062539924,no,0.007155276107802688,no,0.006922119146920343,no,0.006867729273781033,no,0.006074381279877911
1641,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// The path AST should be a DotNode, and it should have been evaluated already.",no,undetermined,0,0,0,no,0.07568196120998608,no,0.010975334921795081,no,0.009104001152557021,no,0.008055646805567801,no,0.00798478372525074,no,0.007286270399470983
1642,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Force a substitution!,no,undetermined,0,0,0,no,0.00182534498012379,no,0.002148060643599531,no,0.002185370313889863,no,0.002208521152150408,no,0.0022368654051606947,no,0.001986830933752561
1643,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if // if // Otherwise, handle the error normally.",no,undetermined,0,0,0,no,0.0021637467808639558,no,0.002010042320665362,no,0.0009594839503637556,no,0.000782112405771298,no,0.0008270645663582967,no,0.000736870902986129
1644,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// the database now holds a lock + the object is flushed from the cache, // so release the soft lock",no,undetermined,0,0,0,no,0.003953048306384849,no,0.006019091922254788,no,0.004601429843069576,no,0.004805388255317824,no,0.004849878762251137,no,0.004387492828441618
1645,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// now update the object .. has to be outside the main if block above (because of collections),no,undetermined,0,0,0,no,0.004565048893937834,no,0.0052360574519913165,no,0.004064245968206646,no,0.0035818813965633398,no,0.003370411867828563,no,0.0031099545332982106
1646,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Named Queries:,no,undetermined,0,0,0,no,0.004977730473812884,no,0.0027213219119085466,no,0.002345621768459324,no,0.0022411016689846703,no,0.0022505898453527864,no,0.002020467151662971
1647,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this is a situation where the entity id is assigned by a post-insert generator // and was saved outside the transaction forcing it to be delayed,no,undetermined,0,0,0,no,0.04832396958178625,no,0.010978341449468616,no,0.009087303277655319,no,0.008058341709937628,no,0.007988524972754806,no,0.007272726719812976
1648,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//grab its state saved at deletion,no,undetermined,0,0,0,no,0.0032496313360652882,no,0.003652625487553786,no,0.003599576023282371,no,0.0036934911468012145,no,0.0037082599712450373,no,0.003350412073488177
1649,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// grab its current state,no,undetermined,0,0,0,no,0.0008298919045957638,no,0.0008105287512121978,no,0.0007710204882630977,no,0.000789920348322014,no,0.0007957411182849496,no,0.0006991149069081505
1650,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this will throw an error if there's something wrong.,no,undetermined,0,0,0,no,0.22201402125768718,no,0.13372257645391275,no,0.11880104020799169,no,0.10888648714315236,no,0.10798106581145948,no,0.10410053998516798
1651,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// collection deletions are a special case since update() can add // deletions of collections not loaded by the session.,no,undetermined,0,0,0,no,0.005603127331815602,no,0.002894102170302309,no,0.0017287245403758923,no,0.0013809342828449752,no,0.0013202711393001856,no,0.001166961975405295
1652,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if the natural-id is marked as non-mutable, it is not retrieved during a // normal database-snapshot operation...",no,undetermined,0,0,0,no,0.002778158478310648,no,0.0022539130208934772,no,0.002303491641081072,no,0.0021520452676852615,no,0.0023290561956924726,no,0.0021059205258362064
1653,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// watch out for a case where old is still referenced // somewhere in the object graph! (which is a user error),no,undetermined,0,0,0,no,0.05824018214426504,no,0.010965135717568707,no,0.009091247310918347,no,0.008042028909399859,no,0.008003819512053575,no,0.007261498143180973
1654,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//slice, to get the columns for this component //property",no,undetermined,0,0,0,no,0.019451347839129773,no,0.010985296163525176,no,0.009095474516656337,no,0.008057513794781406,no,0.007987485636817207,no,0.007280682917753279
1655,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// schedule the update // note that we intentionally do _not_ pass in currentPersistentState!,no,undetermined,0,0,0,no,0.02045459529609586,no,0.010988338835134316,no,0.00910955922565347,no,0.008053164983615304,no,0.007999343893608507,no,0.0072698026590135795
1656,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// substitutes into values by side-effect,no,undetermined,0,0,0,no,0.005408959730189995,no,0.010963886446179693,no,0.009085281947553783,no,0.008047018119629634,no,0.008005552319797831,no,0.007274329445548053
1657,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// give the Interceptor a chance to process property values, if the properties // were modified by the Interceptor, we need to set them back to the object",no,undetermined,0,0,0,no,0.0069026882383382,no,0.007146334045689019,no,0.005475216616020311,no,0.00529396279131616,no,0.004991479389770371,no,0.004475399602533592
1658,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// (NOT (EQ a b) ) => (NE a b),no,undetermined,0,0,0,no,0.012048185297854352,no,0.010974657230339526,no,0.009098402215841683,no,0.008049199873995,no,0.007989953506569829,no,0.007276567132332895
1659,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// compare to cached state (ignoring collections unless versioned),no,undetermined,0,0,0,no,0.005000097338418623,no,0.0030620198124217527,no,0.0025083981122367618,no,0.002378877163202324,no,0.0023368791875466827,no,0.002094534327876952
1660,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// if it was dirtied by a collection only,no,undetermined,0,0,0,no,0.0035762801190007787,no,0.0035742798428960417,no,0.00284534320741206,no,0.0022650924217687855,no,0.0022313932706970133,no,0.002172747640751177
1661,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// check nullability but do not perform command execute // we'll use scheduled updates for that.,no,undetermined,0,0,0,no,0.014927489404228124,no,0.010978928782436607,no,0.00909876175269666,no,0.008047341921205712,no,0.007974122712447993,no,0.007272961890407369
1662,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This 'dot' expression now refers to the resulting from element.,no,undetermined,0,0,0,no,0.021437934954882047,no,0.01099756939032,no,0.009096764744566806,no,0.008058919559114388,no,0.007986197669139702,no,0.007277678004150399
1663,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// (NOT (LIKE a b) ) => (NOT_LIKE a b),no,undetermined,0,0,0,no,0.01529544015242557,no,0.010966307296543753,no,0.009105236482810152,no,0.008047480553866693,no,0.007984391356300904,no,0.007280828159360883
1664,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The CollectionEntry.isReached() stuff is just to detect any silly users   // who set up circular or shared references between/to collections.,no,undetermined,0,0,0,no,0.04240692420256405,no,0.010987283014961753,no,0.009093910039979843,no,0.008063092067973199,no,0.007999216235180271,no,0.007280133567241861
1665,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// detached collection wrappers that get found + reattached // during flush shouldn't be ignored,no,undetermined,0,0,0,no,0.008354056108377337,no,0.005731524400070961,no,0.004900330990957093,no,0.004211529014359723,no,0.004425044738888509,no,0.004030181400839382
1666,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// (NOT (IS_NOT_NULL a b) ) => (IS_NULL a b),no,undetermined,0,0,0,no,0.011075393539251133,no,0.010965346850433027,no,0.009088460443688988,no,0.008051438740420615,no,0.00797742484721804,no,0.007268000970694658
1667,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// The unique property value represented here may or may not be // serializable, so we do an explicit check here in order to generate // a better error message",no,undetermined,0,0,0,no,0.09630822371449946,no,0.010990221464593112,no,0.00909041610734971,no,0.00803973998271307,no,0.007998951728945295,no,0.007281791153227602
1668,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if the version of a newly instantiated object is not the same // as the version seed value, use that as the unsaved-value",no,undetermined,0,0,0,no,0.00749725745134356,no,0.0057652262421837575,no,0.004342976126108016,no,0.003584801922646064,no,0.003218390272732411,no,0.002892142464079828
1669,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ie. we never have to null out a reference to // an uninitialized proxy,no,undetermined,0,0,0,no,0.007580950181569219,no,0.006418445792306104,no,0.005603166402935638,no,0.004804334402224793,no,0.004760828727731155,no,0.004211679204434629
1670,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// (NOT (NOT_LIKE a b) ) => (LIKE a b),no,undetermined,0,0,0,no,0.01529544015242557,no,0.010966307296543753,no,0.009105236482810152,no,0.008047480553866693,no,0.007984391356300904,no,0.007280828159360883
1671,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//give the Interceptor a chance to modify property values,no,undetermined,0,0,0,no,0.008616131003188287,no,0.010965428836451591,no,0.009085835237648512,no,0.00804289626316692,no,0.007993384515104552,no,0.007275919000997478
1672,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//now we might need to recalculate the dirtyProperties array,no,undetermined,0,0,0,no,0.05108861280374118,no,0.011001293517414301,no,0.009097453703794408,no,0.00806658460516035,no,0.007982452915231183,no,0.00728210987934968
1673,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//use the current version,no,undetermined,0,0,0,no,0.004063695139839789,no,0.004127463091573082,no,0.0035109925620765642,no,0.0031187379081025622,no,0.003128068928998944,no,0.0027988493266253786
1674,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// object loaded by update(),no,undetermined,0,0,0,no,0.002607679671088858,no,0.002236769589816084,no,0.0017867041530752691,no,0.0015833644172786147,no,0.0015470357715215613,no,0.001374378282622852
1675,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// ignore this row, the collection is in process of // being loaded somewhere further ""up"" the stack",no,undetermined,0,0,0,no,0.00801989202011318,no,0.0051291102287670505,no,0.003673369291815659,no,0.0032764215968179994,no,0.0032958916377969828,no,0.002967401796959749
1676,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Entity load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // 	* currently, not yet used...",no,undetermined,0,0,0,no,0.25570304286575424,no,0.18219777002008664,no,0.18480110857671025,no,0.19453601753337305,no,0.18851009069055025,no,0.18419509517025373
1677,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// dirty check against the usual snapshot of the entity,no,undetermined,0,0,0,no,0.004859455723733596,no,0.0034397016227362912,no,0.0034046021873136278,no,0.0029333379395068433,no,0.0028818016253053637,no,0.002575178892274817
1678,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// this implementation is supposed to tolerate incorrect unsaved-value // mappings, for the purpose of backward-compatibility",no,undetermined,0,0,0,no,0.06604464342311277,no,0.010989279771264737,no,0.009101482004985091,no,0.008043704180542014,no,0.007986368916012657,no,0.007274976311597197
1679,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// this implementation is supposed to tolerate incorrect unsaved-value // mappings, for the purpose of backward-compatibility",no,undetermined,0,0,0,no,0.06604464342311277,no,0.010989279771264737,no,0.009101482004985091,no,0.008043704180542014,no,0.007986368916012657,no,0.007274976311597197
1680,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// wrap up any new collections directly referenced by the object // or its components,no,undetermined,0,0,0,no,0.0031449376471234945,no,0.0030130814438719526,no,0.00328903859541165,no,0.0032151068174098942,no,0.0036375640027261386,no,0.003041636012520448
1681,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// skip this check for composite-ids relating to dom4j entity-mode; // alternatively, we could add a check to make sure the incoming id value is // an instance of Element...",no,undetermined,0,0,0,no,0.18259521982127888,no,0.08081460934882395,no,0.009103104689864432,no,0.008055431519687408,no,0.007987471251384212,no,0.007271639073903014
1682,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// upgrade the lock if necessary: //lock(result, lockMode);",no,undetermined,0,0,0,no,0.0025128470106795006,no,0.003966387107692604,no,0.003482257193911974,no,0.003745288377299862,no,0.0037555227309388163,no,0.0033888842381132895
1683,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// now, any collections that are initialized // inside this block do not get updated - they // are ignored until the next flush",no,undetermined,0,0,0,no,0.03441403751663182,no,0.010977895549330634,no,0.009117102396819116,no,0.008042427551703125,no,0.007998025379885374,no,0.007284382599186735
1684,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// (NOT (NE a b) ) => (EQ a b),no,undetermined,0,0,0,no,0.012048185297854352,no,0.010974657230339526,no,0.009098402215841683,no,0.008049199873995,no,0.007989953506569829,no,0.007276567132332895
1685,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//we must clone embedded composite identifiers, or  //we will get back the same instance that we pass in",no,undetermined,0,0,0,no,0.0059565910766732795,no,0.004369286793652386,no,0.0032334992862944503,no,0.002738950662371927,no,0.0026103303854949408,no,0.0023187406453919527
1686,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Sub-insertions should occur before containing insertion so // Try to do the callback now,no,undetermined,0,0,0,no,0.0053038967803392244,no,0.005858954192370239,no,0.0076262558812185835,no,0.007527948907948657,no,0.007359343997433722,no,0.0066803135416172305
1687,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// (NOT (LE a b) ) => (GT a b),no,undetermined,0,0,0,no,0.007305665501165481,no,0.009926287240909546,no,0.009099921009556887,no,0.008063138620740682,no,0.008000537388586183,no,0.007267891048321161
1688,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// (NOT (GE a b) ) => (LT a b),no,undetermined,0,0,0,no,0.01444602255264251,no,0.010986188916646603,no,0.00909956867425294,no,0.008057626602373028,no,0.007978704518420436,no,0.0072835233165201175
1689,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// (NOT (LT a b) ) => (GE a b),no,undetermined,0,0,0,no,0.01444602255264251,no,0.010986188916646603,no,0.00909956867425294,no,0.008057626602373028,no,0.007978704518420436,no,0.0072835233165201175
1690,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//the entity is not associated with the session, so //try interceptor and unsaved-value",no,undetermined,0,0,0,no,0.0019512464718017366,no,0.0014824217171151499,no,0.0012176256979651006,no,0.0010844428777372272,no,0.0010283364719818398,no,0.0008897490127524903
1691,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// ... and the expected token type was an identifier, then:",no,undetermined,0,0,0,no,0.0038607229741776635,no,0.0033464823739566946,no,0.0029908906129477606,no,0.002578937220468014,no,0.0025095189324608204,no,0.0022324623891777575
1692,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// igndore it...,no,undetermined,0,0,0,no,0.001363945421992482,no,0.0015884836271097096,no,0.0011984223685992065,no,0.0010008575051195766,no,0.0009917939874368915,no,0.0008604560163382829
1693,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// [jsd] The fix for HHH-558...,no,undetermined,0,0,0,no,0.03634414285855789,no,0.009110799124353626,no,0.005921466578840787,no,0.005782302869310941,no,0.005767092283851351,no,0.005202698767018055
1694,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// If the token can tell us if it could be an identifier...,no,undetermined,0,0,0,no,0.02390815008572844,no,0.010980263899576974,no,0.009088712125672395,no,0.008057425732820445,no,0.008003359263701866,no,0.007270597118224285
1695,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we are now at a new tree level,no,undetermined,0,0,0,no,0.03402919665643997,no,0.01096610189687373,no,0.009108019940539384,no,0.008067480451731425,no,0.008008320423822999,no,0.007284655629940034
1696,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// dirty check against the database snapshot, if possible/necessary",no,undetermined,0,0,0,no,0.008980352296228277,no,0.008010352586027107,no,0.009090653505441247,no,0.008060018845566373,no,0.007994305717890277,no,0.007282346585910821
1697,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the Interceptor handled the dirty checking,no,undetermined,0,0,0,no,0.09082830039357899,no,0.010970889109548174,no,0.00909706044148401,no,0.008052616909288888,no,0.007998304947219786,no,0.007271267139202755
1698,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Use the delegate.,no,undetermined,0,0,0,no,0.004744329017731912,no,0.005170868949507681,no,0.00443025232026688,no,0.003823483402822087,no,0.0037960016239915705,no,0.0034168320557206055
1699,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ( (Column) ( (SimpleValue) ic.getIndex() ).getColumnIterator().next() // ).setNullable(false);,no,undetermined,0,0,0,no,0.005363774717715062,no,0.0045353485434960795,no,0.004590334254859694,no,0.0042580320122405525,no,0.004372800288593813,no,0.0039519839925100326
1700,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//60 seconds,no,undetermined,0,0,0,no,0.0051382502110223546,no,0.006783377809153082,no,0.0070706438197657645,no,0.00778326732777689,no,0.007851590057064753,no,0.0071428059517003595
1701,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// get meta's from <subclass>,no,undetermined,0,0,0,no,0.01389283597224272,no,0.010963107357409414,no,0.00909781489296448,no,0.008063231792361993,no,0.00800632432119494,no,0.007281923651351692
1702,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// evict() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.003697584464565059,no,0.004580318408068663,no,0.004437259774740605,no,0.004552848076803018,no,0.004571026210489164,no,0.004097419766382173
1703,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//ignore!,no,undetermined,0,0,0,no,9.704158853977813e-05,no,0.0001028234778214713,no,8.618023972266878e-05,no,7.500503008764863e-05,no,7.548377628387645e-05,no,6.317234672920366e-05
1704,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// get the id from the object,no,undetermined,0,0,0,no,0.01160268155663221,no,0.010988757990891858,no,0.009110636157437492,no,0.008048380561122545,no,0.008006641562360441,no,0.007269035869841862
1705,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// do the put outside the scope of the JTA txn,no,undetermined,0,0,0,no,0.004974639573983897,no,0.004075957218435584,no,0.0032534128728377402,no,0.003050589844212067,no,0.002934812650091311,no,0.0026091489409728608
1706,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//what is the version on the database?,no,undetermined,0,0,0,no,0.015538367954956158,no,0.010985151360071771,no,0.009096550208501772,no,0.008052882913144934,no,0.007981968944607567,no,0.007271478681484945
1707,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/// HHH-2378,no,undetermined,0,0,0,no,0.0036523008980329486,no,7.237832202765995e-05,no,2.909146199857016e-05,no,2.6159453700700376e-05,no,2.646681111595322e-05,no,2.175759309899199e-05
1708,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//stops flush being called multiple times if this method is recursively called,no,undetermined,0,0,0,no,0.03472908525006059,no,0.010998363258964687,no,0.009088020452714136,no,0.008073504994265169,no,0.00799364700981626,no,0.007272133728850977
1709,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//will result in a SQL UPDATE:,no,undetermined,0,0,0,no,0.0015893847462761935,no,0.0017293964115234557,no,0.0016174408832108425,no,0.0014224492667696293,no,0.0013200605803510405,no,0.0011649716996588713
1710,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//else do nothing (don't even reassociate object!),no,undetermined,0,0,0,no,0.002348212430448666,no,0.0030790605338050793,no,0.002509161472366746,no,0.002125688037721011,no,0.0020705252562050426,no,0.0018401183036052782
1711,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// no existing row - do an insert,no,undetermined,0,0,0,no,0.00041825778019964903,no,0.000756779662075846,no,0.000606466878721772,no,0.0005195026909215275,no,0.0005351440510342685,no,0.00046303624697731203
1712,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// --- Inner classes (moved here from sql-gen.g) ---,no,undetermined,0,0,0,no,0.035879601703157966,no,0.010983556436551014,no,0.009098340448524984,no,0.008050836524262464,no,0.007997868203055473,no,0.007289525226847031
1713,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// reference type,no,undetermined,0,0,0,no,0.006647937615160143,no,0.007366552950348968,no,0.005971694067702293,no,0.005337288863955185,no,0.00538215582822155,no,0.004913871376472369
1714,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Use the delegate.,no,undetermined,0,0,0,no,0.004744329017731912,no,0.005170868949507681,no,0.00443025232026688,no,0.003823483402822087,no,0.0037960016239915705,no,0.0034168320557206055
1715,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// should be the first, but just to be safe...",no,undetermined,0,0,0,no,0.000834988002764952,no,0.0008356176234387699,no,0.0005496201577925131,no,0.00047103691182428864,no,0.0004726454163535443,no,0.00040687938306520355
1716,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//return a proxy if appropriate,no,undetermined,0,0,0,no,0.007284148186168831,no,0.006501127785323018,no,0.006315017824101713,no,0.006226553828722536,no,0.006369287494663271,no,0.005833579518253986
1717,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// some filters affecting the collection are enabled on the session, so do not do the put into the cache.",no,undetermined,0,0,0,no,0.009288720552353608,no,0.010750366637581062,no,0.007898029610495752,no,0.006687166734736675,no,0.006806590443287367,no,0.006217623720863675
1718,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Generate an explicit join for the root dot node.   The implied joins will be collected and passed up // to the root dot node.,no,undetermined,0,0,0,no,0.0017903737858512366,no,0.0010265446897983364,no,0.0008315571932519457,no,0.0009767172684536228,no,0.0010314946280789493,no,0.0009111480171575937
1719,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// A session is considered to contain an entity only if the entity has // an entry in the session's persistence context and the entry reports // that the entity has not been removed,no,undetermined,0,0,0,no,0.0037940630179477885,no,0.00224308841131659,no,0.002555859358022526,no,0.002225361163414489,no,0.002148198181198075,no,0.0019367783815496336
1720,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ... and the token could be an identifer and the error is // a mismatched token error ...,no,undetermined,0,0,0,no,0.026503674118565097,no,0.01095925176051793,no,0.009108666301768964,no,0.008057954925787755,no,0.007981560208266994,no,0.007271923755279861
1721,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If a where clause was specified in the update/delete query, use it to limit the // returned ids here...",no,undetermined,0,0,0,no,0.009611368387421163,no,0.010973793808858712,no,0.009106776377676543,no,0.008062238749512507,no,0.007999590582292916,no,0.00728772804185433
1722,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Default implementation: // If this node has a data type, and that data type is not an association, then this is scalar.",no,undetermined,0,0,0,no,0.03447899560317722,no,0.010954788782559403,no,0.00911055614397926,no,0.008069416857618127,no,0.008004999823340181,no,0.00727875509171434
1723,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Resolve the LHS fully, generate implicit joins.  Pass in the property name so that the resolver can // discover foreign key (id) properties.",no,undetermined,0,0,0,no,0.00861442824175528,no,0.006871152592593169,no,0.005544196154880339,no,0.006240557631305302,no,0.006655305649860115,no,0.005798192563445756
1724,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If the propertyType is null and there isn't a parent, just // stop now... there was a problem resolving the node anyway.",no,undetermined,0,0,0,no,0.01083138892371007,no,0.010972664264615961,no,0.009080456152458253,no,0.008061085369287216,no,0.008001552479113572,no,0.007281677646521954
1725,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//We do not look for an existing join on the same path, because //it makes sense to join twice on the same collection role",no,undetermined,0,0,0,no,0.021176047516280792,no,0.010980002797577016,no,0.0091184528353932,no,0.008062620758977823,no,0.007997140164559635,no,0.007286688110747475
1726,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// return new uninitialized proxy,no,undetermined,0,0,0,no,0.0023691621826525126,no,0.0019293260690028805,no,0.0018248750592863524,no,0.0016729608444274345,no,0.0016703176130877936,no,0.0014692910691268808
1727,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this object was already loaded,no,undetermined,0,0,0,no,0.016419832554778833,no,0.0109901109088219,no,0.009089618090601185,no,0.008039762667369168,no,0.008004346605876159,no,0.007285603766834186
1728,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Entity was found in second-level cache...,no,undetermined,0,0,0,no,0.009758066844763425,no,0.009992779043923374,no,0.008564468442880268,no,0.007800057373671602,no,0.007751062472206745,no,0.006926173980018442
1729,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// intializes result by side-effect,no,undetermined,0,0,0,no,0.003582315419820093,no,0.008239958318700865,no,0.008300280396509749,no,0.007662449466374034,no,0.007635117872996572,no,0.006927554045339324
1730,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// NOTE : ( max - 1 ) because first is zero-based while max is not...,no,undetermined,0,0,0,no,0.013717765684759901,no,0.010976376649767432,no,0.009107895148433532,no,0.008051094806069576,no,0.008001405135752237,no,0.0072942930120634755
1731,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// A shallow query is ok (although technically there should be no fetching here...),no,undetermined,0,0,0,no,0.003205983510962471,no,0.005784167679733312,no,0.005115187721201067,no,0.006965049460611441,no,0.006986095055727537,no,0.006360426465762449
1732,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Delegate to the QueryLoader...,no,undetermined,0,0,0,no,0.0045138241234983145,no,0.0037890100152468587,no,0.00323536765088054,no,0.0029420389091665434,no,0.002936357011229642,no,0.0026241384865424108
1733,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Remember the parameters for the compilation.,no,undetermined,0,0,0,no,0.003334387887773156,no,0.0033690088394972696,no,0.002873354844298661,no,0.002716328887968793,no,0.0026604877467117875,no,0.0023712676432133487
1734,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// -- Package local methods for the QueryLoader delegate --,no,undetermined,0,0,0,no,0.010706479413651103,no,0.008203527247026207,no,0.006403284425424487,no,0.005434544783197244,no,0.005221730259560212,no,0.004718879886077912
1735,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Delegate to the QueryLoader...,no,undetermined,0,0,0,no,0.0045138241234983145,no,0.0037890100152468587,no,0.00323536765088054,no,0.0029420389091665434,no,0.002936357011229642,no,0.0026241384865424108
1736,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// double,no,undetermined,0,0,0,no,0.0011478338637626111,no,0.0017045383839574962,no,0.0017231082788846713,no,0.0017784922968803215,no,0.0017843363203501634,no,0.0015650250466492182
1737,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//now done in EntityIdentityInsertAction //persister.setIdentifier( entity, id, source.getEntityMode() );",no,undetermined,0,0,0,no,0.015557684197463015,no,0.009592913103443316,no,0.008433019535261732,no,0.007176458359520303,no,0.007178847233303142,no,0.006335086365538631
1738,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// double,no,undetermined,0,0,0,no,0.0011478338637626111,no,0.0017045383839574962,no,0.0017231082788846713,no,0.0017784922968803215,no,0.0017843363203501634,no,0.0015650250466492182
1739,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Use the token as an identifier.,no,undetermined,0,0,0,no,0.0024224918849758063,no,0.0024151758631794197,no,0.0020434601744713683,no,0.0018315412499273105,no,0.0018043130355896784,no,0.0015686513172084304
1740,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//some statistics,no,undetermined,0,0,0,no,0.008688131728157154,no,0.009197718824851082,no,0.009113939879849868,no,0.00806058724171683,no,0.008000545832306088,no,0.00727367373537735
1741,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//safe from concurrent modification because of how entryList() is implemented on IdentityMap,no,undetermined,0,0,0,no,0.061182806073138356,no,0.010979695042730372,no,0.0091104855591546,no,0.008054943368740458,no,0.008003066950665463,no,0.007285398453145601
1742,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Transform the tree.,no,undetermined,0,0,0,no,0.005333604765622779,no,0.006184355099621573,no,0.005827689622116463,no,0.005757103880618989,no,0.0064859152985949275,no,0.005859164858626844
1743,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Parse the query string into an HQL AST.,no,undetermined,0,0,0,no,0.015103074704433993,no,0.008659520053055437,no,0.007389452788247594,no,0.007354223557811895,no,0.007110297696761951,no,0.006521307906276663
1744,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we do not actually propogate ANTLRExceptions as a cause, so // log it here for diagnostic purposes",no,undetermined,0,0,0,no,0.014774364437439189,no,0.010979180907676873,no,0.00909125208531335,no,0.008055894016692659,no,0.00799607802999954,no,0.007280567935549519
1745,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// So this needs to be safe from concurrent modification problems. // It is safe because of how IdentityMap implements entrySet(),no,undetermined,0,0,0,no,0.08837714316968287,no,0.010951469119018823,no,0.009097008893292631,no,0.00807337675972626,no,0.007985818073752128,no,0.007276529326765554
1746,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//only needed during compilation phase...,no,undetermined,0,0,0,no,0.0018112975212927753,no,0.003367687605797412,no,0.0035035944521421723,no,0.0032117114745161585,no,0.0035247804253444913,no,0.003169036831711818
1747,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Update the status of the object and if necessary, schedule an update",no,undetermined,0,0,0,no,0.004708338188910288,no,0.004565909009146513,no,0.003864505168438148,no,0.0034682902197014035,no,0.003347214336688615,no,0.003012203619085148
1748,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Schedule updates to collections:,no,undetermined,0,0,0,no,0.006058208112375315,no,0.003470252642962863,no,0.0030855851450964536,no,0.0031647226883462546,no,0.003178438363507955,no,0.0028701419327256212
1749,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we need to lock the collection caches before // executing entity inserts/updates in order to // account for bidi associations,no,undetermined,0,0,0,no,0.012370081029034802,no,0.007197302565705806,no,0.0053544892197126825,no,0.005193320193132807,no,0.0027333393234471076,no,0.0024741515206909317
1750,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//the database has changed now, so the subselect results need to be invalidated",no,undetermined,0,0,0,no,0.004022817924782533,no,0.00600893286294276,no,0.004830442165695586,no,0.0048640928776575035,no,0.004745221173574247,no,0.004603688566302762
1751,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if the collection is dereferenced, remove from the session cache //iter.remove(); //does not work, since the entrySet is not backed by the set",no,undetermined,0,0,0,no,0.03741474246948297,no,0.01097634991831016,no,0.009111380426350402,no,0.00806011763464818,no,0.008000200228056194,no,0.007274230487734791
1752,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// PHASE 1 : Parse the HQL into an AST.,no,undetermined,0,0,0,no,0.006896493862781932,no,0.0054877145819111715,no,0.005088435537604446,no,0.004825476584886705,no,0.004834927626011478,no,0.0043928514612554025
1753,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// key is an entity involved with the operation performed by the listener; // value is a flag indicating if the listener explicitly operates on the entity,no,undetermined,0,0,0,no,0.005745036098736082,no,0.004392890192708152,no,0.003920214583979311,no,0.0033940166660519065,no,0.0034403388703023617,no,0.003052928898539414
1754,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//get a snapshot,no,undetermined,0,0,0,no,0.0018417486528862273,no,0.0027159683386656767,no,0.00685649749448399,no,0.006423693595101072,no,0.00633736011283525,no,0.0057600907939132666
1755,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*public final Currency getCurrency(int col) throws HibernateException {
		return (Currency) get(col);
	}*/",no,undetermined,0,0,0,no,0.008374558641173148,no,0.007781714433353315,no,0.006602864694798932,no,0.005889469381169253,no,0.005847105271890349,no,0.005282534892216387
1756,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// right represents a joins originating from left...,no,undetermined,0,0,0,no,0.004028913539399771,no,0.007310834952912181,no,0.006296044590247897,no,0.005332903687671952,no,0.005345460545837278,no,0.004840071830669407
1757,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//overriden to avoid System.exit,no,undetermined,0,0,0,no,0.006343528254521876,no,0.006034546826047481,no,0.005189799882948374,no,0.00478908111925175,no,0.004744795685437245,no,0.0042894832838730815
1758,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If the query is already compiled, skip the compilation.",no,undetermined,0,0,0,no,0.001811453516555811,no,0.0008676058423199715,no,0.0006703169138155586,no,0.0006416096498705708,no,0.0006258435049509539,no,0.00054258188148643
1759,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* package-private */,no,undetermined,0,0,0,no,0.008627799417472047,no,0.009437233489304296,no,0.008067230145365329,no,0.0076519662407670995,no,0.007575999382696793,no,0.006899049368687503
1760,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* package-private */,no,undetermined,0,0,0,no,0.008627799417472047,no,0.009437233489304296,no,0.008067230145365329,no,0.0076519662407670995,no,0.007575999382696793,no,0.006899049368687503
1761,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// remember that ordinal parameters numbers are 1-based!!!,no,undetermined,0,0,0,no,0.01061922352518708,no,0.007522293307472294,no,0.00674370016889613,no,0.005909764614565602,no,0.005943791271038021,no,0.005370869059654753
1762,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//overriden to avoid System.exit,no,undetermined,0,0,0,no,0.006343528254521876,no,0.006034546826047481,no,0.005189799882948374,no,0.00478908111925175,no,0.004744795685437245,no,0.0042894832838730815
1763,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// all clear,no,undetermined,0,0,0,no,0.001823925432839035,no,0.0016309763926263105,no,0.0014167979026423222,no,0.0013903210577442396,no,0.0013926021404869896,no,0.0012524781200298257
1764,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Ignore the token class name parameter, and use a specific token class.",no,undetermined,0,0,0,no,0.0024401948395977404,no,0.0024073782667832096,no,0.0018665547627705246,no,0.001527901948783701,no,0.0015251650849750042,no,0.0013420222464158762
1765,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//this is a query and we are loading multiple instances of the same collection role,no,undetermined,0,0,0,no,0.1598315462261058,no,0.13470757974203332,no,0.11110340407177409,no,0.03263036376641377,no,0.008008709777242298,no,0.007274622105150224
1766,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// EARLY EXIT!!!,no,undetermined,0,0,0,no,0.0012308318987046829,no,0.0010243170538795194,no,0.0009095420391860735,no,0.0008708338326286836,no,0.0008757209531325773,no,0.0007785241760039121
1767,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// before any callbacks, etc, so subdeletions see that this deletion happened first",no,undetermined,0,0,0,no,0.0052919242894531255,no,0.004372826834540945,no,0.004833058421510231,no,0.00470583634255354,no,0.004716593062505079,no,0.004248744215460629
1768,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Ensures that containing deletions happen before sub-deletions,no,undetermined,0,0,0,no,0.0005461062288792719,no,0.0008320266177069517,no,0.0009320641352477278,no,0.0009041716198035581,no,0.0009264628837021587,no,0.000813601490815213
1769,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// cascade-delete to collections BEFORE the collection owner is deleted,no,undetermined,0,0,0,no,0.0036202259694970646,no,0.003407003170564164,no,0.0029519211774389847,no,0.0024745485214608823,no,0.0026126690404868606,no,0.0028911656850344925
1770,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// cascade-delete to many-to-one AFTER the parent was deleted,no,undetermined,0,0,0,no,0.003818966671687539,no,0.0037482437326794584,no,0.0024786357685027244,no,0.0020237905553510994,no,0.002009514761814405,no,0.001775863763321043
1771,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if it is an initialized proxy, let cascade // handle it later on",no,undetermined,0,0,0,no,0.017232920086048056,no,0.010994084961148386,no,0.009085722071458899,no,0.00806921441834531,no,0.007984781864804646,no,0.007270598776541858
1772,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//assign the requested id to the proxy, *before* //reassociating the proxy",no,undetermined,0,0,0,no,0.0021546833688098803,no,0.0018570810011647424,no,0.001652694660291018,no,0.0014482490743526813,no,0.0014971429709361612,no,0.001321448452798737
1773,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// an uninitialized proxy, noop, don't even need to // return an id, since it is never a save()",no,undetermined,0,0,0,no,0.022894705582367197,no,0.010972595985975248,no,0.00909041727203431,no,0.008041282138335736,no,0.00798583627643991,no,0.00727668636807403
1774,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//initialize properties of the event:,no,undetermined,0,0,0,no,0.0026856435827978223,no,0.0020610962092266344,no,0.0015771636620921195,no,0.0013664021181840585,no,0.0013465210757867474,no,0.0011561677902081752
1775,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//return the id in the event object,no,undetermined,0,0,0,no,0.06208510641597452,no,0.010965118967455577,no,0.009110890339143788,no,0.008066343967635352,no,0.007989461739725246,no,0.007285523937408893
1776,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//TRANSIENT or DELETED,no,undetermined,0,0,0,no,0.011506087242236972,no,0.010958219698962438,no,0.009097446520636585,no,0.00804740008427285,no,0.007988420447340579,no,0.007293932047996062
1777,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// assume this is a newly instantiated transient object // which should be saved rather than updated,no,undetermined,0,0,0,no,0.4799437934612284,no,0.37250644504102,no,0.346855193251396,no,0.317217739115376,no,0.3046615561058721,no,0.30216960707951057
1778,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this is a transient object with existing persistent state not loaded by the session,no,undetermined,0,0,0,no,0.035874239066436366,no,0.010985519899726896,no,0.009112928187979435,no,0.008055548936701778,no,0.007992456450559973,no,0.007272719677229619
1779,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// check two ""adjecent"" nodes at the top of the from-clause tree",no,undetermined,0,0,0,no,0.006041251500788468,no,0.0052030746899776265,no,0.004220131378912037,no,0.0038614878504349363,no,0.004018238972691708,no,0.0036341411224034533
1780,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//cachedState,",no,undetermined,0,0,0,no,0.0036523008980329486,no,0.005504726900042388,no,0.006461868463342029,no,0.00788716525811375,no,0.0079850989855144,no,0.007268429553841039
1781,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//a ""detached"" collection!",no,undetermined,0,0,0,no,0.0039028110983375165,no,0.0032154029873161048,no,0.002315485942922855,no,0.0021859973556302074,no,0.002202963083998049,no,0.0019645302992000735
1782,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if the collection belonged to a different entity, // clean up the existing state of the collection",no,undetermined,0,0,0,no,0.008078634026104588,no,0.0047430995832774036,no,0.0030241168184015382,no,0.0023996960809813937,no,0.00252826268947724,no,0.002325370516006432
1783,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//log.debug( ""calling onLoad()"" );",no,undetermined,0,0,0,no,0.0023557379587668312,no,0.002880648315565038,no,0.0027981723662376633,no,0.002959091679227842,no,0.0030128409937499475,no,0.0026678169436966056
1784,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//EARLY EXIT!,no,undetermined,0,0,0,no,0.0012308318987046829,no,0.0010243170538795194,no,0.0009095420391860735,no,0.0008708338326286836,no,0.0008757209531325773,no,0.0007785241760039121
1785,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// note: performExecutions() clears all collectionXxxxtion  // collections (the collection actions) in the session,no,undetermined,0,0,0,no,0.00705465667991865,no,0.004247912751997596,no,0.002940711447502673,no,0.002634049173457246,no,0.002721767912029009,no,0.002482925922359879
1786,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//ie. the entity came in from update(),no,undetermined,0,0,0,no,0.0021428948388573506,no,0.0018277807497305407,no,0.0015568914929519856,no,0.001441372611088778,no,0.001273860727999423,no,0.0011265342770783047
1787,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//we need to check even if it was not initialized, because of delayed adds!",no,undetermined,0,0,0,no,0.010092434735006432,no,0.009431035536642072,no,0.008233002286789482,no,0.0076273277107859775,no,0.006996778311985978,no,0.006495515988297544
1788,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//NOTE: EARLY EXIT!,no,undetermined,0,0,0,no,0.005046302398143233,no,0.0035759389019286605,no,0.0029371527467461234,no,0.00270068247031243,no,0.0026841669436306528,no,0.0024229950349091522
1789,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// if template is null we just write the function out as it appears in the hql statement,no,undetermined,0,0,0,no,0.0056264627594275075,no,0.004328089552671716,no,0.004033294592733786,no,0.0036500082181458587,no,0.0034180046806612896,no,0.0030487802850775836
1790,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// semantic action processing ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.006643774263879447,no,0.00808039041140076,no,0.008172070802202221,no,0.007817049963272437,no,0.00774770207529912,no,0.007017083544691976
1791,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// find any entities that are still transient after retry,no,undetermined,0,0,0,no,0.02946880337148316,no,0.01096087102083785,no,0.0091103391546203,no,0.008063795626658897,no,0.00799022432370689,no,0.007278312964806502
1792,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Initialize SQL nodes here.,no,undetermined,0,0,0,no,0.004228843343523306,no,0.004970050912688441,no,0.004170312438968256,no,0.004022233125388702,no,0.003917100757363935,no,0.0034299263859378665
1793,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//EARLY EXIT!,no,undetermined,0,0,0,no,0.0012308318987046829,no,0.0010243170538795194,no,0.0009095420391860735,no,0.0008708338326286836,no,0.0008757209531325773,no,0.0007785241760039121
1794,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Check the persistence context for an entry relating to this // entity to be merged...,no,undetermined,0,0,0,no,0.023444363533025238,no,0.010955398410387835,no,0.009099490909516627,no,0.008068140713784634,no,0.007993275907783126,no,0.0072884166879206656
1795,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//DELETED,no,undetermined,0,0,0,no,0.001500731407583678,no,0.007174441616024013,no,0.007394692862834296,no,0.008062925861949361,no,0.007921639860192757,no,0.007197279365996981
1796,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Set the unresolved path in this node and the parent. // Set the text for the parent.,no,undetermined,0,0,0,no,0.012374386614169855,no,0.009083798660011414,no,0.007284964281856489,no,0.006309283691549353,no,0.0066574190570573,no,0.006020429557761915
1797,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// 60 second lock timeout,no,undetermined,0,0,0,no,0.0019341126508138982,no,0.003652573994306047,no,0.003297185377986633,no,0.0039771257524868035,no,0.003944914785496468,no,0.0035288624897986945
1798,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*
				 * Property prop = new Property(); prop.setName(""id"");
				 * prop.setPropertyAccessorName(""embedded""); prop.setValue(id);
				 * entity.setIdentifierProperty(prop);
				 */",no,undetermined,0,0,0,no,0.007749340528872631,no,0.007999296706322184,no,0.008282772167767773,no,0.00806094004786744,no,0.007973649880413155,no,0.007279692724456004
1799,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//before cascade!,no,undetermined,0,0,0,no,0.002283828743111918,no,0.007060598111313171,no,0.007086752584120691,no,0.00675689753274597,no,0.0067761847154920755,no,0.006164205650138345
1800,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// continue...; we'll find out if it ends up not getting saved later,no,undetermined,0,0,0,no,0.019328070767906793,no,0.010982334960742263,no,0.00908956760448763,no,0.008053346081951832,no,0.007977368887412248,no,0.00727022098252407
1801,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// cascade first, so that all unsaved objects get their // copy created before we actually copy",no,undetermined,0,0,0,no,0.0007790859468826896,no,0.0020850433453600504,no,0.001773892137330477,no,0.0015971184221881933,no,0.0015767872723471158,no,0.0013966182245173909
1802,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// check that entity id = requestedId,no,undetermined,0,0,0,no,0.008673338857640421,no,0.0065768236978611255,no,0.005171129859368848,no,0.004727820472556436,no,0.005828984311228835,no,0.005147338347005819
1803,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Not a collection? // Return the entity property mapping.,no,undetermined,0,0,0,no,0.0064095106669864255,no,0.005208199510368668,no,0.0035967058336677745,no,0.003176256753519676,no,0.004498201503154712,no,0.004144478586411975
1804,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// collection of <many-to-any/> mappings... // used to circumvent the component-collection check below...,no,undetermined,0,0,0,no,0.01498606637692973,no,0.010988542366016449,no,0.0072444764899200495,no,0.005962567957679116,no,0.005929458573655612,no,0.005433718238624091
1805,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Otherwise, the destination node was implied by the FROM clause and the FROM clause processor // will automatically add it in the right place.",no,undetermined,0,0,0,no,0.011543081937625621,no,0.009747727727868137,no,0.0067738509545777195,no,0.005843119166944344,no,0.006001748449876824,no,0.005493707305599587
1806,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If the first identifier in the path referrs to the class alias (not the class name), then this // is a correlated subselect.  If it's a correlated sub-select, use the existing table alias.  Otherwise // generate a new one.",no,undetermined,0,0,0,no,0.005261838462800948,no,0.0028299132925246415,no,0.0020280111633375134,no,0.0010838014042439746,no,0.001094906124041801,no,0.0009581708018279658
1807,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// This uses a PathExpressionParser but notice that compound paths are not valid, // only bare names and simple paths:",no,undetermined,0,0,0,no,0.04856447536958929,no,0.0109700446629847,no,0.009081542914091193,no,0.00805553271667028,no,0.007989703805984055,no,0.007273537540833358
1808,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		origin.addDestination(destination); // Add the query spaces.,no,undetermined,0,0,0,no,0.005650830604481727,no,0.006181992694405416,no,0.005489225716219574,no,0.005286877786911736,no,0.005036531227956255,no,0.004625535251300895
1809,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Reset the node type, because the rest of the system is expecting FROM_FRAGMENT, all we wanted was // for the factory to create the right sub-class.  This might get reset again later on anyway to make the // SQL generation simpler.",no,undetermined,0,0,0,no,0.07503936310262467,no,0.010962236979647755,no,0.009092948976990973,no,0.008045830395442733,no,0.007987883280659198,no,0.007275445182053632
1810,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//explicit = true;	// This is an explict Select. //ArrayList sqlResultTypeList = new ArrayList();,no,undetermined,0,0,0,no,0.021936428162771592,no,0.010988348135248415,no,0.009091742291176364,no,0.00805149141263206,no,0.0079776552422417,no,0.0072742601547733125
1811,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//sqlResultTypeList.add( type ); // Generate the select expression.,no,undetermined,0,0,0,no,0.011162090378070104,no,0.00690728619114949,no,0.0050899637918903964,no,0.0037328405914081155,no,0.0036825122910670066,no,0.0033555303967576027
1812,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If the expression list has exactly one expression, and the type of the expression is a collection // then this might be a collection function, such as index(c) or size(c).",no,undetermined,0,0,0,no,0.13376121819718093,no,0.11142988322063803,no,0.060546229624453975,no,0.008073634456207969,no,0.007999828678403991,no,0.007289867544438001
1813,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The uber-rule here is that we need to include  subclass joins if // the FromElement is in any way dereferenced by a property from // the subclass table; otherwise we end up with column references // qualified by a non-existent table reference in the resulting SQL...,no,undetermined,0,0,0,no,0.05722760441954493,no,0.010974994507963602,no,0.00908122629528128,no,0.00804945702888105,no,0.007985239541091222,no,0.007279044505991115
1814,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//before cascade!,no,undetermined,0,0,0,no,0.002283828743111918,no,0.007060598111313171,no,0.007086752584120691,no,0.00675689753274597,no,0.0067761847154920755,no,0.006164205650138345
1815,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// cascade first, so that all unsaved objects get their  // copy created before we actually copy",no,undetermined,0,0,0,no,0.0007790859468826896,no,0.0020850433453600504,no,0.001773892137330477,no,0.0015971184221881933,no,0.0015767872723471158,no,0.0013966182245173909
1816,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//copyValues works by reflection, so explicitly mark the entity instance dirty",no,undetermined,0,0,0,no,0.0727627602543036,no,0.010975352189643526,no,0.009093689608521598,no,0.008065497062777753,no,0.007976741923170895,no,0.00727880962643664
1817,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The following variables are stacks that keep information about each subexpression // in the list of nested subexpressions we are currently processing.,no,undetermined,0,0,0,no,0.02010921817292231,no,0.010978008937242689,no,0.009103206200419399,no,0.008072108099105588,no,0.007989308197132767,no,0.0072924110039239735
1818,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// no need to even collect this information if the persister is considered multi-table,no,undetermined,0,0,0,no,0.024490368386479864,no,0.010980442143759919,no,0.009091682577461704,no,0.008057958407739213,no,0.007996481972293228,no,0.007269795430657328
1819,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// as soon as we encounter our first letter, return the substring // from that position",no,undetermined,0,0,0,no,0.0026943827225523963,no,0.0029324381532017624,no,0.0024670970474131616,no,0.0024109945262941624,no,0.002410611980973593,no,0.0021588863257944717
1820,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Retrieve the value of the designated column in the current row of this // ResultSet object as a java.io.Reader object,no,undetermined,0,0,0,no,0.010984274377520345,no,0.010350480531244217,no,0.008275742559600771,no,0.007104540268311852,no,0.006630273619075268,no,0.00603623007999373
1821,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//for arrays, replaceElements() may return a different reference, since //the array length might not match",no,undetermined,0,0,0,no,0.0417865761271536,no,0.010963599428379326,no,0.009088689044977961,no,0.008053224423642561,no,0.007987355621682539,no,0.007268294923749631
1822,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// should not be able to reach last without maxPosition being set // unless there are no results,no,undetermined,0,0,0,no,0.003926088507830835,no,0.004370717966488569,no,0.003520175339296674,no,0.0029902955081833158,no,0.003014553736324909,no,0.00265890941134668
1823,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//do not use proxiesByKey, since not all //proxies that point to this session's //instances are in that collection!",no,undetermined,0,0,0,no,0.02280280628111249,no,0.010994471890280074,no,0.009079837561115547,no,0.008062902269193373,no,0.007982932684723065,no,0.0072898528902114205
1824,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//this should be a call to resolve(), not resolveIdentifier(),  //'cos it might be a property-ref, and we did not cache the //referenced value",no,undetermined,0,0,0,no,0.11575452425280804,no,0.11969827104237696,no,0.10841932775740067,no,0.10526739696691778,no,0.07744153803180422,no,0.007268567771475596
1825,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If we have <tt>not-found=""ignore""</tt> association mapped to a // formula, we always need to dirty check it, so we can update the // second-level cache",no,undetermined,0,0,0,no,0.0193027761770075,no,0.010988243911650111,no,0.009109114419695016,no,0.008045067265317127,no,0.007993535474462445,no,0.007270162902061127
1826,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// We now have the value of the property-ref we reference.  However, // we need to dig a little deeper, as that property might also be // an entity type, in which case we need to resolve its identitifier",no,undetermined,0,0,0,no,0.18386225954472646,no,0.09882221478053461,no,0.009091212123190159,no,0.008042019969149224,no,0.007980672700657832,no,0.007275322470572932
1827,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//true if this is a query and we are loading multiple instances of the same collection role //otherwise this is a CollectionInitializer and we are loading up a single collection or batch,no,undetermined,0,0,0,no,0.14994259659283324,no,0.12585235420373272,no,0.06191409491799008,no,0.008042484958107799,no,0.007976805969085867,no,0.007275804736439276
1828,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// PERSISTER,no,undetermined,0,0,0,no,0.021267460503557156,no,0.008839038148579214,no,0.009104831578170762,no,0.008063859483527435,no,0.007997604003837769,no,0.007294227434595755
1829,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This method should be implemented assuming it's valid to  // do start/stop/start -- leave state appropriate for another start,no,undetermined,0,0,0,no,0.07639402328323411,no,0.010974239710501968,no,0.009100829214888351,no,0.008039858199230775,no,0.007978172435212035,no,0.007273769241712602
1830,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// We don't want to waste effort setting an option if JBC is // already in LOCAL mode. If JBC is REPL_(A)SYNC then check // if they passed an config option to disable query replication,no,undetermined,0,0,0,no,0.016866231040165422,no,0.010958269173464118,no,0.009095506613918027,no,0.008053042904944113,no,0.007978360473364579,no,0.007278553021782698
1831,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// See if we had a 2nd invalidation from the same initial // preinvalidation timestamp. If so, only increment // if the new current value is an increase",no,undetermined,0,0,0,no,0.0005198486243200172,no,0.00040202694921783144,no,0.00040191904183040436,no,0.0003272308631671478,no,0.00032522761708444564,no,0.0002835250119583629
1832,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If the workspace node has null as well, OK; if not we've // been modified in a non-comparable manner, which we have to // treat as us being newer",no,undetermined,0,0,0,no,0.008477948844106492,no,0.008286521570133019,no,0.006814447400858076,no,0.005922519862024801,no,0.00609689215429981,no,0.005529347802189344
1833,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//maintain correct duplication if loaded in a cartesian product,no,undetermined,0,0,0,no,0.006137302570282808,no,0.004260882177891322,no,0.004361942307333596,no,0.004588771905831732,no,0.004592796800991279,no,0.004140451839901088
1834,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// local cache, so we use synchronization",no,undetermined,0,0,0,no,0.0035332354333494098,no,0.0035426043736086973,no,0.00284154441435436,no,0.0024122965152798474,no,0.0024491761039495234,no,0.002147029497716677
1835,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*DataSource unpooled = DataSources.unpooledDataSource(
				jdbcUrl, props.getProperty(Environment.USER), props.getProperty(Environment.PASS)
			);*/",no,undetermined,0,0,0,no,0.0015989669840491925,no,0.0022289536822911278,no,0.0021697769305080695,no,0.002784071958210548,no,0.002800357141719203,no,0.0025057322861747693
1836,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Don't need to lock the cache here, since if someone // else inserted the same pk first, the insert would fail",no,undetermined,0,0,0,no,0.0064550676017871835,no,0.006745796355925521,no,0.005043265638040083,no,0.004290899850254108,no,0.00632746215696146,no,0.00543076591215311
1837,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we need to grab the version value from the entity, otherwise // we have issues with generated-version entities that may have // multiple actions queued during the same flush",no,undetermined,0,0,0,no,0.033038791297679046,no,0.010981397269886308,no,0.009112271257223189,no,0.00804324072876305,no,0.00799096886106986,no,0.007290535616998583
1838,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// short-circuit(s) // no new elements, the old list contains only Orphans // no old elements, so no Orphans neither",no,undetermined,0,0,0,no,0.0005294966584444161,no,0.0029622731036555465,no,0.002683590838714814,no,0.0022346359356885917,no,0.0024215515807717116,no,0.0021231462934956685
1839,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//test out the optimizer:,no,undetermined,0,0,0,no,0.0017177705007296313,no,0.0018022300432611023,no,0.001267179885031257,no,0.0010022324018798825,no,0.0010117916726677012,no,0.0008801447597030576
1840,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// get the updated snapshot of the entity state by cloning current state; // it is safe to copy in place, since by this time no-one else (should have) // has a reference  to the array",no,undetermined,0,0,0,no,0.013560853328394577,no,0.01100012453739896,no,0.009114538978511041,no,0.008062450273895556,no,0.007993658811373372,no,0.0072714349301670304
1841,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*!persister.isCacheInvalidationRequired()*/,no,undetermined,0,0,0,no,0.021267460503557156,no,0.008839038148579214,no,0.009104831578170762,no,0.008063859483527435,no,0.007997604003837769,no,0.007294227434595755
1842,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// long,no,undetermined,0,0,0,no,0.005422836097453547,no,0.006703763765115291,no,0.00632125031517745,no,0.006396717450880861,no,0.006350394392058399,no,0.005722414463565485
1843,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Set the existing pool flag to true,no,undetermined,0,0,0,no,0.003265081883835079,no,0.0031689047172172853,no,0.002410645590136606,no,0.0020245467270978133,no,0.0020555458500614346,no,0.0017998143493511783
1844,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Validate that an alias name was provided to determine which pool to use,no,undetermined,0,0,0,no,0.018457115586105535,no,0.010955559866664069,no,0.00908760148501693,no,0.008055517133609727,no,0.007995931048178641,no,0.007283103404304901
1845,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// We have created the pool ourselves, so shut it down",no,undetermined,0,0,0,no,0.0035650045768597627,no,0.0032607215857852114,no,0.0027361796228255733,no,0.0025962966100159155,no,0.0026212794814747687,no,0.002323112558146583
1846,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//the load() which takes an entity does not pass an entityName,no,undetermined,0,0,0,no,0.005005206904764124,no,0.005136813680272841,no,0.004655830724248486,no,0.004476107803611378,no,0.00428497328845657,no,0.0038557797661340687
1847,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Note : expected in the syntax: //      type=listenerClass //          ({sep}type=listenerClass)* // where {sep} is any whitespace or comma,no,undetermined,0,0,0,no,0.015444549501259586,no,0.010969951670394381,no,0.00909618400337343,no,0.008049741544352179,no,0.008007033494827237,no,0.007266856495843524
1848,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// tree cache in optimistic mode seems to have as very difficult // time with remove calls on non-existent nodes (NPEs)...,no,undetermined,0,0,0,no,0.1334993785723694,no,0.09544307610865417,no,0.009104411743768194,no,0.008059649529978544,no,0.007976361923915761,no,0.007271802681753811
1849,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// We ignore minimalPutOverride. JBossCache putForExternalRead is // already about as minimal as we can get; it will promptly return // if it discovers that the node we want to write to already exists,no,undetermined,0,0,0,no,0.004233211687396574,no,0.0037979099719292544,no,0.003005122147756848,no,0.002705260334692997,no,0.002458471421960479,no,0.0022312933583976302
1850,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//it does not refer to an alias of a projection, //look for a property",no,undetermined,0,0,0,no,0.024960221997285266,no,0.010984933603660731,no,0.009107198625845334,no,0.008069230990346688,no,0.007990686296612407,no,0.007286338143189278
1851,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// do nothing for persistent instances,no,undetermined,0,0,0,no,0.008066428974317141,no,0.006076783880404195,no,0.005697102795908855,no,0.005515763447450682,no,0.005402621317090303,no,0.004869288750128284
1852,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// OptimisticCache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.005867700963281545,no,0.007493263746119705,no,0.007138832996983271,no,0.00758391619001369,no,0.007580076956105815,no,0.006900524203758815
1853,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//			option.setDataVersion( NonLockingDataVersion.INSTANCE );,no,undetermined,0,0,0,no,0.002958953821510694,no,0.0038345428992222637,no,0.0035948928507029865,no,0.0035493008958333593,no,0.0035554895878876463,no,0.0031800482215995824
1854,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//assume true, since we don't really know, and it doesn't matter",no,undetermined,0,0,0,no,0.1558825336989597,no,0.15743153791174105,no,0.149083926163468,no,0.14016151404483512,no,0.13595417155025222,no,0.13009925719229115
1855,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Show the modified AST.,no,undetermined,0,0,0,no,0.002948546028838438,no,0.002426891032225358,no,0.002182736111263055,no,0.0022215821672001822,no,0.002247691350059182,no,0.001998092678481559
1856,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// NOTE : firstRow is zero-based,no,undetermined,0,0,0,no,0.017778744289078042,no,0.010956701658678276,no,0.009089279061754121,no,0.008046899045016468,no,0.007985590410988775,no,0.007279527849745048
1857,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Initialize dirty flags for arrays + collections with composite elements // and reset reached, doupdate, etc.",no,undetermined,0,0,0,no,0.03934456804286507,no,0.01096531574798034,no,0.009094962023619901,no,0.008038272297452742,no,0.007990824928533563,no,0.007269412066255399
1858,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Use the delegate.,no,undetermined,0,0,0,no,0.004744329017731912,no,0.005170868949507681,no,0.00443025232026688,no,0.003823483402822087,no,0.0037960016239915705,no,0.0034168320557206055
1859,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Use the delegate.,no,undetermined,0,0,0,no,0.004744329017731912,no,0.005170868949507681,no,0.00443025232026688,no,0.003823483402822087,no,0.0037960016239915705,no,0.0034168320557206055
1860,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Tell the dot node about the join type.,no,undetermined,0,0,0,no,0.005176983039066259,no,0.002595197971525038,no,0.0021881674845811213,no,0.002713149275039302,no,0.002996444792253712,no,0.0026929518387970946
1861,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This 'dot' expression now refers to the resulting from element.,no,undetermined,0,0,0,no,0.021437934954882047,no,0.01099756939032,no,0.009096764744566806,no,0.008058919559114388,no,0.007986197669139702,no,0.007277678004150399
1862,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Among other things, updateReachables() will recursively load all // collections that are moving roles. This might cause entities to // be loaded.",no,undetermined,0,0,0,no,0.0696706722089391,no,0.010986029804857118,no,0.00908901343748241,no,0.008057456882303755,no,0.007989042281623171,no,0.007293575205041888
1863,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // Post-flushing section // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.002048448340371925,no,0.002884826612648181,no,0.0030196108825850756,no,0.003277297529109314,no,0.0033104962936118397,no,0.0028950332094298823
1864,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//otherwise recreate the mapping between the collection and its key,no,undetermined,0,0,0,no,0.002433203002948143,no,0.003735891760783933,no,0.001183773249309152,no,0.0009100784174774385,no,0.001213558654788638,no,0.001065026018113146
1865,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Create a parameter specification for the collection filter...,no,undetermined,0,0,0,no,0.015787203795509134,no,0.010993960856414846,no,0.007391096005011781,no,0.0061981951687292616,no,0.006326466054600375,no,0.005769172478222377
1866,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Attach any mapping-defined ""ORDER BY"" fragments",no,undetermined,0,0,0,no,0.001138957088780657,no,0.001459838746327557,no,0.0012846300654211318,no,0.0013330314628696668,no,0.0015610098996063687,no,0.0014044064085242068
1867,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we found some extends attributes referencing entities which were // not already processed.  here we need to locate all entity-names // and class-names contained in this document itself, making sure // that these get removed from the extendz list such that only // extends names which require us to delay processing (i.e. // external to this document and not yet processed) are contained // in the returned result",no,undetermined,0,0,0,no,0.19220501431769202,no,0.14507716243962496,no,0.16602129847341238,no,0.15494775400706204,no,0.14738595896499748,no,0.14215918273534922
1868,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Make sure that the persister is versioned,no,undetermined,0,0,0,no,0.01323072759037315,no,0.005742226559172912,no,0.004619093406743644,no,0.0036855729433988705,no,0.0036768630876229144,no,0.0032724884148588166
1869,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// for native-sql queries, the param metadata is determined outside // any relation to a query plan, because query plan creation and/or // retreival for a native-sql query depends on all of the return // types having been set, which might not be the case up-front when // param metadata would be most useful",no,undetermined,0,0,0,no,0.14063003563414528,no,0.09303482450529674,no,0.009091887807667459,no,0.008069828024631754,no,0.00800699600337935,no,0.007267264396201975
1870,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this function has a template -> redirect output and catch the arguments,no,undetermined,0,0,0,no,0.0030923765244429695,no,0.005562633717219371,no,0.005306300491903995,no,0.004700125811014979,no,0.004681317909204292,no,0.004265613954725153
1871,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// use the id assigned to the instance,no,undetermined,0,0,0,no,0.007057238215912532,no,0.004403152350083603,no,0.0034043636410152306,no,0.002913641313406122,no,0.0029463183915570193,no,0.0026448396458597203
1872,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if no array holder we found an unwrappered array (this can't occur, // because we now always call wrap() before getting to here) // return (ah==null) ? true : searchForDirtyCollections(ah, type);",no,undetermined,0,0,0,no,0.010214757178292396,no,0.009479124516365284,no,0.006282449303085357,no,0.0053892638970397515,no,0.005435832214045125,no,0.004713693261761089
1873,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// a collection loaded in the current session // can not possibly be the collection belonging // to the entity passed to update(),no,undetermined,0,0,0,no,0.005134262340861478,no,0.004214543862184724,no,0.0024732121266370323,no,0.0021461188757414397,no,0.002116796116948495,no,0.0019009307815194094
1874,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If the data type is not an association type, it could not have been in the FROM clause.",no,undetermined,0,0,0,no,0.02207619593238769,no,0.010987698916742993,no,0.009092179457171754,no,0.008063628035034935,no,0.008006008396930168,no,0.0072919653020931535
1875,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// We need to generate ids as part of this bulk insert. // // Note that this is only supported for sequence-style generators and // post-insert-style generators; basically, only in-db generators",no,undetermined,0,0,0,no,0.04354251124975413,no,0.010994769291268344,no,0.009089972412199296,no,0.008065052992498958,no,0.007995464766918732,no,0.007274214762641979
1876,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//first look for a reference to a projection alias,no,undetermined,0,0,0,no,0.004779052575558477,no,0.004175720493982945,no,0.0033124438280970154,no,0.0025562041438399164,no,0.0025610300401049404,no,0.002291536314062621
1877,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//first look for a reference to a projection alias,no,undetermined,0,0,0,no,0.004779052575558477,no,0.004175720493982945,no,0.0033124438280970154,no,0.0025562041438399164,no,0.0025610300401049404,no,0.002291536314062621
1878,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.004743938349378224,no,0.005071038186615131,no,0.0052233629370559516,no,0.005394111553461939,no,0.005359281490135117,no,0.004726918415681859
1879,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If there are no collection fetches, then no further checks are needed",no,undetermined,0,0,0,no,0.001961753205211062,no,0.0016991509531647088,no,0.0010532970158706508,no,0.000841259340821791,no,0.0008463949499242655,no,0.0007679324515501629
1880,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// --Commented out by Inspection (12/11/04 10:56 AM): int getWarningCount();,no,undetermined,0,0,0,no,0.006442754710476371,no,0.006471077221801479,no,0.006447617820619442,no,0.006587987936438801,no,0.0066727396247118305,no,0.006097060751202036
1881,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if a ThreadLocalSessionContext-bound session happens to get // serialized, to be completely correct, we need to make sure // that unbinding of that session occurs.",no,undetermined,0,0,0,no,0.0213791022567047,no,0.011002072583349811,no,0.009107650280366555,no,0.008041342874981906,no,0.007997833066748512,no,0.007278265828324777
1882,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Make #@%$^#^&# sure no alias is applied to the table name,no,undetermined,0,0,0,no,0.0032267982699107295,no,0.0020721552907620993,no,0.0016680978678925752,no,0.001229273166974497,no,0.0012557791724248292,no,0.0011043906886334391
1883,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Delegate to the QueryLoader...,no,undetermined,0,0,0,no,0.0045138241234983145,no,0.0037890100152468587,no,0.00323536765088054,no,0.0029420389091665434,no,0.002936357011229642,no,0.0026241384865424108
1884,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// switch,no,undetermined,0,0,0,no,0.00238870876647166,no,0.004430199035448382,no,0.0047802776846229255,no,0.0051307208062878265,no,0.005125888250974591,no,0.004628623443027216
1885,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we do not actually propogate ANTLRExceptions as a cause, so // log it here for diagnostic purposes",no,undetermined,0,0,0,no,0.014774364437439189,no,0.010979180907676873,no,0.00909125208531335,no,0.008055894016692659,no,0.00799607802999954,no,0.007280567935549519
1886,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Use the explicitly declared select expression; determine the // return types indicated by each select token,no,undetermined,0,0,0,no,0.01109118823953937,no,0.008302549735497771,no,0.006253701386105972,no,0.005304189537345893,no,0.00520532429931418,no,0.004768727473592734
1887,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// select clauses for insert statements should alwasy be treated as shallow,no,undetermined,0,0,0,no,0.009291845894971472,no,0.01098123856983302,no,0.00909774711259164,no,0.008041253355546594,no,0.008002233335253451,no,0.007271464166132783
1888,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// After that, process the JOINs. // Invoke a delegate to do the work, as this is farily complex.",no,undetermined,0,0,0,no,0.03130764189669455,no,0.010959815931710101,no,0.00911416342158399,no,0.008057593460297198,no,0.00799106762431886,no,0.007285920585363758
1889,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Cache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.005987372194063648,no,0.007494259406360183,no,0.007067876474140979,no,0.006965363606136375,no,0.007303688173864572,no,0.006579125713973416
1890,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// simple cache of param metadata based on query string.  Ideally, the // original ""user-supplied query"" string should be used to retreive this // metadata (i.e., not the para-list-expanded query string) to avoid // unnecessary cache entries. // Used solely for caching param metadata for native-sql queries, see // getSQLParameterMetadata() for a discussion as to why...",no,undetermined,0,0,0,no,0.0973734066531999,no,0.010975576588107824,no,0.009111763087708703,no,0.008055322176380624,no,0.007978892218254804,no,0.007284241997775147
1891,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Use the delegate.,no,undetermined,0,0,0,no,0.004744329017731912,no,0.005170868949507681,no,0.00443025232026688,no,0.003823483402822087,no,0.0037960016239915705,no,0.0034168320557206055
1892,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Alias references and identifiers use the same node class.,no,undetermined,0,0,0,no,0.009843812224329515,no,0.008609892721498862,no,0.0074252814511601,no,0.006025716650033869,no,0.006267630639275673,no,0.005637955890702759
1893,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// make a new one,no,undetermined,0,0,0,no,0.0025468912188910675,no,0.002201135279362374,no,0.0016938145267604969,no,0.0014386781086076555,no,0.001419262243036864,no,0.001249731828245338
1894,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,///////////////////////////////////////////////////////////////////////,no,undetermined,0,0,0,no,0.0036523008980329486,no,0.005504726900042388,no,0.006461868463342029,no,0.00788716525811375,no,0.0079850989855144,no,0.007268429553841039
1895,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// these are just two unrelated table references,no,undetermined,0,0,0,no,0.012430800496503502,no,0.009102872975560776,no,0.008279410880943324,no,0.007983424754246968,no,0.007896289424551726,no,0.007094896410497542
1896,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// again, both should be FromElements",no,undetermined,0,0,0,no,0.022309897323639142,no,0.010962783441594917,no,0.009096256211635543,no,0.008065260388202738,no,0.007998459370747448,no,0.007287947715927736
1897,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// check a set of parent/child nodes in the from-clause tree // to determine if a comma is required between them,no,undetermined,0,0,0,no,0.018427431212556137,no,0.010969375572538326,no,0.009097592053138216,no,0.008067890221261918,no,0.007999862860088695,no,0.007266931340134891
1898,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// PHASE 2 : Analyze the HQL AST, and produce an SQL AST.",no,undetermined,0,0,0,no,0.001946667245448322,no,0.0015349604137173901,no,0.001378615701138561,no,0.0013294249939285806,no,0.001335321939223534,no,0.0011901358943971325
1899,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// PHASE 3 : Generate the SQL.,no,undetermined,0,0,0,no,0.0006645522685115318,no,0.0014512870873558622,no,0.0013309778012838551,no,0.001257687070455916,no,0.001290850262515486,no,0.0011355200882835548
1900,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Otherwise, we have a non-scalar select with defined collection fetch(es). // Make sure that there is only a single root entity in the return (no tuples)",no,undetermined,0,0,0,no,0.006225348131510049,no,0.0036720037483873934,no,0.0014601294688896607,no,0.0011056827678245715,no,0.0012211719313612352,no,0.0010893074564468357
1901,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//			paramTranslations = new ParameterTranslationsImpl( collectedParameterSpecifications );,no,undetermined,0,0,0,no,0.0011524323874586727,no,0.0015456798653536268,no,0.0013203825020007525,no,0.0011328021668317815,no,0.0011285461793092777,no,0.0009805867107047217
1902,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we are already processing a dot-structure,no,undetermined,0,0,0,no,0.013480110466131857,no,0.009282018191878532,no,0.008530767826545077,no,0.007703271616763613,no,0.007498379421065662,no,0.00684303919319405
1903,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Should mean that no such property was found,no,undetermined,0,0,0,no,0.017738146199938472,no,0.010970006005751801,no,0.009094523385647929,no,0.00806590031053532,no,0.007993643896157232,no,0.007271202376591992
1904,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Initialize the error handling delegate.,no,undetermined,0,0,0,no,0.004719539556798919,no,0.003449905939911077,no,0.0032512179569959194,no,0.0027708575590376663,no,0.0027565156692350035,no,0.002419782106762245
1905,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Was there an explicit select expression?,no,undetermined,0,0,0,no,0.0019169076827376468,no,0.0020297530974824054,no,0.0018544993872070953,no,0.001592430043976435,no,0.001577312834054139,no,0.0013909411735143306
1906,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Resolve everything up to this dot, but don't resolve the placeholders yet.",no,undetermined,0,0,0,no,0.08386186609333947,no,0.010971450909693854,no,0.00909393738227541,no,0.008051667896523193,no,0.007982946498432347,no,0.007274742892586668
1907,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// (NOT (NOT_BETWEEN a b) ) => (BETWEEN a b),no,undetermined,0,0,0,no,0.02100871321129485,no,0.010955355173507124,no,0.009103314996912899,no,0.008068686697303701,no,0.007998759690728732,no,0.00726860822321645
1908,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Just add a 'not' parent.,no,undetermined,0,0,0,no,0.006582912358080703,no,0.006852483170489713,no,0.005558327602755247,no,0.0045913488792215075,no,0.004555176823147732,no,0.004202976914874103
1909,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// First, save off the pertinent ids, as the return value",no,undetermined,0,0,0,no,0.0027751531737505984,no,0.00230624517605152,no,0.0014890480449960594,no,0.001281942291335811,no,0.0012524693327524551,no,0.0011012877796264672
1910,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// check to see if the connection is in auto-commit  // mode (no connection means aggressive connection // release outside a JTA transaction context, so MUST // be autocommit mode)",no,undetermined,0,0,0,no,0.022354735786960418,no,0.010994591748330616,no,0.009113771254214606,no,0.008067932137843691,no,0.007996636718055427,no,0.0072796877264006115
1911,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// First, save off the pertinent ids, saving the number of pertinent ids for return",no,undetermined,0,0,0,no,0.007328145754258371,no,0.00922425176734584,no,0.006455931945702228,no,0.005665480301243171,no,0.005548996122651142,no,0.005025664977834433
1912,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Start performing the deletes,no,undetermined,0,0,0,no,0.002039344220077257,no,0.0021830364071821545,no,0.002202957170065967,no,0.0023804491714447887,no,0.0024344748517254717,no,0.002175265239299043
1913,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Don't forget to resolve the argument! // Resolve the collection function now.,no,undetermined,0,0,0,no,0.006496949146619694,no,0.005290822542756477,no,0.0038814759868604602,no,0.0033697202608802225,no,0.0033782982105712528,no,0.003249934833062561
1914,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// otherwise, everything ok.",no,undetermined,0,0,0,no,0.0011427561516118756,no,0.0018366077592063344,no,0.0009906871789481003,no,0.0006520178371112938,no,0.0006740416399516042,no,0.0005896048631865808
1915,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Re-arrange the tree so that the collection function is the root and the lhs is the path.,no,undetermined,0,0,0,no,0.0010491927974081718,no,0.0010135016953508377,no,0.0007446873545076035,no,0.0005790020894155855,no,0.000694676568045398,no,0.0006106779988791352
1916,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//    protected RegionRootListener listener;,no,undetermined,0,0,0,no,0.014624176862325956,no,0.01098717579148163,no,0.009100341731996486,no,0.008055182990523478,no,0.008006538422631172,no,0.007278565092394414
1917,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// inject the WHERE after the parent,no,undetermined,0,0,0,no,0.005585974130768381,no,0.004366231472740206,no,0.0037015646769573817,no,0.0033254247915003136,no,0.0038210641823840986,no,0.00344831166121452
1918,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Never include subclasses for implied from elements.,no,undetermined,0,0,0,no,0.0019268562833262006,no,0.002689189626155531,no,0.0023741732954514236,no,0.0021389446356490554,no,0.0021619073818954764,no,0.0019138546335842825
1919,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Establish the region root node with a non-locking data version,no,undetermined,0,0,0,no,0.009608483910868408,no,0.006687638596008941,no,0.006105664735546654,no,0.005674420690603026,no,0.005900771417863978,no,0.005353525301104071
1920,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// For pessimistic locking, we just want to toss out our ref // to any old invalid root node and get the latest (may be null)            ",no,undetermined,0,0,0,no,0.018130340971349492,no,0.01097286735102897,no,0.009096104367420239,no,0.008067568698450942,no,0.00800434036928438,no,0.007271113578698196
1921,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// The rest only matters for optimistic locking, where we // need to establish the proper data version on the region root",no,undetermined,0,0,0,no,0.019994291855199266,no,0.010978547854758677,no,0.009088477632012752,no,0.008058826283708947,no,0.007990081632336487,no,0.007279107750936807
1922,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Prepare the left hand side and get the data type.,no,undetermined,0,0,0,no,0.0007420559549232499,no,0.0037186594546967954,no,0.002886147840648897,no,0.002420966384681462,no,0.0024294883806221875,no,0.0021676237680570746
1923,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Prepare the left hand side and get the data type.,no,undetermined,0,0,0,no,0.0007420559549232499,no,0.0037186594546967954,no,0.002886147840648897,no,0.002420966384681462,no,0.0024294883806221875,no,0.0021676237680570746
1924,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If this dot has already been resolved, stop now.",no,undetermined,0,0,0,no,0.0047742281220196445,no,0.003428710551545248,no,0.003377418048221928,no,0.0031328516446670006,no,0.0031228393431506876,no,0.0027964702517661484
1925,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// PROPERTIES,no,undetermined,0,0,0,no,0.005377607631194809,no,0.005100804320321773,no,0.004930592196729065,no,0.00516214485141379,no,0.005224368233705591,no,0.0047147296611339635
1926,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The property is another class..,no,undetermined,0,0,0,no,0.02353307792850452,no,0.010973044270264921,no,0.009109486164729149,no,0.008039782047686876,no,0.00799577864009554,no,0.007273977531189567
1927,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Otherwise, this is a primitive type.",no,undetermined,0,0,0,no,0.012439673940858455,no,0.01099468526492955,no,0.003353389774597988,no,0.0031282082714672466,no,0.003160174222527497,no,0.002831968004087477
1928,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//foo.bars.size (also handles deprecated stuff like foo.bars.maxelement for backwardness),no,undetermined,0,0,0,no,0.006813345487334309,no,0.007261390926002271,no,0.006543736095114586,no,0.007953833467812626,no,0.007882394894480825,no,0.0071786189957656595
1929,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Use the delegate.,no,undetermined,0,0,0,no,0.004744329017731912,no,0.005170868949507681,no,0.00443025232026688,no,0.003823483402822087,no,0.0037960016239915705,no,0.0034168320557206055
1930,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// For Timestamps, we default to a separate config",no,undetermined,0,0,0,no,0.003443641093790384,no,0.005970742522779536,no,0.005448646809447156,no,0.005516290568676048,no,0.005503287298295269,no,0.004847706103036329
1931,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//optimistic-lock=""all"", include all updatable properties //optimistic-lock=""dirty"", include all properties we are updating this time",no,undetermined,0,0,0,no,0.0075770832562519225,no,0.004649776256772236,no,0.002678182764171945,no,0.0026462184551387835,no,0.0026257479509128124,no,0.002347431730018727
1932,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// this property belongs to the table, and it is not specifically // excluded from optimistic locking by optimistic-lock=""false""",no,undetermined,0,0,0,no,0.02091928283284095,no,0.01097706898193535,no,0.0071425828344038374,no,0.006727307655989406,no,0.006515258209859986,no,0.005878037812806218
1933,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//information about properties of this class, //including inherited properties //(only really needed for updatable/insertable properties)",no,undetermined,0,0,0,no,0.04383479294647713,no,0.010971189009659347,no,0.009104278662875942,no,0.008054870003925692,no,0.008009246859420014,no,0.007273560526791617
1934,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Here we render the select column list based on the properties defined as being generated. // For partial component generation, we currently just re-select the whole component // rather than trying to handle the individual generated portions.",no,undetermined,0,0,0,no,0.06532502799855747,no,0.010962283116031672,no,0.009080545227376826,no,0.008040086029917246,no,0.008010385242561445,no,0.007277632222214645
1935,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// NOTE : addDuplicateAlias() already performs nullness checks on the alias.,no,undetermined,0,0,0,no,0.02631350469737008,no,0.010969428358245938,no,0.009092412356024399,no,0.008066162440061801,no,0.00800434728531512,no,0.0072742284851128975
1936,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if the from-clauses are the same, we can be a little more aggressive in terms of what we reuse",no,undetermined,0,0,0,no,0.16528626420874734,no,0.1798715000356156,no,0.15575935366811466,no,0.14044673184460535,no,0.13365494301697603,no,0.1300309302825219
1937,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_0,no,undetermined,0,0,0,no,0.0036523008980329486,no,0.00513915212545195,no,0.005027493849438599,no,0.005065922042797434,no,0.0050777015913364455,no,0.004591248132509578
1938,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// again, null != null here",no,undetermined,0,0,0,no,0.0037537927018282975,no,0.002536287562216453,no,0.00225556728421307,no,0.0019770707773221615,no,0.00193478642775063,no,0.001504209506034241
1939,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// otherwise (subquery case) dont reuse the fromElement if we are processing the from-clause of the subquery,no,undetermined,0,0,0,no,0.004995858620787684,no,0.006797040027955907,no,0.004489205054514142,no,0.003685164121204662,no,0.0037440245107770746,no,0.0033783827952033585
1940,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we know only the lhs-hand type, so use that",no,undetermined,0,0,0,no,0.0020611813539002494,no,0.005773245821500874,no,0.004435792581507334,no,0.004045551984307317,no,0.00404171373183257,no,0.0036723532206390935
1941,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the referenced node text is the special 'id',no,undetermined,0,0,0,no,0.002431531478472334,no,0.001373263974885767,no,0.0017217383001811824,no,0.0016468009070242505,no,0.002523144162803093,no,0.002003458237312731
1942,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// only the identifier property field name can be a reference to the associated entity's PK...,no,undetermined,0,0,0,no,0.008255188060706301,no,0.008459063131951241,no,0.007167625465017578,no,0.0061878938608430495,no,0.005889530243183504,no,0.005266009835283815
1943,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// special shortcut for id properties, skip the join! // this must only occur at the _end_ of a path expression",no,undetermined,0,0,0,no,0.025365417245814367,no,0.01098827647108463,no,0.009109922459712974,no,0.008063270628334632,no,0.007986406688623018,no,0.007259067800935982
1944,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Append the new property name onto the unresolved path.,no,undetermined,0,0,0,no,0.01446415583924449,no,0.010965807909494358,no,0.00909679032465261,no,0.008074815919344822,no,0.00799017864859674,no,0.007281172825740225
1945,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Tell the destination fromElement to 'includeSubclasses'.,no,undetermined,0,0,0,no,0.011766113873621017,no,0.010971102956124976,no,0.009111656555283754,no,0.00805769076789697,no,0.00799819164389562,no,0.007284262165308301
1946,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If the lhs is a collection, use CollectionPropertyMapping",no,undetermined,0,0,0,no,0.0024307348524991034,no,0.0018611601973914202,no,0.0014388029472970985,no,0.0011581427659510784,no,0.001260914596112942,no,0.0011912368923488674
1947,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Don't resolve the node again.,no,undetermined,0,0,0,no,0.009663385448893495,no,0.00501834094456864,no,0.004666621743003154,no,0.004160121348105442,no,0.00445467572923074,no,0.0038896696182209103
1948,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//lists, arrays //sets, maps, bags",no,undetermined,0,0,0,no,0.00713517166671663,no,0.007962035113204678,no,0.00910347450294847,no,0.008076710302633726,no,0.007984090738917083,no,0.007284342236301846
1949,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we have something like : ""? [op] rhs""",no,undetermined,0,0,0,no,0.013427656399361765,no,0.009088498664186028,no,0.008397040561850982,no,0.008046649131012605,no,0.00798296923162077,no,0.007283819869352853
1950,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Configure the cache to use our TM,no,undetermined,0,0,0,no,0.0071854451793596135,no,0.007223833319155583,no,0.006048267940375828,no,0.005587572700734985,no,0.005797556092775061,no,0.005212042247789215
1951,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Make sure JBC doesn't look one up,no,undetermined,0,0,0,no,0.0022451036687467186,no,0.0020025682804773464,no,0.0018575236847869214,no,0.0016556538768065152,no,0.001669336445973794,no,0.0014847650700685092
1952,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we finish all the ""removes"" first to take care of possible unique // constraints and so that we can take better advantage of batching",no,undetermined,0,0,0,no,0.00482914425969977,no,0.007511448548046152,no,0.007072769072817721,no,0.006288488663249091,no,0.0061479865349725734,no,0.005474846938293009
1953,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//use a combination of foreign key columns and pk columns, since //the ordering of removal and addition is not guaranteed when //a child moves from one parent to another",no,undetermined,0,0,0,no,0.014410303542486454,no,0.010976296063592864,no,0.009089568464721299,no,0.00805672700863416,no,0.007997838080000912,no,0.00728386227406351
1954,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Make sure we don't re-release the same cache,no,undetermined,0,0,0,no,0.006260508962620341,no,0.007316747044679576,no,0.0059562585582988445,no,0.004865960509413664,no,0.005053376289697805,no,0.004500354832047683
1955,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// We use a different delegate than the non-optimistic superclass default,no,undetermined,0,0,0,no,0.002760823037076127,no,0.0020531682214349404,no,0.0013442213354925782,no,0.0013134701216734113,no,0.0013139606117497451,no,0.0011569916013546707
1956,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we have something like : ""lhs [op] ?""",no,undetermined,0,0,0,no,0.007428086713009051,no,0.004657723714178367,no,0.0041835265364248775,no,0.004073427550659469,no,0.004138688681650026,no,0.003770155761390731
1957,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// don't create a unique key, 'cos some // databases don't like a UK on nullable // columns //getCollectionTable().createUniqueKey( getIdentifier().getConstraintColumns() );",no,undetermined,0,0,0,no,0.008185616959291627,no,0.01097125565108027,no,0.009102159357749492,no,0.008070837554581437,no,0.007998854757627715,no,0.0072721803071161654
1958,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//isSet = collection.isSet(); //isSorted = collection.isSorted();,no,undetermined,0,0,0,no,0.026850631942288268,no,0.010987854291677125,no,0.009116478492186436,no,0.008059506149516407,no,0.0080006361457831,no,0.0072709006973769655
1959,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we know only the rhs-hand type, so use that",no,undetermined,0,0,0,no,0.0038583728563434424,no,0.010980534443666439,no,0.00872919998442098,no,0.008005350783293667,no,0.007822351104290488,no,0.007127504322824927
1960,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If JBC is using INVALIDATION, we don't want to propagate changes. // We use the Timestamps cache to manage invalidation",no,undetermined,0,0,0,no,0.010481799618917941,no,0.010978016114426949,no,0.009112331659945055,no,0.00806914587386559,no,0.00800755067051954,no,0.007283015766466238
1961,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// long,no,undetermined,0,0,0,no,0.005422836097453547,no,0.006703763765115291,no,0.00632125031517745,no,0.006396717450880861,no,0.006350394392058399,no,0.005722414463565485
1962,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Don't hold the JBC node lock throughout the tx, as that // prevents updates // Add a zero (or low) timeout option so we don't block // waiting for tx's that did a put to commit",no,undetermined,0,0,0,no,0.003901101821290587,no,0.0031507074841580877,no,0.0022183011660631626,no,0.001930821332777354,no,0.0019697559832430587,no,0.0016884092967725886
1963,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Double check the distributed cache,no,undetermined,0,0,0,no,0.0009206359313225801,no,0.001620117308404782,no,0.0014644426699265572,no,0.0013609207466698592,no,0.0014531968214936085,no,0.0012709892485936872
1964,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Get an exclusive right to update JBC for this key from this node.,no,undetermined,0,0,0,no,0.05297635858377985,no,0.010986242148555866,no,0.009106640150923648,no,0.008072099072689062,no,0.007983063827048623,no,0.007267488322687245
1965,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// one or the other needs to be a datetime for us to get into this method in the first place...,no,undetermined,0,0,0,no,0.08685328638281982,no,0.010973399798346894,no,0.009096320417113968,no,0.008062182005500216,no,0.008006200985354182,no,0.007284924241251153
1966,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// #2,no,undetermined,0,0,0,no,0.0036523008980329486,no,0.005504726900042388,no,0.006461868463342029,no,0.00788716525811375,no,0.0079850989855144,no,0.007268429553841039
1967,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// nothing to do,no,undetermined,0,0,0,no,0.001691737198763833,no,0.0016995465734521789,no,0.0012583296835915931,no,0.0010336609003169827,no,0.0010229564290254076,no,0.0008898242716306033
1968,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Add the condition to the join sequence that qualifies the indexed element.,no,undetermined,0,0,0,no,0.005803947641015017,no,0.0024736467917334127,no,0.002019194261980032,no,0.0025235091757872326,no,0.0025620821536953896,no,0.002304806051208501
1969,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Sometimes use the element table alias, sometimes use the... umm... collection table alias (many to many)",no,undetermined,0,0,0,no,0.013531275015514805,no,0.00839717680768351,no,0.006562658598842583,no,0.004828661591000971,no,0.004758576959601547,no,0.004334025166821731
1970,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Now, set the text for this node.  It should be the element columns.",no,undetermined,0,0,0,no,0.01456689473089018,no,0.010971157527907548,no,0.009080380640410064,no,0.008059280300808233,no,0.007987387694291774,no,0.007268211270953351
1971,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Get the function return value type, based on the type of the first argument.",no,undetermined,0,0,0,no,0.0033555249588970585,no,0.0036247011489108642,no,0.003147665076654884,no,0.002580736918124806,no,0.0025131277030349675,no,0.0024863727907842056
1972,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This will call initialize(tok)!,no,undetermined,0,0,0,no,0.013030921474597775,no,0.010974223364506427,no,0.009078531298472768,no,0.008050063102110813,no,0.00798659538472081,no,0.007282078855586951
1973,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// mutation depends on the types of nodes invloved...,no,undetermined,0,0,0,no,0.018462422125017985,no,0.010990554465412708,no,0.009078651707813423,no,0.008067820544403383,no,0.007974789127465074,no,0.007280904752482775
1974,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// logic operators by definition resolve to booleans,no,undetermined,0,0,0,no,0.015413524442377731,no,0.010998584533431026,no,0.009090482853302545,no,0.008048262392785721,no,0.008000221741785017,no,0.007277258149559117
1975,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Generated select expressions are already resolved, nothing to do.",no,undetermined,0,0,0,no,0.009808946064526921,no,0.007047221270284792,no,0.006248504115431725,no,0.006791900007987358,no,0.006738012245132998,no,0.006134975909980281
1976,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The path may be a reference to an alias defined in the parent query.,no,undetermined,0,0,0,no,0.006421912016719785,no,0.0064713164905281844,no,0.004817324898064508,no,0.004493704648362391,no,0.0047155142645650475,no,0.004329790142061114
1977,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The HQL class alias refers to the class name.,no,undetermined,0,0,0,no,0.0038941308364902815,no,0.0023149529190065947,no,0.001920076985532517,no,0.001625688788393101,no,0.0016265790030458092,no,0.00143679388057977
1978,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Associate the table alias with the element.,no,undetermined,0,0,0,no,0.020201426474571568,no,0.010981281673601165,no,0.00910741033984215,no,0.00807354624317417,no,0.008000207777475838,no,0.007283930362773623
1979,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// try the parent FromClause...,no,undetermined,0,0,0,no,0.0017341856501250773,no,0.0015821926832641081,no,0.0013421621137374106,no,0.001177481735809846,no,0.001185595906121455,no,0.0010440564072868512
1980,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Make sure that all from elements registered with this FROM clause are actually in the AST.,no,undetermined,0,0,0,no,0.02978396604143748,no,0.010993821911899786,no,0.009109825003077669,no,0.008051928871257313,no,0.008001714045583464,no,0.0072859402718682435
1981,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Invoke setScalarColumnText on each constructor argument.,no,undetermined,0,0,0,no,0.001320515770784024,no,0.0014215859755537864,no,0.001153033021261117,no,0.0010193855479633132,no,0.0010249186135697916,no,0.0011028784192198045
1982,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Collect the select expressions, skip the first child because it is the class name.",no,undetermined,0,0,0,no,0.0004833632243295469,no,0.00026936863710018725,no,0.00016570277226010357,no,0.00015585361768689972,no,0.00015782656087299065,no,0.0001345482962202402
1983,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// return an empty Type array,no,undetermined,0,0,0,no,0.008656875486245056,no,0.006726089932140897,no,0.00524336099334272,no,0.004638654149580242,no,0.00465503498613711,no,0.004243280480679417
1984,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// We ensure ASYNC semantics (JBCACHE-1175),no,undetermined,0,0,0,no,0.010672084416460111,no,0.010207237524708678,no,0.009087939916146237,no,0.008042645379899328,no,0.007992117328035495,no,0.007265630517928875
1985,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if there is no order by, make one",no,undetermined,0,0,0,no,0.0005135056842181156,no,0.0003273517456338131,no,0.00020327001957339499,no,0.00015329965432067674,no,0.00015243771599710148,no,0.00012894686852708712
1986,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Initial load from JBC,no,undetermined,0,0,0,no,0.00020585911860368148,no,0.00023063761045783262,no,0.0001863789654166071,no,0.00016206056865001906,no,0.00016046507995174115,no,0.00013666751229071653
1987,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Find the WHERE; if there is no WHERE, find the FROM...",no,undetermined,0,0,0,no,0.0023948949912498754,no,0.0017812888981226288,no,0.0013336907114435994,no,0.0010327946579030958,no,0.0012540165147516317,no,0.0011089825329192626
1988,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Now, inject the newly built ORDER BY into the tree",no,undetermined,0,0,0,no,0.014133152829914692,no,0.010999414196694115,no,0.009091134004864214,no,0.00804596324263714,no,0.007975406139383672,no,0.007264280068610528
1989,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// logic operators by definition resolve to boolean.,no,undetermined,0,0,0,no,0.005453743384448096,no,0.0039352009422551956,no,0.002883662610565387,no,0.0023078031410747914,no,0.002272536476672296,no,0.0019822851580157913
1990,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Render the identifier select fragment using the table alias.,no,undetermined,0,0,0,no,0.005133926186625637,no,0.0030884932983595106,no,0.0026254955245501744,no,0.0024576117613030585,no,0.0024062763510024955,no,0.002128059303368889
1991,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Class names in the FROM clause result in a JoinSequence (the old FromParser does this).,no,undetermined,0,0,0,no,0.011362683411541211,no,0.01098745465968686,no,0.009097278901664648,no,0.008060796290383641,no,0.007994334778930162,no,0.0072876222525757595
1992,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// will still be issued when it used to be null,no,undetermined,0,0,0,no,0.05732357992617926,no,0.01099195090373293,no,0.009099604918861115,no,0.008038370131249566,no,0.00798683112800543,no,0.0072658182355275405
1993,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Otherwise, use the property mapping.",no,undetermined,0,0,0,no,0.003187148732775454,no,0.005881455027216576,no,0.0038808562064152926,no,0.00329500107226603,no,0.004446270552040159,no,0.004057916326423402
1994,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// We ensure ASYNC semantics (JBCACHE-1175),no,undetermined,0,0,0,no,0.010672084416460111,no,0.010207237524708678,no,0.009087939916146237,no,0.008042645379899328,no,0.007992117328035495,no,0.007265630517928875
1995,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The standard comparator types are not Serializable but are singletons,no,undetermined,0,0,0,no,0.020190992819500767,no,0.010973563689518996,no,0.00908018901901472,no,0.008055115214030644,no,0.007976394030887724,no,0.007265432935416262
1996,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ignore!,no,undetermined,0,0,0,no,9.704158853977813e-05,no,0.0001028234778214713,no,8.618023972266878e-05,no,7.500503008764863e-05,no,7.548377628387645e-05,no,6.317234672920366e-05
1997,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ignore it,no,undetermined,0,0,0,no,0.00030777415557510876,no,0.0003162494532172495,no,0.0002467722531601372,no,0.00020355913896470565,no,0.00019974574344350894,no,0.0001699757441878991
1998,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Generate implicit joins, only if necessary.",no,undetermined,0,0,0,no,0.007750049527631935,no,0.010965808029654767,no,0.009096497214147055,no,0.008056636706961271,no,0.00797561724716433,no,0.007286440517002092
1999,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If the property is a special collection property name, return a CollectionPropertyMapping.",no,undetermined,0,0,0,no,0.008350725323711193,no,0.004092423934108011,no,0.0034103613496501337,no,0.00285323917924572,no,0.0033104472471818893,no,0.0031591683488276343
2000,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Collection of components.,no,undetermined,0,0,0,no,0.0031611396724278928,no,0.0025406162300309234,no,0.0013933339405530797,no,0.001242010622332581,no,0.0012043418363320635,no,0.0010591470517531914
2001,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// construct the cache,no,undetermined,0,0,0,no,0.0013398480285304124,no,0.0015181885788258997,no,0.0010628330101907183,no,0.000963201624195027,no,0.001045632116210409,no,0.0009167752956567441
2002,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// local cache, so we use synchronization",no,undetermined,0,0,0,no,0.0035332354333494098,no,0.0035426043736086973,no,0.00284154441435436,no,0.0024122965152798474,no,0.0024491761039495234,no,0.002147029497716677
2003,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//ie. 60 seconds,no,undetermined,0,0,0,no,0.004603467794970453,no,0.005897079736238532,no,0.006208208776564539,no,0.006702211587947246,no,0.006694046705268846,no,0.006074938059811496
2004,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// We need to seed the version value as part of this bulk insert,no,undetermined,0,0,0,no,0.007744642842350718,no,0.005571498866213101,no,0.004658286429723511,no,0.003942094168776295,no,0.003885914443061765,no,0.0034661118857213175
2005,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// make sure the lhs is ""assignable""...",no,undetermined,0,0,0,no,0.0012782254415041202,no,0.0013228790611384319,no,0.0011524851226256615,no,0.0011355911238204292,no,0.0011760913898730214,no,0.0010503591974938091
2006,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// false indicates to not generate parens around the assignment,no,undetermined,0,0,0,no,0.01521671480745228,no,0.009082762165780417,no,0.008151132646369299,no,0.007633166750910231,no,0.007998920203356527,no,0.007278177119791163
2007,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// currently allowed...,no,undetermined,0,0,0,no,0.01318712093974709,no,0.010972030101826066,no,0.009089759575107301,no,0.0080548001828568,no,0.008005587181080262,no,0.0072753483782629766
2008,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// in non-select queries, the only time we should need to join is if we are in a subquery from clause",no,undetermined,0,0,0,no,0.026334511455104244,no,0.01098713460640555,no,0.009089947872893736,no,0.008042356880024321,no,0.007984915803234072,no,0.007277207788467313
2009,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//return classAlias == null ? className : classAlias;,no,undetermined,0,0,0,no,0.0008723081553093305,no,0.0009975067213408577,no,0.0008413205839856209,no,0.0007734356779460484,no,0.0007757522675938051,no,0.0006282524493029401
2010,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This is an explicit FROM element.,no,undetermined,0,0,0,no,0.03805997839942361,no,0.011001140648425087,no,0.00910376197662618,no,0.008058487489384111,no,0.008007896985197297,no,0.007285940054707914
2011,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//swaldman 2006-08-28: define c3p0-style configuration parameters for initialPoolSize, which //                     hibernate sensibly lets default to minPoolSize, but we'll let users //                     override it with the c3p0-style property if they want.",no,undetermined,0,0,0,no,0.00855832605932659,no,0.0065851218553035175,no,0.005368309194412102,no,0.005111068640440539,no,0.005046629063764027,no,0.004484277499578845
2012,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ParameterContainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.005867700963281545,no,0.007493263746119705,no,0.007138832996983271,no,0.00758391619001369,no,0.007580076956105815,no,0.006900524203758815
2013,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Fetch can't be used with scroll() or iterate().,no,undetermined,0,0,0,no,0.05155759239666802,no,0.010965408088472949,no,0.009107104788429146,no,0.008070980440899258,no,0.00799226806952263,no,0.007272234819446736
2014,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// If it's not implied or it is implied and it's a many to many join where the target wasn't found.,no,undetermined,0,0,0,no,0.009252121719234813,no,0.004210728864026211,no,0.0029404979306961927,no,0.002990796724206142,no,0.0030326797425641668,no,0.002698716539730379
2015,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we need to wrtap the param in a cast(),no,undetermined,0,0,0,no,0.4620370256037844,no,0.31560597704010984,no,0.2959184795834023,no,0.28922130995312084,no,0.28502146380004184,no,0.279436191363998
2016,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Since this is an explicit FROM element, it can't be implied in the FROM clause.",no,undetermined,0,0,0,no,0.022641070436547603,no,0.010973228827307134,no,0.009091031475821854,no,0.008050103713030107,no,0.007977280969791107,no,0.007262584719072869
2017,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Do nothing, eplicit from elements are *always* in the projection list.",no,undetermined,0,0,0,no,0.0030450062804277273,no,0.004233629310963435,no,0.0033321073107817805,no,0.002773623241435707,no,0.002740332349584023,no,0.0024153305817899155
2018,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// propertyName refers to something like collection.size...,no,undetermined,0,0,0,no,0.01946384823871543,no,0.010957657897128733,no,0.0091101387322769,no,0.008061778561752294,no,0.007996016811608064,no,0.0072806735947922915
2019,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// property name is a sub-path of a component...,no,undetermined,0,0,0,no,0.01635534784087125,no,0.010218124744145346,no,0.009105709911355038,no,0.008057624056591757,no,0.00800527450838171,no,0.007269875027775273
2020,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Always add the collection's query spaces.,no,undetermined,0,0,0,no,0.008889692992689645,no,0.008874909812471467,no,0.006096280747010521,no,0.004988332075900518,no,0.004601905229364722,no,0.004234300535671428
2021,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// nothing to do; even if the operand is a parameter, no way we could // infer an appropriate expected type here",no,undetermined,0,0,0,no,0.22211553969251727,no,0.22974573703812304,no,0.22922429066394304,no,0.2212624465371573,no,0.22251853063311097,no,0.2171936946262013
2022,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Notify the FROM element that it is being referenced by the select.,no,undetermined,0,0,0,no,0.010713817638214052,no,0.007683593113470967,no,0.008792625470830952,no,0.008049408872435956,no,0.00800763530509905,no,0.007285734122551002
2023,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// logic operators by definition resolve to booleans,no,undetermined,0,0,0,no,0.015413524442377731,no,0.010998584533431026,no,0.009090482853302545,no,0.008048262392785721,no,0.008000221741785017,no,0.007277258149559117
2024,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// DotNode uses null here...,no,undetermined,0,0,0,no,0.04190706935135696,no,0.010969230245762627,no,0.009085482492263503,no,0.008065315367359115,no,0.00800433437067233,no,0.0072692210825978385
2025,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// We represent a from-clause alias,no,undetermined,0,0,0,no,0.014535972285240282,no,0.010989268162015987,no,0.009111620001382433,no,0.008059224562493233,no,0.00799374723751365,no,0.007289989182853828
2026,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we are the RHS of the DOT representing a naked comp-prop-ref,no,undetermined,0,0,0,no,0.006650368280971825,no,0.00640205543710164,no,0.00584391462823457,no,0.00552415255973941,no,0.004904646501399417,no,0.004235229614442305
2027,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we represent a naked (simple) prop-ref,no,undetermined,0,0,0,no,0.0023284646680940594,no,0.0027300961202896524,no,0.002477573737737455,no,0.0024475544537091508,no,0.002316094833847038,no,0.0019250182657123485
2028,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// EARLY EXIT!!!  return so the resolve call explicitly coming from DotNode can // resolve this...,no,undetermined,0,0,0,no,0.03200080360604577,no,0.010985038434437936,no,0.009098578560902766,no,0.008063721594060652,no,0.007986792080276691,no,0.007273750777893087
2029,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// assume this ident's text does *not* refer to a property on the given persister,no,undetermined,0,0,0,no,0.043218700134184614,no,0.010972729805748545,no,0.009108746496704808,no,0.008042497312059527,no,0.007990741049582575,no,0.007267146678092154
2030,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// just ignore it for now, it'll get resolved later...",no,undetermined,0,0,0,no,0.004059895287537851,no,0.004077771741033302,no,0.0033262709248236236,no,0.0028466964931947547,no,0.002730101183222689,no,0.0024611565561743196
2031,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// This is not actually a constant, but a reference to FROM element.",no,undetermined,0,0,0,no,0.2068783015445837,no,0.15828358295545375,no,0.13506495561601276,no,0.13969584890086834,no,0.13659322713787372,no,0.13244385844787984
2032,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// check to see if our ""propPath"" actually // represents a property on the persister",no,undetermined,0,0,0,no,0.01022067144349868,no,0.006918241336288005,no,0.005983409278913461,no,0.004194988523229729,no,0.004227389856694231,no,0.003843434955783283
2033,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// these pieces are needed for usage in select clause,no,undetermined,0,0,0,no,0.013735253500685888,no,0.010983442365859582,no,0.009098469115040636,no,0.008055097803884765,no,0.008001797244157961,no,0.007271929324411099
2034,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// assume we do *not* refer to a property on the given persister,no,undetermined,0,0,0,no,0.02848781364836601,no,0.010462254480904955,no,0.008397388699035769,no,0.007072873338457898,no,0.006893039982950233,no,0.00616607233907491
2035,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// TRUE if the pool is borrowed from the outside, FALSE if we used to create it",no,undetermined,0,0,0,no,0.026018908734388217,no,0.010999170952094493,no,0.009101654680617702,no,0.008048653649971543,no,0.007981235114609827,no,0.007285955277987119
2036,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// assume we do *not* refer to a property on the given persister,no,undetermined,0,0,0,no,0.02848781364836601,no,0.010462254480904955,no,0.008397388699035769,no,0.007072873338457898,no,0.006893039982950233,no,0.00616607233907491
2037,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// get a connection from the pool (thru DriverManager, cfr. Proxool doc)",no,undetermined,0,0,0,no,0.004518509610316989,no,0.005178984139896223,no,0.005150364272293537,no,0.004780587577203365,no,0.004794179929237107,no,0.004334093964102809
2038,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// set the Transaction Isolation if defined,no,undetermined,0,0,0,no,0.0010984686854521562,no,0.0011673816918822569,no,0.0009716389636366348,no,0.0009052120255546202,no,0.0012140435077492024,no,0.0010770175946331639
2039,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// naked property-refs cannot be used with an aliased from element,no,undetermined,0,0,0,no,0.011893381469349967,no,0.010974939281589506,no,0.009083508629003378,no,0.008042006377142486,no,0.00799321178670401,no,0.007263923262268347
2040,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// do *not* over-write the column text, as that has already been // ""rendered"" during resolve",no,undetermined,0,0,0,no,0.012510734557195171,no,0.010995900185650533,no,0.009097138771822817,no,0.008054536896321006,no,0.00798742557716341,no,0.0072765657747840065
2041,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Look up class name using the first identifier in the path.,no,undetermined,0,0,0,no,0.0012774499186234659,no,0.0011447369944420289,no,0.0009178964375839794,no,0.0007656693608909439,no,0.0007498646121811213,no,0.0006459005595696253
2042,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// toggle autoCommit to false if set,no,undetermined,0,0,0,no,0.003134109699402219,no,0.0028749054534710173,no,0.00284708162676485,no,0.00292945790064548,no,0.002876991517786334,no,0.002577611690878946
2043,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Add to the query spaces.,no,undetermined,0,0,0,no,0.00840229777756101,no,0.008702682531239127,no,0.007260548003549322,no,0.006619781434335852,no,0.0062507891585364215,no,0.005780517354100249
2044,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// return the connection,no,undetermined,0,0,0,no,0.012681429320485275,no,0.008469060242219611,no,0.007907274131252091,no,0.0071133262662743295,no,0.007138409836921175,no,0.006507506886286473
2045,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If the from element isn't in the same clause, create a new from element.",no,undetermined,0,0,0,no,0.01083873564201515,no,0.006068165541137916,no,0.005156189856845826,no,0.004446621327090209,no,0.004418553371339341,no,0.00399947293797353
2046,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Correlated subqueries create 'special' implied from nodes // because correlated subselects can't use an ANSI-style join,no,undetermined,0,0,0,no,0.0023731311068764917,no,0.0019472116296298185,no,0.0017151394377961369,no,0.0015168453652691018,no,0.0015182390492707932,no,0.0013366086260171526
2047,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// super-duper-classic-parser-regression-testing-mojo-magic...,no,undetermined,0,0,0,no,0.04002796600124407,no,0.010984577180996095,no,0.009101726964010836,no,0.008059099046994955,no,0.007993823156776294,no,0.007283858686892075
2048,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Get the configurator files (if available),no,undetermined,0,0,0,no,0.0006558651338261654,no,0.0011369383221278297,no,0.0009226588345412908,no,0.0008478579684200823,no,0.0008682966864754153,no,0.000782313413795862
2049,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// A collection of entities...,no,undetermined,0,0,0,no,0.01424563797307711,no,0.01099407154553628,no,0.008287651033950624,no,0.006922850888736882,no,0.0067594032125194835,no,0.006114603601827151
2050,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// A collection of components...,no,undetermined,0,0,0,no,0.0031611396724278928,no,0.0025406162300309234,no,0.0013933339405530797,no,0.001242010622332581,no,0.0012043418363320635,no,0.0010591470517531914
2051,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Default the Proxool alias setting,no,undetermined,0,0,0,no,0.00017813733161960822,no,0.0001566558090343572,no,0.00012347486629084523,no,9.98513874272907e-05,no,0.00010254005193961398,no,8.626934585859523e-05
2052,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// A collection of scalar elements...,no,undetermined,0,0,0,no,0.007086869183514487,no,0.005700003563980941,no,0.0031694243779541017,no,0.0028748714087033856,no,0.002822981412538726,no,0.002483213237978205
2053,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Validate that an alias name was provided to determine which pool to use,no,undetermined,0,0,0,no,0.018457115586105535,no,0.010955559866664069,no,0.00908760148501693,no,0.008055517133609727,no,0.007995931048178641,no,0.007283103404304901
2054,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// We only build caches if *none* were passed in.  Passing in // caches counts as a clear statement of exactly what is wanted,no,undetermined,0,0,0,no,0.02478033162301226,no,0.010976776605994179,no,0.009108763866930592,no,0.008057716848406548,no,0.007988834170591073,no,0.007260056547125925
2055,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Validate that an alias name was provided to determine which pool to use,no,undetermined,0,0,0,no,0.018457115586105535,no,0.010955559866664069,no,0.00908760148501693,no,0.008055517133609727,no,0.007995931048178641,no,0.007283103404304901
2056,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Don't include sub-classes for implied collection joins or subquery joins.,no,undetermined,0,0,0,no,0.005131287645469769,no,0.00847412943493051,no,0.006788861866134846,no,0.006542651776781472,no,0.006603748104824627,no,0.006017947296961465
2057,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Treat explict from elements in sub-queries properly.,no,undetermined,0,0,0,no,0.005230148091960071,no,0.008665742150200882,no,0.007443887549516472,no,0.007241616372433227,no,0.007362235315630362,no,0.006723454346113912
2058,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// semantic action handling ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.005942581884985739,no,0.007532185527520471,no,0.009107403805109835,no,0.008049301699174043,no,0.008008540783254317,no,0.0072882013420317495
2059,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Append the stem to the proxool pool alias,no,undetermined,0,0,0,no,0.005484174934999378,no,0.004464793486893717,no,0.0034710208743729213,no,0.002759201029137365,no,0.002802252659782994,no,0.002490658458293482
2060,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Configured using the JAXP Configurator,no,undetermined,0,0,0,no,0.003977995777039227,no,0.004607229103146387,no,0.0044422981622454375,no,0.004550735479961555,no,0.004602229609934758,no,0.004216955013420103
2061,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Append the stem to the proxool pool alias,no,undetermined,0,0,0,no,0.005484174934999378,no,0.004464793486893717,no,0.0034710208743729213,no,0.002759201029137365,no,0.002802252659782994,no,0.002490658458293482
2062,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Append the stem to the proxool pool alias,no,undetermined,0,0,0,no,0.005484174934999378,no,0.004464793486893717,no,0.0034710208743729213,no,0.002759201029137365,no,0.002802252659782994,no,0.002490658458293482
2063,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Configured using the Properties File Configurator,no,undetermined,0,0,0,no,0.0047031057830953975,no,0.004621140556509959,no,0.004093229951960408,no,0.003991616047373178,no,0.004082353630825235,no,0.0037471260614163502
2064,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Remember Isolation level,no,undetermined,0,0,0,no,0.011558043615158732,no,0.01096327244072614,no,0.009099180372464488,no,0.008041275472185338,no,0.008010326695979734,no,0.00728923005794156
2065,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// If the provider was leeching off an existing pool don't close it,no,undetermined,0,0,0,no,0.0008642352385022298,no,0.0005988072119990597,no,0.0007773994856268364,no,0.0006440595262917778,no,0.0006476631184041876,no,0.0005694928521796031
2066,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// NOTE: Because we're using ASTUtil.createParent(), the tree must be created from the bottom up. // IS EMPTY x => (EXISTS (QUERY (SELECT_FROM (FROM x) ) ) )",no,undetermined,0,0,0,no,0.011574543274175425,no,0.010988475127853333,no,0.009101321133382986,no,0.008050887344489947,no,0.007989137984364354,no,0.007272365676833069
2067,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// the ""root from-element"" in correlated subqueries do need this piece",no,undetermined,0,0,0,no,0.03350391279687033,no,0.010985468578741506,no,0.009103233235499513,no,0.008058937336399443,no,0.0079756169925186,no,0.007283755824031862
2068,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Create the FROM element for the target (the elements of the collection).,no,undetermined,0,0,0,no,0.0005293104811325227,no,0.0003683181236342308,no,0.0002625885009168704,no,0.00021982287859108972,no,0.00022234086829104674,no,0.0001927640652604017
2069,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If the join is implied, then don't include sub-classes on the element.",no,undetermined,0,0,0,no,0.0067642179385090494,no,0.0031992399118042037,no,0.003054182589569526,no,0.0035430319765158537,no,0.0036261020077978665,no,0.0033063168332608654
2070,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0011622327290709787,no,0.0011638242245380203,no,0.0011173140002844785,no,0.0014774358081173686,no,0.0015026092631850257,no,0.00133634356530595
2071,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// not really a many-to-one association *necessarily*,no,undetermined,0,0,0,no,0.028644985096201555,no,0.010982367289574134,no,0.009098436569747159,no,0.008077412871031444,no,0.008006768086390456,no,0.007276016261856188
2072,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// The associated entity is implied, but it must be included in the FROM. // The collection alias is the role.",no,undetermined,0,0,0,no,0.028524508263928258,no,0.010987005131551392,no,0.009095916523703155,no,0.008058297699130372,no,0.00798190201454235,no,0.007282073671221318
2073,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// not really a many-to-one association *necessarily*,no,undetermined,0,0,0,no,0.028644985096201555,no,0.010982367289574134,no,0.009098436569747159,no,0.008077412871031444,no,0.008006768086390456,no,0.007276016261856188
2074,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//always overwrite nonversioned data,no,undetermined,0,0,0,no,0.0007353254366577268,no,0.0011030136883669504,no,0.0009397506146131134,no,0.0008881605539146712,no,0.0008457937690391058,no,0.0007399693137704395
2075,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Tag this node as a JOIN. // Don't include subclasses in the join. // This is a clollection join.,no,undetermined,0,0,0,no,0.007558752116435708,no,0.004066598294898698,no,0.0036928818665971828,no,0.005722682914692678,no,0.005990743549717425,no,0.00544984829400262
2076,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//public Currency getCurrency(int col) throws HibernateException;,no,undetermined,0,0,0,no,0.013294764904561083,no,0.010975252633111818,no,0.009109461564026007,no,0.008041491482263866,no,0.008000011906076897,no,0.007266389922443531
2077,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Get the class name of the associated entity.,no,undetermined,0,0,0,no,0.0020349356434325476,no,0.004028303241223951,no,0.004045780584475439,no,0.0037624739823237823,no,0.0036334363447839504,no,0.003245398796049367
2078,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// default is POJO,no,undetermined,0,0,0,no,0.00022839757536444207,no,0.00025351357425498864,no,0.0002074199966172619,no,0.00023757944656916226,no,0.00023822040892236676,no,0.0002040103592421303
2079,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// use setParameter for null values,no,undetermined,0,0,0,no,0.0005621904046167827,no,0.0008375700564516569,no,0.0005754900457765063,no,0.00044535297514720494,no,0.00043954418887485965,no,0.0003779892890988839
2080,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//  origin, path, implied, columns, classAlias,",no,undetermined,0,0,0,no,0.0009661891621824307,no,0.0024732116852365193,no,0.0025119857214967374,no,0.0026916170025607995,no,0.0027089286314494043,no,0.002421080977317723
2081,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*implied*/,no,undetermined,0,0,0,no,0.0027925249097006262,no,0.0030406756716885495,no,0.0033144067849769816,no,0.0036861030040391623,no,0.0037843093968599234,no,0.0033667389644166635
2082,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// For implied many-to-many, just add the end join.",no,undetermined,0,0,0,no,0.010786310674275372,no,0.004117747665027187,no,0.0029818006561982305,no,0.0029659246307041877,no,0.002925067888903571,no,0.002600864917527416
2083,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Interceptor returned null, so do the dirtycheck ourself, if possible",no,undetermined,0,0,0,no,0.0017454766623282375,no,0.0014110332077785107,no,0.0013854889762392087,no,0.0013165010699393088,no,0.0013420890779524304,no,0.0011751756875094674
2084,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// use setParameter for null values,no,undetermined,0,0,0,no,0.0005621904046167827,no,0.0008375700564516569,no,0.0005754900457765063,no,0.00044535297514720494,no,0.00043954418887485965,no,0.0003779892890988839
2085,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Note this!!,no,undetermined,0,0,0,no,0.23314777444747162,no,0.20158162752290765,no,0.14002506781258395,no,0.14755220049837162,no,0.14516398948849454,no,0.1411645830270814
2086,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0011622327290709787,no,0.0011638242245380203,no,0.0011173140002844785,no,0.0014774358081173686,no,0.0015026092631850257,no,0.00133634356530595
2087,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0011622327290709787,no,0.0011638242245380203,no,0.0011173140002844785,no,0.0014774358081173686,no,0.0015026092631850257,no,0.00133634356530595
2088,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Error message constants.,no,undetermined,0,0,0,no,0.0033576106705782644,no,0.0036252293210929055,no,0.0030039989327010816,no,0.002614553063023304,no,0.0025997731801084448,no,0.0023308596115535615
2089,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the standard SQL function name is current_timestamp...,no,undetermined,0,0,0,no,0.0008199476926709743,no,0.001709645598685454,no,0.0014659017560901895,no,0.0013385469722373528,no,0.001361766397976663,no,0.0012084006063521574
2090,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//scan for next non-whitespace token,no,undetermined,0,0,0,no,0.002831344334548604,no,0.0029082288810868156,no,0.0026085701152749074,no,0.0023801537547031223,no,0.0024334703471039568,no,0.0021679183040379923
2091,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This causes the factory to instantiate the desired class.,no,undetermined,0,0,0,no,0.016668936017457014,no,0.010978151387530471,no,0.009093672688561136,no,0.00806803697158394,no,0.007992632885072768,no,0.00727022556012612
2092,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//private Type[] sqlResultTypes;,no,undetermined,0,0,0,no,0.012141228051887035,no,0.010533838067970891,no,0.007715419788791108,no,0.00662333553129375,no,0.006542905998255843,no,0.005948455330970214
2093,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//private CacheEntry cacheEntry;,no,undetermined,0,0,0,no,0.008002389220290595,no,0.01097063895582141,no,0.009087117510453123,no,0.008053560830419028,no,0.007999957746860166,no,0.007278602338717556
2094,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Make 100% certain that this is called before any subsequent ScheduledUpdate.afterTransactionCompletion()!!,no,undetermined,0,0,0,no,0.03047991364411061,no,0.010962861015519083,no,0.009087413805642016,no,0.008053046171362961,no,0.007976703517376582,no,0.007263063777723891
2095,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//		TypeFactory.deepCopy( currentState, propTypes, persister.getPropertyUpdateability(), deletedState, session );",no,undetermined,0,0,0,no,0.009646650797218263,no,0.006117528218268121,no,0.005973586537219306,no,0.00559213104195421,no,0.005535022321184943,no,0.005006472816506261
2096,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Frontbase has no known variation of a ""SELECT ... FOR UPDATE"" syntax...",no,undetermined,0,0,0,no,0.0029704975051823477,no,0.00534448590786165,no,0.0046453018220999846,no,0.004324010301597234,no,0.004302224576354089,no,0.00394615513687576
2097,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*public Type[] getSqlResultTypes() {
		return sqlResultTypes;
	}*/",no,undetermined,0,0,0,no,0.012513428471150967,no,0.008230187373062907,no,0.006141511260795592,no,0.005106635507737474,no,0.005024081788545445,no,0.004547734448483673
2098,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//sqlResultTypeList.addAll( constructorArgumentTypeList );,no,undetermined,0,0,0,no,0.010623840378431232,no,0.01095888498916301,no,0.009080947163431392,no,0.008043657073145378,no,0.007996740710250883,no,0.007274886831853027
2099,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//sqlResultTypeList.add( type );,no,undetermined,0,0,0,no,0.00506890563024546,no,0.00426559393702339,no,0.0034264454743560906,no,0.0029386435731294084,no,0.0028937609783202286,no,0.002773566770364189
2100,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Always add the type to the return type list.,no,undetermined,0,0,0,no,0.010828896332816574,no,0.00932463812418391,no,0.00908453772238329,no,0.007749500906623347,no,0.007730839265176781,no,0.007051159007233274
2101,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// have the entity entry perform post-update processing, passing it the // update state and the new version (if one).",no,undetermined,0,0,0,no,0.002819173478725399,no,0.0018533706966173053,no,0.0014814120956817194,no,0.00124242790551482,no,0.0011987965595974793,no,0.0010503839130746287
2102,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// this entity defines proeprty generation, so process those generated // values...",no,undetermined,0,0,0,no,0.007640919699962852,no,0.006470832860310297,no,0.00620745203405113,no,0.006071161151868927,no,0.0059388175980871994,no,0.005387825661539935
2103,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// add the fetched entities,no,undetermined,0,0,0,no,0.003302208941582751,no,0.0031366568209647535,no,0.0031158830926417353,no,0.00286792262227119,no,0.0029283118890878223,no,0.0026606137874114785
2104,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Get ready to start adding nodes.,no,undetermined,0,0,0,no,0.00446039133637241,no,0.004541771252668062,no,0.004165841123154279,no,0.003746473080057408,no,0.003615145879381274,no,0.0032718723597163013
2105,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//EARLY EXIT!,no,undetermined,0,0,0,no,0.0012308318987046829,no,0.0010243170538795194,no,0.0009095420391860735,no,0.0008708338326286836,no,0.0008757209531325773,no,0.0007785241760039121
2106,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*|| oj.getJoinable().consumesCollectionAlias() */,no,undetermined,0,0,0,no,0.0036523008980329486,no,0.005504726900042388,no,0.006461868463342029,no,0.00788716525811375,no,0.0079850989855144,no,0.007268429553841039
2107,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// just especially for the trivial collection filter,no,undetermined,0,0,0,no,0.010726722452133674,no,0.0076826372630556155,no,0.005804421700016126,no,0.005164703640954968,no,0.005369684248667071,no,0.004864003542840279
2108,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// need to look it up from the persistence-context,no,undetermined,0,0,0,no,0.026563603772166475,no,0.01098156652310193,no,0.009097365883936113,no,0.00803941410604957,no,0.007999634418872695,no,0.007276536885109629
2109,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//sort first by role name,no,undetermined,0,0,0,no,0.007413775365556881,no,0.006852371841236744,no,0.005356918081284043,no,0.004691276963377023,no,0.0042618181443522165,no,0.003824661678489289
2110,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// function support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0023047286275753045,no,0.010983142224724258,no,0.009079651306546255,no,0.008059410547735228,no,0.007999395300330291,no,0.007289683493370422
2111,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//update last non-whitespace token, if necessary",no,undetermined,0,0,0,no,0.0010133450685940913,no,0.0012509561815968377,no,0.001104069727310112,no,0.0009927294103407526,no,0.000992806474342796,no,0.0008695204757066218
2112,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//then by fk,no,undetermined,0,0,0,no,0.06378209710916441,no,0.010998295355037421,no,0.009095422136908683,no,0.008046184637348696,no,0.007979659320174458,no,0.007274932102177756
2113,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*sqlResultTypeList,*/",no,undetermined,0,0,0,no,0.0036523008980329486,no,0.005504726900042388,no,0.006461868463342029,no,0.00788716525811375,no,0.0079850989855144,no,0.007268429553841039
2114,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// nothing to do		,no,undetermined,0,0,0,no,0.001691737198763833,no,0.0016995465734521789,no,0.0012583296835915931,no,0.0010336609003169827,no,0.0010229564290254076,no,0.0008898242716306033
2115,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*ArrayList sqlResultTypeList,*/",no,undetermined,0,0,0,no,0.0051366002951081825,no,0.004407544370443829,no,0.004356182917960686,no,0.004678593722280239,no,0.004691535327549105,no,0.004233798508068304
2116,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// nothing to do,no,undetermined,0,0,0,no,0.001691737198763833,no,0.0016995465734521789,no,0.0012583296835915931,no,0.0010336609003169827,no,0.0010229564290254076,no,0.0008898242716306033
2117,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this method is called when a new non-null collection is persisted // or when an existing (non-null) collection is moved to a new owner,no,undetermined,0,0,0,no,0.061194988143429364,no,0.010972864532536554,no,0.009092047639766036,no,0.008062009067306544,no,0.00798574148507846,no,0.007269982494698156
2118,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//notAfterClassTokens.add("","");",no,undetermined,0,0,0,no,0.0022489375652719173,no,0.0025673895198015982,no,0.0020103593442279094,no,0.001793213280982257,no,0.00176609790574439,no,0.0018086116746016687
2119,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//beforeClassTokens.add(""new""); DEFINITELY DON'T HAVE THIS!!",no,undetermined,0,0,0,no,0.013902472193999411,no,0.010984898162216658,no,0.009086400252335314,no,0.008055302688652854,no,0.007991629340935351,no,0.007281885971457594
2120,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.003568339892969459,no,0.008376698813620563,no,0.0073742123328351065,no,0.008068392444027692,no,0.008004775321311485,no,0.007278763247404769
2121,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//TODO:,no,undetermined,0,0,0,no,0.01108450116238773,no,0.010983556682987627,no,0.00909444328901823,no,0.008067650457139275,no,0.007989377549034525,no,0.007263500918457884
2122,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// remove initial "", """,no,undetermined,0,0,0,no,0.00019871153213680862,no,0.00027497782011171414,no,0.00021310918938959497,no,0.0001870805727352054,no,0.00018396662685530788,no,0.00015704526812177264
2123,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Add the type to the list of returned sqlResultTypes.,no,undetermined,0,0,0,no,0.0028668888375532214,no,0.002394715615600268,no,0.002211220623624331,no,0.001953761528867608,no,0.0019353507865670328,no,0.0017126501794591069
2124,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Generate the select expression.,no,undetermined,0,0,0,no,0.008798274723045412,no,0.005514336949062294,no,0.004554279270405929,no,0.0037353770489773662,no,0.003711958807333591,no,0.0033186002387218393
2125,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// now update all changed or added rows fks,no,undetermined,0,0,0,no,0.0011787891635715478,no,0.0013398077332154442,no,0.00114301482962325,no,0.001110261918041188,no,0.0010885543365442645,no,0.0009964744766531584
2126,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//			boolean put = persister.getCache().insert(ck, cacheEntry);",no,undetermined,0,0,0,no,0.0020216645943073753,no,0.00206688934020491,no,0.0017839745959132096,no,0.0014943782839205082,no,0.0014711815114562459,no,0.0012872737795347011
2127,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// union subclass support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.027661476089544588,no,0.010957553951163507,no,0.009090775639043452,no,0.00805539203008553,no,0.008007334487590957,no,0.007260504609050486
2128,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Skip 'DISTINCT' and 'ALL', so we return the first expression node.",no,undetermined,0,0,0,no,0.0032850966585244645,no,0.001748910531956008,no,0.0013017344811430917,no,0.001080603935529374,no,0.0011381913825071132,no,0.000997252853699361
2129,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Generate the property select tokens.,no,undetermined,0,0,0,no,0.004790575307487199,no,0.003561240979705874,no,0.0029040844753307894,no,0.0026514808739893257,no,0.002656347516598785,no,0.0023721450492394758
2130,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Get the function name node.,no,undetermined,0,0,0,no,0.0006290108570526856,no,0.0016596243477618557,no,0.0014439403340321846,no,0.0012472510272631828,no,0.0013961657196600392,no,0.001243970586800301
2131,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_0,no,undetermined,0,0,0,no,0.0036523008980329486,no,0.00513915212545195,no,0.005027493849438599,no,0.005065922042797434,no,0.0050777015913364455,no,0.004591248132509578
2132,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// This handles HHH-354, where there is a strange property name in a where clause. // If the lookahead contains a DOT then something that isn't an IDENT...",no,undetermined,0,0,0,no,0.014503995140864433,no,0.005755701710995413,no,0.0044773214722246815,no,0.003912129645696806,no,0.004272317882700699,no,0.003851390091011984
2133,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Method expressions in a SELECT should always be considered scalar.,no,undetermined,0,0,0,no,0.013221758916316393,no,0.010992608678578946,no,0.009115861198965894,no,0.008059222135262532,no,0.007980603227327425,no,0.0072786793727035405
2134,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// areturn // return the value of the field,no,undetermined,0,0,0,no,0.003116686146855665,no,0.0023829169906140436,no,0.0018509806807717928,no,0.0016423939172240524,no,0.0014899800982609303,no,0.0013262522833984752
2135,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//do nothing - we only need to notify the cache...,no,undetermined,0,0,0,no,0.0063039058378314625,no,0.005872028890259888,no,0.00436845751672246,no,0.0034186529380549387,no,0.003429122323046799,no,0.0030068430896295416
2136,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//sort first by entity name,no,undetermined,0,0,0,no,0.0038224710503015854,no,0.002972611576921234,no,0.002544694975889234,no,0.0022732341445403574,no,0.0022274403330126073,no,0.001976123847657439
2137,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// If this is 'elements' then create a new FROM element.,no,undetermined,0,0,0,no,0.019981625959612434,no,0.010997485447718173,no,0.009095179091158461,no,0.008047833159649664,no,0.007980084152279654,no,0.007265287514583838
2138,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//then by id,no,undetermined,0,0,0,no,0.01579938899612913,no,0.01099627364600964,no,0.009114609101558133,no,0.008071520435973971,no,0.008000746436534239,no,0.007266826485322011
2139,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Not elements(x),no,undetermined,0,0,0,no,0.004281642092781458,no,0.005308584199093586,no,0.005060079174422722,no,0.004977743930331001,no,0.0049860923168218736,no,0.004504818688190744
2140,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Dialect function,no,undetermined,0,0,0,no,0.004706370426407339,no,0.01096511964367934,no,0.00909261978605513,no,0.008057671123002173,no,0.008008323717087706,no,0.007273877803572334
2141,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// to be safe...,no,undetermined,0,0,0,no,0.0019423949616536108,no,0.0017108789718571227,no,0.001274617490968528,no,0.0011525865597501763,no,0.0011440657686578517,no,0.001007948554740851
2142,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Collection 'property function',no,undetermined,0,0,0,no,0.002006050252302768,no,0.002671155781063163,no,0.0016712659843666205,no,0.0013962783239200233,no,0.0016277714723608458,no,0.001449433971662646
2143,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If the constant is an IDENT, figure out what it means...",no,undetermined,0,0,0,no,0.023635514080779983,no,0.010993805532898674,no,0.009112188121331756,no,0.008065166507610012,no,0.008009064102491924,no,0.007268199614857213
2144,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// no transformations took place, so handle it as we would a // non-instrumented class",no,undetermined,0,0,0,no,0.003386212532606295,no,0.003903872789385356,no,0.003672722037232584,no,0.003320006972919458,no,0.003329027035917481,no,0.0029539772339082205
2145,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// IDENT is a class alias in the FROM.,no,undetermined,0,0,0,no,0.011832853663194157,no,0.0051540088358485526,no,0.004354233841248428,no,0.0034492870383954076,no,0.0036262013490828754,no,0.003300697235825531
2146,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Resolve to an identity column.,no,undetermined,0,0,0,no,0.008207135120320475,no,0.007064745458928304,no,0.006400512602902571,no,0.006169451647634153,no,0.006234999699569009,no,0.005452649617416782
2147,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// see if the entry represents a class file,no,undetermined,0,0,0,no,0.00038762870810009017,no,0.0003985094192828063,no,0.00033713205440836017,no,0.00024418532957619436,no,0.00025347575836770085,no,0.00021705123755834401
2148,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Otherwise, it's a literal.",no,undetermined,0,0,0,no,0.010678766150964332,no,0.010992157314505802,no,0.007881769812184993,no,0.007803345272083052,no,0.00794785400655751,no,0.007253804849247681
2149,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the name of an entity class,no,undetermined,0,0,0,no,0.0061103402636620684,no,0.006040329337538371,no,0.0068886490238796545,no,0.006100745082338776,no,0.005980007255461771,no,0.005414212862386353
2150,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// see if the entry represents a class file,no,undetermined,0,0,0,no,0.00038762870810009017,no,0.0003985094192828063,no,0.00033713205440836017,no,0.00024418532957619436,no,0.00025347575836770085,no,0.00021705123755834401
2151,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//the class discriminator value,no,undetermined,0,0,0,no,0.0019517224606127547,no,0.0011017302830615859,no,0.0010228546725647293,no,0.0009870587217257855,no,0.0009754580325868974,no,0.0008502513244232892
2152,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Add a space before the display text.,no,undetermined,0,0,0,no,0.0002511348223738732,no,0.0002558308698197283,no,0.00022442597251671857,no,0.00018716066318046626,no,0.00018274060272971217,no,0.0001594839882789978
2153,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// intentionally empty,no,undetermined,0,0,0,no,0.0062029637849833775,no,0.006988658068479712,no,0.006647053667740506,no,0.0064179509147434715,no,0.00653565950775097,no,0.005941618381082593
2154,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Find or create the WHERE clause,no,undetermined,0,0,0,no,0.005327345022274255,no,0.005920368411165034,no,0.00508684476456171,no,0.004792538986535402,no,0.005073740278420704,no,0.004586811703906987
2155,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// child == parent.getFirstChild(),no,undetermined,0,0,0,no,0.0021166547922283085,no,0.002255788336004144,no,0.002165407110428333,no,0.0020842229370467867,no,0.0020609517096837325,no,0.0018436638555199046
2156,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// set the name of bulk accessor.,no,undetermined,0,0,0,no,0.003702845676678917,no,0.0038281815829111013,no,0.0034028208659470037,no,0.0030392238208182838,no,0.0030086569184717945,no,0.002688490885220026
2157,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_0,no,undetermined,0,0,0,no,0.0036523008980329486,no,0.00513915212545195,no,0.005027493849438599,no,0.005065922042797434,no,0.0050777015913364455,no,0.004591248132509578
2158,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_0,no,undetermined,0,0,0,no,0.0036523008980329486,no,0.00513915212545195,no,0.005027493849438599,no,0.005065922042797434,no,0.0050777015913364455,no,0.004591248132509578
2159,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// invokespecial,no,undetermined,0,0,0,no,0.0036523008980329486,no,0.005504726900042388,no,0.006461868463342029,no,0.00788716525811375,no,0.0079850989855144,no,0.007268429553841039
2160,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// return,no,undetermined,0,0,0,no,0.0007108479426811011,no,0.0005626488816341576,no,0.0004678183472785233,no,0.00040429721458336174,no,0.00040553700375767915,no,0.0003555070972592494
2161,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Find or create the WHERE clause,no,undetermined,0,0,0,no,0.005327345022274255,no,0.005920368411165034,no,0.00508684476456171,no,0.004792538986535402,no,0.005073740278420704,no,0.004586811703906987
2162,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_1 // load bean,no,undetermined,0,0,0,no,0.0040048103395866055,no,0.004560060327062578,no,0.004781084085926416,no,0.005231802822161224,no,0.005281035427102074,no,0.004770088274226943
2163,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Filter conditions need to be inserted before the HQL where condition and the // theta join node.  This is because org.hibernate.loader.Loader binds the filter parameters first, // then it binds all the HQL query parameters, see org.hibernate.loader.Loader.processFilterParameters().",no,undetermined,0,0,0,no,0.008921212816882632,no,0.006976568625273496,no,0.005696866550489503,no,0.005979571553243927,no,0.007053240389660512,no,0.006450032889995213
2164,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// checkcast // cast bean,no,undetermined,0,0,0,no,0.008204908906057726,no,0.007778052391707765,no,0.00808983949487772,no,0.008061148450313194,no,0.007990358315505798,no,0.007285220227543628
2165,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Put the FILTERS node before the HQL condition and theta joins,no,undetermined,0,0,0,no,0.004517593830828825,no,0.004975159554723073,no,0.005195189431129032,no,0.00507516156689286,no,0.005262068109525423,no,0.004761458828612015
2166,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// astore_3 // store bean,no,undetermined,0,0,0,no,0.002181989355496186,no,0.0030232764829442207,no,0.003188522061753272,no,0.0035449133365868524,no,0.0035865494427255295,no,0.003207761995365594
2167,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// add the current fragment to the FILTERS node,no,undetermined,0,0,0,no,0.005425582792587931,no,0.0038001196812490366,no,0.00331285984094776,no,0.002922389454454995,no,0.003168955524339207,no,0.0028537877785573536
2168,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Create a new THETA_JOINS node as a parent of all filters,no,undetermined,0,0,0,no,0.006539414598211753,no,0.006170119748036819,no,0.005158939679587732,no,0.0044112023987085075,no,0.004580262139469133,no,0.004121314437095213
2169,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_2 // args,no,undetermined,0,0,0,no,0.006039799435130713,no,0.007823093949061508,no,0.00846975258500632,no,0.008051516053291598,no,0.007984988782008495,no,0.007265655471070428
2170,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Put the THETA_JOINS node before the HQL condition, after the filters.",no,undetermined,0,0,0,no,0.002192064237299422,no,0.0013094678407471225,no,0.001256034206451276,no,0.0011096401537827268,no,0.0012536072294884164,no,0.00110936309065268
2171,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// First, try to get the persister using the given name directly.",no,undetermined,0,0,0,no,0.007780271701564364,no,0.00923110759731057,no,0.008553952536250777,no,0.006933548815724925,no,0.0068460233229338755,no,0.006199380335775632
2172,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// iconst_i // continue to aastore // growing stack is 1,no,undetermined,0,0,0,no,0.005859368615942892,no,0.0062790805050286745,no,0.0053540704324529466,no,0.005026795272912376,no,0.004948795992749927,no,0.0045021022881085535
2173,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// unable to locate it using this name,no,undetermined,0,0,0,no,0.010706708780230962,no,0.00882266109683807,no,0.0072255554537472245,no,0.0071234916518126915,no,0.007014045153966098,no,0.006343767524681179
2174,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If that didn't work, try using the 'import' name.",no,undetermined,0,0,0,no,0.01020492589326961,no,0.007233431502535875,no,0.005990704498097957,no,0.0051187790666196754,no,0.005170832096887851,no,0.004672622051672388
2175,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Implicit joins use theta style (WHERE pk = fk), explicit joins use JOIN (after from)",no,undetermined,0,0,0,no,0.008627247484372248,no,0.010965472553887388,no,0.009098665557547597,no,0.00805734011953028,no,0.007986194456598287,no,0.007281816563049074
2176,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// locate the registered function by the given name,no,undetermined,0,0,0,no,0.0023461541551698536,no,0.0030160640720494013,no,0.00230945853339168,no,0.0020442619843839467,no,0.002061640614854273,no,0.0018299849576350403
2177,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// determine the type of the first argument...,no,undetermined,0,0,0,no,0.0015799529608723254,no,0.0013508764190672906,no,0.001008143031532408,no,0.0009538545347034479,no,0.0009322720669789972,no,0.0009843973776627716
2178,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_0,no,undetermined,0,0,0,no,0.0036523008980329486,no,0.00513915212545195,no,0.005027493849438599,no,0.005065922042797434,no,0.0050777015913364455,no,0.004591248132509578
2179,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Use the DOT node to emit the first column name. // Create the column names, folled by the column aliases.",no,undetermined,0,0,0,no,0.0028124675207267776,no,0.0032707561479157726,no,0.0026611900508938732,no,0.0022122955969905286,no,0.0023355974223078346,no,0.0020976167178212157
2180,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Append the text of the current node.,no,undetermined,0,0,0,no,0.0012478397001716194,no,0.0012113736216393424,no,0.0009114898034214017,no,0.0007662556310517106,no,0.0008365282324452753,no,0.0007359812375594447
2181,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If the node has a first child, recurse into the first child.",no,undetermined,0,0,0,no,0.0014397314633584374,no,0.0014545414326789933,no,0.0013823179802404978,no,0.0011990432634726058,no,0.0012651174833762258,no,0.0011448431014661566
2182,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// new,no,undetermined,0,0,0,no,0.0011524323874586727,no,0.0015456798653536268,no,0.0013203825020007525,no,0.0011328021668317815,no,0.0011285461793092777,no,0.0009805867107047217
2183,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If there is a second child (RHS), recurse into that child.",no,undetermined,0,0,0,no,0.005166607168816733,no,0.005693340355871171,no,0.005920107595138819,no,0.005361335539081092,no,0.005282724197286971,no,0.004750076985650803
2184,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// dup,no,undetermined,0,0,0,no,0.0036523008980329486,no,0.005504726900042388,no,0.006314442177293934,no,0.007228505873153519,no,0.007254147695472099,no,0.006603303470002272
2185,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_3 // load the raw bean,no,undetermined,0,0,0,no,0.002198687489005256,no,0.002364598688820977,no,0.0022041466869941397,no,0.0021594532093836736,no,0.0021805660234207004,no,0.00193849793795036
2186,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// invokeinterface,no,undetermined,0,0,0,no,0.0036523008980329486,no,0.005504726900042388,no,0.006461868463342029,no,0.00788716525811375,no,0.0079850989855144,no,0.007268429553841039
2187,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// invokevirtual,no,undetermined,0,0,0,no,0.0036523008980329486,no,0.005504726900042388,no,0.006461868463342029,no,0.00788716525811375,no,0.0079850989855144,no,0.007268429553841039
2188,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// invokevirtual,no,undetermined,0,0,0,no,0.0036523008980329486,no,0.005504726900042388,no,0.006461868463342029,no,0.00788716525811375,no,0.0079850989855144,no,0.007268429553841039
2189,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aastore // args,no,undetermined,0,0,0,no,0.00771449813676825,no,0.007896408513072046,no,0.007154565638089854,no,0.0067311628441961875,no,0.006757757844360401,no,0.0061660180703738835
2190,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// istore_3 // store i,no,undetermined,0,0,0,no,0.0015664686359149079,no,0.0025577140548642273,no,0.0028980860316829486,no,0.0034139121724741216,no,0.0034593871520027055,no,0.003089676352808598
2191,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_1 // load the bean,no,undetermined,0,0,0,no,0.0034698360149882273,no,0.0036499637100018134,no,0.003591710044547671,no,0.003749235707210821,no,0.003803174578626263,no,0.0034149916734511586
2192,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* current stack len = 0 */,no,undetermined,0,0,0,no,0.0025168934391146596,no,0.003227328734440806,no,0.0033590359119613886,no,0.0035333382596653045,no,0.003507356354899836,no,0.0031487360817178548
2193,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Iterate through the alias,JoinSequence pairs and generate SQL token nodes.",no,undetermined,0,0,0,no,0.002575516333246539,no,0.0024223439531476593,no,0.0017955116386328986,no,0.0017029168715096577,no,0.0016677827178698862,no,0.0014576500811246972
2194,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this is used during SqlGenerator processing,no,undetermined,0,0,0,no,0.04757713784990227,no,0.010990171318975001,no,0.00908327654553035,no,0.008051414164860242,no,0.00800298434956575,no,0.007264341858385219
2195,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// start region to handling exception (BulkAccessorException),no,undetermined,0,0,0,no,0.005772021748333886,no,0.005063820980836521,no,0.004933017926833096,no,0.004453388188099844,no,0.004424865336595647,no,0.003972672333122087
2196,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If there is a FROM fragment and the FROM element is an explicit, then add the from part.",no,undetermined,0,0,0,no,0.0065144377432177865,no,0.0029945696146099266,no,0.0022867430331645375,no,0.0017503887723736367,no,0.0017075636438301852,no,0.001585758818041137
2197,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*&& StringHelper.isNotEmpty( frag )*/,no,undetermined,0,0,0,no,0.0036523008980329486,no,0.005504726900042388,no,0.006461868463342029,no,0.00788716525811375,no,0.0079850989855144,no,0.007268429553841039
2198,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// iinc 3, 1",no,undetermined,0,0,0,no,0.0036523008980329486,no,0.005504726900042388,no,0.006461868463342029,no,0.00788716525811375,no,0.0079850989855144,no,0.007268429553841039
2199,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// The FROM fragment will probably begin with ', '.  Remove this if it is present.",no,undetermined,0,0,0,no,0.1826334150182551,no,0.14036573003917227,no,0.13031877157174201,no,0.12293947719480092,no,0.11987321799387936,no,0.11600376746420085
2200,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// This uses a PathExpressionParser but notice that compound paths are not valid, // only bare names and simple paths:",no,undetermined,0,0,0,no,0.04856447536958929,no,0.0109700446629847,no,0.009081542914091193,no,0.00805553271667028,no,0.007989703805984055,no,0.007273537540833358
2201,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload 4 // load the raw bean,no,undetermined,0,0,0,no,0.001729148418345043,no,0.0016093609075264505,no,0.0013557236390482632,no,0.0012088570989176527,no,0.0012188459360833602,no,0.0010720024280380057
2202,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// SELECT p FROM p IN CLASS eg.Person ORDER BY p.Name, p.Address, p",no,undetermined,0,0,0,no,0.0045113856790300454,no,0.0031622413497865787,no,0.0024100216521150838,no,0.0021059614573046897,no,0.0020827061276626965,no,0.0018559798548987208
2203,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The reason for this is SQL doesn't let you sort by an expression you are // not returning in the result set.,no,undetermined,0,0,0,no,0.09428836398895231,no,0.010974019705187115,no,0.009102980349464485,no,0.008063776887094988,no,0.007987130674420114,no,0.007268843885966376
2204,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// oracle sql-state code for deadlock,no,undetermined,0,0,0,no,0.0015879530768698061,no,0.002155158992225645,no,0.0019425637215784945,no,0.001927818657894705,no,0.0019239912837775875,no,0.0017132763456165828
2205,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_2 // load the args,no,undetermined,0,0,0,no,0.004646740295766639,no,0.004983713377122997,no,0.004964709043204067,no,0.004498369550799918,no,0.004507520644029533,no,0.004056308874260733
2206,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Otherwise, try to use the no-arg constructor",no,undetermined,0,0,0,no,0.0032863139655288816,no,0.003161842015727321,no,0.0014882482437823912,no,0.0010434749153906719,no,0.0010773420058912005,no,0.0009402666323592469
2207,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// iconst_i,no,undetermined,0,0,0,no,0.0036523008980329486,no,0.005504726900042388,no,0.006461868463342029,no,0.00788716525811375,no,0.0079850989855144,no,0.007268429553841039
2208,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// eat it and try next,no,undetermined,0,0,0,no,0.056384399325786455,no,0.01096120951076672,no,0.009107946033826312,no,0.008070325535470673,no,0.00797986446216416,no,0.00727285583185663
2209,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aaload,no,undetermined,0,0,0,no,0.0036523008980329486,no,0.005504726900042388,no,0.006461868463342029,no,0.00788716525811375,no,0.0079850989855144,no,0.007268429553841039
2210,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// checkcast,no,undetermined,0,0,0,no,0.0036523008980329486,no,0.005504726900042388,no,0.006461868463342029,no,0.007558998015300974,no,0.007575133228642829,no,0.006893533378630901
2211,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//default mode,no,undetermined,0,0,0,no,0.0010690207019376733,no,0.0012080399695893816,no,0.0009902037098617328,no,0.0009122456436116971,no,0.0009167958278168477,no,0.000805080661481373
2212,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// checkcast (case of reference type),no,undetermined,0,0,0,no,0.005836105614751558,no,0.006731651545013825,no,0.005409795657291644,no,0.005167123231356863,no,0.005194211940182181,no,0.004736740263158984
2213,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* current stack len = 2 */,no,undetermined,0,0,0,no,0.0025168934391146596,no,0.003227328734440806,no,0.0033590359119613886,no,0.0035333382596653045,no,0.003507356354899836,no,0.0031487360817178548
2214,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// at some point the processing went bad, so we need to: //      1) make sure the connection handle gets released //      2) try to cleanup the JTA context as much as possible",no,undetermined,0,0,0,no,0.07398707765257771,no,0.01098261955525227,no,0.009102824915607722,no,0.008062413117773268,no,0.00798688472835467,no,0.007266715190325693
2215,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// end region to handling exception (BulkAccessorException),no,undetermined,0,0,0,no,0.009592972737443917,no,0.00967486644142386,no,0.009118288507321435,no,0.008040947690870702,no,0.007997194065774262,no,0.00726681732942798
2216,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// register in exception table,no,undetermined,0,0,0,no,0.0010783608148330322,no,0.0021218368070365034,no,0.0017178985552608675,no,0.0014975035528141522,no,0.001489597003995919,no,0.0013265639109993187
2217,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Private constructor - stops checkstyle from complaining.,no,undetermined,0,0,0,no,0.00355320473355194,no,0.005002598180985043,no,0.004576714937112858,no,0.004526550923251191,no,0.004551195374791235,no,0.00410909192953003
2218,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//reset the dotcount (but not the path) //after reset!,no,undetermined,0,0,0,no,0.004372563675560607,no,0.003726194454879409,no,0.003060857691880041,no,0.002921076913513393,no,0.002961549825054179,no,0.0026824241017331155
2219,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_0,no,undetermined,0,0,0,no,0.0036523008980329486,no,0.00513915212545195,no,0.005027493849438599,no,0.005065922042797434,no,0.0050777015913364455,no,0.004591248132509578
2220,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//after reset!,no,undetermined,0,0,0,no,0.0026670448689599664,no,0.0032586516432554927,no,0.003084073792755587,no,0.0033285357437860563,no,0.003435261845337076,no,0.003118579762181776
2221,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Following methods we don't delegate since they have so little logic // it's clearer to just implement them here,no,undetermined,0,0,0,no,0.20028679895513965,no,0.1593686649450275,no,0.14034934268811167,no,0.13097825663910878,no,0.13111001913184722,no,0.12213868985195285
2222,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_0,no,undetermined,0,0,0,no,0.0036523008980329486,no,0.00513915212545195,no,0.005027493849438599,no,0.005065922042797434,no,0.0050777015913364455,no,0.004591248132509578
2223,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// return,no,undetermined,0,0,0,no,0.0007108479426811011,no,0.0005626488816341576,no,0.0004678183472785233,no,0.00040429721458336174,no,0.00040553700375767915,no,0.0003555070972592494
2224,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// return,no,undetermined,0,0,0,no,0.0007108479426811011,no,0.0005626488816341576,no,0.0004678183472785233,no,0.00040429721458336174,no,0.00040553700375767915,no,0.0003555070972592494
2225,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// invokevirtual,no,undetermined,0,0,0,no,0.0036523008980329486,no,0.005504726900042388,no,0.006461868463342029,no,0.00788716525811375,no,0.0079850989855144,no,0.007268429553841039
2226,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// checkcast,no,undetermined,0,0,0,no,0.0036523008980329486,no,0.005504726900042388,no,0.006461868463342029,no,0.007558998015300974,no,0.007575133228642829,no,0.006893533378630901
2227,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// dotcount>=2,no,undetermined,0,0,0,no,0.0036523008980329486,no,0.005504726900042388,no,0.006461868463342029,no,0.00788716525811375,no,0.0079850989855144,no,0.007268429553841039
2228,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* local variables | target obj | each oldvalue | */,no,undetermined,0,0,0,no,0.0015159231697180258,no,0.001761869938454517,no,0.0014840102252210872,no,0.001382297516809214,no,0.0013858252291954498,no,0.001234309069807772
2229,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// astore 5 // store exception,no,undetermined,0,0,0,no,0.0003444777312259206,no,0.0007224695168513145,no,0.0006971592861989729,no,0.0007150685251175258,no,0.0007247779792967458,no,0.0006325030293741244
2230,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload 5 // load exception,no,undetermined,0,0,0,no,0.0007780353494692434,no,0.0011716258583432985,no,0.0010852442769378001,no,0.0010598296498110142,no,0.0010742049356208326,no,0.00094983897488388
2231,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* | this | bean | args | raw bean | */,no,undetermined,0,0,0,no,0.013377705817721774,no,0.01099906865552809,no,0.009095939648947862,no,0.008047811756049631,no,0.007992725336958936,no,0.007262981322163109
2232,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// iload_3 // i,no,undetermined,0,0,0,no,0.0036523008980329486,no,0.005504726900042388,no,0.006461868463342029,no,0.00788716525811375,no,0.0079850989855144,no,0.007268429553841039
2233,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Do the corresponding RHS,no,undetermined,0,0,0,no,0.0022113835001896925,no,0.003089783170337091,no,0.003161699259573104,no,0.0034003854157910567,no,0.0034471580239180204,no,0.0030699119718544682
2234,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// invokespecial // BulkAccessorException.<init>,no,undetermined,0,0,0,no,0.0018374934851756511,no,0.0020526469781412277,no,0.0018599458799821197,no,0.0016857006135631775,no,0.0016869296501347587,no,0.0014916592152039152
2235,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// athrow,no,undetermined,0,0,0,no,0.0036523008980329486,no,0.005504726900042388,no,0.006461868463342029,no,0.00788716525811375,no,0.0079850989855144,no,0.007268429553841039
2236,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// WARNING: classfile only,no,undetermined,0,0,0,no,0.0016337580304437486,no,0.002235143051244503,no,0.0022362052600615055,no,0.0023245608104418393,no,0.002348719223016124,no,0.002087545626094399
2237,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if its ""id""",no,undetermined,0,0,0,no,0.00847411392591514,no,0.006116165716325147,no,0.005480490128650378,no,0.005189109313834856,no,0.006659194711248079,no,0.006049121244430651
2238,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//swallow,no,undetermined,0,0,0,no,0.0017701726044995023,no,0.0024411107624190543,no,0.00260812172336345,no,0.002841152268598815,no,0.0028694301490962085,no,0.0025622488543418456
2239,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//or its the id property name,no,undetermined,0,0,0,no,0.020261267009162743,no,0.010986064746989035,no,0.009108152158279223,no,0.008064241800700077,no,0.008008164990438412,no,0.007269245147668465
2240,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//join = q.createJoinFragment(useThetaStyleJoin);,no,undetermined,0,0,0,no,0.0023849941949564486,no,0.0013098325583089335,no,0.0013968965349858541,no,0.0020924342039645165,no,0.0021561620598768354,no,0.0019249965609719093
2241,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* local variable | this | */,no,undetermined,0,0,0,no,0.011060457652252961,no,0.01060095275308046,no,0.008886285307170068,no,0.008061578906927502,no,0.007994832150875325,no,0.007279067687497045
2242,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//important!!,no,undetermined,0,0,0,no,0.007320627073767187,no,0.009232562384441713,no,0.009107055985635774,no,0.008047005706096967,no,0.008008311290754848,no,0.007281549192682577
2243,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// an association,no,undetermined,0,0,0,no,0.0025749033636335546,no,0.002702470716131208,no,0.0024722503423222518,no,0.002369770702557938,no,0.002398704527418304,no,0.002097984081704611
2244,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_0 // load this,no,undetermined,0,0,0,no,0.010814945954265114,no,0.010976178335809765,no,0.009082466242459805,no,0.008058735230135847,no,0.007975063372786155,no,0.007273484703023854
2245,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//allow index() function:,no,undetermined,0,0,0,no,0.002036988522794157,no,0.0081231936670898,no,0.007687873284965876,no,0.006826764497260906,no,0.006799372665002452,no,0.006189707898688875
2246,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_0 // load this,no,undetermined,0,0,0,no,0.010814945954265114,no,0.010976178335809765,no,0.009082466242459805,no,0.008058735230135847,no,0.007975063372786155,no,0.007273484703023854
2247,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_1 // load callback,no,undetermined,0,0,0,no,0.002343566183645642,no,0.0027842212582876637,no,0.003059033262866219,no,0.003455256151216777,no,0.00341192649482621,no,0.0030410583735808027
2248,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// case of non-static field,no,undetermined,0,0,0,no,0.010118249868981468,no,0.008814783443132756,no,0.007021474844564764,no,0.006069196749862277,no,0.0060483514230201575,no,0.005494543350293171
2249,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// log a message about potential connection leaks,no,undetermined,0,0,0,no,0.015603155651205836,no,0.010971753189737945,no,0.009101817761993038,no,0.008050102629327215,no,0.00798815772867835,no,0.007276517468816212
2250,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// getfield // get each field,no,undetermined,0,0,0,no,0.0026578098806857723,no,0.003513366682512526,no,0.0036075309868104167,no,0.003919582196966886,no,0.003948095906135223,no,0.0035729683135363663
2251,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// invokeinterface // invoke Enabled.getInterceptFieldCallback(),no,undetermined,0,0,0,no,0.0019644681594873288,no,0.002815976125557844,no,0.0031245939124428627,no,0.003383232408157896,no,0.003418900569545976,no,0.0030699519812043925
2252,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ifnonnull,no,undetermined,0,0,0,no,0.0036523008980329486,no,0.005487580130233716,no,0.006265024862689828,no,0.00742545860628079,no,0.007509016265890189,no,0.006826620315123522
2253,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// *return // each type,no,undetermined,0,0,0,no,0.0030571145824991692,no,0.0026404161235652887,no,0.0021071580661403493,no,0.0019777725966070884,no,0.0019826862442254905,no,0.0017752045251867002
2254,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// *return // each type,no,undetermined,0,0,0,no,0.0030571145824991692,no,0.0026404161235652887,no,0.0021071580661403493,no,0.0019777725966070884,no,0.0019826862442254905,no,0.0017752045251867002
2255,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// *store_1 // each type,no,undetermined,0,0,0,no,0.0029773507893143484,no,0.002768880098153857,no,0.002273454380339381,no,0.002271958126983886,no,0.002280034897017661,no,0.0020448328320852127
2256,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//many-to-many,no,undetermined,0,0,0,no,0.02508057649350124,no,0.010977830297419925,no,0.008699327063623486,no,0.008043639991652229,no,0.007981822354836044,no,0.007276341989877879
2257,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ldc // name of the field,no,undetermined,0,0,0,no,0.0027466812927803494,no,0.0026504968133739797,no,0.0021104350851736224,no,0.0017500707797873237,no,0.0017162342474825402,no,0.0015186366234727965
2258,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//opening paren in new Foo ( ... ),no,undetermined,0,0,0,no,0.0030263268457833056,no,0.002729524508584534,no,0.002378499506167867,no,0.0031333456811556463,no,0.003111857539170472,no,0.0027826190604665294
2259,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if we are inside a new Result(), but not inside a nested function",no,undetermined,0,0,0,no,0.004943250101470048,no,0.0062836122563069184,no,0.007851847556285473,no,0.006865728849918134,no,0.006787580847746509,no,0.00615712944195348
2260,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// invokeinterface // invoke Callback.read*() // each type,no,undetermined,0,0,0,no,0.0014664229128881852,no,0.0014624522186091379,no,0.0012956096007762158,no,0.0013168451697116122,no,0.0013087105160515284,no,0.0011519923953490522
2261,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//special case,no,undetermined,0,0,0,no,0.001577343292045272,no,0.0017221159309656717,no,0.0015933489033076703,no,0.0016595189638201426,no,0.0016561962601507661,no,0.0014517695131534272
2262,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the name of an SQL function,no,undetermined,0,0,0,no,0.0014482394953906753,no,0.0038147196378435565,no,0.003460201002758398,no,0.0032233827219554463,no,0.0032334992885189886,no,0.002917195157003453
2263,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//this is basically a copy/paste of OrderByParser ... might be worth refactoring,no,undetermined,0,0,0,no,0.5866476040063633,yes,0.5897008318333966,yes,0.5926133669534279,yes,0.6194920985689181,yes,0.6025198328862436,yes,0.6004649501980249
2264,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// SELECT p FROM p IN CLASS eg.Person GROUP BY p.Name, p.Address, p",no,undetermined,0,0,0,no,0.007717568263896629,no,0.005834834083661938,no,0.004832459329668059,no,0.0042571129402357,no,0.004227385608612532,no,0.0038007355859859216
2265,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// return aliases not supported in classic translator!,no,undetermined,0,0,0,no,0.020480089679914902,no,0.008191793771430289,no,0.007711254108242547,no,0.00806077804269886,no,0.008009144786686673,no,0.007270113279601991
2266,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// int,no,undetermined,0,0,0,no,0.0013415592956332557,no,0.0015787880328310198,no,0.0014327511269427544,no,0.0014369794387945653,no,0.0014532406553273004,no,0.0012758938475000176
2267,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//register collection role,no,undetermined,0,0,0,no,0.008720539107521987,no,0.010388249055635075,no,0.0055546136481538985,no,0.0044000703423615044,no,0.0036260128459932955,no,0.0032686500085283713
2268,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// just do the regular thing if you can't find the ctor // Your AST must have default ctor to use this.,no,undetermined,0,0,0,no,0.0325579610392991,no,0.010998833845124727,no,0.009077744883159504,no,0.008060230435853105,no,0.008010479615908065,no,0.007292675476820115
2269,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// return,no,undetermined,0,0,0,no,0.0007108479426811011,no,0.0005626488816341576,no,0.0004678183472785233,no,0.00040429721458336174,no,0.00040553700375767915,no,0.0003555070972592494
2270,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// The keyword used to specify an identity column, if identity column key generation is supported.",no,undetermined,0,0,0,no,0.002467082524962734,no,0.0026688003406718864,no,0.002583982621388527,no,0.0022770394747963344,no,0.0024010185157820703,no,0.0021245867371007254
2271,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//.getElementPropertyMapping();,no,undetermined,0,0,0,no,0.0036523008980329486,no,0.005504726900042388,no,0.006461868463342029,no,0.00788716525811375,no,0.0079850989855144,no,0.007268429553841039
2272,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// dup,no,undetermined,0,0,0,no,0.0036523008980329486,no,0.005504726900042388,no,0.006314442177293934,no,0.007228505873153519,no,0.007254147695472099,no,0.006603303470002272
2273,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//following doesn't handle (null, not null) but unnecessary //since this would mean all rows",no,undetermined,0,0,0,no,0.07922668304530733,no,0.010983262110032279,no,0.009099497749913008,no,0.008041687270728246,no,0.007998019444071242,no,0.007278611252649539
2274,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// checkcast,no,undetermined,0,0,0,no,0.0036523008980329486,no,0.005504726900042388,no,0.006461868463342029,no,0.007558998015300974,no,0.007575133228642829,no,0.006893533378630901
2275,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// checkcast,no,undetermined,0,0,0,no,0.0036523008980329486,no,0.005504726900042388,no,0.006461868463342029,no,0.007558998015300974,no,0.007575133228642829,no,0.006893533378630901
2276,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//crossJoins.add(name);,no,undetermined,0,0,0,no,0.0030895495503451475,no,0.0035948174247722622,no,0.0030335956927011114,no,0.002698234527734321,no,0.0026665238591071856,no,0.0025571852731454225
2277,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//ie no select clause in HQL,no,undetermined,0,0,0,no,0.002371272102930669,no,0.002225031426735559,no,0.002189955510530824,no,0.0020762419023440167,no,0.002059618422970389,no,0.001840023763395136
2278,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// invokeinterface // enabled.getInterceptFieldCallback(),no,undetermined,0,0,0,no,0.0020249719336410932,no,0.003746197634562965,no,0.004322165826336886,no,0.004987231609134565,no,0.005034721233725777,no,0.004550782656956907
2279,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// invokeinterface // enabled.getInterceptFieldCallback(),no,undetermined,0,0,0,no,0.0020249719336410932,no,0.003746197634562965,no,0.004322165826336886,no,0.004987231609134565,no,0.005034721233725777,no,0.004550782656956907
2280,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ifnonnull (label1),no,undetermined,0,0,0,no,0.0036523008980329486,no,0.00549426548741885,no,0.006341122137678998,no,0.007602342305615884,no,0.007691342863938338,no,0.006995755789124829
2281,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we are the LHS of the DOT representing a naked comp-prop-ref,no,undetermined,0,0,0,no,0.004304112712401283,no,0.003930812191144612,no,0.0035354108550237832,no,0.0033337722188126707,no,0.003004082719597797,no,0.0025869013640041566
2282,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// *load_1,no,undetermined,0,0,0,no,0.0036523008980329486,no,0.005504726900042388,no,0.006461868463342029,no,0.00788716525811375,no,0.0079850989855144,no,0.007268429553841039
2283,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// *load_1,no,undetermined,0,0,0,no,0.0036523008980329486,no,0.005504726900042388,no,0.006461868463342029,no,0.00788716525811375,no,0.0079850989855144,no,0.007268429553841039
2284,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//ie. no select clause,no,undetermined,0,0,0,no,0.0015855145209173924,no,0.0024694441489472832,no,0.002415177144346752,no,0.002277085588471127,no,0.002293452152861883,no,0.002045075572757339
2285,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// putfield,no,undetermined,0,0,0,no,0.0036523008980329486,no,0.005504726900042388,no,0.006461868463342029,no,0.00788716525811375,no,0.0079850989855144,no,0.007268429553841039
2286,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//there _was_ a select clause,no,undetermined,0,0,0,no,0.0015521189637585115,no,0.00276076624988833,no,0.0026289514737349723,no,0.002615219070652446,no,0.002602782378352197,no,0.0023170378247589067
2287,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// return ;,no,undetermined,0,0,0,no,0.0007108479426811011,no,0.0005626488816341576,no,0.0004678183472785233,no,0.00040429721458336174,no,0.00040553700375767915,no,0.0003555070972592494
2288,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ldc // field name,no,undetermined,0,0,0,no,0.004508917546121205,no,0.00516546729618063,no,0.004477955383167176,no,0.004173601207528437,no,0.004170454427848948,no,0.003748758113436079
2289,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// getfield // old value of the field,no,undetermined,0,0,0,no,0.004003875610718238,no,0.004749547053048118,no,0.004311519494659181,no,0.0043157368220339415,no,0.004191053627593892,no,0.0037439873996625082
2290,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// reference type,no,undetermined,0,0,0,no,0.006647937615160143,no,0.007366552950348968,no,0.005971694067702293,no,0.005337288863955185,no,0.00538215582822155,no,0.004913871376472369
2291,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// return the concrete type, or the underlying type if a concrete type // was not specified",no,undetermined,0,0,0,no,0.005658163135185302,no,0.005432127395598718,no,0.00427359729184797,no,0.004128772359599599,no,0.004102949677034279,no,0.003682940676458208
2292,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//many-to-many,no,undetermined,0,0,0,no,0.02508057649350124,no,0.010977830297419925,no,0.008699327063623486,no,0.008043639991652229,no,0.007981822354836044,no,0.007276341989877879
2293,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// reference type,no,undetermined,0,0,0,no,0.006647937615160143,no,0.007366552950348968,no,0.005971694067702293,no,0.005337288863955185,no,0.00538215582822155,no,0.004913871376472369
2294,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// not array,no,undetermined,0,0,0,no,0.0027221552229126744,no,0.002566775723418998,no,0.0021320832023859855,no,0.001956819244490792,no,0.001946751982254454,no,0.0017317682632263963
2295,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// array of reference type,no,undetermined,0,0,0,no,0.004035712242649916,no,0.003997026830568035,no,0.003014828043160767,no,0.0025879221087580077,no,0.002631205165610707,no,0.0023718128455763737
2296,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//q.addCollection(collectionName, collectionRole);",no,undetermined,0,0,0,no,0.0036523008980329486,no,0.005504726900042388,no,0.006461868463342029,no,0.00788716525811375,no,0.0079850989855144,no,0.007268429553841039
2297,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// boolean,no,undetermined,0,0,0,no,1.600427144141741e-05,no,1.650236945754733e-05,no,1.2650265175225988e-05,no,1.0679708360864378e-05,no,1.0745455153945295e-05,no,8.56538078463649e-06
2298,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// char,no,undetermined,0,0,0,no,0.0003923550211932236,no,0.0004991983944766052,no,0.0004711695370036889,no,0.0005046284646562798,no,0.0005162394814022803,no,0.00044949853736734534
2299,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// short,no,undetermined,0,0,0,no,0.002871053423556838,no,0.010977992443993683,no,0.009077199012706236,no,0.008065506429345216,no,0.007981687822488252,no,0.007262929007110169
2300,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// classic parser does not support bulk manipulation statements,no,undetermined,0,0,0,no,0.010879062693927338,no,0.010974232563167097,no,0.009078199530500632,no,0.008053672281283562,no,0.008007794886579904,no,0.0072774294222268604
2301,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// double,no,undetermined,0,0,0,no,0.0011478338637626111,no,0.0017045383839574962,no,0.0017231082788846713,no,0.0017784922968803215,no,0.0017843363203501634,no,0.0015650250466492182
2302,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_0,no,undetermined,0,0,0,no,0.0036523008980329486,no,0.00513915212545195,no,0.005027493849438599,no,0.005065922042797434,no,0.0050777015913364455,no,0.004591248132509578
2303,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// float,no,undetermined,0,0,0,no,0.0022150803521018623,no,0.00276144813873079,no,0.0031591260917488797,no,0.0035793101811061566,no,0.0035836728320349817,no,0.003217422852548602
2304,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// float,no,undetermined,0,0,0,no,0.0022150803521018623,no,0.00276144813873079,no,0.0031591260917488797,no,0.0035793101811061566,no,0.0035836728320349817,no,0.003217422852548602
2305,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This is called when it's time to fully resolve a path expression.,no,undetermined,0,0,0,no,0.19321857269557258,no,0.12197372644893147,no,0.11099282979143563,no,0.10226218294179128,no,0.10025354617220096,no,0.0926738944285119
2306,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// long,no,undetermined,0,0,0,no,0.005422836097453547,no,0.006703763765115291,no,0.00632125031517745,no,0.006396717450880861,no,0.006350394392058399,no,0.005722414463565485
2307,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// can't cache this stuff either (per-invocation),no,undetermined,0,0,0,no,0.03905841156696089,no,0.010991954527872426,no,0.009079188858856557,no,0.008060376966815276,no,0.008002426522192458,no,0.007274664340305672
2308,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This is the legacy behaviour for HQL queries...,no,undetermined,0,0,0,no,0.009313818960979412,no,0.005343716567105473,no,0.004370960453449865,no,0.003982166093689358,no,0.003927653721004396,no,0.003540922225762873
2309,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// long,no,undetermined,0,0,0,no,0.005422836097453547,no,0.006703763765115291,no,0.00632125031517745,no,0.006396717450880861,no,0.006350394392058399,no,0.005722414463565485
2310,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// bad type,no,undetermined,0,0,0,no,0.04378934928590141,no,0.010962579644463052,no,0.009096732679234715,no,0.008063488766611318,no,0.008001739049379111,no,0.007293111526216417
2311,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// bad type,no,undetermined,0,0,0,no,0.04378934928590141,no,0.010962579644463052,no,0.009096732679234715,no,0.008063488766611318,no,0.008001739049379111,no,0.007293111526216417
2312,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// not known!,no,undetermined,0,0,0,no,0.003984179051226531,no,0.0025231046716266583,no,0.0020791300146855477,no,0.0021083896924159328,no,0.0020995800866780317,no,0.0018786892788910383
2313,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// boolean, byte, char, int, short",no,undetermined,0,0,0,no,0.00021672552084455135,no,0.00041476556430801816,no,0.000294725546516149,no,0.00023408357284899077,no,0.00023407721765536402,no,0.0001989803632935612
2314,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// not known!,no,undetermined,0,0,0,no,0.003984179051226531,no,0.0025231046716266583,no,0.0020791300146855477,no,0.0021083896924159328,no,0.0020995800866780317,no,0.0018786892788910383
2315,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// boolean, byte, char, int, short",no,undetermined,0,0,0,no,0.00021672552084455135,no,0.00041476556430801816,no,0.000294725546516149,no,0.00023408357284899077,no,0.00023407721765536402,no,0.0001989803632935612
2316,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// not known!,no,undetermined,0,0,0,no,0.003984179051226531,no,0.0025231046716266583,no,0.0020791300146855477,no,0.0021083896924159328,no,0.0020995800866780317,no,0.0018786892788910383
2317,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// reference type,no,undetermined,0,0,0,no,0.006647937615160143,no,0.007366552950348968,no,0.005971694067702293,no,0.005337288863955185,no,0.00538215582822155,no,0.004913871376472369
2318,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// not known!,no,undetermined,0,0,0,no,0.003984179051226531,no,0.0025231046716266583,no,0.0020791300146855477,no,0.0021083896924159328,no,0.0020995800866780317,no,0.0018786892788910383
2319,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//Need this, since join condition can appear inside parens!",no,undetermined,0,0,0,no,0.03485148761773776,no,0.010957084006182479,no,0.009082756839594463,no,0.008057456783146504,no,0.007991669191605703,no,0.007257899845790181
2320,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// double,no,undetermined,0,0,0,no,0.0011478338637626111,no,0.0017045383839574962,no,0.0017231082788846713,no,0.0017784922968803215,no,0.0017843363203501634,no,0.0015650250466492182
2321,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// float,no,undetermined,0,0,0,no,0.0022150803521018623,no,0.00276144813873079,no,0.0031591260917488797,no,0.0035793101811061566,no,0.0035836728320349817,no,0.003217422852548602
2322,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// float,no,undetermined,0,0,0,no,0.0022150803521018623,no,0.00276144813873079,no,0.0031591260917488797,no,0.0035793101811061566,no,0.0035836728320349817,no,0.003217422852548602
2323,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// bad type,no,undetermined,0,0,0,no,0.04378934928590141,no,0.010962579644463052,no,0.009096732679234715,no,0.008063488766611318,no,0.008001739049379111,no,0.007293111526216417
2324,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// bad type,no,undetermined,0,0,0,no,0.04378934928590141,no,0.010962579644463052,no,0.009096732679234715,no,0.008063488766611318,no,0.008001739049379111,no,0.007293111526216417
2325,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// boolean, byte, char, int, short",no,undetermined,0,0,0,no,0.00021672552084455135,no,0.00041476556430801816,no,0.000294725546516149,no,0.00023408357284899077,no,0.00023407721765536402,no,0.0001989803632935612
2326,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//expressionOpeners.add("",""); // deliberately excluded",no,undetermined,0,0,0,no,0.0024045797657174,no,0.003216635401662903,no,0.003247648899228153,no,0.0034012306353936135,no,0.0034398562904114226,no,0.0031672652049424036
2327,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// skip finalize methods,no,undetermined,0,0,0,no,0.002329819789541001,no,0.0005793991296406102,no,0.0004835756533830719,no,0.00048472133364357097,no,0.0004867334145196901,no,0.0004210337494255003
2328,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Mainly for OSCache,no,undetermined,0,0,0,no,0.005103005431880925,no,0.005825466542007881,no,0.005709213287087414,no,0.008046066534679193,no,0.007998428096202853,no,0.007287976147843443
2329,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//decrement the lock,no,undetermined,0,0,0,no,0.0015436882899281688,no,0.0018564472305153184,no,0.0016366929807288052,no,0.0018412002344914897,no,0.0017861795473800039,no,0.0015904527730628555
2330,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//recache the updated state,no,undetermined,0,0,0,no,0.0013413537968904926,no,0.0014287423088694621,no,0.001246393952127883,no,0.0012049567508822022,no,0.0011955803455422213,no,0.0010477136890762575
2331,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// noop,no,undetermined,0,0,0,no,0.0018154067788869685,no,0.0019879369875564867,no,0.0019421920506270112,no,0.0020706766423144395,no,0.0020766488627519536,no,0.0018518504446880754
2332,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//null clientLock is remotely possible but will never happen in practice,no,undetermined,0,0,0,no,0.002079309998982617,no,0.0026759666262961427,no,0.0026600729464763594,no,0.0024365281137907055,no,0.0023906704175740423,no,0.0021185008574568973
2333,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//by requiring <, we rely on lock timeout in the case of an unsuccessful update!",no,undetermined,0,0,0,no,0.008269846654396645,no,0.010035995282126101,no,0.00788466726421794,no,0.007991540201749142,no,0.007812484986316109,no,0.007149143109655072
2334,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// the user provided resulttransformer, not the one used with ""select new"". Here to avoid mangling // transformed/non-transformed results.",no,undetermined,0,0,0,no,0.015598450695791657,no,0.01097446529284591,no,0.009098850995272767,no,0.008076126925393603,no,0.008012449381133893,no,0.007289063955364749
2335,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// disassemble positional parameters,no,undetermined,0,0,0,no,0.0024639651742779573,no,0.0031593750637669404,no,0.0032827986584303805,no,0.003457571623722488,no,0.0031019928975563106,no,0.002777711260589756
2336,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//ie. 60 seconds,no,undetermined,0,0,0,no,0.004603467794970453,no,0.005897079736238532,no,0.006208208776564539,no,0.006702211587947246,no,0.006694046705268846,no,0.006074938059811496
2337,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// noop,no,undetermined,0,0,0,no,0.0018154067788869685,no,0.0019879369875564867,no,0.0019421920506270112,no,0.0020706766423144395,no,0.0020766488627519536,no,0.0018518504446880754
2338,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// otherwise, a trim-specification and/or a trim-character // have been specified;  we need to decide which options // are present and ""do the right thing"" // should leading trim-characters be trimmed? // should trailing trim-characters be trimmed? // the trim-character (what is to be trimmed off?) // the trim-source (from where should it be trimmed?)",no,undetermined,0,0,0,no,0.056878478465914366,no,0.010985292666057106,no,0.00911105947360619,no,0.008064863563392003,no,0.007992944801849854,no,0.007274751341811821
2339,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//noop,no,undetermined,0,0,0,no,0.0018154067788869685,no,0.0019879369875564867,no,0.0019421920506270112,no,0.0020706766423144395,no,0.0020766488627519536,no,0.0018518504446880754
2340,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//noop,no,undetermined,0,0,0,no,0.0018154067788869685,no,0.0019879369875564867,no,0.0019421920506270112,no,0.0020706766423144395,no,0.0020766488627519536,no,0.0018518504446880754
2341,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this is called from SettingsFactory irregardless; trivial to simply disregard,no,undetermined,0,0,0,no,0.049660056957973264,no,0.010984614082671085,no,0.009118129855565283,no,0.008067047468511914,no,0.007990344106019533,no,0.00728988225363312
2342,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Do nothing; subclasses may override.,no,undetermined,0,0,0,no,0.0008299103750733118,no,0.0012218192716829655,no,0.0010178085003357137,no,0.0009242534107488569,no,0.0009260327245484121,no,0.0008095496699043735
2343,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Do nothing; subclasses may override.,no,undetermined,0,0,0,no,0.0008299103750733118,no,0.0012218192716829655,no,0.0010178085003357137,no,0.0009242534107488569,no,0.0009260327245484121,no,0.0008095496699043735
2344,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// TABLE,no,undetermined,0,0,0,no,0.0008750598993451579,no,0.0007317278723877637,no,0.0006959219015839755,no,0.0006856601654537795,no,0.0006830381868291666,no,0.0005959571827503763
2345,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Inside a BETWEEN ... AND ... expression,no,undetermined,0,0,0,no,0.020940001689738134,no,0.01096152225262599,no,0.009098979215456214,no,0.00805447967081606,no,0.007984904543538996,no,0.007264953099626698
2346,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//were an odd or even number of NOTs encountered //the join string built up by compound paths inside this expression //a flag indicating if the subexpression is known to be boolean,no,undetermined,0,0,0,no,0.01718779042173701,no,0.009007329568864478,no,0.008255537816231485,no,0.008048757565368374,no,0.008007953249559937,no,0.007275267426951148
2347,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//ie. a many-to-many,no,undetermined,0,0,0,no,0.017513689090383124,no,0.009995813611119281,no,0.008296830160462263,no,0.007822432075872316,no,0.007695597945856024,no,0.007003187336860532
2348,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//Cope with [,]",no,undetermined,0,0,0,no,0.007410307906161781,no,0.007156018724858384,no,0.006951642343034108,no,0.006894227387353156,no,0.006984002010959527,no,0.006381853285418795
2349,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Cope with a continued path expression (ie. ].baz),no,undetermined,0,0,0,no,0.010086785048099003,no,0.009679919642361923,no,0.009097637891409213,no,0.008058639694708818,no,0.007988366250912057,no,0.007277119295821828
2350,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//NOTE: early return,no,undetermined,0,0,0,no,0.005690508329336906,no,0.004007544344356682,no,0.002912955032419817,no,0.0027183961676747028,no,0.0027140268143419043,no,0.0024492561429509075
2351,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Cope with a subselect,no,undetermined,0,0,0,no,0.007410307906161781,no,0.007156018724858384,no,0.006951642343034108,no,0.006894227387353156,no,0.006984002010959527,no,0.006381853285418795
2352,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// use the id value of a newly instantiated instance as the unsaved-value,no,undetermined,0,0,0,no,0.008510401604633849,no,0.006842712181439951,no,0.004875720890602527,no,0.003952371557926965,no,0.003616939069281856,no,0.003284272211071873
2353,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Close extra brackets we opened,no,undetermined,0,0,0,no,0.00037155053451499916,no,0.00028134354175361433,no,0.0002469144451923096,no,0.0002356808854423123,no,0.00023699920181641194,no,0.00020355669331105565
2354,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//take note when this is a boolean expression,no,undetermined,0,0,0,no,0.028196505709667304,no,0.010995358035178157,no,0.009112965446960306,no,0.00807166718304082,no,0.008003243450167051,no,0.007269809036565142
2355,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//persister.setIdentifier(result, id); //before calling interceptor, for consistency with normal load",no,undetermined,0,0,0,no,0.01861861526852372,no,0.008489459833403884,no,0.00845088316937305,no,0.00730745967324921,no,0.007344406676032993,no,0.0065896305195023526
2356,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// no-op; CCS did not have such a concept,no,undetermined,0,0,0,no,0.002750742911543965,no,0.0022394367875366683,no,0.001941410816558275,no,0.0017518027205731433,no,0.0016286827683640165,no,0.0013598006035145742
2357,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// JoinProcessor needs to know if the where clause fragment came from a dynamic filter or not so it // can put the where clause fragment in the right place in the SQL AST.   'hasFilterCondition' keeps track // of that fact.,no,undetermined,0,0,0,no,0.04529157278933196,no,0.010983805119930579,no,0.00910302529334396,no,0.008044487843736629,no,0.007990462217829012,no,0.007261488750076568
2358,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// no-op; CCS did not have such a concept,no,undetermined,0,0,0,no,0.002750742911543965,no,0.0022394367875366683,no,0.001941410816558275,no,0.0017518027205731433,no,0.0016286827683640165,no,0.0013598006035145742
2359,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// assumes that types are all of span 1,no,undetermined,0,0,0,no,0.0016209141483524952,no,0.0013810016757959992,no,0.0011776894481111827,no,0.001051407394061895,no,0.0010810009113364802,no,0.0009488447430746807
2360,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// again, CCS did not have such a concept; however a reasonable // proximity is to clear the cache.  For non-transaction aware // caches, we will also do a clear at the end of the transaction",no,undetermined,0,0,0,no,0.06399221277126643,no,0.010989322778142617,no,0.009114080610166593,no,0.00806240369857853,no,0.007992594630428292,no,0.007260384507564715
2361,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//process a token, mapping OO path expressions to SQL expressions",no,undetermined,0,0,0,no,0.0015393087579276081,no,0.0024387221182536924,no,0.0024105995148341057,no,0.0034957924946547366,no,0.003759639804286098,no,0.0033727430046720645
2362,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Open any extra brackets we might need.,no,undetermined,0,0,0,no,0.04638130424032586,no,0.010980931932593675,no,0.009109670421011323,no,0.008070288674641601,no,0.007981573051891592,no,0.007275561897523885
2363,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//Cope with special cases of AND, NOT, )",no,undetermined,0,0,0,no,0.012052481251421885,no,0.010972197070578192,no,0.00910366829885314,no,0.008077198837220792,no,0.008003968118888819,no,0.007275761406161993
2364,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the next one up must also be,no,undetermined,0,0,0,no,0.005217606998774341,no,0.004314251640709496,no,0.0035748098302311546,no,0.0031087230487424175,no,0.003289486457343476,no,0.0029630192735598327
2365,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Add any joins,no,undetermined,0,0,0,no,0.0030189786337981904,no,0.007129725525322678,no,0.00594859223144735,no,0.005537267791342656,no,0.005471134259863067,no,0.0050746683753209836
2366,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//named query parameter,no,undetermined,0,0,0,no,0.01444002593915112,no,0.010964386107795583,no,0.009083576469893162,no,0.008062297420710792,no,0.008007032817812003,no,0.00728347042463406
2367,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// get meta's from <hibernate-mapping>,no,undetermined,0,0,0,no,0.002048975131211718,no,0.005921315187546556,no,0.005525933886497607,no,0.0055276707187013815,no,0.0059545129636864895,no,0.005427255758193742
2368,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// get meta's from <class>,no,undetermined,0,0,0,no,0.005532825775483628,no,0.006793186940131268,no,0.005644830412796434,no,0.005048774312637898,no,0.005053973229816217,no,0.004556657604103568
2369,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//path expression,no,undetermined,0,0,0,no,0.008230867620558378,no,0.007763819175259307,no,0.007035775831732698,no,0.005779760605063032,no,0.005753610837243505,no,0.005174858115114081
2370,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// DB-OBJECTNAME,no,undetermined,0,0,0,no,0.0015306321514753825,no,0.0020814223219314983,no,0.0021795660990111365,no,0.002470810645869444,no,0.0025178976566899197,no,0.002249622204389337
2371,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// just decrement the lock, don't recache // (we don't know which transaction won)",no,undetermined,0,0,0,no,0.018303330107622723,no,0.010975147403500656,no,0.009090904917474482,no,0.008039196391031612,no,0.007995561582228415,no,0.007275149486932702
2372,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// saves / updates don't cascade to uninitialized collections,no,undetermined,0,0,0,no,0.004417510055982489,no,0.00509584578720134,no,0.004386881086725499,no,0.004085107885811386,no,0.004083632596966061,no,0.0036933369583795747
2373,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// MUTABLE,no,undetermined,0,0,0,no,0.0015367280823861446,no,0.0020975207627099623,no,0.002326767979213668,no,0.002593349879646748,no,0.0026300230088558596,no,0.0023350112645874467
2374,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// A container for collections we load up when the owning entity is not // yet loaded ... for now, this is purely transient!",no,undetermined,0,0,0,no,0.0819136389515128,no,0.010978420248295685,no,0.009091285437454895,no,0.008060351642038728,no,0.007993182645989414,no,0.0072947085904668425
2375,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// WHERE,no,undetermined,0,0,0,no,0.0191125405666391,no,0.010976717701124409,no,0.009103553844604314,no,0.008049335171085022,no,0.00800637851651816,no,0.007271537973789995
2376,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// CHECK,no,undetermined,0,0,0,no,9.355060221159787e-05,no,0.0002859390220611493,no,0.0002750664077859276,no,0.00022885984013507133,no,0.00022082978536909595,no,0.00018337141161228464
2377,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// POLYMORPHISM,no,undetermined,0,0,0,no,0.0036523008980329486,no,0.005504726900042388,no,0.006461868463342029,no,0.00788716525811375,no,0.0079850989855144,no,0.007268429553841039
2378,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// properties that we have tried to load, and not found in the database",no,undetermined,0,0,0,no,0.01726070038538291,no,0.010998052982380336,no,0.00909192202060761,no,0.008063818660514966,no,0.007985861126260235,no,0.007271571353858588
2379,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// TODO:,no,undetermined,0,0,0,no,0.01108450116238773,no,0.010983556682987627,no,0.00909444328901823,no,0.008067650457139275,no,0.007989377549034525,no,0.007263500918457884
2380,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// persists don't cascade to uninitialized collections,no,undetermined,0,0,0,no,0.004806459816575173,no,0.006544479103856739,no,0.005875715972653499,no,0.00554809682472287,no,0.005547896549629498,no,0.005025201818600238
2381,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//anything else,no,undetermined,0,0,0,no,0.0003233977833099976,no,0.0003837340524250837,no,0.0003170791713680876,no,0.0003025030042717287,no,0.00030272818172092205,no,0.0002619207750122948
2382,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the path expression continues after a ],no,undetermined,0,0,0,no,0.005420958288067858,no,0.006104918656741808,no,0.005559329247308553,no,0.005084717994804835,no,0.00532739811539733,no,0.004799789170243796
2383,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// careful with this!,no,undetermined,0,0,0,no,0.028569441839792986,no,0.010991639267965642,no,0.009115944247942313,no,0.008067636897080595,no,0.007994819051355495,no,0.007283939655876955
2384,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the path expression ends at the ],no,undetermined,0,0,0,no,0.021949861770715832,no,0.010975219642596174,no,0.009084636293794355,no,0.008059629316906663,no,0.00799939940630266,no,0.00726382361002463
2385,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// ""finish off"" the join",no,undetermined,0,0,0,no,0.005370555008160082,no,0.0022713440752490876,no,0.0020880057868904686,no,0.0026605967304627973,no,0.0026853453496652998,no,0.00239407707724938
2386,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//NOTICE: no "" or . since they are part of (compound) identifiers",no,undetermined,0,0,0,no,0.010529819346891496,no,0.00997146800730656,no,0.009106536923371813,no,0.00805929392888126,no,0.00799762181565985,no,0.007282265590825394
2387,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//cannot instantiate,no,undetermined,0,0,0,no,0.001371245692701827,no,0.0021283170946383837,no,0.0021902066148356846,no,0.0023272317791742177,no,0.002352366348625942,no,0.0020922753555829058
2388,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// start by looking for HQL keywords...,no,undetermined,0,0,0,no,0.0006311962246128785,no,0.00041771414300049943,no,0.0003813030229972574,no,0.00036225135781129254,no,0.00036309891345205446,no,0.0003156803279547383
2389,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// inner joins can be abbreviated to 'join',no,undetermined,0,0,0,no,0.006250324149923303,no,0.00934340354721572,no,0.007789136735415613,no,0.008042700423120495,no,0.007995545719431056,no,0.007287735067571081
2390,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// 'outer' is optional and is ignored,no,undetermined,0,0,0,no,0.0006660243794907105,no,0.0011130871389011519,no,0.0009010038787042777,no,0.0006563021571326018,no,0.0006494013971478766,no,0.0005626517713464776
2391,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// now anything that is not a HQL keyword,no,undetermined,0,0,0,no,0.004806122731299794,no,0.0032200882924724467,no,0.0029024824036327883,no,0.0027135180317232016,no,0.0026422449361549103,no,0.002361216057314966
2392,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// process the ""old"" HQL style where aliases appear _first_ // ie. using the IN or IN CLASS constructions",no,undetermined,0,0,0,no,0.00443611304218271,no,0.0037495186710417737,no,0.0031282188277870836,no,0.002708756550334534,no,0.0027687861197943976,no,0.002485153420375213
2393,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// treat it as a classname,no,undetermined,0,0,0,no,0.003947276887736984,no,0.004088562801241993,no,0.0032055357949983786,no,0.0029907815983528235,no,0.0029844143125922194,no,0.0026603769463666017
2394,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// treat it as a path expression,no,undetermined,0,0,0,no,0.009835826197121518,no,0.00850344765168427,no,0.006641272715802218,no,0.005274327685056385,no,0.005235896827271838,no,0.004717112139634231
2395,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// starts with a path expression (new style),no,undetermined,0,0,0,no,0.007111431030490483,no,0.010998508381961685,no,0.009116353163076534,no,0.0080495111804214,no,0.008003170070414305,no,0.007263089231629559
2396,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ID,no,undetermined,0,0,0,no,0.007370241203294823,no,0.005427846103918515,no,0.004853514865482238,no,0.00458636291789864,no,0.0053481993514938615,no,0.004606891925222179
2397,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//allow ODMG OQL style: from Person p, p.cars c",no,undetermined,0,0,0,no,0.00323646594725992,no,0.0058216494961937535,no,0.005505346729948116,no,0.0054662766424371,no,0.005478969455508609,no,0.0049530652576137285
2398,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//handle quoted strings,no,undetermined,0,0,0,no,0.01021352944589494,no,0.010060428476750717,no,0.009111354389908668,no,0.008044706367374428,no,0.007997577822385672,no,0.00727056342373474
2399,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// VERSION / TIMESTAMP,no,undetermined,0,0,0,no,0.0020061552343012207,no,0.0025181210424752637,no,0.003233525763475846,no,0.00330162036191359,no,0.0033157329373185314,no,0.0029573230828176065
2400,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// DISCRIMINATOR,no,undetermined,0,0,0,no,0.0036523008980329486,no,0.0018747438929654615,no,0.0020780385771097666,no,0.0023334647268353588,no,0.002354929831862368,no,0.0021033870660343585
2401,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Primary key constraint,no,undetermined,0,0,0,no,0.005395572647973301,no,0.0035649357255252614,no,0.0031623792484231916,no,0.0029861324402315733,no,0.0032219031069367268,no,0.002851143105525181
2402,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// this is either a <version/> tag with no type attribute, // or a <timestamp/> tag",no,undetermined,0,0,0,no,0.009193139263653663,no,0.010422914640108647,no,0.008882748452298299,no,0.008012611862049898,no,0.007958677935654565,no,0.0072357041374679805
2403,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Object insertions, updates, and deletions have list semantics because // they must happen in the right order so as to respect referential // integrity",no,undetermined,0,0,0,no,0.015250040105613689,no,0.010974600452928217,no,0.009109685759540093,no,0.008043830253452596,no,0.008006984033505265,no,0.007282894417834161
2404,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// ""finish off"" the join",no,undetermined,0,0,0,no,0.005370555008160082,no,0.0022713440752490876,no,0.0020880057868904686,no,0.0026605967304627973,no,0.0026853453496652998,no,0.00239407707724938
2405,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//ignore whitespace,no,undetermined,0,0,0,no,0.0006523426049939063,no,0.0007857200655468125,no,0.0007548912838141091,no,0.0007176321201740758,no,0.000715326147290013,no,0.0006247874737556933
2406,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//do replacements,no,undetermined,0,0,0,no,0.008218298001168706,no,0.009829871390940777,no,0.009081596667453798,no,0.00804665517693113,no,0.007979366290010944,no,0.007280316154873803
2407,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//handle HQL2 collection syntax,no,undetermined,0,0,0,no,0.007398468026186142,no,0.010963364680004166,no,0.005526988721735237,no,0.0047696122207488405,no,0.0048457543782274995,no,0.004457762071947188
2408,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// uuid.hex is deprecated,no,undetermined,0,0,0,no,0.030483161571051697,no,0.010989720567234419,no,0.009115351752786233,no,0.008047906535713696,no,0.008001333920531177,no,0.007279507128656333
2409,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// AbstractSelectingDelegate impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.005867700963281545,no,0.007493263746119705,no,0.007138832996983271,no,0.00758391619001369,no,0.007580076956105815,no,0.006900524203758815
2410,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//hilo params,no,undetermined,0,0,0,no,0.0071054175098447326,no,0.006662374942207826,no,0.007919745402241427,no,0.008050459773528371,no,0.00798664239351018,no,0.007291730755458549
2411,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//sql = query;,no,undetermined,0,0,0,no,0.0018652213285404269,no,0.0041637604851960785,no,0.0034184355880166124,no,0.003536227551165275,no,0.0033499986568067174,no,0.00302931884893722
2412,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//for EJB3,no,undetermined,0,0,0,no,0.00028711748803985157,no,0.00022333350589564548,no,0.00012184063937493227,no,7.509677359934605e-05,no,7.437031659658672e-05,no,6.252336733396308e-05
2413,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// performance opt,no,undetermined,0,0,0,no,0.025924637547025755,no,0.010954765716984283,no,0.009104594058343091,no,0.00805665866398244,no,0.007997979794129627,no,0.007258010108563093
2414,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//sql = update;,no,undetermined,0,0,0,no,0.00044844077960014235,no,0.0007666359490695412,no,0.0007271832885596224,no,0.0007402895243609182,no,0.0007413403486794888,no,0.0006465840193082776
2415,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// DISCRIMINATOR,no,undetermined,0,0,0,no,0.0036523008980329486,no,0.0018747438929654615,no,0.0020780385771097666,no,0.0023334647268353588,no,0.002354929831862368,no,0.0021033870660343585
2416,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//hilo config,no,undetermined,0,0,0,no,0.004885737167615227,no,0.006645193213477207,no,0.007423982056599931,no,0.0080612639284061,no,0.007990042821578558,no,0.007272406392932685
2417,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// so we ""clock over"" on the first invocation",no,undetermined,0,0,0,no,0.0014038433946804345,no,0.0014768237205386174,no,0.0011218966164997135,no,0.0010547477588096028,no,0.0010530959249876576,no,0.0009298273002909781
2418,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// don't allow comments on these insert statements as comments totally // blow up the Oracle getGeneratedKeys ""support"" :(",no,undetermined,0,0,0,no,0.007021821531576603,no,0.009743089927241901,no,0.008078149034209203,no,0.007657579793891431,no,0.007815599472388015,no,0.007093954527872854
2419,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//throw new IdentifierGenerationException(""save associated object first, or disable cascade for inverse association"");",no,undetermined,0,0,0,no,0.0036386426379719054,no,0.004472028626382937,no,0.004187925650534024,no,0.0036015838993069304,no,0.003504974384126701,no,0.0031261490148806873
2420,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//count++;,no,undetermined,0,0,0,no,0.002984611860153184,no,0.004981537651783779,no,0.004685180053224132,no,0.004458027782129486,no,0.004514440181004752,no,0.004062461171842947
2421,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// go ahead and set the lazy here, since pojo.proxy can override it.",no,undetermined,0,0,0,no,0.00792466174259348,no,0.0077743953892610695,no,0.006098614067307189,no,0.005230392053146306,no,0.005241504547186596,no,0.004575292241795274
2422,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// DYNAMIC UPDATE,no,undetermined,0,0,0,no,0.0006580708195607156,no,0.00107564101052976,no,0.0009929500428654192,no,0.0010153499637512312,no,0.0010097740121531539,no,0.0008873471366458208
2423,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// IMPORT,no,undetermined,0,0,0,no,0.003293398570887764,no,0.0038127073816441315,no,0.0035301918286461385,no,0.003563686892161773,no,0.00349314602700606,no,0.003103628231683072
2424,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// BATCH SIZE,no,undetermined,0,0,0,no,0.007121737462431417,no,0.006125867333463852,no,0.005548701571909305,no,0.005384635728882445,no,0.00588944939310831,no,0.005319001491774947
2425,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we need to dirty check collections, since they can cause an owner // version number increment",no,undetermined,0,0,0,no,0.024553646504702573,no,0.01096440651486793,no,0.009085421304990429,no,0.008045360162781033,no,0.007994626710377936,no,0.007284015040576011
2426,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// SELECT BEFORE UPDATE,no,undetermined,0,0,0,no,0.000647884016133244,no,0.0006623111330566633,no,0.000634027089422548,no,0.0005904931259651573,no,0.0005786689781463878,no,0.0005060432204564442
2427,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// OPTIMISTIC LOCK MODE,no,undetermined,0,0,0,no,0.004666523073968332,no,0.004904867800704382,no,0.0027437343911661674,no,0.0032230157928096453,no,0.0031809812667003817,no,0.0028526440697089596
2428,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// intentionally empty,no,undetermined,0,0,0,no,0.0062029637849833775,no,0.006988658068479712,no,0.006647053667740506,no,0.0064179509147434715,no,0.00653565950775097,no,0.005941618381082593
2429,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//first element of array is reserved for the actual instance we are loading!,no,undetermined,0,0,0,no,0.00770859768838199,no,0.006171283140980921,no,0.004199386860320566,no,0.0029178425820254174,no,0.0025933027091911568,no,0.0023307170295197325
2430,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//keep the behavior consistent even for boundary usages,no,undetermined,0,0,0,no,0.0062847956526808435,no,0.007844010186401006,no,0.009101516281463889,no,0.00807250099006585,no,0.007994477798919623,no,0.00728496900089511
2431,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// so we ""clock over"" on the first invocation",no,undetermined,0,0,0,no,0.0014038433946804345,no,0.0014768237205386174,no,0.0011218966164997135,no,0.0010547477588096028,no,0.0010530959249876576,no,0.0009298273002909781
2432,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// do nothing until we hit the rsult set containing the generated id,no,undetermined,0,0,0,no,0.016329480178486906,no,0.01096458703408502,no,0.00909615096746285,no,0.008075103220954791,no,0.007991841168404928,no,0.007291322475710557
2433,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Use the delegate, resolve identifiers as FROM element aliases.",no,undetermined,0,0,0,no,0.009427550934206603,no,0.007146931104588256,no,0.006024114109715994,no,0.005169023431520768,no,0.005073556689147549,no,0.004464062633061281
2434,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// PERSISTER,no,undetermined,0,0,0,no,0.021267460503557156,no,0.008839038148579214,no,0.009104831578170762,no,0.008063859483527435,no,0.007997604003837769,no,0.007294227434595755
2435,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// CUSTOM SQL,no,undetermined,0,0,0,no,0.0015612581290046351,no,0.0040820556495537,no,0.004076381873537434,no,0.004376118180720686,no,0.004434775440098644,no,0.00400151010167643
2436,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Loaded entity instances, by EntityKey",no,undetermined,0,0,0,no,0.014069143934991554,no,0.006842942486785003,no,0.0060299781320589515,no,0.005456892248219889,no,0.005249631508929976,no,0.004784377494895072
2437,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// if the given name is un-qualified we may neen to qualify it,no,undetermined,0,0,0,no,0.014689896766308507,no,0.010971975037061186,no,0.009093364816752474,no,0.008053129614486215,no,0.00798684723279613,no,0.007266075682110501
2438,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the default...,no,undetermined,0,0,0,no,3.708087732268329e-05,no,4.740325277541192e-05,no,3.715996654668237e-05,no,3.455695829441747e-05,no,3.626601690421452e-05,no,2.9996065876826223e-05
2439,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// cascade-save to many-to-one BEFORE the parent is saved,no,undetermined,0,0,0,no,0.0125975240035124,no,0.010991906883410344,no,0.009109496046184907,no,0.008067874036850076,no,0.007990044457913374,no,0.007282709132094162
2440,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// get meta's from <subclass>,no,undetermined,0,0,0,no,0.01389283597224272,no,0.010963107357409414,no,0.00909781489296448,no,0.008063231792361993,no,0.00800632432119494,no,0.007281923651351692
2441,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// properties,no,undetermined,0,0,0,no,0.005377607631194809,no,0.005100804320321773,no,0.004930592196729065,no,0.00516214485141379,no,0.005224368233705591,no,0.0047147296611339635
2442,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// joined subclasses,no,undetermined,0,0,0,no,0.001211476113340225,no,0.0016191740445901937,no,0.0016384219255959666,no,0.0017515513128449332,no,0.0019325183766039373,no,0.0017151293991916467
2443,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// KEY,no,undetermined,0,0,0,no,0.001098376126014934,no,0.000373061776759769,no,0.0002704965529507288,no,0.0002608871058925787,no,0.0003378165000104013,no,0.0002826123035065364
2444,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// CHECK,no,undetermined,0,0,0,no,9.355060221159787e-05,no,0.0002859390220611493,no,0.0002750664077859276,no,0.00022885984013507133,no,0.00022082978536909595,no,0.00018337141161228464
2445,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// properties,no,undetermined,0,0,0,no,0.005377607631194809,no,0.005100804320321773,no,0.004930592196729065,no,0.00516214485141379,no,0.005224368233705591,no,0.0047147296611339635
2446,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// intentionally empty,no,undetermined,0,0,0,no,0.0062029637849833775,no,0.006988658068479712,no,0.006647053667740506,no,0.0064179509147434715,no,0.00653565950775097,no,0.005941618381082593
2447,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// KEY,no,undetermined,0,0,0,no,0.001098376126014934,no,0.000373061776759769,no,0.0002704965529507288,no,0.0002608871058925787,no,0.0003378165000104013,no,0.0002826123035065364
2448,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//even process null collections,no,undetermined,0,0,0,no,0.001991701168948174,no,0.001644254759381606,no,0.0015118809517566478,no,0.0013922784008898066,no,0.0013895166600617571,no,0.0012161172810420532
2449,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//keep the existing version number in the case of replicate!,no,undetermined,0,0,0,no,0.002746747440807059,no,0.002382372547061027,no,0.0019170376804540457,no,0.0016024714198688715,no,0.0016066282986278817,no,0.0014293214099824851
2450,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//source.getPersistenceContext().removeNonExist( new EntityKey( id, persister, source.getEntityMode() ) );",no,undetermined,0,0,0,no,0.005136541403853967,no,0.0037750432823418305,no,0.003580367489731507,no,0.0031796355133343387,no,0.0032939186844599976,no,0.002898244223499322
2451,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// substitutes into values by side-effect,no,undetermined,0,0,0,no,0.005408959730189995,no,0.010963886446179693,no,0.009085281947553783,no,0.008047018119629634,no,0.008005552319797831,no,0.007274329445548053
2452,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Identity map of CollectionEntry instances, by the collection wrapper",no,undetermined,0,0,0,no,0.0054275983431796475,no,0.0036395944867823027,no,0.003042538288698741,no,0.0025047331161389278,no,0.0023480517154417808,no,0.002092555747717368
2453,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// TABLENAME,no,undetermined,0,0,0,no,0.004639395401774582,no,0.005667759934980345,no,0.005912426758755496,no,0.00648230085857522,no,0.006519071114755312,no,0.005900795418141365
2454,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// table-specific parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0010101824176932611,no,0.0008856460825576422,no,0.0008630165781121274,no,0.0008335551984002223,no,0.0008371087800183651,no,0.0007346139556852211
2455,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// join.getKey().setType( new Type( lazz.getIdentifier() ) );,no,undetermined,0,0,0,no,0.007254009977664467,no,0.0048200407552865384,no,0.004208835429764524,no,0.004779236363307917,no,0.004818857906433971,no,0.004345602512066852
2456,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//source.getBatcher().executeBatch(); //found another way to ensure that all batched joined inserts have been executed,no,undetermined,0,0,0,no,0.019930705485771173,no,0.010980202223382684,no,0.009103730636568365,no,0.00804155460517448,no,0.007348337656349953,no,0.006579643932404622
2457,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// IdentifierGenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.011073257039148595,no,0.010958283404820387,no,0.009087169526191378,no,0.008059914786309378,no,0.007980795431339406,no,0.007265729149023407
2458,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// PROPERTIES,no,undetermined,0,0,0,no,0.005377607631194809,no,0.005100804320321773,no,0.004930592196729065,no,0.00516214485141379,no,0.005224368233705591,no,0.0047147296611339635
2459,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// PersistentIdentifierGenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.011073257039148595,no,0.010958283404820387,no,0.009087169526191378,no,0.008059914786309378,no,0.007980795431339406,no,0.007265729149023407
2460,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// prepare and execute the insert,no,undetermined,0,0,0,no,0.000700174812385663,no,0.0014167863011557648,no,0.0011508680081080093,no,0.0010247710554023846,no,0.0009955917017913654,no,0.0008601208628230444
2461,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// COLUMN(S),no,undetermined,0,0,0,no,0.0023781606876688193,no,0.0034273775618066517,no,0.003245587745799849,no,0.003257922629126256,no,0.003295489891163809,no,0.0029687838207017336
2462,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if everything went ok, commit the transaction and close the obtained // connection handle...",no,undetermined,0,0,0,no,0.0006669572757422959,no,0.0005059900551390355,no,0.00044353466747057375,no,0.0003182659199210896,no,0.00038149177031687905,no,0.0003301047804320067
2463,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// prepare and execute the insert,no,undetermined,0,0,0,no,0.000700174812385663,no,0.0014167863011557648,no,0.0011508680081080093,no,0.0010247710554023846,no,0.0009955917017913654,no,0.0008601208628230444
2464,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//fetch the generated id in a separate query,no,undetermined,0,0,0,no,0.027098230798996464,no,0.01097742327319753,no,0.009091665828171542,no,0.008044935571344062,no,0.00799496813430765,no,0.007276337627299097
2465,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we just hit the last position,no,undetermined,0,0,0,no,0.0014188177474242546,no,0.001245476755429819,no,0.0009913761324164365,no,0.0009125425550142624,no,0.0009076876667197913,no,0.0007926035367773731
2466,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// scroll ahead,no,undetermined,0,0,0,no,0.03502577848631154,no,0.010974409860274714,no,0.009116839059056133,no,0.008053186273237494,no,0.007999677081040364,no,0.007266966543243463
2467,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// scroll backward,no,undetermined,0,0,0,no,0.02109081656045933,no,0.010959474710358352,no,0.009094050908819071,no,0.008044878115977573,no,0.007994427200493317,no,0.007279608210358098
2468,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// column index,no,undetermined,0,0,0,no,0.0013386797868192514,no,0.003634683205596788,no,0.003259231736273364,no,0.0030979278708754936,no,0.003110432153252862,no,0.002790777299980858
2469,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we have not yet hit the last result...,no,undetermined,0,0,0,no,0.017331903134268835,no,0.010996062005545917,no,0.00910517363377011,no,0.008045606186000863,no,0.007999442743810838,no,0.0072707149013805095
2470,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// State ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0002664242024359563,no,0.0003048734933510659,no,0.0002854344683229232,no,0.0002857210729732322,no,0.0002893437606923378,no,0.0002495522288239559
2471,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.004490261982243922,no,0.010981376799903006,no,0.00908291702945762,no,0.00805507463124825,no,0.007996075097879871,no,0.007286820631496562
2472,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//column unique-key,no,undetermined,0,0,0,no,0.001606060966049258,no,0.0030934284879067654,no,0.002398709556546275,no,0.0023788608478646765,no,0.0026165050815011403,no,0.002332103903598719
2473,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// do this when all the properties are updateable since there is // a certain likelihood that the information will already be // snapshot-cached.,no,undetermined,0,0,0,no,0.011427160964204423,no,0.009744173169997804,no,0.009092907817824483,no,0.008046508250914892,no,0.008005598284285934,no,0.007280193642093814
2474,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// State ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0002664242024359563,no,0.0003048734933510659,no,0.0002854344683229232,no,0.0002857210729732322,no,0.0002893437606923378,no,0.0002495522288239559
2475,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.004490261982243922,no,0.010981376799903006,no,0.00908291702945762,no,0.00805507463124825,no,0.007996075097879871,no,0.007286820631496562
2476,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Caches,no,undetermined,0,0,0,no,0.013723422511333565,no,0.007464277090742513,no,0.007500372839257078,no,0.008076763366220442,no,0.008007495696609716,no,0.00728673029867763
2477,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Generators:,no,undetermined,0,0,0,no,0.0036523008980329486,no,0.005504726900042388,no,0.006461868463342029,no,0.00788716525811375,no,0.0079850989855144,no,0.007268429553841039
2478,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// cache region is defined by the root-class in the hierarchy...,no,undetermined,0,0,0,no,0.004903699201156763,no,0.004504560957867336,no,0.0035234646492535064,no,0.0030206201567275857,no,0.003455104620081608,no,0.003080606895494377
2479,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// PROPERTIES,no,undetermined,0,0,0,no,0.005377607631194809,no,0.005100804320321773,no,0.004930592196729065,no,0.00516214485141379,no,0.005224368233705591,no,0.0047147296611339635
2480,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//JNDI + Serialization:,no,undetermined,0,0,0,no,0.00862972063202151,no,0.007967255528345126,no,0.00910789471143575,no,0.008074108734301146,no,0.007996075274266124,no,0.007279033978319552
2481,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//checking for named queries,no,undetermined,0,0,0,no,0.038242311988650864,no,0.010973505028047352,no,0.00911005670367168,no,0.008073811079755784,no,0.008011385787078497,no,0.0072869852917930855
2482,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//stats,no,undetermined,0,0,0,no,0.0036523008980329486,no,0.005504726900042388,no,0.005893732486199247,no,0.005896750099765611,no,0.005899976661498009,no,0.005337328091432986
2483,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// EntityNotFoundDelegate,no,undetermined,0,0,0,no,0.0036523008980329486,no,0.005504726900042388,no,0.006461868463342029,no,0.00788716525811375,no,0.0079850989855144,no,0.007268429553841039
2484,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Check named HQL queries,no,undetermined,0,0,0,no,0.004032745907093362,no,0.0025085721906039607,no,0.002357511305399578,no,0.002332597706542505,no,0.002322652791928827,no,0.0020898371781292754
2485,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this will throw an error if there's something wrong.,no,undetermined,0,0,0,no,0.22201402125768718,no,0.13372257645391275,no,0.11880104020799169,no,0.10888648714315236,no,0.10798106581145948,no,0.10410053998516798
2486,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//prevents this session from adding things to cache,no,undetermined,0,0,0,no,0.027680142642976375,no,0.010952110783365708,no,0.009078921505897371,no,0.008058418285396081,no,0.007984388030393013,no,0.007264648832271133
2487,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// look for the instance by uuid,no,undetermined,0,0,0,no,0.003718524466598062,no,0.0032335388312233074,no,0.002760200660951237,no,0.0024039063758825624,no,0.0023791649866663662,no,0.0021182614394511146
2488,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//for a dynamic-class,no,undetermined,0,0,0,no,0.002124905029599851,no,0.002794146087596375,no,0.00219716652462869,no,0.001945919979885388,no,0.0019467262293227335,no,0.001731095952063675
2489,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//test this entity to see if we must query it,no,undetermined,0,0,0,no,0.00921973225764195,no,0.008037588870136243,no,0.0060324175567978405,no,0.004570926971944927,no,0.004309927625001781,no,0.003873064850634901
2490,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//NOTE EARLY EXIT,no,undetermined,0,0,0,no,0.005046302398143233,no,0.0035759389019286605,no,0.0029371527467461234,no,0.00270068247031243,no,0.0026841669436306528,no,0.0024229950349091522
2491,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// for backward-compatability,no,undetermined,0,0,0,no,0.0027025679529018845,no,0.007116289644782023,no,0.006162240171041546,no,0.0057842796601150215,no,0.005761219353249792,no,0.005226859352713746
2492,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ignore this error for now,no,undetermined,0,0,0,no,0.013291002118879213,no,0.009568547092658145,no,0.007058374518177032,no,0.005577626452135991,no,0.00547666315273711,no,0.004977501678092219
2493,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//must add to JNDI _after_ adding to HashMaps, because some JNDI servers use serialization",no,undetermined,0,0,0,no,0.030327675008946023,no,0.01096731370509405,no,0.009097574883264325,no,0.00805798822046627,no,0.007985704943188444,no,0.00727706309229502
2494,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// look for existing collection as part of the persistence context,no,undetermined,0,0,0,no,0.007050002096816965,no,0.003987159858623753,no,0.002985755372008234,no,0.002406244979832996,no,0.0024291736925014062,no,0.002159784608148702
2495,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Make sure this is a defined parameter and check the incoming value type,no,undetermined,0,0,0,no,0.015482507757393604,no,0.01097380735883389,no,0.009086140739950519,no,0.008073069743689631,no,0.007983049817935836,no,0.00726668157866356
2496,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// for each of the defined parameters, make sure its value // has been set",no,undetermined,0,0,0,no,0.0008767202395770117,no,0.0007271427990812694,no,0.0005263510069659453,no,0.00046629881881394934,no,0.00047332505246677845,no,0.0004043780936947414
2497,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//we never need to apply locks to the SQL,no,undetermined,0,0,0,no,0.007211828448375487,no,0.006384785883671864,no,0.005076197712849459,no,0.004793688842865158,no,0.004863809765963703,no,0.004403906223760975
2498,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// deletes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.004069135579118602,no,0.005214384753652284,no,0.006174366458162678,no,0.007452192314698493,no,0.007624571514592857,no,0.006949838249533329
2499,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// updates ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.003363809081284635,no,0.003120855681625217,no,0.002917820899082539,no,0.0031498469384349643,no,0.0031240929215926192,no,0.0028046361682864296
2500,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// cache the actual id of the object, not the value of the // property-ref, which might not be initialized",no,undetermined,0,0,0,no,0.15443528020209107,no,0.13755929841325987,no,0.11148455711131076,no,0.09874717676325663,no,0.008000742712656333,no,0.007289219753325628
2501,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// loading ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0022766352629250636,no,0.003632542793043896,no,0.003448021579832445,no,0.0027535977782769242,no,0.0026718958921448646,no,0.002369601214548632
2502,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// select-range is terminated by declaration of ""from""",no,undetermined,0,0,0,no,0.013353683965346102,no,0.010837644325489847,no,0.008122266511085816,no,0.006434465581671529,no,0.006226681598172891,no,0.005701490123902898
2503,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// for an any,no,undetermined,0,0,0,no,0.005434460184300501,no,0.00239248878399966,no,0.001966902969880145,no,0.0016928227516883527,no,0.0016969668675971472,no,0.0015056265619571047
2504,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// insertable simply because that is the user did not specify // anything; just override it,no,undetermined,0,0,0,no,0.004595474389439593,no,0.005292590966033911,no,0.0041539501176346,no,0.003769295374947173,no,0.0036666036736089903,no,0.0029931947244512137
2505,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// properties generated on update can never be updateable...,no,undetermined,0,0,0,no,0.008431569038833185,no,0.00809054184700788,no,0.00910282138514992,no,0.008059532276421071,no,0.008010254800212597,no,0.007279441344628114
2506,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// updateable only because the user did not specify  // anything; just override it,no,undetermined,0,0,0,no,0.0013484450646319272,no,0.001600492992983919,no,0.001669850328574604,no,0.0014505415645940203,no,0.0014344383181508402,no,0.0011685753558396139
2507,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// the user specifically supplied update=""true"", // which constitutes an illegal combo",no,undetermined,0,0,0,no,0.0028647226261118088,no,0.0029102770970527484,no,0.0024912194149335227,no,0.0023433392125875325,no,0.0023218865695122997,no,0.0020795499463831645
2508,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ROLENAME,no,undetermined,0,0,0,no,0.002946927194353146,no,0.00454663463320685,no,0.005320218454522079,no,0.006461992302710464,no,0.006552492030331784,no,0.005951421194033599
2509,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//final boolean forceCacheRefresh,",no,undetermined,0,0,0,no,0.0001382254626651015,no,0.00018676860229683545,no,0.00015313937064195146,no,0.00013158445774651422,no,0.00013154098918303182,no,0.00010987896739092158
2510,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// first, try to load it from the temp PC associated to this SS",no,undetermined,0,0,0,no,0.005069810469600355,no,0.005752956734618706,no,0.0056500261620545935,no,0.006224541888878113,no,0.006232980878493421,no,0.005681500850427724
2511,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// otherwise immediately materialize it,no,undetermined,0,0,0,no,0.005125993114763047,no,0.005565779108300048,no,0.00382290023382476,no,0.0037961981918358504,no,0.0038805066608757622,no,0.0035063423163898327
2512,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/////////////////////////////////////////////////////////////////////////////////////////////////////,no,undetermined,0,0,0,no,0.0036523008980329486,no,0.005504726900042388,no,0.006461868463342029,no,0.00788716525811375,no,0.0079850989855144,no,0.007268429553841039
2513,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// no auto-flushing to support in stateless session,no,undetermined,0,0,0,no,0.00268823807931995,no,0.0034143356657656103,no,0.0028994677819339657,no,0.0025966339388620203,no,0.002577705096743825,no,0.0022895851140514126
2514,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// FETCH STRATEGY,no,undetermined,0,0,0,no,0.004806039484546438,no,0.010987770129180743,no,0.009093228950605187,no,0.008055978921661811,no,0.00799658768075814,no,0.007286173103610117
2515,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// TABLE,no,undetermined,0,0,0,no,0.0008750598993451579,no,0.0007317278723877637,no,0.0006959219015839755,no,0.0006856601654537795,no,0.0006830381868291666,no,0.0005959571827503763
2516,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//after setting values to object, entityMode",no,undetermined,0,0,0,no,0.0002901975567051274,no,0.0003322023590822725,no,0.00024963159292670057,no,0.0002177189551940946,no,0.00021916708276037653,no,0.00018749449280871706
2517,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// SORT,no,undetermined,0,0,0,no,0.0035384456961780227,no,0.004068674581874625,no,0.0040036838604597435,no,0.004155591069001225,no,0.004171308823767797,no,0.0037506458006804143
2518,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// do a check,no,undetermined,0,0,0,no,0.003326744801522989,no,0.007487936641767979,no,0.006986777291955518,no,0.00585847781280205,no,0.0056952560363959705,no,0.0050755097761834645
2519,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// saveOrUpdate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.003697584464565059,no,0.004580318408068663,no,0.004437259774740605,no,0.004552848076803018,no,0.004571026210489164,no,0.004097419766382173
2520,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// update() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0008397323757307509,no,0.0011041905653661251,no,0.0009899263451084966,no,0.0009701370283885995,no,0.0009631072481809046,no,0.0008410931524873589
2521,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// lock() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0018952634067441526,no,0.003452134749638796,no,0.003200546846364912,no,0.003877360772739588,no,0.003869582553433143,no,0.003483200422537076
2522,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// persist() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.001088945840457742,no,0.0015972476412633245,no,0.001624368907615611,no,0.0017575346560434156,no,0.0017735909459001098,no,0.0015685644208277836
2523,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// persistOnFlush() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.003697584464565059,no,0.004580318408068663,no,0.004437259774740605,no,0.004552848076803018,no,0.004571026210489164,no,0.004097419766382173
2524,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// delete() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0027047136880534763,no,0.0021362132080212466,no,0.0019418654671158387,no,0.0018521191355831501,no,0.0018358706495304918,no,0.0016177931794436682
2525,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// load()/get() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0018045128035750178,no,0.0023185872143130066,no,0.0021429290423677903,no,0.0020581426643414263,no,0.0020609406610235855,no,0.0018336165646169224
2526,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// refresh() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0037422078770210625,no,0.004437712720650408,no,0.004159132829405874,no,0.00419772475505679,no,0.004230411992650079,no,0.003794162449151313
2527,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// CUSTOM SQL,no,undetermined,0,0,0,no,0.0015612581290046351,no,0.0040820556495537,no,0.004076381873537434,no,0.004376118180720686,no,0.004434775440098644,no,0.00400151010167643
2528,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// unsorted, natural, comparator.class.name",no,undetermined,0,0,0,no,0.008380610815278649,no,0.010980687449698509,no,0.009098904880431155,no,0.008059921442968484,no,0.007997359721374579,no,0.007287363137247981
2529,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// replicate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.003697584464565059,no,0.004580318408068663,no,0.004437259774740605,no,0.004552848076803018,no,0.004571026210489164,no,0.004097419766382173
2530,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// set up second pass,no,undetermined,0,0,0,no,0.0008410055924730152,no,0.0013126797723325427,no,0.001119555070394654,no,0.0010445669124997605,no,0.0010298915183651553,no,0.0008856313770124254
2531,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// do not auto-flush while outside a transaction,no,undetermined,0,0,0,no,0.021023529935523214,no,0.010983744707448728,no,0.009096243319878475,no,0.008046940476623332,no,0.00800654765032997,no,0.007281963987563234
2532,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this is an internal error of some sort...,no,undetermined,0,0,0,no,0.3310871643000237,no,0.24617387394015,no,0.23970853676174508,no,0.23445246629487085,no,0.23512943314281257,no,0.2285758864911683
2533,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//do not return a proxy! //(this option indicates we are initializing a proxy),no,undetermined,0,0,0,no,0.025311392554960316,no,0.01095505169374843,no,0.009116390764122052,no,0.008043918291625138,no,0.00798361172095968,no,0.007264823875503383
2534,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ignore,no,undetermined,0,0,0,no,9.704158853977813e-05,no,0.0001028234778214713,no,8.618023972266878e-05,no,7.500503008764863e-05,no,7.548377628387645e-05,no,6.317234672920366e-05
2535,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// for an any // we will have to use reflection,no,undetermined,0,0,0,no,0.06174278187225331,no,0.010963795209139574,no,0.009095194329971822,no,0.008063377327476237,no,0.007989688353866299,no,0.007281233944135761
2536,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//only collections belonging to deleted entities are allowed to be dereferenced in the case of orphan delete,no,undetermined,0,0,0,no,0.005982660802520489,no,0.004030341364207147,no,0.0032347430649578334,no,0.0026293860243068565,no,0.0025266634723054605,no,0.0022746270119454446
2537,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if it was previously unreferenced, we need to flush in order to // get its state into the database in order to execute query",no,undetermined,0,0,0,no,0.005631220648634358,no,0.004460612319526302,no,0.0026510237078525155,no,0.0024584205546576733,no,0.002323108263812579,no,0.0020995931827366508
2538,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// not for internal use:,no,undetermined,0,0,0,no,0.0036763413210088485,no,0.004449707433431417,no,0.003339762129314,no,0.0026760893307088535,no,0.0026519987568918778,no,0.002372228812102196
2539,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// otherwise, we only need to flush if there are in-memory changes // to the queried tables",no,undetermined,0,0,0,no,0.03968084547501047,no,0.01097619911206272,no,0.009079787889390522,no,0.008044174397436049,no,0.00798339373101247,no,0.007281015636927126
2540,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_0,no,undetermined,0,0,0,no,0.0036523008980329486,no,0.00513915212545195,no,0.005027493849438599,no,0.005065922042797434,no,0.0050777015913364455,no,0.004591248132509578
2541,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if it is initialized, see if the underlying //instance is contained, since we need to  //account for the fact that it might have been //evicted",no,undetermined,0,0,0,no,0.02252824375412222,no,0.010985865341066187,no,0.009081455740478401,no,0.008066142964668507,no,0.007995697668953574,no,0.0072772527987584774
2542,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//stops flush being called multiple times if this method is recursively called,no,undetermined,0,0,0,no,0.03472908525006059,no,0.010998363258964687,no,0.009088020452714136,no,0.008073504994265169,no,0.00799364700981626,no,0.007272133728850977
2543,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// decode row selection...,no,undetermined,0,0,0,no,0.0020298656099274146,no,0.00227120932278408,no,0.0019625974819270685,no,0.0018406343200758248,no,0.0018268584847328164,no,0.0016191417533958355
2544,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// basically just an adapted copy of find(CriteriaImpl),no,undetermined,0,0,0,no,0.043742581773523505,no,0.010983754146767383,no,0.009098539128043766,no,0.008071526290442116,no,0.007980199741934103,no,0.007293244258113975
2545,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ignore this error for now,no,undetermined,0,0,0,no,0.013291002118879213,no,0.009568547092658145,no,0.007058374518177032,no,0.005577626452135991,no,0.00547666315273711,no,0.004977501678092219
2546,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we need to writeObject() on this since interceptor is user defined,no,undetermined,0,0,0,no,0.012956983377116288,no,0.01022291586612351,no,0.007781843818072788,no,0.008050593265049193,no,0.008000953815154262,no,0.007272423593251775
2547,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the old-time stand-by...,no,undetermined,0,0,0,no,0.004296127756237627,no,0.004569494175971272,no,0.003925512693653893,no,0.003735202338422456,no,0.0037516488316772026,no,0.003351054572192482
2548,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// parameter bind values...,no,undetermined,0,0,0,no,0.0006299845051389431,no,0.000789165711976398,no,0.0006873149386030978,no,0.0006527501878944453,no,0.0006520812011787425,no,0.0005689407645706125
2549,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Parameter handling code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.030350694773068662,no,0.010969858372809749,no,0.009083460369007684,no,0.008077019145551364,no,0.008005325755712427,no,0.007278440113090621
2550,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Execution methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0035746453866225885,no,0.004196677961487139,no,0.004143623957099422,no,0.004276728291260335,no,0.004205463457494691,no,0.0037621582578034837
2551,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//NOTE SPECIAL CASE: // one-to-one constrained=false cannot be proxied, // so default to join and non-lazy",no,undetermined,0,0,0,no,0.0022057219786623555,no,0.0014082478637914876,no,0.001166189249418506,no,0.0011707144603711696,no,0.001167013296788932,no,0.0010346811095238513
2552,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// use old (HB 2.1) defaults if outer-join is specified,no,undetermined,0,0,0,no,0.0015669601461907124,no,0.0018965991568781666,no,0.001678849388505101,no,0.0016748083358879098,no,0.001679973875643704,no,0.0015015560506364588
2553,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we have a CGLIB enhanced entity,no,undetermined,0,0,0,no,0.005295641434375815,no,0.005249326084778844,no,0.005310211678977564,no,0.005496361005832697,no,0.00550498008263731,no,0.004979672060486634
2554,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we have a CGLIB enhanced entity,no,undetermined,0,0,0,no,0.005295641434375815,no,0.005249326084778844,no,0.005310211678977564,no,0.005496361005832697,no,0.00550498008263731,no,0.004979672060486634
2555,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we have a Javassist enhanced entity,no,undetermined,0,0,0,no,0.005295641434375815,no,0.005249326084778844,no,0.005310211678977564,no,0.005496361005832697,no,0.00550498008263731,no,0.004979672060486634
2556,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we have a Javassist enhanced entity,no,undetermined,0,0,0,no,0.005295641434375815,no,0.005249326084778844,no,0.005310211678977564,no,0.005496361005832697,no,0.00550498008263731,no,0.004979672060486634
2557,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// FieldInterceptor impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.005867700963281545,no,0.007493263746119705,no,0.007138832996983271,no,0.00758391619001369,no,0.007580076956105815,no,0.006900524203758815
2558,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// subclass accesses ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.008217019559221845,no,0.009006382319949257,no,0.009109507288018435,no,0.008057898498539552,no,0.007997818754028269,no,0.007283580978418524
2559,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// FieldHandler impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.005867700963281545,no,0.007493263746119705,no,0.007138832996983271,no,0.00758391619001369,no,0.007580076956105815,no,0.006900524203758815
2560,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// should *not* need to grow beyond the size of the total number of columns in the rs,no,undetermined,0,0,0,no,0.03400359965063602,no,0.01096695518815429,no,0.009109449798332144,no,0.008038413638561535,no,0.007988130534160134,no,0.007285315379845723
2561,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// should probably no-op commit/rollback here, at least in JTA scenarios",no,undetermined,0,0,0,no,0.03516323892978973,no,0.010986153137206493,no,0.009108618075239116,no,0.008074718779691221,no,0.008002233789390642,no,0.007271868713306467
2562,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Various Expectation instances ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.00476273430124364,no,0.005506624210278536,no,0.005624898288989486,no,0.005893348990895651,no,0.00600287258039964,no,0.005446777982418082
2563,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// explicitly perform no checking...,no,undetermined,0,0,0,no,0.028966518879752972,no,0.010988977406475881,no,0.009114264659266626,no,0.008061200264556267,no,0.007987336396078095,no,0.007287762011779086
2564,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// used from testsuite,no,undetermined,0,0,0,no,0.002073379739104575,no,0.002891005387969479,no,0.002794155059338866,no,0.0026682742137001635,no,0.002696691281949298,no,0.00241458952956547
2565,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// assume we are in an auto-commit state,no,undetermined,0,0,0,no,0.0016641058328698175,no,0.0015994526787819225,no,0.0012791289339056996,no,0.001143605165841887,no,0.001073567283053544,no,0.0009443299906710076
2566,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*package*/,no,undetermined,0,0,0,no,0.004437760287425697,no,0.004876701033127142,no,0.004453796219161608,no,0.004528643871969353,no,0.004494747150569872,no,0.004042588878453024
2567,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// GENERATOR,no,undetermined,0,0,0,no,0.03545971578841302,no,0.01096379414521771,no,0.0090916721480721,no,0.008054382661933125,no,0.007984811234772507,no,0.00726522641844148
2568,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// register synch; stats.connect(),no,undetermined,0,0,0,no,0.001661082102234454,no,0.0026485479400414165,no,0.0025728878372191007,no,0.002614144638720734,no,0.002671905454848878,no,0.0023857458519931096
2569,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// calls executeBatch(),no,undetermined,0,0,0,no,0.03322538774450204,no,0.01095486672379103,no,0.009077526120447014,no,0.008044424918528685,no,0.007989164762385379,no,0.007271201839081084
2570,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//no big deal,no,undetermined,0,0,0,no,0.00202874411943926,no,0.0030822774394086263,no,0.0027251698755104497,no,0.0024729465694060416,no,0.0024848196501374748,no,0.002223181439954134
2571,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// no big deal,no,undetermined,0,0,0,no,0.00202874411943926,no,0.0030822774394086263,no,0.0027251698755104497,no,0.0024729465694060416,no,0.0024848196501374748,no,0.002223181439954134
2572,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// no big deal,no,undetermined,0,0,0,no,0.00202874411943926,no,0.0030822774394086263,no,0.0027251698755104497,no,0.0024729465694060416,no,0.0024848196501374748,no,0.002223181439954134
2573,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// see explanation above...,no,undetermined,0,0,0,no,0.004782383025393507,no,0.009275129681955112,no,0.00911321570175676,no,0.008066551758448075,no,0.007985012154582975,no,0.007283516324926566
2574,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If we are in the process of releasing, no sense // checking for aggressive-release possibility.",no,undetermined,0,0,0,no,0.023261673252749675,no,0.010985010873235133,no,0.009099826750303519,no,0.008062309967071832,no,0.007996722861121344,no,0.0072821909087398265
2575,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// EARLY EXIT!!!!,no,undetermined,0,0,0,no,0.0012308318987046829,no,0.0010243170538795194,no,0.0009095420391860735,no,0.0008708338326286836,no,0.0008757209531325773,no,0.0007785241760039121
2576,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// ResultSet impl (""overridden"") ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",no,undetermined,0,0,0,no,0.001488750872872459,no,0.002416623544087522,no,0.002318783164726326,no,0.0024526061056479405,no,0.0024631414254719514,no,0.0022190860329279493
2577,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ResultSet impl (delegated) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0013645643823080832,no,0.0022112734625463802,no,0.002017668219642587,no,0.002100554795886443,no,0.0021057948358425226,no,0.0017861255374506694
2578,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ID UNSAVED-VALUE,no,undetermined,0,0,0,no,0.004566744614404204,no,0.003599829070109705,no,0.0030477195542700617,no,0.003112008611026515,no,0.003136478241780345,no,0.002795269203081795
2579,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// VERSION UNSAVED-VALUE,no,undetermined,0,0,0,no,0.0024926137641732805,no,0.0025446987982010935,no,0.002284106424765622,no,0.002360742545528859,no,0.0023403551110994982,no,0.0020808379857572795
2580,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// not necessarily a *unique* property reference,no,undetermined,0,0,0,no,0.009188516573357487,no,0.010167916709135947,no,0.008644534572159659,no,0.00788016934250028,no,0.007570406248321244,no,0.006831246795517414
2581,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Bind the where,no,undetermined,0,0,0,no,0.0021747791836488114,no,0.001785990497772359,no,0.0014577971751816691,no,0.0012964871929289057,no,0.0014416685672154128,no,0.0012754763063535818
2582,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// refer to comment in StatefulPersistenceContext.addCollection(),no,undetermined,0,0,0,no,0.0020111360284026545,no,0.003913253140458773,no,0.003367688154212892,no,0.003249892623754455,no,0.003256680352312468,no,0.002923490684691477
2583,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ConnectionManager.Callback implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.004584161390544569,no,0.005110362216350579,no,0.0051116674275805875,no,0.00522399541491859,no,0.005033888270591633,no,0.004494578768279132
2584,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Note : success = false, because we don't know the outcome of the transaction",no,undetermined,0,0,0,no,0.02311431354062615,no,0.010992693453746663,no,0.009111104816057442,no,0.008054474012967147,no,0.00799757823165,no,0.007282284311102372
2585,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Bind the order-by,no,undetermined,0,0,0,no,0.0005972508141592501,no,0.0005504727855973979,no,0.0003789162904045021,no,0.00032452483013521493,no,0.00032159561717367126,no,0.0002785181437348634
2586,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we already have a callback registered; either a local // (org.hibernate.Transaction) transaction has accepted // callback responsibilities, or we have previously // registered a transaction synch.",no,undetermined,0,0,0,no,0.002499679945294067,no,0.0018299801264529136,no,0.0014822958567915472,no,0.0013240598545250922,no,0.0014426032252942544,no,0.0012862990306360992
2587,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Bind the filters,no,undetermined,0,0,0,no,0.0019130502974584432,no,0.0020418546181001605,no,0.0019553603420165502,no,0.0018639718944648345,no,0.0018809314150248768,no,0.001668344687936904
2588,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// overriding inherited meta attribute. HBX-621 & HBX-793			,no,undetermined,0,0,0,no,0.004038280420194162,no,0.005267943741891202,no,0.005506583482259851,no,0.006113948439310732,no,0.006113124774371319,no,0.005506811139418189
2589,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// first, iterate over all elements capable of defining an extends attribute // collecting all found extends references if they cannot be resolved // against the already processed mappings.",no,undetermined,0,0,0,no,0.001716653372980693,no,0.0017785532936282452,no,0.0016155094001297711,no,0.001441647264106888,no,0.0014292744081084573,no,0.001259609151806301
2590,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//+ ""_"" + referencedColumnName not used for backward compatibility",no,undetermined,0,0,0,no,0.012704919975093345,no,0.010978736086350124,no,0.009115457943541124,no,0.008050112746744144,no,0.008000480387742858,no,0.007289564280674256
2591,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//SessionFactory name:,no,undetermined,0,0,0,no,0.002538826197132609,no,0.003234708725004385,no,0.0027078784659986957,no,0.002519743428322721,no,0.002523908700809575,no,0.0022710652226216295
2592,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//JDBC and connection settings:,no,undetermined,0,0,0,no,0.001447214389924074,no,0.0018411648838540134,no,0.0031144472562548674,no,0.004030554306406974,no,0.003941075424835772,no,0.0035584375292239366
2593,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//JDBC and connection settings:,no,undetermined,0,0,0,no,0.001447214389924074,no,0.0018411648838540134,no,0.0031144472562548674,no,0.004030554306406974,no,0.003941075424835772,no,0.0035584375292239366
2594,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Interrogate JDBC metadata,no,undetermined,0,0,0,no,0.0016702010064750929,no,0.001286784141304356,no,0.0016456584317941882,no,0.0033137232350239293,no,0.0033371939006127333,no,0.0030222686422169097
2595,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// user supplied JDBC connections,no,undetermined,0,0,0,no,0.0008001727138588477,no,0.0010543608843129968,no,0.0013936818489809996,no,0.0017206700377774555,no,0.001723840333705074,no,0.0015415565381321178
2596,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Transaction settings:,no,undetermined,0,0,0,no,0.0003521717883096687,no,0.00040478332155739847,no,0.0003375414267284965,no,0.00032592117796105904,no,0.00042530649607856215,no,0.0003690528519268006
2597,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//SQL Generation settings:,no,undetermined,0,0,0,no,0.0003358637797428381,no,0.000598413451483928,no,0.0005707964607969433,no,0.0006330789798179561,no,0.0006419483909194052,no,0.0005576116999191049
2598,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Query parser settings:,no,undetermined,0,0,0,no,0.001237771713961484,no,0.002269170871034825,no,0.0018585950975384465,no,0.001836903250861676,no,0.001747000087880392,no,0.0015574731579789266
2599,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Second-level / query cache:,no,undetermined,0,0,0,no,0.007825793250574605,no,0.009444637541746174,no,0.00884942568855112,no,0.008034149013952656,no,0.007748347153891315,no,0.006943449203864524
2600,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//SQL Exception converter:,no,undetermined,0,0,0,no,0.003151803345968426,no,0.0057142693577177306,no,0.006064884019613228,no,0.007006586652650728,no,0.007094046755580674,no,0.00647133018291984
2601,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Statistics and logging:,no,undetermined,0,0,0,no,0.003523154298488243,no,0.00423086855657146,no,0.004025000009079478,no,0.0038338316778727633,no,0.0037094155031551475,no,0.003299498373419523
2602,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		settings.setShowSqlEnabled(showSql);,no,undetermined,0,0,0,no,6.0008500695632545e-06,no,1.2682164547901053e-05,no,9.38384040920876e-06,no,8.490636526980989e-06,no,8.677752840120881e-06,no,6.987821273275752e-06
2603,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//postInitialize() will be called after initialization,no,undetermined,0,0,0,no,0.0016199793097570422,no,0.0019253873885597386,no,0.001623254594116998,no,0.0014919594327802892,no,0.001499395529830185,no,0.0013449695594772617
2604,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		settings.setFormatSqlEnabled(formatSql);,no,undetermined,0,0,0,no,6.0008500695632545e-06,no,1.2682164547901053e-05,no,9.38384040920876e-06,no,8.490636526980989e-06,no,8.677752840120881e-06,no,6.987821273275752e-06
2605,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// cannot handle single quotes,no,undetermined,0,0,0,no,0.005453265436429745,no,0.006388445481977301,no,0.0071246305266520656,no,0.006925688244345173,no,0.006944117969111184,no,0.006321119391306016
2606,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Schema export:,no,undetermined,0,0,0,no,0.006054760605229014,no,0.010180548626012788,no,0.009104294040015124,no,0.008070266763661434,no,0.007982501760780138,no,0.007279519694060207
2607,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// todo : for 4.0 //	private static final Logger log = LoggerFactory.getLogger( SQLStatementLogger.class ); // this is the legacy logging 'category'...,no,undetermined,0,0,0,yes,0.8366732179722923,yes,0.8246095301132342,yes,0.821134559642022,yes,0.823727127161306,yes,0.8207822275993796,yes,0.823223234619926
2608,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//if dotted and not load-collection nor return-join //regular property,no,undetermined,0,0,0,no,0.0078506798175617,no,0.00463590162964376,no,0.0040392072337131196,no,0.0043371295617329825,no,0.0045235391739540465,no,0.0041117628623270185
2609,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// don't even bother trying to read further,no,undetermined,0,0,0,no,0.011686727495556689,no,0.010984536598909038,no,0.00910588836339953,no,0.008067746252029835,no,0.007989898376798492,no,0.007264600061080257
2610,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	private ComponentTuplizerFactory componentTuplizerFactory; todo : HHH-3517 and HHH-1907 //	private BytecodeProvider bytecodeProvider;,no,undetermined,0,0,0,no,0.553492938598893,no,0.03173242734494038,no,0.009081005516463117,no,0.008060787439781874,no,0.007998749098834568,no,0.00727617832149354
2611,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// public getters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.004847621501388783,no,0.006078719326827063,no,0.006019930126372657,no,0.006383061020697046,no,0.006380121186021812,no,0.005789572157820203
2612,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// generated properties can *never* be insertable...,no,undetermined,0,0,0,no,0.015813267651506986,no,0.010981468963557247,no,0.009097815102194614,no,0.008042794965283177,no,0.007988102544965058,no,0.0072639808043349
2613,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	public ComponentTuplizerFactory getComponentTuplizerFactory() { //		return componentTuplizerFactory; //	},no,undetermined,0,0,0,no,0.004827582653350053,no,0.0032668892069269823,no,0.002601307707630766,no,0.0021702159339340903,no,0.0021444946235422793,no,0.001911570112219406
2614,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// package protected setters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.013904148291225063,no,0.010977175313573987,no,0.009080474002942167,no,0.008056084425356254,no,0.008000841140375008,no,0.00726428176850517
2615,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	public BytecodeProvider getBytecodeProvider() { //		return bytecodeProvider; //	} // //	void setBytecodeProvider(BytecodeProvider bytecodeProvider) { //		this.bytecodeProvider = bytecodeProvider; //	},no,undetermined,0,0,0,no,0.014146562028246795,no,0.010998796448391199,no,0.00909937620347979,no,0.008056139463539082,no,0.008002778321275675,no,0.00726286400464721
2616,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// using local since the inheritedMetas at this point is not the correct map since it is always the empty map,no,undetermined,0,0,0,no,0.008001497506489366,no,0.006937180452016989,no,0.005645690727800872,no,0.004679088920040117,no,0.004517155658444239,no,0.004027928906804127
2617,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	protected List extendsQueue;,no,undetermined,0,0,0,no,0.007022781926146459,no,0.007466558699234228,no,0.006299883564656608,no,0.0055963570128234755,no,0.005522681965001491,no,0.004954985567535643
2618,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		extendsQueue = new ArrayList();,no,undetermined,0,0,0,no,0.006992680218645263,no,0.005267156534338609,no,0.004786472758736605,no,0.0046672671336074854,no,0.004655688262324306,no,0.004188934291767439
2619,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		componentTuplizerFactory = new ComponentTuplizerFactory();,no,undetermined,0,0,0,no,0.0011524323874586727,no,0.0015456798653536268,no,0.0013203825020007525,no,0.0011328021668317815,no,0.0011285461793092777,no,0.0009805867107047217
2620,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if doc is null, then for whatever reason, the cached file cannot be used...",no,undetermined,0,0,0,no,0.0020923492005269083,no,0.0042529791379904555,no,0.003278597824537392,no,0.0027614047392231188,no,0.002702032256541339,no,0.0024425348619299945
2621,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// position cursor to the last row,no,undetermined,0,0,0,no,0.0006900000720060732,no,0.000795853591954065,no,0.0006347517432133878,no,0.0005561333196993449,no,0.0005573264531345683,no,0.0004855120968918345
2622,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// sequentially read the result set in reverse until we recognize // a change in the key value.  At that point, we are pointed at // the last physical sequential row for the logical row in which // we are interested in processing",no,undetermined,0,0,0,no,0.001714446177826534,no,0.001326575199654094,no,0.0009416899248642051,no,0.0010027539956117455,no,0.0009597233754263964,no,0.0008355732325546767
2623,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Read backwards until we read past the first physical sequential // row with the key we are interested in loading,no,undetermined,0,0,0,no,0.0006384282755380952,no,0.0006338066437062405,no,0.0004695730048348511,no,0.0005311587897739664,no,0.0005377553113360208,no,0.00045955608033861626
2624,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Finally, read ahead one row to position result set cursor // at the first physical row we are interested in loading",no,undetermined,0,0,0,no,0.0011301091738592838,no,0.0009197336055978268,no,0.0006698276381548393,no,0.0006756743086099809,no,0.0006565501762126052,no,0.0005710188562076953
2625,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This method may be called many times!!,no,undetermined,0,0,0,no,0.2628499572009566,no,0.16014147961223402,no,0.13497778627140591,no,0.1277127880957983,no,0.12686230588255507,no,0.12214746420967884
2626,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// force the proxy to resolve itself,no,undetermined,0,0,0,no,0.011424892773610917,no,0.00709123164804662,no,0.005718212698450459,no,0.004971124710229698,no,0.004946579161894298,no,0.0042660949642043845
2627,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this is equivalent to the old behavior...,no,undetermined,0,0,0,no,0.02430453129126028,no,0.010956327188810434,no,0.009114661415182182,no,0.008065696831108785,no,0.007983164786116095,no,0.007292131119369785
2628,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if null, owner will be retrieved from session",no,undetermined,0,0,0,no,0.003459251425493263,no,0.003906431315546497,no,0.0037758838917988377,no,0.003579226239309575,no,0.004175785165015302,no,0.004894124877182477
2629,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//			Iterator iterator = extendsQueue.iterator();,no,undetermined,0,0,0,no,0.0024394353732258888,no,0.0020573460143310145,no,0.0020322254473278865,no,0.002332459119608147,no,0.0023290181546104793,no,0.0020857035977930043
2630,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		Iterator iter = extendsQueue.iterator();,no,undetermined,0,0,0,no,0.0026019651269371074,no,0.0023330825308942346,no,0.002362836854705996,no,0.0027583138714314926,no,0.002739696701230162,no,0.002465533758224503
2631,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// found,no,undetermined,0,0,0,no,0.0012533433883695662,no,0.00112210008236254,no,0.0009775666783274053,no,0.0009695711584929005,no,0.0009801704238252254,no,0.0008575812278741389
2632,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// found,no,undetermined,0,0,0,no,0.0012533433883695662,no,0.00112210008236254,no,0.0009775666783274053,no,0.0009695711584929005,no,0.0009801704238252254,no,0.0008575812278741389
2633,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		settings.setComponentTuplizerFactory( this.getComponentTuplizerFactory() );,no,undetermined,0,0,0,no,0.00029264017804507406,no,0.00049399379713044,no,0.00031420772320219707,no,0.0003143065003517006,no,0.00031426728584391285,no,0.00027065538981470684
2634,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//final String queryString, ",no,undetermined,0,0,0,no,0.0029270528438666995,no,0.00397780545195964,no,0.003827950162011416,no,0.0038672033386804635,no,0.0038726750380244823,no,0.003470235961932545
2635,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	private final List extendsQueue;,no,undetermined,0,0,0,no,0.0030394137535795134,no,0.0035584651288479317,no,0.0029116647193165915,no,0.0024780263010264897,no,0.0024479729211921847,no,0.0021680656965481692
2636,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//<String, String>",no,undetermined,0,0,0,no,0.003205151690652445,no,0.0029642217946896283,no,0.0023241209708094387,no,0.0021786718817279876,no,0.0021581040253422046,no,0.0019247352143914843
2637,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//<String, String>",no,undetermined,0,0,0,no,0.003205151690652445,no,0.0029642217946896283,no,0.0023241209708094387,no,0.0021786718817279876,no,0.0021581040253422046,no,0.0019247352143914843
2638,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// invokeinterface,no,undetermined,0,0,0,no,0.0036523008980329486,no,0.005504726900042388,no,0.006461868463342029,no,0.00788716525811375,no,0.0079850989855144,no,0.007268429553841039
2639,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//end of array, start filling again from start",no,undetermined,0,0,0,no,0.0022624621264027245,no,0.001811857268095264,no,0.001593500142813931,no,0.0014437270064218887,no,0.001443669331806914,no,0.001278079397598147
2640,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Set USE_REFLECTION_OPTIMIZER to false to fix HHH-227,no,undetermined,0,0,0,no,0.05974099489196038,no,0.010955250813095672,no,0.0090765865241939,no,0.008056607470753598,no,0.008006712471118492,no,0.007283037904630855
2641,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//orphan delete not supported for EntityMode.DOM4J,no,undetermined,0,0,0,no,0.013157155200592106,no,0.008019082776622529,no,0.006411636303593769,no,0.005470350464577918,no,0.005396353976972144,no,0.004789806880377044
2642,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//element = XMLHelper.generateDom4jElement( persister.getNodeName() );,no,undetermined,0,0,0,no,0.008980415445892124,no,0.004736562217882398,no,0.004656833131163695,no,0.0041041275147369405,no,0.0040460891078578365,no,0.003652996255205892
2643,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// intentionally empty,no,undetermined,0,0,0,no,0.0062029637849833775,no,0.006988658068479712,no,0.006647053667740506,no,0.0064179509147434715,no,0.00653565950775097,no,0.005941618381082593
2644,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//we can reuse it for each row,no,undetermined,0,0,0,no,0.0019499090350666285,no,0.0033190292402482204,no,0.0023128978760248607,no,0.0019953198067366898,no,0.00200202782487926,no,0.0017952705079472388
2645,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//orphan delete not supported for EntityMode.DOM4J,no,undetermined,0,0,0,no,0.013157155200592106,no,0.008019082776622529,no,0.006411636303593769,no,0.005470350464577918,no,0.005396353976972144,no,0.004789806880377044
2646,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//can't reuse in this case,no,undetermined,0,0,0,no,0.02006838927820394,no,0.010997204930150354,no,0.009078501760223815,no,0.00806625741830184,no,0.007992135589774138,no,0.007267292951755079
2647,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//element = XMLHelper.generateDom4jElement( persister.getNodeName() );,no,undetermined,0,0,0,no,0.008980415445892124,no,0.004736562217882398,no,0.004656833131163695,no,0.0041041275147369405,no,0.0040460891078578365,no,0.003652996255205892
2648,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//needed for SOAP libraries, etc",no,undetermined,0,0,0,no,0.012587918042842238,no,0.010992353584743798,no,0.009080116711717342,no,0.008070967156974867,no,0.008003898716323666,no,0.007266095115347979
2649,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//EARLY EXIT!,no,undetermined,0,0,0,no,0.0012308318987046829,no,0.0010243170538795194,no,0.0009095420391860735,no,0.0008708338326286836,no,0.0008757209531325773,no,0.0007785241760039121
2650,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// any earlier proxy takes precedence,no,undetermined,0,0,0,no,0.0026712883952822583,no,0.0020758336611154454,no,0.0020632711721600304,no,0.0020956638448280445,no,0.0021283165863028686,no,0.00190168774235613
2651,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// First we need to suspend any current JTA transaction and obtain // a JDBC connection,no,undetermined,0,0,0,no,0.012637126856903687,no,0.007055438743045116,no,0.009102984573663004,no,0.008073007070758817,no,0.007997312883554814,no,0.007290258774532654
2652,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//getResultList(results);,no,undetermined,0,0,0,no,0.0055569270374326235,no,0.009134307700270359,no,0.009118958633743474,no,0.008071653031475074,no,0.008009573906035924,no,0.00728106529587539
2653,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if we only returned one entity, query by key is more efficient",no,undetermined,0,0,0,no,0.03062910133369762,no,0.010961681750989733,no,0.009085109779487998,no,0.008051303354322963,no,0.00799615812130152,no,0.00728237975830447
2654,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the element has been removed from the set,no,undetermined,0,0,0,no,0.0020394592333218106,no,0.001591091897233177,no,0.0011898364728364142,no,0.0009719252366338554,no,0.0009716034217194503,no,0.0008521763302568914
2655,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the element has changed,no,undetermined,0,0,0,no,0.0003457096163505635,no,0.00044966074404142526,no,0.0003477434225921323,no,0.0003095340049383729,no,0.00030806867134876563,no,0.0003182364638839726
2656,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.004743938349378224,no,0.005071038186615131,no,0.0052233629370559516,no,0.005394111553461939,no,0.005359281490135117,no,0.004726918415681859
2657,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Careful: these methods do not initialize the collection.,no,undetermined,0,0,0,no,0.01372445208507554,no,0.008329898593792845,no,0.004784520358089796,no,0.0040099309920523275,no,0.004032647527855399,no,0.0036367161252025388
2658,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//needed so that we remove this collection from the second-level cache,no,undetermined,0,0,0,no,0.02967751754165978,no,0.010961926296570449,no,0.009103049618873977,no,0.008071945443733729,no,0.007984636099306735,no,0.007276756354672455
2659,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// override on some subclasses,no,undetermined,0,0,0,no,0.0014600891931438244,no,0.0019272069923383912,no,0.0015558202078619398,no,0.0013866558210461838,no,0.0013982462078761728,no,0.0012346664714076969
2660,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//override on some subclasses,no,undetermined,0,0,0,no,0.0014600891931438244,no,0.0019272069923383912,no,0.0015558202078619398,no,0.0013866558210461838,no,0.0013982462078761728,no,0.0012346664714076969
2661,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//do this bit after setting initialized to true or it will recurse,no,undetermined,0,0,0,no,0.06844842776543317,no,0.010970827874870042,no,0.00909018589316703,no,0.008058002642928162,no,0.007981826666344824,no,0.007268579407388199
2662,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// create the collection holding the Orphans,no,undetermined,0,0,0,no,0.0017751661760606336,no,0.001933479567088642,no,0.001312358537475195,no,0.0011729957608440718,no,0.001258437622223162,no,0.0011267795944190904
2663,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// collect EntityIdentifier(s) of the *current* elements - add them into a HashSet for fast access,no,undetermined,0,0,0,no,0.015684580142708508,no,0.010971214145398932,no,0.00909439001624856,no,0.00807023680730184,no,0.007999466944246183,no,0.007286060679299381
2664,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// iterate over the *old* list,no,undetermined,0,0,0,no,0.0017062646134406462,no,0.0019692957992063598,no,0.001524990385056893,no,0.0014480283918780117,no,0.0014531237616534861,no,0.0012615987040533224
2665,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// intentionally empty,no,undetermined,0,0,0,no,0.0062029637849833775,no,0.006988658068479712,no,0.006647053667740506,no,0.0064179509147434715,no,0.00653565950775097,no,0.005941618381082593
2666,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*(array==null) ? tempList.get(i) :*/,no,undetermined,0,0,0,no,0.0007198291676012616,no,0.0007930294012741313,no,0.0006761383067417543,no,0.0006141403776526231,no,0.0006154127726239269,no,0.0005221224862717764
2667,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// a many-to-many; // decrement currentDepth here to allow join across the association table // without exceeding MAX_FETCH_DEPTH (i.e. the ""currentDepth - 1"" bit)",no,undetermined,0,0,0,no,0.060920969404915884,no,0.01099237188309417,no,0.009087590946711075,no,0.00806234185616563,no,0.007981165930370782,no,0.007288996122908695
2668,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//write(); -- doesn't,no,undetermined,0,0,0,no,0.0005448874602709162,no,0.0007012274728993243,no,0.0006187293841241057,no,0.0005767811764522703,no,0.0005396746783546371,no,0.0004718619732123329
2669,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//write(); -- doesn't,no,undetermined,0,0,0,no,0.0005448874602709162,no,0.0007012274728993243,no,0.0006187293841241057,no,0.0005767811764522703,no,0.0005396746783546371,no,0.0004718619732123329
2670,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this is the regression style determination which matches the logic of the classic translator,no,undetermined,0,0,0,no,0.0051473451547591805,no,0.003935967102296444,no,0.003043997187376679,no,0.004822959454142476,no,0.004692334806267978,no,0.004229382467709463
2671,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// a collection loaded in the current session // can not possibly be the collection belonging // to the entity passed to update(),no,undetermined,0,0,0,no,0.005134262340861478,no,0.004214543862184724,no,0.0024732121266370323,no,0.0021461188757414397,no,0.002116796116948495,no,0.0019009307815194094
2672,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// handle empty collection,no,undetermined,0,0,0,no,0.01264671453163578,no,0.009560258381122365,no,0.003078682097653448,no,0.0025668785389784034,no,0.0025798893014095754,no,0.002299948854579369
2673,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//handle empty collections,no,undetermined,0,0,0,no,0.008630953084538167,no,0.005282244661260113,no,0.004598009500494914,no,0.004291625697710679,no,0.004339883842589056,no,0.003984538214888487
2674,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// else this is not a collection initializer (and empty collections will // be detected by looking for the owner's identifier in the result set),no,undetermined,0,0,0,no,0.013745315238010895,no,0.009883437081417812,no,0.008569411883925801,no,0.006809886452598228,no,0.00682936542802369,no,0.006758241068771935
2675,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//needed for SOAP libraries, etc",no,undetermined,0,0,0,no,0.012587918042842238,no,0.010992353584743798,no,0.009080116711717342,no,0.008070967156974867,no,0.008003898716323666,no,0.007266095115347979
2676,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// finally, what it's all about...",no,undetermined,0,0,0,no,0.03863834894434288,no,0.010964623775414014,no,0.009085269028641119,no,0.008050964825874444,no,0.007990909280413407,no,0.007286498247716069
2677,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// here we do not bother with the discriminator.,no,undetermined,0,0,0,no,0.052848139734239546,no,0.010993637416275192,no,0.009099527639629998,no,0.008062169691429321,no,0.007994359556402795,no,0.007268229425326515
2678,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// validate() instances of Validatable,no,undetermined,0,0,0,no,0.022731785339976492,no,0.010980888913803433,no,0.009104613733301788,no,0.008048637786472603,no,0.007993924926876056,no,0.007278495151086531
2679,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//null version means the object is in the process of being loaded somewhere else in the ResultSet,no,undetermined,0,0,0,no,0.00864129280821274,no,0.007737959221933666,no,0.006028359275359565,no,0.005229201078871856,no,0.004985983673199613,no,0.004525981979225976
2680,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//problematic for <key-many-to-one>!,no,undetermined,0,0,0,no,0.12975542236779278,no,0.09089647191052631,no,0.009096914995637691,no,0.008068902878018435,no,0.008002699714558387,no,0.007269792498762143
2681,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//use the id passed in,no,undetermined,0,0,0,no,0.007805335621061817,no,0.005971823531339363,no,0.004979944385285517,no,0.004222549326536444,no,0.004481917631596596,no,0.0039883728706011845
2682,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The property is a collection...,no,undetermined,0,0,0,no,0.01599453682657274,no,0.004692521291267134,no,0.002731675672041458,no,0.002299243802735549,no,0.0030738559524838725,no,0.00279467919047338
2683,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Anyway, here we implement <set> semantics for a // <one-to-many> <bag>!",no,undetermined,0,0,0,no,0.447685802374709,yes,0.799954206466386,yes,0.7809926908060965,yes,0.7908625615338715,yes,0.7874149863575914,yes,0.7885370399313018
2684,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//a shortcut if its location didn't change!,no,undetermined,0,0,0,no,0.00501238486416334,no,0.010957838801185166,no,0.009084755895062583,no,0.008044973337697665,no,0.007989649780896689,no,0.007278394122342611
2685,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//search for it //note that this code is incorrect for other than one-to-many,no,undetermined,0,0,0,no,0.4762425156769786,no,0.35785646250493786,no,0.2805984706363255,no,0.28211631055153075,no,0.27743838058333414,no,0.2735305542382354
2686,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//a composite key,no,undetermined,0,0,0,no,0.0027976045546179856,no,0.0020398824574123066,no,0.0012874343124908742,no,0.001262290018102416,no,0.0014200318761508973,no,0.0012240558658383192
2687,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if no batch, use ""foo = ? and bar = ?""",no,undetermined,0,0,0,no,0.003941784333886838,no,0.004123792629679508,no,0.0034738474949422282,no,0.003157752495600305,no,0.0034678103586502783,no,0.0031117839890171172
2688,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//it must be a collection fetch,no,undetermined,0,0,0,no,0.006935763233453308,no,0.002978924266573854,no,0.0018551393543291706,no,0.0015485104883080601,no,0.0015435051064271654,no,0.0014115491844682853
2689,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// needed later for many-to-many/filter application,no,undetermined,0,0,0,no,0.05486289718901561,no,0.010993718071764632,no,0.009076359589741028,no,0.008062972172368508,no,0.008005178350271255,no,0.00728386600357144
2690,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*&& etype.isReferenceToPrimaryKey()*/,no,undetermined,0,0,0,no,0.02206011028098455,no,0.010974364647073612,no,0.009102592014994243,no,0.008072027575686733,no,0.007996739001659722,no,0.007286269943054463
2691,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Collection wrappers, by the CollectionKey //key=CollectionKey, value=PersistentCollection",no,undetermined,0,0,0,no,0.001083773303535466,no,0.0011557076004699834,no,0.0007524432066976506,no,0.0006629416589597438,no,0.0007085415064634095,no,0.0006087064025028383
2692,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// it might still need to apply a collection ordering based on a // many-to-many defined order-by...,no,undetermined,0,0,0,no,0.11147960165235958,no,0.04864303039525293,no,0.009093754517224011,no,0.008069065011203743,no,0.007988431568660173,no,0.007279401032126419
2693,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// belong to other persister // belong to other persister,no,undetermined,0,0,0,no,0.08681403234328548,no,0.010964090980324998,no,0.00909215175182166,no,0.008061229287996385,no,0.00799090685077979,no,0.007266416900578253
2694,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we found it,no,undetermined,0,0,0,no,0.0010134351387955946,no,0.0008486306855094954,no,0.0006271318421018088,no,0.0005404514427379735,no,0.0005332226107225858,no,0.0004550352299883616
2695,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//we can use an inner join for the many-to-many,no,undetermined,0,0,0,no,0.02449342527999567,no,0.007584847596704862,no,0.005486019435985807,no,0.005577822994969467,no,0.005498909017666227,no,0.004922687686217918
2696,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//disable a join back to this same association,no,undetermined,0,0,0,no,0.015383844627396047,no,0.007871824274723948,no,0.007883230665394073,no,0.008054071539017474,no,0.008000105082820907,no,0.00727734341890026
2697,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//NOTE: unlike all other Loaders, this one is NOT //      multithreaded, or cacheable!!",no,undetermined,0,0,0,no,0.02568410664612108,no,0.01097891092620597,no,0.009101194994224113,no,0.008074445667335433,no,0.008000607675520173,no,0.00728914733966887
2698,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//the user visible aliases, which are unknown to the superclass, //these are not the actual ""physical"" SQL aliases",no,undetermined,0,0,0,no,0.0024161366524027717,no,0.0021755757648132196,no,0.0018230398569424376,no,0.0022850458052676484,no,0.0020641207152053516,no,0.0018566508588235243
2699,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Let return-propertys override whatever the persister has for aliases.,no,undetermined,0,0,0,no,0.00365045131271026,no,0.002730629015263814,no,0.0023021945179577262,no,0.0018380590513728,no,0.0018148829014445133,no,0.0016309205059232986
2700,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//alias may be null //EARLY EXIT,no,undetermined,0,0,0,no,0.00382650271305288,no,0.002928938760160981,no,0.0022946673315515703,no,0.0019336542843476042,no,0.001914830857547173,no,0.0017152365896666657
2701,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// if it is a compound path,no,undetermined,0,0,0,no,0.01150104569939033,no,0.00970847558517457,no,0.007834550988500432,no,0.006748412569709758,no,0.0067089445202604715,no,0.00619105002394108
2702,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if its the root criteria, we are done",no,undetermined,0,0,0,no,0.0014062845057619458,no,0.0019757172629902863,no,0.0016439223060982556,no,0.0014259671600779494,no,0.0014425949409709539,no,0.0012706256332772538
2703,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// otherwise, recurse",no,undetermined,0,0,0,no,0.009742574344094857,no,0.010439945449398344,no,0.007566446790829304,no,0.006762075737060975,no,0.006850916911835866,no,0.006257551095860573
2704,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//the criteria instance,no,undetermined,0,0,0,no,0.001271470915310655,no,0.004466685975217791,no,0.003931585162969685,no,0.0037869249168406127,no,0.003822369865851768,no,0.0034289120651460766
2705,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the entity name,no,undetermined,0,0,0,no,0.004058538969682309,no,0.005003255266516049,no,0.005327770370325615,no,0.005009701618637074,no,0.004948681447120251,no,0.0044452650045451614
2706,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//not found in inner query , try the outer query",no,undetermined,0,0,0,no,0.00212829668743406,no,0.0028620216688887146,no,0.00226882870638668,no,0.0016297782787874113,no,0.0015376247773246422,no,0.0013678580030649478
2707,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//not found in inner query , try the outer query",no,undetermined,0,0,0,no,0.00212829668743406,no,0.0028620216688887146,no,0.00226882870638668,no,0.0016297782787874113,no,0.0015376247773246422,no,0.0013678580030649478
2708,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//it refers to an alias of a projection,no,undetermined,0,0,0,no,0.009549851399224095,no,0.00907162225413633,no,0.007664924750417816,no,0.006652488259451197,no,0.0067202536951756365,no,0.006109136895248181
2709,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//should never happen, i think",no,undetermined,0,0,0,no,0.0015661332092474058,no,0.002059059560328869,no,0.0016730037931733206,no,0.0014537515321058655,no,0.0014474736296696377,no,0.0012782318380375318
2710,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Convert the string value into the proper type.,no,undetermined,0,0,0,no,0.015288081749039452,no,0.010958954841753212,no,0.009081074424294715,no,0.008067726822734442,no,0.008006480113874101,no,0.007285017794303591
2711,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//needed for SOAP libraries, etc",no,undetermined,0,0,0,no,0.012587918042842238,no,0.010992353584743798,no,0.009080116711717342,no,0.008070967156974867,no,0.008003898716323666,no,0.007266095115347979
2712,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// and the qualifier is not the alias of this criteria //      -> check to see if we belong to some criteria other //          than the one that created us,no,undetermined,0,0,0,no,0.03492277035783488,no,0.010972838220905869,no,0.009114179915869254,no,0.008073334516513972,no,0.007993095784670454,no,0.0072662703003723425
2713,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//it does not refer to an alias of a projection, //look for a property",no,undetermined,0,0,0,no,0.024960221997285266,no,0.010984933603660731,no,0.009107198625845334,no,0.008069230990346688,no,0.007990686296612407,no,0.007286338143189278
2714,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//search for it //note that this code is incorrect for other than one-to-many,no,undetermined,0,0,0,no,0.4762425156769786,no,0.35785646250493786,no,0.2805984706363255,no,0.28211631055153075,no,0.27743838058333414,no,0.2735305542382354
2715,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Otherwise, this is an ordinary value.",no,undetermined,0,0,0,no,0.017487297254901023,no,0.010980788649969146,no,0.009081238406633028,no,0.008055143338253627,no,0.007999766494895545,no,0.007269978987106143
2716,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Currently *not* cachable if autodiscover types is in effect (e.g. ""select * ..."")",no,undetermined,0,0,0,no,0.07865757423725601,no,0.010986347431715436,no,0.009091511738751655,no,0.008064741250359646,no,0.007989306739508293,no,0.007277183742383705
2717,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// List OPERATIONS:,no,undetermined,0,0,0,no,0.002713918359338855,no,0.003418220730685324,no,0.003160859313441794,no,0.0031085462696773597,no,0.0030904705963657603,no,0.002736955257979601
2718,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	private final String[] sqlAliases; //	private final String[] sqlAliasSuffixes;,no,undetermined,0,0,0,no,0.00395045307966005,no,0.004160604286218897,no,0.0031884687417165656,no,0.0026358628308533073,no,0.0026087677453512296,no,0.0023221261370892456
2719,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this is only needed (afaict) for ResultTransformer processing...,no,undetermined,0,0,0,no,0.07402119024692405,no,0.010973079637095056,no,0.009112767203683625,no,0.008064186493026258,no,0.007978629270563736,no,0.007275264307963571
2720,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// determine if the collection elements are entities...,no,undetermined,0,0,0,no,0.0048190117007337165,no,0.005504657743028097,no,0.005001845864870084,no,0.004468199487351417,no,0.004668742177814405,no,0.004404320457355403
2721,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// replace {....} with corresponding column aliases,no,undetermined,0,0,0,no,0.00575319131339423,no,0.00643526730041126,no,0.006094894843118838,no,0.005775326279732395,no,0.0057713221005305775,no,0.005190163035057772
2722,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// No additional open braces found in the string, append the // rest of the string in its entirty and quit this loop",no,undetermined,0,0,0,no,0.005450115920866764,no,0.004970233408223571,no,0.003613943320714791,no,0.0031010678089448424,no,0.0031304732825637688,no,0.00279360900339334
2723,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// apend everything up until the next encountered open brace,no,undetermined,0,0,0,no,0.007783265559843005,no,0.008595834993529302,no,0.00800687460985804,no,0.007259396744471519,no,0.0075910893512266195,no,0.006864880835169855
2724,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//pad with nulls from the current last element up to the new index,no,undetermined,0,0,0,no,0.003188975668087943,no,0.0046261928652625425,no,0.003719682322587551,no,0.0032091167926702083,no,0.00323526710182373,no,0.002859416219212238
2725,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// it is a simple table alias {foo},no,undetermined,0,0,0,no,0.0008381576824099479,no,0.0007312653160146984,no,0.0005562158783287374,no,0.0005405191291500713,no,0.0005331891652444231,no,0.00046384360541027917
2726,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// passing through anything we do not know : to support jdbc escape sequences HB-898,no,undetermined,0,0,0,no,0.017790933846457316,no,0.01098105527974408,no,0.009091301949825315,no,0.00806213530279229,no,0.008006091478248326,no,0.007279892873653684
2727,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// passing through anything we do not know : to support jdbc escape sequences HB-898,no,undetermined,0,0,0,no,0.017790933846457316,no,0.01098105527974408,no,0.009091301949825315,no,0.00806213530279229,no,0.008006091478248326,no,0.007279892873653684
2728,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The current alias is referencing the collection to be eagerly fetched,no,undetermined,0,0,0,no,0.009237365440000339,no,0.005552383499693092,no,0.004507932341971667,no,0.003717121545365054,no,0.0037930636356986614,no,0.003473967628467699
2729,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// it is a property reference {foo.bar},no,undetermined,0,0,0,no,0.009108933643039014,no,0.00934928676760959,no,0.007808603493896672,no,0.00806455522277489,no,0.007995230153161644,no,0.007279249984659688
2730,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*package*/,no,undetermined,0,0,0,no,0.004437760287425697,no,0.004876701033127142,no,0.004453796219161608,no,0.004528643871969353,no,0.004494747150569872,no,0.004042588878453024
2731,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//NOTE: EARLY EXIT!,no,undetermined,0,0,0,no,0.005046302398143233,no,0.0035759389019286605,no,0.0029371527467461234,no,0.00270068247031243,no,0.0026841669436306528,no,0.0024229950349091522
2732,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	private final List scalarTypes = new ArrayList(); //	private final List scalarColumnAliases = new ArrayList();,no,undetermined,0,0,0,no,0.007061057878640088,no,0.004582787482783926,no,0.0035373312866061263,no,0.0028953445321109523,no,0.0028608230863922056,no,0.0025502375329812584
2733,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Now, process the returns",no,undetermined,0,0,0,no,0.0006928126631303279,no,0.0007745900510802982,no,0.000660746538180707,no,0.000598220357811899,no,0.0005971408225571171,no,0.0005238459256263005
2734,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// already been processed...,no,undetermined,0,0,0,no,0.001702982727768072,no,0.0013670858133759682,no,0.0021493631556818537,no,0.0021937405388271344,no,0.0021855173628532697,no,0.0018736541357949454
2735,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// already been processed...,no,undetermined,0,0,0,no,0.001702982727768072,no,0.0013670858133759682,no,0.0021493631556818537,no,0.0021937405388271344,no,0.0021855173628532697,no,0.0018736541357949454
2736,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Make sure the owner alias is known...,no,undetermined,0,0,0,no,0.0024048534812171414,no,0.0017316985239979486,no,0.0013818456855410003,no,0.001161664042677556,no,0.001309159059032527,no,0.001432274622521117
2737,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		scalarColumnAliases.add( typeReturn.getColumnAlias() ); //		scalarTypes.add( typeReturn.getType() );,no,undetermined,0,0,0,no,0.0030472520009640347,no,0.0030981198798968736,no,0.0028405977311968013,no,0.002798680324986534,no,0.002788120201492466,no,0.002633024524313428
2738,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If this return's alias has not been processed yet, do so b4 further processing of this return",no,undetermined,0,0,0,no,0.04900982496605103,no,0.010991588100847554,no,0.009088733237272082,no,0.008071713767652556,no,0.007997143926308016,no,0.007270611452891425
2739,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//			collectionOwnerAliases.add( ownerAlias );,no,undetermined,0,0,0,no,0.0022489375652719173,no,0.0025673895198015982,no,0.0020103593442279094,no,0.001793213280982257,no,0.00176609790574439,no,0.0018086116746016687
2740,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//needed for SOAP libraries, etc",no,undetermined,0,0,0,no,0.012587918042842238,no,0.010992353584743798,no,0.009080116711717342,no,0.008070967156974867,no,0.008003898716323666,no,0.007266095115347979
2741,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//needed for SOAP libraries, etc",no,undetermined,0,0,0,no,0.012587918042842238,no,0.010992353584743798,no,0.009080116711717342,no,0.008070967156974867,no,0.008003898716323666,no,0.007266095115347979
2742,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// from Map,no,undetermined,0,0,0,no,0.003243101817478141,no,0.0038655468380379156,no,0.0035560149040728623,no,0.0031945208619023517,no,0.0031746216370033354,no,0.00283389060772392
2743,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// from SortedMap,no,undetermined,0,0,0,no,0.005087087864131374,no,0.004952957944740447,no,0.003866285954987166,no,0.0031429110365316128,no,0.003125891939776717,no,0.0027413843839860608
2744,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// cannot be instantiated,no,undetermined,0,0,0,no,0.0013724238497063463,no,0.0015677280626347028,no,0.0013569143671634642,no,0.0010202913174835848,no,0.0010191108885975115,no,0.0009097768358789406
2745,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//inject the data,no,undetermined,0,0,0,no,0.006025873589380237,no,0.006060085866307983,no,0.006246912158019359,no,0.006334289184851748,no,0.006325891669533302,no,0.005739214437320206
2746,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//default pool size 20,no,undetermined,0,0,0,no,0.0017599612125455085,no,0.002161484927882269,no,0.001882218594579596,no,0.0017858114073881568,no,0.0018143559596773351,no,0.0016058515540587485
2747,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if debug level is enabled, then log the password, otherwise mask it",no,undetermined,0,0,0,no,0.00700180690867489,no,0.007933774465203127,no,0.006102877185593429,no,0.005110254056811533,no,0.005121602925247631,no,0.004778804504493124
2748,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// register a cleanup synch,no,undetermined,0,0,0,no,0.005239602449066528,no,0.0053692702803891995,no,0.004909144587055746,no,0.004893609956748501,no,0.004919500912515241,no,0.004447394905224447
2749,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// wrap the session in the transaction-protection proxy,no,undetermined,0,0,0,no,0.0029048814483702908,no,0.0023151305395242307,no,0.0018042796536736408,no,0.0016693923082459062,no,0.0020903340769616993,no,0.0018662810231660995
2750,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// then bind it,no,undetermined,0,0,0,no,0.002811662972172268,no,0.003439313367952002,no,0.0031707245590171383,no,0.0030375065764527034,no,0.0030189306502076936,no,0.0027723379368164427
2751,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this property belongs on the table and is to be inserted,no,undetermined,0,0,0,no,0.18649147823271897,no,0.14587880977041034,no,0.1517516793527198,no,0.15591069415341904,no,0.22638120232984768,no,0.21431003969566256
2752,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// limit the methods available if no transaction is active,no,undetermined,0,0,0,no,0.0019049005305006958,no,0.002034519621864518,no,0.0016424274582453578,no,0.0013977460208859079,no,0.0018894233825231337,no,0.001678934154751092
2753,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// allow these (deprecated) methods to pass through,no,undetermined,0,0,0,no,0.049570607746312,no,0.010958681121104707,no,0.009096000278697119,no,0.008064969132666319,no,0.00799590609080819,no,0.0072817005116281135
2754,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.00862972063202151,no,0.007967255528345126,no,0.00910789471143575,no,0.008074108734301146,no,0.007996075274266124,no,0.007279033978319552
2755,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// add temp entry so that the next step is circular-reference // safe - only needed because some types don't take proper // advantage of two-phase-load (esp. components),no,undetermined,0,0,0,no,0.008248319523975544,no,0.007053464071990663,no,0.0063295183679378765,no,0.005353929626338118,no,0.005415749709873438,no,0.004945770598433361
2756,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// this is the second pass through on a merge op, so here we limit the // replacement to associations types (value types were already replaced // during the first pass)",no,undetermined,0,0,0,no,0.019333716492552715,no,0.010980828438323922,no,0.009095199405879632,no,0.00807576903752635,no,0.00799024716424382,no,0.0072732744940740305
2757,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//EARLY EXIT,no,undetermined,0,0,0,no,0.0012308318987046829,no,0.0010243170538795194,no,0.0009095420391860735,no,0.0008708338326286836,no,0.0008757209531325773,no,0.0007785241760039121
2758,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Handle collection-fiter compilation. // IMPORTANT NOTE: This is modifying the INPUT (HQL) tree, not the output tree!",no,undetermined,0,0,0,no,0.0228585895098056,no,0.01097016129319829,no,0.009110994050908745,no,0.008038548689909239,no,0.007983051269391838,no,0.00728914018313403
2759,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Initialize the error handling delegate.,no,undetermined,0,0,0,no,0.004719539556798919,no,0.003449905939911077,no,0.0032512179569959194,no,0.0027708575590376663,no,0.0027565156692350035,no,0.002419782106762245
2760,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//cannot be instantiated,no,undetermined,0,0,0,no,0.0013724238497063463,no,0.0015677280626347028,no,0.0013569143671634642,no,0.0010202913174835848,no,0.0010191108885975115,no,0.0009097768358789406
2761,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//private String propertyName;,no,undetermined,0,0,0,no,0.006189441111290663,no,0.006433319471778636,no,0.005995577540075365,no,0.006005757818494786,no,0.005909068744141323,no,0.005348446009550795
2762,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Use the delegate.,no,undetermined,0,0,0,no,0.004744329017731912,no,0.005170868949507681,no,0.00443025232026688,no,0.003823483402822087,no,0.0037960016239915705,no,0.0034168320557206055
2763,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//String[] fk = StringHelper.qualify( ""collection_"", cp.getKeyColumnNames() );",no,undetermined,0,0,0,no,0.022752203555848744,no,0.010969034439157291,no,0.009107692926248417,no,0.008051987924855813,no,0.008004291518452165,no,0.00727939485723
2764,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//"" collection_ where "" +",no,undetermined,0,0,0,no,0.0191125405666391,no,0.010976717701124409,no,0.009103553844604314,no,0.008049335171085022,no,0.00800637851651816,no,0.007271537973789995
2765,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//unsupported,no,undetermined,0,0,0,no,0.0051351807086506135,no,0.007423209183210666,no,0.008712453855595123,no,0.008055492265496525,no,0.007995334418366279,no,0.007276494175474546
2766,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//unsupported,no,undetermined,0,0,0,no,0.0051351807086506135,no,0.007423209183210666,no,0.008712453855595123,no,0.008055492265496525,no,0.007995334418366279,no,0.007276494175474546
2767,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if not a composite key, use ""foo in (?, ?, ?)"" for batching // if no batch, and not a composite key, use ""foo = ?""",no,undetermined,0,0,0,no,0.0034914165645209775,no,0.0031591786907601395,no,0.0019569300571751383,no,0.0018707265380053476,no,0.002124717016774614,no,0.0018487045816399908
2768,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// currently only the Hibernate-supplied DbTimestampType is supported here,no,undetermined,0,0,0,no,0.017593906976328913,no,0.010976935639318001,no,0.009102680663270083,no,0.008059632738767657,no,0.007985603186268304,no,0.0072891069602419424
2769,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//cannot be instantiated,no,undetermined,0,0,0,no,0.0013724238497063463,no,0.0015677280626347028,no,0.0013569143671634642,no,0.0010202913174835848,no,0.0010191108885975115,no,0.0009097768358789406
2770,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This is called when it's time to fully resolve a path expression.,no,undetermined,0,0,0,no,0.19321857269557258,no,0.12197372644893147,no,0.11099282979143563,no,0.10226218294179128,no,0.10025354617220096,no,0.0926738944285119
2771,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//implicit polymorphism not supported (would need a union),no,undetermined,0,0,0,no,0.09338867815265774,no,0.01097406919623888,no,0.009101609483520132,no,0.00804454330264646,no,0.007985673325450525,no,0.007278944024012807
2772,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//pull off the last "", """,no,undetermined,0,0,0,no,0.002278110409690267,no,0.002213979623148442,no,0.0016847695621570976,no,0.0014233664431139207,no,0.0014273143132243528,no,0.0012571872587429657
2773,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//$NON-NLS-1,no,undetermined,0,0,0,no,0.0017380500760647442,no,0.001776973943580999,no,0.001626506321839593,no,0.0015851967679545124,no,0.0015759521750899027,no,0.0013871181378158478
2774,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//always do an INSERT, and let it fail by constraint violation",no,undetermined,0,0,0,no,0.003515513258344701,no,0.0033775049567894857,no,0.0027054635523271076,no,0.0023032562297393214,no,0.002280944863689667,no,0.0020285996533497353
2775,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//by default, natural-ids are ""immutable"" (constant)",no,undetermined,0,0,0,no,0.005998300967392055,no,0.008209938516503213,no,0.006081665615034933,no,0.0058163197845879375,no,0.005784270681372998,no,0.005264248268304464
2776,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we have the form: trim(from trimSource). //      This is functionally equivalent to trim(trimSource),no,undetermined,0,0,0,no,0.016236872728477368,no,0.010976705451029583,no,0.00909069371436048,no,0.008064554257408369,no,0.007981171094491327,no,0.0072705997993104095
2777,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// NOT_SUPPORTED_SHOULD_USE_JDBC3_PreparedStatement.getGeneratedKeys_method,no,undetermined,0,0,0,no,0.0036523008980329486,no,0.005504726900042388,no,0.006461868463342029,no,0.00788716525811375,no,0.0079850989855144,no,0.007268429553841039
2778,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// make a new one,no,undetermined,0,0,0,no,0.0025468912188910675,no,0.002201135279362374,no,0.0016938145267604969,no,0.0014386781086076555,no,0.001419262243036864,no,0.001249731828245338
2779,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// astore 4 // store the raw bean,no,undetermined,0,0,0,no,0.0008689464104221358,no,0.0010397308505165587,no,0.0008830590739978345,no,0.0008045184150805415,no,0.0008130474057645144,no,0.0007077652914972425
2780,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0011622327290709787,no,0.0011638242245380203,no,0.0011173140002844785,no,0.0014774358081173686,no,0.0015026092631850257,no,0.00133634356530595
2781,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// not so sure this is even valid subtree.  but if it was, it'd // represent two unrelated table references...",no,undetermined,0,0,0,no,0.05796775176092433,no,0.010984844859648273,no,0.009081344967117813,no,0.008060022098486254,no,0.008007865857091883,no,0.007268423987458113
2782,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// NOTE : firstRow is zero-based,no,undetermined,0,0,0,no,0.017778744289078042,no,0.010956701658678276,no,0.009089279061754121,no,0.008046899045016468,no,0.007985590410988775,no,0.007279527849745048
2783,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// grrr... for differentiation of mysql storage engines,no,undetermined,0,0,0,no,0.0045946187164934375,no,0.0054744945104401145,no,0.0054127532381156385,no,0.005790785268945104,no,0.005944326218548519,no,0.005372287882230963
2784,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* current stack len = 0 */,no,undetermined,0,0,0,no,0.0025168934391146596,no,0.003227328734440806,no,0.0033590359119613886,no,0.0035333382596653045,no,0.003507356354899836,no,0.0031487360817178548
2785,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//String[] keyCols = collPersister.getKeyColumnNames();,no,undetermined,0,0,0,no,0.003205151690652445,no,0.0029642217946896283,no,0.0023241209708094387,no,0.0021786718817279876,no,0.0021581040253422046,no,0.0019247352143914843
2786,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Oracle did add support for ANSI CASE statements in 9i,no,undetermined,0,0,0,no,0.0009030059466396869,no,0.0012749075989432334,no,0.0010128784788591687,no,0.0008904459608306389,no,0.0008957132743910841,no,0.0007481790411998058
2787,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the standard SQL function name is current_timestamp...,no,undetermined,0,0,0,no,0.0008199476926709743,no,0.001709645598685454,no,0.0014659017560901895,no,0.0013385469722373528,no,0.001361766397976663,no,0.0012084006063521574
2788,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//refresh() does not pass an entityName,no,undetermined,0,0,0,no,0.004333362306369586,no,0.005596070409148878,no,0.004766505227822957,no,0.0045720014176593915,no,0.004508493089812438,no,0.004038073050085766
2789,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Informix doesn't have a bit type,no,undetermined,0,0,0,no,0.021497025701051747,no,0.010960827757238395,no,0.009096606274042502,no,0.008060476666138723,no,0.007994900200211708,no,0.007283941581331619
2790,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// (NOT (GT a b) ) => (LE a b),no,undetermined,0,0,0,no,0.007305665501165481,no,0.009926287240909546,no,0.009099921009556887,no,0.008063138620740682,no,0.008000537388586183,no,0.007267891048321161
2791,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// strip table-owner because Informix always returns constraint names as ""<table-owner>.<constraint-name>""",no,undetermined,0,0,0,no,0.002008450356693675,no,0.0025195732070441255,no,0.002402244040308625,no,0.0022102932433808653,no,0.002525827837776966,no,0.0029568015383158327
2792,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// build the map of standard ANSI SQL aggregation functions ~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0007750002477304896,no,0.0006481900745173362,no,0.000568502707429137,no,0.0005244919240605027,no,0.0005338368872406324,no,0.00046324210471794866
2793,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//pre H3.2 behavior: super.getReturnType(ct, m);",no,undetermined,0,0,0,no,0.01149325891270501,no,0.010966404780150242,no,0.009094261682875486,no,0.008055849091101387,no,0.007993457302751285,no,0.007280507603843935
2794,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// finally use the sqltype if == on Hibernate types did not find a match.,no,undetermined,0,0,0,no,0.005520804014524357,no,0.005096928531442415,no,0.0038588243998513576,no,0.0034013552062663053,no,0.0034147059970461796,no,0.0028769022002084524
2795,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//because numeric can be anything,no,undetermined,0,0,0,no,0.004105698867039525,no,0.00717983493840317,no,0.005431886956396063,no,0.005336133454443451,no,0.0053003007759399035,no,0.004858737162161384
2796,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// constructors and factory methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.011094677902606232,no,0.010963326714601183,no,0.009082547870105621,no,0.008075508883602325,no,0.00798714926872074,no,0.007283580235299931
2797,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// standard sql92 functions (can be overridden by subclasses),no,undetermined,0,0,0,no,0.0009731160287199258,no,0.0013237546069896097,no,0.0011655084881303755,no,0.001113245072379041,no,0.0011022639438784307,no,0.000974314076849955
2798,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//map second/minute/hour/day/month/year to ANSI extract(), override on subclasses",no,undetermined,0,0,0,no,0.002206714453928099,no,0.002691364116308624,no,0.0023930544327466,no,0.002235794645099554,no,0.0022348223330482786,no,0.0019794182005447238
2799,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// database type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.005400241763942995,no,0.009822441510101655,no,0.007872690745955162,no,0.007617971996934109,no,0.007993596721235613,no,0.007291154967356175
2800,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// hibernate type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.003514601438597751,no,0.010978847007639469,no,0.009110108176356647,no,0.00805780191505828,no,0.007993470041670371,no,0.007294571646818825
2801,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//private Type[] sqlResultTypes;,no,undetermined,0,0,0,no,0.012141228051887035,no,0.010533838067970891,no,0.007715419788791108,no,0.00662333553129375,no,0.006542905998255843,no,0.005948455330970214
2802,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// native identifier generatiion ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0016290241804415016,no,0.0028250609495055526,no,0.002817101222827257,no,0.0029943645938069786,no,0.0029406411062479804,no,0.002578636433941965
2803,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// IDENTITY support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0038055099842015973,no,0.006290250142500855,no,0.006302838389877842,no,0.006230431483934431,no,0.006337917602018714,no,0.005713957596470157
2804,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// SEQUENCE support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.008605833965731365,no,0.009236950036992953,no,0.008546883683790474,no,0.008067873018558866,no,0.008005795866799103,no,0.007275172496583134
2805,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// limit/offset support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.001740542809771096,no,0.0040136707570276285,no,0.003838000389480263,no,0.0038555653785347704,no,0.0038588859759696756,no,0.0034488308498446187
2806,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// by default we report no support,no,undetermined,0,0,0,no,0.011854724546330311,no,0.006857667856545966,no,0.005805427092179615,no,0.00458916861824696,no,0.004595788826561527,no,0.00413759103905608
2807,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//sqlResultTypes = selectClause.getSqlResultTypes();,no,undetermined,0,0,0,no,0.0036523008980329486,no,0.005504726900042388,no,0.006461868463342029,no,0.00788716525811375,no,0.0079850989855144,no,0.007268429553841039
2808,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// by default we report no support for NOWAIT lock semantics,no,undetermined,0,0,0,no,0.05002002943126881,no,0.010974900679930216,no,0.00909988098576147,no,0.00804571261232019,no,0.00801076795242498,no,0.007267229750605294
2809,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0641280735528765,no,0.010988435534997185,no,0.009100582785933191,no,0.008064914798189337,no,0.007987322895229985,no,0.007268418886846721
2810,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.005945121301321387,no,0.010999657612858645,no,0.009110493142860004,no,0.00807287006381875,no,0.007996504011256551,no,0.007278524436233779
2811,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// current timestamp support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.002196431854712427,no,0.002950477460029864,no,0.003280739315746495,no,0.0031660831245666015,no,0.003166482803382741,no,0.0028159689916227274
2812,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.005452460430046176,no,0.008487496339120286,no,0.007950526847067619,no,0.007636212462427558,no,0.0076275681038799,no,0.006911826638174355
2813,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// identifier quoting support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.008792482690565423,no,0.010977609767730458,no,0.009103570075541438,no,0.00807625875156856,no,0.007991808841815612,no,0.007277913573833898
2814,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//by default,no,undetermined,0,0,0,no,0.00019566221961652867,no,0.00016197394534236053,no,0.00012774644254277855,no,0.0001082233394829854,no,0.00010851207136226551,no,9.190090429715632e-05
2815,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This is now handled earlier in this method.,no,undetermined,0,0,0,no,0.039391066850992154,no,0.010976178473301389,no,0.00909109583702414,no,0.008050564248415914,no,0.007982082974954296,no,0.0072670464294759
2816,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// -- Loader implementation --,no,undetermined,0,0,0,no,0.005909703270209287,no,0.008057072924671334,no,0.007890668326692916,no,0.008066341249318492,no,0.007990148231809395,no,0.007273299793597924
2817,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// -- Loader overrides --,no,undetermined,0,0,0,no,0.002326422326432474,no,0.002770710443954153,no,0.002859212211022135,no,0.0031488520718758023,no,0.0031512135505296877,no,0.00283418493419285
2818,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// (NOT (IS_NULL a b) ) => (IS_NOT_NULL a b),no,undetermined,0,0,0,no,0.011075393539251133,no,0.010965346850433027,no,0.009088460443688988,no,0.008051438740420615,no,0.00797742484721804,no,0.007268000970694658
2819,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// here assume SQLServer2005 using snapshot isolation, which does not have this problem",no,undetermined,0,0,0,no,0.11321667947294868,no,0.11959775508914992,no,0.1796237713700512,no,0.16946152997053052,no,0.16347889270929872,no,0.15920809067918487
2820,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//NONE, because its the requested lock mode, not the actual! ",no,undetermined,0,0,0,no,0.0024087831502290504,no,0.003094493552571723,no,0.0023801734889134004,no,0.0023002755411851462,no,0.0016960204170667463,no,0.0015284221640266811
2821,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// --- Query translator methods ---,no,undetermined,0,0,0,no,0.011398451837039273,no,0.010996657078095416,no,0.009101376522523671,no,0.008064964222845705,no,0.007991919588313096,no,0.007292967113352745
2822,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Oracle8 and previous define only a ""DATE"" type which //      is used to represent all aspects of date/time",no,undetermined,0,0,0,no,0.009743800283607143,no,0.007196007781270323,no,0.005145492854858315,no,0.004348262955716777,no,0.0043380033180550085,no,0.0039036012452004477
2823,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//starts with 1, implicitly",no,undetermined,0,0,0,no,0.007251750185818929,no,0.009951259646047452,no,0.00910471896140147,no,0.008062144968621749,no,0.007996103317061581,no,0.007291765336907726
2824,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//"" cascade"";",no,undetermined,0,0,0,no,0.0033861973924911256,no,0.010986207112929271,no,0.009116070396290364,no,0.008052067144364556,no,0.007990755730331577,no,0.00728373039670825
2825,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// -- Implementation private methods --,no,undetermined,0,0,0,no,0.012768072214442134,no,0.010971181532809323,no,0.00910984856472131,no,0.008072258461778652,no,0.007998413041687778,no,0.007279361695499662
2826,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//trim off the length/precision/scale,no,undetermined,0,0,0,no,0.006026667298031447,no,0.009464242808237827,no,0.007540676572376809,no,0.006189018962209775,no,0.006172288496002254,no,0.0055737906736837055
2827,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// CHECK VIOLATION,no,undetermined,0,0,0,no,0.002502285797282363,no,0.004751765383408922,no,0.0053541884971743375,no,0.005597786418802623,no,0.005625107409468304,no,0.005086167558393599
2828,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// UNIQUE VIOLATION,no,undetermined,0,0,0,no,0.00441165142577588,no,0.0073268464821666535,no,0.00765487977236877,no,0.008052783158264932,no,0.007990246996651552,no,0.007293021357893313
2829,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// FOREIGN KEY VIOLATION,no,undetermined,0,0,0,no,0.001233396743079068,no,0.0016203963655761998,no,0.0015805855780062768,no,0.0016735426619126188,no,0.0017928627287863805,no,0.001564640999072963
2830,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//deduplicate unique constraints sharing the same columns //this is needed by Hibernate Annotations since it creates automagically // unique constraints for the user,no,undetermined,0,0,0,no,0.0008537005267213577,no,0.0030154284602599436,no,0.0023126290469068695,no,0.002094016306338453,no,0.0020297902193547896,no,0.001792748070761992
2831,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0011622327290709787,no,0.0011638242245380203,no,0.0011173140002844785,no,0.0014774358081173686,no,0.0015026092631850257,no,0.00133634356530595
2832,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// to support dialects that have their own identity data type,no,undetermined,0,0,0,no,0.014085638089023255,no,0.010975089364962212,no,0.009105895833336528,no,0.00806644809136711,no,0.008007582914785302,no,0.007291017481951489
2833,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// NOT NULL VIOLATION,no,undetermined,0,0,0,no,0.006132171759335586,no,0.006283840862352428,no,0.006574144395176842,no,0.006488752634267475,no,0.006441485522557213,no,0.005786127325190976
2834,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ALL OTHER,no,undetermined,0,0,0,no,0.002656809748960675,no,0.0019742898069396845,no,0.00166564595288822,no,0.0015611912463081214,no,0.0015819758750292734,no,0.0014069858725412343
2835,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Register the type of the out param - PostgreSQL uses Types.OTHER,no,undetermined,0,0,0,no,0.10369073270547673,no,0.05642452889359016,no,0.009081847811573753,no,0.008052303448407095,no,0.008010797770513273,no,0.007260845367251014
2836,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// seems to have spotty LOB suppport,no,undetermined,0,0,0,no,0.0325644007500153,no,0.01097327714445272,no,0.009095371674217223,no,0.00805662920824167,no,0.007997494008637815,no,0.007277391695972711
2837,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// HHH-2300,no,undetermined,0,0,0,no,0.0036523008980329486,no,0.0006450830168611538,no,0.0004123203535771133,no,0.0004274978017571572,no,0.0004322369315553424,no,0.0003734368466293395
2838,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ignore (probably H2 not in the classpath),no,undetermined,0,0,0,no,0.034481865306599066,no,0.010961493803368546,no,0.009095120634272756,no,0.008051807080897326,no,0.008011627388925552,no,0.007270246591145803
2839,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Prepare the left hand side and get the data type.,no,undetermined,0,0,0,no,0.0007420559549232499,no,0.0037186594546967954,no,0.002886147840648897,no,0.002420966384681462,no,0.0024294883806221875,no,0.0021676237680570746
2840,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Numeric Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.002126371639888081,no,0.001681085142213522,no,0.0016051734629826818,no,0.0017721613604752661,no,0.0017836799193000352,no,0.0015758260314354831
2841,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//used also for generation of FK names!,no,undetermined,0,0,0,no,0.04807622658499911,no,0.010976679493069224,no,0.009110903689971878,no,0.008053552445820802,no,0.00801085288137336,no,0.007283268624480219
2842,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//usually useless,no,undetermined,0,0,0,no,0.004717552988901493,no,0.005983630033953634,no,0.006778151401548288,no,0.007714720345371103,no,0.007815899064361998,no,0.007134934127859582
2843,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//do not add unique constraint on DB not supporting unique and nullable columns,no,undetermined,0,0,0,no,0.009010431910859117,no,0.01096435679046907,no,0.009085485614094344,no,0.008046998172145063,no,0.00798916851359038,no,0.0072756592585782
2844,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//for backward compatibility, disable this:",no,undetermined,0,0,0,no,0.0029816415223598625,no,0.01099407725385138,no,0.00911397150987278,no,0.00805249186740628,no,0.007979108347453695,no,0.007277846878727151
2845,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//may be final //may be final //may be final,no,undetermined,0,0,0,no,0.006841598037919388,no,0.010997066726200678,no,0.00909963495315053,no,0.008060357553717075,no,0.007997217688731935,no,0.007260183759486063
2846,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//may be final,no,undetermined,0,0,0,no,0.006841598037919388,no,0.010997066726200678,no,0.00909963495315053,no,0.008060357553717075,no,0.007997217688731935,no,0.007260183759486063
2847,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// may be final,no,undetermined,0,0,0,no,0.006841598037919388,no,0.010997066726200678,no,0.00909963495315053,no,0.008060357553717075,no,0.007997217688731935,no,0.007260183759486063
2848,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Custom SQL,no,undetermined,0,0,0,no,0.0015612581290046351,no,0.0040820556495537,no,0.004076381873537434,no,0.004376118180720686,no,0.004434775440098644,no,0.00400151010167643
2849,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Primary key constraint,no,undetermined,0,0,0,no,0.005395572647973301,no,0.0035649357255252614,no,0.0031623792484231916,no,0.0029861324402315733,no,0.0032219031069367268,no,0.002851143105525181
2850,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ignore it...,no,undetermined,0,0,0,no,0.00030777415557510876,no,0.0003162494532172495,no,0.0002467722531601372,no,0.00020355913896470565,no,0.00019974574344350894,no,0.0001699757441878991
2851,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Time and Date Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.003304526687949133,no,0.001929895982528651,no,0.0015453335261132086,no,0.0014079194600394012,no,0.0014092667850613577,no,0.0012340025944198928
2852,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// System Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.003479889698874448,no,0.0025742264226965607,no,0.0024916883822702495,no,0.0025964333396069545,no,0.002550630691415401,no,0.002272731781851598
2853,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// not null is implicit,no,undetermined,0,0,0,no,0.04577546754674378,no,0.010959240133484136,no,0.009083721883456134,no,0.008063288154940904,no,0.007993180837685255,no,0.007266731699340351
2854,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Display the dialect version.,no,undetermined,0,0,0,no,0.011310929628528806,no,0.010976406710887609,no,0.009101853962811494,no,0.008041562701689731,no,0.007982645364806825,no,0.007283835553205513
2855,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// nothing to do in a stateful session,no,undetermined,0,0,0,no,0.0030487707632226744,no,0.0032138891384936065,no,0.0028559340682864196,no,0.002787641721720498,no,0.002769900047150386,no,0.0024704431173142413
2856,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The RDMS concat() function only supports 2 parameters,no,undetermined,0,0,0,no,0.001975651433490332,no,0.0035932382497595836,no,0.0032400493304183763,no,0.003044974887665855,no,0.003061765107497276,no,0.002758301791314533
2857,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//flat recursive algorithm,no,undetermined,0,0,0,no,0.00814914649056877,no,0.008937452618497984,no,0.008090418254855866,no,0.00804088123835764,no,0.008000650118095273,no,0.00725760034147655
2858,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//an identifier mapper => getKey will be included in the getNonDuplicatedPropertyIterator() //and checked later, so it needs to be excluded",no,undetermined,0,0,0,no,0.025147120002362817,no,0.010989500505308744,no,0.00909269679612577,no,0.008064565358764172,no,0.007988746526362977,no,0.007273408328242726
2859,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* current stack len = 0 */,no,undetermined,0,0,0,no,0.0025168934391146596,no,0.003227328734440806,no,0.0033590359119613886,no,0.0035333382596653045,no,0.003507356354899836,no,0.0031487360817178548
2860,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Dialect method overrides ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.010506313456445999,no,0.010986046564378182,no,0.009095985735977532,no,0.008058365553534777,no,0.007985135407691222,no,0.007287364333541085
2861,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Custom SQL,no,undetermined,0,0,0,no,0.0015612581290046351,no,0.0040820556495537,no,0.004076381873537434,no,0.004376118180720686,no,0.004434775440098644,no,0.00400151010167643
2862,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Primary key constraint,no,undetermined,0,0,0,no,0.005395572647973301,no,0.0035649357255252614,no,0.0031623792484231916,no,0.0029861324402315733,no,0.0032219031069367268,no,0.002851143105525181
2863,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Original Dialect.java returns "" for update"";",no,undetermined,0,0,0,no,0.007705465142721745,no,0.009399458198309561,no,0.00789330889322767,no,0.007125598109882689,no,0.006938974586025201,no,0.006319255588533485
2864,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//pass the column name (a generated id almost always has a single column),no,undetermined,0,0,0,no,0.013210564076304663,no,0.010966527048580059,no,0.009083487087564344,no,0.008069130787684219,no,0.007995539191884905,no,0.007260985541501275
2865,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//needed to satisfy KeyValue,no,undetermined,0,0,0,no,0.029254508376221344,no,0.010974266478027088,no,0.009082364603185756,no,0.008046955848743443,no,0.007994186933757044,no,0.007285772274591261
2866,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Verify the state of this new method in Hibernate 3.0 Dialect.java,no,undetermined,0,0,0,no,0.01832796814799878,no,0.010969565249759903,no,0.009087536728823406,no,0.008041224758585624,no,0.007985735544202396,no,0.007289523207900536
2867,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Origial Dialect.java returns true;,no,undetermined,0,0,0,no,0.022967668721221326,no,0.010953959378314046,no,0.009110343837845597,no,0.008044136249411225,no,0.00799437217807065,no,0.007265840765032238
2868,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// index should be last column listed,no,undetermined,0,0,0,no,0.002692974448163907,no,0.004882777662206535,no,0.004235564316685993,no,0.003986207356119949,no,0.003964663598177,no,0.003550693206836755
2869,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// *** Sequence methods - start. The RDMS dialect needs these,no,undetermined,0,0,0,no,0.0480469264628846,no,0.010982727783808892,no,0.00908128558662283,no,0.008064338718972327,no,0.007989972364258545,no,0.007273488804012054
2870,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// methods to make it possible to use the Native Id generator,no,undetermined,0,0,0,no,0.08190936968342731,no,0.010983565685568263,no,0.009106846944036247,no,0.008037804811431968,no,0.007992325848124105,no,0.007267426429759438
2871,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if it is a formula index, use the element columns in the PK",no,undetermined,0,0,0,no,0.0017949280926825774,no,0.004901736853682433,no,0.004144929585181763,no,0.0034202451116744975,no,0.0034092064037762014,no,0.0031073978739736456
2872,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// don't create a unique key, 'cos some // databases don't like a UK on nullable // columns",no,undetermined,0,0,0,no,0.008185616959291627,no,0.01097125565108027,no,0.009102159357749492,no,0.008070837554581437,no,0.007998854757627715,no,0.0072721803071161654
2873,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// *** Sequence methods - end,no,undetermined,0,0,0,no,0.00404534434308017,no,0.0027228980841923784,no,0.0023622468988267436,no,0.0021214118826151994,no,0.0021164445590110504,no,0.0018862766775863988
2874,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// },no,undetermined,0,0,0,no,0.0036523008980329486,no,0.005504726900042388,no,0.006461868463342029,no,0.00788716525811375,no,0.0079850989855144,no,0.007268429553841039
2875,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//starts with 1, implicitly",no,undetermined,0,0,0,no,0.007251750185818929,no,0.009951259646047452,no,0.00910471896140147,no,0.008062144968621749,no,0.007996103317061581,no,0.007291765336907726
2876,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Used with DROP TABLE to delete all records in the table.,no,undetermined,0,0,0,no,0.018665276705257413,no,0.01098028137513721,no,0.00909217905071408,no,0.00807431503486916,no,0.007796966781826349,no,0.0071264295367631895
2877,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// no foreign key element of for a one-to-many,no,undetermined,0,0,0,no,0.0018841463398445416,no,0.0015230332157372135,no,0.0007782823519837321,no,0.0006340747059191558,no,0.0006511480944399456,no,0.0005608553100577611
2878,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//TODO: we could just return all false...,no,undetermined,0,0,0,yes,0.9967789201976245,no,0.01099570247832945,no,0.009113852332722308,no,0.008075187930783505,no,0.007997634740291231,no,0.007286920845487526
2879,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the case of a foreign key to something other than the pk is handled in createPropertyRefConstraints,no,undetermined,0,0,0,no,0.006886171375322401,no,0.0037552086380035184,no,0.0029287128262243645,no,0.0023610258481296807,no,0.002431447599988549,no,0.0021345143004970106
2880,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the object is persistent,no,undetermined,0,0,0,no,0.007503271547515609,no,0.005964561668577866,no,0.005947250651691022,no,0.006052059748034159,no,0.006035954514202285,no,0.005430769139338731
2881,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// RDMS supports the UNION ALL clause.,no,undetermined,0,0,0,no,0.009644069036097757,no,0.006819108184431904,no,0.0064730673004436525,no,0.006771939166351248,no,0.006857644636832242,no,0.006248656757162817
2882,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Multi-param dialect functions...,no,undetermined,0,0,0,no,0.060030179040859936,no,0.010976346628103928,no,0.009098279180672018,no,0.008059794029224366,no,0.00799073962521193,no,0.007289627893027268
2883,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// function templates,no,undetermined,0,0,0,no,0.0008250794384880508,no,0.00274647369471546,no,0.0029481650353470556,no,0.0032127056191073706,no,0.0032514630510040465,no,0.002940015430875015
2884,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//TODO: we could just return all false...,no,undetermined,0,0,0,yes,0.9967789201976245,no,0.01099570247832945,no,0.009113852332722308,no,0.008075187930783505,no,0.007997634740291231,no,0.007286920845487526
2885,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//not null is implicit,no,undetermined,0,0,0,no,0.04577546754674378,no,0.010959240133484136,no,0.009083721883456134,no,0.008063288154940904,no,0.007993180837685255,no,0.007266731699340351
2886,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// this assumes schema support, which is present in 1.8.0 and later...",no,undetermined,0,0,0,no,0.027265865950949122,no,0.01098415063366092,no,0.009081741423960057,no,0.008038888630941826,no,0.007992000808633822,no,0.007286722329737066
2887,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//columnUpdateability.length==0 ||,no,undetermined,0,0,0,no,0.011084471191144045,no,0.010964562787742336,no,0.00907805362145804,no,0.00805026435403658,no,0.007976785071039322,no,0.00727369775121055
2888,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// HSQLDB only supports READ_UNCOMMITTED transaction isolation,no,undetermined,0,0,0,no,0.00487057168186108,no,0.005840888388267401,no,0.005371036571431578,no,0.005272073746911206,no,0.006116989294753894,no,0.005557306501529817
2889,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//the entity is associated with the session, so check its status",no,undetermined,0,0,0,no,0.0028189108551625215,no,0.002574634176561912,no,0.002244080879562308,no,0.0020730303171894652,no,0.0020762224085360947,no,0.0018482302257956194
2890,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Multi-param string dialect functions...,no,undetermined,0,0,0,no,0.06466223730210224,no,0.010967260697665434,no,0.0090906922361866,no,0.008052697415126979,no,0.007976654399542201,no,0.00728392664108401
2891,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Multi-param numeric dialect functions...,no,undetermined,0,0,0,no,0.04347306306334086,no,0.010957135905719825,no,0.00909435125773447,no,0.008049257497025206,no,0.007986751673518547,no,0.007273865612864113
2892,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Multi-param date dialect functions...,no,undetermined,0,0,0,no,0.06186172510870589,no,0.010992119989247427,no,0.009089850664778154,no,0.008055315810413015,no,0.007982973311737392,no,0.007284185305293698
2893,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// simple nullability constraint,no,undetermined,0,0,0,no,0.0010715266823525054,no,0.0010629099536343784,no,0.003228711509741333,no,0.003430830513931437,no,0.0034516998421645485,no,0.003101194118942735
2894,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0011622327290709787,no,0.0011638242245380203,no,0.0011173140002844785,no,0.0014774358081173686,no,0.0015026092631850257,no,0.00133634356530595
2895,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0011622327290709787,no,0.0011638242245380203,no,0.0011173140002844785,no,0.0014774358081173686,no,0.0015026092631850257,no,0.00133634356530595
2896,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// return,no,undetermined,0,0,0,no,0.0007108479426811011,no,0.0005626488816341576,no,0.0004678183472785233,no,0.00040429721458336174,no,0.00040553700375767915,no,0.0003555070972592494
2897,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	register the type of the out param - an Oracle specific type,no,undetermined,0,0,0,no,0.02999685043748504,no,0.01096802491933676,no,0.00907866240980987,no,0.008070028577425488,no,0.007995116005342796,no,0.007281805558986246
2898,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// TimesTen has no BLOB/CLOB support, but these types may be suitable  // for some applications. The length is limited to 4 million bytes.",no,undetermined,0,0,0,no,0.030768329351007765,no,0.010987475689865673,no,0.009094474438057843,no,0.00805216145670577,no,0.007979500355001829,no,0.007267749629106227
2899,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// new methods in dialect3,no,undetermined,0,0,0,no,0.0068440610827533695,no,0.006360309120757703,no,0.0049197037532898984,no,0.0039533567842940836,no,0.0038955511929313416,no,0.0034886755773241187
2900,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*public boolean supportsForUpdateNowait() {
		return false;
	}*/",no,undetermined,0,0,0,no,0.0007666387789292389,no,0.00017716219438439464,no,0.00012461290145869252,no,9.98590345744921e-05,no,9.870173994617798e-05,no,8.286323181846266e-05
2901,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// TimesTen has no known variation of a ""SELECT ... FOR UPDATE"" syntax...",no,undetermined,0,0,0,no,0.002122859364268514,no,0.003234581799412919,no,0.0026966481511990553,no,0.0024594359735830647,no,0.002434445365834018,no,0.0022032947415729213
2902,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// iterate entries ordered by capacity to find first fit,no,undetermined,0,0,0,no,0.0026762979272396915,no,0.0018809176370443255,no,0.0016430990420578104,no,0.0015556739016642676,no,0.001544789604063825,no,0.001368279041119932
2903,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// add new ordered map,no,undetermined,0,0,0,no,0.002813409021495907,no,0.0031485616452084347,no,0.0028759958492870614,no,0.002664659896535537,no,0.002661613834728662,no,0.0024280137834064444
2904,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// expected type is intrinsic here...,no,undetermined,0,0,0,no,0.006418847063803521,no,0.006649133282101933,no,0.005072627999650594,no,0.003953838925306411,no,0.003917027186317859,no,0.0035130772715509006
2905,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0011622327290709787,no,0.0011638242245380203,no,0.0011173140002844785,no,0.0014774358081173686,no,0.0015026092631850257,no,0.00133634356530595
2906,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//},no,undetermined,0,0,0,no,0.0036523008980329486,no,0.005504726900042388,no,0.006461868463342029,no,0.00788716525811375,no,0.0079850989855144,no,0.007268429553841039
2907,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//},no,undetermined,0,0,0,no,0.0036523008980329486,no,0.005504726900042388,no,0.006461868463342029,no,0.00788716525811375,no,0.0079850989855144,no,0.007268429553841039
2908,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//return memberPersister.getPropertyType(propertyName);,no,undetermined,0,0,0,no,0.003812083406390198,no,0.004188827029337174,no,0.0044204954183662045,no,0.004889012745027079,no,0.004840209293857395,no,0.004358250046068945
2909,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//return memberPersister.toColumns(alias, propertyName);",no,undetermined,0,0,0,no,0.006896566847606152,no,0.006387201973173877,no,0.006167905577314007,no,0.006181931252603491,no,0.006125662583114325,no,0.005525410998806183
2910,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//return memberPersister.getType();,no,undetermined,0,0,0,no,0.003458881779349579,no,0.0030443686952343002,no,0.003094821706189613,no,0.003305365355404127,no,0.003331327821294978,no,0.0029054510986059484
2911,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*&& !indexIsFormula*/,no,undetermined,0,0,0,no,0.0036523008980329486,no,0.005504726900042388,no,0.006461868463342029,no,0.00788716525811375,no,0.0079850989855144,no,0.007268429553841039
2912,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		return !isOneToMany();,no,undetermined,0,0,0,no,0.0007108479426811011,no,0.0005626488816341576,no,0.0004678183472785233,no,0.00040429721458336174,no,0.00040553700375767915,no,0.0003555070972592494
2913,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//instanceof AssociationType;,no,undetermined,0,0,0,no,0.019497728861485566,no,0.010972603498253682,no,0.009088679137724726,no,0.00804388768209425,no,0.00799338631391445,no,0.007282632724704499
2914,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we need to determine the best way to know that two joinables // represent a single many-to-many...,no,undetermined,0,0,0,no,0.45801848911486803,no,0.3715524590027496,no,0.33625482706399723,no,0.3398674574233508,no,0.33714465204439775,no,0.334360417771603
2915,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//strip leading ','",no,undetermined,0,0,0,no,0.0019651936256530186,no,0.0021916572454792455,no,0.0020502353898247507,no,0.0021570947532728014,no,0.0021670034332423316,no,0.0019291622777456356
2916,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//public boolean isSubselectLoadable();,no,undetermined,0,0,0,no,0.000249682178758013,no,0.00019260933034594138,no,0.00014972224014139356,no,0.00012720416612213743,no,0.00012610826470573505,no,0.00010597960318383019
2917,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//columns,no,undetermined,0,0,0,no,6.301193482817758e-05,no,0.000989524624808688,no,0.0009547083405365975,no,0.0010197630426944553,no,0.000997845284323621,no,0.0008887726784362515
2918,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//SQL statements,no,undetermined,0,0,0,no,0.0011258900188768272,no,0.0021516256397409515,no,0.0021503892010516614,no,0.0022955617463447453,no,0.0023819077168660734,no,0.0021310347081132347
2919,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//extra information about the element type,no,undetermined,0,0,0,no,0.011953786828578882,no,0.00969321457745248,no,0.007884725913357548,no,0.007407518701144902,no,0.007383920520690146,no,0.006703073161485702
2920,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//types,no,undetermined,0,0,0,no,0.017212566350700814,no,0.010442425031562279,no,0.009083817856651775,no,0.00805156628781225,no,0.007987901831851649,no,0.007260876202590497
2921,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// sql server just returns automatically,no,undetermined,0,0,0,no,0.006895062202244086,no,0.010977944764434835,no,0.009096745440837925,no,0.008060156057829667,no,0.00799297061344799,no,0.007269800234063849
2922,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// custom sql,no,undetermined,0,0,0,no,0.0015612581290046351,no,0.0040820556495537,no,0.004076381873537434,no,0.004376118180720686,no,0.004434775440098644,no,0.00400151010167643
2923,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//private final String unquotedIdentifierColumnName;,no,undetermined,0,0,0,no,0.00395045307966005,no,0.004160604286218897,no,0.0031884687417165656,no,0.0026358628308533073,no,0.0026087677453512296,no,0.0023221261370892456
2924,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//		return ""select CURRENT_TIMESTAMP from RDB$DATABASE"";",no,undetermined,0,0,0,no,0.00796985282025441,no,0.0077941160645458255,no,0.007041536822525309,no,0.007326114188017303,no,0.0072577159074134374,no,0.006622524867793951
2925,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// dynamic filters specifically for many-to-many inside the collection,no,undetermined,0,0,0,no,0.012497200692363921,no,0.006041921915064388,no,0.005633755904224737,no,0.004941697768061829,no,0.004914169185345438,no,0.004468783879977303
2926,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// dynamic filters for the collection,no,undetermined,0,0,0,no,0.004826171810371342,no,0.0035246247928323662,no,0.0025254445969036345,no,0.0022263688967400098,no,0.002270822947376628,no,0.002040764565674781
2927,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//registerColumnType data types,no,undetermined,0,0,0,no,0.005675601164819173,no,0.010992685143923648,no,0.00909906121839642,no,0.008062476222863664,no,0.007993187325639329,no,0.007287450646783975
2928,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// IBID for current_time and current_date,no,undetermined,0,0,0,no,0.002332715307691178,no,0.001666559741146115,no,0.0009554274306218764,no,0.0006685909479890342,no,0.0006595355857312195,no,0.0005704678031321889
2929,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If we've been blocking for the mutex, perhaps another // thread has already reestablished the root. // In case the node was reestablised via replication, confirm it's  // marked ""resident"" (a status which doesn't replicate)",no,undetermined,0,0,0,no,0.044144106691742,no,0.010971967396387556,no,0.009084686895125553,no,0.008040767070838874,no,0.007989573611540703,no,0.0072585664433821905
2930,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Tell hibernate to use getBytes instead of getBinaryStream,no,undetermined,0,0,0,no,0.033107187662983165,no,0.010976069439628918,no,0.009107807544351865,no,0.008058272917622388,no,0.008000460787529988,no,0.007281835560245268
2931,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// No batch statements,no,undetermined,0,0,0,no,0.001221910470764096,no,0.0013387895915053564,no,0.0011975851729054336,no,0.0010915424670981755,no,0.001260241853384018,no,0.0011150514462581927
2932,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//ELEMENT,no,undetermined,0,0,0,no,0.0005693741332549053,no,0.0005890797313572086,no,0.0005694552241655899,no,0.0005223197795221822,no,0.0005214419307642042,no,0.0004571084557384249
2933,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*
		 * We might want a special case for 19,2. This is very common for money types
		 * and here it is converted to 18,1
		 */",no,undetermined,0,0,0,no,0.4434621991978683,no,0.31908499120003136,no,0.28245374245564014,no,0.2793667218642058,no,0.2765304501432368,no,0.2690229530860927
2934,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//no pointbase BIT,no,undetermined,0,0,0,no,0.024204727672384727,no,0.010996367866528722,no,0.009112275475986859,no,0.008045954241323377,no,0.007999763757964828,no,0.0072799671001443425
2935,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//no pointbase TINYINT,no,undetermined,0,0,0,no,0.020444712166486825,no,0.010977950253027956,no,0.0090764801393292,no,0.008058414396092655,no,0.008002968624789315,no,0.007290984466454707
2936,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// NativeSQL: collect element column and auto-aliases,no,undetermined,0,0,0,no,0.0015384878365851604,no,0.002075307313955192,no,0.001909759685650769,no,0.0017686333781360116,no,0.0017452877584600785,no,0.0015469808122900676
2937,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// INDEX AND ROW SELECT,no,undetermined,0,0,0,no,0.001347564263904554,no,0.00198836396366866,no,0.0014995005617077512,no,0.0012604491167355102,no,0.001248821197025438,no,0.0011039320852455714
2938,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//starts with 1, implicitly",no,undetermined,0,0,0,no,0.007251750185818929,no,0.009951259646047452,no,0.00910471896140147,no,0.008062144968621749,no,0.007996103317061581,no,0.007291765336907726
2939,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// SQL Server (at least up through 2005) does not support defining // cascade delete constraints which can circel back to the mutating // table,no,undetermined,0,0,0,no,0.0053618816931044755,no,0.01097040925250883,no,0.009092510818093749,no,0.008048059840863844,no,0.007986811367036778,no,0.007273994978576346
2940,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// NativeSQL: collect index column and auto-aliases,no,undetermined,0,0,0,no,0.0015046084543104716,no,0.002822623605295961,no,0.002574209990235772,no,0.0023435671029329625,no,0.0023155727086276883,no,0.0020540396023049504
2941,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// here assume SQLServer2005 using snapshot isolation, which does not have this problem",no,undetermined,0,0,0,no,0.11321667947294868,no,0.11959775508914992,no,0.1796237713700512,no,0.16946152997053052,no,0.16347889270929872,no,0.15920809067918487
2942,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//		registerColumnType( Types.CLOB, 16777215, ""mediumtext"" ); //		registerColumnType( Types.CLOB, 65535, ""text"" );",no,undetermined,0,0,0,no,0.0030993170133504448,no,0.00776116553721794,no,0.0074014413966857805,no,0.007154537760053374,no,0.007147527471052949,no,0.006523062714311374
2943,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//		registerColumnType( Types.VARCHAR, 16777215, ""mediumtext"" ); //		registerColumnType( Types.VARCHAR, 65535, ""text"" );",no,undetermined,0,0,0,no,0.0049695142593170335,no,0.009190488291613109,no,0.007949930426023552,no,0.007091802791343302,no,0.0070038888194975625,no,0.0063512859547999
2944,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//starts with 1, implicitly",no,undetermined,0,0,0,no,0.007251750185818929,no,0.009951259646047452,no,0.00910471896140147,no,0.008062144968621749,no,0.007996103317061581,no,0.007291765336907726
2945,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//GENERATE THE SQL:,no,undetermined,0,0,0,no,0.0012914817102477388,no,0.0015608173616841175,no,0.0013531439449022647,no,0.0014509287624701274,no,0.0014833098644503376,no,0.0013043914158738276
2946,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* package-private */,no,undetermined,0,0,0,no,0.008627799417472047,no,0.009437233489304296,no,0.008067230145365329,no,0.0076519662407670995,no,0.007575999382696793,no,0.006899049368687503
2947,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//not all classpersisters implement PropertyMapping!,no,undetermined,0,0,0,no,0.026784917311923152,no,0.010978719172316546,no,0.009082432708873444,no,0.008049002888597874,no,0.007989655931555326,no,0.007269239089519007
2948,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Handle any filters applied to this collection for many-to-many,no,undetermined,0,0,0,no,0.05635132753364118,no,0.010982663445508654,no,0.009091465291797001,no,0.008063420489475604,no,0.007988205876157483,no,0.00728487336117891
2949,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if there is a user-specified loader, return that //TODO: filters!?",no,undetermined,0,0,0,yes,0.8307504663730846,yes,0.8208318507543798,yes,0.8461032999077235,yes,0.8598370109780537,yes,0.8588659251682551,yes,0.8624268411076712
2950,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Take care of any entities that might have // been evicted!	,no,undetermined,0,0,0,no,0.01634383109366657,no,0.010971520422623539,no,0.00909381916051648,no,0.0080543058806739,no,0.007977496605701745,no,0.007278950247600924
2951,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//strip leading ','",no,undetermined,0,0,0,no,0.0019651936256530186,no,0.0021916572454792455,no,0.0020502353898247507,no,0.0021570947532728014,no,0.0021670034332423316,no,0.0019291622777456356
2952,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Run a subquery loader,no,undetermined,0,0,0,no,0.0036858167018370643,no,0.005047644288974942,no,0.004935546727079972,no,0.005389866156343924,no,0.0054163625347038126,no,0.00490940450713227
2953,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// We can't change the TM on a running cache; just check // if the cache has no TM and we're OK with that,no,undetermined,0,0,0,no,0.006139223401885828,no,0.007443384544489626,no,0.006359275762296384,no,0.0050889818960321255,no,0.005668023755696893,no,0.00506359208309121
2954,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Sybase BIT type does not support null values,no,undetermined,0,0,0,no,0.028719436631048974,no,0.010973902079247894,no,0.009113436592300135,no,0.008053529556379673,no,0.007982020711558525,no,0.007290672208978299
2955,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// We could register the session against the transaction even though it is // not started, but we'd have no guarentee of ever getting the map // entries cleaned up (aside from spawning threads).",no,undetermined,0,0,0,no,0.0025317101668510303,no,0.002910146080851793,no,0.0023741896789080345,no,0.0019599280364164854,no,0.0022254302712803064,no,0.00198295420287924
2956,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//needed by arrays,no,undetermined,0,0,0,no,0.04120571484917036,no,0.01097536148122374,no,0.00909842428694722,no,0.008049992691373272,no,0.007989801933143125,no,0.0072627418303883575
2957,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ignore,no,undetermined,0,0,0,no,9.704158853977813e-05,no,0.0001028234778214713,no,8.618023972266878e-05,no,7.500503008764863e-05,no,7.548377628387645e-05,no,6.317234672920366e-05
2958,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		 This assumes you will want to ignore any update counts,no,undetermined,0,0,0,no,0.004060027518415423,no,0.0026355786487327667,no,0.002366182763219317,no,0.002110223236153524,no,0.002039590708111076,no,0.001828082302656734
2959,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//TODO: something with formulas...,no,undetermined,0,0,0,yes,0.9999998270233041,no,0.010975539376897213,no,0.009092720613097646,no,0.008050737076000443,no,0.007988449204451221,no,0.007274980135236763
2960,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//an assertion,no,undetermined,0,0,0,no,0.00842196663993829,no,0.01096154736237864,no,0.009119973500019448,no,0.008050380147951505,no,0.007984677656171512,no,0.0072768238678733955
2961,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Remove all the old entries,no,undetermined,0,0,0,no,0.0019011117326966833,no,0.0017436540343055864,no,0.0016413643537290168,no,0.0014609543672540405,no,0.0014857335594763376,no,0.0013108873017079472
2962,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* local variables | target obj | each oldvalue | */,no,undetermined,0,0,0,no,0.0015159231697180258,no,0.001761869938454517,no,0.0014840102252210872,no,0.001382297516809214,no,0.0013858252291954498,no,0.001234309069807772
2963,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//create all the new entries,no,undetermined,0,0,0,no,0.0009921585058552433,no,0.0009942930204206084,no,0.0008603007588890952,no,0.0007493813099580716,no,0.0007701877015762461,no,0.000670046424619881
2964,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*&& !indexIsFormula*/,no,undetermined,0,0,0,no,0.0036523008980329486,no,0.005504726900042388,no,0.006461868463342029,no,0.00788716525811375,no,0.0079850989855144,no,0.007268429553841039
2965,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*&& !indexIsFormula*/,no,undetermined,0,0,0,no,0.0036523008980329486,no,0.005504726900042388,no,0.006461868463342029,no,0.00788716525811375,no,0.0079850989855144,no,0.007268429553841039
2966,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//delete all the deleted entries,no,undetermined,0,0,0,no,0.0007451040987378326,no,0.0003996399512119615,no,0.0003760404054976521,no,0.00033053312901514133,no,0.00032735690590092166,no,0.00028120087496656465
2967,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//insert all the new entries,no,undetermined,0,0,0,no,0.0007593702084057026,no,0.0009554436545583862,no,0.0008859099850934975,no,0.000793073464020462,no,0.00081009436050647,no,0.0007058607660599456
