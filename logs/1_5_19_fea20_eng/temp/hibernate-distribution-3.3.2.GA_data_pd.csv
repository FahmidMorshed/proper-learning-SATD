,projectname,classification,commenttext,label,code,time,yes_vote,no_vote,svm_pred_0,svm_pred_0_proba,svm_pred_1,svm_pred_1_proba,svm_pred_2,svm_pred_2_proba,svm_pred_3,svm_pred_3_proba
0,hibernate-distribution-3.3.2.GA,DEFECT,"// this is only needed (afaict) for processing results from the query cache; // however, this cannot possibly work in the case of discovered types...",yes,undetermined,0,0,0,no,0.13923776474849717,no,0.11457596925219862,no,0.10420627351081921,no,0.1044334811536558
1,hibernate-distribution-3.3.2.GA,DEFECT,// note that this timestamp is not correct if the connection provider // returns an older JDBC connection that was associated with a // transaction that was already begun before openSession() was called // (don't know any possible solution to this!),yes,undetermined,0,0,0,no,0.203953202772373,no,0.17095182657583122,no,0.16454525600782355,no,0.1661780898828047
2,hibernate-distribution-3.3.2.GA,DEFECT,"//TODO: This is assertion is disabled because there is a bug that means the //	  original owner of a transient, uninitialized collection is not known //	  if the collection is re-referenced by a different object associated //	  with the current Session //throw new AssertionFailure(""bug loading unowned collection"");",yes,undetermined,0,0,0,yes,0.7352874998516711,yes,0.6815496697571982,yes,0.6833462120359891,yes,0.6931035981120209
3,hibernate-distribution-3.3.2.GA,DEFECT,"// This does not support the Cache SQL 'DISTINCT BY (comma-list)' extensions, // but this extension is not supported through Hibernate anyway.",yes,undetermined,0,0,0,no,0.020694801609995806,yes,0.9855446346382933,yes,0.9847028418087632,yes,0.986208893053917
4,hibernate-distribution-3.3.2.GA,DEFECT,"//TODO: when this is the entry point, we should use an INNER_JOIN for fetching the many-to-many elements!",yes,undetermined,0,0,0,yes,0.9114950679584763,yes,0.985562412298637,yes,0.9847208686618543,yes,0.9862368671056376
5,hibernate-distribution-3.3.2.GA,DEFECT,"// could happen for custom Criteria impls.  Not likely, but... // 		for long term solution, see HHH-3514",yes,undetermined,0,0,0,no,0.009521831376408574,yes,0.9855201607637406,yes,0.984728519308587,yes,0.9861959878943923
6,hibernate-distribution-3.3.2.GA,DEFECT,//TODO: currently broken for unique-key references (does not detect //      change to unique key property of the associated object) //the owner of the association is not the owner of the id,yes,undetermined,0,0,0,yes,0.5641392206516541,yes,0.6808606044210611,yes,0.6924845938740202,yes,0.702045296025209
7,hibernate-distribution-3.3.2.GA,DEFECT,//TODO: currently broken for unique-key references (does not detect //      change to unique key property of the associated object),yes,undetermined,0,0,0,yes,0.7199481166130209,yes,0.7153790049252334,yes,0.7048507665999467,yes,0.7148041703599815
8,hibernate-distribution-3.3.2.GA,DEFECT,"//TODO: entities CAN be compared, by PK and entity name, fix this!",yes,undetermined,0,0,0,yes,0.9650365804560508,yes,0.9855626006300308,yes,0.9847197410308309,yes,0.9862264057461759
9,hibernate-distribution-3.3.2.GA,DEFECT,// TODO: does not work for EntityMode.DOM4J yet!,yes,undetermined,0,0,0,yes,0.9999999703251218,yes,0.9999999299595893,yes,0.9999999232955271,yes,0.9999999467699784
10,hibernate-distribution-3.3.2.GA,DEFECT,"// TODO: Deal with the ""optional"" attribute in the <join> mapping; // this code assumes that optional defaults to ""true"" because it // doesn't actually seem to work in the fetch=""join"" code // // Note that actual proper handling of optional-ality here is actually // more involved than this patch assumes.  Remember that we might have // multiple <join/> mappings associated with a single entity.  Really // a couple of things need to happen to properly handle optional here: //  1) First and foremost, when handling multiple <join/>s, we really //      should be using the entity root table as the driving table; //      another option here would be to choose some non-optional joined //      table to use as the driving table.  In all likelihood, just using //      the root table is much simplier //  2) Need to add the FK columns corresponding to each joined table //      to the generated select list; these would then be used when //      iterating the result set to determine whether all non-optional //      data is present // My initial thoughts on the best way to deal with this would be // to introduce a new SequentialSelect abstraction that actually gets // generated in the persisters (ok, SingleTable...) and utilized here. // It would encapsulated all this required optional-ality checking...",yes,undetermined,0,0,0,yes,0.80984468566244,yes,0.7460366742983233,yes,0.7336065280263248,yes,0.7425214647320371
11,hibernate-distribution-3.3.2.GA,DEFECT,"//TODO: would be nice to use false, but issues with MS SQL",yes,undetermined,0,0,0,yes,0.9822797887965065,yes,0.9855370981769201,yes,0.9847142410512091,yes,0.9861925414625363
12,hibernate-distribution-3.3.2.GA,DEFECT,"//TODO: not really completely correct, since //      the uoe could occur while resolving //      associations, leaving the PC in an //      inconsistent state",yes,undetermined,0,0,0,yes,0.7820774239599574,yes,0.7367768590498859,yes,0.7389123372205226,yes,0.7421684709791342
13,hibernate-distribution-3.3.2.GA,DEFECT,//TODO: this is kinda inconsistent with CollectionType,yes,undetermined,0,0,0,no,0.01325037645668776,no,0.014260932248424719,no,0.013765265067302008,no,0.013323255765510592
14,hibernate-distribution-3.3.2.GA,DEFECT,"// For a one-to-many, a <bag> is not really a bag; // it is *really* a set, since it can't contain the // same element twice. It could be considered a bug // in the mapping dtd that <bag> allows <one-to-many>.",yes,undetermined,0,0,0,no,0.07879521713786368,yes,0.9855334892050681,yes,0.9847137710838154,yes,0.9862316969425485
15,hibernate-distribution-3.3.2.GA,DEFECT,"//TODO: entities CAN be compared, by PK, fix this! -> only if/when we can extract the id values....",yes,undetermined,0,0,0,yes,0.9614866403656431,yes,0.9855688857242453,yes,0.9847307610626668,yes,0.9862327940837256
16,hibernate-distribution-3.3.2.GA,DEFECT,//TODO: old version did not require hashmap lookup: //keys[collectionOwner].getIdentifier(),yes,undetermined,0,0,0,yes,0.7950825733461574,yes,0.7620265250552545,yes,0.7580617284395302,yes,0.7687956910058138
17,hibernate-distribution-3.3.2.GA,DEFECT,// TODO: this disables laziness even in non-pojo entity modes:,yes,undetermined,0,0,0,yes,0.9791679113311929,yes,0.9855290157923025,yes,0.9847323003281416,yes,0.9862351810668069
18,hibernate-distribution-3.3.2.GA,DEFECT,"// TODO: at the point where we are resolving collection references, we don't // know if the uk value has been resolved (depends if it was earlier or // later in the mapping document) - now, we could try and use e.getStatus() // to decide to semiResolve(), trouble is that initializeEntity() reuses // the same array for resolved and hydrated values",yes,undetermined,0,0,0,yes,0.751160973814499,yes,0.7248999605976073,yes,0.7191939055998353,yes,0.7315624007085489
19,hibernate-distribution-3.3.2.GA,DEFECT,//TODO: currently we don't know a SessionFactory reference when building the Tuplizer //      THIS IS A BUG (embedded-xml=false on component) // TODO : fix this after HHH-1907 is complete,yes,undetermined,0,0,0,yes,0.9999998928867662,yes,0.9999996151929608,yes,0.9999995576619943,yes,0.9999996840342018
20,hibernate-distribution-3.3.2.GA,DEFECT,//TODO: this requires that the collection is defined after the //      referenced property in the mapping file (ok?),yes,undetermined,0,0,0,yes,0.6847597037340671,yes,0.7360062271211829,yes,0.7425669891673435,yes,0.7546784000005299
21,hibernate-distribution-3.3.2.GA,DEFECT,// TODO : currently we really do not handle ValueInclusion.PARTIAL... // ValueInclusion.PARTIAL would indicate parts of a component need to // be included in the select; currently we then just render the entire // component into the select clause in that case.,yes,undetermined,0,0,0,yes,0.8712351437269211,yes,0.7727412136676663,yes,0.7618631639328953,yes,0.7709223374366632
22,hibernate-distribution-3.3.2.GA,DEFECT,//TODO: is this completely correct?,yes,undetermined,0,0,0,yes,0.996003691528986,yes,0.9922227735088446,yes,0.9928572351936149,yes,0.9936600116881761
23,hibernate-distribution-3.3.2.GA,DEFECT,// TODO: what if batchUpdate is a callablestatement ? // calls executeBatch(),yes,undetermined,0,0,0,yes,0.996595607069058,yes,0.9958385451528676,yes,0.9955558814904694,yes,0.9960773625903847
24,hibernate-distribution-3.3.2.GA,DEFECT,// This doesn't actually seem to work but it *might* // work on some dbs. Also it doesn't work if there // are multiple columns of results because it // is not accounting for the suffix: // return new String[] { getDiscriminatorColumnName() };,yes,undetermined,0,0,0,no,0.23122074465918302,no,0.2676037009781211,no,0.2567883112840591,no,0.26091021525089764
25,hibernate-distribution-3.3.2.GA,DEFECT,"// First, validate all the enabled filters... //TODO: this implementation has bad performance",yes,undetermined,0,0,0,yes,0.9318086735458033,yes,0.9855389441776334,yes,0.9847139444324515,yes,0.986198012916302
26,hibernate-distribution-3.3.2.GA,DEFECT,"//TODO: passing null here, because this method is not really used for DOM4J at the moment //      but it is still a bug, if we don't get rid of this!",yes,undetermined,0,0,0,yes,0.9974671196211412,yes,0.9973182091480641,yes,0.9972107253400547,yes,0.9973808849472623
27,hibernate-distribution-3.3.2.GA,DEFECT,// TODO : this really needs to be delayed unitl after we definitively know the operand node type; // where this is currently a problem is parameters for which where we cannot unequivocally // resolve an expected type,yes,undetermined,0,0,0,yes,0.990127384764589,yes,0.9882977655295412,yes,0.9877438475609036,yes,0.9890641131118264
28,hibernate-distribution-3.3.2.GA,DEFECT,"/*
		  * Algorithm
		  * Check for any level one nullability breaks
		  * Look at non null components to
		  *   recursively check next level of nullability breaks
		  * Look at Collections contraining component to
		  *   recursively check next level of nullability breaks
		  *
		  *
		  * In the previous implementation, not-null stuffs where checked
		  * filtering by level one only updateable
		  * or insertable columns. So setting a sub component as update=""false""
		  * has no effect on not-null check if the main component had good checkeability
		  * In this implementation, we keep this feature.
		  * However, I never see any documentation mentioning that, but it's for
		  * sure a limitation.
		  */",yes,undetermined,0,0,0,no,0.043540613143909744,yes,0.9855419658674766,yes,0.9847077331924405,yes,0.9862181809627969
29,hibernate-distribution-3.3.2.GA,DEFECT,"// assume that the row was not there since it previously had only null // values, so do an INSERT instead //TODO: does not respect dynamic-insert",yes,undetermined,0,0,0,no,0.46531409041554084,yes,0.5491450825920766,yes,0.5436338025879407,yes,0.5535334348672362
30,hibernate-distribution-3.3.2.GA,DEFECT,// todo : this call will not work for anything other than pojos!,yes,undetermined,0,0,0,yes,0.999986972910502,yes,0.9999820788093007,yes,0.9999814120969421,yes,0.9999858367932238
31,hibernate-distribution-3.3.2.GA,DEFECT,//note that this implementation is kinda broken //for components with many-to-one associations,yes,undetermined,0,0,0,no,0.07046739506898164,yes,0.9855403689276447,yes,0.9847015633781714,yes,0.9862139882356838
32,hibernate-distribution-3.3.2.GA,DEFECT,"//no need to take a snapshot - this is a  //performance optimization, but not really //important, except for entities with huge  //mutable property values",yes,undetermined,0,0,0,no,0.14610940523105054,no,0.2198725569969762,no,0.21456160537863686,no,0.21688438343034852
33,hibernate-distribution-3.3.2.GA,DEFECT,// TODO : this is broke for subqueries in statements other than selects...,yes,undetermined,0,0,0,yes,0.9597330375087099,yes,0.9855209341524134,yes,0.98469400996398,yes,0.9862078763589275
34,hibernate-distribution-3.3.2.GA,DEFECT,"/*
         * The following types are not supported in RDMS/JDBC and therefore commented out.
         * However, in some cases, mapping them to CHARACTER columns works
         * for many applications, but does not work for all cases.
         */",yes,undetermined,0,0,0,no,0.12134816422768706,no,0.19257175786376338,no,0.1857064550549481,no,0.18838352249348037
35,hibernate-distribution-3.3.2.GA,DEFECT,// TODO : should this be an error?,yes,undetermined,0,0,0,yes,0.9961037367061991,yes,0.9948577181911513,yes,0.9949198744353497,yes,0.9954969670461078
36,hibernate-distribution-3.3.2.GA,DEFECT,"// three general cases we check here as to whether to render a physical SQL join: // 1) is our parent a DotNode as well?  If so, our property reference is // 		being further de-referenced... // 2) is this a DML statement // 3) we were asked to generate any needed joins (generateJoins==true) *OR* //		we are currently processing a select or from clause // (an additional check is the REGRESSION_STYLE_JOIN_SUPPRESSION check solely intended for the test suite) // // The REGRESSION_STYLE_JOIN_SUPPRESSION is an additional check // intended solely for use within the test suite.  This forces the // implicit join resolution to behave more like the classic parser. // The underlying issue is that classic translator is simply wrong // about its decisions on whether or not to render an implicit join // into a physical SQL join in a lot of cases.  The piece it generally // tends to miss is that INNER joins effect the results by further // restricting the data set!  A particular manifestation of this is // the fact that the classic translator will skip the physical join // for ToOne implicit joins *if the query is shallow*; the result // being that Query.list() and Query.iterate() could return // different number of results!",yes,undetermined,0,0,0,no,0.14509570495952667,no,0.14055091032724387,no,0.1456516974133139,no,0.14568248608558632
37,hibernate-distribution-3.3.2.GA,DEFECT,// TODO: figure out how this should be set. /////////////////////////////////////////////////////////////////////////////// // This was the reason for failures regarding INDEX_OP and subclass joins on // theta-join dialects; not sure what behaviour we were trying to emulate ;) //		joinSequence = joinSequence.getFromPart();	// Emulate the old addFromOnly behavior.,yes,undetermined,0,0,0,yes,0.6369066517195608,yes,0.5682212414570651,yes,0.5641211103004343,yes,0.5739216486736841
38,hibernate-distribution-3.3.2.GA,DEFECT,"// The preference here would be //   SQLFunctionTemplate( Hibernate.TIMESTAMP, ""current_timestamp(?1)"", false) // but this appears not to work. // Jay Nance 2006-09-22",yes,undetermined,0,0,0,no,0.06452720554684921,yes,0.9855299467029933,yes,0.9847168279232825,yes,0.9861917909606863
39,hibernate-distribution-3.3.2.GA,DEFECT,"//TODO: would be nice to use false, but issues with MS SQL",yes,undetermined,0,0,0,yes,0.9822797887965065,yes,0.9855370981769201,yes,0.9847142410512091,yes,0.9861925414625363
40,hibernate-distribution-3.3.2.GA,DEFECT,"//TODO: inexact, what we really need to know is: are any outer joins used?",yes,undetermined,0,0,0,yes,0.9838938254581333,yes,0.9895339738007265,yes,0.9862715683278496,yes,0.9876156416729627
41,hibernate-distribution-3.3.2.GA,DEFECT,"//TODO: would be nice to use false, but issues with MS SQL",yes,undetermined,0,0,0,yes,0.9822797887965065,yes,0.9855370981769201,yes,0.9847142410512091,yes,0.9861925414625363
42,hibernate-distribution-3.3.2.GA,DEFECT,"// TODO : not sure which (either?) is correct, could not find docs on how to do this. // did find various blogs and forums mentioning that select CURRENT_TIMESTAMP // does not work...",yes,undetermined,0,0,0,yes,0.9509956887203219,yes,0.9855634548473999,yes,0.9847001226227198,yes,0.9862224039435941
43,hibernate-distribution-3.3.2.GA,DEFECT,// TODO: cannot use generateSuffixes() - it handles the initial suffix differently.,yes,undetermined,0,0,0,no,0.2626874071734876,no,0.2829088787192272,no,0.27016704807849096,no,0.27461124792528985
44,hibernate-distribution-3.3.2.GA,DEFECT,"//Don't need this, because we should never ever be selecting no columns in an insert ... select... //and because it causes a bug on DB2",yes,undetermined,0,0,0,no,0.11677906688012758,no,0.20484347313458146,no,0.19789789991214035,no,0.19988409122532258
45,hibernate-distribution-3.3.2.GA,DEFECT,// starts with an alias (old style) // semi-bad thing about this: can't re-alias another alias.....,yes,undetermined,0,0,0,no,0.03174080114646842,yes,0.9855515978757596,yes,0.9847222491484031,yes,0.9862078156801991
46,hibernate-distribution-3.3.2.GA,DEFECT,//TODO: BUG! this currently fails for named queries for non-POJO entities,yes,undetermined,0,0,0,yes,0.9847584346377936,yes,0.9907452153175986,yes,0.990048285570223,yes,0.991037491442504
47,hibernate-distribution-3.3.2.GA,DEFECT,"//FIXME we don't have the associated entity table name here, has to be done in a second pass",yes,undetermined,0,0,0,yes,0.7355846035302847,yes,0.6157989552846439,yes,0.6013194450618298,yes,0.6142529590912781
48,hibernate-distribution-3.3.2.GA,DEFECT,// this call is side-effecty,yes,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
49,hibernate-distribution-3.3.2.GA,DEFECT,"// RDMS does not directly support the trim() function, we use rtrim() and ltrim()",yes,undetermined,0,0,0,no,0.009791168066632968,yes,0.985530848755954,yes,0.9847167076428908,yes,0.9862179251763941
50,hibernate-distribution-3.3.2.GA,DEFECT,// note: at least my local SQL Server 2005 Express shows this not working...,yes,undetermined,0,0,0,no,0.042124780078983924,yes,0.9855465297408297,yes,0.9847026815832821,yes,0.9862030831183012
51,hibernate-distribution-3.3.2.GA,DEFECT,// note: at least my local MySQL 5.1 install shows this not working...,yes,undetermined,0,0,0,no,0.0220503215619696,yes,0.9855690388943984,yes,0.9847327831600873,yes,0.9862125579196722
52,hibernate-distribution-3.3.2.GA,DESIGN,"// use COUNT as the default.  This mimics the old behavior, although // NONE might be a better option moving forward in the case of callable",yes,undetermined,0,0,0,no,0.06620410134284098,yes,0.9855484323031826,yes,0.984711618406431,yes,0.9862343464687707
53,hibernate-distribution-3.3.2.GA,DESIGN,//perhaps not really necessary...,yes,undetermined,0,0,0,no,0.08285662045427268,yes,0.9855315356715815,yes,0.9846992333430566,yes,0.9862181014473076
54,hibernate-distribution-3.3.2.GA,DESIGN,// todo : what else to do here?,yes,undetermined,0,0,0,no,0.01325037645668776,no,0.014260932248424719,no,0.013765265067302008,no,0.013323255765510592
55,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: disable batch loading if lockMode > READ?,yes,undetermined,0,0,0,yes,0.7175346409832019,yes,0.6674574532431061,yes,0.6654735742474593,yes,0.6776726914811941
56,hibernate-distribution-3.3.2.GA,DESIGN,// todo : what else to do here?,yes,undetermined,0,0,0,no,0.01325037645668776,no,0.014260932248424719,no,0.013765265067302008,no,0.013323255765510592
57,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: to handle concurrent writes correctly, the client should pass in a Lock",yes,undetermined,0,0,0,yes,0.7147471204101002,yes,0.7044203201491095,yes,0.7475947437352414,yes,0.7582847127665354
58,hibernate-distribution-3.3.2.GA,DESIGN,"// turn hibernate.c3p0.* into c3p0.*, so c3p0 // gets a chance to see all hibernate.c3p0.*",yes,undetermined,0,0,0,no,0.014162908676907143,yes,0.9855483800459818,yes,0.9847049539751733,yes,0.9862170546807616
59,hibernate-distribution-3.3.2.GA,DESIGN,//note there is a wierd implementation in the client side,yes,undetermined,0,0,0,no,0.04329627113522223,yes,0.9855668940171556,yes,0.9847280767449346,yes,0.9862324706222393
60,hibernate-distribution-3.3.2.GA,DESIGN,// todo: this was added to support initializing an entity's EntityEntry snapshot during reattach; // this should be refactored to instead expose a method to assemble a EntityEntry based on this // state for return.,yes,undetermined,0,0,0,yes,0.9037442210397294,yes,0.9855713452520275,yes,0.9847169462171473,yes,0.9862273836042352
61,hibernate-distribution-3.3.2.GA,DESIGN,// Do we need to drop constraints before dropping tables in this dialect?,yes,undetermined,0,0,0,no,0.03184838772167707,yes,0.9855439230731009,yes,0.9847017524848215,yes,0.9862129596344481
62,hibernate-distribution-3.3.2.GA,DESIGN,"/**
     * FIXME Per the RegionFactory class Javadoc, this constructor version
     * should not be necessary.
     * 
     * @param props The configuration properties
     */",yes,undetermined,0,0,0,yes,0.9666546400717521,yes,0.9855629495379596,yes,0.9847072635560202,yes,0.9861994517130404
63,hibernate-distribution-3.3.2.GA,DESIGN,// Does this dialect support check constraints?,yes,undetermined,0,0,0,no,0.0016083305036788112,yes,0.9855490391994556,yes,0.9846986943981377,yes,0.9862380682384486
64,hibernate-distribution-3.3.2.GA,DESIGN,// this is called by SessionFactory irregardless; we just disregard here; // could also add a check to SessionFactory to only conditionally call start,yes,undetermined,0,0,0,no,0.014956599319211552,yes,0.9855512446668256,yes,0.9847032842226212,yes,0.9862006888530319
65,hibernate-distribution-3.3.2.GA,DESIGN,// Does this dialect support the UNIQUE column syntax?,yes,undetermined,0,0,0,no,0.03373053316536617,yes,0.985547608640174,yes,0.984736767399896,yes,0.9862036793545991
66,hibernate-distribution-3.3.2.GA,DESIGN,// this is done here 'cos we might only know the type here (ugly!) // TODO: improve this a lot:,yes,undetermined,0,0,0,yes,0.9999995711733707,yes,0.9999996427116833,yes,0.9999997259700023,yes,0.9999998053182809
67,hibernate-distribution-3.3.2.GA,DESIGN,// Does this dialect support the FOR UPDATE syntax?,yes,undetermined,0,0,0,no,0.02241196659918521,yes,0.9922249638990769,yes,0.9917081272468669,yes,0.9925878414174926
68,hibernate-distribution-3.3.2.GA,DESIGN,// todo : what is the implication of this?,yes,undetermined,0,0,0,no,0.01325037645668776,no,0.014260932248424719,no,0.013765265067302008,no,0.013323255765510592
69,hibernate-distribution-3.3.2.GA,DESIGN,// todo : YUCK!!!,yes,undetermined,0,0,0,no,0.01325037645668776,no,0.014260932248424719,no,0.013765265067302008,no,0.013323255765510592
70,hibernate-distribution-3.3.2.GA,DESIGN,"// todo : again, how *should* this work for non-pojo entities?",yes,undetermined,0,0,0,yes,0.9965069765088722,yes,0.9999860410111489,yes,0.9999843742690494,yes,0.9999881051695609
71,hibernate-distribution-3.3.2.GA,DESIGN,"// Does this dialect support FOR UPDATE OF, allowing particular rows to be locked?",yes,undetermined,0,0,0,no,0.026144449048323273,yes,0.9855607398886158,yes,0.984698997274791,yes,0.9862099264445857
72,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: really bad, evil hack to fix!!!",yes,undetermined,0,0,0,yes,0.999999999963466,yes,0.9999999999323443,yes,0.9999999999268667,yes,0.9999999999545864
73,hibernate-distribution-3.3.2.GA,DESIGN,"//aliasRefNode.resolve( false, false, aliasRefNode.getText() ); //TODO: is it kosher to do it here? //TODO: is it kosher to do it here?",yes,undetermined,0,0,0,yes,0.9848327472834748,yes,0.9855638492111581,yes,0.9847388584459542,yes,0.9862213368918821
74,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: better to degrade to lazy=""false"" if uninstrumented",yes,undetermined,0,0,0,yes,0.9962017314522355,yes,0.9919686956862279,yes,0.9916395228542031,yes,0.9886551954523164
75,hibernate-distribution-3.3.2.GA,DESIGN,// Does this dialect support the Oracle-style FOR UPDATE NOWAIT syntax?,yes,undetermined,0,0,0,no,0.009183296276754089,yes,0.9855574297511958,yes,0.9847107336558619,yes,0.9862412290374329
76,hibernate-distribution-3.3.2.GA,DESIGN,"/**
     * FIXME Per the RegionFactory class Javadoc, this constructor version
     * should not be necessary.
     * 
     * @param props The configuration properties
     */",yes,undetermined,0,0,0,yes,0.9666546400717521,yes,0.9855629495379596,yes,0.9847072635560202,yes,0.9861994517130404
77,hibernate-distribution-3.3.2.GA,DESIGN,//Icky workaround for MySQL bug:,yes,undetermined,0,0,0,yes,0.9564252646696138,yes,0.9855323241119198,yes,0.984695178229564,yes,0.9862201392392465
78,hibernate-distribution-3.3.2.GA,DESIGN,// we have to set up the table later!! yuck,yes,undetermined,0,0,0,no,0.01066836465807447,yes,0.9855529991774055,yes,0.9847442953719747,yes,0.9862100377910578
79,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: Somehow add the newly created foreign keys to the internal collection,yes,undetermined,0,0,0,yes,0.8958717721768285,yes,0.8482695106157999,yes,0.8529817582393954,yes,0.8625196765954256
80,hibernate-distribution-3.3.2.GA,DESIGN,// This inner class implements a case statement....perhaps im being a bit over-clever here,yes,undetermined,0,0,0,no,0.09867146324506203,yes,0.9855391151128118,yes,0.9847178422430876,yes,0.9862013223466279
81,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: merge into one method!,yes,undetermined,0,0,0,yes,0.995749438565748,yes,0.9955678053090461,yes,0.9952745373973895,yes,0.9958225585173973
82,hibernate-distribution-3.3.2.GA,DESIGN,// TODO: this is a bit of copy/paste from IndexedCollection.createPrimaryKey(),yes,undetermined,0,0,0,yes,0.9999942733929603,yes,0.9999974680419546,yes,0.9999971599045936,yes,0.9999978926835454
83,hibernate-distribution-3.3.2.GA,DESIGN,// TODO: what type?,yes,undetermined,0,0,0,yes,0.9969954110675451,yes,0.997214468239053,yes,0.9999989497239233,yes,0.9999992333037374
84,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: inefficient,yes,undetermined,0,0,0,yes,0.9770088088111489,yes,0.9855491007414985,yes,0.985322496838276,yes,0.986719887222844
85,hibernate-distribution-3.3.2.GA,DESIGN,//FIXME: get the PersistentClass,yes,undetermined,0,0,0,no,0.013223813795606271,yes,0.9855631682045901,yes,0.9847315290107628,yes,0.9862330597555877
86,hibernate-distribution-3.3.2.GA,DESIGN,// todo : we can remove this once the deprecated ctor can be made private...,yes,undetermined,0,0,0,yes,0.9539504040994041,yes,0.9855454975363751,yes,0.98471533776904,yes,0.9861955357291788
87,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: this is too conservative; if all preceding joins were  //      also inner joins, we could use an inner join here",yes,undetermined,0,0,0,yes,0.8207699132896519,yes,0.7856782055524216,yes,0.7798261150243634,yes,0.7899996295866262
88,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: redesign how PropertyAccessors are acquired...,yes,undetermined,0,0,0,no,0.01325037645668776,no,0.014260932248424719,no,0.013765265067302008,no,0.013323255765510592
89,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : not so sure this is needed...,yes,undetermined,0,0,0,yes,0.9999999357275007,yes,0.9999999011888092,yes,0.9999998861011422,yes,0.9999999198698439
90,hibernate-distribution-3.3.2.GA,DESIGN,// todo : we can remove this once the deprecated ctor can be made private...,yes,undetermined,0,0,0,yes,0.9539504040994041,yes,0.9855454975363751,yes,0.98471533776904,yes,0.9861955357291788
91,hibernate-distribution-3.3.2.GA,DESIGN,//create an index on the key columns??,yes,undetermined,0,0,0,no,0.0006352295309473116,yes,0.9855400250038002,yes,0.9847111208079192,yes,0.9862129613091049
92,hibernate-distribution-3.3.2.GA,DESIGN,"/* TODO: joinKeyColumnName & foreignKeyColumnName should be called either here or at a
			 * slightly higer level in the stack (to get all the information we need)
			 * Right now HbmBinder does not support the
			 */",yes,undetermined,0,0,0,yes,0.9783980950785359,yes,0.9855480634491053,yes,0.9847099660733428,yes,0.98623489545144
93,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: improve this hack!,yes,undetermined,0,0,0,yes,0.99999999999963,yes,0.9999999999993043,yes,0.9999999999994033,yes,0.999999999999657
94,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: bad implementation, cos it depends upon ordering of mapping doc //      fixing this requires that Collection/PersistentClass gain access //      to the Mappings reference from Configuration (or the filterDefinitions //      map directly) sometime during Configuration.buildSessionFactory //      (after all the types/filter-defs are known and before building //      persisters).",yes,undetermined,0,0,0,yes,0.7539695487031393,yes,0.7802478922447974,yes,0.7660321945712809,yes,0.7755270201340327
95,hibernate-distribution-3.3.2.GA,DESIGN,//use of trim() here is ugly?,yes,undetermined,0,0,0,yes,0.6575770406488098,yes,0.8825517170185502,yes,0.8794925942748663,yes,0.8865674561290237
96,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: ideally we need the construction of PropertyAccessor to take the following: //      1) EntityMode //      2) EntityMode-specific data (i.e., the classname for pojo entities) //      3) Property-specific data based on the EntityMode (i.e., property-name or dom4j-node-name) // The easiest way, with the introduction of the new runtime-metamodel classes, would be the // the following predicates: //      1) PropertyAccessorFactory.getPropertyAccessor() takes references to both a //          org.hibernate.metadata.EntityModeMetadata and org.hibernate.metadata.Property //      2) What is now termed a ""PropertyAccessor"" stores any values needed from those two //          pieces of information //      3) Code can then simply call PropertyAccess.getGetter() with no parameters; likewise with //          PropertyAccessor.getSetter()",yes,undetermined,0,0,0,yes,0.7071883893129177,yes,0.7200614389961464,yes,0.7104356699579398,yes,0.7189148766652701
97,hibernate-distribution-3.3.2.GA,DESIGN,// can happen because of the multiple ways Cache.remove() // can be invoked :(,yes,undetermined,0,0,0,no,0.00953491420959036,yes,0.985528714997108,yes,0.9847096650003606,yes,0.9862213223673161
98,hibernate-distribution-3.3.2.GA,DESIGN,//ick!,yes,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
99,hibernate-distribution-3.3.2.GA,DESIGN,// todo : we can remove this once the deprecated ctor can be made private...,yes,undetermined,0,0,0,yes,0.9539504040994041,yes,0.9855454975363751,yes,0.98471533776904,yes,0.9861955357291788
100,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO: this is very suboptimal for some subclasses (namely components), // since it does not take advantage of two-phase-load",yes,undetermined,0,0,0,yes,0.9426738219019272,yes,0.9855727585365998,yes,0.984719120796586,yes,0.986215280731942
101,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: should this be Session.instantiate(Persister, ...)?",yes,undetermined,0,0,0,yes,0.9543933922689491,yes,0.9855540946672808,yes,0.9846944496929484,yes,0.9861917696489328
102,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: suck this into initLaziness!,yes,undetermined,0,0,0,no,0.01325037645668776,no,0.014260932248424719,no,0.013765265067302008,no,0.013323255765510592
103,hibernate-distribution-3.3.2.GA,DESIGN,// todo : we can remove this once the deprecated ctor can be made private...,yes,undetermined,0,0,0,yes,0.9539504040994041,yes,0.9855454975363751,yes,0.98471533776904,yes,0.9861955357291788
104,hibernate-distribution-3.3.2.GA,DESIGN,"// 'hibernate.temp.use_jdbc_metadata_defaults' is a temporary magic value. // The need for it is intended to be alleviated with future developement, thus it is // not defined as an Environment constant... // // it is used to control whether we should consult the JDBC metadata to determine // certain Settings default values; it is useful to *not* do this when the database // may not be available (mainly in tools usage).",yes,undetermined,0,0,0,no,0.10928954736646025,no,0.113239265222433,no,0.10703131644779783,no,0.1078936051923249
105,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: is this right??,yes,undetermined,0,0,0,yes,0.9999960343717771,yes,0.9999920344710613,yes,0.9999902316803498,yes,0.9999926107374797
106,hibernate-distribution-3.3.2.GA,DESIGN,//ie. the subquery! yuck!,yes,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
107,hibernate-distribution-3.3.2.GA,DESIGN,//use of a stringbuffer to workaround a JDK bug,yes,undetermined,0,0,0,yes,0.9969394481405263,yes,0.9965842324721327,yes,0.9963498584590662,yes,0.996792302340769
108,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: copy/paste from recreate(),yes,undetermined,0,0,0,yes,0.9859544639058415,yes,0.9877125437041463,yes,0.9871915273708685,yes,0.9884619559315619
109,hibernate-distribution-3.3.2.GA,DESIGN,"//workaround, for backward compatibility of sets with no //not-null columns, assume all columns are used in the //row locator SQL",yes,undetermined,0,0,0,no,0.07994812770970326,yes,0.9855389829184951,yes,0.9847121476529449,yes,0.9861945457877312
110,hibernate-distribution-3.3.2.GA,DESIGN,// todo : this eventually needs to be removed,yes,undetermined,0,0,0,yes,0.9965777901219,yes,0.985540959676479,yes,0.984741516697011,yes,0.9862255766890333
111,hibernate-distribution-3.3.2.GA,DESIGN,// todo : remove,yes,undetermined,0,0,0,yes,0.9999977045855795,yes,0.999998617550573,yes,0.9999981845588258,yes,0.9999986609139979
112,hibernate-distribution-3.3.2.GA,DESIGN,"//just to help out during the load (ugly, i know)",yes,undetermined,0,0,0,yes,0.5668357694174011,yes,0.6887259265020172,yes,0.6786640157131114,yes,0.6898503411430053
113,hibernate-distribution-3.3.2.GA,DESIGN,// hack/workaround as sqlquery impl depend on having a key.,yes,undetermined,0,0,0,yes,0.9964446506913321,yes,0.9965282051528336,yes,0.9962968816105057,yes,0.9967050698023533
114,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: handle the case of a foreign key to something other than the pk,yes,undetermined,0,0,0,yes,0.7271741477850465,yes,0.6814910837704334,yes,0.674360585020093,yes,0.6867930555718154
115,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: assumes all collections disassemble to an array!,yes,undetermined,0,0,0,yes,0.7452215722836314,yes,0.6485050910371597,yes,0.6579086285434971,yes,0.6712245370551596
116,hibernate-distribution-3.3.2.GA,DESIGN,// todo : would love to have this work on a notification basis //    where the successful binding of an entity/subclass would //    emit a notification which the extendsQueue entries could //    react to...,yes,undetermined,0,0,0,yes,0.7410476548736926,yes,0.7268835316787464,yes,0.7227650832229846,yes,0.7352275163571362
117,hibernate-distribution-3.3.2.GA,DESIGN,// TODO: is it really neceassry to provide Configuration to CollectionPersisters ? Should it not be enough with associated class ? // or why does EntityPersister's not get access to configuration ? // // The only reason I could see that Configuration gets passed to collection persisters // is so that they can look up the dom4j node name of the entity element in case // no explicit node name was applied at the collection element level.  Are you kidding me? // Trivial to fix then.  Just store and expose the node name on the entity persister // (which the collection persister looks up anyway via other means...).,yes,undetermined,0,0,0,yes,0.5528459732493783,no,0.48265503336340965,no,0.45471082807611185,no,0.4629621326686548
118,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: deprecated, remove eventually",yes,undetermined,0,0,0,yes,0.9949716455285743,yes,0.9855704179804105,yes,0.9847309276799354,yes,0.9862222049361795
119,hibernate-distribution-3.3.2.GA,DESIGN,//TODO possibly relax that,yes,undetermined,0,0,0,yes,0.9889238569884683,yes,0.9855270115044995,yes,0.9846904191473013,yes,0.9862153104163749
120,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO : this is a bit dodgy, come up with a better way to check this (plus see above comment)",yes,undetermined,0,0,0,yes,0.9940294958952521,yes,0.9951227404704842,yes,0.9932616645670971,yes,0.9938885553753292
121,hibernate-distribution-3.3.2.GA,DESIGN,//use a degenerated strategy for backward compatibility,yes,undetermined,0,0,0,no,0.010316217725720077,yes,0.9855346214680317,yes,0.9847392267675331,yes,0.9862022171234885
122,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: this is temporary in that the end result will probably not take a Property reference per-se.,yes,undetermined,0,0,0,yes,0.9999949978314664,yes,0.9999837067698288,yes,0.9999875225821265,yes,0.9999905249201819
123,hibernate-distribution-3.3.2.GA,DESIGN,// todo : better to handle dynamic filters through implicit DynamicFilterParameterSpecification // see the discussion there in DynamicFilterParameterSpecification's javadocs as to why // it is currently not done that way.,yes,undetermined,0,0,0,yes,0.9850964134692354,yes,0.9880950125793304,yes,0.9871063913567906,yes,0.9883881466223731
124,hibernate-distribution-3.3.2.GA,DESIGN,// get the right object from the list ... would it be easier to just call getEntity() ??,yes,undetermined,0,0,0,no,0.02355180695481415,yes,0.9855276717699114,yes,0.9847220315474841,yes,0.9862314679997831
125,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO: should ""record"" how many properties we have reffered to - and if we  //       don't get'em'all we throw an exception! Way better than trial and error ;)",yes,undetermined,0,0,0,yes,0.9825389411827408,yes,0.9855183135654432,yes,0.984716139428713,yes,0.986195107682911
126,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: this dependency is kinda Bad,yes,undetermined,0,0,0,yes,0.9999893346063708,yes,0.9999828434246892,yes,0.9974685486808981,yes,0.9999852173664884
127,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: get SQL rendering out of this package!,yes,undetermined,0,0,0,yes,0.9878673274071157,yes,0.9890309028055195,yes,0.9884373939714607,yes,0.9896625072633355
128,hibernate-distribution-3.3.2.GA,DESIGN,// why does this matter?,yes,undetermined,0,0,0,no,0.04728890118680533,yes,0.9855519464267488,yes,0.9846967393370971,yes,0.9862092100704666
129,hibernate-distribution-3.3.2.GA,DESIGN,"// important, to account for newly saved entities in query // todo : some kind of check for new status...",yes,undetermined,0,0,0,yes,0.9512663859483259,yes,0.9855700667334292,yes,0.9847122140584216,yes,0.9862246953186038
130,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: get SQL rendering out of this package!,yes,undetermined,0,0,0,yes,0.9878673274071157,yes,0.9890309028055195,yes,0.9884373939714607,yes,0.9896625072633355
131,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: can we *always* use the ""null property"" approach for everything?",yes,undetermined,0,0,0,yes,0.9886923076947712,yes,0.9926860894859668,yes,0.9922772225120589,yes,0.9930992125920799
132,hibernate-distribution-3.3.2.GA,DESIGN,"// does this need holdlock also? : return tableName + "" with (updlock, rowlock, holdlock)"";",yes,undetermined,0,0,0,no,0.03233528781915028,yes,0.9855303269666915,yes,0.9847085101660071,yes,0.9862332620793637
133,hibernate-distribution-3.3.2.GA,DESIGN,"//for sets, we should end the collection load after resolving //the entities, since we might call hashCode() on the elements //TODO: or we could do this polymorphically, and have two //      different operations implemented differently for arrays",yes,undetermined,0,0,0,yes,0.9077433747844456,yes,0.9855249644378485,yes,0.9847110239867027,yes,0.9862321369811964
134,hibernate-distribution-3.3.2.GA,DESIGN,// todo : remove this and just have subclasses use Isolater/IsolatedWork directly...,yes,undetermined,0,0,0,yes,0.9791025061062026,yes,0.9855567374918303,yes,0.9847178503785237,yes,0.9862118073611355
135,hibernate-distribution-3.3.2.GA,DESIGN,"// sql-server, at least needed this dropped after use; strange!",yes,undetermined,0,0,0,no,0.015077881123614585,yes,0.9855302897527272,yes,0.9847092890009016,yes,0.986211357125423
136,hibernate-distribution-3.3.2.GA,DESIGN,// is it necessary to register %exact since it can only appear in a where clause?,yes,undetermined,0,0,0,no,0.019781841253039768,yes,0.9855648175064704,yes,0.9847019141588751,yes,0.9862000329580987
137,hibernate-distribution-3.3.2.GA,DESIGN,"//for arrays, we should end the collection load before resolving //the entities, since the actual array instances are not instantiated //during loading //TODO: or we could do this polymorphically, and have two //      different operations implemented differently for arrays",yes,undetermined,0,0,0,yes,0.7720670416076156,yes,0.8454817946756484,yes,0.8337784201737469,yes,0.844664254521041
138,hibernate-distribution-3.3.2.GA,DESIGN,// Does this dialect support the ALTER TABLE syntax?,yes,undetermined,0,0,0,no,0.028059863581156617,yes,0.9855488672720351,yes,0.9847324124379098,yes,0.9862259274101022
139,hibernate-distribution-3.3.2.GA,DESIGN,"// This next bit is to allow for both unsaved-value=""negative"" // and for ""older"" behavior where version number did not get // seeded if it was already set in the object // TODO: shift it into unsaved-value strategy",yes,undetermined,0,0,0,no,0.5,no,0.48709921113111615,no,0.4776405492374573,no,0.4885575449574165
140,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: reenable if we also fix the above todo,yes,undetermined,0,0,0,yes,0.9999899960208107,yes,0.9999851059604243,yes,0.9999811308131917,yes,0.9999855291326246
141,hibernate-distribution-3.3.2.GA,DESIGN,// orphans should not be deleted during copy??,yes,undetermined,0,0,0,no,0.0040124797368969334,yes,0.9855305944620428,yes,0.9846995976467859,yes,0.9862251793326446
142,hibernate-distribution-3.3.2.GA,DESIGN,// orphans should not be deleted during merge??,yes,undetermined,0,0,0,no,0.007452583127226173,yes,0.9855416000445529,yes,0.9847046309093103,yes,0.9862137975543995
143,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: suck this logic into the collection!,yes,undetermined,0,0,0,yes,0.9855688423524185,yes,0.9855164563744487,yes,0.9846893567207521,yes,0.9862117355460815
144,hibernate-distribution-3.3.2.GA,DESIGN,// todo : we can actually just determine this from the incoming EntityEntry-s,yes,undetermined,0,0,0,yes,0.9675291036728447,yes,0.9855545203841684,yes,0.9847477006915587,yes,0.9861944007922242
145,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: this bit actually has to be called after all cascades! //      but since identity insert is called *synchronously*, //      instead of asynchronously as other actions, it isn't",yes,undetermined,0,0,0,yes,0.9059802405403237,yes,0.9855447140521902,yes,0.984696816833468,yes,0.9862108912701864
146,hibernate-distribution-3.3.2.GA,DESIGN,// this class has no proxies (so do a shortcut),yes,undetermined,0,0,0,no,0.009128814621390743,yes,0.9855740266236889,yes,0.9847185716555164,yes,0.9862166095114928
147,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: Should this be an InitializeEntityEventListener??? (watch out for performance!),yes,undetermined,0,0,0,yes,0.9950351199273462,yes,0.9999950947064306,yes,0.9999948617282476,yes,0.9999961446334789
148,hibernate-distribution-3.3.2.GA,DESIGN,"// todo : need map? the prob is a proper key, right?",yes,undetermined,0,0,0,yes,0.9897665260829407,yes,0.9934653433394779,yes,0.9930350783202894,yes,0.9936710377488179
149,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: better to pass the id in as an argument?,yes,undetermined,0,0,0,yes,0.9913291927417954,yes,0.9897878931603914,yes,0.9893079174884151,yes,0.9904534817585674
150,hibernate-distribution-3.3.2.GA,DESIGN,//do we even really need this? the update will fail anyway....,yes,undetermined,0,0,0,no,0.05455721470834353,yes,0.9855620222149306,yes,0.9847265546605783,yes,0.9862255981313813
151,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: would it be better to do a refresh from db?,yes,undetermined,0,0,0,yes,0.9919097320494323,yes,0.99078338750604,yes,0.990413525167365,yes,0.9914414504899741
152,hibernate-distribution-3.3.2.GA,DESIGN,"/**
	 * This form used from annotations (?).  Essentially the same as the above using a
	 * resultset-mapping reference, but without cacheMode, readOnly, and comment.
	 *
	 * FIXME: annotations do not use it, so it can be remove from my POV
	 * @deprecated
	 *
	 *
	 * @param query The sql query string
	 * @param resultSetRef The result-set-mapping name
	 * @param querySpaces Any specified query spaces (used for auto-flushing)
	 * @param cacheable Whether the query results are cacheable
	 * @param cacheRegion If cacheable, the region into which to store the results
	 * @param timeout A JDBC-level timeout to be applied
	 * @param fetchSize A JDBC-level fetch-size to be applied
	 * @param flushMode The flush mode to use for this query
	 * @param parameterTypes parameter type map
	 * @param callable Does the query string represent a callable object (i.e., proc)
	 */",yes,undetermined,0,0,0,yes,0.6985776750637258,yes,0.5599807744425954,yes,0.5161802554815016,yes,0.5213561113779286
153,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: ugly here:,yes,undetermined,0,0,0,yes,0.9999999999861982,yes,0.9999999999712386,yes,0.9999999999708561,yes,0.9999999999821408
154,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: not quite sure about the full implications of this!,yes,undetermined,0,0,0,yes,0.996242681855195,yes,0.9999957059543798,yes,0.9999951886161772,yes,0.9999963634361114
155,hibernate-distribution-3.3.2.GA,DESIGN,// this only works because collection entries are kept in a sequenced // map by persistence context (maybe we should do like entities and // keep a separate sequences set...) //TODO: calling entrySet on an IdentityMap is SLOW!!,yes,undetermined,0,0,0,yes,0.9045024345196372,yes,0.9855200959269537,yes,0.9847046446213025,yes,0.9862184163474627
156,hibernate-distribution-3.3.2.GA,DESIGN,"// todo : i'd much rather have this done from #endLoadingCollection(CollectionPersister,LoadingCollectionEntry)...",yes,undetermined,0,0,0,no,0.01325037645668776,no,0.014260932248424719,no,0.013765265067302008,no,0.013323255765510592
157,hibernate-distribution-3.3.2.GA,DESIGN,"// todo : hack!!! // NOTE : here we cleanup the load context when we have no more local // LCE entries.  This ""works"" for the time being because really // only the collection load contexts are implemented.  Long term, // this cleanup should become part of the ""close result set"" // processing from the (sandbox/jdbc) jdbc-container code.",yes,undetermined,0,0,0,yes,0.9799377548333917,yes,0.9855502919212833,yes,0.9847319161873219,yes,0.9862288288438065
158,hibernate-distribution-3.3.2.GA,DESIGN,// todo : add the notion of enabled filters to the CacheKey to differentiate filtered collections from non-filtered; //      but CacheKey is currently used for both collections and entities; would ideally need to define two seperate ones; //      currently this works in conjuction with the check on //      DefaultInitializeCollectionEventHandler.initializeCollectionFromCache() (which makes sure to not read from //      cache with enabled filters). // EARLY EXIT!!!!!,yes,undetermined,0,0,0,no,0.3059001719980221,no,0.290297720993543,no,0.28431584514321934,no,0.28884126573200464
159,hibernate-distribution-3.3.2.GA,DESIGN,//PostLoad is needed for EJB3 //TODO: reuse the PostLoadEvent...,yes,undetermined,0,0,0,yes,0.9955437816461316,yes,0.9999876233703255,yes,0.9999859142674663,yes,0.9999892629422661
160,hibernate-distribution-3.3.2.GA,DESIGN,// todo : should we check the current isolation mode explicitly?,yes,undetermined,0,0,0,yes,0.9908967409087607,yes,0.9855289114590564,yes,0.9847302188268313,yes,0.9862412888821211
161,hibernate-distribution-3.3.2.GA,DESIGN,// brand new collection //TODO: or an array!! we can't lock objects with arrays now??,yes,undetermined,0,0,0,yes,0.9091267817732147,yes,0.9855513532698849,yes,0.9847243979210578,yes,0.9862024406246658
162,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO: iteratively get transient entities and retry merge until one of the following conditions: //       1) transientCopyCache.size() == 0 //       2) transientCopyCache.size() is not decreasing and copyCache.size() is not increasing // TODO: find out if retrying can add entities to copyCache (don't think it can...) // For now, just retry once; throw TransientObjectException if there are still any transient entities",yes,undetermined,0,0,0,yes,0.9122856529261134,yes,0.9855494666796887,yes,0.984742769574157,yes,0.9862111974771111
163,hibernate-distribution-3.3.2.GA,DESIGN,"// null or brand new collection // this will also (inefficiently) handle arrays, which have // no snapshot, so we can't do any better",yes,undetermined,0,0,0,no,0.08386198772185653,yes,0.9855545270048267,yes,0.9847353791132449,yes,0.986227547118927
164,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : perhaps we should additionally require that the incoming entity // version be equivalent to the defined unsaved-value?,yes,undetermined,0,0,0,yes,0.6385244669287822,yes,0.5122550436568007,yes,0.5,yes,0.516757155558793
165,hibernate-distribution-3.3.2.GA,DESIGN,"/**
 * Provides query splitting methods, which were originally in QueryTranslator.
 * <br>
 * TODO: This will need to be refactored at some point.
 *
 * @author josh
 */",yes,undetermined,0,0,0,yes,0.9482514927009519,yes,0.9855415627584417,yes,0.984727188209979,yes,0.9862185855845765
166,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : most of below was taken verbatim from DotNode; should either delegate this logic or super-type it,yes,undetermined,0,0,0,yes,0.9613631755052139,yes,0.985565712737369,yes,0.9846963025050722,yes,0.9862152020153814
167,hibernate-distribution-3.3.2.GA,DESIGN,"// todo : currently expects that the individual with expressions apply to the same sql table join. //      This may not be the case for joined-subclass where the property values //      might be coming from different tables in the joined hierarchy.  At some //      point we should expand this to support that capability.  However, that has //      some difficulties: //          1) the biggest is how to handle ORs when the individual comparisons are //              linked to different sql joins. //          2) here we would need to track each comparison individually, along with //              the join alias to which it applies and then pass that information //              back to the FromElement so it can pass it along to the JoinSequence",yes,undetermined,0,0,0,no,0.27732830238725426,no,0.23878787047908215,no,0.23114421381218558,no,0.2364438699670563
168,hibernate-distribution-3.3.2.GA,DESIGN,"// No explicit select expression; render the id and properties // projection lists for every persister in the from clause into // a single 'token node'. //TODO: the only reason we need this stuff now is collection filters, //      we should get rid of derived select clause completely!",yes,undetermined,0,0,0,yes,0.7476869425693842,yes,0.64550183913863,yes,0.6194013597388794,yes,0.6324322107888823
169,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : better way?!?,yes,undetermined,0,0,0,yes,0.9999999880934776,yes,0.9999999843216375,yes,0.9999999818620143,yes,0.9999999876368929
170,hibernate-distribution-3.3.2.GA,DESIGN,"/////////////////////////////////////////////////////////////////////// // HACK ALERT !!!!!!!!!!!!!!!!!!!!!!!!!!!! // Attempt to work around ""ghost"" ImpliedFromElements that occasionally // show up between the actual things being joined.  This consistently // occurs from index nodes (at least against many-to-many).  Not sure // if there are other conditions // // Essentially, look-ahead to the next FromElement that actually // writes something to the SQL",yes,undetermined,0,0,0,yes,0.6877989607613493,yes,0.6778988588492459,yes,0.6629209084094178,yes,0.6706382815547716
171,hibernate-distribution-3.3.2.GA,DESIGN,// Not possible to simply re-use the versionPropertyNode here as it causes // OOM errors due to circularity :(,yes,undetermined,0,0,0,no,0.07371555685732442,yes,0.9855386838338038,yes,0.9847339925531413,yes,0.986208210999475
172,hibernate-distribution-3.3.2.GA,DESIGN,"// this function has a template -> restore output, apply the template and write the result out // TODO: Downcast to avoid using an interface?  Yuck.",yes,undetermined,0,0,0,no,0.33850072962154915,no,0.3479337013571607,no,0.3551707874839548,no,0.3623315962407807
173,hibernate-distribution-3.3.2.GA,DESIGN,"// at some point the generate phase needs to be moved out of here, // because a single object-level DML might spawn multiple SQL DML // command executions. // // Possible to just move the sql generation for dml stuff, but for // consistency-sake probably best to just move responsiblity for // the generation phase completely into the delegates // (QueryLoader/StatementExecutor) themselves.  Also, not sure why // QueryLoader currently even has a dependency on this at all; does // it need it?  Ideally like to see the walker itself given to the delegates directly...",yes,undetermined,0,0,0,yes,0.6437967912171506,yes,0.5557954220572455,yes,0.5420896811215647,yes,0.5496296042651334
174,hibernate-distribution-3.3.2.GA,DESIGN,//TODO:this is only needed during compilation .. can we eliminate the instvar?,yes,undetermined,0,0,0,yes,0.9947720929840703,yes,0.9916906723205628,yes,0.9913789891390556,yes,0.99232198775903
175,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : absolutely no usages of this constructor form; can it go away?,yes,undetermined,0,0,0,yes,0.9785931215469572,yes,0.990513932819536,yes,0.9899290525766998,yes,0.9910292467672932
176,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: is this a bit ugly?,yes,undetermined,0,0,0,yes,0.9999999994536625,yes,0.9999999994584226,yes,0.9999999994332728,yes,0.9999999996355481
177,hibernate-distribution-3.3.2.GA,DESIGN,"// even here, if only properties mapped to the ""base table"" are referenced // in the set and where clauses, this could be handled by the BasicDelegate. // TODO : decide if it is better performance-wise to perform that check, or to simply use the MultiTableUpdateDelegate",yes,undetermined,0,0,0,yes,0.8983443082492055,yes,0.9149677331939096,yes,0.9847239968937371,yes,0.9862246292880263
178,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : remove these last two as batcher is no longer managing connections,yes,undetermined,0,0,0,yes,0.9751918355006223,yes,0.9855313232417383,yes,0.9847194941326494,yes,0.986206570074255
179,hibernate-distribution-3.3.2.GA,DESIGN,"// VERY IMPORTANT!!!! - This class needs to be free of any static references // to any CGLIB or Javassist classes.  Otherwise, users will always need both // on their classpaths no matter which (if either) they use. // // Another option here would be to remove the Hibernate.isPropertyInitialized() // method and have the users go through the SessionFactory to get this information.",yes,undetermined,0,0,0,no,0.1436503969440365,no,0.1972858087045476,no,0.1933507264950199,no,0.19694434636418676
180,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO : we really need to be able to deal with component paths here also; // this is difficult because the hql-sql grammar expects all those node types // to be FromReferenceNodes.  One potential fix here would be to convert the // IntoClause to just use a FromClause/FromElement combo (as a child of the // InsertStatement) and move all this logic into the InsertStatement.  That's // probably the easiest approach (read: least amount of changes to the grammar // and code), but just doesn't feel right as then an insert would contain // 2 from-clauses",yes,undetermined,0,0,0,yes,0.8624321890568908,yes,0.897700192378694,yes,0.8979644141791993,yes,0.9013075744400628
181,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO : an optimization here would be to consider cascade deletes and not gen those delete statements; //      the difficulty is the ordering of the tables here vs the cascade attributes on the persisters -> //          the table info gotten here should really be self-contained (i.e., a class representation //          defining all the needed attributes), then we could then get an array of those",yes,undetermined,0,0,0,yes,0.7224792289807261,yes,0.733380209344126,yes,0.7394750084657762,yes,0.7503190405066976
182,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: switch statements are always evil! We already had bugs because  //      of forgotten token types. Use polymorphism for this!,yes,undetermined,0,0,0,yes,0.9374704224418957,yes,0.9855588730815785,yes,0.9847287478599349,yes,0.9862336308830016
183,hibernate-distribution-3.3.2.GA,DESIGN,// really there are two situations where it should be ok to allow the insertion // into properties defined on a superclass: //      1) union-subclass with an abstract root entity //      2) discrim-subclass // // #1 is handled already because of the fact that // UnionSubclassPersister alreay always returns 0 // for this call... // // we may want to disallow it for discrim-subclass just for // consistency-sake (currently does not work anyway)...,yes,undetermined,0,0,0,no,0.4139061392180652,no,0.21852067345534015,no,0.2197479519680291,no,0.22476208224911914
184,hibernate-distribution-3.3.2.GA,DESIGN,// implicit joins are always(?) ok to reuse,yes,undetermined,0,0,0,no,0.005020680112465743,yes,0.985559502798223,yes,0.984734689712173,yes,0.9862113136381199
185,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: used to be exprNoParens! was this needed?,yes,undetermined,0,0,0,yes,0.999999981129883,yes,0.9999999752159516,yes,0.9999999700022999,yes,0.9999999775859915
186,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : we may also want to check that the types here map to exactly one column/JDBC-type //      can't think of a situation where arithmetic expression between multi-column mappings //      makes any sense.,yes,undetermined,0,0,0,yes,0.9359203704844695,yes,0.985560594182415,yes,0.98471870497537,yes,0.9862107405303651
187,hibernate-distribution-3.3.2.GA,DESIGN,// we do not know either type //BLIND GUESS!,yes,undetermined,0,0,0,no,0.05950951406232899,yes,0.985531369193953,yes,0.9846929307569415,yes,0.9861964795951678
188,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO: get SQL rendering out of here, create an AST for the join expressions. // Use the SQL generator grammar to generate the SQL text for the index expression.",yes,undetermined,0,0,0,no,0.4090052060860553,yes,0.5292714819839653,yes,0.526716252288328,yes,0.5390069948019999
189,hibernate-distribution-3.3.2.GA,DESIGN,"// We would probably refactor to have LogicParser (builds a tree of simple // expressions connected by and, or, not), ExpressionParser (translates // from OO terms like foo, foo.Bar, foo.Bar.Baz to SQL terms like // FOOS.ID, FOOS.BAR_ID, etc) and PathExpressionParser (which does much // the same thing it does now)",yes,undetermined,0,0,0,no,0.10233392597680945,no,0.13087434567803363,no,0.12466017473892393,no,0.12176144853340005
190,hibernate-distribution-3.3.2.GA,DESIGN,// short-circuit for performance...,yes,undetermined,0,0,0,no,0.005030803661506794,yes,0.9855260947634222,yes,0.9847090746691887,yes,0.9862148213231867
191,hibernate-distribution-3.3.2.GA,DESIGN,"// not absolutely necessary, but does help with aggressive release",yes,undetermined,0,0,0,no,0.006029015323198176,yes,0.9855330785134883,yes,0.9846866739200878,yes,0.9862104663206102
192,hibernate-distribution-3.3.2.GA,DESIGN,// try block is a hack around fact that currently tuplizers are not // given the opportunity to resolve a subclass entity name.  this // allows the (we assume custom) interceptor the ability to // influence this decision if we were not able to based on the // given entityName,yes,undetermined,0,0,0,yes,0.8730165580556886,yes,0.8180700012316555,yes,0.8084155490196955,yes,0.8188237275466188
193,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: this is one of the ugliest and most fragile pieces of code in Hibernate....,yes,undetermined,0,0,0,yes,0.9812638536571023,yes,0.9948970110665817,yes,0.9947109993432464,yes,0.9953412330172468
194,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: implement functionality //  this might be painful to do here, as the ""join post processing"" for //  the subquery has already been performed (meaning that for //  theta-join dialects, the join conditions have already been moved //  over to the where clause).  A ""simple"" solution here might to //  perform ""join post processing"" once for the entire query (including //  any subqueries) at one fell swoop",yes,undetermined,0,0,0,no,0.42313894565018256,no,0.3761931483711485,no,0.3691923106399365,no,0.3761865070225814
195,hibernate-distribution-3.3.2.GA,DESIGN,//yuck!,yes,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
196,hibernate-distribution-3.3.2.GA,DESIGN,"// ignore it; the incoming property could not be found so we // cannot be sure what to do here.  At the very least, the // safest is to simply not apply any dereference toggling...",yes,undetermined,0,0,0,no,0.013938119851228569,yes,0.9855313584824408,yes,0.9847401192479106,yes,0.986233543628765
197,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: make this a bit nicer,yes,undetermined,0,0,0,yes,0.9908949838911353,yes,0.9910412307953255,yes,0.9906318352074848,yes,0.9916164520929666
198,hibernate-distribution-3.3.2.GA,DESIGN,// yuck!,yes,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
199,hibernate-distribution-3.3.2.GA,DESIGN,// todo : potentially look at optimizing these two arrays,yes,undetermined,0,0,0,yes,0.7990427375401062,yes,0.8197737793929546,yes,0.8092072638998442,yes,0.8190994846579019
200,hibernate-distribution-3.3.2.GA,DESIGN,//note that i parameter is now unused (delete it?),yes,undetermined,0,0,0,no,0.323518333490091,no,0.292091801236845,no,0.2851207457754656,no,0.289076058305504
201,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO: Figure out a better way to get the FROM elements in a proper tree structure. // If this is not the destination of a many-to-many, add it as a child of the origin.",yes,undetermined,0,0,0,yes,0.9879997567553913,yes,0.9875811053465429,yes,0.98676169660783,yes,0.988188130497673
202,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : this constructor form is *only* used from constructor directly below us; can it go away?,yes,undetermined,0,0,0,yes,0.9370844416783898,yes,0.98553584463513,yes,0.9847343641650182,yes,0.9862400516049926
203,hibernate-distribution-3.3.2.GA,DESIGN,// todo : remove,yes,undetermined,0,0,0,yes,0.9999977045855795,yes,0.999998617550573,yes,0.9999981845588258,yes,0.9999986609139979
204,hibernate-distribution-3.3.2.GA,DESIGN,"// We should reengineer this class so that, rather than the current ad - // hoc linear approach to processing a stream of tokens, we instead // build up a tree of expressions.",yes,undetermined,0,0,0,no,0.01733335485746986,yes,0.985531881098292,yes,0.9847016766590159,yes,0.9862204708216734
205,hibernate-distribution-3.3.2.GA,DESIGN,"// todo : should this get moved to PersistentContext? // logically, is PersistentContext the ""thing"" to which an interceptor gets attached?",yes,undetermined,0,0,0,yes,0.9930614436624031,yes,0.9924766512935913,yes,0.9920671289935602,yes,0.992945090174041
206,hibernate-distribution-3.3.2.GA,DESIGN,// TODO: something much better - look at the type of the other expression! // TODO: Have comparisonExpression and/or arithmeticExpression rules complete the resolution of boolean nodes.,yes,undetermined,0,0,0,yes,0.9922969813961868,yes,0.9909911623652137,yes,0.9916595487367539,yes,0.9924597970958638
207,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: this class does too many things! we need a different //kind of path expression parser for each of the diffferent //ways in which path expressions can occur,yes,undetermined,0,0,0,yes,0.9425391103590844,yes,0.9855708378612789,yes,0.9847283882348641,yes,0.9862239242605971
208,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: optimize this better!,yes,undetermined,0,0,0,yes,0.9999908200299062,yes,0.9999858872803209,yes,0.9999839818072986,yes,0.9999879275013325
209,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: should we allow suffixes on these ?,yes,undetermined,0,0,0,yes,0.9999969126009041,yes,0.9999931957819136,yes,0.9999918103585614,yes,0.999993836906773
210,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: is this really necessary????,yes,undetermined,0,0,0,yes,0.9878171202648479,yes,0.9999997386787224,yes,0.9999996966880764,yes,0.9999997834246606
211,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : not sure the best way to handle this. // The non-performant way :,yes,undetermined,0,0,0,yes,0.9999875136398387,yes,0.9999883689671153,yes,0.9999874181360568,yes,0.9999904233468638
212,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: is there a better way?,yes,undetermined,0,0,0,yes,0.9999999880934776,yes,0.9999999843216375,yes,0.9999999818620143,yes,0.9999999876368929
213,hibernate-distribution-3.3.2.GA,DESIGN,//The class is now way to complex!,yes,undetermined,0,0,0,no,0.029690768423602562,yes,0.9855511580252719,yes,0.9846921599833818,yes,0.9861997218747895
214,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : would be really nice to cache the spec on the query-def so as to not have to re-calc the hash; // currently not doable though because of the resultset-ref stuff...,yes,undetermined,0,0,0,yes,0.8252570108558641,yes,0.8227358775459177,yes,0.8264952756858265,yes,0.8351693843295153
215,hibernate-distribution-3.3.2.GA,DESIGN,//name from a super query (a bit inelegant that it shows up here),yes,undetermined,0,0,0,no,0.04731704910211301,yes,0.9855436783692985,yes,0.9847311883230789,yes,0.9862206109456619
216,hibernate-distribution-3.3.2.GA,DESIGN,//real hacky... // used to count the nesting of parentheses,yes,undetermined,0,0,0,no,0.028375095566535155,yes,0.9855326853405404,yes,0.9847131048276512,yes,0.9862178792806232
217,hibernate-distribution-3.3.2.GA,DESIGN,// todo : we can remove this once the deprecated ctor can be made private...,yes,undetermined,0,0,0,yes,0.9539504040994041,yes,0.9855454975363751,yes,0.98471533776904,yes,0.9861955357291788
218,hibernate-distribution-3.3.2.GA,DESIGN,"//put() has nowait semantics, is this really appropriate? //note that it needs to be async replication, never local or sync",yes,undetermined,0,0,0,no,0.5,yes,0.552641957680037,yes,0.5505895260017268,yes,0.5581415706919316
219,hibernate-distribution-3.3.2.GA,DESIGN,"// ugly hack for cases like ""elements(foo.bar.collection)"" // (multi-part path expression ending in elements or indices)",yes,undetermined,0,0,0,yes,0.9838937157870279,yes,0.9855626107867089,yes,0.984690652111318,yes,0.9862296762448133
220,hibernate-distribution-3.3.2.GA,DESIGN,// FIXME Hacky workaround to JBCACHE-1202,yes,undetermined,0,0,0,yes,0.9999999999382712,yes,0.999999999994797,yes,0.9999999999938224,yes,0.9999999999963153
221,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: COPY/PASTE FROM SessionImpl, pull up!",yes,undetermined,0,0,0,yes,0.98835279978395,yes,0.9897044734611031,yes,0.9892457507248696,yes,0.9903275211458021
222,hibernate-distribution-3.3.2.GA,DESIGN,"// todo : need to find a clean way to handle the ""event source"" role // a seperate classs responsible for generating/dispatching events just duplicates most of the Session methods... // passing around seperate reto interceptor, factory, actionQueue, and persistentContext is not manageable...",yes,undetermined,0,0,0,yes,0.9749959148644497,yes,0.9855650224463448,yes,0.9847200285691643,yes,0.9862411731710258
223,hibernate-distribution-3.3.2.GA,DESIGN,//Must be done here because of side-effect! yuck...,yes,undetermined,0,0,0,no,0.01074179849043915,yes,0.9855444876743117,yes,0.9847024611412423,yes,0.9861992302653508
224,hibernate-distribution-3.3.2.GA,DESIGN,//We should actually rework this class to not implement Parser //and just process path expressions in the most convenient way.,yes,undetermined,0,0,0,no,0.18858999163481535,no,0.2740321993631439,no,0.26318857829309383,no,0.2639593567067711
225,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : should remove this exposure //  and have all references to the session's batcher use the ConnectionManager.,yes,undetermined,0,0,0,yes,0.9891747786360537,yes,0.9880838097268914,yes,0.9875168902819884,yes,0.9887944202158985
226,hibernate-distribution-3.3.2.GA,DESIGN,// we may be screwed here since the collection action is about to execute // and we do not know the final owner key value,yes,undetermined,0,0,0,no,0.0068657894478629175,yes,0.9855458144161193,yes,0.9847074424067026,yes,0.9861971027434311
227,hibernate-distribution-3.3.2.GA,DESIGN,"// Needed the ""clazz_"" check to work around union-subclasses // TODO : is there a way to tell whether a persister is truly discrim-column based inheritence?",yes,undetermined,0,0,0,yes,0.9896378120486282,yes,0.9855394822625481,yes,0.9847352874401142,yes,0.9862335281083887
228,hibernate-distribution-3.3.2.GA,DESIGN,//work around a bug in all known connection pools....,yes,undetermined,0,0,0,no,0.3708351902706039,no,0.3443546669706514,no,0.33048330539700765,no,0.3367548412305412
229,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: reuse the PreLoadEvent,yes,undetermined,0,0,0,yes,0.9868008719917083,yes,0.995403916240871,yes,0.995163413352313,yes,0.9957330134548181
230,hibernate-distribution-3.3.2.GA,DESIGN,// Need a better way to define the suffixes here...,yes,undetermined,0,0,0,yes,0.6874913635846399,yes,0.7180703846586954,yes,0.7065962516400581,yes,0.7181084368771119
231,hibernate-distribution-3.3.2.GA,DESIGN,//workaround for WebLogic,yes,undetermined,0,0,0,yes,0.784803325799234,yes,0.8082695837177789,yes,0.7939876424225772,yes,0.8037373984071761
232,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: temporary,yes,undetermined,0,0,0,yes,0.9999983327190805,yes,0.9999934364438844,yes,0.9999925229081722,yes,0.9999943960986872
233,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : YUCK!!!  fix after HHH-1907 is complete,yes,undetermined,0,0,0,yes,0.999982283911601,yes,0.9999842788776506,yes,0.9999824693221374,yes,0.9999868304698096
234,hibernate-distribution-3.3.2.GA,DESIGN,// would be great to move all this below here into another method that could also be used // from the new scrolling stuff. // // Would need to change the way the max-row stuff is handled (i.e. behind an interface) so // that I could do the control breaking at the means to know when to stop,yes,undetermined,0,0,0,no,0.26640316492390465,no,0.2779658562362489,no,0.2661533367335921,no,0.27136584779654205
235,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: the i==entitySpan-1 bit depends upon subclass implementation (very bad),yes,undetermined,0,0,0,yes,0.9970506562958038,yes,0.9974057919153473,yes,0.9974078258445376,yes,0.9999848230591778
236,hibernate-distribution-3.3.2.GA,DESIGN,"// some messy, complex stuff here, since createCriteria() can take an // aliased path, or a path rooted at the creating criteria instance",yes,undetermined,0,0,0,no,0.004565322093668713,yes,0.9855357173368406,yes,0.9846892944069195,yes,0.9862193845416312
237,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: add a CriteriaImplementor interface //      this class depends directly upon CriteriaImpl in the impl package...,yes,undetermined,0,0,0,yes,0.9427708169647045,yes,0.9855308223501589,yes,0.984713659513016,yes,0.9862376564374606
238,hibernate-distribution-3.3.2.GA,DESIGN,"// polymorphism not really handled completely correctly, // perhaps...well, actually its ok, assuming that the // entity name used in the lookup is the same as the // the one used here, which it will be",yes,undetermined,0,0,0,no,0.1840588985285756,no,0.1519373609042247,no,0.14656741262148087,no,0.14854353651828137
239,hibernate-distribution-3.3.2.GA,DESIGN,//This is not very nice (and quite slow):,yes,undetermined,0,0,0,no,0.05673017837516925,yes,0.9855502836638775,yes,0.9847341782997834,yes,0.9861962726458959
240,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: get SQL rendering out of here,yes,undetermined,0,0,0,yes,0.994131469013163,yes,0.9943382967997125,yes,0.9940456984730796,yes,0.9947331591617801
241,hibernate-distribution-3.3.2.GA,DESIGN,// meant to handle dynamic instantiation queries...(Copy from QueryLoader),yes,undetermined,0,0,0,no,0.002435704149891496,yes,0.9855509299443292,yes,0.9847296967331972,yes,0.9862135166846109
242,hibernate-distribution-3.3.2.GA,DESIGN,// Make sure this is a defined parameter and check the incoming value type // TODO: what should be the actual exception type here?,yes,undetermined,0,0,0,yes,0.7325069909372375,yes,0.7291364048888226,yes,0.7669027940014864,yes,0.7781912418177823
243,hibernate-distribution-3.3.2.GA,DESIGN,// worrying about proxies is perhaps a little bit of overkill here...,yes,undetermined,0,0,0,no,0.050582284164406896,yes,0.9855640561634195,yes,0.9847387427016563,yes,0.9862072636004205
244,hibernate-distribution-3.3.2.GA,DESIGN,// todo : throw exception?  maybe warn if not the same?,yes,undetermined,0,0,0,yes,0.9932164493012573,yes,0.995232829724165,yes,0.9948909795178776,yes,0.9953678354235856
245,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: make EntityPersister *not* depend on SessionFactoryImplementor //interface, if possible",yes,undetermined,0,0,0,yes,0.999992689173245,yes,0.99999115512804,yes,0.9999909756565651,yes,0.9999932043410873
246,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : what amount of significant digits need to be supported here? //      - from the DecimalFormat docs: //          [significant digits] = [minimum integer digits] + [maximum fraction digits],yes,undetermined,0,0,0,no,0.12918556599843734,no,0.12930431212326615,no,0.12354347792228744,no,0.12425031946427917
247,hibernate-distribution-3.3.2.GA,DESIGN,"//for backward compatibility, allow a set with no not-null  //element columns, using all columns in the row locater SQL //TODO: create an implicit not null constraint on all cols?",yes,undetermined,0,0,0,no,0.27801273725876136,yes,0.777997715572453,yes,0.7718178262873525,yes,0.7821818351559788
248,hibernate-distribution-3.3.2.GA,DESIGN,// todo : we can remove this once the deprecated ctor can be made private...,yes,undetermined,0,0,0,yes,0.9539504040994041,yes,0.9855454975363751,yes,0.98471533776904,yes,0.9861955357291788
249,hibernate-distribution-3.3.2.GA,DESIGN,// TODO: copy/paste from ManyToOneType,yes,undetermined,0,0,0,yes,0.9999978265579288,yes,0.9999982188685118,yes,0.9999979742775373,yes,0.9999985029882935
250,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: code duplication with SingleTableEntityPersister,yes,undetermined,0,0,0,yes,0.9885745615033109,yes,0.9855366464525311,yes,0.98471045573893,yes,0.9862076604936312
251,hibernate-distribution-3.3.2.GA,DESIGN,// todo : throw exception?,yes,undetermined,0,0,0,yes,0.9434143254091317,yes,0.9855535340086686,yes,0.9847359213339247,yes,0.9862330609369648
252,hibernate-distribution-3.3.2.GA,DESIGN,//should this interface extend PropertyMapping?,yes,undetermined,0,0,0,no,0.03453856934204461,yes,0.9855227690312843,yes,0.9847225731291543,yes,0.9862074890934838
253,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO: here is why we need to make bytecode provider global :( // TODO : again, fix this after HHH-1907 is complete",yes,undetermined,0,0,0,yes,0.9999985686079162,yes,0.999998556369649,yes,0.9999982973500832,yes,0.9999987640159161
254,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: currently keeps Getters and Setters (instead of PropertyAccessors) because of the way getGetter() and getSetter() are implemented currently; yuck!,yes,undetermined,0,0,0,yes,0.9841321032676198,yes,0.9855473753791101,yes,0.9846861574381893,yes,0.9861986855948164
255,hibernate-distribution-3.3.2.GA,DESIGN,// todo : we can remove this once the deprecated ctor can be made private...,yes,undetermined,0,0,0,yes,0.9539504040994041,yes,0.9855454975363751,yes,0.98471533776904,yes,0.9861955357291788
256,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: Yuck! This is not quite good enough, it's a quick //hack around the problem of having a to-one association //that refers to an embedded component:",yes,undetermined,0,0,0,yes,0.9967191696422809,yes,0.9966387643077192,yes,0.9964431251315573,yes,0.9968764104113232
257,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: implement caching?! proxies?!,yes,undetermined,0,0,0,yes,0.9905229413787637,yes,0.9999913163243205,yes,0.9999906420086289,yes,0.9999929356295238
258,hibernate-distribution-3.3.2.GA,DESIGN,// is this really necessary?,yes,undetermined,0,0,0,no,0.08285662045427268,yes,0.9855315356715815,yes,0.9846992333430566,yes,0.9862181014473076
259,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: this is a little inefficient, don't need to do a whole //      deep replaceElements() call",yes,undetermined,0,0,0,yes,0.947274161840427,yes,0.9855433943188787,yes,0.9847162481135886,yes,0.9862152782553959
260,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: this is a bit arbitrary, expose a switch to the user?",yes,undetermined,0,0,0,yes,0.9572202007929717,yes,0.9855458790017977,yes,0.9847213170729957,yes,0.9862022435901505
261,hibernate-distribution-3.3.2.GA,DESIGN,"/**
	 * @return collection removal
	 * FIXME: even if isInverse=""true""?
	 */",yes,undetermined,0,0,0,yes,0.9774166216010084,yes,0.9855386842127662,yes,0.9847002865977806,yes,0.986195335986742
262,hibernate-distribution-3.3.2.GA,DESIGN,// TODO: Fix this so it will work for non-POJO entity mode,yes,undetermined,0,0,0,yes,0.9999976727149215,yes,0.9999962472818306,yes,0.9999956967038327,yes,0.9999968373086501
263,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: move these to a new JoinableType abstract class, //extended by EntityType and PersistentCollectionType:",yes,undetermined,0,0,0,yes,0.9678197953296194,yes,0.9855344528954937,yes,0.9847154224308468,yes,0.9862128304728437
264,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: would be nice to handle proxy classes elegantly!,yes,undetermined,0,0,0,yes,0.9826729322508472,yes,0.9855362509115771,yes,0.9859827342045797,yes,0.9869932590969092
265,hibernate-distribution-3.3.2.GA,DESIGN,"//SPACES //TODO: i'm not sure, but perhaps we should exclude //      abstract denormalized tables?",yes,undetermined,0,0,0,yes,0.9417508159468649,yes,0.9855489664153974,yes,0.9847436937993435,yes,0.9862336271499015
266,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: is there a more elegant way than downcasting?,yes,undetermined,0,0,0,yes,0.9999965631690677,yes,0.9999958757795498,yes,0.9999952121314984,yes,0.9999964303117538
267,hibernate-distribution-3.3.2.GA,DESIGN,// todo : remove,yes,undetermined,0,0,0,yes,0.9999977045855795,yes,0.999998617550573,yes,0.9999981845588258,yes,0.9999986609139979
268,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: remove use of instanceof!,yes,undetermined,0,0,0,yes,0.9973323569045842,yes,0.9970749476147883,yes,0.9969178411703107,yes,0.9971975628601566
269,hibernate-distribution-3.3.2.GA,DESIGN,//create an index on the key columns??,yes,undetermined,0,0,0,no,0.0006352295309473116,yes,0.9855400250038002,yes,0.9847111208079192,yes,0.9862129613091049
270,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: make this a bit nicer,yes,undetermined,0,0,0,yes,0.9908949838911353,yes,0.9910412307953255,yes,0.9906318352074848,yes,0.9916164520929666
271,hibernate-distribution-3.3.2.GA,DESIGN,// todo : we can remove this once the deprecated ctor can be made private...,yes,undetermined,0,0,0,yes,0.9539504040994041,yes,0.9855454975363751,yes,0.98471533776904,yes,0.9861955357291788
272,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: perhaps this should be some other RuntimeException...,yes,undetermined,0,0,0,no,0.01325037645668776,no,0.014260932248424719,no,0.013765265067302008,no,0.013323255765510592
273,hibernate-distribution-3.3.2.GA,DESIGN,//Yuck:,yes,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
274,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: need some caching scheme? really comes down to decision  //      regarding amount of state (if any) kept on PropertyAccessors,yes,undetermined,0,0,0,yes,0.8901309983914077,yes,0.8934899791130525,yes,0.8911838301404074,yes,0.8981741818656976
275,hibernate-distribution-3.3.2.GA,DESIGN,// todo : this eventually needs to be removed,yes,undetermined,0,0,0,yes,0.9965777901219,yes,0.985540959676479,yes,0.984741516697011,yes,0.9862255766890333
276,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: design new lifecycle for ProxyFactory,yes,undetermined,0,0,0,yes,0.987361827898259,yes,0.9865727849474513,yes,0.9855760111915841,yes,0.9870145462257636
277,hibernate-distribution-3.3.2.GA,DESIGN,"// todo: we should really just collect these from the various SelectExpressions, rather than regenerating here",yes,undetermined,0,0,0,yes,0.911635257612854,yes,0.9855453284179008,yes,0.9846943015589914,yes,0.9862198075776516
278,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO: Should this really return null?  If not, figure out something better to do here.",yes,undetermined,0,0,0,yes,0.9999880104184092,yes,0.9999827988764216,yes,0.9974371998953168,yes,0.9999847630186697
279,hibernate-distribution-3.3.2.GA,DESIGN,// todo : should seriously consider not allowing a txn to begin from a child session //      can always route the request to the root session...,yes,undetermined,0,0,0,yes,0.7362870314257659,yes,0.7300616975690382,yes,0.723765947536405,yes,0.7357523033126638
280,hibernate-distribution-3.3.2.GA,DESIGN,"// should indicate that we are processing an INSERT/UPDATE/DELETE // query with a subquery implied via a collection property // function. Here, we need to use the table name itself as the // qualification alias. // TODO : verify this works for all databases... // TODO : is this also the case in non-""indexed"" scenarios?",yes,undetermined,0,0,0,yes,0.9881014582933273,yes,0.9916008593623956,yes,0.9898019913622637,yes,0.9908775302054762
281,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : this really needs to be delayed unitl after we definitively know all node types // where this is currently a problem is parameters for which where we cannot unequivocally // resolve an expected type,yes,undetermined,0,0,0,yes,0.994705021906492,yes,0.9912218655297371,yes,0.9907035625668011,yes,0.9917962575306412
282,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO : make this the factory for ""entity mode related"" sessions; // also means making this the target of transaction-synch and the // thing that knows how to cascade things between related sessions // // At that point, perhaps this thing is a ""SessionContext"", and // ConnectionManager is a ""JDBCContext""?  A ""SessionContext"" should // live in the impl package...",yes,undetermined,0,0,0,no,0.39015668330694364,no,0.3175212116168351,no,0.3135123393366112,no,0.3193774945010605
283,hibernate-distribution-3.3.2.GA,DESIGN,// create an index on the key columns??,yes,undetermined,0,0,0,no,0.0006352295309473116,yes,0.9855400250038002,yes,0.9847111208079192,yes,0.9862129613091049
284,hibernate-distribution-3.3.2.GA,DESIGN,//is this ok?,yes,undetermined,0,0,0,no,4.379622851773726e-05,no,0.014237335191371664,no,0.013765826512700741,no,0.013309654037017882
285,hibernate-distribution-3.3.2.GA,DESIGN,"//init the table here instead of earlier, so that we can get a quoted table name //TODO: would it be better to simply pass the qualified table name, instead of //      splitting it up into schema/catalog/table names",yes,undetermined,0,0,0,yes,0.5778200296602211,yes,0.5972933393646479,yes,0.601959680412901,yes,0.6145415582917455
286,hibernate-distribution-3.3.2.GA,DESIGN,// perhaps this should be an exception since it is only ever used // in the above method?,yes,undetermined,0,0,0,no,0.010292931188697107,yes,0.9855326836081524,yes,0.9847161428427379,yes,0.9861953818761439
287,hibernate-distribution-3.3.2.GA,DESIGN,// NOTE: this assumes something about how propertySelectFragment is implemented by the subclass! // was toUnqotedAliasStrings( getdiscriminatorColumnName() ) before - now tried // to remove that unqoting and missing aliases..,yes,undetermined,0,0,0,no,0.10644661554246514,no,0.05065274154392784,yes,0.9846959875826107,yes,0.9862150895364244
288,hibernate-distribution-3.3.2.GA,DESIGN,"// Put a placeholder in entries, so we don't recurse back and try to save() the // same object again. QUESTION: should this be done before onSave() is called? // likewise, should it be done before onUpdate()?",yes,undetermined,0,0,0,no,0.04018413463851258,yes,0.9855260730436871,yes,0.9846897471943037,yes,0.9861951516537537
289,hibernate-distribution-3.3.2.GA,DESIGN,"//before cascade! //TODO: should this be Session.instantiate(Persister, ...)?",yes,undetermined,0,0,0,yes,0.8831345462468964,yes,0.9618150885949267,yes,0.9846879729287789,yes,0.9862358197560067
290,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: we should throw an exception if we really *know* for sure   //      that this is a detached instance, rather than just assuming //throw new StaleObjectStateException(entityName, id);",yes,undetermined,0,0,0,yes,0.9836969007697776,yes,0.985536533867556,yes,0.9847143211250091,yes,0.9861936753488396
291,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO: The order in which entities are saved may matter (e.g., a particular transient entity //       may need to be saved before other transient entities can be saved; //       Keep retrying the batch of transient entities until either: //       1) there are no transient entities left in transientCopyCache //       or 2) no transient entities were saved in the last batch // For now, just run through the transient entities and retry the merge",yes,undetermined,0,0,0,no,0.2217285615791914,no,0.3026253980842812,no,0.294604813084493,no,0.2988528339755043
292,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: if object was an uninitialized proxy, this is inefficient, //      resulting in two SQL selects",yes,undetermined,0,0,0,yes,0.7391352281386881,yes,0.77913354573543,yes,0.7720953609030896,yes,0.7776925938511976
293,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: put this stuff back in to read snapshot from //      the second-level cache (needs some extra work),yes,undetermined,0,0,0,yes,0.9674248447680386,yes,0.985556894065163,yes,0.9847211783605084,yes,0.9862263840757957
294,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: not quite sure about the full implications of this!,yes,undetermined,0,0,0,yes,0.996242681855195,yes,0.9999957059543798,yes,0.9999951886161772,yes,0.9999963634361114
295,hibernate-distribution-3.3.2.GA,DESIGN,//this is kinda the best we can do...,yes,undetermined,0,0,0,no,0.354819986468683,no,0.3299763240056158,no,0.31831362242135847,no,0.3231332300678705
296,hibernate-distribution-3.3.2.GA,DESIGN,/* trim done to workaround stupid oracle bug that cant handle whitespaces before a { in a sp */,yes,undetermined,0,0,0,yes,0.9253562333903365,yes,0.9855666563553476,yes,0.9847275395100528,yes,0.9862408637038328
297,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: this needn't exclude subclasses...,yes,undetermined,0,0,0,yes,0.9678104973510253,yes,0.9855392581193532,yes,0.9847240378701495,yes,0.9862165058062958
298,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: we use two visitors here, inefficient!",yes,undetermined,0,0,0,yes,0.9829595130374917,yes,0.9894650305233619,yes,0.9892540185684815,yes,0.9903216909869758
299,hibernate-distribution-3.3.2.GA,DESIGN,/* trim done to workaround stupid oracle bug that cant handle whitespaces before a { in a sp */,yes,undetermined,0,0,0,yes,0.9253562333903365,yes,0.9855666563553476,yes,0.9847275395100528,yes,0.9862408637038328
300,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: does this really need to be here? //      does the collection already have //      it's own up-to-date snapshot?,yes,undetermined,0,0,0,yes,0.9416008559580901,yes,0.9855303092486526,yes,0.984724096395333,yes,0.9862250175754436
301,hibernate-distribution-3.3.2.GA,DESIGN,"// otherwise, a trim-specification and/or a trim-character // have been specified;  we need to decide which options // are present and ""do the right thing"" // should leading trim-characters be trimmed? // should trailing trim-characters be trimmed? // the trim-character // the trim-source",yes,undetermined,0,0,0,no,0.00791552725819867,no,0.027331171368025507,no,0.025958351213289727,no,0.025599354937997046
302,hibernate-distribution-3.3.2.GA,DESIGN,"//it is possible that the tree-walking in OuterJoinLoader can get to //an association defined by a subclass, in which case the property-ref //might refer to a property defined on a subclass of the current class //in this case, the table name is not known - this temporary solution  //assumes that the property-ref refers to a property of the subclass //table that the association belongs to (a reasonable guess) //TODO: fix this, add: OuterJoinLoadable.getSubclassPropertyTableName(String propertyName)",yes,undetermined,0,0,0,yes,0.672213286984425,yes,0.5478713617796955,yes,0.5415121573084656,yes,0.5526227393742034
303,hibernate-distribution-3.3.2.GA,DESIGN,// TODO: an alternative is to check if the owner has changed; if it hasn't then // return collection.getOwner(),yes,undetermined,0,0,0,yes,0.8848843630732883,yes,0.9108061001772383,yes,0.9847362728209315,yes,0.9862159422350939
304,hibernate-distribution-3.3.2.GA,DESIGN,//I suppose?,yes,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
305,hibernate-distribution-3.3.2.GA,DESIGN,"// TBD should this be varbinary($1)? //		registerColumnType(Types.VARBINARY,     ""binary($1)"");",yes,undetermined,0,0,0,no,0.008916701811526146,yes,0.9855274407421847,yes,0.9847289890414818,yes,0.9861909145608301
306,hibernate-distribution-3.3.2.GA,DESIGN,//shortcut,yes,undetermined,0,0,0,no,0.006179959678040859,yes,0.9855354701981057,yes,0.9846989473692012,yes,0.986197362633354
307,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: we should provide some way to get keys of collection of statistics to make it easier to retrieve from a GUI perspective,yes,undetermined,0,0,0,yes,0.9733289387627643,yes,0.9855632445073349,yes,0.9847195108960365,yes,0.9862157780667283
308,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO : probably better to calculate these and pass them in, as it'll be more performant",yes,undetermined,0,0,0,yes,0.9971599655315576,yes,0.9961600918326932,yes,0.995892096786811,yes,0.9963794339991224
309,hibernate-distribution-3.3.2.GA,DESIGN,// todo : should we additionally check the current isolation mode explicitly?,yes,undetermined,0,0,0,yes,0.9908967409087607,yes,0.9855289114590564,yes,0.9847302188268313,yes,0.9862412888821211
310,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: simply remove this override //      if we fix the above todos,yes,undetermined,0,0,0,yes,0.9999837107144458,yes,0.9999858511987778,yes,0.9999852132001078,yes,0.9999887787759469
311,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: get SQL rendering out of this package!,yes,undetermined,0,0,0,yes,0.9878673274071157,yes,0.9890309028055195,yes,0.9884373939714607,yes,0.9896625072633355
312,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: get SQL rendering out of this package!,yes,undetermined,0,0,0,yes,0.9878673274071157,yes,0.9890309028055195,yes,0.9884373939714607,yes,0.9896625072633355
313,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: get SQL rendering out of this package!,yes,undetermined,0,0,0,yes,0.9878673274071157,yes,0.9890309028055195,yes,0.9884373939714607,yes,0.9896625072633355
314,hibernate-distribution-3.3.2.GA,DESIGN,// todo : is there really any reason to kkeep trying if this fails once?,yes,undetermined,0,0,0,yes,0.9624927926719392,yes,0.9855201198080054,yes,0.9847042525293128,yes,0.9862161903588387
315,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO : not sure this is correct, could not find docs on how to do this.",yes,undetermined,0,0,0,yes,0.982040274819662,yes,0.9870654244615819,yes,0.9874976123127897,yes,0.9887810557808586
316,hibernate-distribution-3.3.2.GA,DESIGN,//HSQL has no Blob/Clob support .... but just put these here for now!,yes,undetermined,0,0,0,no,0.006950618740727152,yes,0.9855451088373743,yes,0.9847439809508215,yes,0.9862085234711989
317,hibernate-distribution-3.3.2.GA,DESIGN,// merges don't cascade to uninitialized collections //			//TODO: perhaps this does need to cascade after all....,yes,undetermined,0,0,0,yes,0.7955310125131397,yes,0.8601566643247586,yes,0.8566087238507588,yes,0.8648191850664375
318,hibernate-distribution-3.3.2.GA,DESIGN,// yick!  need this for proper serialization/deserialization handling...,yes,undetermined,0,0,0,no,0.05945636820764406,yes,0.9855506092743649,yes,0.9847356701431278,yes,0.9862227821275045
319,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: should orphans really be deleted during lock???,yes,undetermined,0,0,0,yes,0.8278731982213219,yes,0.9124313595290122,yes,0.9847379253261933,yes,0.9862176843685402
320,hibernate-distribution-3.3.2.GA,DESIGN,// todo : move to StringHelper?,yes,undetermined,0,0,0,no,0.01325037645668776,no,0.014260932248424719,no,0.013765265067302008,no,0.013323255765510592
321,hibernate-distribution-3.3.2.GA,DESIGN,// Sets can be just a view of a part of another collection. // do we need to copy it to be sure it won't be changing // underneath us? // ie. this.set.addAll(set);,yes,undetermined,0,0,0,no,0.23093151401879433,no,0.3030968017986994,no,0.2904884187430806,no,0.29464281310609036
322,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO: It would be really, really nice to use this to also model components!",yes,undetermined,0,0,0,yes,0.8219391558919248,yes,0.9106635117015361,yes,0.9846939467399325,yes,0.9862082617100085
323,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: move to .sql package!!,yes,undetermined,0,0,0,yes,0.9897613583591192,yes,0.9910768849235614,yes,0.9904651707780591,yes,0.9915123490526871
324,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: look at the owning property and check that it  //      isn't lazy (by instrumentation),yes,undetermined,0,0,0,yes,0.8856743931514851,yes,0.8495888765802927,yes,0.8147226669324086,yes,0.7799761841506841
325,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : add this info to the translator and aggregate it here...,yes,undetermined,0,0,0,yes,0.92780111050918,yes,0.9855597631529407,yes,0.9847039622456356,yes,0.9862281456385288
326,hibernate-distribution-3.3.2.GA,DESIGN,//TODO possibly relax that,yes,undetermined,0,0,0,yes,0.9889238569884683,yes,0.9855270115044995,yes,0.9846904191473013,yes,0.9862153104163749
327,hibernate-distribution-3.3.2.GA,DESIGN,//TODO possibly relax that,yes,undetermined,0,0,0,yes,0.9889238569884683,yes,0.9855270115044995,yes,0.9846904191473013,yes,0.9862153104163749
328,hibernate-distribution-3.3.2.GA,DESIGN,// would be better to use the element-type to determine // whether the old and the new are equal here; the problem being // we do not necessarily have access to the element type in all // cases,yes,undetermined,0,0,0,no,0.19099800239602813,no,0.1383300038417186,no,0.12994614282989755,no,0.13023896356116205
329,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: code duplication with JoinedSubclassEntityPersister,yes,undetermined,0,0,0,yes,0.9885745615033109,yes,0.9855366464525311,yes,0.98471045573893,yes,0.9862076604936312
330,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: refactor to .sql package,yes,undetermined,0,0,0,yes,0.9897613583591192,yes,0.9910768849235614,yes,0.9904651707780591,yes,0.9915123490526871
331,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: *two* hashmap lookups here is one too many...,yes,undetermined,0,0,0,yes,0.9697630145449918,yes,0.9855406900487683,yes,0.9847092355448731,yes,0.9862257187865557
332,hibernate-distribution-3.3.2.GA,DESIGN,"//note that this method could easily be moved up to BasicEntityPersister, //if we ever needed to reuse it from other subclasses",yes,undetermined,0,0,0,no,0.12552797128495344,no,0.1793208546630184,no,0.17542124639872828,no,0.17358074832990772
333,hibernate-distribution-3.3.2.GA,DESIGN,"// from the collection of associations, locate OJA for the // ManyToOne corresponding to this persister to fully // define the many-to-many; we need that OJA so that we can // use its alias here // TODO : is there a better way here?",yes,undetermined,0,0,0,yes,0.9704226544557691,yes,0.985561792722376,yes,0.9846902504356614,yes,0.9862447935148079
334,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: this class depends directly upon CriteriaImpl,  //      in the impl package ... add a CriteriaImplementor  //      interface",yes,undetermined,0,0,0,yes,0.9427708169647045,yes,0.9855308223501589,yes,0.984713659513016,yes,0.9862376564374606
335,hibernate-distribution-3.3.2.GA,DESIGN,// Do we need to qualify index names with the schema name?,yes,undetermined,0,0,0,no,0.029792796286044664,yes,0.9855657172133998,yes,0.9847259304772953,yes,0.98624519291098
336,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: We probably should have a StatisticsNotPublishedException, to make it clean",yes,undetermined,0,0,0,yes,0.999999686123919,yes,0.9999995162684473,yes,0.9999994405504443,yes,0.999999594236777
337,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: get SQL rendering out of this package!,yes,undetermined,0,0,0,yes,0.9878673274071157,yes,0.9890309028055195,yes,0.9884373939714607,yes,0.9896625072633355
338,hibernate-distribution-3.3.2.GA,DESIGN,//yukky! Don't you have subclasses for that! //TODO race conditions can happen here,yes,undetermined,0,0,0,yes,0.9784214814346958,yes,0.9855371699515257,yes,0.9846940956971137,yes,0.9862156421928592
339,hibernate-distribution-3.3.2.GA,DESIGN,// NOTE VERY HACKISH WORKAROUND!! // TODO: Fix this so it will work for non-POJO entity mode,yes,undetermined,0,0,0,yes,0.9999999992340487,yes,0.9999999986422512,yes,0.9999999984353244,yes,0.9999999989754144
340,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: need to make the majority of this functionality into a top-level support class for custom impl support,yes,undetermined,0,0,0,yes,0.9725003134108119,yes,0.9855362526956024,yes,0.9847465827787718,yes,0.9862459388443863
341,hibernate-distribution-3.3.2.GA,DESIGN,"// for DOM4J ""collections"" only // TODO: it would be better if this was done at the higher level by Printer",yes,undetermined,0,0,0,yes,0.9839633633370689,yes,0.9855566219539025,yes,0.9847115146792706,yes,0.9862378439312378
342,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: inefficient if that cache is just going to ignore the updated state!,yes,undetermined,0,0,0,yes,0.6541443781041654,yes,0.6708074619837218,yes,0.6647651640238883,yes,0.6774165377174282
343,hibernate-distribution-3.3.2.GA,DESIGN,// TODO: an alternative is to check if the owner has changed; if it hasn't then // get the ID from collection.getOwner(),yes,undetermined,0,0,0,yes,0.8999102437557618,yes,0.9158170127821553,yes,0.9847072029531494,yes,0.9862079376121442
344,hibernate-distribution-3.3.2.GA,DESIGN,//TODO:refactor + make this method private,yes,undetermined,0,0,0,yes,0.9999923967711032,yes,0.9855484722881677,yes,0.9847425581715333,yes,0.9862133575101354
345,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : keep seperate notions of QT[] here for shallow/non-shallow queries...,yes,undetermined,0,0,0,yes,0.9219833053756198,yes,0.985541771415108,yes,0.9846973770672572,yes,0.9861949794106426
346,hibernate-distribution-3.3.2.GA,DESIGN,// todo : temporary //      needed because currently persister is the one that //      creates and renders the join fragments for inheritence //      hierarchies...,yes,undetermined,0,0,0,yes,0.9802642623920755,yes,0.9855210722089477,yes,0.9847320198058299,yes,0.986201288873544
347,hibernate-distribution-3.3.2.GA,DESIGN,// this is called by SessionFactory irregardless; we just disregard here; // could also add a check to SessionFactory to only conditionally call stop,yes,undetermined,0,0,0,no,0.025985433175378575,yes,0.9855230332843177,yes,0.9847013103575804,yes,0.986211393662356
348,hibernate-distribution-3.3.2.GA,DESIGN,//swaldman 2004-02-07: modify to allow null values to signify fall through to c3p0 PoolConfig defaults,yes,undetermined,0,0,0,no,0.01775010925036447,yes,0.9855334770957318,yes,0.9847238610251087,yes,0.986210944477151
349,hibernate-distribution-3.3.2.GA,DESIGN,"// work around that crazy issue where the tree contains // ""empty"" FromElements (no text); afaict, this is caused // by FromElementFactory.createCollectionJoin()",yes,undetermined,0,0,0,no,0.09425520516105577,yes,0.9855348008614703,yes,0.9847132435866618,yes,0.9861922956999876
350,hibernate-distribution-3.3.2.GA,DESIGN,"//kinda ugly, but needed for collections with a ""."" node mapping",yes,undetermined,0,0,0,no,0.40411926214425686,no,0.36183157167846985,no,0.3478615983197912,no,0.35549399196928716
351,hibernate-distribution-3.3.2.GA,DESIGN,//FIXME: get the PersistentClass,yes,undetermined,0,0,0,no,0.013223813795606271,yes,0.9855631682045901,yes,0.9847315290107628,yes,0.9862330597555877
352,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO : would be great to have a Mapping#hasNonIdentifierPropertyNamedId method // I don't believe that Mapping#getReferencedPropertyType accounts for the identifier property; so // if it returns for a property named 'id', then we should have a non-id field named id",yes,undetermined,0,0,0,yes,0.6463279977885538,no,0.4474844107700975,no,0.4209782389303358,no,0.42742689440394016
353,hibernate-distribution-3.3.2.GA,DESIGN,// entity name will not be available for non-POJO entities // TODO: cache the entity name somewhere so that it is available to this exception,yes,undetermined,0,0,0,yes,0.6302767425553215,yes,0.7002192717146173,yes,0.6866384900214421,yes,0.6989647592392931
354,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: is this really necessary????,yes,undetermined,0,0,0,yes,0.9878171202648479,yes,0.9999997386787224,yes,0.9999996966880764,yes,0.9999997834246606
355,hibernate-distribution-3.3.2.GA,DESIGN,//index += getPropertyColumnSpan( i ); //TODO:  this is kinda slow...,yes,undetermined,0,0,0,yes,0.951067263788091,yes,0.9855258111571832,yes,0.984707195935692,yes,0.9862166206307574
356,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: move to .sql package, and refactor with similar things!",yes,undetermined,0,0,0,yes,0.9789235598152747,yes,0.9855235115505124,yes,0.9847077173100522,yes,0.9862073241985033
357,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: I am not so sure about the exception handling in this bit!,yes,undetermined,0,0,0,yes,0.9811962599115992,yes,0.9857645212822551,yes,0.9850611139394586,yes,0.9864835027332252
358,hibernate-distribution-3.3.2.GA,DESIGN,//ugly little workaround for fact that createUniqueKeyLoaders() does not handle component properties,yes,undetermined,0,0,0,yes,0.9938487686242607,yes,0.993906195799016,yes,0.9934088298955698,yes,0.9941662584877018
359,hibernate-distribution-3.3.2.GA,DESIGN,// append the SQL to return the generated identifier //TODO: suck into Insert,yes,undetermined,0,0,0,yes,0.907088356740712,yes,0.9855466824978086,yes,0.9847312755811692,yes,0.9862202881634361
360,hibernate-distribution-3.3.2.GA,DESIGN,"//This is really ugly, but necessary:",yes,undetermined,0,0,0,yes,0.9701703996386516,yes,0.999985508702227,yes,0.9999851616406736,yes,0.9999887229614429
361,hibernate-distribution-3.3.2.GA,DESIGN,// todo : modify the class definition if not already transformed...,yes,undetermined,0,0,0,yes,0.9708923364665658,yes,0.9855444542096194,yes,0.9847383013287244,yes,0.9862119705352577
362,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: should we use SELECT .. FOR UPDATE?,yes,undetermined,0,0,0,yes,0.9640548104953461,yes,0.985520035690067,yes,0.9847033051260934,yes,0.986212228222249
363,hibernate-distribution-3.3.2.GA,DESIGN,"/** Create an action that will evict collection and entity regions based on queryspaces (table names).
	 *  TODO: cache the autodetected information and pass it in instead.
	 **/",yes,undetermined,0,0,0,yes,0.919102271624809,yes,0.9855444043948712,yes,0.9847042480807747,yes,0.9862068218353701
364,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: is this 100% correct?,yes,undetermined,0,0,0,yes,0.9955523267151518,yes,0.9947555947935045,yes,0.9952893393793983,yes,0.9958629793407865
365,hibernate-distribution-3.3.2.GA,DESIGN,/////////////////////////////////////////////////////////////////////////// // USED ONLY FOR REGRESSION TESTING!!!! // // todo : obviously get rid of all this junk ;) ///////////////////////////////////////////////////////////////////////////,yes,undetermined,0,0,0,yes,0.9319102670375602,yes,0.9855496279863237,yes,0.9847244685585472,yes,0.9862261104729936
366,hibernate-distribution-3.3.2.GA,DESIGN,// NOTE: this assumes something about how propertySelectFragment is implemented by the subclass! // was toUnqotedAliasStrings( getIdentiferColumnNames() ) before - now tried // to remove that unqoting and missing aliases..,yes,undetermined,0,0,0,no,0.10644661554246514,no,0.05065274154392784,yes,0.9846959875826107,yes,0.9862150895364244
367,hibernate-distribution-3.3.2.GA,DESIGN,//use of a stringbuffer to workaround a JDK bug,yes,undetermined,0,0,0,yes,0.9969394481405263,yes,0.9965842324721327,yes,0.9963498584590662,yes,0.996792302340769
368,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: move into collection type, so we can use polymorphism!",yes,undetermined,0,0,0,yes,0.9999836859700211,yes,0.9855575926204881,yes,0.9847204739499843,yes,0.9862396118986952
369,hibernate-distribution-3.3.2.GA,DESIGN,// TODO should we just collect these like with the collections above?,yes,undetermined,0,0,0,yes,0.9590831699520442,yes,0.9855407195376281,yes,0.9847409872919975,yes,0.9862256622524258
370,hibernate-distribution-3.3.2.GA,DESIGN,"// todo : should really move this log statement to CollectionType, where this is used from...",yes,undetermined,0,0,0,yes,0.9720532360105107,yes,0.9855409113870821,yes,0.9847064740460973,yes,0.9862054712963113
371,hibernate-distribution-3.3.2.GA,DESIGN,// FIXME Hacky workaround to JBCACHE-1202,yes,undetermined,0,0,0,yes,0.9999999999382712,yes,0.999999999994797,yes,0.9999999999938224,yes,0.9999999999963153
372,hibernate-distribution-3.3.2.GA,DESIGN,//hum ... should we cascade anyway? throw an exception? fine like it is?,yes,undetermined,0,0,0,no,0.049165816784258645,yes,0.9855359032887369,yes,0.9846974613754117,yes,0.986227427592442
373,hibernate-distribution-3.3.2.GA,DESIGN,// todo: this might really even be moved into the cfg package and used as the basis for all things which are configurable.,yes,undetermined,0,0,0,yes,0.9880566801334053,yes,0.9880290073340398,yes,0.9874591025914529,yes,0.9886715232218158
374,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: copy/paste from insertRows(),yes,undetermined,0,0,0,yes,0.9999978265579288,yes,0.9999982188685118,yes,0.9999979742775373,yes,0.9999985029882935
375,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: suck into event class,yes,undetermined,0,0,0,yes,0.9957717099705237,yes,0.9946868956322001,yes,0.9941946502877669,yes,0.9948810394227084
376,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: never reached, since getTypeName() actually throws an exception!",yes,undetermined,0,0,0,yes,0.9594546434688774,yes,0.9855495960773654,yes,0.9846903441909982,yes,0.9862042301840127
377,hibernate-distribution-3.3.2.GA,DESIGN,"// This, is used by SessionFactoryImpl to hand to the generated SessionImpl; // was the only reason I could see that we cannot just use null as // Settings.cacheProvider",yes,undetermined,0,0,0,no,0.0318238568387657,yes,0.9855377072699822,yes,0.9847233124576515,yes,0.986204350706054
378,hibernate-distribution-3.3.2.GA,DESIGN,// xmlforest requires a new kind of function constructor,yes,undetermined,0,0,0,no,0.04525451132339357,yes,0.9855449795455349,yes,0.984705393746675,yes,0.9862027709136124
379,hibernate-distribution-3.3.2.GA,DESIGN,// TODO Is this a valid operation on a timestamps cache?,yes,undetermined,0,0,0,yes,0.8912842102941776,yes,0.8574638076014165,yes,0.8512265684049869,yes,0.8602138515742849
380,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO: I considered validating the presence of the TS cache here, // but decided to defer unti getQueryCacheInstance() in case the  // cache is never actually used",yes,undetermined,0,0,0,yes,0.6932315103977774,yes,0.731659871660494,yes,0.7235149578928143,yes,0.7334156132175923
381,hibernate-distribution-3.3.2.GA,DESIGN,// TODO Why not use the timestamp in a DataVersion?,yes,undetermined,0,0,0,yes,0.9709707049667399,yes,0.985526068898772,yes,0.9847169628054455,yes,0.9861992232258586
382,hibernate-distribution-3.3.2.GA,DESIGN,// todo : eventually merge this with TreeCache and just add optional opt-lock support there.,yes,undetermined,0,0,0,yes,0.8536774373432906,yes,0.6982954755062915,yes,0.7312800811437691,yes,0.7411059611368913
383,hibernate-distribution-3.3.2.GA,DESIGN,"/**
     * FIXME Per the RegionFactory class Javadoc, this constructor version
     * should not be necessary.
     * 
     * @param props The configuration properties
     */",yes,undetermined,0,0,0,yes,0.9666546400717521,yes,0.9855629495379596,yes,0.9847072635560202,yes,0.9861994517130404
384,hibernate-distribution-3.3.2.GA,DESIGN,"/**
     * FIXME Per the RegionFactory class Javadoc, this constructor version
     * should not be necessary.
     * 
     * @param props The configuration properties
     */",yes,undetermined,0,0,0,yes,0.9666546400717521,yes,0.9855629495379596,yes,0.9847072635560202,yes,0.9861994517130404
385,hibernate-distribution-3.3.2.GA,DESIGN,"// work around the ""feature"" where tree cache is validating the // inserted node during the next transaction.  no idea...",yes,undetermined,0,0,0,no,0.1604696776553172,no,0.13048707998970988,no,0.12287143525444119,no,0.12353786939171171
386,hibernate-distribution-3.3.2.GA,DESIGN,"/**
     * FIXME Per the RegionFactory class Javadoc, this constructor version
     * should not be necessary.
     * 
     * @param props The configuration properties
     */",yes,undetermined,0,0,0,yes,0.9666546400717521,yes,0.9855629495379596,yes,0.9847072635560202,yes,0.9861994517130404
387,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO: I considered validating TS cache config here, // but decided to defer unti getTimestampsCacheInstance() in case the  // cache is never actually used",yes,undetermined,0,0,0,yes,0.6833328578059735,yes,0.7221051796113103,yes,0.7134960116331226,yes,0.7236757279523314
388,hibernate-distribution-3.3.2.GA,DESIGN,// can happen because of the multiple ways Cache.remove() // can be invoked :(,yes,undetermined,0,0,0,no,0.00953491420959036,yes,0.985528714997108,yes,0.9847096650003606,yes,0.9862213223673161
389,hibernate-distribution-3.3.2.GA,DESIGN,//need to do that here rather than in the save event listener to let //the post insert events to have a id-filled entity when IDENTITY is used (EJB3),yes,undetermined,0,0,0,no,0.026249040797501195,yes,0.9855499415959103,yes,0.9847349559513158,yes,0.9862008383895031
390,hibernate-distribution-3.3.2.GA,DESIGN,// unhappy about this being public ... is there a better way?,yes,undetermined,0,0,0,yes,0.6503669821862377,yes,0.64896783763504,yes,0.6384776064435671,yes,0.6460884425469036
391,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO : safe to interpret ""map.remove(key) == null"" as non-dirty?",yes,undetermined,0,0,0,yes,0.9168183171770697,yes,0.9855377347518962,yes,0.984732001968852,yes,0.9862213465383316
392,hibernate-distribution-3.3.2.GA,DESIGN,// FIXME hack to work around fact that calling // Node added = root.addChild( fqn ); doesn't  // properly set the version on the node,yes,undetermined,0,0,0,yes,0.9999978708788498,yes,0.9999910454379268,yes,0.9999892323267628,yes,0.9999920367486567
393,hibernate-distribution-3.3.2.GA,DESIGN,"// work around the ""feature"" where tree cache is validating the // inserted node during the next transaction. no idea...",yes,undetermined,0,0,0,no,0.1604696776553172,no,0.13048707998970988,no,0.12287143525444119,no,0.12353786939171171
394,hibernate-distribution-3.3.2.GA,DESIGN,// TODO Is this a valid operation on a timestamps cache?,yes,undetermined,0,0,0,yes,0.8912842102941776,yes,0.8574638076014165,yes,0.8512265684049869,yes,0.8602138515742849
395,hibernate-distribution-3.3.2.GA,DESIGN,// todo : what else to do here?,yes,undetermined,0,0,0,no,0.01325037645668776,no,0.014260932248424719,no,0.013765265067302008,no,0.013323255765510592
396,hibernate-distribution-3.3.2.GA,DESIGN,// TODO: Replace this with a more elegant solution.,yes,undetermined,0,0,0,yes,0.9999980733290138,yes,0.9999983851220111,yes,0.9999981754106828,yes,0.9999986631119062
397,hibernate-distribution-3.3.2.GA,DESIGN,// short cut check...,yes,undetermined,0,0,0,no,0.006215767399179663,yes,0.9855522075597866,yes,0.9847087947071228,yes,0.9862145032340187
398,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: to handle concurrent writes correctly, this should return a Lock to the client",yes,undetermined,0,0,0,yes,0.7967574491371264,yes,0.7986772178655789,yes,0.8284557421157588,yes,0.8371885793666702
399,hibernate-distribution-3.3.2.GA,DESIGN,"//put() has nowait semantics, is this really appropriate? //note that it needs to be async replication, never local or sync",yes,undetermined,0,0,0,no,0.5,yes,0.552641957680037,yes,0.5505895260017268,yes,0.5581415706919316
400,hibernate-distribution-3.3.2.GA,DESIGN,"// this is ugly here, but needed because its a subquery",yes,undetermined,0,0,0,yes,0.9832118271387074,yes,0.9855482524288006,yes,0.9847386929848593,yes,0.9862363079054387
401,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : will need reference to session factory to fully complete HHH-1907,yes,undetermined,0,0,0,yes,0.9722827178699561,yes,0.9855561397240711,yes,0.9846922150472096,yes,0.986225366452323
402,hibernate-distribution-3.3.2.GA,DESIGN,//yuck!,yes,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
403,hibernate-distribution-3.3.2.GA,DESIGN,// inheritance cycle detection (paranoid check),yes,undetermined,0,0,0,no,0.006444816776291693,yes,0.985548030552928,yes,0.9847141205920332,yes,0.9861894106969703
404,hibernate-distribution-3.3.2.GA,DESIGN,// todo : remove,yes,undetermined,0,0,0,yes,0.9999977045855795,yes,0.999998617550573,yes,0.9999981845588258,yes,0.9999986609139979
405,hibernate-distribution-3.3.2.GA,DESIGN,// TODO: encapsulate the protected instance variables!,yes,undetermined,0,0,0,yes,0.9560772190349759,yes,0.9855620271495428,yes,0.9847363749290033,yes,0.9862116480571866
406,hibernate-distribution-3.3.2.GA,DESIGN,//polymorphism comment above,yes,undetermined,0,0,0,no,0.0027546184387273673,no,0.014241582689881242,no,0.013756136006162134,no,0.013300113376231599
407,hibernate-distribution-3.3.2.GA,DOCUMENTATION,//TODO find a decent name before documenting,yes,undetermined,0,0,0,no,0.01325037645668776,no,0.014260932248424719,no,0.013765265067302008,no,0.013323255765510592
408,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"// add an entry for this type of entity. // we can be assured that all referenced entities have already // been processed, // so specify that this entity is with the latest batch. // doing the batch number before adding the name to the list is // a faster way to get an accurate number.",yes,undetermined,0,0,0,no,0.0562917490939128,yes,0.9855496416996259,yes,0.9847033246995602,yes,0.9862419153697284
409,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// TODO: handle TypeDefs,yes,undetermined,0,0,0,yes,0.992029477053587,yes,0.9935133875723683,yes,0.9930178927396618,yes,0.9937888757494804
410,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"//TODO: get all properties, not just the fetched ones!",yes,undetermined,0,0,0,yes,0.9715349307063927,yes,0.9855521006331389,yes,0.9847029563684601,yes,0.9862040687433516
411,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: native ids,yes,undetermined,0,0,0,yes,0.9409968555801465,yes,0.9855680100815821,yes,0.9847314310093679,yes,0.9862076795003807
412,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"// TODO: bindpropertyresults(alias, returnElem)",yes,undetermined,0,0,0,yes,0.9960102678156358,yes,0.9957856395501777,yes,0.9954752594467441,yes,0.9960076342984339
413,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: handle property-ref,yes,undetermined,0,0,0,yes,0.9144975351028254,yes,0.9855634853027541,yes,0.9846882992276162,yes,0.986224872492817
414,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: validate existing of property with the chosen name. (secondpass ),yes,undetermined,0,0,0,yes,0.8837323999944997,yes,0.8659005953865471,yes,0.8592475068092317,yes,0.8674018423420525
415,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"//TODO: get all properties, not just the fetched ones!",yes,undetermined,0,0,0,yes,0.9715349307063927,yes,0.9855521006331389,yes,0.9847029563684601,yes,0.9862040687433516
416,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: check that entry.getIdentifier().equals(requestedId),yes,undetermined,0,0,0,yes,0.9126661769519145,yes,0.9855680538498675,yes,0.9847321818965229,yes,0.9862176702118698
417,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// TODO: RESTRICT VIOLATION,yes,undetermined,0,0,0,yes,0.8339294627074253,yes,0.821807647121127,yes,0.8130399200929885,yes,0.8218146016498588
418,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"//TODO: assertion only, could be optimized away",yes,undetermined,0,0,0,yes,0.9338660863417638,yes,0.9855680566088963,yes,0.9847117046422768,yes,0.9862019698968918
419,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"// TODO: lowercasing done here. Was done ""at random"" before; maybe not needed at all ?",yes,undetermined,0,0,0,yes,0.9999989154374112,yes,0.9999983637051558,yes,0.9999981605477021,yes,0.9999985741900237
420,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"//TODO: optimize away this lookup for entities w/o unsaved-value=""undefined""",yes,undetermined,0,0,0,yes,0.6359142470394776,yes,0.5971651957331471,yes,0.5927640877807534,yes,0.6041489103689494
421,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// TODO: toLowerCase was not done before. Only used in Template.,yes,undetermined,0,0,0,yes,0.9854669280397936,yes,0.9855316202290179,yes,0.984712119503381,yes,0.9862027058306759
422,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"//TODO: arithmetic expressions, multiple new Foo(...)",yes,undetermined,0,0,0,yes,0.8226644698528474,yes,0.8937202290176496,yes,0.8895689473716979,yes,0.8976007209671378
423,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: check that entry.getIdentifier().equals(requestedId),yes,undetermined,0,0,0,yes,0.9126661769519145,yes,0.9855680538498675,yes,0.9847321818965229,yes,0.9862176702118698
424,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// TODO: not visible to the user!,yes,undetermined,0,0,0,yes,0.988596634923465,yes,0.9864359207216102,yes,0.9853410089473236,yes,0.9868250043808424
425,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: proxies!,yes,undetermined,0,0,0,yes,0.9794604937617497,yes,0.9999977370247558,yes,0.999997565354,yes,0.9999981947079941
426,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: can we limit stored procedures ?!,yes,undetermined,0,0,0,yes,0.928725676789117,yes,0.9855308965503995,yes,0.9847079718450005,yes,0.9862272293714657
427,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: formulas ?,yes,undetermined,0,0,0,no,0.01325037645668776,no,0.014260932248424719,no,0.013765265067302008,no,0.013323255765510592
428,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// TODO: better error message since we actually support composites if names are explicitly listed.,yes,undetermined,0,0,0,yes,0.9753601033183418,yes,0.9855303261026461,yes,0.9847227096395939,yes,0.9862114550303676
429,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: use these in methods above,yes,undetermined,0,0,0,yes,0.9999930197732956,yes,0.9999901525062808,yes,0.9999883257932513,yes,0.9999911479232251
430,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"//TODO: cache the persister, this shows up in yourkit",yes,undetermined,0,0,0,yes,0.9696825191433665,yes,0.9892191283038103,yes,0.988568170214859,yes,0.9896184661122596
431,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"//TODO: add referencedClass to disambiguate to FKs on the same //      columns, pointing to different tables",yes,undetermined,0,0,0,no,0.24852828398126223,no,0.29317683872177813,no,0.30057347422043756,no,0.3059558873942428
432,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: create uk loaders for component properties,yes,undetermined,0,0,0,yes,0.9966698567196253,yes,0.9955059959913669,yes,0.9953402331872522,yes,0.9958961504086816
433,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// TODO : still need to make CollectionPersisters EntityMode-aware,yes,undetermined,0,0,0,yes,0.9943313765328845,yes,0.9943277960122593,yes,0.9940340655685219,yes,0.9947043404848516
434,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: terrible implementation!,yes,undetermined,0,0,0,yes,0.9999834412563249,yes,0.9972629365659904,yes,0.997008108944433,yes,0.9973875820968707
435,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"//TODO: eventually put this back in, once we think all is fixed //Object otherAlias = columnsUnique.put(qualifiedColumn, columnAlias);",yes,undetermined,0,0,0,yes,0.9973265379381432,yes,0.985563803026048,yes,0.9847229921025583,yes,0.9862282801738751
436,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// TODO: I don't really like this implementation; it would be better if // this was handled by searchForDirtyCollections(),yes,undetermined,0,0,0,yes,0.9999925651456382,yes,0.9999887313577401,yes,0.9999892772466232,yes,0.9999920227182982
437,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// TODO: check if key contains the owner ID,yes,undetermined,0,0,0,yes,0.9147443014167882,yes,0.9855238467851962,yes,0.9847072364574792,yes,0.9862215784819306
438,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: cache this in an instvar,yes,undetermined,0,0,0,yes,0.9942769150881217,yes,0.9925238803320001,yes,0.9917579498016501,yes,0.992664040420173
439,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// TODO : temporary initial step towards HHH-1907,yes,undetermined,0,0,0,yes,0.9130572923671532,yes,0.9855628832280091,yes,0.9847256052131124,yes,0.9862197259773754
440,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// todo : remove this once ComponentMetamodel is complete and merged,yes,undetermined,0,0,0,yes,0.9577626471427094,yes,0.9855509347238695,yes,0.9847314257566754,yes,0.9862271031579243
441,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: add owner argument!!,yes,undetermined,0,0,0,yes,0.9174711221637828,yes,0.9855445860517382,yes,0.9846996114055143,yes,0.9862158208898189
442,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"//TODO handle supportsNotNullUnique=false, but such a case does not exist in the wild so far",yes,undetermined,0,0,0,yes,0.7873854782123,yes,0.680804996148967,yes,0.684441278477401,yes,0.6944676237913155
443,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// TODO: better error message since we actually support composites if names are explicitly listed.,yes,undetermined,0,0,0,yes,0.9753601033183418,yes,0.9855303261026461,yes,0.9847227096395939,yes,0.9862114550303676
444,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: for some dialects it would be appropriate to add the renderOrderByPropertiesSelect() to other select strings,yes,undetermined,0,0,0,yes,0.9682836496867151,yes,0.9855676711318666,yes,0.9847317765923166,yes,0.986218899519902
445,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: unnecessary for databases with ANSI-style joins,yes,undetermined,0,0,0,yes,0.9015307160271483,yes,0.9855265687268909,yes,0.9847207939430643,yes,0.9862094652114908
446,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: maybe call it getRowSelection() ?,yes,undetermined,0,0,0,yes,0.9999999999224235,yes,0.999999999849135,yes,0.9999999998228706,yes,0.9999999998864236
447,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: make this handle multiple collection roles!,yes,undetermined,0,0,0,yes,0.9955081035698978,yes,0.9911085368275957,yes,0.9907261300160655,yes,0.9917847174820403
448,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: include the rowids!!!!,yes,undetermined,0,0,0,yes,0.93899760119672,yes,0.9855571446921686,yes,0.9847233937738832,yes,0.9862221273471483
449,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"// if we are still not resolved, we might represent a constant. //      needed to add this here because the allowance of //      naked-prop-refs in the grammar collides with the //      definition of literals/constants (""nondeterminism""). //      TODO: cleanup the grammar so that ""processConstants"" is always just handled from here",yes,undetermined,0,0,0,no,0.09484758216846213,yes,0.9855513806995645,yes,0.9847053685217779,yes,0.9862181317210932
450,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// TODO : or should we return 'containsTableAlias'??,yes,undetermined,0,0,0,yes,0.9878011640768981,yes,0.9855590465895371,yes,0.9846987011108607,yes,0.9862015356157463
451,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,/////////////////////////////////////////////////////////////////////// // TODO : look at perhaps caching this...,yes,undetermined,0,0,0,yes,0.9551855512738447,yes,0.9855637295667496,yes,0.9847346607956963,yes,0.9862304630153329
452,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: avoid this for non-new instances where mightBeDirty==false,yes,undetermined,0,0,0,yes,0.9768075266206641,yes,0.985531582671855,yes,0.9847006578710441,yes,0.9862057170950513
453,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: theoretically non-threadsafe...,yes,undetermined,0,0,0,yes,0.9604996110495816,yes,0.9855541028448349,yes,0.9847263401543392,yes,0.9862376700005558
454,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// todo : look at optimizing these...,yes,undetermined,0,0,0,yes,0.7213063218628037,yes,0.7692102580538114,yes,0.7566551032663748,yes,0.7661849927064239
455,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// todo : cache this sql...,yes,undetermined,0,0,0,yes,0.9904745734424633,yes,0.9922619951210707,yes,0.9916945442587608,yes,0.9926250888605154
456,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"/**
	 * TODO: Check if Mimer SQL cannot handle the way DB2 does
	 */",yes,undetermined,0,0,0,yes,0.9640818353532188,yes,0.9855506250452346,yes,0.9847144020688247,yes,0.9862432779545514
457,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"//TODO: if we are using identity columns, fetch the identifier",yes,undetermined,0,0,0,yes,0.6186286798095719,yes,0.7459237544549356,yes,0.7420699434586631,yes,0.7496915086217758
458,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO check there is no actual definition elemnents when a ref is defined,yes,undetermined,0,0,0,yes,0.708897105075585,yes,0.7144261846056065,yes,0.6360669033311028,yes,0.6455247273026166
459,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// table=null -> an association // - fill it in later //TODO fill in the mappings for table == null,yes,undetermined,0,0,0,yes,0.6272769009959109,yes,0.8660504488725388,yes,0.8599100134617507,yes,0.8686074259390976
460,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// table=null -> an association - fill // it in later //TODO fill in the mappings for table == null,yes,undetermined,0,0,0,yes,0.6272769009959109,yes,0.8660504488725388,yes,0.8599100134617507,yes,0.8686074259390976
461,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// todo : add support for READ_WRITE ( + NONSTRICT_READ_WRITE ??? ),yes,undetermined,0,0,0,yes,0.9999922107852793,yes,0.9999872976396923,yes,0.9999936173449219,yes,0.9999951833647789
462,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: return new Lock(ts);,yes,undetermined,0,0,0,yes,0.97259699918974,yes,0.9855621031383455,yes,0.987751300452496,yes,0.9889459901528462
463,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// todo : add support for READ_WRITE ( + NONSTRICT_READ_WRITE ??? ),yes,undetermined,0,0,0,yes,0.9999922107852793,yes,0.9999872976396923,yes,0.9999936173449219,yes,0.9999951833647789
464,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// TODO : why aren't these the same?,yes,undetermined,0,0,0,yes,0.9999913318689351,yes,0.9999861467102009,yes,0.9999839724445382,yes,0.9999877791148536
465,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: proxies!,yes,undetermined,0,0,0,yes,0.9794604937617497,yes,0.9999977370247558,yes,0.999997565354,yes,0.9999981947079941
466,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: proxies!,yes,undetermined,0,0,0,yes,0.9794604937617497,yes,0.9999977370247558,yes,0.999997565354,yes,0.9999981947079941
467,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"//TODO: if we support multiple fetch groups, we would need //      to clone the set of lazy properties!",yes,undetermined,0,0,0,yes,0.8726460419250492,yes,0.8251794964323316,yes,0.8217174422312032,yes,0.7751418531624149
468,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO mappings.getLogicalTableName(ownerTable),yes,undetermined,0,0,0,yes,0.962816292447941,yes,0.9855340952431002,yes,0.9846997232699994,yes,0.9862000694628277
469,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: if lock.getTimestamp().equals(ts),yes,undetermined,0,0,0,yes,0.8743192447943654,yes,0.9020847408071009,yes,0.984705576406462,yes,0.9861931308709951
470,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"//TODO: always true for now, but not if we later decide to support elements() in the from clause",yes,undetermined,0,0,0,yes,0.9682694708595326,yes,0.9855484064499865,yes,0.9847331705971638,yes,0.9862368601709469
471,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// we could move this inside if we wanted to // tolerate collection initializations during // collection dirty checking:,yes,undetermined,0,0,0,no,0.038419820674644806,yes,0.985524552754488,yes,0.9847131112330821,yes,0.9862091964629387
472,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// See if the user configured a multiplexer stack,no,undetermined,0,0,0,no,0.006313592640957693,no,0.006004304202238049,no,0.0056329956650322255,no,0.005386242663401212
473,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//root entity comes *last*,no,undetermined,0,0,0,no,0.006081558488728082,no,0.003676681037707336,no,0.003579782417031319,no,0.0034178257659473054
474,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//==elementType ??,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
475,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//scan the query string for class names appearing in the from clause and replace //with all persistent implementors of the class/interface, returning multiple //query strings (make sure we don't pick up a class in the select clause!)",no,undetermined,0,0,0,no,0.04725289791677367,no,0.014239620171080164,no,0.013781692569245437,no,0.013321220178035397
476,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//identifier collections not supported for 1-to-many,no,undetermined,0,0,0,no,0.014148273206807713,no,0.00995652243301161,no,0.009278447895681573,no,0.009008708538646038
477,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// potentialTrimCharacterArgIndex = 1 assumes that a // trim-specification has been specified.  we handle the // exception to that explicitly,no,undetermined,0,0,0,no,0.006417764595070192,no,0.010306830239774809,no,0.013784944502008322,no,0.013347282589924979
478,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0029192075517518335,no,0.0019428635406165216,no,0.0019258753864740586,no,0.0018095004858472681
479,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if the current depth is 0, the root thing being loaded is the // many-to-many collection itself.  Here, it is alright to use // an inner join...",no,undetermined,0,0,0,no,0.0376803714985906,no,0.01423663867663885,no,0.013755190524264996,no,0.013324165874208397
480,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// update removed rows fks to null,no,undetermined,0,0,0,no,0.01353498142459501,no,0.014266839918532389,no,0.013786548695516253,no,0.01332632754366787
481,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//registerFunction( ""trim"", new StandardSQLFunction( ""trim"", Hibernate.STRING ) );",no,undetermined,0,0,0,no,0.004559739559858356,no,0.014270141507953157,no,0.013767555962516786,no,0.013311754742721005
482,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//			buf.append( selectFragment( lhsAlias, """" ) )//ignore suffix for collection columns!",no,undetermined,0,0,0,no,0.0017658356331379879,no,0.004261053263539,no,0.004214019004688094,no,0.004030123237439902
483,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// initialize the Set of queried identifier spaces (ie. tables),no,undetermined,0,0,0,no,0.007001305089287671,no,0.007762186564211512,no,0.007366784218868433,no,0.007044677945152578
484,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//use suffix for the entity columns,no,undetermined,0,0,0,no,0.0021093043319683233,no,0.004648895193549331,no,0.004539782323422781,no,0.004331037400165452
485,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we got here because we assumed that an instance // with an assigned id was detached, when it was // really persistent",no,undetermined,0,0,0,no,0.017656190421431624,no,0.011990017624935153,no,0.01170999670124186,no,0.011321311779779408
486,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the class hierarchy structure,no,undetermined,0,0,0,no,0.015143410156580356,no,0.014264466156112963,no,0.013780640090295311,no,0.013350568725179852
487,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// remove the current element from insertions. It will be added back later.,no,undetermined,0,0,0,no,0.01248756700191663,no,0.012475120211163713,no,0.012511703861937019,no,0.012151822195249459
488,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//private final String rootTableName;,no,undetermined,0,0,0,no,0.0069632289407249755,no,0.0099685696653769,no,0.00955966118100169,no,0.009206810178279802
489,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// NOTE : this is being used from the process of shutting down a // SessionFactory. Specific things to consider: // (1) this clearing of the region should not propagate to // other nodes on the cluster (if any); this is the // cache-mode-local option bit... // (2) really just trying a best effort to cleanup after // ourselves; lock failures, etc are not critical here; // this is the fail-silently option bit...",no,undetermined,0,0,0,no,0.5,yes,0.5678742981713659,yes,0.5716738037742493,yes,0.5710623659567199
490,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//INITIALIZATION:,no,undetermined,0,0,0,no,0.0027484483601422885,no,0.0029666339783666713,no,0.0029028012458525,no,0.0031988134306241943
491,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is persister-centric and/or EntityInfo-centric ~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.023581224754511555,no,0.014261544994595933,no,0.01375621134484748,no,0.013315125883931765
492,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//not null ... (start with 1) is implicit,no,undetermined,0,0,0,no,0.00828214204809594,no,0.008268958180421658,no,0.007926023643623275,no,0.007619340284615225
493,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// continue loop,no,undetermined,0,0,0,no,0.011162137789367553,no,0.007921552540028484,no,0.007640111863498747,no,0.007363796256829338
494,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// return existing object or initialized proxy (unless deleted),no,undetermined,0,0,0,no,0.004953636312456476,no,0.007821338068154967,no,0.007630155503623054,no,0.0070211910826589825
495,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the list of entity names that indicate the batch number,no,undetermined,0,0,0,no,0.011666411841053577,no,0.014259202627360306,no,0.013777074663738495,no,0.013330298539001478
496,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//disassembled state gets put in a new array (we write to cache by value!),no,undetermined,0,0,0,no,0.0036885536871004406,no,0.004059772623216963,no,0.0037461325012949085,no,0.003556922464737495
497,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Add these directly to the executions queue,no,undetermined,0,0,0,no,0.011950780097524032,no,0.014256882575459639,no,0.013753967722082084,no,0.013324258825760622
498,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Execute the SQL:,no,undetermined,0,0,0,no,0.005600300561141668,no,0.009864474485318096,no,0.00954607254139972,no,0.00919666169719102
499,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//sort the updates by fk,no,undetermined,0,0,0,no,0.02255373523222923,no,0.010498999134493559,no,0.010041384832773864,no,0.009805826091204083
500,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This could also just be true all the time...,no,undetermined,0,0,0,no,0.0074552437393007615,no,0.008516673580790609,no,0.007940862453848264,no,0.007559507608244376
501,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the mapping of entity names to their latest batch numbers.,no,undetermined,0,0,0,no,0.011276393257502225,no,0.013676142185562712,no,0.013238917972989752,no,0.012970302594994773
502,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//chop the last union (all),no,undetermined,0,0,0,no,0.004587253939406649,no,0.00254836817203348,no,0.002476280286863277,no,0.002321097773647908
503,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// note that for sequential scrolling, we make the assumption that // the first persister element is the ""root entity""",no,undetermined,0,0,0,no,0.06828677577304705,no,0.014264514173907589,no,0.01379073090423792,no,0.013313216599093692
504,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//TODO: check this....,no,undetermined,0,0,0,yes,0.9878210186096852,yes,0.9764422630587547,no,0.013764157339632684,no,0.01333946242449304
505,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// for deprecated saveOrUpdateCopy(),no,undetermined,0,0,0,no,0.008487830037152484,no,0.008081383832790752,no,0.007818248978711117,no,0.0075024908941343635
506,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//INITIALIZATION:,no,undetermined,0,0,0,no,0.0027484483601422885,no,0.0029666339783666713,no,0.0029028012458525,no,0.0031988134306241943
507,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// 23000: Check constraint violation: {0} // 23001: Unique index or primary key violation: {0},no,undetermined,0,0,0,no,0.0058051637632222505,no,0.011128938289394631,no,0.011112743481150779,no,0.010735209999848352
508,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the closure of all properties in the entire hierarchy including // subclasses and superclasses of this class,no,undetermined,0,0,0,no,0.009259383672212804,no,0.007587519593146908,no,0.007318428933371423,no,0.00703502304607784
509,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//expressionTerminators.add("",""); // deliberately excluded",no,undetermined,0,0,0,no,0.003461001072699295,no,0.0034653762655894025,no,0.0033942347101016805,no,0.003209710977283024
510,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// subclass discrimination works by assigning particular // values to certain combinations of null primary key // values in the outer join using an SQL CASE,no,undetermined,0,0,0,no,0.016561778222050128,no,0.013857896140437809,no,0.01325032362528431,no,0.012908817937447224
511,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//tokens that close a sub expression //tokens that open a sub expression //tokens that would indicate a sub expression is a boolean expression,no,undetermined,0,0,0,no,0.005416265387229768,no,0.007130528129094171,no,0.0069021806645317655,no,0.006658274988961239
512,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Multi-param numeric dialect functions...,no,undetermined,0,0,0,no,0.15134059477553738,no,0.15844436705764176,no,0.12904016931286624,no,0.13023653758199535
513,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Use theta style (for regression) // Move the node up, after the origin node.",no,undetermined,0,0,0,no,0.004064614798402886,no,0.005704551594442618,no,0.005443506875738047,no,0.005221617330838653
514,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Multi-param date dialect functions...,no,undetermined,0,0,0,no,0.19117341516677908,no,0.20100172982198697,no,0.18244551937431056,no,0.18355275064381174
515,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0029192075517518335,no,0.0019428635406165216,no,0.0019258753864740586,no,0.0018095004858472681
516,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// add the main query,no,undetermined,0,0,0,no,0.008573682995384324,no,0.009857154142053055,no,0.00900009919519004,no,0.008679681813703061
517,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// SQLException support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0033700144354134203,no,0.0043154424558542155,no,0.004233465379849371,no,0.004001075519166386
518,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//add the restriction to the outer select,no,undetermined,0,0,0,no,0.0012961785583907508,no,0.0013980317261875963,no,0.0010522110445248952,no,0.000976353871353012
519,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// bit_length feels a bit broken to me. We have to cast to char in order to // pass when a numeric value is supplied. But of course the answers given will // be wildly different for these two datatypes. 1234.5678 will be 9 bytes as // a char string but will be 8 or 16 bytes as a true numeric. // Jay Nance 2006-09-22,no,undetermined,0,0,0,no,0.050668885120529195,no,0.014260108181206802,no,0.013758653324448283,no,0.013327272563724792
520,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This assumes you will want to ignore any update counts ,no,undetermined,0,0,0,no,0.0013891365066733571,no,0.0015599075278804786,no,0.0017729891166164788,no,0.0016769891526072723
521,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//skip the FROM keyword in params,no,undetermined,0,0,0,no,0.004459209673172686,no,0.002071889934789938,no,0.0020362490250881624,no,0.0019046767820902763
522,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Custom sql,no,undetermined,0,0,0,no,0.0036602458763009592,no,0.0021052595716952883,no,0.0020567741268323666,no,0.0019350200804244338
523,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// return a newly loaded object,no,undetermined,0,0,0,no,0.03825866227889181,no,0.014225571883124032,no,0.013761102731554689,no,0.013318151762692746
524,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// make it circular-reference safe,no,undetermined,0,0,0,no,0.02158509859289796,no,0.011169659571086886,no,0.010877579833263552,no,0.010451568485179637
525,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//Cope with special cases of AND, NOT, ()",no,undetermined,0,0,0,no,0.005056920351603717,no,0.005292816661427807,no,0.005070367320395201,no,0.004849270157638646
526,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// subclass closure properties,no,undetermined,0,0,0,no,0.01074669832814883,no,0.007404261677791036,no,0.007750549409236087,no,0.00754066831397436
527,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// for dialects which are known to not support ANSI-SQL row-value-constructor syntax, // we should mutate the tree.",no,undetermined,0,0,0,no,0.006599668453128877,no,0.014279965111997958,no,0.013791053918762942,no,0.01332790877406863
528,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0029192075517518335,no,0.0019428635406165216,no,0.0019258753864740586,no,0.0018095004858472681
529,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we have the form: trim(from trimSource). //      This is functionally equivalent to trim(trimSource) // EARLY EXIT!!!!,no,undetermined,0,0,0,no,0.0029088607415466918,no,0.007454257983943902,no,0.00710146940200929,no,0.006799270355244923
530,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// SUBCLASSES,no,undetermined,0,0,0,no,0.002990313572909916,no,0.00343705376120156,no,0.0033524353820736964,no,0.0031693762810550653
531,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//need to hydrate it.,no,undetermined,0,0,0,no,0.013223076400879046,no,0.0142466307069297,no,0.013763453995732883,no,0.01331595931269831
532,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//starts with 1, implicitly",no,undetermined,0,0,0,no,0.004348937010397405,no,0.006069118632529209,no,0.006031372656906836,no,0.005800910070889385
533,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// instantiate a new instance,no,undetermined,0,0,0,no,0.006842527113980272,no,0.009286651853632298,no,0.009351932955397371,no,0.0090050847894293
534,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// simple nullability constraint,no,undetermined,0,0,0,no,0.0015565356863202053,no,0.0010695542018123814,no,0.0010002415600554346,no,0.0009245546094899399
535,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//we need to upgrade the lock mode to the mode requested,no,undetermined,0,0,0,no,0.009259622990788885,no,0.009226239399922322,no,0.01010208212786994,no,0.009733429226788702
536,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	register the type of the out param - an Oracle specific type,no,undetermined,0,0,0,no,0.03303588359174213,no,0.014243781547776726,no,0.013776070860699888,no,0.013301865508410497
537,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// look for a proxy,no,undetermined,0,0,0,no,0.0005620107731699335,no,0.0006988369854242972,no,0.0006729952560969282,no,0.0005871575122500603
538,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// features which change between 8i, 9i, and 10g ~~~~~~~~~~~~~~~~~~~~~~~~~~",no,undetermined,0,0,0,no,0.0017721602086346018,no,0.0020136863920264814,no,0.0019793374271781304,no,0.001858895522172726
539,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// evicts don't cascade to uninitialized collections,no,undetermined,0,0,0,no,0.010843573204206683,no,0.010781737117143033,no,0.010475229859436299,no,0.010140234721400179
540,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// features which remain constant across 8i, 9i, and 10g ~~~~~~~~~~~~~~~~~~",no,undetermined,0,0,0,no,0.004465676596439173,no,0.005486437485174054,no,0.005408421921315461,no,0.005169167305381008
541,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// need to treat this as if it where optimistic-lock=""all"" (dirty does *not* make sense); // first we need to locate the ""loaded"" state // // Note, it potentially could be a proxy, so perform the location the safe way...",no,undetermined,0,0,0,no,0.2056733927170574,no,0.18173643815422963,no,0.17809211180335682,no,0.17329423176260897
542,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//( (Column) sc.getTable().getPrimaryKey().getColumnIterator().next() ).getName();,no,undetermined,0,0,0,no,0.027621340240546757,no,0.014272791410371822,no,0.013799825675960192,no,0.013331175272365096
543,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// might happen with a managed connection,no,undetermined,0,0,0,no,0.03930722686903667,no,0.014263134339918507,no,0.013757070375850052,no,0.013342529348554759
544,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// don't need subclass tables, because they can't appear in conditions",no,undetermined,0,0,0,no,0.1600273605235572,no,0.15049898931066405,no,0.14686834915869276,no,0.1495392475320287
545,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// not final-static to avoid possible classcast exceptions if using different oracle drivers.,no,undetermined,0,0,0,no,0.04591497855807974,no,0.01426678056413524,no,0.013747462112528544,no,0.013302918003121241
546,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Make 100% certain that this is called before any subsequent ScheduledUpdate.afterTransactionCompletion()!!,no,undetermined,0,0,0,no,0.009663292536328347,no,0.01052831001040182,no,0.010372072797722735,no,0.010018067125962904
547,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//private List aliases = new ArrayList();,no,undetermined,0,0,0,no,0.005734896358527881,no,0.006108361340989299,no,0.01120599144449047,no,0.010810684882753423
548,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The reason for this is SQL doesn't let you sort by an expression you are // not returning in the result set.,no,undetermined,0,0,0,no,0.05420683643920949,no,0.01426741188949263,no,0.013781557681715762,no,0.013322702953982064
549,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// register resolvers set via Environment property,no,undetermined,0,0,0,no,0.0032569221519796886,no,0.003913552374549013,no,0.0038278199929254286,no,0.003615379383339419
550,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// an existing collection that was either non-empty or uninitialized // is replaced by null or a different collection // (if the collection is uninitialized, hibernate has no way of // knowing if the collection is actually empty without querying the db)",no,undetermined,0,0,0,no,0.04540745186879155,no,0.014278640379195856,no,0.01377694816549197,no,0.013330476525169764
551,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//update all the modified entries,no,undetermined,0,0,0,no,0.0010996118221631428,no,0.0018600959510616639,no,0.0018106294315683642,no,0.0017064320486528872
552,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// special case where we need to force incloude all subclass joins,no,undetermined,0,0,0,no,0.017881481057931185,no,0.013677012748576049,no,0.013460513839688342,no,0.013095848905681008
553,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we did not find a collection element in the result set, so we // ensure that a collection is created with the owner's identifier, // since what we have is an empty collection",no,undetermined,0,0,0,no,0.004141404642837017,no,0.00253630496153134,no,0.0026020065509438296,no,0.002476831025366094
554,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// binary %Stream // character %Stream,no,undetermined,0,0,0,no,0.0002562614974190919,no,0.0006391265938443752,no,0.0006100915204422441,no,0.0005631870446169509
555,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ignore it,no,undetermined,0,0,0,no,0.0003489690046840201,no,0.0004791828875098961,no,0.0004737640273004505,no,0.00043449603121796743
556,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//getDefaultProperties().setProperty(Environment.STATEMENT_BATCH_SIZE, NO_BATCH);",no,undetermined,0,0,0,no,0.001763343175161549,no,0.0020673744164921536,no,0.0020311217193398987,no,0.0019213330710261736
557,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// assumes that types are all of span 1,no,undetermined,0,0,0,no,0.0010422541547859354,no,0.0009036629630779073,no,0.0010853998460309516,no,0.0010127586984184696
558,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// hibernate impelemnts cast in Dialect.java,no,undetermined,0,0,0,no,0.03195304401949409,no,0.014273782916712588,no,0.013781513904665475,no,0.01332700328846645
559,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// this is the root (versioned) table, and we are using version-based // optimistic locking;  if we are not updating the version, also don't // check it (unless this is a ""generated"" version column)!",no,undetermined,0,0,0,no,0.027295630210259617,no,0.013310078902316601,no,0.013786611452454089,no,0.013321686430214976
560,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// aggregate functions shouldn't be registered, right? //registerFunction( ""list"", new StandardSQLFunction(""list"",Hibernate.STRING) ); // stopped on $list",no,undetermined,0,0,0,no,0.013177335617330307,no,0.014233747571462398,no,0.013766881605735477,no,0.013317418749364342
561,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//its the given optional object,no,undetermined,0,0,0,no,0.009728702617708312,no,0.01030435023459879,no,0.009516164989931426,no,0.00917433152114288
562,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the class hierarchy structure,no,undetermined,0,0,0,no,0.015143410156580356,no,0.014264466156112963,no,0.013780640090295311,no,0.013350568725179852
563,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//decide which ResultSet to get the property value from:,no,undetermined,0,0,0,no,0.007717905983331485,no,0.007960942591131843,no,0.007969728228384845,no,0.007618323359365433
564,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// properties of this class, including inherited properties",no,undetermined,0,0,0,no,0.007762119639400881,no,0.0047569930225726245,no,0.004604987057883377,no,0.004302965023915912
565,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// otherwise assume the parent is the the criteria that created us,no,undetermined,0,0,0,no,0.010119619495714818,no,0.014232742098230031,no,0.013770916658449909,no,0.013327825381680843
566,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the closure of all columns used by the entire hierarchy including // subclasses and superclasses of this class,no,undetermined,0,0,0,no,0.008357918065067166,no,0.014251704841512775,no,0.013775046812241046,no,0.0133327156750841
567,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we can go straight to the first required row,no,undetermined,0,0,0,no,0.0021393177640062775,no,0.0022113320076023175,no,0.0021563976867569625,no,0.001976364983137976
568,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// now look up the object we are really interested in! // (this lets us correctly handle proxies and multi-row // or multi-column queries),no,undetermined,0,0,0,no,0.03538794903919369,no,0.014267959961762874,no,0.013766099512866148,no,0.01332260019968174
569,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//before adding to collection!,no,undetermined,0,0,0,no,0.030011221723912553,no,0.014267917263463312,no,0.013774133078615988,no,0.013340103062305052
570,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// discriminator column,no,undetermined,0,0,0,no,0.01045040109545629,no,0.00955816571519191,no,0.0093906284265115,no,0.009023023430608653
571,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Code to handle subclasses of topClass,no,undetermined,0,0,0,no,0.022637269381964878,no,0.014247436176623605,no,0.013758039430174016,no,0.013314030235800802
572,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//INITIALIZATION:,no,undetermined,0,0,0,no,0.0027484483601422885,no,0.0029666339783666713,no,0.0029028012458525,no,0.0031988134306241943
573,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//NONE, because its the requested lock mode, not the actual! ",no,undetermined,0,0,0,no,0.002440341928870918,no,0.0020668968680680497,no,0.002559362735099457,no,0.002416009317703745
574,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//private final Map propertyTableNumbersByName = new HashMap();,no,undetermined,0,0,0,no,0.012192670684656246,no,0.014266783319543732,no,0.013780982723222056,no,0.013316598489381087
575,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// conceivable that the dialect ctor could throw HibernateExceptions, so don't re-wrap",no,undetermined,0,0,0,no,0.013865915479466693,no,0.014254766469491732,no,0.013780015707472771,no,0.013328760228293735
576,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// CLASS + TABLE,no,undetermined,0,0,0,no,0.0005696424721272292,no,0.0006767178768716742,no,0.0006439139792809798,no,0.000596585449546418
577,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// synchronized to avoid multi-thread access issues; defined as method synch to avoid // potential deadlock issues due to nature of code.,no,undetermined,0,0,0,no,0.07484078863587527,no,0.014254209139800814,no,0.013790419802312236,no,0.013319438514330054
578,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// required to exception table // iconst_0 // i,no,undetermined,0,0,0,no,0.0036704387292188136,no,0.005325880282072114,no,0.00505623810619472,no,0.004680560537576342
579,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// for now, just ""re-flatten"" the metamodel since this is temporary stuff anyway (HHH-1907)",no,undetermined,0,0,0,no,0.1900079104683272,no,0.18574702428195747,no,0.1795657976463632,no,0.18172440036696313
580,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// checkcast // cast the bean into a raw bean,no,undetermined,0,0,0,no,0.01144838951885345,no,0.00961371741180261,no,0.009529248809386472,no,0.00913596397160156
581,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// this one only really needed for badly-behaved applications! // (if the TransactionManager has a Sychronization registered, // its a noop) // (actually we do need it for downgrading locks)",no,undetermined,0,0,0,no,0.04507861450948549,no,0.014256564304222428,no,0.01375952621665172,no,0.013328951499779251
582,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// checkcast (case of primitive type) // invokevirtual (case of primitive type),no,undetermined,0,0,0,no,0.002210424780318885,no,0.002413817775944889,no,0.0022902077646495085,no,0.00213837183854757
583,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// at this point we have (drivingSqlAlias) the SQL alias of the driving table // corresponding to the given user alias.  However, the driving table is not // (necessarily) the table against which we want to apply locks.  Mainly, // the exception case here is joined-subclass hierarchies where we instead // want to apply the lock against the root table (for all other strategies, // it just happens that driving and root are the same).",no,undetermined,0,0,0,no,0.049159222864701285,no,0.014276622454785656,no,0.013768514487533638,no,0.01332087496080038
584,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* | this | bean | args | i | raw bean | exception | */,no,undetermined,0,0,0,no,0.009104612591433083,no,0.011157469091562398,no,0.01106230396831212,no,0.010602852788658615
585,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Get the first child to be considered.  Sub-classes may do this differently in order to skip nodes that // are not select expressions (e.g. DISTINCT).,no,undetermined,0,0,0,no,0.006002783696735099,no,0.0077451149047277,no,0.007319132853364336,no,0.006916727288747296
586,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// new // BulkAccessorException,no,undetermined,0,0,0,no,0.0007673851418173427,no,0.0010460410572209196,no,0.0010306381472826695,no,0.0009543885276787981
587,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//""as"" is not in KEYWORDS",no,undetermined,0,0,0,no,2.6454618032661284e-05,no,2.946981381253916e-05,no,2.9017840797721845e-05,no,2.534600779158822e-05
588,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// getfield // get field ""$JAVASSIST_CALLBACK"" defined already",no,undetermined,0,0,0,no,0.005209016092297939,no,0.004259343790219854,no,0.004115139940606312,no,0.00392698867422506
589,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// all DistinctRootEntityResultTransformer are considered equal ~~~~~~~~~~~,no,undetermined,0,0,0,no,0.00017424281267757426,no,0.00033503575192942516,no,0.0003411402888174432,no,0.0003108448801205464
590,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// dup,no,undetermined,0,0,0,no,0.0023813067442933823,no,0.0034630765554825357,no,0.003392165246945921,no,0.0032137619863282594
591,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// todo : move this to SF per HHH-3517; also see HHH-1907 and ComponentMetamodel,no,undetermined,0,0,0,no,0.01325037645668776,no,0.014260932248424719,no,0.013765265067302008,no,0.013323255765510592
592,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// putfield // put field ""$JAVASSIST_CALLBACK"" defined already",no,undetermined,0,0,0,no,0.005209016092297939,no,0.004259343790219854,no,0.004115139940606312,no,0.00392698867422506
593,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Configure the cache to use our TM,no,undetermined,0,0,0,no,0.00977877972336716,no,0.010382831085963863,no,0.010002424171640116,no,0.009571975953549978
594,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* local variables | this | callback | */,no,undetermined,0,0,0,no,0.005587162472243449,no,0.00569349857618388,no,0.005569917333477034,no,0.005389289012586268
595,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// find the batch number associated with the current association, if any.",no,undetermined,0,0,0,no,0.003647239089766304,no,0.003930045248215579,no,0.003961767694706216,no,0.003768714197206745
596,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// invokeinterface,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
597,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we *always* assume an instance with a null // identifier or no identifier property is unsaved!,no,undetermined,0,0,0,no,0.0062651481450664796,no,0.0043577810980892605,no,0.004131290496223593,no,0.003929181961955758
598,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// DDL support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.006927532883602286,no,0.005072580630937288,no,0.004981387994095583,no,0.004719457788542873
599,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// seems to not really... //	public boolean supportsRowValueConstructorSyntax() { //		return true; //	},no,undetermined,0,0,0,no,0.012955267458606352,no,0.014281458551258133,no,0.013774074881828647,no,0.013335078904157128
600,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// below is for Cache' that don't have str in 2007.1 there is str and we register str directly,no,undetermined,0,0,0,no,0.0010573021587423825,no,0.0015003650259426346,no,0.0014631037607132928,no,0.0013660680311360694
601,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0412893831663996,no,0.01425624653847941,no,0.013758522035227466,no,0.013309380176633634
602,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// byte,no,undetermined,0,0,0,no,0.013265081551939202,no,0.014271069535697107,no,0.013765909335796784,no,0.0133325928035011
603,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the column doesnt exist at all.,no,undetermined,0,0,0,no,0.0032289725107871037,no,0.0030744444116516147,no,0.0029940020592496655,no,0.0028237009587487394
604,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// note that %string is deprecated,no,undetermined,0,0,0,no,0.0609112658355582,no,0.014273548119268072,no,0.0137809342585322,no,0.013343502550107715
605,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//If the object is already loaded, return the loaded one",no,undetermined,0,0,0,no,0.021644945468451266,no,0.013919914646186774,no,0.013475866504877226,no,0.013013154672207516
606,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// create new lock that times out immediately,no,undetermined,0,0,0,no,0.005217696121386011,no,0.005281923527774823,no,0.0061456014765977965,no,0.005840424735308775
607,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// convenience methods relating to operations across arrays of types...,no,undetermined,0,0,0,no,0.009639104682058437,no,0.009887783311353577,no,0.009837149779883474,no,0.009583292145427235
608,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we really could refresh the item if it // is not a lock, but it might be slower //return freshTimestamp < txTimestamp",no,undetermined,0,0,0,no,0.0061161051624233865,no,0.008288762114282828,no,0.010818182791045707,no,0.01038512761025841
609,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Due to the complexity in initializing the SelectClause, do not generate one here. // If it is not found; simply return null... // // Also, do not cache since it gets generated well after we are created.",no,undetermined,0,0,0,no,0.07526522607459082,no,0.01425417634254422,no,0.01378119287778608,no,0.01330966772174766
610,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// DISCRIMINATOR,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
611,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// VersionType impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //      Note : simply returns null for seed() and next() as the only known //      application of binary types for versioning is for use with the //      TIMESTAMP datatype supported by Sybase and SQL Server, which //      are completely db-generated values...",no,undetermined,0,0,0,no,0.0934828783174415,no,0.014245551630431945,no,0.013792297480300213,no,0.013302642006148026
612,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // Pre-flushing section // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.005401400277612605,no,0.005287944829566363,no,0.005088672439665898,no,0.004847036961967005
613,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Use the lower case function name. // Remember whether we're in a SELECT clause or not.,no,undetermined,0,0,0,no,0.01119143542061744,no,0.014268786795629899,no,0.013763364232014338,no,0.013329654381084015
614,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// %upper is deprecated,no,undetermined,0,0,0,no,0.02862557606691738,no,0.014270557709819953,no,0.013753793927364609,no,0.013336070851827956
615,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// let this take precedence if defined, since it works for // assigned identifiers",no,undetermined,0,0,0,no,0.007589642064452456,no,0.005676048624801677,no,0.0054240823235309895,no,0.00517784968035681
616,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//throw new UnsupportedOperationException(""Can't write to a readonly object"");",no,undetermined,0,0,0,no,0.008945844316420176,no,0.009038568554203177,no,0.008866763396756185,no,0.008593857972169194
617,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the contract of EntityTuplizer.determineConcreteSubclassEntityName says that returning null // is an indication that the specified entity-name (this.getEntityName) should be used.,no,undetermined,0,0,0,no,0.04034234477959277,no,0.014239771360373413,no,0.013784442735683789,no,0.013328793937208382
618,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// SUBCLASSES,no,undetermined,0,0,0,no,0.002990313572909916,no,0.00343705376120156,no,0.0033524353820736964,no,0.0031693762810550653
619,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// according to both the ANSI-SQL and EJB3 specs, trim can either take // exactly one parameter or a variable number of parameters between 1 and 4. // from the SQL spec: // // <trim function> ::= //      TRIM <left paren> <trim operands> <right paren> // // <trim operands> ::= //      [ [ <trim specification> ] [ <trim character> ] FROM ] <trim source> // // <trim specification> ::= //      LEADING //      | TRAILING //      | BOTH // // If only <trim specification> is omitted, BOTH is assumed; // if <trim character> is omitted, space is assumed",no,undetermined,0,0,0,no,0.0035087430943586606,no,0.014230564635020296,no,0.01379578168673676,no,0.013332562219145697
620,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The syntax used to add a foreign key constraint to a table.,no,undetermined,0,0,0,no,0.004784984530406349,no,0.006549833412978242,no,0.006301641657576637,no,0.0060097285969691275
621,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//note: it is conceptually possible that a UserType could map null to //	  a non-null value, so the following is arguable:",no,undetermined,0,0,0,no,0.05881587121642451,no,0.014239631151364165,no,0.01376926651771651,no,0.013311306894341514
622,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Execute the SQL:,no,undetermined,0,0,0,no,0.005600300561141668,no,0.009864474485318096,no,0.00954607254139972,no,0.00919666169719102
623,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// note: interfaces is assumed to already contain HibernateProxy.class,no,undetermined,0,0,0,no,0.012056472173416278,no,0.007385307248311032,no,0.007211672151586051,no,0.006930862113095843
624,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// identifier-commalist,no,undetermined,0,0,0,no,0.0034369345202053896,no,0.003685583358904859,no,0.0034800739761162774,no,0.003300851240187589
625,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// note: interfaces is assumed to already contain HibernateProxy.class,no,undetermined,0,0,0,no,0.012056472173416278,no,0.007385307248311032,no,0.007211672151586051,no,0.006930862113095843
626,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//assembled state gets put in a new array (we read from cache by value!),no,undetermined,0,0,0,no,0.00357253230419138,no,0.003980434512739629,no,0.003684704899538112,no,0.0035158158671713085
627,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we do not have to worry about queued additions to uninitialized // collections, since they can only occur for inverse collections!",no,undetermined,0,0,0,no,0.008416894668410467,no,0.005450845753087539,no,0.005252498566753589,no,0.004844107699687308
628,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// disassemble named parameters,no,undetermined,0,0,0,no,0.014026133825952138,no,0.008103573876791057,no,0.007226137065144863,no,0.006889391156638837
629,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if not wrappered yet, its dirty (this can't occur, because // we now always call wrap() before getting to here) // return ( ! (obj instanceof PersistentCollection) ) ? //true : searchForDirtyCollections( (PersistentCollection) obj, type );",no,undetermined,0,0,0,no,0.1283407135655083,no,0.11464057244059256,no,0.09707170241992465,no,0.013333204106805264
630,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// again, CCS did not have such a concept; but a reasonable // proximity is to clear the cache after transaction *as long as* // the underlying cache is not JTA aware.",no,undetermined,0,0,0,no,0.007682391493998247,no,0.005999048685677262,no,0.005649462236127853,no,0.005379730769188695
631,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Oracle driver reports to support getGeneratedKeys(), but they only // support the version taking an array of the names of the columns to // be returned (via its RETURNING clause).  No other driver seems to // support this overloaded version.",no,undetermined,0,0,0,no,0.009200749433956549,no,0.013765335330409788,no,0.013303533893726325,no,0.01292876339538304
632,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// again, CCS did not have such a concept; however a reasonable // proximity is to clear the cache.  For non-transaction aware // caches, we will also do a clear at the end of the transaction",no,undetermined,0,0,0,no,0.009320994590011743,no,0.005369762425680914,no,0.005123889527014337,no,0.004908663472812494
633,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// remove all collections for the entity from the session-level cache,no,undetermined,0,0,0,no,0.01898184405484657,no,0.013740603066929164,no,0.013111653408228941,no,0.012779800634240094
634,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// invokeinterface // callback.write*(..),no,undetermined,0,0,0,no,0.0018517175615891002,no,0.0016231096175505332,no,0.0015983966136066357,no,0.0015242551466977778
635,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// moved up from AbstractEntityPersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.14481619768233603,no,0.13672448524730393,no,0.13254371848470897,no,0.13256071405978934
636,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// JOINS,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
637,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If this is an entity and the property is the identifier property, then use getIdentifierType(). //      Note that the propertyName.equals( propertyPath ) checks whether we have a component //      key reference, where the component class property name is the same as the //      entity id property name; if the two are not equal, this is the case and //      we'd need to ""fall through"" to using the property mapping.",no,undetermined,0,0,0,no,0.0698977087823063,no,0.014241248651613773,no,0.013762054512973123,no,0.0133194822778681
638,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// classes mentioned in extends not available - so put it in queue,no,undetermined,0,0,0,no,0.014133926974418167,no,0.013286623652572518,no,0.012781955251229533,no,0.012366497834761379
639,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is Tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0026184208027578183,no,0.0031870031203871533,no,0.0031148527853833174,no,0.002949101549333097
640,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//propertyTableNumbersByName.put( prop.getName(), join );",no,undetermined,0,0,0,no,0.011555207004538388,no,0.014264990894322312,no,0.01378037416516478,no,0.013342618560956141
641,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Needed to bump this up to DotNode, because that is the only thing which currently // knows about the property-ref path in the correct format; it is either this, or // recurse over the DotNodes constructing the property path just like DotNode does // internally",no,undetermined,0,0,0,no,0.142544704775934,no,0.17033765878262233,no,0.15789336212034366,no,0.15806649694615438
642,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Access cached SQL,no,undetermined,0,0,0,no,0.003692524026567464,no,0.003786981503282358,no,0.0036956488941118333,no,0.0035218089976417092
643,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is tuplizer-centric, but is passed a session ~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",no,undetermined,0,0,0,no,0.0036523987118914146,no,0.0038207389788495667,no,0.003748661065948044,no,0.003581670293254886
644,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//figure out which tables need to be fetched,no,undetermined,0,0,0,no,0.07703142761904956,no,0.014252559104593965,no,0.01377857205204315,no,0.013341218149718729
645,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	private final List persisters = new ArrayList();,no,undetermined,0,0,0,no,0.008034897596162978,no,0.010806435242077595,no,0.010302999632128749,no,0.00994840329199155
646,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//figure out which columns are needed,no,undetermined,0,0,0,no,0.0116286446772332,no,0.014264959513950794,no,0.00987288632469088,no,0.009477191728623196
647,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// it is possible for this method to be called during flush processing, // so make certain that we do not accidently initialize an uninitialized proxy",no,undetermined,0,0,0,no,0.020319765674015923,no,0.014250571666542712,no,0.011615247089317117,no,0.010845432410066328
648,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//figure out which formulas are needed,no,undetermined,0,0,0,no,0.10258983694253898,no,0.05194692413899469,no,0.013764232409326038,no,0.013317585804196884
649,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//get em on the second pass!,no,undetermined,0,0,0,no,0.005901626422162047,no,0.004033657716530704,no,0.003881967744015989,no,0.003677335086469704
650,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//render the SQL,no,undetermined,0,0,0,no,0.009990766004201488,no,0.011442655322437706,no,0.011230325250448512,no,0.010881364338255579
651,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// local cache, so we use synchronization",no,undetermined,0,0,0,no,0.008030545948089787,no,0.010206835936929472,no,0.009864611614146097,no,0.009503710680714561
652,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// SQL strings,no,undetermined,0,0,0,no,0.013021687982156424,no,0.01426004669264797,no,0.013772803993131855,no,0.013323221105093916
653,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*public static Object[] clone(Class elementClass, Object[] array) {
		Object[] result = (Object[]) Array.newInstance( elementClass, array.length );
		System.arraycopy(array, 0, result, 0, array.length);
		return result;
	}*/",no,undetermined,0,0,0,no,0.006553197441838694,no,0.00554730618757738,no,0.0054924343780968134,no,0.005254629661426025
654,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// IDENTITY support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.004655838065453289,no,0.012128811533153452,no,0.011942329564856446,no,0.011578237376514266
655,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if there is no resulting row, return null",no,undetermined,0,0,0,no,0.0038334586848208538,no,0.003210472028952307,no,0.0030985301573178076,no,0.0029223855857951286
656,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// *load_1 // each type,no,undetermined,0,0,0,no,0.0029636300132296067,no,0.003804606557003347,no,0.005227040539170582,no,0.005029126633100952
657,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// unfortunately not really safe to normalize this // to 1 as an initial value like we do the others // because we would not be able to control this if // we are using a sequence...,no,undetermined,0,0,0,no,0.05721906167967492,no,0.01426803439838025,no,0.013762948300032685,no,0.013309164382103281
658,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
659,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// select topic, syntax from information_schema.help // where section like 'Function%' order by section, topic // // see also ->  http://www.h2database.com/html/functions.html",no,undetermined,0,0,0,no,0.007154503035186652,no,0.010003558952785215,no,0.009602492720389575,no,0.009258347944628884
660,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The optional SQL string defined in the where attribute,no,undetermined,0,0,0,no,0.00397780521681069,no,0.00386953699841825,no,0.0036808327934731693,no,0.003549395531785387
661,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//pass this as an argument only to avoid double looking,no,undetermined,0,0,0,no,0.006256512889200857,no,0.006205080527038242,no,0.006093263672668528,no,0.00584658740482352
662,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// for version properties marked as being generated, make sure they are ""always"" // generated; aka, ""insert"" is invalid; this is dis-allowed by the DTD, // but just to make sure...",no,undetermined,0,0,0,no,0.017110959502082065,no,0.014228524459933067,no,0.013802136719641879,no,0.013316793440807932
663,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// added this caching as I noticed that getType() is being called multiple times...,no,undetermined,0,0,0,no,0.042683472451269015,no,0.01424759251960193,no,0.013788076724895904,no,0.013335454990901103
664,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//information about lazy properties of this class,no,undetermined,0,0,0,no,0.037349031969524576,no,0.014277546743106257,no,0.013790390664810763,no,0.013332062268707312
665,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If there are any scalars (non-entities) selected, render the select column aliases.",no,undetermined,0,0,0,no,0.006547457976462254,no,0.007199623149937241,no,0.011651187158079057,no,0.011224793170391632
666,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//information about all columns/formulas in class hierarchy,no,undetermined,0,0,0,no,0.006544480254608293,no,0.01426465458274791,no,0.013765435475571075,no,0.013310914114395072
667,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Inner classes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.005171877379709227,no,0.0053552981889077155,no,0.00514369852737123,no,0.004976147500243767
668,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ( (Column) discrim.getColumnIterator().next() ).setType(type);,no,undetermined,0,0,0,no,0.010897882116066113,no,0.011098967712005707,no,0.01190144730840689,no,0.01146812761511018
669,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// saveOrUpdateCopy() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.007227820479986426,no,0.0068302369575258355,no,0.006657399138082261,no,0.0063773954378130385
670,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// dynamic filters attached to the class-level,no,undetermined,0,0,0,no,0.014510125200597248,no,0.014257587590463822,no,0.013802093039664554,no,0.013335154447877126
671,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// the loaded owner will be set to null after the collection is removed, // so capture its value as the affected owner so it is accessible to // both pre- and post- events",no,undetermined,0,0,0,no,0.016631737768272453,no,0.014254123707513557,no,0.013759458922427421,no,0.013328814507837173
672,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.05158855895183377,no,0.01426285738794102,no,0.01377206414062369,no,0.013331191122679146
673,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// assume we are in an auto-commit state,no,undetermined,0,0,0,no,0.002159294003425945,no,0.002123386723448602,no,0.0020492259536172763,no,0.001929340408658184
674,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// CUSTOM SQL,no,undetermined,0,0,0,no,0.0036602458763009592,no,0.0021052595716952883,no,0.0020567741268323666,no,0.0019350200804244338
675,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// cascade first, so that all unsaved objects get their // copy created before we actually copy //cascadeOnMerge(event, persister, entity, copyCache, Cascades.CASCADE_BEFORE_MERGE);",no,undetermined,0,0,0,no,0.016823286745794298,no,0.014270068014582703,no,0.013762406817017257,no,0.013317194906026727
676,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// model.getKey().setType( new Type( model.getIdentifier() ) );,no,undetermined,0,0,0,no,0.02426520001405641,no,0.014255130971976726,no,0.013788389907922602,no,0.013311835705881465
677,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is Tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0026184208027578183,no,0.0031870031203871533,no,0.0031148527853833174,no,0.002949101549333097
678,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The syntax used to add a column to a table,no,undetermined,0,0,0,no,0.009979059179790811,no,0.01426445618085823,no,0.013787867246867695,no,0.013331175559270601
679,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// simple, because we can't have a one-to-one or a collection  // (or even a property-ref) in a composite-element:",no,undetermined,0,0,0,no,0.0038033833400995826,no,0.0027507731875823305,no,0.002415650089334602,no,0.002280791971818307
680,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Completely optional cascading drop clause.,no,undetermined,0,0,0,no,0.010016857034964974,no,0.007604826193002818,no,0.007127896255686401,no,0.006840658595599494
681,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// during deserialization, we need to reconnect all proxies and // collections to this session, as well as the EntityEntry and // CollectionEntry instances; these associations are transient // because serialization is used for different things.",no,undetermined,0,0,0,no,0.07897454086928621,no,0.01424308803079591,no,0.013771710885289692,no,0.013312591211101803
682,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// PROPERTIES,no,undetermined,0,0,0,no,0.005804620994376463,no,0.005156405132770629,no,0.0049524991266087955,no,0.004725739377578479
683,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//sqlResultTypes = ( Type[] ) sqlResultTypeList.toArray( new Type[sqlResultTypeList.size()] );,no,undetermined,0,0,0,no,0.023627409928997478,no,0.014263030671843873,no,0.013776815504640482,no,0.013313141709114008
684,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
685,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// potentialTrimCharacterArgIndex = 1 assumes that a // trim-specification has been specified.  we handle the // exception to that explicitly,no,undetermined,0,0,0,no,0.006417764595070192,no,0.010306830239774809,no,0.013784944502008322,no,0.013347282589924979
686,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// IDENTIFIER,no,undetermined,0,0,0,no,0.0034369345202053896,no,0.003685583358904859,no,0.0034800739761162774,no,0.003300851240187589
687,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// We call getKeyFromResultSet() here so that we can know the // key value upon which to perform the breaking logic.  However, // it is also then called from getRowFromResultSet() which is certainly // not the most efficient.  But the call here is needed, and there // currently is no other way without refactoring of the doQuery()/getRowFromResultSet() // methods",no,undetermined,0,0,0,no,0.4807024092292343,yes,0.5175802817937742,yes,0.5094350137872456,yes,0.5173215512711897
688,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// VERSION,no,undetermined,0,0,0,no,0.013260856177774328,no,0.014237610357017748,no,0.01379062963351357,no,0.013347513698601142
689,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//operations which cascade as far as the collection also cascade to collection elements,no,undetermined,0,0,0,no,0.003999099634163764,no,0.0073471732310974435,no,0.007658034570970272,no,0.007396762919313439
690,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//WHERE STRING,no,undetermined,0,0,0,no,0.00295680190675367,no,0.0033804834766621877,no,0.0034348842877159366,no,0.0032511560799850007
691,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The loop ensures atomicity of the // select + update even for no transaction // or read committed isolation level,no,undetermined,0,0,0,no,0.0024004073978286223,no,0.001610449280644182,no,0.0015526250285109512,no,0.0014485110924212141
692,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// SUBCLASS PROPERTY CLOSURE,no,undetermined,0,0,0,no,0.014739123043387375,no,0.00913495725223127,no,0.00948884324388501,no,0.009180502657044006
693,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// in an effort to avoid concurrent-modification-exceptions (from // potential recursive calls back through here as a result of the // eventual call to PersistentCollection#endRead), we scan the // internal loadingCollections map for matches and store those matches // in a temp collection.  the temp collection is then used to ""drive"" // the #endRead processing.",no,undetermined,0,0,0,no,0.024454835121395225,no,0.01424979638137456,no,0.013752292107536288,no,0.01333335567206572
694,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//before add :-),no,undetermined,0,0,0,no,0.0022048347179757614,no,0.0016784027429774203,no,0.00224188081618006,no,0.00210688983040643
695,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// the configured transaction-factory says it only supports // local callback mode, so no sense attempting to register a // JTA Synchronization",no,undetermined,0,0,0,no,0.025258979828260295,no,0.014253663376299006,no,0.013763716402531045,no,0.013303734243118197
696,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Handle any filters applied to the class level,no,undetermined,0,0,0,no,0.008936217890321287,no,0.0097122677516279,no,0.009269035656294815,no,0.008916010902616765
697,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// sybase driver (jConnect) throwing NPE here in certain // cases, but we'll just handle the general ""unexpected"" case",no,undetermined,0,0,0,no,0.07683628018812032,no,0.014227931015801184,no,0.013754325724722492,no,0.01331589983848304
698,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// only one-to-one is lazy fetched,no,undetermined,0,0,0,no,0.013268206940469374,no,0.012976695078494145,no,0.012656112392126469,no,0.0054890490972325165
699,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// replicate does cascade to uninitialized collections,no,undetermined,0,0,0,no,0.013004305913514978,no,0.014234984423648046,no,0.013758891557038563,no,0.013317581045859046
700,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//note early exit here:,no,undetermined,0,0,0,no,0.009851730953002773,no,0.008447576969000298,no,0.00839580091061771,no,0.007973154111423878
701,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/**
	 * Translates an AST join type (i.e., the token type) into a JoinFragment.XXX join type.
	 *
	 * @param astJoinType The AST join type (from HqlSqlTokenTypes or SqlTokenTypes)
	 * @return a JoinFragment.XXX join type.
	 * @see JoinFragment
	 * @see SqlTokenTypes
	 */",no,undetermined,0,0,0,no,0.40790900257528584,no,0.28180598053750033,no,0.27425461337746543,no,0.2740831889956971
702,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// NOTE: this assumes something about how propertySelectFragment is implemented by the subclass!,no,undetermined,0,0,0,no,0.09925344323930058,no,0.014267491452407237,no,0.013775387064534874,no,0.013344221146899118
703,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//deliberately ignore return value!,no,undetermined,0,0,0,no,0.0012031471427875863,no,0.0016675259902449928,no,0.001813637909104324,no,0.0016958657455134168
704,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//strip leading "", """,no,undetermined,0,0,0,no,0.003376798940762827,no,0.0024469312252226954,no,0.0023773199678261193,no,0.0022330086386811833
705,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if the metadata allowed proxy creation and caller did not request forceful eager loading, // generate a proxy",no,undetermined,0,0,0,no,0.0028742190633582586,no,0.001715334118434812,no,0.0016756585701950249,no,0.0014965437560153683
706,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if there is no resulting row, return null",no,undetermined,0,0,0,no,0.0038334586848208538,no,0.003210472028952307,no,0.0030985301573178076,no,0.0029223855857951286
707,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If this from element is a collection and the path is a collection property (maxIndex, etc.) then // generate a sub-query.",no,undetermined,0,0,0,no,0.005457841007477514,no,0.0034601702234459816,no,0.0032478219614979396,no,0.003104505268545124
708,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//otherwise return the ""hydrated"" state (ie. associations are not resolved)",no,undetermined,0,0,0,no,0.003913771118217086,no,0.004112360455120462,no,0.003933389597642747,no,0.0037471702826432822
709,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The name of the SQL function that transforms a string to lowercase,no,undetermined,0,0,0,no,0.003607346232733861,no,0.005617839660991062,no,0.0055428617771738735,no,0.005330180601422478
710,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//null owner ok??,no,undetermined,0,0,0,no,0.0010293950141224363,no,0.0066658704637740426,no,0.006790791630276459,no,0.006485870939368238
711,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// essentially, if the real session is closed allow any // method call to pass through since the real session // will complain by throwing an appropriate exception; // NOTE that allowing close() above has the same basic effect, //   but we capture that there simply to perform the unbind...",no,undetermined,0,0,0,no,0.021688366007465463,no,0.014264324823091734,no,0.013760081521562582,no,0.013334734026548452
712,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// automatically makes a column with the default name if none is specifed by XML,no,undetermined,0,0,0,no,0.006363297918748908,no,0.005063274373083609,no,0.0048912937114332445,no,0.004684188278536121
713,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// just ignore,no,undetermined,0,0,0,no,0.0008290622643034909,no,0.00118621772129145,no,0.0011463685954127985,no,0.0010654994464550148
714,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this is the exception returned by ReflectHelper.getConstructor() if it cannot // locate an appropriate constructor,no,undetermined,0,0,0,no,0.010759022773056535,no,0.014237259948116513,no,0.013783113279830431,no,0.013319069806128642
715,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// ok in normal Hibernate usage to delete a detached entity; JPA however // forbids it, thus this is a hook for HEM to affect this behavior",no,undetermined,0,0,0,no,0.002955259453674623,no,0.007475601357885033,no,0.006934683300433094,no,0.0066713764837637675
716,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// null sql means that the only lazy properties // are shared PK one-to-one associations which are // handled differently in the Type#nullSafeGet code...,no,undetermined,0,0,0,no,0.04772356782415838,no,0.014253800622878432,no,0.013762640151001647,no,0.013326765582021713
717,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if the property mapping consists of all formulas,  // make it non-updateable",no,undetermined,0,0,0,no,0.013338469741135313,no,0.011538421529771513,no,0.011141329796485026,no,0.010752492025779953
718,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// the user specifically supplied insert=""true"", // which constitutes an illegal combo",no,undetermined,0,0,0,no,0.006082140453102599,no,0.006328047061973505,no,0.005794708620523557,no,0.005369793024478785
719,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if the property mapping consists of all formulas,  // make it insertable",no,undetermined,0,0,0,no,0.01818175384857114,no,0.014254401904125783,no,0.013787326484959322,no,0.013340927185424198
720,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//it might be an unwrapped collection reference! //try to find a wrapper (slowish),no,undetermined,0,0,0,no,0.005525720620022566,no,0.003915587851828577,no,0.003760400688264303,no,0.0035868237711205618
721,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Custom SQL,no,undetermined,0,0,0,no,0.0036602458763009592,no,0.0021052595716952883,no,0.0020567741268323666,no,0.0019350200804244338
722,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//tableName = mappings.getNamingStrategy().propertyToTableName( className, path );",no,undetermined,0,0,0,no,0.0029284515537469132,no,0.007382640390107395,no,0.007156594081946129,no,0.006882395378481002
723,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*package*/,no,undetermined,0,0,0,no,0.0024028778345724696,no,0.0026803190818122666,no,0.0025599410532666095,no,0.002410048974527652
724,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// return,no,undetermined,0,0,0,no,0.0008662229729892083,no,0.001371836346092846,no,0.0012239512111443373,no,0.0011516724250478332
725,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// the entry will be removed after the flush, and will no longer // override the stale snapshot // This is now handled by removeEntity() in EntityDeleteAction //persistenceContext.removeDatabaseSnapshot(key);",no,undetermined,0,0,0,no,0.006016425609207803,no,0.006691033362025509,no,0.005374869280918236,no,0.005155720867307708
726,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//bad cast,no,undetermined,0,0,0,no,0.05388100158696931,no,0.014256815818569808,no,0.013774489674280025,no,0.013330755082339506
727,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*ArrayList list = new ArrayList();
			list.addAll( getKey().getConstraintColumns() );
			list.addAll( getIndex().getConstraintColumns() );
			getCollectionTable().createUniqueKey(list);*/",no,undetermined,0,0,0,no,0.009302505447089368,no,0.009555389167037128,no,0.009148090368176478,no,0.008772535002486028
728,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//property-refs for associations defined on a //component are not supported, so no need to slice",no,undetermined,0,0,0,no,0.02887260889179437,no,0.014269300206657962,no,0.013785881450153891,no,0.013334936714003742
729,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we have an embedded composite identifier,no,undetermined,0,0,0,no,0.009323460544940095,no,0.004656849223505319,no,0.004370758376320624,no,0.004158587487158865
730,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if there is no property-ref, assume the join //is to the subclass table (ie. the table of the //subclass that the association belongs to)",no,undetermined,0,0,0,no,0.04144509725114073,no,0.014251594554914362,no,0.013765004546879827,no,0.013330954147666298
731,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//stops flush being called multiple times if this method is recursively called,no,undetermined,0,0,0,no,0.05637738953914678,no,0.01426644374728738,no,0.013774980233621776,no,0.013330697498092785
732,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Create a new FROM node for the referenced class.,no,undetermined,0,0,0,no,0.005821145277239027,no,0.008232751945848583,no,0.008673757898858925,no,0.00838742648323681
733,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Custom sql,no,undetermined,0,0,0,no,0.0036602458763009592,no,0.0021052595716952883,no,0.0020567741268323666,no,0.0019350200804244338
734,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// performance op to avoid the array search,no,undetermined,0,0,0,no,0.005330198658799694,no,0.008991589870782501,no,0.007937539520806424,no,0.007549294825978893
735,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// now get an existing proxy for each row element (if there is one),no,undetermined,0,0,0,no,0.0003733494583519057,no,0.0003442260683975666,no,0.0003314810320424948,no,0.00028918817562343394
736,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ORPHAN DELETE (used for programmer error detection),no,undetermined,0,0,0,no,0.016246995596559934,no,0.014249878741913295,no,0.013773834229591948,no,0.013345168111969789
737,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// empty means no scoping,no,undetermined,0,0,0,no,0.0014474178687872174,no,0.0015020747402323296,no,0.0014693054790876224,no,0.0013741828467450999
738,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//Enable for HHH-440, which we don't like:",no,undetermined,0,0,0,no,0.026339268307781057,no,0.014269249943985849,no,0.013754505175717061,no,0.01332715507643705
739,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*(LockMode) anything*/,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
740,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//this.forceCacheRefresh = forceCacheRefresh;,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
741,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// this is a collection initializer, so we must create a collection // for each of the passed-in keys, to account for the possibility // that the collection is empty and has no rows in the result set",no,undetermined,0,0,0,no,0.014945279343914167,no,0.007895973024147065,no,0.007813346650162529,no,0.00762293362958081
742,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// an ""embedded"" component (composite ids and unique) // note that this does not handle nested components",no,undetermined,0,0,0,no,0.07474078887939063,no,0.014259498158764717,no,0.013750137387524048,no,0.013310240645988548
743,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// and perform the load,no,undetermined,0,0,0,no,0.005860932713133282,no,0.0046220091404252876,no,0.004623082610954619,no,0.0043994789891087915
744,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ALIASES,no,undetermined,0,0,0,no,0.0028048486377242245,no,0.0028226940770715698,no,0.009412765800628928,no,0.009032304071597835
745,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// cache these since they are stateless // this one could even be static...,no,undetermined,0,0,0,no,0.007120063276946947,no,0.007732055774309275,no,0.0074501853764995015,no,0.007141815121271568
746,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// a nested composite element,no,undetermined,0,0,0,no,0.010896869866221098,no,0.0059177291743227394,no,0.0055236244838685845,no,0.005283702462543543
747,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is tuplizer-centric, but is passed a session ~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",no,undetermined,0,0,0,no,0.0036523987118914146,no,0.0038207389788495667,no,0.003748661065948044,no,0.003581670293254886
748,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Must occur after resolving identifiers!,no,undetermined,0,0,0,no,0.006004850245074586,no,0.006475374605564143,no,0.006187172457834532,no,0.005536821046702604
749,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Get the persister for the _subclass_,no,undetermined,0,0,0,no,0.026910987107764264,no,0.012166250898335543,no,0.011603723848549291,no,0.011179192346205484
750,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aliases for composite-id's,no,undetermined,0,0,0,no,0.013219457808051513,no,0.007868830351736814,no,0.013762432461917065,no,0.013328930769256503
751,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//		SQLQueryParser parser = new SQLQueryParser( //				sqlQuery, //				processor.getAlias2Persister(), //				processor.getAlias2Return(), //				aliases, //				collAliases, //				collPersisters, //				suffixes, //				collSuffixes //		); // //		sql = parser.process(); // //		namedParameterBindPoints = parser.getNamedParameters();",no,undetermined,0,0,0,no,0.009303206003995779,no,0.008878901512161775,no,0.01152840155746969,no,0.010941285171180563
752,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Fetch embedded identifiers propertynames from the ""virtual"" identifier component",no,undetermined,0,0,0,no,0.0085468798557247,no,0.005379443557108206,no,0.005141063254402323,no,0.004793235294030021
753,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we need to grab the version value from the entity, otherwise // we have issues with generated-version entities that may have // multiple actions queued during the same flush",no,undetermined,0,0,0,no,0.06054810367463911,no,0.014265217106131408,no,0.013769037400552095,no,0.013326417953512757
754,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// embedded composite ids ( alias.idname1, alias.idname2 )",no,undetermined,0,0,0,no,0.018220085391988414,no,0.012346124106520352,no,0.011338294680272533,no,0.010959878485899629
755,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// NOTE: we need to do the wrap here even if its not ""dirty"", // because collections need wrapping but changes to _them_ // don't dirty the container. Also, for versioned data, we // need to wrap before calling searchForDirtyCollections",no,undetermined,0,0,0,no,0.14062120377364715,no,0.08447219015567256,no,0.013790932963761602,no,0.01332050188487725
756,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// TODO: skip formulas?,no,undetermined,0,0,0,yes,0.9829165816024873,no,0.014258460918128763,no,0.013752193149695176,no,0.013325876920387374
757,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// GUID support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.006927532883602286,no,0.005072580630937288,no,0.004981387994095583,no,0.004719457788542873
758,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// invokeinterface // invoke Enabled.getInterceptFieldCallback(),no,undetermined,0,0,0,no,0.0031358821224662264,no,0.0035301173245501885,no,0.0034265895790406673,no,0.003234086034714135
759,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// hibernate seems to ignore this type...,no,undetermined,0,0,0,no,0.0017789897933883658,no,0.006758272949118009,no,0.006731585539649584,no,0.006425216981526676
760,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//don't need filters for the static loaders,no,undetermined,0,0,0,no,0.01771377636830051,no,0.014257528998766611,no,0.01378197304244521,no,0.01333776010113066
761,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// The user requested a ""greater"" (i.e. more restrictive) form of // pessimistic lock",no,undetermined,0,0,0,no,0.003371689794696192,no,0.0036741692514860387,no,0.00418761743169613,no,0.003995597673717275
762,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//do two passes, for collection property-ref!",no,undetermined,0,0,0,no,0.015470956692127235,no,0.014258223190874207,no,0.013780965380411127,no,0.013330729960090578
763,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*public boolean dropTemporaryTableAfterUse() {
		//we have to, because postgres sets current tx
		//to rollback only after a failed create table
		return true;
	}*/",no,undetermined,0,0,0,no,0.008205781224839528,no,0.0069175786140991905,no,0.006609735794733383,no,0.006229503233020457
764,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// select the correct row by either pk or rowid,no,undetermined,0,0,0,no,0.015706826113403734,no,0.01423957310099317,no,0.013782064454256355,no,0.013332754166085464
765,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//			optimizer = getFactory().getSettings().getBytecodeProvider().getReflectionOptimizer( //					mappedClass, getterNames, setterNames, propTypes //			);",no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
766,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//TODO: eventually, rowIdName[j]",no,undetermined,0,0,0,yes,0.9918449940070494,no,0.014249429662759347,no,0.013772226496757413,no,0.013302327674245476
767,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//include the discriminator and class-level where, but not filters",no,undetermined,0,0,0,no,0.003784144686913902,no,0.005111496828443884,no,0.004782371141567186,no,0.004546636572932851
768,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//lazy = !join;,no,undetermined,0,0,0,no,0.016037916989544335,no,0.010248535843097331,no,0.010137163008121534,no,0.006538829246110747
769,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//not absolutely necessary, but helps for some //equals()/hashCode() implementations",no,undetermined,0,0,0,no,0.0247049773629896,no,0.014231415133153898,no,0.013751581080845798,no,0.013305520594572384
770,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// this is a property of the table, which we are updating",no,undetermined,0,0,0,no,0.004091411898060528,no,0.002368593457306791,no,0.002326643605490318,no,0.0021943420132549333
771,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if the hibernate-mapping did not specify a schema/catalog, use the defaults //specified by properties - but note that if the schema/catalog were specified //in hibernate-mapping, or as params, they will already be initialized and //will override the values set here (they are in identifierGeneratorProperties)",no,undetermined,0,0,0,no,0.014985898860318756,no,0.014224212679323554,no,0.013772320507226769,no,0.013324935406466534
772,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This should only be possible if the caches are constructor injected ,no,undetermined,0,0,0,no,0.015181418966284168,no,0.01424823754035463,no,0.013746143157061293,no,0.013332995281192585
773,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// transactions marked for rollback-only cause some TM impls to throw exceptions,no,undetermined,0,0,0,no,0.02156014568921419,no,0.014276231921003203,no,0.013784265477198455,no,0.013337718778036526
774,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// special shortcut for id properties, skip the join! // this must only occur at the _end_ of a path expression",no,undetermined,0,0,0,no,0.014582466363589622,no,0.012197645479011556,no,0.011824743096305379,no,0.011021140589222407
775,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// IMPL NOTE : due to the delayed population of setters (setters cached // 		for performance), we really cannot pro0perly define equality for // 		this transformer",no,undetermined,0,0,0,no,0.03969800845229816,no,0.014266487378464114,no,0.013782295245629536,no,0.013325867786660879
776,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ( (Column) ( (SimpleValue) ic.getIndex() ).getColumnIterator().next() // ).setNullable(false);,no,undetermined,0,0,0,no,0.006820546827043978,no,0.004187342794791843,no,0.004102872672234775,no,0.003911646258502565
777,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we have a mapped identifier property and the root of // the incoming property path matched that identifier // property,no,undetermined,0,0,0,no,0.00853689549178204,no,0.01019565201013837,no,0.010510354728216695,no,0.010168025654799264
778,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// contained elements:,no,undetermined,0,0,0,no,0.004371286447762735,no,0.004014206017672619,no,0.003917419946467674,no,0.003698337948402504
779,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//        },no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
780,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// for non-inverse one-to-many, with a not-null fk, add a backref!",no,undetermined,0,0,0,no,0.012438685488132904,no,0.008092668813570065,no,0.00778051185187839,no,0.007473686082334914
781,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//to stop the class from being unloaded,no,undetermined,0,0,0,no,0.0064993931509782395,no,0.012492439822893232,no,0.011927426783671561,no,0.011565407187958732
782,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// mappings might contain either the ""raw"" extends name (in the case of // an entity-name mapping) or a FQN (in the case of a POJO mapping).",no,undetermined,0,0,0,no,0.005791147782186929,no,0.006802249004255151,no,0.006327968465178246,no,0.0060630500549097395
783,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// for objects that came in via update(),no,undetermined,0,0,0,no,0.0021276116156224555,no,0.0032217124647226656,no,0.0031095512118782943,no,0.002935898248908959
784,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//use dialect default properties,no,undetermined,0,0,0,no,0.014391488556772076,no,0.014243629715006206,no,0.013786927721804176,no,0.013336521208266375
785,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// increment the version number (if necessary),no,undetermined,0,0,0,no,0.015419565361879784,no,0.014275448274357328,no,0.013795677813201148,no,0.013346945409071172
786,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The cache provider is needed when we either have second-level cache enabled // or query cache enabled.  Note that useSecondLevelCache is enabled by default,no,undetermined,0,0,0,no,0.01102540718681025,no,0.011549498819436062,no,0.010849483666643832,no,0.010277637800585765
787,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//information about all properties in class hierarchy,no,undetermined,0,0,0,no,0.01932320040973144,no,0.013771283783219923,no,0.01319928084813417,no,0.013334487684062727
788,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//		String provider = properties.getProperty( Environment.BYTECODE_PROVIDER ); //		log.info( ""Bytecode provider name : "" + provider ); //		BytecodeProvider bytecodeProvider = buildBytecodeProvider( provider ); //		settings.setBytecodeProvider( bytecodeProvider );",no,undetermined,0,0,0,no,0.003652949789145846,no,0.004765908576379427,no,0.00460527268038438,no,0.0043836599176323085
789,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0035388749104927064,no,0.001483154785599581,no,0.0015054905312869773,no,0.0014051118991224509
790,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we are using ""all"" or ""dirty"" property-based optimistic locking",no,undetermined,0,0,0,no,0.035691150676073126,no,0.014233594927023325,no,0.013761469135468123,no,0.01332501678157289
791,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// orphans should be deleted during save/update,no,undetermined,0,0,0,no,0.0028999238181654586,no,0.01035281503122623,no,0.010314973722815738,no,0.009928868782728443
792,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// maybe a concrete SQLpropertyresult type, but Map is exactly what is required at the moment",no,undetermined,0,0,0,no,0.1110754677531084,no,0.10633049777471706,no,0.09743572102504741,no,0.013326531134542107
793,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// for some reason the antlr.CommonAST initialization routines force // this method to get called twice.  The first time with an empty string,no,undetermined,0,0,0,no,0.008297729819778853,no,0.012495175203162815,no,0.011957813530489865,no,0.012068940782597314
794,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// do a check,no,undetermined,0,0,0,no,0.002366121453952985,no,0.0031112760514768875,no,0.00016522256877326487,no,0.000149585977923239
795,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//			sqlAliasSuffixes[i] = element.getColumnAliasSuffix();,no,undetermined,0,0,0,no,0.0009115149065893579,no,0.0009290341020025774,no,0.0008941128827420959,no,0.000828734443592016
796,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	void setShowSqlEnabled(boolean b) { //		showSql = b; //	} // //	void setFormatSqlEnabled(boolean b) { //		formatSql = b; //	},no,undetermined,0,0,0,no,0.0002891544098722379,no,0.000395317856881463,no,0.00037407457330642047,no,0.00034478541027853864
797,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//materialize associations (and initialize the object) later,no,undetermined,0,0,0,no,0.006595965377015082,no,0.010349712642944014,no,0.010102989041394604,no,0.009821290650361294
798,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	private ComponentTuplizerFactory componentTuplizerFactory; todo : HHH-3517 and HHH-1907,no,undetermined,0,0,0,yes,0.9879065138605888,no,0.0022609627121119276,no,0.0021301358513127,no,0.0019948084158206082
799,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//fetch=""join"" overrides default laziness //fetch=""join"" overrides default laziness",no,undetermined,0,0,0,no,0.0044778628137181,no,0.0020708803410551713,no,0.0020385369334615204,no,0.0018687479145703591
800,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// drop them in reverse order in case db needs it done that way...,no,undetermined,0,0,0,no,0.04552160281973252,no,0.014272197837561892,no,0.013783250153329223,no,0.01330488372296919
801,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// This check is needed since processing leaves the cursor // after the last physical row for the current logical row; // thus if we are after the last physical row, this might be // caused by either: //      1) scrolling to the last logical row //      2) scrolling past the last logical row // In the latter scenario, the previous logical row // really is the last logical row. // // In all other cases, we should process back two // logical records (the current logic row, plus the // previous logical row).",no,undetermined,0,0,0,no,0.005556147523882386,no,0.006247133732095316,no,0.005216269698996807,no,0.004940206892946942
802,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// the owning entity may have been deleted and its identifier unset due to // identifier-rollback; in which case, try to look up its identifier from // the persistence context",no,undetermined,0,0,0,no,0.005351297709819073,no,0.004618956111226729,no,0.004392403385045711,no,0.004173069024013812
803,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// build an array with indices equal to the total number // of actual returns in the result Hibernate will return // for this query (scalars + non-scalars),no,undetermined,0,0,0,no,0.008998069192616037,no,0.012130093482162123,no,0.011663645789230806,no,0.011320542592094947
804,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	public ComponentTuplizerFactory getComponentTuplizerFactory() { //		return componentTuplizerFactory; //	},no,undetermined,0,0,0,no,0.007100108386456736,no,0.007622715674663459,no,0.0072916399072507545,no,0.0070315119675980736
805,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Mckoi has no known variation of a ""SELECT ... FOR UPDATE"" syntax...",no,undetermined,0,0,0,no,0.00317884835584486,no,0.005313635391457084,no,0.005093300591133912,no,0.004856724733608821
806,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// it is or was referenced _somewhere_,no,undetermined,0,0,0,no,0.002191315078439743,no,0.0037536736074382233,no,0.00426729550743373,no,0.004056698915541978
807,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// should be ok performance-wise to generate new delegate instances for each // request since these are locally stack-scoped.  Besides, it makes the code // much easier to read than the old TransactionHelper stuff...",no,undetermined,0,0,0,no,0.049321997570302804,no,0.014272604276210831,no,0.013774814362354587,no,0.013306676571845906
808,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// nothing to do; even if the operand is a parameter, no way we could // infer an appropriate expected type here",no,undetermined,0,0,0,no,0.16446386568352367,no,0.1805675721576677,no,0.16359384513779726,no,0.16792973287782972
809,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the root of the incoming property path matched one // of the embedded composite identifier properties,no,undetermined,0,0,0,no,0.009107081080978203,no,0.008653056746326293,no,0.008346353633959054,no,0.008040589958227705
810,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// add normal properties,no,undetermined,0,0,0,no,0.002676732906428037,no,0.0029138451070589676,no,0.002728307829009148,no,0.002581952191963527
811,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.007300964074651916,no,0.014279917751328334,no,0.013759547530786924,no,0.013332739932731406
812,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// add the discriminator,no,undetermined,0,0,0,no,0.0022048347179757614,no,0.0016784027429774203,no,0.00224188081618006,no,0.00210688983040643
813,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// handles arrays and newly instantiated collections,no,undetermined,0,0,0,no,0.004805145980367462,no,0.0018442464444344106,no,0.00170502237347444,no,0.0017029019143019349
814,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if either its role changed,",no,undetermined,0,0,0,no,0.004926758007905712,no,0.004726519007755604,no,0.0038359542693906313,no,0.0036220516714282865
815,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//noncritical, swallow and let the other propagate!",no,undetermined,0,0,0,no,0.0021298048216307503,no,0.0021892071639298435,no,0.0021075452810805965,no,0.0019745356838721615
816,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we will need to create new entries,no,undetermined,0,0,0,no,0.011491159405741235,no,0.014250504140776166,no,0.013786969896960268,no,0.013318773970615354
817,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this piece is needed for usage in select clause,no,undetermined,0,0,0,no,0.004953848115249002,no,0.004225247715742432,no,0.004011982167532154,no,0.003807817823030407
818,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// no-op. We don't own the cache so we shouldn't stop it.,no,undetermined,0,0,0,no,0.010777513558696866,no,0.0116371091540663,no,0.01039997714063417,no,0.009899777803361773
819,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// key is an entity involved with the operation performed by the listener; // value can be either a copy of the entity or the entity itself,no,undetermined,0,0,0,no,0.0013370970942209552,no,0.001482763689915566,no,0.0013713184946079864,no,0.0012916259329169269
820,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Get the names of the columns used to link between the collection // owner and the collection elements.,no,undetermined,0,0,0,no,0.011752646362114292,no,0.014258924861973669,no,0.013776806495510389,no,0.0133241223489962
821,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//let's assume that there is only one lazy fetch group, for now!",no,undetermined,0,0,0,no,0.011934445851135997,no,0.007141931975305099,no,0.006968554358818446,no,0.004554528258440701
822,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// more specifically : ""? [op] datetime"" //      1) if the operator is MINUS, the param needs to be of //          some datetime type //      2) if the operator is PLUS, the param needs to be of //          some numeric type",no,undetermined,0,0,0,no,0.13507609785232152,no,0.10330931016644045,no,0.026755047722934498,no,0.013326653451605277
823,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// don't even bother trying to read any further,no,undetermined,0,0,0,no,0.011169134959157752,no,0.006219002636939346,no,0.00609815259962151,no,0.005831486893238086
824,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// add normal properties,no,undetermined,0,0,0,no,0.002676732906428037,no,0.0029138451070589676,no,0.002728307829009148,no,0.002581952191963527
825,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// prepend value and type list with null for any positions before the wanted position.,no,undetermined,0,0,0,no,0.01759174580841199,no,0.014091256023799749,no,0.01330680361585442,no,0.012798827806157818
826,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//+ ""_"" + referencedColumnName not used for backward compatibility",no,undetermined,0,0,0,no,0.010454638490340824,no,0.014245284867733953,no,0.013783524355032148,no,0.013325355948950467
827,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// static helper methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.004217487631388486,no,0.0042744392318522706,no,0.003984752883278893,no,0.003781766869605623
828,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// add the discriminator,no,undetermined,0,0,0,no,0.0022048347179757614,no,0.0016784027429774203,no,0.00224188081618006,no,0.00210688983040643
829,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Base Expectation impls ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0017893399779612149,no,0.006661049307883321,no,0.00668787376228542,no,0.0063983360407547304
830,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this property belongs on the table and is to be inserted,no,undetermined,0,0,0,no,0.047157968997955574,no,0.014233422080757636,no,0.01376475222073032,no,0.01331886477626878
831,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// need to extract the component values and check for subtype replacements...,no,undetermined,0,0,0,no,0.05943016912298597,no,0.01423038509916732,no,0.013758769203248302,no,0.013324266338018862
832,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// add the primary key,no,undetermined,0,0,0,no,0.0033928716375522367,no,0.003515336472708223,no,0.003465099483514064,no,0.0032872585599586085
833,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// note that for sequential scrolling, we make the assumption that // the first persister element is the ""root entity""",no,undetermined,0,0,0,no,0.06828677577304705,no,0.014264514173907589,no,0.01379073090423792,no,0.013313216599093692
834,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Impl Note: allows multiple collection fetches as long as the // entire fecthed graph still ""points back"" to a single // root entity for return",no,undetermined,0,0,0,no,0.06965083839265374,no,0.014274755823248908,no,0.013782634234881224,no,0.013328486879000657
835,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//		registerColumnType( Types.BLOB, 16777215, ""mediumblob"" ); //		registerColumnType( Types.BLOB, 65535, ""blob"" );",no,undetermined,0,0,0,no,0.0035824040002924115,no,0.014261707823882948,no,0.013761607423215033,no,0.013327950388288528
836,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// delegate already handles PK columns,no,undetermined,0,0,0,no,0.000646111774656059,no,0.0009828070537219193,no,0.00096872426651377,no,0.0009062114685958708
837,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// properties of this class, including inherited properties",no,undetermined,0,0,0,no,0.007762119639400881,no,0.0047569930225726245,no,0.004604987057883377,no,0.004302965023915912
838,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//ie. e.status==DELETED,no,undetermined,0,0,0,no,0.006266713071497821,no,0.014258325773405049,no,0.013786771360945218,no,0.013322480784212217
839,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// kept for backward compatibility until after the 3.1beta5 release of HA,no,undetermined,0,0,0,no,0.012455394025292084,no,0.014261390825456627,no,0.013779243481290735,no,0.0133240917690556
840,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// legacy behavior, apply the bridge...",no,undetermined,0,0,0,no,0.011229463311697632,no,0.01427527494170436,no,0.013769547571274035,no,0.013346839412613568
841,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if an exception occurs during flush, user must call rollback()",no,undetermined,0,0,0,no,0.004082261310011911,no,0.0021588352600374386,no,0.001579641028355335,no,0.0014689608846328323
842,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Turn off includeSubclasses on all FromElements.,no,undetermined,0,0,0,no,0.00982150385525263,no,0.014259748712617946,no,0.013782059757026599,no,0.0133404200571514
843,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// can't just return null here, since that would // cause an owning component to become null",no,undetermined,0,0,0,no,0.027149060787387352,no,0.014278717758817701,no,0.013762821414437904,no,0.013341042782472518
844,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the object is transient or detached,no,undetermined,0,0,0,no,0.015680616347096856,no,0.011384405135091804,no,0.010904685085705856,no,0.010499508671658785
845,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Now update only the tables with dirty properties (and the table with the version number),no,undetermined,0,0,0,no,0.025752048768270808,no,0.014251228014432772,no,0.013793883865051306,no,0.013345279715860308
846,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Render the SQL query,no,undetermined,0,0,0,no,0.010870327374258318,no,0.011337767188281483,no,0.010386500543814427,no,0.010064993833125962
847,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// We must return a valid RDMS/RSA command from this method to // prevent RDMS/RSA from issuing *ERROR 400,no,undetermined,0,0,0,no,0.019014959075698293,no,0.014253978191251343,no,0.013780141547497396,no,0.013326063445345197
848,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Write the values of fields onto the prepared statement - we MUST use the state at the time the // insert was issued (cos of foreign key constraints). Not necessarily the object's current state,no,undetermined,0,0,0,no,0.0010283439262421612,no,0.001545503342605036,no,0.0015040189078663253,no,0.0014131014931234626
849,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// registerColumnType(Types.VARBINARY, ""CHARACTER($l)""); // registerColumnType(Types.BLOB, ""CHARACTER($l)"" );  // For use prior to CP 11.0 // registerColumnType(Types.CLOB, ""CHARACTER($l)"" );",no,undetermined,0,0,0,no,0.0035125681972588674,no,0.014254887082028787,no,0.013779197450419164,no,0.01333199372093225
850,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// TODO : shouldnt inserts be Expectations.NONE?,no,undetermined,0,0,0,yes,0.8522670325977192,yes,0.817556040819722,yes,0.8141121445217331,yes,0.8233243989257515
851,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//a proxy cannot be transient and it breaks ForeignKeys.isTransient,no,undetermined,0,0,0,no,0.010210776782737732,no,0.012255028571135338,no,0.012000509443741352,no,0.011088237341048331
852,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//don't bother trying to update, we know there is no row there yet",no,undetermined,0,0,0,no,0.06104961483690924,no,0.014227411163953369,no,0.013777276793281456,no,0.013308489264272333
853,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This is the root level node. // Generate an explicit from clause at the root.,no,undetermined,0,0,0,no,0.006756335044225493,no,0.005826452278851649,no,0.005440286466115764,no,0.005201307682073835
854,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// CHECK,no,undetermined,0,0,0,no,0.002366121453952985,no,0.0031112760514768875,no,0.00016522256877326487,no,0.000149585977923239
855,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// actual cache of the entries.  soft references are used for both the keys and the // values here since the values pertaining to the MRU entries are kept in a // seperate hard reference cache (to avoid their enqueuement/garbage-collection).,no,undetermined,0,0,0,no,0.0179582797222578,no,0.011874835542956385,no,0.01127613593557064,no,0.01100089464610586
856,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if all fields are null, we might need to delete existing row",no,undetermined,0,0,0,no,0.009948372501914517,no,0.008626546577778955,no,0.008155202587612754,no,0.007872372654620388
857,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//stops flush being called multiple times if this method is recursively called,no,undetermined,0,0,0,no,0.05637738953914678,no,0.01426644374728738,no,0.013774980233621776,no,0.013330697498092785
858,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//note: updates to joined tables can't be batched...,no,undetermined,0,0,0,no,0.02253332172123139,no,0.014248165725577178,no,0.013747803895372957,no,0.01333944539519331
859,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// String Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.006572168595123632,no,0.006590993994065632,no,0.0063864625916277154,no,0.006082435876018704
860,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// starting index,no,undetermined,0,0,0,no,0.004821480591498368,no,0.008038192581883723,no,0.00787964634931219,no,0.007634683158364571
861,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// object have been loaded with setReadOnly(true); HHH-2236,no,undetermined,0,0,0,no,0.02409773241808922,no,0.01424247261134034,no,0.013771373230758855,no,0.013335707524971653
862,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/**
	 * Build a ResultSetMappingDefinition given a containing element for the ""return-XXX"" elements
	 *
	 * @param resultSetElem The element containing the return definitions.
	 * @param path No clue...
	 * @param mappings The current processing state.
	 * @return The description of the mappings...
	 */",no,undetermined,0,0,0,no,0.26392173247824446,no,0.2968694829891914,no,0.28256049962872853,no,0.2870490841858899
863,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	private List collectionOwnerAliases = new ArrayList(); //	private List collectionAliases = new ArrayList(); //	private List collectionPersisters = new ArrayList(); //	private List collectionResults = new ArrayList();,no,undetermined,0,0,0,no,0.007079670516530263,no,0.0078102471849254155,no,0.007529597213380487,no,0.0072284291040422225
864,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Write any appropriate versioning conditional parameters,no,undetermined,0,0,0,no,0.021249600942265308,no,0.014252366691037448,no,0.01377540247721186,no,0.013340462840527346
865,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//check if the detached object being merged is the parent,no,undetermined,0,0,0,no,0.005633186527524888,no,0.007578880145241076,no,0.007028938093062653,no,0.00673338689662633
866,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Render the SQL query,no,undetermined,0,0,0,no,0.010870327374258318,no,0.011337767188281483,no,0.010386500543814427,no,0.010064993833125962
867,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// determine if the collection elements are entities...,no,undetermined,0,0,0,no,0.013919090157183962,no,0.01424969526329077,no,0.013764876070855804,no,0.01332092124944869
868,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Do the key. The key is immutable so we can use the _current_ object state - not necessarily // the state at the time the delete was issued,no,undetermined,0,0,0,no,0.002234777323280348,no,0.002385925520072952,no,0.002273671006566637,no,0.002149582485298111
869,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Let return-propertys override whatever the persister has for aliases.,no,undetermined,0,0,0,no,0.009312382642973271,no,0.005894444213736685,no,0.009910959052377868,no,0.009322972330757994
870,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// We should use the _current_ object state (ie. after any updates that occurred during flush),no,undetermined,0,0,0,no,0.010700566375175732,no,0.0076350094318621085,no,0.005498862927537721,no,0.005305176675799837
871,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// might need to run a different filter entirely after the flush // because the collection role may have changed,no,undetermined,0,0,0,no,0.11518174342927194,no,0.07370197257852835,no,0.01375287055749014,no,0.013335623841010821
872,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// amazingly, these two will work because AbstractCollection // uses iterator() to fill the array",no,undetermined,0,0,0,no,0.11694624710920391,no,0.09436549136208809,no,0.013759851871864348,no,0.013315871385842979
873,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// can't cache this stuff either (per-invocation) // we are given a map of user-alias -> lock mode // create a new map of sql-alias -> lock mode,no,undetermined,0,0,0,no,0.027884802142143547,no,0.014259229280130388,no,0.013801533051610554,no,0.01332762694281799
874,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//note: dirtyFields==null means we had no snapshot, and we couldn't get one using select-before-update //	  oldFields==null just means we had no snapshot to begin with (we might have used select-before-update to get the dirtyFields)",no,undetermined,0,0,0,no,0.011968636074103565,no,0.014271251801673211,no,0.01377996712734482,no,0.013328561140484396
875,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// loop through all the associations of the current entity and make sure that they are processed // before the current batch number,no,undetermined,0,0,0,no,0.008007853075056925,no,0.010101417749761218,no,0.010121253335225336,no,0.00983553368114137
876,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ParameterContainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.008452757423553637,no,0.008644766823342472,no,0.008315256449659856,no,0.007799510052284272
877,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0412893831663996,no,0.01425624653847941,no,0.013758522035227466,no,0.013309380176633634
878,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// note that if we load this collection from a cartesian product // the multiplicity would be broken ... so use an idbag instead,no,undetermined,0,0,0,no,0.2038497304111377,no,0.2695201819833027,no,0.25688009648504795,no,0.2643589683558159
879,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* COLUMN and TABLE should be renamed but it would break the public API */,no,undetermined,0,0,0,no,0.059964968707686035,no,0.014265826618756779,no,0.013781466194553851,no,0.013307097454618916
880,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// For many-to-many joins, use the tablename from the queryable collection for the default text.",no,undetermined,0,0,0,no,0.007910888646440762,no,0.014235497456496249,no,0.012843473262725938,no,0.012579421411709403
881,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//int result = 17; //result = 37 * result + type.hashCode(); //result = 37 * result + ( value==null ? 0 : value.hashCode() ); //return result;,no,undetermined,0,0,0,no,0.00362920841181506,no,0.0021963453112753637,no,0.0029271463608936373,no,0.002749824554629731
882,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// For the case of dynamic-update=""true"", we need to generate the UPDATE SQL",no,undetermined,0,0,0,no,0.014507458966629914,no,0.014238461992794977,no,0.013766853491063767,no,0.01330495108028632
883,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// merge() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.00988040729630909,no,0.014255596544668495,no,0.013772129042503932,no,0.013332679564569157
884,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Default to collections sharing entity cache if there is one,no,undetermined,0,0,0,no,0.007182748200923104,no,0.004204647536453733,no,0.003958293254623553,no,0.0038184123769032102
885,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// --Commented out by Inspection (12/4/04 9:10 AM): public abstract void addCondition(String alias, String[] columns, String condition);",no,undetermined,0,0,0,no,0.004518055767260375,no,0.006490697009733372,no,0.006260317174496857,no,0.006002440537292623
886,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// don't need to check laziness (dirty checking algorithm handles that),no,undetermined,0,0,0,no,0.05795569514662715,no,0.014263283625902904,no,0.013749608192293037,no,0.01331659903919417
887,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*rootTableName = persistentClass.getRootTable().getQualifiedName( 
				factory.getDialect(), 
				factory.getDefaultCatalog(), 
				factory.getDefaultSchema() 
		);*/",no,undetermined,0,0,0,no,0.011600702217428272,no,0.011014385127545526,no,0.010729133941426485,no,0.010539759319173558
888,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// For the case of dynamic-update=""false"", or no snapshot, we use the static SQL",no,undetermined,0,0,0,no,0.006282091924090989,no,0.011891294650964746,no,0.011596274365625044,no,0.01117314779655583
889,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//abort the save (the object is already saved by a circular cascade),no,undetermined,0,0,0,no,0.0061679622434160685,no,0.008453369529190746,no,0.008720565053862126,no,0.008395222462845171
890,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if not ""get"", then try ""is""",no,undetermined,0,0,0,no,0.001437990173336355,no,0.0013559517419161938,no,0.0013463723488036886,no,0.00125542825204733
891,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// remove initial "" and """,no,undetermined,0,0,0,no,0.0003872575465074532,no,0.0005927262500288508,no,0.0005282367627656559,no,0.000483459192810248
892,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Default to sharing the entity cache if there is one,no,undetermined,0,0,0,no,0.003708009973731552,no,0.002969325375266575,no,0.0027879863834650567,no,0.0026519871249411284
893,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we have the form: trim(trimSource) //      so we trim leading and trailing spaces,no,undetermined,0,0,0,no,0.00858915488359427,no,0.014253489008272665,no,0.013797082197413999,no,0.013326844447260965
894,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// For the case of dynamic-insert=""true"", we need to generate the INSERT SQL",no,undetermined,0,0,0,no,0.01010501347920097,no,0.013498000699573973,no,0.012843931123388762,no,0.012245238591870477
895,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if it was a reference to self, don't need to nullify // unless we are using native id generation, in which // case we definitely need to nullify",no,undetermined,0,0,0,no,0.046926192437659456,no,0.01427384066777826,no,0.013790921402224043,no,0.0133235010954133
896,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// For the case of dynamic-insert=""true"", we need to generate the INSERT SQL",no,undetermined,0,0,0,no,0.01010501347920097,no,0.013498000699573973,no,0.012843931123388762,no,0.012245238591870477
897,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//the user visible aliases, which are unknown to the superclass, //these are not the actual ""physical"" SQL aliases",no,undetermined,0,0,0,no,0.0028380822647874966,no,0.002750564447138203,no,0.005777931461386079,no,0.005523999666998261
898,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// For the case of dynamic-insert=""false"", use the static SQL",no,undetermined,0,0,0,no,0.006823992747880004,no,0.0102470346889809,no,0.009890403399204465,no,0.009462818014731237
899,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if a composite key, use ""( (foo = ? and bar = ?) or (foo = ? and bar = ?) )"" for batching //TODO: unnecessary for databases with ANSI-style joins",no,undetermined,0,0,0,no,0.362814758008548,no,0.4845013498435439,no,0.4739249706146982,no,0.48229859846078227
900,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// For the case of dynamic-insert=""false"", use the static SQL",no,undetermined,0,0,0,no,0.006823992747880004,no,0.0102470346889809,no,0.009890403399204465,no,0.009462818014731237
901,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the class hierarchy structure,no,undetermined,0,0,0,no,0.015143410156580356,no,0.014264466156112963,no,0.013780640090295311,no,0.013350568725179852
902,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//a shortcut if its location didn't change!,no,undetermined,0,0,0,no,0.022519621779061874,no,0.01425081040111899,no,0.013789133667656715,no,0.013325112326310538
903,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//swaldman 2006-08-28: define c3p0-style configuration parameters for properties with //                     hibernate-specific overrides to detect and warn about conflicting //                     declarations,no,undetermined,0,0,0,no,0.014639396574907069,no,0.014272069264233139,no,0.013788381488275617,no,0.013338597776066404
904,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// not supported,no,undetermined,0,0,0,no,0.010729177015059372,no,0.011846881911349154,no,0.011141367853862879,no,0.010728702352594544
905,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Need to use the identifier type of the collection owner // since the incoming is value is actually the owner's id. // Using the collection's key type causes problems with // property-ref keys...,no,undetermined,0,0,0,no,0.08991102300424926,no,0.014245657686750898,no,0.01376931628740714,no,0.013313038979533067
906,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if we instantiate a collection during the flush() process, // we must ignore it for the rest of the flush()",no,undetermined,0,0,0,no,0.007357080507533235,no,0.004161410306678926,no,0.002451561711670511,no,0.0022638730136309015
907,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// moved up from AbstractEntityPersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.14481619768233603,no,0.13672448524730393,no,0.13254371848470897,no,0.13256071405978934
908,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// new collections that get found + wrapped // during flush shouldn't be ignored,no,undetermined,0,0,0,no,0.04433459849676728,no,0.014262736613613883,no,0.013789954678142825,no,0.01332826567205627
909,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// meant to handle dynamic instantiation queries...,no,undetermined,0,0,0,no,0.0023388005937409755,no,0.014265736672155893,no,0.013791940995363508,no,0.01333060442778577
910,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//a newly wrapped collection is NOT dirty (or we get unnecessary version updates),no,undetermined,0,0,0,no,0.05995786944965169,no,0.01425151463834927,no,0.013772771814567755,no,0.01331950008172577
911,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// local cache, so we use synchronization",no,undetermined,0,0,0,no,0.008030545948089787,no,0.010206835936929472,no,0.009864611614146097,no,0.009503710680714561
912,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Always add the collection's query spaces.,no,undetermined,0,0,0,no,0.015254843452120144,no,0.013819929274565768,no,0.0126630516204498,no,0.012336860544949807
913,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//the BLOB type requires a size arguement - this defaults to //bytes - no arg defaults to 1 whole byte! //other argument mods include K - kilobyte, M - megabyte, G - gigabyte. //refer to the PBdevelopers guide for more info.",no,undetermined,0,0,0,no,0.01818019461983153,no,0.01426422734908775,no,0.013774495362682361,no,0.01332373712394038
914,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// detached collections that get found + reattached // during flush shouldn't be ignored,no,undetermined,0,0,0,no,0.018033597110327506,no,0.0065196099323249455,no,0.005262096502373285,no,0.005022667742755555
915,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// revert to traditional hibernate behavior of setting initialPoolSize to minPoolSize // unless otherwise specified with a c3p0.*-style parameter.,no,undetermined,0,0,0,no,0.005086640368058459,no,0.013065624783921932,no,0.012862667986351136,no,0.012528790618868824
916,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we need to utilize dynamic delete statements,no,undetermined,0,0,0,no,0.013708405351380742,no,0.01426167363510104,no,0.013791769860307624,no,0.013332728744009877
917,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//columns.add(columnName); //aliases.add(tableAlias);,no,undetermined,0,0,0,no,0.0015606181468653722,no,0.00301938695898216,no,0.005557915461702395,no,0.005287704711035426
918,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// otherwise, utilize the static delete statements",no,undetermined,0,0,0,no,0.0053342397824034105,no,0.005889014199338755,no,0.00563929596170168,no,0.005388606576183774
919,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// intentionally empty,no,undetermined,0,0,0,no,0.003644613594131404,no,0.004539019288401649,no,0.004347602997144553,no,0.004115441494444047
920,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*public boolean equals(Object other) {
		read();
		return bag.equals(other);
	}

	public int hashCode(Object other) {
		read();
		return bag.hashCode();
	}*/",no,undetermined,0,0,0,no,0.012639095056275711,no,0.010792120537260268,no,0.01152925540350788,no,0.011219894492081413
921,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//final boolean forceCacheRefresh,",no,undetermined,0,0,0,no,0.00024997478579600306,no,0.0004940587870305461,no,0.00046031183846367976,no,0.0004235391267929675
922,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//just a performance opt!,no,undetermined,0,0,0,no,0.0161571227543257,no,0.014208977304646498,no,0.013567390491841629,no,0.01313500793639617
923,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Essentially: // 1) If we have a local (Hibernate) transaction in progress //      and it already has the UserTransaction cached, use that //      UserTransaction to determine the status. // 2) If a transaction manager has been located, use //      that transaction manager to determine the status. // 3) Finally, as the last resort, try to lookup the //      UserTransaction via JNDI and use that to determine the //      status.",no,undetermined,0,0,0,no,0.011062741597178842,no,0.008055900861934766,no,0.007651822080079399,no,0.007286827346207814
924,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//just a performance opt!,no,undetermined,0,0,0,no,0.0161571227543257,no,0.014208977304646498,no,0.013567390491841629,no,0.01313500793639617
925,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// used to set the type of the parent dot node,no,undetermined,0,0,0,no,0.020028447207564703,no,0.014233251351863306,no,0.013782040143929608,no,0.013325224802217508
926,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//all joins join to the pk of the driving table,no,undetermined,0,0,0,no,0.004130000379911701,no,0.0027059243118261007,no,0.002616792405113414,no,0.002494415115711939
927,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// more specifically : ""datetime [op] ?"" //      1) if the operator is MINUS, we really cannot determine //          the expected type as either another datetime or //          numeric would be valid //      2) if the operator is PLUS, the param needs to be of //          some numeric type",no,undetermined,0,0,0,no,0.11828842412299043,no,0.09634261377384572,no,0.013783161564024364,no,0.013336823097521986
928,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//notice that we skip the first table; it is the driving table!,no,undetermined,0,0,0,no,0.003671293194649558,no,0.001921454117380154,no,0.0018128970064801144,no,0.0017034976305812808
929,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aliases named identifier ( alias.idname ),no,undetermined,0,0,0,no,0.009410924399789997,no,0.007547797316601564,no,0.011523393862123844,no,0.011092563696046148
930,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//skip the driving table,no,undetermined,0,0,0,no,0.0022483826233257098,no,0.00018370292539104092,no,0.00017374029597093813,no,0.00015738305613357208
931,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// inserts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.003061597784784227,no,0.002727345436946136,no,0.0027081200153433686,no,0.0025509749084603886
932,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//get 'em in the right order (not that it really matters),no,undetermined,0,0,0,no,0.03486057129435316,no,0.01425325169994253,no,0.01378842978051889,no,0.013336867189275051
933,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*package*/,no,undetermined,0,0,0,no,0.0024028778345724696,no,0.0026803190818122666,no,0.0025599410532666095,no,0.002410048974527652
934,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//NOTE EARLY EXIT!,no,undetermined,0,0,0,no,0.009851730953002773,no,0.008447576969000298,no,0.00839580091061771,no,0.007973154111423878
935,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
936,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// trying via forName() first to be as close to DriverManager's semantics,no,undetermined,0,0,0,no,0.00936235571045447,no,0.0051207161690585866,no,0.005320779084235332,no,0.005056064433532295
937,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//this bit is only *really* absolutely necessary for handling //requestedId, but is also good if we merge multiple object //graphs, since it helps ensure uniqueness",no,undetermined,0,0,0,no,0.5,yes,0.7545853503884298,yes,0.7462649420613454,yes,0.7572901394179073
938,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	private boolean showSql; //	private boolean formatSql;,no,undetermined,0,0,0,no,2.075329862731015e-05,no,8.120079831090091e-05,no,7.91064384066495e-05,no,7.102196999468104e-05
939,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// in case we were deserialized in a different JVM, look for an instance with the same name // (alternatively we could do an actual JNDI lookup here....)",no,undetermined,0,0,0,no,0.015478785875812081,no,0.011261690619001837,no,0.010679055032715106,no,0.010302595430885388
940,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// try to make sure we don't wrap and already wrapped session,no,undetermined,0,0,0,no,0.028175443342206386,no,0.014264990372534501,no,0.013774487276145506,no,0.013322931853997933
941,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If this is an implied join in a FROM clause, then use ANSI-style joining, and set the // flag on the FromElement that indicates that it was implied in the FROM clause itself.",no,undetermined,0,0,0,no,0.007888170090291058,no,0.008108431724229507,no,0.007851825830612775,no,0.0075386891709970285
942,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//render the where and from parts,no,undetermined,0,0,0,no,0.008076396166605243,no,0.008216600389521185,no,0.007934356740458769,no,0.007593346455403219
943,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// There is already an existing batch for this type of entity. // Check to see if the latest batch is acceptable.,no,undetermined,0,0,0,no,0.007924719119173508,no,0.010674920295652833,no,0.011649402248530887,no,0.011218943951713613
944,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// allow these to go through the the real session no matter what,no,undetermined,0,0,0,no,0.012323393053134039,no,0.014252524451102144,no,0.01375305843946303,no,0.01332714629601558
945,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Don't really know all the codes required to adequately decipher returned jdbc exceptions here. // simply allow the failure to be eaten and the subsequent insert-selects/deletes should fail,no,undetermined,0,0,0,no,0.11219113194722788,no,0.18504125491639117,no,0.18110729410611426,no,0.18260831099837874
946,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//we *could* regerate this inside each called method!,no,undetermined,0,0,0,no,0.014856331776417143,no,0.014257911872254416,no,0.01377870106205555,no,0.013335934815451846
947,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the CascadingAction implementations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.007662965883645469,no,0.006383728327125422,no,0.00595476502491183,no,0.005670836580064322
948,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//now render the joins,no,undetermined,0,0,0,no,0.011787575186630135,no,0.012147577832747536,no,0.011912399717506798,no,0.011523669656193931
949,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If you're closing down the ConnectionProvider chances are an // is not a real big deal, just warn",no,undetermined,0,0,0,no,0.008802568212524597,no,0.011605854213315451,no,0.011028740559146719,no,0.01059168435204106
950,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// create a new batch for this type. The batch number is the number of current batches.,no,undetermined,0,0,0,no,0.011774252638215209,no,0.01425231527727522,no,0.013777415105915783,no,0.013317196133421158
951,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// keyword support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.004030970513489628,no,0.005428659883791883,no,0.005272985311413448,no,0.005008652091040011
952,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This will add the new from element to the origin.,no,undetermined,0,0,0,no,0.004722823547951827,no,0.005256110827692158,no,0.005076284551898379,no,0.004841482798071489
953,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the closure of all columns used by the entire hierarchy including // subclasses and superclasses of this class,no,undetermined,0,0,0,no,0.008357918065067166,no,0.014251704841512775,no,0.013775046812241046,no,0.0133327156750841
954,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//now render the select clause,no,undetermined,0,0,0,no,0.006998664571467405,no,0.005449590603101207,no,0.005274891414467227,no,0.005047471455155551
955,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The keyword used to insert a row without specifying // any column values,no,undetermined,0,0,0,no,0.004105530248741145,no,0.004901195329529318,no,0.004764720718587659,no,0.004513057672205161
956,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//now tie it all together,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
957,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Does the LIMIT clause take a ""maximum"" row number instead of a total number of returned rows?",no,undetermined,0,0,0,no,0.02519480504035839,no,0.014267400447449572,no,0.013767203843897837,no,0.013324261721892744
958,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//insert/update/delete SQL,no,undetermined,0,0,0,no,0.003133245372781553,no,0.005174381224928405,no,0.004975234528731567,no,0.004750303851870476
959,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The keyword used to specify a nullable column.,no,undetermined,0,0,0,no,0.009461394509793278,no,0.009391238844018261,no,0.009040961787255292,no,0.008640533752050324
960,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//select SQL,no,undetermined,0,0,0,no,0.003516163105664758,no,0.0034551499326305407,no,0.0033670090687758186,no,0.003192259648717917
961,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//overriden to avoid System.exit,no,undetermined,0,0,0,no,0.007155467627214345,no,0.007167030155592514,no,0.0068996762082956,no,0.006683097686362939
962,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//no need to check laziness, dirty checking handles that",no,undetermined,0,0,0,no,0.05090854925033245,no,0.014251532770225015,no,0.013774380943202519,no,0.01333297185967333
963,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.01840135346856906,no,0.014259330172444101,no,0.013785901001071176,no,0.013316445812881737
964,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Fully resolve the map reference, create implicit joins.",no,undetermined,0,0,0,no,0.06108495973198624,no,0.014276425361122684,no,0.013759381555108547,no,0.013316484520430343
965,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// break the outer loop !!!,no,undetermined,0,0,0,no,0.0030101946611679645,no,0.0024826858571131267,no,0.002020176991573223,no,0.0019025386543644737
966,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// since this entity will now be processed in the latest possible batch, // we can be assured that it will come after all other associations, // there's not need to continue checking.",no,undetermined,0,0,0,no,0.06501857118051459,no,0.014253772363781404,no,0.013771331084988889,no,0.013315681437245415
967,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// remove any snapshot, not really for memory management purposes, but // rather because it might now be stale, and there is no longer any  // EntityEntry to take precedence // This is now handled by removeEntity() //session.getPersistenceContext().removeDatabaseSnapshot(key);",no,undetermined,0,0,0,no,0.018273391511567715,no,0.014235620658926012,no,0.013754874065478796,no,0.0133280144477153
968,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The basic implementation is to simply use the node's text,no,undetermined,0,0,0,no,0.01601709682427066,no,0.01426558432303939,no,0.01377889580475199,no,0.013350388098177238
969,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// InterSystems Cache' does not current support ""SELECT ... FOR UPDATE"" syntax... // Set your transaction mode to READ_COMMITTED before using",no,undetermined,0,0,0,no,0.022829387048424882,no,0.014239106227540236,no,0.013764112062221124,no,0.013323455404748306
970,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//cascade to current collection elements,no,undetermined,0,0,0,no,0.005715104088161638,no,0.009561267780039665,no,0.009928700561790493,no,0.009599632144390547
971,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.007344993122857295,no,0.008447287711801506,no,0.00801948910777018,no,0.0076640667708036255
972,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//not really necessary, but good for consistency...",no,undetermined,0,0,0,no,0.07968386910812861,no,0.01426570216820866,no,0.013792534835925662,no,0.013330722091611126
973,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Try to find out the name of the primary key to create it as identity if the IdentityGenerator is used,no,undetermined,0,0,0,no,0.004884070379232166,no,0.014251791992650182,no,0.01378522841320317,no,0.01332640026096452
974,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we can't cascade to non-embedded elements,no,undetermined,0,0,0,no,0.0045231046517617895,no,0.00788247774825143,no,0.00813244808272065,no,0.0077938955652220795
975,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//postDelete: // After actually deleting a row, record the fact that the instance no longer  // exists on the database (needed for identity-column key generation), and // remove it from the session cache",no,undetermined,0,0,0,no,0.006742227616010328,no,0.007052662141786489,no,0.006881222003090591,no,0.006609848912311137
976,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//a newly instantiated collection can't have orphans,no,undetermined,0,0,0,no,0.010249763911541549,no,0.004503578112893967,no,0.003972766756346738,no,0.003919476092361807
977,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Don't hold the JBC node lock throughout the tx, as that // prevents reads and other updates",no,undetermined,0,0,0,no,0.006114445797442843,no,0.005014231198904662,no,0.005587275651721193,no,0.005390028177624466
978,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// check the version unsaved-value, if appropriate",no,undetermined,0,0,0,no,0.010182131867907238,no,0.006713625907090878,no,0.007092947438182066,no,0.006793565082075132
979,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Create the SessionFactory from hibernate.cfg.xml,no,undetermined,0,0,0,no,0.0051940134910085445,no,0.014230372437081432,no,0.013783441304814034,no,0.013327408844540225
980,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// handle orphaned entities!!,no,undetermined,0,0,0,no,0.013105096340663076,no,0.014266073249397262,no,0.013764630286800894,no,0.01333480357492867
981,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ignore,no,undetermined,0,0,0,no,0.0003489690046840201,no,0.0004791828875098961,no,0.0004737640273004505,no,0.00043449603121796743
982,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// check the id unsaved-value,no,undetermined,0,0,0,no,0.0072414592718557935,no,0.00399217160662122,no,0.004512191125088694,no,0.004290645626046588
983,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if we get here, it is possible that we have a proxy 'in the way' of the merge map resolution... // 		NOTE: decided to put this here rather than in the above loop as I was nervous about the performance //		of the loop-in-loop especially considering this is far more likely the 'edge case'",no,undetermined,0,0,0,no,0.07370634191812492,no,0.014254571826290538,no,0.013768601141646495,no,0.013326952022487312
984,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// check to see if it is in the second-level cache,no,undetermined,0,0,0,no,0.012997099170139411,no,0.013526940461711276,no,0.01254788176354996,no,0.01209089879985241
985,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Custom SQL (would be better if these were private),no,undetermined,0,0,0,no,0.04553835871564123,no,0.014262779809127282,no,0.013779297447693947,no,0.01331540435370687
986,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,///////////////////////////////////////////////////////////////////////,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
987,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// our column span is the number of columns in the PK,no,undetermined,0,0,0,no,0.0019331467922992455,no,0.0031635871726538277,no,0.0031042414594057758,no,0.0029662526668247646
988,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// For property references generate <tablealias>.<columnname> as <projectionalias>,no,undetermined,0,0,0,no,0.007146875770110137,no,0.0049191690506490875,no,0.0048409996125898845,no,0.0046047209051094376
989,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// in case we were deserialized in a different JVM, look for an instance with the same name // (alternatively we could do an actual JNDI lookup here....)",no,undetermined,0,0,0,no,0.015478785875812081,no,0.011261690619001837,no,0.010679055032715106,no,0.010302595430885388
990,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
991,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// KEY,no,undetermined,0,0,0,no,0.000517353743429138,no,0.0007773431620271339,no,0.0007650177455099375,no,0.0007063905795288035
992,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//force immediate execution of the insert,no,undetermined,0,0,0,no,0.0021257405824181216,no,0.0023527034142339304,no,0.0023279679775628243,no,0.0021814670966988432
993,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// general purpose parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.005784884743133188,no,0.004432266536471731,no,0.00424879322053611,no,0.004058727344477893
994,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// entities ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.010235101190054876,no,0.01243407737044195,no,0.011932764873434672,no,0.01149249174164687
995,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.007344993122857295,no,0.008447287711801506,no,0.00801948910777018,no,0.0076640667708036255
996,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Loaded entity instances, by EntityUniqueKey",no,undetermined,0,0,0,no,0.020557554082012645,no,0.011257897950976072,no,0.010740120289128638,no,0.010422746880545982
997,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//allow any identifier quoted with backtick //only recognizes identifiers beginning with a letter,no,undetermined,0,0,0,no,0.008619920795807619,no,0.008597677472673601,no,0.008114075495216607,no,0.007758283475844448
998,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// collections ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.02004268312664165,no,0.010916603321176737,no,0.01056869897842711,no,0.010298576386762617
999,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Configurable implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.42991779443062134,yes,0.5170018860818785,yes,0.5052825066992714,yes,0.5151808712188349
1000,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Identity map of EntityEntry instances, by the entity instance",no,undetermined,0,0,0,no,0.007707558752163745,no,0.011648003541135992,no,0.011149060533629936,no,0.010566869823740364
1001,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Write HTML footer,no,undetermined,0,0,0,no,0.0022043647934658307,no,0.0022787168471925944,no,0.0022019196479019705,no,0.0020664107408963133
1002,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Entity proxies, by EntityKey",no,undetermined,0,0,0,no,0.006513700529966971,no,0.014249805660306295,no,0.013750015383153713,no,0.013303868110753759
1003,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// delete does cascade to uninitialized collections,no,undetermined,0,0,0,no,0.013895115237369776,no,0.01320675662039684,no,0.012637660772398458,no,0.012206222559158472
1004,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Snapshots of current database state for entities // that have *not* been loaded,no,undetermined,0,0,0,no,0.00914384738656344,no,0.008497688283427295,no,0.008261454252448739,no,0.007933305359495407
1005,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// NativeSQL: collect key column and auto-aliases,no,undetermined,0,0,0,no,0.0021285463666665108,no,0.002815022726636187,no,0.0050518871000153915,no,0.004809193514727409
1006,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Identity map of array holder ArrayHolder instances, by the array instance",no,undetermined,0,0,0,no,0.0038604098048117277,no,0.005776838984733182,no,0.005369771047063638,no,0.005027779556411789
1007,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//unquotedKeyColumnNames = StringHelper.unQuote(keyColumnAliases);,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
1008,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//cannot occur,no,undetermined,0,0,0,no,0.008669211448580207,no,0.007563602159348591,no,0.007392752979907579,no,0.006489783708552112
1009,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Don't need to lock the cache here, since if someone // else inserted the same pk first, the insert would fail",no,undetermined,0,0,0,no,0.013361423080833407,no,0.014261953636078111,no,0.01376192257993929,no,0.013317857925291651
1010,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//cannot occur,no,undetermined,0,0,0,no,0.008669211448580207,no,0.007563602159348591,no,0.007392752979907579,no,0.006489783708552112
1011,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This is not strictly true.  We actually just need to make sure that // it is ordered by root-entity PK and that that order-by comes before // any non-root-entity ordering...,no,undetermined,0,0,0,no,0.0464548015272013,no,0.014251508135823852,no,0.013771293152765903,no,0.013336038302054789
1012,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// try ""get""",no,undetermined,0,0,0,no,0.001437990173336355,no,0.0013559517419161938,no,0.0013463723488036886,no,0.00125542825204733
1013,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// pass control along to the rest of the processing chain,no,undetermined,0,0,0,no,0.007248851214179678,no,0.007429023148017931,no,0.00733673712350232,no,0.0070214414780890065
1014,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Set of EntityKeys of deleted objects,no,undetermined,0,0,0,no,0.005670219372955781,no,0.01424682218704696,no,0.013761016909743157,no,0.0133235749668072
1015,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// all this only really needs to consider properties // of this class, not its subclasses, but since we // are reusing code used for sequential selects, we // use the subclass closure",no,undetermined,0,0,0,no,0.4241636326875622,no,0.4417126297724718,no,0.4478549687616468,no,0.4588336304831078
1016,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// A list of collection wrappers that were instantiating during result set // processing, that we will need to initialize at the end of the query",no,undetermined,0,0,0,no,0.03751653341470778,no,0.014261988927085287,no,0.013755594451342926,no,0.01334053674166618
1017,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*protected void initPropertyPaths(
			final String path,
			final Type type,
			final String[] columns,
			final String[] formulaTemplates,
			final Mapping factory)
	throws MappingException {
		//addFormulaPropertyPath(path, type, formulaTemplates);
		initPropertyPaths(path, type, columns, formulaTemplates, factory);
	}*/",no,undetermined,0,0,0,no,0.005708902918767103,no,0.012346267726026096,no,0.012007946995328025,no,0.011490259486667029
1018,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Downgrade locks,no,undetermined,0,0,0,no,0.004158435385769046,no,0.003014198571451462,no,0.0028665878488082826,no,0.002700242315637764
1019,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//( (Column) model.getTable().getPrimaryKey().getColumnIterator().next() ).getName();,no,undetermined,0,0,0,no,0.03193413753390217,no,0.014264795689840747,no,0.013788073854859835,no,0.013348819333810148
1020,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// do nothing...,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
1021,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Deserialize //-----------------------------------------------------------------------,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
1022,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// do nothing...,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
1023,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Actually the semantics of the next three are really ""Bag"" // Note that, unlike objects, collection insertions, updates, // deletions are not really remembered between flushes. We // just re-use the same Lists for convenience.",no,undetermined,0,0,0,no,0.2705869898143324,no,0.24856829278604162,no,0.25829283842018413,no,0.26461559257663736
1024,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	public boolean isShowSqlEnabled() { //		return showSql; //	} // //	public boolean isFormatSqlEnabled() { //		return formatSql; //	},no,undetermined,0,0,0,no,0.0009573034928520973,no,0.0009423941491935305,no,0.0009052621984279965,no,0.0008550776875889565
1025,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//with two-deep subqueries, the same alias would get generated for //both using the old method (criteriaQuery.generateSQLAlias()), so //that is now used as a fallback if the main criteria alias isn't set",no,undetermined,0,0,0,no,0.041674612742463556,no,0.01425771676874882,no,0.013799425270082604,no,0.013331877356262158
1026,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*(array==null) ? tempList.size() :*/,no,undetermined,0,0,0,no,0.0074092579348489455,no,0.00790671080934814,no,0.00717172299015609,no,0.006880288931259214
1027,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//sort the updates by pk,no,undetermined,0,0,0,no,0.0043970591058704635,no,0.003455104497958443,no,0.0032698408852008575,no,0.0031665207761244103
1028,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// should be safe to only ever expect EntityPersister references here,no,undetermined,0,0,0,no,0.014000478991335975,no,0.01164230076299813,no,0.011645503409451346,no,0.011253142442375396
1029,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//optimize the hash size to eliminate a rehash.,no,undetermined,0,0,0,no,0.07179796618515476,no,0.014234295040720277,no,0.013777154659866927,no,0.013313250830782502
1030,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//unwrap the object,no,undetermined,0,0,0,no,0.002337239933824432,no,0.002845118114998648,no,0.0027684478000250764,no,0.002223983963255254
1031,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Impl note: takes advantage of the fact that an escpaed single quote // embedded within a quote-block can really be handled as two seperate // quote-blocks for the purposes of this method...,no,undetermined,0,0,0,no,0.04679871052002019,no,0.014256751844047783,no,0.013754317979862414,no,0.013323014824523556
1032,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// again, CCS did not have such a concept; but a reasonable // proximity is to clear the cache after transaction *as long as* // the underlying cache is not JTA aware.",no,undetermined,0,0,0,no,0.007682391493998247,no,0.005999048685677262,no,0.005649462236127853,no,0.005379730769188695
1033,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the entity associated with the current action.,no,undetermined,0,0,0,no,0.003335688294897983,no,0.0028133704969062387,no,0.0027831726394901874,no,0.0026418399642615235
1034,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this page intentionally left blank :),no,undetermined,0,0,0,no,0.006430967542533929,no,0.007245753139119012,no,0.0069896185957247885,no,0.00668489876316531
1035,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// unfortunately this stuff can't be cached because // it is per-invocation, not constant for the // QueryTranslator instance",no,undetermined,0,0,0,no,0.014999196348878462,no,0.014252993560776753,no,0.013795815673450037,no,0.013336292540002717
1036,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//initialize + unwrap the object,no,undetermined,0,0,0,no,0.0016335081106238823,no,0.0020304715443605946,no,0.0020000074090663266,no,0.0016416833673937343
1037,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// SEQUENCE support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.012155127129392344,no,0.010071632330545994,no,0.009795924045041243,no,0.00937785045088488
1038,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// do not do anything,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
1039,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we can't batch joined inserts, *especially* not if it is an identity insert; // nor can we batch statements where the expectation is based on an output param",no,undetermined,0,0,0,no,0.03273526242505261,no,0.014235433701942728,no,0.013760319525260068,no,0.013298892315915732
1040,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
1041,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// unfortunately this stuff can't be cached because // it is per-invocation, not constant for the // QueryTranslator instance",no,undetermined,0,0,0,no,0.014999196348878462,no,0.014252993560776753,no,0.013795815673450037,no,0.013336292540002717
1042,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//return the proxied object,no,undetermined,0,0,0,no,0.004233191977261967,no,0.004519654134880886,no,0.004164381558329538,no,0.004002785030830737
1043,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// else no collection element, but also no owner",no,undetermined,0,0,0,no,0.002307031200021172,no,0.004262019640478832,no,0.004549935748644473,no,0.00433929715149725
1044,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ignore,no,undetermined,0,0,0,no,0.0003489690046840201,no,0.0004791828875098961,no,0.0004737640273004505,no,0.00043449603121796743
1045,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we have the form: trim(trimSource) //      so we trim leading and trailing spaces // EARLY EXIT!!!!,no,undetermined,0,0,0,no,0.006829907113057377,no,0.010601015400777989,no,0.01027204729250062,no,0.009869820742981416
1046,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//overwrite old proxy,no,undetermined,0,0,0,no,0.0007101897202499703,no,0.0007656610243198562,no,0.0007331228985757704,no,0.0006476007916190147
1047,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// the MRU cache used to keep hard references to the most recently used query plans; // note : LRU here is a bit of a misnomer, it indicates that LRU entries are removed, the // actual kept entries are the MRU entries",no,undetermined,0,0,0,no,0.03330903468369144,no,0.014252695072216978,no,0.013752724969641882,no,0.013298029096947737
1048,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// early exit...,no,undetermined,0,0,0,no,0.002670991679035732,no,0.002232446739692084,no,0.002188658649593499,no,0.002052037746907664
1049,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Handles things like: // a and b or c // a and ( b or c ) // not a and not b // not ( a and b ) // x between y and z            (overloaded ""and"") // x in ( a, b, c )             (overloaded brackets) // not not a // a is not null                (overloaded ""not"") // etc...... // and expressions like // foo = bar                    (maps to: foo.id = bar.id) // foo.Bar = 'foo'              (maps to: foo.bar = 'foo') // foo.Bar.Baz = 1.0            (maps to: foo.bar = bar.id and bar.baz = 1.0) // 1.0 = foo.Bar.Baz            (maps to: bar.baz = 1.0 and foo.Bar = bar.id) // foo.Bar.Baz = a.B.C          (maps to: bar.Baz = b.C and foo.Bar = bar.id and a.B = b.id) // foo.Bar.Baz + a.B.C          (maps to: bar.Baz + b.C and foo.Bar = bar.id and a.B = b.id) // ( foo.Bar.Baz + 1.0 ) < 2.0  (maps to: ( bar.Baz + 1.0 ) < 2.0 and foo.Bar = bar.id)",no,undetermined,0,0,0,no,0.009236489230121683,no,0.01018081842308489,no,0.00989940034115543,no,0.009527982812789127
1050,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// or should it actually throw an exception?,no,undetermined,0,0,0,no,0.01963513919809394,no,0.014246646519789895,no,0.01378819185800408,no,0.013333691038846867
1051,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// both many-to-one and one-to-one are represented as a // Property.  EntityPersister is relying on this value to // determine ""lazy fetch groups"" in terms of field-level // interception.  So we need to make sure that we return // true here for the case of many-to-one and one-to-one // with lazy=""no-proxy"" // // * impl note - lazy=""no-proxy"" currently forces both // lazy and unwrap to be set to true.  The other case we // are extremely interested in here is that of lazy=""proxy"" // where lazy is set to true, but unwrap is set to false. // thus we use both here under the assumption that this // return is really only ever used during persister // construction to determine the lazy property/field fetch // groupings.  If that assertion changes then this check // needs to change as well.  Partially, this is an issue with // the overloading of the term ""lazy"" here...",no,undetermined,0,0,0,no,0.1421195556865408,no,0.10317252026259313,no,0.09958984854746468,no,0.013304203642577712
1052,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The property is a component...,no,undetermined,0,0,0,no,0.016316411692436257,no,0.009755223510626965,no,0.01023248265778909,no,0.009865641866344222
1053,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// the ids are fully resolved, so compare them with isDirty(), not isModified()",no,undetermined,0,0,0,no,0.021497665212229008,no,0.014283034756809613,no,0.013772171832567825,no,0.013336499891748902
1054,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//cant instantiate,no,undetermined,0,0,0,no,0.0026683752794155165,no,0.003725999784307066,no,0.0037828889532845627,no,0.0035828305956747395
1055,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//QueryJoinFragment join = q.createJoinFragment(useThetaStyleJoin);,no,undetermined,0,0,0,no,0.011058790355609914,no,0.007361533215569272,no,0.00733510285881577,no,0.0070322263672484755
1056,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if it is a property of an embedded component, invoke on the ""identifier""",no,undetermined,0,0,0,no,0.010873119241781047,no,0.005545091302687199,no,0.005481711423333224,no,0.0052193595590107195
1057,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// SUBCLASSES,no,undetermined,0,0,0,no,0.002990313572909916,no,0.00343705376120156,no,0.0033524353820736964,no,0.0031693762810550653
1058,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// otherwise:,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
1059,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// starts with the name of a mapped class (new style),no,undetermined,0,0,0,no,0.009562614731177137,no,0.014224344289649355,no,0.013762544570505247,no,0.013327677620071839
1060,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//treat it just like a new collection,no,undetermined,0,0,0,no,0.05196375531790761,no,0.014228617460429194,no,0.013751165763398547,no,0.013335244407326837
1061,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// We must return a valid RDMS/RSA command from this method to // prevent RDMS/RSA from issuing *ERROR 400,no,undetermined,0,0,0,no,0.019014959075698293,no,0.014253978191251343,no,0.013780141547497396,no,0.013326063445345197
1062,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// skip finalize methods,no,undetermined,0,0,0,no,0.003706973652254116,no,0.0014013820974932388,no,0.0013343133595291464,no,0.0012448706760759183
1063,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// return the (fully resolved) identifier value, but do not resolve // to the actual referenced entity instance // NOTE: the owner of the association is not really the owner of the id!",no,undetermined,0,0,0,no,0.0610432022781394,no,0.014255615303215693,no,0.013780496106446759,no,0.013331059578874094
1064,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//do this work only at the very highest level of the load //don't let this method be called recursively,no,undetermined,0,0,0,no,0.062253771861319813,no,0.01424343337028733,no,0.013761843619312757,no,0.01333900512215358
1065,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//	public static JDBCException newJDBCException(String string, SQLException root, String sql) { //		string = string + "" ["" + sql + ']'; //		log.error(string, root); //		logExceptions(root); //		return new JDBCException(string, root, sql); //	} // //	public static JDBCException newJDBCException(String string, SQLException root) { //		log.error(string, root); //		logExceptions(root); //		return new JDBCException(string, root); //	}",no,undetermined,0,0,0,no,0.006624682632449217,no,0.006009182032079292,no,0.006007549852457498,no,0.005755045968440427
1066,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//note that each iteration of the loop may add new elements,no,undetermined,0,0,0,no,0.010550593195960531,no,0.011427849912424548,no,0.011183543401996142,no,0.010723565787447025
1067,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if we know there is exactly 1 row, we can skip. // it would be great if we could _always_ skip this; // it is a problem for <key-many-to-one>",no,undetermined,0,0,0,no,0.014853186831998745,no,0.0032651554467330404,no,0.0030266827955740955,no,0.002541031085682729
1068,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/* This can never happen because this rule will always eliminate the child NOT.
			case NOT:
				return x.getFirstChild();			// (NOT (NOT x) ) => (x)
*/",no,undetermined,0,0,0,no,0.010556151507615368,no,0.010174791948612642,no,0.009568252593505406,no,0.009127642754551852
1069,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we need to obtain the lock before any actions are // executed, since this may be an inverse=""true"" // bidirectional association and it is one of the // earlier entity actions which actually updates // the database (this action is resposible for // second-level cache invalidation only)",no,undetermined,0,0,0,no,0.023341705877584728,no,0.014237800488023738,no,0.013790415560981798,no,0.013313868292707788
1070,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// HHH-2481 make sure the callback gets cleared, otherwise the instance stays in a static thread local.",no,undetermined,0,0,0,no,0.015642027902484562,no,0.014231268184963933,no,0.013757638138938212,no,0.013328163776882564
1071,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//no point doing this if NONE was requested,no,undetermined,0,0,0,no,0.001755365006485799,no,0.0024505920939547083,no,0.002381763998299215,no,0.002243113649220118
1072,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// while constructor is running,no,undetermined,0,0,0,no,0.0068260053827127526,no,0.007237342175424428,no,0.006972943220657821,no,0.006655744865201213
1073,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The keyword used to specify a nullable column.,no,undetermined,0,0,0,no,0.009461394509793278,no,0.009391238844018261,no,0.009040961787255292,no,0.008640533752050324
1074,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// while constructor is running,no,undetermined,0,0,0,no,0.0068260053827127526,no,0.007237342175424428,no,0.006972943220657821,no,0.006655744865201213
1075,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//there is probably a row there, so try to update //if no rows were updated, we will find out",no,undetermined,0,0,0,no,0.02314503679625331,no,0.014251291239327673,no,0.013746658928906568,no,0.013327813129956748
1076,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// note: interface is assumed to already contain HibernateProxy.class,no,undetermined,0,0,0,no,0.028747931066774583,no,0.01425965392494956,no,0.013772812653637665,no,0.013326367055305769
1077,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//do nothing to avoid a lazy property initialization,no,undetermined,0,0,0,no,0.02718662142332822,no,0.014241099428899867,no,0.013798158744910033,no,0.01333503064183153
1078,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// interfaces // arguments,no,undetermined,0,0,0,no,0.0022330244431936668,no,0.002317311933341068,no,0.002229693812139484,no,0.002115112030027213
1079,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Not called at runtime so doesn't matter if its slow :),no,undetermined,0,0,0,no,0.032749153558629514,no,0.014248953253792215,no,0.013782637444125202,no,0.013343464949442293
1080,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//TODO!,no,undetermined,0,0,0,no,0.01325037645668776,no,0.014260932248424719,no,0.013765265067302008,no,0.013323255765510592
1081,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Chop off the rest of the tree.,no,undetermined,0,0,0,no,0.00637057974793841,no,0.0069736564543572055,no,0.006793209063982325,no,0.00649901239867874
1082,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Get the caller,no,undetermined,0,0,0,no,0.0064981816276491935,no,0.005944542817846805,no,0.00581420790773711,no,0.005535864521369573
1083,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// prefer re-generation of identity!,no,undetermined,0,0,0,no,0.0016470944358440928,no,0.0024655700071316033,no,0.0024384234261162017,no,0.0022975001809207507
1084,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Get the caller principals,no,undetermined,0,0,0,no,0.0064981816276491935,no,0.005944542817846805,no,0.00581420790773711,no,0.005535864521369573
1085,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// refresh doesn't cascade to uninitialized collections,no,undetermined,0,0,0,no,0.01359274908153951,no,0.014253881288217146,no,0.0137841943870212,no,0.01332959261787028
1086,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//private static final Alias DEFAULT_ALIAS = new Alias(10, null);",no,undetermined,0,0,0,no,0.005562496928594545,no,0.00791780708743941,no,0.0073730790308077325,no,0.007077812213696382
1087,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//do nothing,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
1088,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*public boolean isNonExistant(EntityKey key) {
		return nonExistantEntityKeys.contains(key);
	}*/",no,undetermined,0,0,0,no,0.0012647243169287249,no,0.002087382343384735,no,0.0020724033480189795,no,0.0019588783025147292
1089,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// generate id select fragment and then property select fragment for // each expression, just like generateSelectFragments().",no,undetermined,0,0,0,no,0.08403392685632041,no,0.014254324600005346,no,0.013779917538287579,no,0.013304637031455147
1090,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*public boolean isNonExistant(EntityUniqueKey key) {
		return nonExistentEntityUniqueKeys.contains(key);
	}*/",no,undetermined,0,0,0,no,0.0012647243169287249,no,0.002087382343384735,no,0.0020724033480189795,no,0.0019588783025147292
1091,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//special case ... this is the leaf of the containment graph, even though not immutable",no,undetermined,0,0,0,no,0.0068180344349273855,no,0.006846706270888651,no,0.006610264245057495,no,0.0063276415294523285
1092,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// iterate all the entities currently associated with the persistence context.,no,undetermined,0,0,0,no,0.010360805449742804,no,0.011066826503203866,no,0.010659401580221892,no,0.01027119138148278
1093,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// According to both the ANSI-SQL and JPA specs, trim takes a variable number of parameters between 1 and 4. // at least one paramer (trimSource) is required.  From the SQL spec: // // <trim function> ::= //      TRIM <left paren> <trim operands> <right paren> // // <trim operands> ::= //      [ [ <trim specification> ] [ <trim character> ] FROM ] <trim source> // // <trim specification> ::= //      LEADING //      | TRAILING //      | BOTH // // If <trim specification> is omitted, BOTH is assumed. // If <trim character> is omitted, space is assumed",no,undetermined,0,0,0,no,0.0030937738269691435,no,0.012631405537439268,no,0.01231778046051645,no,0.012085602422000243
1094,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// does this entity entry pertain to the entity persister in which we are interested (owner)?,no,undetermined,0,0,0,no,0.005450598672573454,no,0.00484814468191799,no,0.0046686001132296975,no,0.004288982600527875
1095,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/////////////////////////////////////////////////////////////////////// // Prepare persisters and link them up with their cache // region/access-strategy,no,undetermined,0,0,0,no,0.01411265510615052,no,0.014273707587353732,no,0.013752524105051032,no,0.013338332246087879
1096,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//check if the managed object is the parent,no,undetermined,0,0,0,no,0.03786783300488972,no,0.014267181125988593,no,0.013763907066577223,no,0.013306584331854885
1097,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Allows various loaders (ok mainly the QueryLoader :) to check // whether scrolling of their result set should be allowed. // // By default it is allowed.,no,undetermined,0,0,0,no,0.013135782972139501,no,0.014266714641653066,no,0.013776532723352867,no,0.013318528167393585
1098,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// otherwise, the proxy was pruned during the serialization process",no,undetermined,0,0,0,no,0.0013080642042788185,no,0.0017521421915936244,no,0.001681419933126495,no,0.0014412211148630667
1099,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// does not handle arrays (thats ok, cos they can't be lazy) // or newly instantiated collections, so we can do the cast",no,undetermined,0,0,0,no,0.05328619403555943,no,0.014238820691680242,no,0.013753096752201176,no,0.013333490994936296
1100,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// adds remove as a sort-of alias for delete...,no,undetermined,0,0,0,no,0.013387449741322275,no,0.014265675936565027,no,0.013715356610540913,no,0.013272533792518977
1101,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//unquotedIdentifierColumnName = identifierColumnAlias;,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
1102,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//return lhsPersister.getSubclassPropertyColumnNames(property);,no,undetermined,0,0,0,no,0.0014154189449772515,no,0.0013423379573468295,no,0.0013268120398398024,no,0.001224787591332729
1103,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// saves / updates don't cascade to uninitialized collections,no,undetermined,0,0,0,no,0.0062986518484693015,no,0.005870574244926873,no,0.005789655717313352,no,0.005623548940074049
1104,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//EARLY EXIT,no,undetermined,0,0,0,no,0.002670991679035732,no,0.002232446739692084,no,0.002188658649593499,no,0.002052037746907664
1105,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// create our own copy of the user-supplied tuplizer impl map,no,undetermined,0,0,0,no,0.004017155969450715,no,0.005474229522902947,no,0.005287367080567051,no,0.004810789436332548
1106,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if the identifier is quoted, remove the quotes",no,undetermined,0,0,0,no,0.015359476008056996,no,0.014175327152654316,no,0.013418994352936699,no,0.01295421119933399
1107,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we can do the cast since orphan-delete does not apply to: // 1. newly instantiated collections // 2. arrays (we can't track orphans for detached arrays),no,undetermined,0,0,0,no,0.02039419185890255,no,0.010686476843589645,no,0.00988051821307971,no,0.010196794152847757
1108,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//truncate the identifier to the max alias length, less the suffix length",no,undetermined,0,0,0,no,0.0070764253107372735,no,0.006957235960353813,no,0.006506265928594013,no,0.006231819538985935
1109,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
1110,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//full joins are not supported.. yet!,no,undetermined,0,0,0,no,0.010729177015059372,no,0.011846881911349154,no,0.011141367853862879,no,0.010728702352594544
1111,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		 You may still have other ResultSets or update counts left to process here //		 but you can't do it now or the ResultSet you just got will be closed,no,undetermined,0,0,0,no,0.0011411409857454038,no,0.0012225315798178344,no,0.0011779364730211777,no,0.0010667636369556368
1112,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// null is not considered the same type as Integer. //$NON-NLS-1 //$NON-NLS-1,no,undetermined,0,0,0,no,0.005475551685944527,no,0.007050538471663358,no,0.006683820181071055,no,0.006343775879341874
1113,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// properly handle property-ref-based associations,no,undetermined,0,0,0,no,0.011557016093003374,no,0.014240836429972415,no,0.013753492627910468,no,0.01330926369100337
1114,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the outerJoinsAfterWhere needs to come before where clause to properly // handle dynamic filters,no,undetermined,0,0,0,no,0.030956428432818338,no,0.014247383766229442,no,0.013750596502334376,no,0.01330628157607015
1115,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// determine the id getter and setter methods from the proxy interface (if any) // determine all interfaces needed by the resulting proxy,no,undetermined,0,0,0,no,0.010480810519502781,no,0.008922907312410203,no,0.008464267472651941,no,0.007649871277103703
1116,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//$NON-NLS-1,no,undetermined,0,0,0,no,0.008901048514311482,no,0.009626142740322845,no,0.009228004327805595,no,0.008861387317920397
1117,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// add another (inner) nested select // add the main query // close off the inner nested select,no,undetermined,0,0,0,no,0.005423164790599974,no,0.00504922597587699,no,0.004647767742884881,no,0.004436806018514074
1118,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//$NON-NLS-1,no,undetermined,0,0,0,no,0.008901048514311482,no,0.009626142740322845,no,0.009228004327805595,no,0.008861387317920397
1119,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		origin.addDestination( destination ); // This was the cause of HHH-242 //		origin.setType( FROM_FRAGMENT );			// Set the parent node type so that the AST is properly formed. // The destination node will have all the FROM text. // The parent node is a collection join too (voodoo - see JoinProcessor),no,undetermined,0,0,0,no,0.016833688939665085,no,0.010774562206539289,no,0.01023014771040228,no,0.009881588445073839
1120,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//$NON-NLS-1,no,undetermined,0,0,0,no,0.008901048514311482,no,0.009626142740322845,no,0.009228004327805595,no,0.008861387317920397
1121,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// then handle any user-defined entity modes...,no,undetermined,0,0,0,no,0.013165502293311857,no,0.011755317390110296,no,0.011144764600422881,no,0.01102639285466395
1122,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//$NON-NLS-1,no,undetermined,0,0,0,no,0.008901048514311482,no,0.009626142740322845,no,0.009228004327805595,no,0.008861387317920397
1123,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0029192075517518335,no,0.0019428635406165216,no,0.0019258753864740586,no,0.0018095004858472681
1124,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// strip off any leading 'and' token,no,undetermined,0,0,0,no,0.0040008787203764115,no,0.0032739859925839964,no,0.003160056244849277,no,0.0029821445889049183
1125,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// then the pojo tuplizer, using the dynamic-map tuplizer if no pojo representation is available",no,undetermined,0,0,0,no,0.0064716270017875464,no,0.006897642598705864,no,0.00647698993367357,no,0.0060326264398394185
1126,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// if the condition is not already there...,no,undetermined,0,0,0,no,0.013226361858061813,no,0.014259421869577134,no,0.013769030016209261,no,0.013305577056995732
1127,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// this has been shown to happen occasionally in rare cases // when using a transaction manager + transaction-timeout // where the timeout calls back through Hibernate's // registered transaction synchronization on a separate // ""reaping"" thread.  In cases where that reaping thread // executes through this block at the same time the main // application thread does we can get into situations where // these CMEs occur.  And though it is not ""allowed"" per-se, // the end result without handling it specifically is infinite // looping.  So here, we simply break the loop",no,undetermined,0,0,0,no,0.08276452419058053,no,0.0142306274279938,no,0.013770729836897292,no,0.013325958540391225
1128,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//dontSpace.add(""'"");",no,undetermined,0,0,0,no,0.0022048347179757614,no,0.0016784027429774203,no,0.00224188081618006,no,0.00210688983040643
1129,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//	public ComponentMetamodel(Component component, SessionFactoryImplementor sessionFactory) {",no,undetermined,0,0,0,no,0.023595642162085085,no,0.014255841511143815,no,0.01376352129769882,no,0.013339411351766944
1130,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//for MySQL,no,undetermined,0,0,0,no,0.0010435094539594009,no,0.005364488013003585,no,0.005179352035828026,no,0.004933309716526811
1131,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Detect discriminator values...,no,undetermined,0,0,0,no,0.004813668367729711,no,0.003693205191043554,no,0.003614261703454661,no,0.0034221793028047396
1132,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/**
	 * Set a custom entity resolver. This entity resolver must be
	 * set before addXXX(misc) call.
	 * Default value is {@link org.hibernate.util.DTDEntityResolver}
	 *
	 * @param entityResolver entity resolver to use
	 */",no,undetermined,0,0,0,no,0.011908004083578854,no,0.012164829322297005,no,0.01130218640958019,no,0.010925956980965292
1133,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Handle any filters applied to this collection,no,undetermined,0,0,0,no,0.006889221579555824,no,0.005021863763016552,no,0.004835453187813495,no,0.004655313143998256
1134,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//handle a property-ref,no,undetermined,0,0,0,no,0.003759853552335691,no,0.014276975146969061,no,0.01377408799514514,no,0.013339205932997429
1135,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if we could not register a synchronization, //do the before/after completion callbacks //ourself (but we need to let jdbcContext //know that this is what we are going to //do, so it doesn't keep trying to register //synchronizations)",no,undetermined,0,0,0,no,0.01842498819674291,no,0.014244943199669687,no,0.013776905329868893,no,0.013325110350111483
1136,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//HashMap columnsUnique = new HashMap();,no,undetermined,0,0,0,no,0.0033661923619864305,no,0.007147458464260459,no,0.006989019444969158,no,0.00674503750913523
1137,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// then the pojo tuplizer, using the dynamic-map tuplizer if no pojo representation is available",no,undetermined,0,0,0,no,0.0064716270017875464,no,0.006897642598705864,no,0.00647698993367357,no,0.0060326264398394185
1138,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//null caused some problems,no,undetermined,0,0,0,no,0.02463599383218785,no,0.014270396679449392,no,0.013786243588618621,no,0.01332888375583521
1139,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// two conditions where we need to transform this to a theta-join syntax: //      1) 'elem' is the ""root from-element"" in correlated subqueries //      2) The DotNode.useThetaStyleImplicitJoins has been set to true //          and 'elem' represents an implicit join",no,undetermined,0,0,0,no,0.018362327633993914,no,0.014276496235689865,no,0.013782683127979067,no,0.013335940785430274
1140,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*package*/,no,undetermined,0,0,0,no,0.0024028778345724696,no,0.0026803190818122666,no,0.0025599410532666095,no,0.002410048974527652
1141,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// cascade the refresh prior to refreshing this entity,no,undetermined,0,0,0,no,0.003964810267169549,no,0.00553841211643285,no,0.005576772819687214,no,0.005352806468458505
1142,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//not sure if this would ever be null but wanted to be careful,no,undetermined,0,0,0,no,0.09613091904513602,no,0.014237500921758508,no,0.013767468576480889,no,0.01331033708127024
1143,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Impl note: takes advantage of the fact that an escpaed single quote // embedded within a quote-block can really be handled as two seperate // quote-blocks for the purposes of this method...,no,undetermined,0,0,0,no,0.04679871052002019,no,0.014256751844047783,no,0.013754317979862414,no,0.013323014824523556
1144,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//even on inverse=""true""",no,undetermined,0,0,0,no,0.013214923206440245,no,0.014273897898752842,no,0.013754882870350447,no,0.013305480806858479
1145,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// PROPERTIES,no,undetermined,0,0,0,no,0.005804620994376463,no,0.005156405132770629,no,0.0049524991266087955,no,0.004725739377578479
1146,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*package*/,no,undetermined,0,0,0,no,0.0024028778345724696,no,0.0026803190818122666,no,0.0025599410532666095,no,0.002410048974527652
1147,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we need to dirty check many-to-ones with not-found=""ignore"" in order  // to update the cache (not the database), since in this case a null // entity reference can lose information",no,undetermined,0,0,0,no,0.06115126471368757,no,0.014276135335303657,no,0.01379364225592505,no,0.013332802122878578
1148,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*package*/,no,undetermined,0,0,0,no,0.0024028778345724696,no,0.0026803190818122666,no,0.0025599410532666095,no,0.002410048974527652
1149,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// register hibernate types for default use in scalar sqlquery type auto detection,no,undetermined,0,0,0,no,0.013925701251720676,no,0.014265633255148432,no,0.013786212505214777,no,0.013316536756977205
1150,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If true then execute db updates, otherwise just generate and display updates",no,undetermined,0,0,0,no,0.006077809218154193,no,0.005377483613833045,no,0.0050086503041454405,no,0.004814062380249777
1151,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// SQLFunction implementation,no,undetermined,0,0,0,no,0.013233579703368387,no,0.01425141909617649,no,0.013752967834059337,no,0.013324750669858972
1152,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we only release the connection,no,undetermined,0,0,0,no,0.04621990161035792,no,0.014234359658226375,no,0.013762863628182275,no,0.013326690866263934
1153,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//we only check the version when _upgrading_ lock modes,no,undetermined,0,0,0,no,0.008350831793897931,no,0.010189168229719303,no,0.013175360182934985,no,0.012709780722404905
1154,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// deprecated option...,no,undetermined,0,0,0,no,0.010861087173291005,no,0.014257416069979122,no,0.013769228387257767,no,0.0133363728561585
1155,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// only carry on if the method has no parameters,no,undetermined,0,0,0,no,0.008264930192995585,no,0.006368889706175799,no,0.005998473181457411,no,0.00573180567392832
1156,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*NativeSQLQueryReturn*/,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
1157,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//woops we got an instance of another class hierarchy branch,no,undetermined,0,0,0,no,0.005077934686680495,no,0.0056694228639745685,no,0.00533409362683149,no,0.005056832799196648
1158,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// COMPOSITE-ID,no,undetermined,0,0,0,no,0.019193224800990345,no,0.009622368395682087,no,0.008748030724838186,no,0.008414768348926089
1159,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Create an OuterJoinGenerator for this dialect.,no,undetermined,0,0,0,no,0.019509584555618954,no,0.014258766487419887,no,0.01377639121213063,no,0.013318488965772968
1160,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if an exception occurs during flush, user must call rollback()",no,undetermined,0,0,0,no,0.004082261310011911,no,0.0021588352600374386,no,0.001579641028355335,no,0.0014689608846328323
1161,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*<String>*/,no,undetermined,0,0,0,no,0.00295680190675367,no,0.0033804834766621877,no,0.0034348842877159366,no,0.0032511560799850007
1162,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//actually, this last test is probably unnecessary, since  //beforeCompletion() doesn't get called during rollback",no,undetermined,0,0,0,no,0.08075258432737666,no,0.014258521096136418,no,0.013770187414726772,no,0.013304548203771225
1163,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we need to step through the rows one row at a time (slow),no,undetermined,0,0,0,no,0.007623286576760369,no,0.014247051376646232,no,0.013785726322060616,no,0.01330990158903632
1164,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//final boolean forceCacheRefresh,",no,undetermined,0,0,0,no,0.00024997478579600306,no,0.0004940587870305461,no,0.00046031183846367976,no,0.0004235391267929675
1165,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0032242303260156323,no,0.0034414156021257214,no,0.0050354201063338684,no,0.004772473944519689
1166,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Create an DotNode AST for the path and resolve it.,no,undetermined,0,0,0,no,0.01931863003065564,no,0.013886185843455013,no,0.013049151490756522,no,0.012649917710813174
1167,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//its already loaded so don't need to hydrate it,no,undetermined,0,0,0,no,0.03690627625212824,no,0.0142470024554837,no,0.01378386075512376,no,0.013346558378548368
1168,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if an exception occurs during flush, user must call rollback()",no,undetermined,0,0,0,no,0.004082261310011911,no,0.0021588352600374386,no,0.001579641028355335,no,0.0014689608846328323
1169,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// orphans should be deleted during delete,no,undetermined,0,0,0,no,0.0051492925828226736,no,0.010570810767434918,no,0.010214714666398611,no,0.009824995244890337
1170,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// swallow it, and continue to roll back JTA transaction",no,undetermined,0,0,0,no,0.004697398757761907,no,0.003064851749441027,no,0.0029415337783629636,no,0.0027720531080212747
1171,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// here, we have two possibilities: // 		1) the property-name matches the explicitly identifier property name //		2) the property-name matches the implicit 'id' property name",no,undetermined,0,0,0,no,0.010493172807331908,no,0.00783829393543464,no,0.007950893963208028,no,0.007719399516698957
1172,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// so the transaction is already rolled back, by JTA spec",no,undetermined,0,0,0,no,0.004615324033623435,no,0.002224513428468478,no,0.002117555222620296,no,0.0019853120810033797
1173,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we found a collection element in the result set,no,undetermined,0,0,0,no,0.003917050799136783,no,0.0026732181937937707,no,0.0028990187599090907,no,0.0027617110371686146
1174,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this method is a noop if there is a Synchronization!,no,undetermined,0,0,0,no,0.0049136681312486625,no,0.004151055526293436,no,0.004034244861298069,no,0.0038377995057345617
1175,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// register the standard dialect resolver,no,undetermined,0,0,0,no,0.005026202141425377,no,0.010356341479069688,no,0.010020676602268963,no,0.009637014491100677
1176,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// why is all others non final ?,no,undetermined,0,0,0,no,0.0037200944809343333,no,0.007638110029015865,no,0.007238734870465386,no,0.006945649043363489
1177,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// even though we might find a pre-existing element by join path, we may not be able to reuse it...",no,undetermined,0,0,0,no,0.00567738786803797,no,0.0068869856049884595,no,0.0067298775896912424,no,0.006427175113947607
1178,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// HELLA IMPORTANT OPTIMIZATION!!!,no,undetermined,0,0,0,no,0.007828763449370016,no,0.007028205381655632,no,0.0070844173961526705,no,0.006821283290873417
1179,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//include the discriminator and class-level where, but not filters",no,undetermined,0,0,0,no,0.003784144686913902,no,0.005111496828443884,no,0.004782371141567186,no,0.004546636572932851
1180,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*return that.type.equals(type) && 
			EqualsHelper.equals(that.value, value);*/",no,undetermined,0,0,0,no,0.00199952747385751,no,0.00236086450567134,no,0.0034423644293775243,no,0.003210845587405616
1181,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//null child could occur for no from clause in a filter,no,undetermined,0,0,0,no,0.007212015436648067,no,0.005534665750337878,no,0.0050641395480383825,no,0.00458482017270758
1182,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The 'from element' that the property is in.,no,undetermined,0,0,0,no,0.00308139848247197,no,0.002567284404467539,no,0.002532201079650101,no,0.0024055530276717698
1183,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Since the result set cursor is always left at the first // physical row after the ""last processed"", we need to jump // back one position to get the key value we are interested // in skipping",no,undetermined,0,0,0,no,0.0020858775679952293,no,0.00219461865706961,no,0.0021919119831536825,no,0.0020178973283522116
1184,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// WebSphere, however, is not a sane JEE/JTA container...",no,undetermined,0,0,0,no,0.0035955989206456996,no,0.0033269792464120417,no,0.00296999046230955,no,0.0028157864336162803
1185,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// loop through all the associated entities and make sure they have been // processed before the latest // batch associated with this entity type.,no,undetermined,0,0,0,no,0.006694359953076403,no,0.014274976586526916,no,0.013789477137545525,no,0.013317939010498346
1186,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// for sane JEE/JTA containers, the transaction itself functions as its identifier...",no,undetermined,0,0,0,no,0.0026256366983553724,no,0.0017544073222966437,no,0.0016662173428466046,no,0.0015531083668548508
1187,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// First, try to find a matching constructor accepting a ViolatedConstraintNameExtracter param...",no,undetermined,0,0,0,no,0.04421600145513734,no,0.014272071590079188,no,0.013785706364630923,no,0.013314232826252225
1188,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//swallow, the transaction was finished",no,undetermined,0,0,0,no,0.0018899889133981546,no,0.0012569152096173846,no,0.0012167221313962972,no,0.0011390105503887712
1189,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//will be ignored, using the existing Entry instead",no,undetermined,0,0,0,no,0.0033209919408133674,no,0.003217364484286806,no,0.003083588001752643,no,0.0029249323447972054
1190,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// 60 seconds,no,undetermined,0,0,0,no,0.006371447359833437,no,0.006339747874598909,no,0.006147084709193628,no,0.005866638305362936
1191,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// this property belongs to the table and it is not specifically // excluded from optimistic locking by optimistic-lock=""false""",no,undetermined,0,0,0,no,0.012235117899542456,no,0.0071340634971478155,no,0.007700634050052681,no,0.007280566511864563
1192,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Don't hold a transactional lock for this ,no,undetermined,0,0,0,no,0.005932565596894332,no,0.005572875350583199,no,0.007236299136490929,no,0.006942314338461135
1193,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// some collections are not lazy:,no,undetermined,0,0,0,no,0.020749698557831386,no,0.010114820511625303,no,0.009834143825469772,no,0.006379825973340106
1194,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Fix up the resident flag,no,undetermined,0,0,0,no,0.05478811791220468,no,0.014255395812578031,no,0.013747150541269066,no,0.013314422058866663
1195,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Does the LIMIT clause come at the start of the SELECT statement, rather than at the end?",no,undetermined,0,0,0,no,0.022349890322980223,no,0.01425990569319456,no,0.013759681055789171,no,0.01331549734011892
1196,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// all AliasToEntityMapResultTransformer are considered equal ~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.00017424281267757426,no,0.00033503575192942516,no,0.0003411402888174432,no,0.0003108448801205464
1197,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//the following two lines were added to ensure that this.params is not null, which //can happen with two-deep nested subqueries",no,undetermined,0,0,0,no,0.012455272127309291,no,0.011917874610761341,no,0.011788168672961553,no,0.011434266786590071
1198,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Set the attributes of the property reference expression.,no,undetermined,0,0,0,no,0.020175023132751036,no,0.013462673426011623,no,0.012370335916011306,no,0.011903523641458044
1199,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the current batch number is the latest batch for this entity type.,no,undetermined,0,0,0,no,0.008798932597574083,no,0.01424917162955382,no,0.01377602792877582,no,0.0133349123934186
1200,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//take a snapshot,no,undetermined,0,0,0,no,0.003107160101098385,no,0.014235470367378005,no,0.013765983133484955,no,0.013320335481950104
1201,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//we can inner join to superclass tables (the row MUST be there) //we can never inner join to subclass tables,no,undetermined,0,0,0,no,0.008963890331362459,no,0.006473611826803022,no,0.006433793047114508,no,0.006197318898800598
1202,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Never evict this node,no,undetermined,0,0,0,no,0.0034672377443622036,no,0.00371168454462784,no,0.003578283175147221,no,0.0034241206895773185
1203,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Does the collection referenced by this FromElement // specify an order-by attribute?  If so, attach it to // the query's order-by",no,undetermined,0,0,0,no,0.015947372011095324,no,0.009845240193743394,no,0.0095025555954564,no,0.009216602410434638
1204,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Create the join element under the from element.,no,undetermined,0,0,0,no,0.00295488656139396,no,0.0023227674002985173,no,0.0022738327082618454,no,0.002138757778855864
1205,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// for merging of versioned entities, we consider the version having // been changed only when: // 1) the two version values are different; //      *AND* // 2) The target actually represents database state! // // This second condition is a special case which allows // an entity to be merged during the same transaction // (though during a seperate operation) in which it was // originally persisted/saved",no,undetermined,0,0,0,no,0.009116673257145283,no,0.006466328440284098,no,0.0058117918414276135,no,0.005604153628790221
1206,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Moved here from SelectClause [jsd],no,undetermined,0,0,0,no,0.14481619768233603,no,0.13672448524730393,no,0.13254371848470897,no,0.13256071405978934
1207,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// pre-determine and cache the hashcode,no,undetermined,0,0,0,no,0.025618511068954585,no,0.014242001555149502,no,0.01376517702820478,no,0.013316189264709226
1208,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,///////////////////////////////////////////////////////////////////////////,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
1209,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// (NOT (BETWEEN a b) ) => (NOT_BETWEEN a b),no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
1210,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Make sure the root node for the region exists and  // has a DataVersion that never complains,no,undetermined,0,0,0,no,0.0072868243245722535,no,0.005590217376765464,no,0.005237563300502787,no,0.004998873578096201
1211,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//			ps.close(); //just close it; do NOT try to return it to the pool! //NOTE: early exit!,no,undetermined,0,0,0,no,0.0009529713297033936,no,0.0006601573644531205,no,0.0006489618861320502,no,0.0005916081400163392
1212,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// map of EntityMode -> Tuplizer,no,undetermined,0,0,0,no,0.0030378770996634125,no,0.0031986987325905063,no,0.003112779356198223,no,0.002799536931219608
1213,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Now write the values of fields onto the prepared statement,no,undetermined,0,0,0,no,0.004100901384812939,no,0.0036718130537496847,no,0.0035845989791356146,no,0.003412819275689261
1214,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this is a virtual id property...,no,undetermined,0,0,0,no,0.022313024832806193,no,0.014133646010837974,no,0.013777097406465384,no,0.013330634673129404
1215,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Need to use the identifier type of the collection owner // since the incoming is value is actually the owner's id. // Using the collection's key type causes problems with // property-ref keys...,no,undetermined,0,0,0,no,0.08991102300424926,no,0.014245657686750898,no,0.01376931628740714,no,0.013313038979533067
1216,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// create our own copy of the user-supplied tuplizer impl map,no,undetermined,0,0,0,no,0.004017155969450715,no,0.005474229522902947,no,0.005287367080567051,no,0.004810789436332548
1217,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// The current_timestamp is more accurate, but only known to be supported // in SQL Server 7.0 and later (i.e., Sybase not known to support it at all)",no,undetermined,0,0,0,no,0.014324559448463541,no,0.012399774143047484,no,0.011747458265645815,no,0.011385139560492608
1218,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//this one needed only for guessEntityMode(),no,undetermined,0,0,0,yes,0.9878039885063625,yes,0.985524508468894,yes,0.9846987058529261,yes,0.9861997935646429
1219,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/* will check current level if some of them are not null
		 * or sublevels if they exist
		 */",no,undetermined,0,0,0,no,0.004106780734752846,no,0.006922070974740658,no,0.006854725881377974,no,0.00652833187437723
1220,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Build the dynamic-map tuplizer...,no,undetermined,0,0,0,no,0.0019014545699519664,no,0.0026485782845768456,no,0.0026024310788804864,no,0.0023597510124458722
1221,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Pointbase has no known variation of a ""SELECT ... FOR UPDATE"" syntax...",no,undetermined,0,0,0,no,0.00317884835584486,no,0.005313635391457084,no,0.005093300591133912,no,0.004856724733608821
1222,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// then dom4j tuplizer, if dom4j representation is available",no,undetermined,0,0,0,no,0.00442892258666285,no,0.005046810769175189,no,0.004620259605548761,no,0.004415489722207463
1223,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// See if the entity is already bound to this session, if not look at the // entity identifier and assume that the entity is persistent if the // id is not ""unsaved"" (that is, we rely on foreign keys to keep // database integrity)",no,undetermined,0,0,0,no,0.01904537490457438,no,0.009111546795782754,no,0.008393523174722676,no,0.008147503920776395
1224,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// do the work,no,undetermined,0,0,0,no,0.0132249669749697,no,0.014235866379695232,no,0.013754261077320116,no,0.013313846411466917
1225,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// if its an uninitialized proxy it can't be transient,no,undetermined,0,0,0,no,0.004233256359616126,no,0.0033125259319405484,no,0.003192795654514505,no,0.00286470950905167
1226,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// We've been here before,no,undetermined,0,0,0,no,0.0029177831081563053,no,0.003143414152512262,no,0.002781226211983156,no,0.002621320316245902
1227,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//return the id, so we can use it to reset the proxy id //return result;",no,undetermined,0,0,0,no,0.014468774806035367,no,0.007960055880766242,no,0.008128357192269052,no,0.007497765056839597
1228,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Build the dynamic-map tuplizer...,no,undetermined,0,0,0,no,0.0019014545699519664,no,0.0026485782845768456,no,0.0026024310788804864,no,0.0023597510124458722
1229,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// return false here, as most databases do not properly support this construct...",no,undetermined,0,0,0,no,0.019773495776891997,no,0.014245299607548861,no,0.013789755153713024,no,0.013319875006732988
1230,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// do the work,no,undetermined,0,0,0,no,0.0132249669749697,no,0.014235866379695232,no,0.013754261077320116,no,0.013313846411466917
1231,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is persister-centric and/or EntityInfo-centric ~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.023581224754511555,no,0.014261544994595933,no,0.01375621134484748,no,0.013315125883931765
1232,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// put the ""standard"" tuplizers into the tuplizer map first",no,undetermined,0,0,0,no,0.0017513176169285476,no,0.0019253340939727772,no,0.00186077633650537,no,0.0016674733281091172
1233,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// hit the database, after checking the session cache for a snapshot",no,undetermined,0,0,0,no,0.023696535643614475,no,0.014279887322389192,no,0.013789081797685662,no,0.013334675503696707
1234,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// found a ctor, but it was not publicly accessible so try to request accessibility",no,undetermined,0,0,0,no,0.0031025062692689163,no,0.004195457619285252,no,0.00407692444148311,no,0.003913892079112817
1235,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// our parent is another dot node, meaning we are being further dereferenced. // thus we need to generate a join unless the parent refers to the associated // entity's PK (because 'our' table would know the FK).",no,undetermined,0,0,0,no,0.024198762210740535,no,0.01199013863726555,no,0.011277100127046797,no,0.010959289628700436
1236,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	private final SessionFactoryImplementor sessionFactory;,no,undetermined,0,0,0,no,0.006875888219858407,no,0.009947632597247616,no,0.009495611868893973,no,0.009147146488918345
1237,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Search for collections by reachability, updating their role. // We don't want to touch collections reachable from a deleted object",no,undetermined,0,0,0,no,0.02044122741271656,no,0.014255926457116225,no,0.013749451262796874,no,0.01333530172148867
1238,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// cached for efficiency...,no,undetermined,0,0,0,no,0.0027514994797633286,no,0.0026371285940875616,no,0.002558620416215717,no,0.0024171640641111997
1239,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// sql server just returns automatically,no,undetermined,0,0,0,no,0.0177686634838767,no,0.014252132936720353,no,0.013760219680185974,no,0.013306699650078017
1240,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		this.sessionFactory = sessionFactory;,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
1241,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.005105934435732014,no,0.004717894353608397,no,0.004535601211437239,no,0.00430148321563236
1242,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//it was not embedded, so the argument is just an id",no,undetermined,0,0,0,no,0.02940285424907402,no,0.01424545369472602,no,0.013777838375682796,no,0.0133489904841592
1243,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we have specialized case of a detached entity from the // perspective of the merge operation.  Specifically, we // have an incoming entity instance which has a corresponding // entry in the current persistence context, but registered // under a different entity instance",no,undetermined,0,0,0,no,0.009906142970473628,no,0.009608174575333509,no,0.008756376244139424,no,0.008415380689297626
1244,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// then dom4j tuplizer, if dom4j representation is available",no,undetermined,0,0,0,no,0.00442892258666285,no,0.005046810769175189,no,0.004620259605548761,no,0.004415489722207463
1245,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//where fragment must be empty!,no,undetermined,0,0,0,no,0.0908635787992899,no,0.014257541253436954,no,0.013790740303674472,no,0.013336977665595794
1246,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// or its key changed,no,undetermined,0,0,0,no,0.00022451093599757746,no,0.00030170237827022216,no,0.0003008892941245912,no,0.00027382469814858423
1247,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//					int parameterStart = getWalker().getNumberOfParametersInSetClause(); //					List allParams = getIdSelectParameterSpecifications(); //					Iterator whereParams = allParams.subList( parameterStart, allParams.size() ).iterator();",no,undetermined,0,0,0,no,0.018590040277535795,no,0.014241861140155068,no,0.011606192282940268,no,0.011206114202873492
1248,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// put the ""standard"" tuplizers into the tuplizer map first",no,undetermined,0,0,0,no,0.0017513176169285476,no,0.0019253340939727772,no,0.00186077633650537,no,0.0016674733281091172
1249,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.006927532883602286,no,0.005072580630937288,no,0.004981387994095583,no,0.004719457788542873
1250,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we will need to remove ye olde entries,no,undetermined,0,0,0,no,0.012235376822959942,no,0.014264061954867829,no,0.013774700741454524,no,0.013342840928886676
1251,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// add the current fragment to the THETA_JOINS node,no,undetermined,0,0,0,no,0.012230480444464675,no,0.006278204172581985,no,0.005819663438766591,no,0.005576377384106908
1252,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// force initialize!,no,undetermined,0,0,0,no,0.0010380163323692778,no,0.0010478370715547565,no,0.0010297354764907901,no,0.0009486258852567022
1253,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// lock doesn't cascade to uninitialized collections,no,undetermined,0,0,0,no,0.006626707253004315,no,0.006844668030522797,no,0.008512181700121637,no,0.008188353930766484
1254,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//return currentId;,no,undetermined,0,0,0,no,0.0008662229729892083,no,0.001371836346092846,no,0.0012239512111443373,no,0.0011516724250478332
1255,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//unquotedIdentifierColumnName = null;,no,undetermined,0,0,0,no,0.013222556340648216,no,0.009918052080171226,no,0.00946412573100924,no,0.009230962605114459
1256,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//reset the id,no,undetermined,0,0,0,no,0.0134713416222997,no,0.006857956947123497,no,0.006912042277175498,no,0.006621620269859655
1257,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//addInitializedCollection(collection, persister, id);",no,undetermined,0,0,0,no,0.047700506733620404,no,0.014257266463999123,no,0.013760611866930473,no,0.013334890914854892
1258,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// CollectionPropertyMapping processes everything except 'index'.,no,undetermined,0,0,0,no,0.009825788489053258,no,0.014251811068328705,no,0.013785554706787,no,0.013330126125448644
1259,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if it is an uninitialized proxy, pointing //with this session, then when it is accessed, //the underlying instance will be ""contained""",no,undetermined,0,0,0,no,0.0018762656592717897,no,0.001419698940778416,no,0.001392512462728341,no,0.001259721819953975
1260,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//reset the version,no,undetermined,0,0,0,no,0.009855724503635623,no,0.006266188987271332,no,0.006268900092924715,no,0.005991641661645471
1261,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Note: this simply constructs a ""raw"" SQL_TOKEN representing the // where fragment and injects this into the tree.  This ""works""; // however it is probably not the best long-term solution. // // At some point we probably want to apply an additional grammar to // properly tokenize this where fragment into constituent parts // focused on the operators embedded within the fragment.",no,undetermined,0,0,0,yes,0.6110683038707256,yes,0.6981735747846674,yes,0.6544290278955678,yes,0.661525004718289
1262,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the default is to simply not lazy fetch properties for now...,no,undetermined,0,0,0,no,0.013662125374567062,no,0.010556162713538689,no,0.01073778409577505,no,0.007341789711048854
1263,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aliases for identifier ( alias.id ); skip if the entity defines a non-id property named 'id',no,undetermined,0,0,0,no,0.04454124220692987,no,0.014268005563092127,no,0.013771503079386814,no,0.01330847837761705
1264,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// else if it's elements changed,no,undetermined,0,0,0,no,0.0005908007332661221,no,0.0006719472244250783,no,0.0006655707508642479,no,0.0006108738341985288
1265,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		 This assumes you will want to ignore any update counts ,no,undetermined,0,0,0,no,0.0013891365066733571,no,0.0015599075278804786,no,0.0017729891166164788,no,0.0016769891526072723
1266,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//ATTRIBUTES MAINTAINED BETWEEN FLUSH CYCLES,no,undetermined,0,0,0,no,0.013781627201252143,no,0.007778877147618686,no,0.005683396608766651,no,0.005416682587171841
1267,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// now rebuild the insertions list. There is a batch for each entry in the name list.,no,undetermined,0,0,0,no,0.0036226540732799666,no,0.007579064585566754,no,0.007430821350788645,no,0.007124010751812801
1268,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// should be safe to only ever expect EntityPersister references here,no,undetermined,0,0,0,no,0.014000478991335975,no,0.01164230076299813,no,0.011645503409451346,no,0.011253142442375396
1269,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if the original is a PersistentCollection, and that original // was not flagged as dirty, then reset the target's dirty flag // here after the copy operation. // </p> // One thing to be careful of here is a ""bare"" original collection // in which case we should never ever ever reset the dirty flag // on the target because we simply do not know...",no,undetermined,0,0,0,no,0.01813017435904389,no,0.014261897902513572,no,0.01377287303741894,no,0.013303549187427037
1270,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// session-start/post-flush persistent state,no,undetermined,0,0,0,no,0.0034985461147026896,no,0.002672457548305239,no,0.0018723333853231817,no,0.0017571869548773024
1271,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0412893831663996,no,0.01425624653847941,no,0.013758522035227466,no,0.013309380176633634
1272,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// allow the CollectionSnapshot to be serialized,no,undetermined,0,0,0,no,0.010917554574715207,no,0.010436690233914489,no,0.01014080192460287,no,0.009747538792361425
1273,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// first, break down the returns into maps keyed by alias // so that role returns can be more easily resolved to their owners",no,undetermined,0,0,0,no,0.03660956274315964,no,0.014281493378547304,no,0.013753012691652071,no,0.01332485896678175
1274,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Add the second join, the one that ends in the destination table.",no,undetermined,0,0,0,no,0.016798022123904938,no,0.010404578317583858,no,0.010165413477322149,no,0.009892696988505124
1275,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Generate an 2d array of column names, the first dimension is parallel with the // return types array.  The second dimension is the list of column names for each // type.",no,undetermined,0,0,0,no,0.02823886128274871,no,0.014268298432495916,no,0.013760438696673491,no,0.013322951851418526
1276,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ATTRIBUTES USED ONLY DURING FLUSH CYCLE,no,undetermined,0,0,0,no,0.02756890531118024,no,0.014238197162663103,no,0.013773545722602252,no,0.013304505686434251
1277,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Create SQL_TOKEN nodes for the columns.,no,undetermined,0,0,0,no,0.0017406201807448074,no,0.01427243175826276,no,0.013766259094710829,no,0.013305238275115722
1278,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// ""current"" means the reference that was found during flush() ",no,undetermined,0,0,0,no,0.016810306166172063,no,0.008594744486122087,no,0.005890482939164423,no,0.005614703761829159
1279,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// RDMS has no known variation of a ""SELECT ... FOR UPDATE"" syntax...",no,undetermined,0,0,0,no,0.00317884835584486,no,0.005313635391457084,no,0.005093300591133912,no,0.004856724733608821
1280,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ignore this row of results! Note the early exit,no,undetermined,0,0,0,no,0.002150276407939105,no,0.0021951991844905913,no,0.0022055471550566884,no,0.0020577565856804043
1281,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// not final-static to avoid possible classcast exceptions if using different oracle drivers.,no,undetermined,0,0,0,no,0.04591497855807974,no,0.01426678056413524,no,0.013747462112528544,no,0.013302918003121241
1282,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// found a ctor, but it was not publicly accessible so try to request accessibility",no,undetermined,0,0,0,no,0.0031025062692689163,no,0.004195457619285252,no,0.00407692444148311,no,0.003913892079112817
1283,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Add the new node to the map so that we don't create it twice.,no,undetermined,0,0,0,no,0.010718923032524082,no,0.01262643968470319,no,0.012082526453852617,no,0.011454260287633277
1284,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		return getFactory().getSettings().getBytecodeProvider().getProxyFactoryFactory().buildProxyFactory();,no,undetermined,0,0,0,no,0.0008662229729892083,no,0.001371836346092846,no,0.0012239512111443373,no,0.0011516724250478332
1285,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Oracle driver reports to support getGeneratedKeys(), but they only // support the version taking an array of the names of the columns to // be returned (via its RETURNING clause).  No other driver seems to // support this overloaded version.",no,undetermined,0,0,0,no,0.009200749433956549,no,0.013765335330409788,no,0.013303533893726325,no,0.01292876339538304
1286,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//not final because proxy factory creation can fail,no,undetermined,0,0,0,no,0.0042031954902675625,no,0.006381285104428818,no,0.006044857679151199,no,0.005584322899904744
1287,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Register the FromElement with the FROM clause, now that we have the names and aliases.",no,undetermined,0,0,0,no,0.004244687782951884,no,0.008361864463498014,no,0.013783224849094519,no,0.013317188551431965
1288,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// superclass entity-name,no,undetermined,0,0,0,no,0.004645487501006096,no,0.003311947089542409,no,0.0030739929201390914,no,0.0029231243152634512
1289,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// First allow the actual type to control the return value. (the actual underlying sqltype could actually be different),no,undetermined,0,0,0,no,0.026939670097332172,no,0.014274241775129913,no,0.013783923054256072,no,0.013334707031401665
1290,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0412893831663996,no,0.01425624653847941,no,0.013758522035227466,no,0.013309380176633634
1291,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// cascade-save to collections AFTER the collection owner was saved,no,undetermined,0,0,0,no,0.00871202822890231,no,0.012477286205852043,no,0.012969278465772845,no,0.012618702073254018
1292,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
1293,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// ""pass along"" our initial embedded parameter node(s) to the first generated // sql fragment so that it can be handled later for parameter binding...",no,undetermined,0,0,0,no,0.013235396461808291,no,0.010075024481181707,no,0.009331254270428182,no,0.00906200743482496
1294,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// ""loaded"" means the reference that is consistent  // with the current database state",no,undetermined,0,0,0,no,0.011468942262721741,no,0.007995200046451545,no,0.0076585126716404795,no,0.0073558226259357075
1295,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// cache the actual id of the object, not the value of the // property-ref, which might not be initialized",no,undetermined,0,0,0,no,0.026763612991108177,no,0.014244041992862626,no,0.013774836290433483,no,0.013352599086656744
1296,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//init the aliases, after initing the constructornode",no,undetermined,0,0,0,no,0.0027435561340800638,no,0.0028035385257555337,no,0.006840680264345388,no,0.006532580692524181
1297,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// You may still have other ResultSets or update counts left to process here  // but you can't do it now or the ResultSet you just got will be closed ,no,undetermined,0,0,0,no,0.0011411409857454038,no,0.0012225315798178344,no,0.0011779364730211777,no,0.0010667636369556368
1298,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0412893831663996,no,0.01425624653847941,no,0.013758522035227466,no,0.013309380176633634
1299,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Multi-param string dialect functions...,no,undetermined,0,0,0,no,0.2025856600683883,no,0.21044495770191737,no,0.19422287478756983,no,0.19619469022517372
1300,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// during flush, we navigate the object graph to // collections and decide what to do with them",no,undetermined,0,0,0,no,0.026577342423249148,no,0.013449660592409304,no,0.010646538363766792,no,0.010389711582888794
1301,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// save() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.00652993554439106,no,0.007054519528461863,no,0.00688179749902024,no,0.006590829456122257
1302,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//collection.clearDirty(),no,undetermined,0,0,0,no,0.006366383764297572,no,0.001994227950983786,no,0.0018595336215417348,no,0.0017738590675420325
1303,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The 'from element' that represents the elements of the collection.,no,undetermined,0,0,0,no,0.0021807147594234714,no,0.0020104799744381004,no,0.001709738668300028,no,0.0016194269368728384
1304,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// legacy behavior (with no abstract attribute specified),no,undetermined,0,0,0,no,0.013126385697734326,no,0.014234759973526447,no,0.013791848851992026,no,0.013318064084521799
1305,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Constructors are always considered scalar results.,no,undetermined,0,0,0,no,0.002893944888699094,no,0.005093711785406421,no,0.005006012318294952,no,0.004753421477661427
1306,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Get ready to start adding nodes.,no,undetermined,0,0,0,no,0.027824607959317828,no,0.014283571670384505,no,0.013781631591682464,no,0.013312691197240987
1307,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//use the id column alias,no,undetermined,0,0,0,no,0.035419682525812866,no,0.014271717661832705,no,0.01378734294103542,no,0.013336435329254798
1308,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Collection Types:,no,undetermined,0,0,0,no,0.009119129759521534,no,0.0051544427932531545,no,0.005610114909979689,no,0.005434866669170471
1309,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// #3 - note that this is also true of ""datetime - :param""...",no,undetermined,0,0,0,no,0.22387224570187692,no,0.2086797154058932,no,0.20047596923980857,no,0.1965883307076848
1310,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//collection.clearDirty(),no,undetermined,0,0,0,no,0.006366383764297572,no,0.001994227950983786,no,0.0018595336215417348,no,0.0017738590675420325
1311,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we don't need to worry about existing version being uninitialized // because this block isn't called by a re-entrant load (re-entrant // loads _always_ have lock mode NONE),no,undetermined,0,0,0,no,0.02939747096531216,no,0.014231747730641675,no,0.013780206755519782,no,0.013314677567042257
1312,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//note: this affects the return value!,no,undetermined,0,0,0,no,0.014975398881420913,no,0.014262759154111043,no,0.013775102445155006,no,0.013326083685035472
1313,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// isTransactionCallbackRegistered denotes whether any Hibernate // Transaction has registered as a callback against this // JDBCContext; only one such callback is allowed.  Directly // serializing this value causes problems with JDBCTransaction, // or really any Transaction impl where the callback is local // to the Transaction instance itself, since that Transaction // is not serialized along with the JDBCContext.  Thus we // handle that fact here explicitly...",no,undetermined,0,0,0,no,0.040486153102147045,no,0.014276321492011948,no,0.013786656039656581,no,0.013334934134112795
1314,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// NOTE : evict() operates locally only (i.e., does not propogate // to any other nodes in the potential cluster).  This is // exactly what is needed when we destroy() here; destroy() is used // as part of the process of shutting down a SessionFactory; thus // these removals should not be propogated",no,undetermined,0,0,0,no,0.11224642999228199,no,0.10075492866136597,no,0.09600691473413803,no,0.0133358275277307
1315,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Generate the inner join -- The elements need to be joined to the collection they are in.,no,undetermined,0,0,0,no,0.022403584384623587,no,0.014248097234165744,no,0.013791654419416405,no,0.013347090117369845
1316,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// otherwise, perform a ""deep equivalence"" check...",no,undetermined,0,0,0,no,0.0037432327063409215,no,0.003875565739917851,no,0.004054078115323416,no,0.0038316123783472627
1317,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// might happen with a managed connection,no,undetermined,0,0,0,no,0.03930722686903667,no,0.014263134339918507,no,0.013757070375850052,no,0.013342529348554759
1318,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Need to account for allowable '_' within the variant,no,undetermined,0,0,0,no,0.016120170169233963,no,0.014257132553312584,no,0.01375282325842508,no,0.013328667802172954
1319,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// for expected parameter type injection, we expect that the lhs represents // some form of property ref and that the children of the in-list represent // one-or-more params.",no,undetermined,0,0,0,no,0.02217511076080574,no,0.014237461757375796,no,0.013773333191202053,no,0.01330959549200958
1320,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If there is no WHERE node, make one.",no,undetermined,0,0,0,no,0.01033632672951217,no,0.008310393296481132,no,0.008030825160749263,no,0.007777425251643105
1321,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we found it in the temp PC.  Should indicate we are in the midst of processing a result set // containing eager fetches via join fetch,no,undetermined,0,0,0,no,0.017231886845634092,no,0.010124376121271423,no,0.010489857284684217,no,0.009944324893580221
1322,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Add the type to the list of returned sqlResultTypes.,no,undetermined,0,0,0,no,0.006095478056077306,no,0.006073709040514582,no,0.006073859863720476,no,0.005716407287592942
1323,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0029192075517518335,no,0.0019428635406165216,no,0.0019258753864740586,no,0.0018095004858472681
1324,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// create one,no,undetermined,0,0,0,no,0.0021346106582313686,no,0.0030040079069607833,no,0.0029467281144813025,no,0.002775572280369278
1325,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// persists don't cascade to uninitialized collections,no,undetermined,0,0,0,no,0.010843573204206683,no,0.010781737117143033,no,0.010475229859436299,no,0.010140234721400179
1326,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//lobs cannot be compared,no,undetermined,0,0,0,no,0.01842797191029478,no,0.014273857262198911,no,0.013801683683588434,no,0.013337262314562285
1327,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// this property belongs to the table and it is not specifically // excluded from optimistic locking by optimistic-lock=""false""",no,undetermined,0,0,0,no,0.012235117899542456,no,0.0071340634971478155,no,0.007700634050052681,no,0.007280566511864563
1328,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Blobs are ignored by merge(),no,undetermined,0,0,0,no,0.0008847403383604194,no,0.0016246834475884223,no,0.0015606786096834262,no,0.0014533153849119866
1329,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// HHH-276 : implied joins in a subselect where clause - The destination needs to be added // to the destination's from clause. // Not sure if this is will fix everything, but it works.",no,undetermined,0,0,0,no,0.17996334725225177,no,0.14778865512876344,no,0.14354947690897876,no,0.14414792998183704
1330,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//value is the entity name,no,undetermined,0,0,0,no,0.0025518956248638787,no,0.001659705964662245,no,0.0014947228667881675,no,0.0014100573244821709
1331,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// handle the (assumed) valid cases: // #1 - the only valid datetime addition synatx is one or the other is a datetime (but not both),no,undetermined,0,0,0,no,0.03446874416659835,no,0.014255001490172814,no,0.013775801054963848,no,0.013339216289682107
1332,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//optimization,no,undetermined,0,0,0,no,0.0034409201056857623,no,0.002896936759745882,no,0.002975323277914364,no,0.0028218237875280066
1333,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the map of batch numbers to EntityInsertAction lists,no,undetermined,0,0,0,no,0.01453894556753884,no,0.014238090716780593,no,0.013779043045549636,no,0.013345549670283553
1334,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//optimization //optimization,no,undetermined,0,0,0,no,0.0034409201056857623,no,0.002896936759745882,no,0.002975323277914364,no,0.0028218237875280066
1335,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we don't need to worry about any condition in the ON clause // here (toFromFragmentString), since anything in the ON condition // is already applied to the whole query",no,undetermined,0,0,0,no,0.017991708007713127,no,0.014277793135568389,no,0.01361962373045819,no,0.013241222830463879
1336,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//re-snapshot,no,undetermined,0,0,0,no,0.003107160101098385,no,0.014235470367378005,no,0.013765983133484955,no,0.013320335481950104
1337,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the difficulty here is exactly what do we update in order to // force the version to be incremented in the db...,no,undetermined,0,0,0,no,0.008931918352830602,no,0.005667937130473778,no,0.00536528630578692,no,0.004512075357691929
1338,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// for convenience to save some lookups,no,undetermined,0,0,0,no,0.003846088537960255,no,0.0037951160652597237,no,0.003723616669398519,no,0.0035619061635278875
1339,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Regions can get instantiated in the course of normal work (e.g. // a named query region will be created the first time the query is // executed), so suspend any ongoing tx",no,undetermined,0,0,0,no,0.10471085570158994,no,0.08813227734712345,no,0.013778682194258854,no,0.01332293233451715
1340,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//NOTE: this is not updated when properties are fetched lazily!,no,undetermined,0,0,0,no,0.03652999281081944,no,0.014256719624495456,no,0.013774565820441911,no,0.01331370208083484
1341,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// An ident node can represent an index expression if the ident // represents a naked property ref //      *Note: this makes the assumption (which is currently the case //      in the hql-sql grammar) that the ident is first resolved //      itself (addrExpr -> resolve()).  The other option, if that //      changes, is to call resolve from here; but it is //      currently un-needed overhead.",no,undetermined,0,0,0,no,0.0399369705193725,no,0.014260009969590136,no,0.013781801815625933,no,0.013331734307126582
1342,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//EARLY EXIT!,no,undetermined,0,0,0,no,0.002670991679035732,no,0.002232446739692084,no,0.002188658649593499,no,0.002052037746907664
1343,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	public List getCollectionAliases() { //		return collectionAliases; //	} // //	/*public List getCollectionOwners() { //		return collectionOwners; //	}*/ // //	public List getCollectionOwnerAliases() { //		return collectionOwnerAliases; //	} // //	public List getCollectionPersisters() { //		return collectionPersisters; //	} // //	public Map getAlias2Persister() { //		return alias2Persister; //	} // //	/*public boolean isCollectionInitializer() { //		return isCollectionInitializer; //	}*/ // ////	public List getPersisters() { ////		return persisters; ////	} // //	public Map getAlias2OwnerAlias() { //		return alias2OwnerAlias; //	} // //	public List getScalarTypes() { //		return scalarTypes; //	} //	public List getScalarColumnAliases() { //		return scalarColumnAliases; //	} // //	public List getPropertyResults() { //		return propertyResults; //	} // //	public List getCollectionPropertyResults() { //		return collectionResults; //	} // // //	public Map getAlias2Return() { //		return alias2Return; //	},no,undetermined,0,0,0,no,0.007254297795489728,no,0.0075987739122499,no,0.007309802166298184,no,0.006990156322227053
1344,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//TODO!,no,undetermined,0,0,0,no,0.01325037645668776,no,0.014260932248424719,no,0.013765265067302008,no,0.013323255765510592
1345,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//This solution would allow us to eliminate the owner arg to disassemble(), but //what if the collection was null, and then later had elements added? seems unsafe //session.getPersistenceContext().getCollectionEntry( (PersistentCollection) value ).getKey();",no,undetermined,0,0,0,no,0.1865253893572215,no,0.21419408394906272,no,0.21250969315692064,no,0.21639863805433388
1346,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//xml is the entity name,no,undetermined,0,0,0,no,0.004222493570846059,no,0.0033852733347358574,no,0.003166021004774157,no,0.003020003898073834
1347,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//named query parameter,no,undetermined,0,0,0,no,0.022410220958271027,no,0.014229535169701792,no,0.012118386105005765,no,0.011748671572767601
1348,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//tolerates nulls,no,undetermined,0,0,0,no,0.004286407075044762,no,0.005311675989011551,no,0.005074177909261299,no,0.004847241614032747
1349,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// check to see if our ""propPath"" actually // represents a property on the persister",no,undetermined,0,0,0,no,0.014102990436689522,no,0.008774839284237383,no,0.007582915960846295,no,0.007147760817462425
1350,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Add the token to the AST.,no,undetermined,0,0,0,no,0.006747679543341043,no,0.006309727301813902,no,0.006200975107646849,no,0.005935146331757168
1351,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Use the table fromElement and the property name to get the array of column names.,no,undetermined,0,0,0,no,0.013082805429695072,no,0.008248238466502187,no,0.007685283858088448,no,0.007355860500503884
1352,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Set up the cache factory,no,undetermined,0,0,0,no,0.011628036015761272,no,0.010428344859948506,no,0.01013431264252213,no,0.009825471573633518
1353,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we need to strip off the embedded parens so that sql-gen does not double these up,no,undetermined,0,0,0,no,0.03382550491577174,no,0.014266687402866867,no,0.013777541794180014,no,0.013313057409495814
1354,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//memory optimization,no,undetermined,0,0,0,no,0.019078669650461202,no,0.014246239582154138,no,0.013783868069183561,no,0.013334375678025772
1355,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// then handle any user-defined entity modes...,no,undetermined,0,0,0,no,0.013165502293311857,no,0.011755317390110296,no,0.011144764600422881,no,0.01102639285466395
1356,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*sqlResultTypeList,*/",no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
1357,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If this is an implied join in a from element, then use the impled join type which is part of the // tree parser's state (set by the gramamar actions).",no,undetermined,0,0,0,no,0.012549592905742242,no,0.009320280337373308,no,0.009053453448420562,no,0.008652015743703249
1358,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// metaType is assumed to be single-column type,no,undetermined,0,0,0,no,0.008184276248580449,no,0.004701665101586495,no,0.004566685117415856,no,0.004414970293572468
1359,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// End unit of work,no,undetermined,0,0,0,no,0.03954013376248906,no,0.014260344528716863,no,0.013777116523754738,no,0.013351690638157004
1360,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ROW ID,no,undetermined,0,0,0,no,0.002385904609908443,no,0.0018298863886977645,no,0.0018206682367089516,no,0.001707186976989845
1361,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//MULTITABLES,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
1362,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//			final List extendsQueue,",no,undetermined,0,0,0,no,0.004584211563578573,no,0.007804805535209256,no,0.007354570847140427,no,0.007037456145706306
1363,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Make sure JBC doesn't look one up,no,undetermined,0,0,0,no,0.004445903296921935,no,0.00422072731493718,no,0.004033665563974167,no,0.00382876320823168
1364,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Get all the select expressions (that we just generated) and render the select.,no,undetermined,0,0,0,no,0.011567776127700366,no,0.011840304967017554,no,0.011477425810704009,no,0.011053910816276902
1365,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
1366,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// visit width-first, then depth",no,undetermined,0,0,0,no,0.0010289159520406959,no,0.001111010193168981,no,0.0011181787332182759,no,0.0010385732577831187
1367,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If the uresolved property path isn't set yet, just use the property name.",no,undetermined,0,0,0,no,0.036850859761098954,no,0.014240878280611474,no,0.013764619446411112,no,0.0132992720320606
1368,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Look through the FromElement's children to find any collections of values that should be fetched...,no,undetermined,0,0,0,no,0.006162137571460673,no,0.004470169587536569,no,0.004315785683779415,no,0.004159473868436053
1369,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// identifier-commalist,no,undetermined,0,0,0,no,0.0034369345202053896,no,0.003685583358904859,no,0.0034800739761162774,no,0.003300851240187589
1370,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//return AssociationType.FOREIGN_KEY_TO_PARENT; //this is better but causes a transient object exception...,no,undetermined,0,0,0,no,0.20987156103199406,no,0.25577625227836176,no,0.2448380792786973,no,0.24698036338727544
1371,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// collections of values,no,undetermined,0,0,0,no,0.0048805603859416935,no,0.002333421444249551,no,0.002264814939785148,no,0.0021553886924318595
1372,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// copied from Session:,no,undetermined,0,0,0,no,0.22146956009676796,no,0.18918917024122578,no,0.18319747511787474,no,0.1854296849826925
1373,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// For an explicit many-to-many relationship, add a second join from the intermediate  // (many-to-many) table to the destination table.  Also, make sure that the from element's  // idea of the destination is the destination table.",no,undetermined,0,0,0,no,0.02425586510599976,no,0.014251469479418365,no,0.013782674869539024,no,0.013338439611788698
1374,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this should not happen since the DTD prevents it,no,undetermined,0,0,0,no,0.003063135281570965,no,0.007720459066419735,no,0.00740918876177035,no,0.007072229973394208
1375,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Need to parse off the column qualifiers; this is assuming (which is true as of now) // that this is only used from update and delete HQL statement parsing,no,undetermined,0,0,0,no,0.062076896202328646,no,0.014260473258487519,no,0.013773452964910877,no,0.013337540937586753
1376,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// the current join represents the join between a many-to-many association table // and its ""target"" table.  Here we need to apply any additional filters // defined specifically on the many-to-many",no,undetermined,0,0,0,no,0.0064775174836914475,no,0.003857523557226719,no,0.0033842450693925296,no,0.003212353963549338
1377,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If the from element represents a JOIN_FRAGMENT and it is // a theta-style join, convert its type from JOIN_FRAGMENT // to FROM_FRAGMENT",no,undetermined,0,0,0,no,0.0035969549026557664,no,0.0034733137966090895,no,0.0031143001976381294,no,0.002925399324771871
1378,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//check basic level one nullablilty,no,undetermined,0,0,0,no,0.005624846388583298,no,0.00955338105997134,no,0.008693596715367843,no,0.008264735079852332
1379,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Add a zero (or quite low) timeout option so we don't block. // Ignore any TimeoutException. Basically we forego caching the // query result in order to avoid blocking. // Reads are done with suspended tx, so they should not hold the // lock for long.  Not caching the query result is OK, since // any subsequent read will just see the old result with its // out-of-date timestamp; that result will be discarded and the // db query performed again.",no,undetermined,0,0,0,no,0.016612493263341153,no,0.014262517632764694,no,0.013795469309272217,no,0.01334734174428899
1380,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//values is not null and is checkable, we'll look deeper",no,undetermined,0,0,0,no,0.012849433775773805,no,0.012893009057707986,no,0.012521386504692238,no,0.012102515473694014
1381,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Possibly handle :something parameters for the query ?,no,undetermined,0,0,0,no,0.010718036002253536,no,0.009232195281039378,no,0.00833071291905743,no,0.008037862646555224
1382,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//for non null args, check for components and elements containing components",no,undetermined,0,0,0,no,0.0027471172298767776,no,0.006880191147853966,no,0.007693753583343703,no,0.007357540849312138
1383,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If we want to handle it bidirectional and detached, we also need to load this // collection with an eager outer-join fetch, this time with Criteria and not HQL:",no,undetermined,0,0,0,no,0.011331064863097087,no,0.006884377204037438,no,0.006059857876146689,no,0.005779697310730565
1384,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//cache the hashcode,no,undetermined,0,0,0,no,0.01676172658340506,no,0.01424989414234293,no,0.01378665387584795,no,0.013341250244798104
1385,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*public PropertyProjection project() {
		return Projections.property(getPropertyName());
	}*/",no,undetermined,0,0,0,no,0.01677830207534018,no,0.014226558742042967,no,0.013754955084772357,no,0.013337672671245951
1386,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//persistent collections may have components,no,undetermined,0,0,0,no,0.006366746506062202,no,0.0072126925290110335,no,0.0074722566508991645,no,0.007265675400805312
1387,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// We have the JBCWriteMutex, so no other *local* thread will  // be trying to write this key.  // It's possible here some remote thread has come in and // changed the values again, but since we are reading the // values to write to JBC right now, we know we are writing // the latest values; i.e. we don't assume that what we cached // in entry.update() above is what we should write to JBC *now*. // Our write could be redundant, i.e. we are writing what // some remote thread just came in an wrote.  There is a chance  // that yet another remote thread will update us, and we'll then // overwrite that later data in JBC.  But, all remote nodes will // ignore that change in their localCache; the only place it  // will live will be in JBC, where it can only effect the  // initial state transfer values on newly joined nodes  // (i.e. populateLocalCache()).",no,undetermined,0,0,0,no,0.04511695302489255,no,0.014259737866495377,no,0.013766603921561883,no,0.013309944307469677
1388,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//test out the optimizer:,no,undetermined,0,0,0,no,0.0015103349370109867,no,0.0017227496288411347,no,0.0017035879238380086,no,0.001589462283096414
1389,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//		registerColumnType( Types.VARCHAR, 16777215, ""mediumtext"" );",no,undetermined,0,0,0,no,0.0066754264378414245,no,0.01427392121448147,no,0.01378771718946531,no,0.013320489428031181
1390,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// IDENT might be the name of a class.,no,undetermined,0,0,0,no,0.013225817257429561,no,0.014244600929288862,no,0.013762168733629815,no,0.01331071048402717
1391,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Here we don't want to suspend the tx. If we do: // 1) We might be caching query results that reflect uncommitted // changes. No tx == no WL on cache node, so other threads // can prematurely see those query results // 2) No tx == immediate replication. More overhead, plus we // spread issue #1 above around the cluster",no,undetermined,0,0,0,no,0.06931583064001169,no,0.014246530240252585,no,0.013769688642270697,no,0.013305800785959346
1392,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//TODO!!!,no,undetermined,0,0,0,no,0.01325037645668776,no,0.014260932248424719,no,0.013765265067302008,no,0.013323255765510592
1393,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// for regression testing against output from the old parser... // found it easiest to simply reorder the FromElements here into ascending order // in terms of injecting them into the resulting sql ast in orders relative to those // expected by the old parser; this is definitely another of those ""only needed // for regression purposes"".  The SyntheticAndFactory, then, simply injects them as it // encounters them.",no,undetermined,0,0,0,no,0.02518287568751572,no,0.014242872012437893,no,0.01375602030876217,no,0.013318834218677522
1394,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//st.setTimestamp( index,  new Timestamp( cal.getTimeInMillis() ), cal ); //JDK 1.5 only",no,undetermined,0,0,0,no,0.008317194850696838,no,0.014010868138155929,no,0.01352023532168264,no,0.013088373709215242
1395,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//arbitrary on clause ignored!!,no,undetermined,0,0,0,no,0.0006836481099288297,no,0.0007195646109994452,no,0.0006965179144854525,no,0.0006420977870810053
1396,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//st.setDate( index,  new Date( cal.getTimeInMillis() ), cal ); //JDK 1.5 only",no,undetermined,0,0,0,no,0.017863097805969667,no,0.014259456964322497,no,0.013766555327818815,no,0.013310436407648176
1397,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// from javax.naming.Referenceable,no,undetermined,0,0,0,no,0.022081545442379412,no,0.014244489493885857,no,0.013778171089457758,no,0.013301236388680408
1398,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// both are Timestamps,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
1399,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// First, collect all of the select expressions. // NOTE: This must be done *before* invoking setScalarColumnText() because setScalarColumnText() // changes the AST!!!",no,undetermined,0,0,0,no,0.028317959123151746,no,0.014246514140687231,no,0.013769258854947713,no,0.01331550704620268
1400,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// at least one is a plain old Date,no,undetermined,0,0,0,no,0.009222137947948737,no,0.008860249143131662,no,0.008264753940288347,no,0.007951999950435247
1401,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//swallow it (the transaction _was_ successful or successfully rolled back),no,undetermined,0,0,0,no,0.004060661773635208,no,0.002978641946389721,no,0.002801594681638639,no,0.0026342254273488326
1402,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//check for all components values in the collection,no,undetermined,0,0,0,no,0.0019849354122629167,no,0.002514654843101027,no,0.0026088426322971653,no,0.002480838187332987
1403,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// after *all* persisters and named queries are registered,no,undetermined,0,0,0,no,0.0036408486636446153,no,0.004474290188634263,no,0.004246443641239035,no,0.0040199646072310805
1404,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//do the test,no,undetermined,0,0,0,no,0.0015103349370109867,no,0.0017227496288411347,no,0.0017035879238380086,no,0.001589462283096414
1405,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// LIMIT support (ala TOP) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.006400629511634199,no,0.010059231209600198,no,0.00971850725489162,no,0.009323399678862058
1406,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If close() is called, guarantee unbind()",no,undetermined,0,0,0,no,0.0014868268236973823,no,0.001672684727007478,no,0.001612070601154061,no,0.0015028567490471079
1407,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// or BYTE // or TEXT? // or MONEY,no,undetermined,0,0,0,no,0.01733540022664373,no,0.014240331997586748,no,0.013769059607212055,no,0.013315903171400086
1408,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//noop,no,undetermined,0,0,0,no,0.0013887119538176895,no,0.0012179917014926022,no,0.0011950542681773133,no,0.0011139298342017806
1409,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//			        ( implied && DotNode.useThetaStyleImplicitJoins ) ) {,no,undetermined,0,0,0,no,0.005008851313979109,no,0.005484143504884689,no,0.005334221366265937,no,0.005072589759126027
1410,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if the corresponding SQL value is NULL, the reader we got is NULL as well",no,undetermined,0,0,0,no,0.006290383331891512,no,0.00574548409417511,no,0.005549316359888991,no,0.005340559455653545
1411,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If there is no data type for this node, and we're at the end of the path (top most dot node), then // this might be a Java constant.",no,undetermined,0,0,0,no,0.013456275264086985,no,0.012280452808375792,no,0.01191613181526253,no,0.011540550329354016
1412,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Fetch Reader content up to the end - and put characters in a StringBuffer,no,undetermined,0,0,0,no,0.06870090654622675,no,0.014256149207400043,no,0.013790733513319577,no,0.013328475325808374
1413,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The loop ensures atomicity of the // select + update even for no transaction // or read committed isolation level,no,undetermined,0,0,0,no,0.0024004073978286223,no,0.001610449280644182,no,0.0015526250285109512,no,0.0014485110924212141
1414,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Return StringBuffer content as a large String,no,undetermined,0,0,0,no,0.044441500390791144,no,0.014233559815638158,no,0.013754721244140868,no,0.01332139231008984
1415,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The where clause was added to eliminate this statement from Brute Force Searches.,no,undetermined,0,0,0,no,0.05140848138292067,no,0.014266726783081832,no,0.013786117878414902,no,0.013320883123886377
1416,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//or Types.LONGVARCHAR?,no,undetermined,0,0,0,no,0.005003960241231013,no,0.004939547116015976,no,0.005117882289449519,no,0.004885088336583156
1417,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0029192075517518335,no,0.0019428635406165216,no,0.0019258753864740586,no,0.0018095004858472681
1418,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//TODO,no,undetermined,0,0,0,no,0.01325037645668776,no,0.014260932248424719,no,0.013765265067302008,no,0.013323255765510592
1419,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// We ignore minimalPutOverride. JBossCache putForExternalRead is // already about as minimal as we can get; it will promptly return // if it discovers that the node we want to write to already exists,no,undetermined,0,0,0,no,0.0027072263203074083,no,0.0026998988857634904,no,0.002615045253210897,no,0.0024666744618750645
1420,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Forcefully remove leading ands from where fragments; the grammar will // handle adding them,no,undetermined,0,0,0,no,0.0020471043201095657,no,0.005127263315766458,no,0.005058284058038917,no,0.004821308516780054
1421,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// for non-arrays, we don't need to know the element class //elementType.returnedClass();",no,undetermined,0,0,0,no,0.16326477305559492,no,0.17497696953593028,no,0.16317373511589076,no,0.16560840110630606
1422,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Chop off the rest of the tree.,no,undetermined,0,0,0,no,0.00637057974793841,no,0.0069736564543572055,no,0.006793209063982325,no,0.00649901239867874
1423,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// grab its state from the ResultSet and keep it in the Session // (but don't yet initialize the object itself) // note that we acquire LockMode.READ even if it was not requested,no,undetermined,0,0,0,no,0.0026031789091310337,no,0.00237947074051049,no,0.0023854737647055245,no,0.0022410951816681335
1424,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//different nullability rules for pk/fk,no,undetermined,0,0,0,no,0.012432152123409201,no,0.0063389126991848874,no,0.005985214645313202,no,0.005767247879811004
1425,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if the types report logical equivalence, return true...",no,undetermined,0,0,0,no,0.1014146543586146,no,0.09503583361538864,no,0.013772937030998625,no,0.01332300479281296
1426,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//cache this,no,undetermined,0,0,0,no,0.006994556036831043,no,0.006203261920929139,no,0.00592264350611209,no,0.005665997669365312
1427,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// for a subquery, the alias to use depends on a few things (we // already know this is not an overall SELECT): //      1) if this FROM_ELEMENT represents a correlation to the //          outer-most query //              A) if the outer query represents a multi-table //                  persister, we need to use the given alias //                  in anticipation of one of the multi-table //                  executors being used (as this subquery will //                  actually be used in the ""id select"" phase //                  of that multi-table executor) //              B) otherwise, we need to use the persister's //                  table name as the column qualification //      2) otherwise (not correlated), use the given alias",no,undetermined,0,0,0,no,0.14551071916842623,no,0.08503572548263616,no,0.013769808596926815,no,0.01330161814581589
1428,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//only really need new array during semiresolve!,no,undetermined,0,0,0,no,0.13648911079330656,no,0.3458098485323383,no,0.33274686914573076,no,0.3378993026658606
1429,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// classic translator does not support collection of ordinal // param metadata,no,undetermined,0,0,0,no,0.07470056970099441,no,0.014259966163935114,no,0.013783605907641399,no,0.013304449040115393
1430,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//unwrap it,no,undetermined,0,0,0,no,0.0016760666718701506,no,0.002019187378485934,no,0.0019977116216580958,no,0.0015514524604780975
1431,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//cache the hashcode,no,undetermined,0,0,0,no,0.01676172658340506,no,0.01424989414234293,no,0.01378665387584795,no,0.013341250244798104
1432,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// an unfetched association can only point to // an entity that already exists in the db,no,undetermined,0,0,0,no,0.0012791130877678816,no,0.0009564260278132429,no,0.0009253037510316337,no,0.0008633764927357478
1433,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// here, we work under the following assumptions: //      ------------ valid cases -------------------------------------- //      1) datetime + {something other than datetime} : always results //              in a datetime ( db will catch invalid conversions ) //      2) datetime - datetime : always results in a DOUBLE //      3) datetime - {something other than datetime} : always results //              in a datetime ( db will catch invalid conversions ) //      ------------ invalid cases ------------------------------------ //      4) datetime + datetime //      5) {something other than datetime} - datetime //      6) datetime * {any type} //      7) datetime / {any type} //      8) {any type} / datetime // doing so allows us to properly handle parameters as either the left // or right side here in the majority of cases",no,undetermined,0,0,0,no,0.14501891890753385,no,0.11857924836294007,no,0.11329907524008888,no,0.11332070867305359
1434,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// let the interceptor inspect the instance to decide,no,undetermined,0,0,0,no,0.019442472943209527,no,0.01312812390880493,no,0.013226005797963947,no,0.012911362367261018
1435,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*
	 * The types represented in the SQL result set.
	 *
	 * @return The types represented in the SQL result set.
	 */",no,undetermined,0,0,0,no,0.00779829025029907,no,0.0051488414780707864,no,0.005518521208458359,no,0.0050799625045212125
1436,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// let the persister inspect the instance to decide,no,undetermined,0,0,0,no,0.035735809081421044,no,0.014242297546146414,no,0.013762809773144499,no,0.013320810432857549
1437,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the CascadingAction contract ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
1438,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//TODO!!!!!!!,no,undetermined,0,0,0,no,0.01325037645668776,no,0.014260932248424719,no,0.013765265067302008,no,0.013323255765510592
1439,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// DDL support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.006927532883602286,no,0.005072580630937288,no,0.004981387994095583,no,0.004719457788542873
1440,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Create a new FILTERS node as a parent of all filters,no,undetermined,0,0,0,no,0.005004047377664206,no,0.005024193627381191,no,0.00472109993795266,no,0.004509874288392439
1441,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if there is no TM configured, we will not be able to access // the javax.transaction.Transaction object in order to // register a synch anyway.",no,undetermined,0,0,0,no,0.00690560760483,no,0.0028936083132726762,no,0.002756217576338228,no,0.002604242590373051
1442,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
1443,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Establish the region root node with a non-locking data version,no,undetermined,0,0,0,no,0.015859992218705442,no,0.00568023319498977,no,0.0053927783724414605,no,0.005159987027060295
1444,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//public Object instantiate(Object parent, SessionImplementor session) throws HibernateException;",no,undetermined,0,0,0,no,0.02221946986219517,no,0.014239923428459951,no,0.013785291304271072,no,0.013344599399971587
1445,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//nothing to do,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
1446,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//nothing to do,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
1447,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we use the assumed value, if there is one, to avoid hitting // the database",no,undetermined,0,0,0,no,0.009005543543817584,no,0.005809108649762985,no,0.005399777906755505,no,0.005187054466443916
1448,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// context-entity-identifier returns null explicitly if the entity // is not associated with the persistence context; so make some // deeper checks...,no,undetermined,0,0,0,no,0.03369895671584425,no,0.01424570895597229,no,0.013786761459563866,no,0.013340347975516422
1449,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//int count = 0;,no,undetermined,0,0,0,no,0.004416327228471547,no,0.007826851149531713,no,0.007550188452853485,no,0.007207868577578487
1450,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// putfield // new value of the field,no,undetermined,0,0,0,no,0.004513656151869723,no,0.005171072625169907,no,0.004990009842699815,no,0.0047229938931549476
1451,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//lobs cannot be compared,no,undetermined,0,0,0,no,0.01842797191029478,no,0.014273857262198911,no,0.013801683683588434,no,0.013337262314562285
1452,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//not really necessary, I guess...",no,undetermined,0,0,0,no,0.1415370143688524,yes,0.7997954173835864,yes,0.7941285895142672,yes,0.8035885899022229
1453,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Clobs are ignored by merge() operation,no,undetermined,0,0,0,no,0.00038128002284715446,no,0.0005751443487087743,no,0.0005588835851229447,no,0.000512935907297585
1454,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//the first key found after the given key,no,undetermined,0,0,0,no,0.001610116986916369,no,0.002207995728748681,no,0.0021515697744137483,no,0.0020226576537501965
1455,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// collections cannot be compared,no,undetermined,0,0,0,no,0.0218123233237416,no,0.013460638156146338,no,0.0126921880208802,no,0.012376261675305486
1456,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//remember the uk value,no,undetermined,0,0,0,no,0.005558771054674732,no,0.0059082048959267905,no,0.005810263225462579,no,0.005545489566798976
1457,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//NOOP,no,undetermined,0,0,0,no,0.0013887119538176895,no,0.0012179917014926022,no,0.0011950542681773133,no,0.0011139298342017806
1458,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//processCollectionProperty(token, q.getCollectionPersister(collectionRole), collectionName);",no,undetermined,0,0,0,no,0.006672188996314175,no,0.007804919865964812,no,0.007442977478709517,no,0.007124998930842666
1459,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//we must use the ""remembered"" uk value, since it is  //not available from the EntityEntry during assembly",no,undetermined,0,0,0,no,0.0057464876721436174,no,0.00627516089531484,no,0.006062638797068843,no,0.0058025806447701694
1460,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// collections don't dirty an unversioned parent entity,no,undetermined,0,0,0,no,0.040716644459820574,no,0.01427888933960611,no,0.012234862051825132,no,0.011713130034800677
1461,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// return false;,no,undetermined,0,0,0,no,0.0059344506058347235,no,0.0003061940946277217,no,0.0002937146727650803,no,0.00026836144051124955
1462,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// This just handles a particular case of component // projection, perhaps get rid of it and throw an exception",no,undetermined,0,0,0,no,0.011272355738866013,no,0.014243031207567645,no,0.013776173998938844,no,0.013313008235043139
1463,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//NOTE: we avoid joining to the next table if the named property is just the foreign key value,no,undetermined,0,0,0,no,0.03187284931502177,no,0.014271763908574181,no,0.013796176254101329,no,0.013321032161671537
1464,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// the key is the owning entity itself, so get the ID from the key",no,undetermined,0,0,0,no,0.0034948007845176142,no,0.0035283990681602676,no,0.003508448882932062,no,0.003341704290103073
1465,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//checkForEnd = false;,no,undetermined,0,0,0,no,0.00465041709560675,no,0.0019199853489971688,no,0.0018856222299009672,no,0.001787390052714321
1466,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//ignore subselect keywords,no,undetermined,0,0,0,no,2.798789220855098e-05,no,3.648693123158343e-05,no,3.607923286918619e-05,no,3.1699958247175086e-05
1467,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// copy elements into newly empty target collection,no,undetermined,0,0,0,no,0.0026591723813922,no,0.0027626012557881094,no,0.0026982443200672386,no,0.0025794195537820635
1468,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//end of array, start filling again from start",no,undetermined,0,0,0,no,0.0018496251452792447,no,0.002257116135960375,no,0.0021107082562830284,no,0.0019851771757164118
1469,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// for a null target, or a target which is the same as the original, we // need to put the merged elements in a new collection",no,undetermined,0,0,0,no,0.001889035180552218,no,0.0015398458194739002,no,0.0014686739595719577,no,0.001383518299097759
1470,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//we ran out of keys to try,no,undetermined,0,0,0,no,0.0022584369500259537,no,0.0023595683618789476,no,0.0023347605461819685,no,0.0022054404850336195
1471,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// by default just use an unanticipated capacity since we don't // know how to extract the capacity to use from original here...,no,undetermined,0,0,0,no,0.060810123647522266,no,0.014259332227495633,no,0.013758069506150088,no,0.01332952242197358
1472,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//the first id found after the given id,no,undetermined,0,0,0,no,0.04146253979077185,no,0.014245213493317106,no,0.013781574675239206,no,0.013338858440660246
1473,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//we ran out of ids to try,no,undetermined,0,0,0,no,0.002549755245768224,no,0.0030709282842962342,no,0.002966745977410481,no,0.0028018823257465525
1474,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// DISCRIMINATOR,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
1475,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// get the elements back into the target making sure to handle dirty flag,no,undetermined,0,0,0,no,0.018200884552254673,no,0.014262506796330718,no,0.013569496293090864,no,0.012804133983227517
1476,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// check if collection is currently being loaded,no,undetermined,0,0,0,no,0.032522242702186344,no,0.014269358778173032,no,0.013762067295880325,no,0.013307765259941779
1477,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// check if it is already completely loaded, but unowned",no,undetermined,0,0,0,no,0.024053825847261047,no,0.014245283334561671,no,0.01379169773586304,no,0.013328825876763628
1478,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// initialize this collection,no,undetermined,0,0,0,no,0.0029078323134509613,no,0.001960430446782442,no,0.0019003866494790142,no,0.0018000418463881358
1479,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//TODO!!!!!!!,no,undetermined,0,0,0,no,0.01325037645668776,no,0.014260932248424719,no,0.013765265067302008,no,0.013323255765510592
1480,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// create a new collection wrapper, to be initialized later",no,undetermined,0,0,0,no,0.028843234832372753,no,0.014236100051502072,no,0.0137825832168101,no,0.01331724362153905
1481,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Some JDBC drivers erroneously return an empty array here for a null DB value :/,no,undetermined,0,0,0,no,0.004611379360620486,no,0.004801128310413368,no,0.004823171663842655,no,0.004644145728789321
1482,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//cannot batch fetch by unique key (property-ref associations),no,undetermined,0,0,0,no,0.0049477986575773535,no,0.004826448679212471,no,0.004435185076457059,no,0.004118587451559671
1483,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we already know current is not null...,no,undetermined,0,0,0,no,0.02896214321328401,no,0.014268338094847781,no,0.013756620284272382,no,0.013308411788864565
1484,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//the owner of the association is not the owner of the id,no,undetermined,0,0,0,no,0.003114426841159858,no,0.004525145445355018,no,0.005134259661162904,no,0.004868420805013687
1485,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ----------------------------------------------------------- Constructors,no,undetermined,0,0,0,no,0.007344993122857295,no,0.008447287711801506,no,0.00801948910777018,no,0.0076640667708036255
1486,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ----------------------------------------------------- Instance Variables,no,undetermined,0,0,0,no,0.0003890414996726604,no,0.0006377193460623377,no,0.0006204454515711779,no,0.0005711275621018151
1487,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// --------------------------------------------------------- Public Methods,no,undetermined,0,0,0,no,0.01324214130387958,no,0.014233977763189902,no,0.01380072598058117,no,0.013350772372057828
1488,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Compare the two maps for equality,no,undetermined,0,0,0,no,0.010332422440608753,no,0.008840109738876549,no,0.008449420283113952,no,0.00812370645570469
1489,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Simple tests that require no synchronization,no,undetermined,0,0,0,no,0.0064698525949067505,no,0.00485501545243198,no,0.004631274784125586,no,0.0043910282346300965
1490,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//Sybase fail if we don't do that, sigh...",no,undetermined,0,0,0,no,0.0050267603182181115,no,0.003314486088163849,no,0.0032099738108948596,no,0.0030427717322707697
1491,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// stream closed in the finally,no,undetermined,0,0,0,no,0.0006895922826984966,no,0.0008338601878463362,no,0.000814502366218472,no,0.0007530421975067113
1492,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// release the jdk internal caches everytime to ensure this // plays nicely with destroyable class-loaders,no,undetermined,0,0,0,no,0.03235770057791116,no,0.014242486350611266,no,0.013761842096717757,no,0.013340288556213317
1493,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// release the jdk internal caches everytime to ensure this // plays nicely with destroyable class-loaders,no,undetermined,0,0,0,no,0.03235770057791116,no,0.014242486350611266,no,0.013761842096717757,no,0.013340288556213317
1494,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// try to ""pretty print"" it",no,undetermined,0,0,0,no,0.013708325802069972,no,0.013444257312772032,no,0.012865337916239703,no,0.012460919380471912
1495,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// otherwise, just dump it",no,undetermined,0,0,0,no,0.008609574175253477,no,0.010650885551356798,no,0.010258932445350952,no,0.009867283865704955
1496,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//its an interface so we can't really tell anything...,no,undetermined,0,0,0,no,0.034236714820896116,no,0.01425652945710251,no,0.013802355002960768,no,0.013330340473444996
1497,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//its an interface so we can't really tell anything...,no,undetermined,0,0,0,no,0.034236714820896116,no,0.01425652945710251,no,0.013802355002960768,no,0.013330340473444996
1498,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// use default behavior,no,undetermined,0,0,0,no,0.006289986946462956,no,0.011761435030203634,no,0.011323913509146667,no,0.010890208684332702
1499,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//NOTE: early return,no,undetermined,0,0,0,no,0.010401580184387589,no,0.009116617074657288,no,0.008842948847518557,no,0.008354827174049081
1500,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we want to be able to just use the defaults, // if JNDI environment properties are not supplied // so don't put null in anywhere",no,undetermined,0,0,0,no,0.004365351077427288,no,0.004774901383311467,no,0.004700403325649287,no,0.004477948558813685
1501,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Clone //-----------------------------------------------------------------------,no,undetermined,0,0,0,no,0.0009750968565708177,no,0.0009593573793090917,no,0.0009237187365656971,no,0.0008537305285096572
1502,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Serialize //-----------------------------------------------------------------------,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
1503,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// warning: can cause a recursive calls! (proxy initialization),no,undetermined,0,0,0,no,0.008765805408159471,no,0.007876651338853896,no,0.00750037254049431,no,0.007342573341107134
1504,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// stream closed in the finally,no,undetermined,0,0,0,no,0.0006895922826984966,no,0.0008338601878463362,no,0.000814502366218472,no,0.0007530421975067113
1505,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* static methods only - hide constructor */,no,undetermined,0,0,0,no,0.00711939247582248,no,0.008603461554990954,no,0.008201362025124738,no,0.007874148286855287
1506,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*&& !('_'==character)*/,no,undetermined,0,0,0,no,0.0028445477978158206,no,0.0032268712846849124,no,0.0030712488579767603,no,0.002904244480041401
1507,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// returnign null!,no,undetermined,0,0,0,no,0.013222556340648216,no,0.009918052080171226,no,0.00946412573100924,no,0.009230962605114459
1508,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// returnign null!,no,undetermined,0,0,0,no,0.013222556340648216,no,0.009918052080171226,no,0.00946412573100924,no,0.009230962605114459
1509,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// includes last '.',no,undetermined,0,0,0,no,0.013246799504318509,no,0.013759965176888272,no,0.013423642931771758,no,0.01297462383061608
1510,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// +1 to include the following '.',no,undetermined,0,0,0,no,0.0029267597558890906,no,0.004331259703790005,no,0.004164032017252063,no,0.0039834324825611675
1511,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// first time we find match!,no,undetermined,0,0,0,no,0.0025252281406775087,no,0.0027591282184108103,no,0.0026525133505984344,no,0.0025125230308778216
1512,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// entityNames may now include slashes for the representations //classname may be an inner class,no,undetermined,0,0,0,no,0.002833109725405203,no,0.004386149671713815,no,0.004222238796191196,no,0.004013779428687826
1513,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// wrapped iterators,no,undetermined,0,0,0,no,0.1904166283132052,no,0.17316028052817478,no,0.17085057184995572,no,0.1723836855823868
1514,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// index of current iterator in the wrapped iterators array,no,undetermined,0,0,0,no,0.019483877820021856,no,0.01424490852049338,no,0.01377068385251962,no,0.013336904966992864
1515,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the current iterator,no,undetermined,0,0,0,no,0.006331159290789159,no,0.0037915161713306146,no,0.0033610895750722024,no,0.00318594390061963
1516,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the last used iterator,no,undetermined,0,0,0,no,0.017790968975376877,no,0.014254288932277532,no,0.011790522032809555,no,0.011323372521418455
1517,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//it was a boolean expression,no,undetermined,0,0,0,no,0.0006560358062904625,no,0.0007556479208951452,no,0.000714238026309182,no,0.00066871152111751
1518,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// call this before any Iterator method to make sure that the current Iterator // is not exhausted,no,undetermined,0,0,0,no,0.02513093441169245,no,0.01423319274029979,no,0.013765166381973034,no,0.013346470724169054
1519,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//doable if needed,no,undetermined,0,0,0,yes,0.9878039885063625,yes,0.985524508468894,yes,0.9846987058529261,yes,0.9861997935646429
1520,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// set last used iterator here, in case the user calls remove // before calling hasNext() or next() (although they shouldn't)",no,undetermined,0,0,0,no,0.14522257691694676,no,0.13131119055190532,no,0.11959511423337651,no,0.1193560081782848
1521,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// peek ahead,no,undetermined,0,0,0,no,0.005705959866218043,no,0.004190036207718196,no,0.004046041315899217,no,0.003833990743673815
1522,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if we reach the end of the string w/o finding the // matching end, that is an exception",no,undetermined,0,0,0,no,0.010485930774465569,no,0.01107853438199143,no,0.011008098382023265,no,0.010644307991459297
1523,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// there were no queued additions // and the role has a cache,no,undetermined,0,0,0,no,0.012560851086443081,no,0.012636507891520063,no,0.011511004629603621,no,0.011090173342072409
1524,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Print page,no,undetermined,0,0,0,no,0.009667361994262094,no,0.009507242247753964,no,0.0089619264217477,no,0.008573053651679291
1525,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// and this is not a forced initialization during flush,no,undetermined,0,0,0,no,0.008702721944060073,no,0.00577308146868025,no,0.004004806003870822,no,0.004043282789155193
1526,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we have a placeholder, spin forward till we find the end",no,undetermined,0,0,0,no,0.015066946900187244,no,0.01425298128552162,no,0.01377924129349532,no,0.013345115877950436
1527,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// make sure spinning forward did not put us past the end of the buffer...,no,undetermined,0,0,0,no,0.014797610938338496,no,0.014250836919230497,no,0.013791279267563334,no,0.013334902225900787
1528,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// First, try to locate this resource through the current // context classloader.",no,undetermined,0,0,0,no,0.013586017729119115,no,0.014263730016798867,no,0.013778234446755489,no,0.013315219134745902
1529,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Next, try to locate this resource through this class's classloader",no,undetermined,0,0,0,no,0.010378056284164766,no,0.012168007902599347,no,0.011700952261738977,no,0.011295931892109014
1530,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Next, try to locate this resource through the system classloader",no,undetermined,0,0,0,no,0.007629540062408723,no,0.008856407376766165,no,0.008544342770420718,no,0.008188089302674773
1531,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Anywhere else we should look?,no,undetermined,0,0,0,no,0.0006204981027270539,no,0.0008633832666158445,no,0.0008355311124922724,no,0.0007711432695518471
1532,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// would need an IdentitySet for this!,no,undetermined,0,0,0,no,0.013223076400879046,no,0.0142466307069297,no,0.013763453995732883,no,0.01331595931269831
1533,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Arrays.asList doesn't do primitive arrays,no,undetermined,0,0,0,no,0.007411535576264682,no,0.009312763100152848,no,0.008801858934002206,no,0.008549917477084697
1534,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_0,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
1535,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//faster?,no,undetermined,0,0,0,no,0.03771243065298374,no,0.014242353546704927,no,0.013764905336886261,no,0.01333230490140418
1536,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//pass the entity-name, if not a collection-id",no,undetermined,0,0,0,no,0.011190515532153604,no,0.007266800853159302,no,0.007042632393970829,no,0.006842503927986251
1537,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// right represents a joins originating from left; or // both right and left reprersent joins originating from the same FromElement,no,undetermined,0,0,0,no,0.005845122356092208,no,0.0061381080857452665,no,0.00550738456802157,no,0.005267362394048074
1538,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the name of a class,no,undetermined,0,0,0,no,0.013225817257429561,no,0.014244600929288862,no,0.013762168733629815,no,0.01331071048402717
1539,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Its the listener class name,no,undetermined,0,0,0,no,0.015214534254197786,no,0.01425625722704084,no,0.013782309358849916,no,0.013335845043377603
1540,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//allow 9,8,7,6,5,4,3,2,1",no,undetermined,0,0,0,no,0.010917554574715207,no,0.010436690233914489,no,0.01014080192460287,no,0.009747538792361425
1541,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// default to element set if no elements() specified,no,undetermined,0,0,0,no,0.0019208149593363776,no,0.0020503438249676754,no,0.001958291392502586,no,0.0018396324123801952
1542,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// look for the instance by uuid,no,undetermined,0,0,0,no,0.005218945746241729,no,0.005136317885039488,no,0.004933021574191788,no,0.004703591965662321
1543,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// first, lets determine whether to apply cglib or javassist based instrumentation...",no,undetermined,0,0,0,no,0.007465475583908993,no,0.009245405631892103,no,0.00882265737907162,no,0.008436763272064765
1544,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Make sure we don't override previous set values,no,undetermined,0,0,0,no,0.009576389277892786,no,0.006420932924779979,no,0.006297267079506214,no,0.006004993000269768
1545,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//entirely optional!!,no,undetermined,0,0,0,no,0.012878522203217328,no,0.012791161984191569,no,0.009372661579029386,no,0.00898278909637942
1546,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Its the listener instance (or better be),no,undetermined,0,0,0,no,0.11809130029164996,no,0.14563807100554982,no,0.13886061282169937,no,0.14049549833411146
1547,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//context.unbind(boundName);,no,undetermined,0,0,0,no,0.011140869758158888,no,0.01199650142878239,no,0.011498757993829682,no,0.011130531546092354
1548,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//readResolveObject,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
1549,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//cfg.setProperty(""hibernate.show_sql"", ""true"");",no,undetermined,0,0,0,no,0.005691240992799576,no,0.014266840415004775,no,0.013769681403424867,no,0.013348587177997192
1550,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Defensive, convenience methods",no,undetermined,0,0,0,no,0.00493778257468344,no,0.0042870099111678986,no,0.004180944822077567,no,0.0040130086910059246
1551,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Make sure you log the exception, as it might be swallowed",no,undetermined,0,0,0,no,0.0026752912589592857,no,0.003694483639165444,no,0.003517924707063676,no,0.0033462266406520135
1552,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Begin unit of work,no,undetermined,0,0,0,no,0.02583917395159127,no,0.012486198104814626,no,0.011443076248597143,no,0.011045604972895105
1553,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Write HTML header,no,undetermined,0,0,0,no,0.004006174628238512,no,0.004082366403722467,no,0.003914068549303974,no,0.0037073480365183266
1554,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Handle actions,no,undetermined,0,0,0,no,0.004278110383126307,no,0.004415429542803061,no,0.004349408394798449,no,0.004125733135085472
1555,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Start the session to be used for this request,no,undetermined,0,0,0,no,0.006334545540727718,no,0.006524606468292209,no,0.0062909704585434505,no,0.006004961952554238
1556,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// cleanup code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.056477935872402685,no,0.01424090877350083,no,0.01377684862570263,no,0.013340619018299875
1557,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// make the session available to the session factory's ""current context""",no,undetermined,0,0,0,no,0.022186205236103665,no,0.014233676723733315,no,0.01375218784015997,no,0.013333964576112991
1558,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// remove session from ""current context""",no,undetermined,0,0,0,no,0.013417111957265195,no,0.011280496187183079,no,0.01122789618604788,no,0.010842827009948543
1559,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Eager fetch the collection so we can use it detached,no,undetermined,0,0,0,no,0.011318660117543252,no,0.006199200906393744,no,0.005541531685485782,no,0.005169918789848253
1560,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*
        Event anEvent = (Event) session
                .createCriteria(Event.class).setFetchMode(""participants"", FetchMode.JOIN)
                .add( Expression.eq(""id"", eventId) )
                .uniqueResult(); // Eager fetch the colleciton so we can use it detached
        */",no,undetermined,0,0,0,no,0.030827989461187692,no,0.014230788241444517,no,0.013759910459453977,no,0.013320945879500282
1561,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// End of first unit of work,no,undetermined,0,0,0,no,0.03954013376248906,no,0.014260344528716863,no,0.013777116523754738,no,0.013351690638157004
1562,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// or bidirectional safety method, setting both sides: aPerson.addToEvent(anEvent);",no,undetermined,0,0,0,no,0.0012597734317819761,no,0.0011375590217836873,no,0.0011100288464267604,no,0.0010337866558760957
1563,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Begin second unit of work,no,undetermined,0,0,0,no,0.03300713728259772,no,0.014242506824624758,no,0.013768472337851433,no,0.013344221654923626
1564,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Reattachment of aPerson,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
1565,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The getEmailAddresses() might trigger a lazy load of the collection,no,undetermined,0,0,0,no,0.028684660701989124,no,0.01427069660983858,no,0.013777729608741405,no,0.01332170142535989
1566,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// We need our tm, so get it now and avoid doing other work // if there is a problem",no,undetermined,0,0,0,no,0.3806325719754626,no,0.3640928387734984,no,0.3482895282152663,no,0.3558770513091544
1567,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Don't hold the JBC node lock throughout the tx, as that // prevents reads and other updates",no,undetermined,0,0,0,no,0.006114445797442843,no,0.005014231198904662,no,0.005587275651721193,no,0.005390028177624466
1568,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// JBC put a version in the node when it created as part of // some internal operation. We are always newer, but if // the JBC version is > 1 something odd has happened",no,undetermined,0,0,0,no,0.008675506118817788,no,0.0068642801297444074,no,0.006612576215396153,no,0.006351119443903391
1569,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Not null if the Isolation level has been specified in the configuration file. // Otherwise, it is left to the Driver's default value.",no,undetermined,0,0,0,no,0.006812883849583469,no,0.007435957693328844,no,0.007055444321469985,no,0.006766186403367851
1570,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Configured outside of Hibernate (i.e. Servlet container, or Java Bean Container // already has Proxool pools running, and this provider is to just borrow one of these",no,undetermined,0,0,0,no,0.012446973455055646,no,0.014247170220459517,no,0.01377916999840735,no,0.013336146318896446
1571,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// loading collection xrefs ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.007727623539381643,no,0.0036169724762022265,no,0.0035632466793648738,no,0.003416868845854678
1572,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Collection load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.007140989484437076,no,0.004315513578434544,no,0.003939280009082031,no,0.004040058513422682
1573,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*package*/,no,undetermined,0,0,0,no,0.0024028778345724696,no,0.0026803190818122666,no,0.0025599410532666095,no,0.002410048974527652
1574,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the cache of the actual plans...,no,undetermined,0,0,0,no,0.0048272281738550695,no,0.003434610766817707,no,0.0033977370820209274,no,0.0032231615583790405
1575,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// (AS is always optional, for consistency with SQL/OQL)",no,undetermined,0,0,0,no,0.0022899011443865665,no,0.000800081605170879,no,0.0007600485295758386,no,0.0007021759342779649
1576,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*package*/,no,undetermined,0,0,0,no,0.0024028778345724696,no,0.0026803190818122666,no,0.0025599410532666095,no,0.002410048974527652
1577,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// assumes that types are all of span 1,no,undetermined,0,0,0,no,0.0010422541547859354,no,0.0009036629630779073,no,0.0010853998460309516,no,0.0010127586984184696
1578,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// process the ""new"" HQL style where aliases are assigned // _after_ the class name or path expression ie. using // the AS construction",no,undetermined,0,0,0,no,0.005843166208015805,no,0.0026515036955254818,no,0.0038162154470834137,no,0.003423919647502305
1579,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// is a primitive type // invokespecial,no,undetermined,0,0,0,no,0.00106517073296394,no,0.0012431990423966948,no,0.0012333285652977052,no,0.0011442325350071124
1580,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Start performing the updates,no,undetermined,0,0,0,no,0.0013941007742939273,no,0.001262322416481558,no,0.001177202757590439,no,0.001123572096400297
1581,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// array of primitive type // do nothing,no,undetermined,0,0,0,no,0.0020185017058092507,no,0.002282687942066395,no,0.0021003048957278095,no,0.001963687418017296
1582,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// jdbc params are 1-based,no,undetermined,0,0,0,no,0.006660444368074725,no,0.008090407240332753,no,0.008118174355764427,no,0.007862820632170807
1583,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// don't care...,no,undetermined,0,0,0,no,0.011101989141813713,no,0.009070505420828498,no,0.00876838207202719,no,0.008414551871521153
1584,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// on the inverse, it makes sense that if a ThreadLocalSessionContext- // bound session then gets deserialized to go ahead and re-bind it to // the ThreadLocalSessionContext session map.",no,undetermined,0,0,0,no,0.019447444545807484,no,0.014279717721484366,no,0.0137922423795484,no,0.013342144647579183
1585,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Recognition code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.010843685936025627,no,0.010732233683044944,no,0.010394758870554842,no,0.010002022288315822
1586,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// handle a path expression or class name that // appears at the start, in the ""new"" HQL // style or an alias that appears at the start // in the ""old"" HQL style",no,undetermined,0,0,0,no,0.0640212679234392,no,0.014237773964065033,no,0.01377314671882266,no,0.013299336526063002
1587,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//important: reuse the same event instances for performance!,no,undetermined,0,0,0,no,0.017728167790743352,no,0.014248566891606322,no,0.013763437553023426,no,0.013313648160290924
1588,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// don't care...,no,undetermined,0,0,0,no,0.011101989141813713,no,0.009070505420828498,no,0.00876838207202719,no,0.008414551871521153
1589,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// don't care about other param types here, just those explicitly user-defined...",no,undetermined,0,0,0,no,0.08359081353054776,no,0.014246440603421763,no,0.013765032189008196,no,0.013302104022813552
1590,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//handle <=, >=, !=, is not, not between, not in",no,undetermined,0,0,0,no,0.003554159674107494,no,0.003549317981526722,no,0.0035050950639962794,no,0.003303857525502062
1591,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// jdbc params are 1-based,no,undetermined,0,0,0,no,0.006660444368074725,no,0.008090407240332753,no,0.008118174355764427,no,0.007862820632170807
1592,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// named parameter,no,undetermined,0,0,0,no,0.021708323943490326,no,0.013364800662050109,no,0.012796759322766945,no,0.012397183097808405
1593,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// could be either an ordinal or JPA-positional parameter,no,undetermined,0,0,0,no,0.007656284036625626,no,0.00715531035392253,no,0.006883176896681457,no,0.006644113405375227
1594,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// strip the "" where """,no,undetermined,0,0,0,no,0.004563205756985302,no,0.003087408315067649,no,0.002996628803923888,no,0.0028269277912054335
1595,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// a peek ahead showed this as an JPA-positional parameter,no,undetermined,0,0,0,no,0.016361404357331296,no,0.012820907745488429,no,0.012369698717632339,no,0.012011701196094704
1596,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// make sure this ""name"" is an integral",no,undetermined,0,0,0,no,0.0012110240891636131,no,0.0009010548483385915,no,0.0008614929827645437,no,0.0008063124817531391
1597,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// at the very least cleanup the data :),no,undetermined,0,0,0,no,0.02338877573407549,no,0.014261211843317778,no,0.0137583349608447,no,0.013309750154818927
1598,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//60 seconds,no,undetermined,0,0,0,no,0.006371447359833437,no,0.006339747874598909,no,0.006147084709193628,no,0.005866638305362936
1599,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//cannot be instantiated,no,undetermined,0,0,0,no,0.003320678927779338,no,0.0024262699935691284,no,0.001948083515694242,no,0.001865995698712224
1600,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// transfer an explicitly defined entity name // handle the lazy attribute,no,undetermined,0,0,0,no,0.03034005160009025,no,0.01425056653604601,no,0.013775717606202078,no,0.013343615668997224
1601,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//keep the behavior consistent even for boundary usages,no,undetermined,0,0,0,no,0.011912257530595795,no,0.01239931137958608,no,0.011999894097494593,no,0.01154840177743393
1602,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//keep the behavior consistent even for boundary usages,no,undetermined,0,0,0,no,0.011912257530595795,no,0.01239931137958608,no,0.011999894097494593,no,0.01154840177743393
1603,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// perform the actual work,no,undetermined,0,0,0,no,0.042293673106233096,no,0.014260809006859587,no,0.013781447216233353,no,0.013333783702447548
1604,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ignore,no,undetermined,0,0,0,no,0.0003489690046840201,no,0.0004791828875098961,no,0.0004737640273004505,no,0.00043449603121796743
1605,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//do the failfast put outside the scope of the JTA txn,no,undetermined,0,0,0,no,0.013556197276294708,no,0.012172365805426846,no,0.011675167601449191,no,0.011549023721183202
1606,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// get meta's from // <joined-subclass>,no,undetermined,0,0,0,no,0.034755439954870945,no,0.014233850949637411,no,0.013776292854277604,no,0.01332351438644284
1607,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//ignore!,no,undetermined,0,0,0,no,0.0003489690046840201,no,0.0004791828875098961,no,0.0004737640273004505,no,0.00043449603121796743
1608,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// parameters on the property mapping should // override parameters in the typedef,no,undetermined,0,0,0,no,0.005145594333474043,no,0.0039470923035331415,no,0.0037359565600545716,no,0.0035356579614410273
1609,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//NOTE SPECIAL CASE: // default to join and non-lazy for the ""second join"" // of the many-to-many",no,undetermined,0,0,0,no,0.017493380438597002,no,0.010639248683196132,no,0.010507548714574025,no,0.008446604700357081
1610,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// create the node initially with the param name so that it shows // appropriately in the ""original text"" attribute",no,undetermined,0,0,0,no,0.06163014549077215,no,0.014249937185975637,no,0.013762865350842994,no,0.013309403145652817
1611,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// DYNAMIC INSERT,no,undetermined,0,0,0,no,0.0025530533435920936,no,0.003969081503878051,no,0.0039276489783864115,no,0.0037045000648881473
1612,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// so we ""clock over"" on the first invocation",no,undetermined,0,0,0,no,0.004702967960993831,no,0.005567658117013743,no,0.00537401051742749,no,0.005127438880989956
1613,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// state ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0003803701267563741,no,0.00041734545027376246,no,0.0004057778001511593,no,0.00037204306143792616
1614,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// finally handle the exception,no,undetermined,0,0,0,no,0.02009354643023596,no,0.014240204476954111,no,0.013769637867899207,no,0.013301255657921176
1615,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// a ""detached"" collection that belonged to a different entity",no,undetermined,0,0,0,no,0.01198950781763451,no,0.007416277223734764,no,0.00647192960596672,no,0.006291796698222297
1616,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	void setComponentTuplizerFactory(ComponentTuplizerFactory componentTuplizerFactory) { //		this.componentTuplizerFactory = componentTuplizerFactory; //	},no,undetermined,0,0,0,no,0.003829677789838066,no,0.004402021530907218,no,0.004247663927059669,no,0.004055097910833703
1617,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//element //index -> id,no,undetermined,0,0,0,no,0.006394196323797612,no,0.006975236208673505,no,0.006783999730504717,no,0.006509989342405909
1618,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// note that it might be better to iterate the snapshot but this is safe, // assuming the user implements equals() properly, as required by the Set // contract!",no,undetermined,0,0,0,no,0.050878138789898414,no,0.0142354129577316,no,0.013781087464838792,no,0.013318176492248568
1619,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// collections detect changes made via their public interface and mark // themselves as dirty as a performance optimization,no,undetermined,0,0,0,no,0.07223930425425107,no,0.01425178607554823,no,0.013764883010712086,no,0.013312481467012914
1620,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//saveOrUpdateCopy() is deprecated!,no,undetermined,0,0,0,no,0.008487830037152484,no,0.008081383832790752,no,0.007818248978711117,no,0.0075024908941343635
1621,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Set it!,no,undetermined,0,0,0,no,0.0006412633851730158,no,0.0005687744199108985,no,0.0005517740987468415,no,0.0005101788210268488
1622,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// collectionPersister should not be null, but we don't want to throw // an exception if it is null",no,undetermined,0,0,0,no,0.05533740372401724,no,0.014266628475967179,no,0.013782887603076418,no,0.013336113039931357
1623,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Case 1: Multi token keywords GROUP BY and ORDER BY // The next token ( LT(2) ) should be 'by'... otherwise, this is just an ident.",no,undetermined,0,0,0,no,0.003677648923463264,no,0.002631555865560253,no,0.002427696400326778,no,0.0022880620726656677
1624,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The default SQLExceptionConverter for all dialects is based on SQLState // since SQLErrorCode is extremely vendor-specific.  Specific Dialects // may override to return whatever is most appropriate for that vendor.,no,undetermined,0,0,0,no,0.011601690541862357,no,0.0104466679514862,no,0.00966907741535426,no,0.009290914150186444
1625,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//only necessary for postgre < 7.4 //http://anoncvs.postgresql.org/cvsweb.cgi/pgsql/doc/src/sgml/ref/create_sequence.sgml,no,undetermined,0,0,0,no,0.015785613880718807,no,0.014239380016184168,no,0.013769930446922941,no,0.01331343796495894
1626,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// otherwise a null or brand new collection // this will also (inefficiently) handle arrays, which // have no snapshot, so we can't do any better //processArrayOrNewCollection(collection, type);",no,undetermined,0,0,0,no,0.08658594033988481,no,0.014239693177729147,no,0.013769077903294884,no,0.013305346899132868
1627,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// a ""detached"" collection that originally belonged to the same entity",no,undetermined,0,0,0,no,0.0034071616970267303,no,0.003178409388226573,no,0.002968133015593276,no,0.002843280081141361
1628,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// add the comment // nest the main query in an outer select // add the rownnumber bit into the outer query select list,no,undetermined,0,0,0,no,0.005543138466542759,no,0.008464241548137191,no,0.006057809175429519,no,0.005819644531515911
1629,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		 You may still have other ResultSets or update counts left to process here  //		 but you can't do it now or the ResultSet you just got will be closed ,no,undetermined,0,0,0,no,0.0011411409857454038,no,0.0012225315798178344,no,0.0011779364730211777,no,0.0010667636369556368
1630,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Note: For object <-> SQL datatype mappings see: //	 Configuration Manager | Advanced | SQL | System DDL Datatype Mappings // //	TBD	registerColumnType(Types.BINARY,        ""binary($1)""); // changed 08-11-2005, jsl",no,undetermined,0,0,0,no,0.02729713122286313,no,0.014242814136497861,no,0.013756486711873675,no,0.013332175694408442
1631,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// See if the second lookahed token can be an identifier.,no,undetermined,0,0,0,no,0.00575123075116189,no,0.005391111185682483,no,0.005105813739809257,no,0.004873057307046733
1632,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Case 2: The current token is after FROM and before '.'.,no,undetermined,0,0,0,no,0.009220523881159192,no,0.008814385166086465,no,0.008712293863544635,no,0.008339404187695224
1633,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//do nothing,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
1634,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// TRIM(end_keyword string-expression-1 FROM string-expression-2) // use Hibernate implementation ""From"" is one of the parameters they pass in position ?3 //registerFunction( ""trim"", new SQLFunctionTemplate(Hibernate.STRING, ""trim(?1 ?2 from ?3)"") );",no,undetermined,0,0,0,no,0.010396608103541984,no,0.014264585553323071,no,0.013789626514505632,no,0.013321498554233927
1635,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Whether this dialect has an Identity clause added to the data type or a completely seperate identity // data type,no,undetermined,0,0,0,no,0.01342653968406205,no,0.014234374161967623,no,0.013767794584813114,no,0.013314162361352709
1636,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// (EQ NULL b) => (IS_NULL b),no,undetermined,0,0,0,no,0.0191069270696973,no,0.014246170966872166,no,0.013784636772507904,no,0.013323785641110792
1637,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Create nodes that track line and column number.,no,undetermined,0,0,0,no,0.004683973520223848,no,0.0040659872697887955,no,0.003930291624094755,no,0.0036433974081136506
1638,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//do nothing,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
1639,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Add NOT if it's negated.,no,undetermined,0,0,0,no,0.0022048347179757614,no,0.0016784027429774203,no,0.00224188081618006,no,0.00210688983040643
1640,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// (EQ a NULL) => (IS_NULL a),no,undetermined,0,0,0,no,0.0191069270696973,no,0.014246170966872166,no,0.013784636772507904,no,0.013323785641110792
1641,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// The path AST should be a DotNode, and it should have been evaluated already.",no,undetermined,0,0,0,no,0.004048301102229095,no,0.0042431548210641185,no,0.004186404587299567,no,0.003985178012881099
1642,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Force a substitution!,no,undetermined,0,0,0,no,0.0022486523555100713,no,0.002301721873982061,no,0.002239589019703273,no,0.002091446027788864
1643,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if // if // Otherwise, handle the error normally.",no,undetermined,0,0,0,no,0.030048595972499387,no,0.014256458088158971,no,0.013765886020841594,no,0.013314003678694852
1644,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// the database now holds a lock + the object is flushed from the cache, // so release the soft lock",no,undetermined,0,0,0,no,0.014874189658694425,no,0.01426983360716123,no,0.013771727522693927,no,0.013338699087097141
1645,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// now update the object .. has to be outside the main if block above (because of collections),no,undetermined,0,0,0,no,0.01613514473958011,no,0.01336831403102121,no,0.01258512975274048,no,0.01242418774891165
1646,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Named Queries:,no,undetermined,0,0,0,no,0.00508745302015731,no,0.00710704837000401,no,0.006729211294834546,no,0.006417712168332401
1647,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this is a situation where the entity id is assigned by a post-insert generator // and was saved outside the transaction forcing it to be delayed,no,undetermined,0,0,0,no,0.037181752889455286,no,0.01425776185222821,no,0.013777074215234409,no,0.013330607392023372
1648,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//grab its state saved at deletion,no,undetermined,0,0,0,no,0.002661583373220745,no,0.0025075692310280143,no,0.0024915195137735183,no,0.0023467790848394577
1649,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// grab its current state,no,undetermined,0,0,0,no,0.0012104914230002418,no,0.001055183836477096,no,0.0010848567194769114,no,0.0010091158459366442
1650,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this will throw an error if there's something wrong.,no,undetermined,0,0,0,no,0.044592375077540054,no,0.014263314899483225,no,0.013764376492007239,no,0.013307424563549518
1651,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// collection deletions are a special case since update() can add // deletions of collections not loaded by the session.,no,undetermined,0,0,0,no,0.0081871892806453,no,0.004815340739183523,no,0.004469951894244675,no,0.0043039071746826165
1652,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if the natural-id is marked as non-mutable, it is not retrieved during a // normal database-snapshot operation...",no,undetermined,0,0,0,no,0.004072356126741206,no,0.0041876403933650275,no,0.003934145209464796,no,0.0037452092138472895
1653,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// watch out for a case where old is still referenced // somewhere in the object graph! (which is a user error),no,undetermined,0,0,0,no,0.009860659143566002,no,0.012602482850328193,no,0.013092631387986546,no,0.012685486860105618
1654,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//slice, to get the columns for this component //property",no,undetermined,0,0,0,no,0.0034475329283631044,no,0.009559893939894376,no,0.01003776811672738,no,0.009644632397421521
1655,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// schedule the update // note that we intentionally do _not_ pass in currentPersistentState!,no,undetermined,0,0,0,no,0.008176986180072756,no,0.01022524388251312,no,0.010076169454400093,no,0.009593890017797696
1656,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// substitutes into values by side-effect,no,undetermined,0,0,0,no,0.0034330209057999734,no,0.014262676593154956,no,0.013780740387534563,no,0.013330414975495869
1657,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// give the Interceptor a chance to process property values, if the properties // were modified by the Interceptor, we need to set them back to the object",no,undetermined,0,0,0,no,0.02249632251632884,no,0.014273035437260618,no,0.013778697404762785,no,0.013332004381899548
1658,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// (NOT (EQ a b) ) => (NE a b),no,undetermined,0,0,0,no,0.017178316915685665,no,0.014268000206035157,no,0.01380030180451393,no,0.013347354621815842
1659,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// compare to cached state (ignoring collections unless versioned),no,undetermined,0,0,0,no,0.009955327789649384,no,0.007606874929001663,no,0.007186441512255107,no,0.006958566726099903
1660,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// if it was dirtied by a collection only,no,undetermined,0,0,0,no,0.006366383764297572,no,0.001994227950983786,no,0.0018595336215417348,no,0.0017738590675420325
1661,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// check nullability but do not perform command execute // we'll use scheduled updates for that.,no,undetermined,0,0,0,no,0.014403467436374079,no,0.0142455214225036,no,0.013779621401741693,no,0.013340457376970996
1662,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This 'dot' expression now refers to the resulting from element.,no,undetermined,0,0,0,no,0.009180893606767417,no,0.006036975113911139,no,0.005869930264429176,no,0.005620219671578366
1663,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// (NOT (LIKE a b) ) => (NOT_LIKE a b),no,undetermined,0,0,0,no,0.013233383999479232,no,0.014237516135857092,no,0.013758970245627451,no,0.013318152578741199
1664,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The CollectionEntry.isReached() stuff is just to detect any silly users   // who set up circular or shared references between/to collections.,no,undetermined,0,0,0,no,0.07248685669587246,no,0.014229169949465917,no,0.013780497259355184,no,0.013308970111272923
1665,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// detached collection wrappers that get found + reattached // during flush shouldn't be ignored,no,undetermined,0,0,0,no,0.011588199461638641,no,0.0057946524946138455,no,0.004206362991154015,no,0.004035384791414097
1666,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// (NOT (IS_NOT_NULL a b) ) => (IS_NULL a b),no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
1667,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// The unique property value represented here may or may not be // serializable, so we do an explicit check here in order to generate // a better error message",no,undetermined,0,0,0,no,0.0362331547299383,no,0.01426065842792275,no,0.013773243661253601,no,0.01332681656328624
1668,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if the version of a newly instantiated object is not the same // as the version seed value, use that as the unsaved-value",no,undetermined,0,0,0,no,0.01214658751941835,no,0.0056689441988488545,no,0.005175417946733803,no,0.005014609378727544
1669,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ie. we never have to null out a reference to // an uninitialized proxy,no,undetermined,0,0,0,no,0.004468716736452593,no,0.003966159289290268,no,0.0037993983434625555,no,0.0034385924734627498
1670,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// (NOT (NOT_LIKE a b) ) => (LIKE a b),no,undetermined,0,0,0,no,0.013233383999479232,no,0.014237516135857092,no,0.013758970245627451,no,0.013318152578741199
1671,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//give the Interceptor a chance to modify property values,no,undetermined,0,0,0,no,0.022083082823077558,no,0.014248499434637851,no,0.013769599899437431,no,0.013309712553782643
1672,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//now we might need to recalculate the dirtyProperties array,no,undetermined,0,0,0,no,0.011833837572496855,no,0.014269511440389975,no,0.01292095812553224,no,0.012485686998410649
1673,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//use the current version,no,undetermined,0,0,0,no,0.012399679784792086,no,0.010837622299276201,no,0.010918738174426743,no,0.010522116492053932
1674,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// object loaded by update(),no,undetermined,0,0,0,no,0.007118436852212414,no,0.006965668980340119,no,0.006731802673474208,no,0.006471577622037079
1675,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// ignore this row, the collection is in process of // being loaded somewhere further ""up"" the stack",no,undetermined,0,0,0,no,0.0013047546149403638,no,0.0010384517176773784,no,0.0010145538933893916,no,0.000917758012700532
1676,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Entity load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // 	* currently, not yet used...",no,undetermined,0,0,0,no,0.023057059322145572,no,0.014261821039655807,no,0.01379420547374736,no,0.013302957334337527
1677,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// dirty check against the usual snapshot of the entity,no,undetermined,0,0,0,no,0.011132749548452236,no,0.011550162983449581,no,0.011149915291744954,no,0.01050018402633568
1678,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// this implementation is supposed to tolerate incorrect unsaved-value // mappings, for the purpose of backward-compatibility",no,undetermined,0,0,0,no,0.07842254188201078,no,0.014259768380667724,no,0.01377526610967163,no,0.013321296462732382
1679,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// this implementation is supposed to tolerate incorrect unsaved-value // mappings, for the purpose of backward-compatibility",no,undetermined,0,0,0,no,0.07842254188201078,no,0.014259768380667724,no,0.01377526610967163,no,0.013321296462732382
1680,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// wrap up any new collections directly referenced by the object // or its components,no,undetermined,0,0,0,no,0.009801105180236537,no,0.014251822168619737,no,0.013784830164768481,no,0.013332093542617322
1681,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// skip this check for composite-ids relating to dom4j entity-mode; // alternatively, we could add a check to make sure the incoming id value is // an instance of Element...",no,undetermined,0,0,0,no,0.040711755927174464,no,0.014266678242160317,no,0.01378300196723184,no,0.013319799397412891
1682,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// upgrade the lock if necessary: //lock(result, lockMode);",no,undetermined,0,0,0,no,0.003921963415045428,no,0.004261293717024368,no,0.006778725713503714,no,0.006473733188222011
1683,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// now, any collections that are initialized // inside this block do not get updated - they // are ignored until the next flush",no,undetermined,0,0,0,no,0.011181098351938961,no,0.006901157926228973,no,0.005444602266234226,no,0.005204951457071504
1684,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// (NOT (NE a b) ) => (EQ a b),no,undetermined,0,0,0,no,0.017178316915685665,no,0.014268000206035157,no,0.01380030180451393,no,0.013347354621815842
1685,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//we must clone embedded composite identifiers, or  //we will get back the same instance that we pass in",no,undetermined,0,0,0,no,0.004871643707154401,no,0.00296075693875923,no,0.0027701372749793915,no,0.0026094714599032807
1686,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Sub-insertions should occur before containing insertion so // Try to do the callback now,no,undetermined,0,0,0,no,0.002400270684563574,no,0.0023993841179318198,no,0.0023740454373079208,no,0.0021430693558272765
1687,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// (NOT (LE a b) ) => (GT a b),no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
1688,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// (NOT (GE a b) ) => (LT a b),no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
1689,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// (NOT (LT a b) ) => (GE a b),no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
1690,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//the entity is not associated with the session, so //try interceptor and unsaved-value",no,undetermined,0,0,0,no,0.001826256385076126,no,0.0009240160805463952,no,0.0008643398382427023,no,0.0008051148359931095
1691,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// ... and the expected token type was an identifier, then:",no,undetermined,0,0,0,no,0.00514896592627349,no,0.004597364058409121,no,0.00417105446925534,no,0.00402832136233464
1692,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// igndore it...,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
1693,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// [jsd] The fix for HHH-558...,no,undetermined,0,0,0,no,0.013245265632963434,no,0.014259881639129399,no,0.013783367804096091,no,0.01334318080728228
1694,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// If the token can tell us if it could be an identifier...,no,undetermined,0,0,0,no,0.008300701760297487,no,0.0072722454953333205,no,0.006900403426483097,no,0.0066075908584982395
1695,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we are now at a new tree level,no,undetermined,0,0,0,no,0.016716123076589547,no,0.014251839683160142,no,0.013768685959163971,no,0.013314531665684377
1696,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// dirty check against the database snapshot, if possible/necessary",no,undetermined,0,0,0,no,0.04442819325235531,no,0.014229658819760021,no,0.013776820713334862,no,0.013308893839903465
1697,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the Interceptor handled the dirty checking,no,undetermined,0,0,0,no,0.0673951695506746,no,0.014273307286315177,no,0.013776063220035188,no,0.013335904441538716
1698,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Use the delegate.,no,undetermined,0,0,0,no,0.006436313866733458,no,0.005610697577373194,no,0.0052625740426617655,no,0.005028659860282434
1699,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ( (Column) ( (SimpleValue) ic.getIndex() ).getColumnIterator().next() // ).setNullable(false);,no,undetermined,0,0,0,no,0.006820546827043978,no,0.004187342794791843,no,0.004102872672234775,no,0.003911646258502565
1700,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//60 seconds,no,undetermined,0,0,0,no,0.006371447359833437,no,0.006339747874598909,no,0.006147084709193628,no,0.005866638305362936
1701,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// get meta's from <subclass>,no,undetermined,0,0,0,no,0.034755439954870945,no,0.014233850949637411,no,0.013776292854277604,no,0.01332351438644284
1702,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// evict() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.007227820479986426,no,0.0068302369575258355,no,0.006657399138082261,no,0.0063773954378130385
1703,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//ignore!,no,undetermined,0,0,0,no,0.0003489690046840201,no,0.0004791828875098961,no,0.0004737640273004505,no,0.00043449603121796743
1704,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// get the id from the object,no,undetermined,0,0,0,no,0.02218003609339389,no,0.013567180520856252,no,0.013273354328651402,no,0.012870059778496354
1705,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// do the put outside the scope of the JTA txn,no,undetermined,0,0,0,no,0.013556197276294708,no,0.012172365805426846,no,0.011675167601449191,no,0.011549023721183202
1706,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//what is the version on the database?,no,undetermined,0,0,0,no,0.015276024832330792,no,0.011567640225063895,no,0.010865513518405858,no,0.010500274967772543
1707,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/// HHH-2378,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
1708,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//stops flush being called multiple times if this method is recursively called,no,undetermined,0,0,0,no,0.05637738953914678,no,0.01426644374728738,no,0.013774980233621776,no,0.013330697498092785
1709,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//will result in a SQL UPDATE:,no,undetermined,0,0,0,no,0.0031747285392704793,no,0.0029739102447940476,no,0.003410758915529585,no,0.0032448707345770714
1710,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//else do nothing (don't even reassociate object!),no,undetermined,0,0,0,no,0.013187824489704915,no,0.013922782909698946,no,0.013288374459617962,no,0.012894435015077815
1711,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// no existing row - do an insert,no,undetermined,0,0,0,no,0.00048764347405020144,no,0.0005679090910855698,no,0.0005511824797837231,no,0.0005055320847520158
1712,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// --- Inner classes (moved here from sql-gen.g) ---,no,undetermined,0,0,0,no,0.03762778877570567,no,0.014253542286326764,no,0.013773099828829781,no,0.013337554564018615
1713,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// reference type,no,undetermined,0,0,0,no,0.014543626025019567,no,0.012422209214962975,no,0.012314473913469478,no,0.011664186132623265
1714,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Use the delegate.,no,undetermined,0,0,0,no,0.006436313866733458,no,0.005610697577373194,no,0.0052625740426617655,no,0.005028659860282434
1715,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// should be the first, but just to be safe...",no,undetermined,0,0,0,no,0.006100892283212848,no,0.005622998567883099,no,0.005626458011806056,no,0.005369515909024069
1716,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//return a proxy if appropriate,no,undetermined,0,0,0,no,0.003809238031015257,no,0.004724727936948884,no,0.004333617619963322,no,0.0038452616497483263
1717,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// some filters affecting the collection are enabled on the session, so do not do the put into the cache.",no,undetermined,0,0,0,no,0.004900155336060591,no,0.005110093264841655,no,0.0048885392419032395,no,0.004690706427858427
1718,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Generate an explicit join for the root dot node.   The implied joins will be collected and passed up // to the root dot node.,no,undetermined,0,0,0,no,0.0037821438355942066,no,0.0026786288497008984,no,0.0025878213860166016,no,0.0024561857402126772
1719,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// A session is considered to contain an entity only if the entity has // an entry in the session's persistence context and the entry reports // that the entity has not been removed,no,undetermined,0,0,0,no,0.0052695440652692,no,0.006152795412498493,no,0.0059279688457661425,no,0.005711794480782745
1720,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ... and the token could be an identifer and the error is // a mismatched token error ...,no,undetermined,0,0,0,no,0.008590821904834801,no,0.009120457356597845,no,0.00885887430641256,no,0.00850437501620013
1721,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If a where clause was specified in the update/delete query, use it to limit the // returned ids here...",no,undetermined,0,0,0,no,0.010622965365989641,no,0.011090020431137387,no,0.010134336694593293,no,0.00979333641361043
1722,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Default implementation: // If this node has a data type, and that data type is not an association, then this is scalar.",no,undetermined,0,0,0,no,0.008132216269970394,no,0.007756775837365066,no,0.007760393555072914,no,0.007442135905334304
1723,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Resolve the LHS fully, generate implicit joins.  Pass in the property name so that the resolver can // discover foreign key (id) properties.",no,undetermined,0,0,0,no,0.014497939288381622,no,0.008774163803045567,no,0.008487179917193494,no,0.00818902646432078
1724,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If the propertyType is null and there isn't a parent, just // stop now... there was a problem resolving the node anyway.",no,undetermined,0,0,0,no,0.028617660085030864,no,0.014256617604723182,no,0.01376679999676949,no,0.013332222405589492
1725,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//We do not look for an existing join on the same path, because //it makes sense to join twice on the same collection role",no,undetermined,0,0,0,no,0.020661030660242077,no,0.014255950358907093,no,0.013783973356826639,no,0.013304216445450563
1726,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// return new uninitialized proxy,no,undetermined,0,0,0,no,0.0005376300499475323,no,0.0007337365789317054,no,0.0006741689464520483,no,0.0005819477053652881
1727,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this object was already loaded,no,undetermined,0,0,0,no,0.015514529047107596,no,0.010080132445537127,no,0.009773442935937647,no,0.00946165269869012
1728,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Entity was found in second-level cache...,no,undetermined,0,0,0,no,0.013465144747536354,no,0.009086968594606434,no,0.008515377378926492,no,0.008200552029383152
1729,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// intializes result by side-effect,no,undetermined,0,0,0,no,0.010288107850855752,no,0.014266487267852113,no,0.013761981984211458,no,0.013339301910991867
1730,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// NOTE : ( max - 1 ) because first is zero-based while max is not...,no,undetermined,0,0,0,no,0.017069533416766328,no,0.014265983477433313,no,0.013747003958980578,no,0.013333648318109292
1731,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// A shallow query is ok (although technically there should be no fetching here...),no,undetermined,0,0,0,no,0.0018891359096961506,no,0.00510259544941806,no,0.0046978942668618896,no,0.004508960117040614
1732,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Delegate to the QueryLoader...,no,undetermined,0,0,0,no,0.0046675678790938915,no,0.0038023377300682925,no,0.003628657669431467,no,0.0034536851486468667
1733,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Remember the parameters for the compilation.,no,undetermined,0,0,0,no,0.004843455534075767,no,0.004331708977116103,no,0.004213722439344934,no,0.004017320430876044
1734,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// -- Package local methods for the QueryLoader delegate --,no,undetermined,0,0,0,no,0.010103136817921913,no,0.012032047741119637,no,0.011542009815506427,no,0.011168953965966144
1735,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Delegate to the QueryLoader...,no,undetermined,0,0,0,no,0.0046675678790938915,no,0.0038023377300682925,no,0.003628657669431467,no,0.0034536851486468667
1736,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// double,no,undetermined,0,0,0,no,0.0020932630681788837,no,0.0021364315186175532,no,0.0025052310733429937,no,0.0023587778413049474
1737,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//now done in EntityIdentityInsertAction //persister.setIdentifier( entity, id, source.getEntityMode() );",no,undetermined,0,0,0,no,0.02091269078500685,no,0.009231297076362726,no,0.008329316900615785,no,0.007961000254040583
1738,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// double,no,undetermined,0,0,0,no,0.0020932630681788837,no,0.0021364315186175532,no,0.0025052310733429937,no,0.0023587778413049474
1739,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Use the token as an identifier.,no,undetermined,0,0,0,no,0.005718892089630897,no,0.006383789561179241,no,0.006050480309445566,no,0.005777748615145745
1740,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//some statistics,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
1741,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//safe from concurrent modification because of how entryList() is implemented on IdentityMap,no,undetermined,0,0,0,no,0.028587342426817663,no,0.01428010287138257,no,0.013798517820157173,no,0.013325026643720723
1742,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Transform the tree.,no,undetermined,0,0,0,no,0.00782051167983654,no,0.009046051181714775,no,0.00888629778950512,no,0.008556173156311658
1743,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Parse the query string into an HQL AST.,no,undetermined,0,0,0,no,0.010462940160116539,no,0.003858082640235853,no,0.003640096927066168,no,0.0034680358464047336
1744,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we do not actually propogate ANTLRExceptions as a cause, so // log it here for diagnostic purposes",no,undetermined,0,0,0,no,0.020794683734527922,no,0.014271945869384793,no,0.013787322687957052,no,0.013301082529584543
1745,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// So this needs to be safe from concurrent modification problems. // It is safe because of how IdentityMap implements entrySet(),no,undetermined,0,0,0,no,0.042615359841432554,no,0.014256969427445441,no,0.01376990881503267,no,0.01330059115656748
1746,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//only needed during compilation phase...,no,undetermined,0,0,0,no,0.010179452061315073,no,0.010415661891194571,no,0.010151821039022662,no,0.009792749012900379
1747,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Update the status of the object and if necessary, schedule an update",no,undetermined,0,0,0,no,0.005257169690929718,no,0.008707805013971759,no,0.008384502521770457,no,0.00806644551750198
1748,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Schedule updates to collections:,no,undetermined,0,0,0,no,0.008085710692217205,no,0.004313306439063225,no,0.0040564085613188075,no,0.003964353960721443
1749,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we need to lock the collection caches before // executing entity inserts/updates in order to // account for bidi associations,no,undetermined,0,0,0,no,0.013488983671306033,no,0.008490554596752737,no,0.008847738450588795,no,0.008694536446245951
1750,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//the database has changed now, so the subselect results need to be invalidated",no,undetermined,0,0,0,no,0.01220834866339891,no,0.011084358310295108,no,0.010277039725792395,no,0.009928254445270896
1751,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if the collection is dereferenced, remove from the session cache //iter.remove(); //does not work, since the entrySet is not backed by the set",no,undetermined,0,0,0,no,0.12521726533707797,no,0.15281760809332937,no,0.1456312664269021,no,0.14674584284282133
1752,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// PHASE 1 : Parse the HQL into an AST.,no,undetermined,0,0,0,no,0.007106985539204794,no,0.0022339331584508397,no,0.0022131978553420763,no,0.0020883529921126493
1753,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// key is an entity involved with the operation performed by the listener; // value is a flag indicating if the listener explicitly operates on the entity,no,undetermined,0,0,0,no,0.001916549370426278,no,0.001752759516291769,no,0.0016661872648235717,no,0.001587957532400266
1754,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//get a snapshot,no,undetermined,0,0,0,no,0.003107160101098385,no,0.014235470367378005,no,0.013765983133484955,no,0.013320335481950104
1755,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*public final Currency getCurrency(int col) throws HibernateException {
		return (Currency) get(col);
	}*/",no,undetermined,0,0,0,no,0.014588089378005393,no,0.013398481201242663,no,0.012831647217299886,no,0.01235585438495881
1756,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// right represents a joins originating from left...,no,undetermined,0,0,0,no,0.0035357738348878215,no,0.003600468025663552,no,0.003055450810965744,no,0.0028995537162669885
1757,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//overriden to avoid System.exit,no,undetermined,0,0,0,no,0.007155467627214345,no,0.007167030155592514,no,0.0068996762082956,no,0.006683097686362939
1758,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If the query is already compiled, skip the compilation.",no,undetermined,0,0,0,no,0.004132663755573148,no,0.0021268929996862054,no,0.0019517378352004891,no,0.0018449393806486338
1759,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* package-private */,no,undetermined,0,0,0,no,0.013230214867834772,no,0.014266992679767339,no,0.01377645948426635,no,0.013340730481062246
1760,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* package-private */,no,undetermined,0,0,0,no,0.013230214867834772,no,0.014266992679767339,no,0.01377645948426635,no,0.013340730481062246
1761,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// remember that ordinal parameters numbers are 1-based!!!,no,undetermined,0,0,0,no,0.01734531050589739,no,0.014260920350275062,no,0.013803256641045907,no,0.013323558504722423
1762,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//overriden to avoid System.exit,no,undetermined,0,0,0,no,0.007155467627214345,no,0.007167030155592514,no,0.0068996762082956,no,0.006683097686362939
1763,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// all clear,no,undetermined,0,0,0,no,0.006639349274555358,no,0.007722081857725158,no,0.007570193593796529,no,0.007253382894651746
1764,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Ignore the token class name parameter, and use a specific token class.",no,undetermined,0,0,0,no,0.00956071880348551,no,0.011941633842659966,no,0.011328826260241134,no,0.011016939821951259
1765,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//this is a query and we are loading multiple instances of the same collection role,no,undetermined,0,0,0,no,0.044540799933923896,no,0.014255945522119513,no,0.013795640326703423,no,0.013330852084296758
1766,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// EARLY EXIT!!!,no,undetermined,0,0,0,no,0.002670991679035732,no,0.002232446739692084,no,0.002188658649593499,no,0.002052037746907664
1767,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// before any callbacks, etc, so subdeletions see that this deletion happened first",no,undetermined,0,0,0,no,0.009113241790156887,no,0.009327715723816497,no,0.008865838872486756,no,0.00850534735899192
1768,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Ensures that containing deletions happen before sub-deletions,no,undetermined,0,0,0,no,0.0012959450619116023,no,0.0019346973528421348,no,0.0019027135344642124,no,0.0017818248223509003
1769,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// cascade-delete to collections BEFORE the collection owner is deleted,no,undetermined,0,0,0,no,0.006578590145059384,no,0.013318911104056128,no,0.013779209710644317,no,0.01333994312451073
1770,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// cascade-delete to many-to-one AFTER the parent was deleted,no,undetermined,0,0,0,no,0.006910030825211225,no,0.014234884919758358,no,0.013749848470814561,no,0.01330124209433382
1771,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if it is an initialized proxy, let cascade // handle it later on",no,undetermined,0,0,0,no,0.008233771417997722,no,0.013081545419490515,no,0.013380641150412622,no,0.012513742241949307
1772,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//assign the requested id to the proxy, *before* //reassociating the proxy",no,undetermined,0,0,0,no,0.0011748664827319628,no,0.0013006336862167707,no,0.0012686485789452074,no,0.0011207876519163636
1773,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// an uninitialized proxy, noop, don't even need to // return an id, since it is never a save()",no,undetermined,0,0,0,no,0.013990446854773903,no,0.014256776779794898,no,0.013776697924579563,no,0.012861756960075497
1774,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//initialize properties of the event:,no,undetermined,0,0,0,no,0.0029090037473965707,no,0.0028731308846485365,no,0.0028227916172339053,no,0.0026780564614704585
1775,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//return the id in the event object,no,undetermined,0,0,0,no,0.02649439127808792,no,0.014263264968040824,no,0.01378694604317986,no,0.013337804804430201
1776,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//TRANSIENT or DELETED,no,undetermined,0,0,0,no,0.010782580828705805,no,0.014234950137741783,no,0.013795951157885029,no,0.013307422472484053
1777,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// assume this is a newly instantiated transient object // which should be saved rather than updated,no,undetermined,0,0,0,no,0.048650395400695955,no,0.014257412508480945,no,0.013776711361492998,no,0.013330114189211251
1778,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this is a transient object with existing persistent state not loaded by the session,no,undetermined,0,0,0,no,0.006677365232877175,no,0.003744744629867924,no,0.0036299258853124128,no,0.0034423267338512934
1779,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// check two ""adjecent"" nodes at the top of the from-clause tree",no,undetermined,0,0,0,no,0.005579098452310917,no,0.006421772294095386,no,0.0060514465176986195,no,0.005696434737085561
1780,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//cachedState,",no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
1781,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//a ""detached"" collection!",no,undetermined,0,0,0,no,0.006366383764297572,no,0.001994227950983786,no,0.0018595336215417348,no,0.0017738590675420325
1782,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if the collection belonged to a different entity, // clean up the existing state of the collection",no,undetermined,0,0,0,no,0.013461393624804377,no,0.007299023260189673,no,0.006529163358517785,no,0.006324245694083083
1783,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//log.debug( ""calling onLoad()"" );",no,undetermined,0,0,0,no,0.005318211420003431,no,0.006783293037609385,no,0.006523891988038842,no,0.006327325485341667
1784,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//EARLY EXIT!,no,undetermined,0,0,0,no,0.002670991679035732,no,0.002232446739692084,no,0.002188658649593499,no,0.002052037746907664
1785,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// note: performExecutions() clears all collectionXxxxtion  // collections (the collection actions) in the session,no,undetermined,0,0,0,no,0.021572403377580242,no,0.011798116598803048,no,0.011265820923082993,no,0.01097087227703434
1786,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//ie. the entity came in from update(),no,undetermined,0,0,0,no,0.0026905590735932855,no,0.0025742050826380166,no,0.0024490365786615665,no,0.002328072612106932
1787,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//we need to check even if it was not initialized, because of delayed adds!",no,undetermined,0,0,0,no,0.014748537619268682,no,0.014254302563996513,no,0.013775503002789282,no,0.013353523648415978
1788,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//NOTE: EARLY EXIT!,no,undetermined,0,0,0,no,0.009851730953002773,no,0.008447576969000298,no,0.00839580091061771,no,0.007973154111423878
1789,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// if template is null we just write the function out as it appears in the hql statement,no,undetermined,0,0,0,no,0.021478397533817476,no,0.01427848097894494,no,0.013798699623724556,no,0.013333620669465111
1790,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// semantic action processing ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.009719750834405488,no,0.011275937678981987,no,0.010960361921674681,no,0.01067392306672854
1791,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// find any entities that are still transient after retry,no,undetermined,0,0,0,no,0.014361456251509213,no,0.014278025767636069,no,0.01378398823308929,no,0.013325021883679906
1792,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Initialize SQL nodes here.,no,undetermined,0,0,0,no,0.003386694480359962,no,0.0036904318717284916,no,0.0036057437723559893,no,0.003294207375772107
1793,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//EARLY EXIT!,no,undetermined,0,0,0,no,0.002670991679035732,no,0.002232446739692084,no,0.002188658649593499,no,0.002052037746907664
1794,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Check the persistence context for an entry relating to this // entity to be merged...,no,undetermined,0,0,0,no,0.006090604513198144,no,0.0080696975701168,no,0.008303260464440033,no,0.007995230690851765
1795,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//DELETED,no,undetermined,0,0,0,no,0.004355325360733687,no,0.014274664974897421,no,0.013767105912999842,no,0.013343228464478992
1796,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Set the unresolved path in this node and the parent. // Set the text for the parent.,no,undetermined,0,0,0,no,0.005013428525541494,no,0.0038925671557696866,no,0.0037814648736902963,no,0.0035955710245718273
1797,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// 60 second lock timeout,no,undetermined,0,0,0,no,0.002146264208194842,no,0.0016528105388736378,no,0.002105933868665453,no,0.0019803147476126384
1798,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*
				 * Property prop = new Property(); prop.setName(""id"");
				 * prop.setPropertyAccessorName(""embedded""); prop.setValue(id);
				 * entity.setIdentifierProperty(prop);
				 */",no,undetermined,0,0,0,no,0.007968517847551166,no,0.014257891318854788,no,0.013755894957811918,no,0.013332531129154512
1799,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//before cascade!,no,undetermined,0,0,0,no,0.0032935101036043316,no,0.014266261512849326,no,0.013798226135716905,no,0.013324741332252768
1800,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// continue...; we'll find out if it ends up not getting saved later,no,undetermined,0,0,0,no,0.07228189790136431,no,0.014259148912214198,no,0.013795002187780165,no,0.013345743934614051
1801,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// cascade first, so that all unsaved objects get their // copy created before we actually copy",no,undetermined,0,0,0,no,0.0083809421027053,no,0.013534101981940456,no,0.012689796295334649,no,0.01232271729475356
1802,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// check that entity id = requestedId,no,undetermined,0,0,0,no,0.011311454623838644,no,0.009727765763049866,no,0.008514097958358767,no,0.00822192904307744
1803,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Not a collection? // Return the entity property mapping.,no,undetermined,0,0,0,no,0.008583496126181013,no,0.005834445393055494,no,0.005300007541226537,no,0.005079970688549703
1804,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// collection of <many-to-any/> mappings... // used to circumvent the component-collection check below...,no,undetermined,0,0,0,no,0.010845375570221851,no,0.009007580372464807,no,0.00925379633694209,no,0.009002954810601252
1805,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Otherwise, the destination node was implied by the FROM clause and the FROM clause processor // will automatically add it in the right place.",no,undetermined,0,0,0,no,0.01807994370368445,no,0.014237874807841567,no,0.013786894408843307,no,0.013322570991905093
1806,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If the first identifier in the path referrs to the class alias (not the class name), then this // is a correlated subselect.  If it's a correlated sub-select, use the existing table alias.  Otherwise // generate a new one.",no,undetermined,0,0,0,no,0.00829462244358275,no,0.006442172879304967,no,0.005479128415151945,no,0.005254752653624212
1807,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// This uses a PathExpressionParser but notice that compound paths are not valid, // only bare names and simple paths:",no,undetermined,0,0,0,no,0.027555032054896355,no,0.014253752030994044,no,0.013799179058506927,no,0.013333042342595379
1808,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		origin.addDestination(destination); // Add the query spaces.,no,undetermined,0,0,0,no,0.013040217013398598,no,0.014219571787265142,no,0.013119521576874434,no,0.012688475223975485
1809,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Reset the node type, because the rest of the system is expecting FROM_FRAGMENT, all we wanted was // for the factory to create the right sub-class.  This might get reset again later on anyway to make the // SQL generation simpler.",no,undetermined,0,0,0,no,0.02574323125142393,no,0.014250255641892372,no,0.0137866909698157,no,0.013333011885295792
1810,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//explicit = true;	// This is an explict Select. //ArrayList sqlResultTypeList = new ArrayList();,no,undetermined,0,0,0,no,0.006137795869576236,no,0.006254781629267928,no,0.005777546334753238,no,0.0054532729423367055
1811,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//sqlResultTypeList.add( type ); // Generate the select expression.,no,undetermined,0,0,0,no,0.010403752742320105,no,0.006627290984951954,no,0.006394321822965459,no,0.006104049824923796
1812,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If the expression list has exactly one expression, and the type of the expression is a collection // then this might be a collection function, such as index(c) or size(c).",no,undetermined,0,0,0,no,0.026873845535836348,no,0.01424854654282369,no,0.013757147257566054,no,0.013323638072003057
1813,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The uber-rule here is that we need to include  subclass joins if // the FromElement is in any way dereferenced by a property from // the subclass table; otherwise we end up with column references // qualified by a non-existent table reference in the resulting SQL...,no,undetermined,0,0,0,no,0.09056782834798821,no,0.014244827575431539,no,0.013781530193545034,no,0.013310729953562282
1814,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//before cascade!,no,undetermined,0,0,0,no,0.0032935101036043316,no,0.014266261512849326,no,0.013798226135716905,no,0.013324741332252768
1815,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// cascade first, so that all unsaved objects get their  // copy created before we actually copy",no,undetermined,0,0,0,no,0.0083809421027053,no,0.013534101981940456,no,0.012689796295334649,no,0.01232271729475356
1816,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//copyValues works by reflection, so explicitly mark the entity instance dirty",no,undetermined,0,0,0,no,0.07166522402280506,no,0.014265898869307991,no,0.013800149452984816,no,0.013336915524303281
1817,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The following variables are stacks that keep information about each subexpression // in the list of nested subexpressions we are currently processing.,no,undetermined,0,0,0,no,0.04368340367839629,no,0.014269489407520335,no,0.013784223774368151,no,0.013316871640891438
1818,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// no need to even collect this information if the persister is considered multi-table,no,undetermined,0,0,0,no,0.04921626706002967,no,0.014257570864935936,no,0.013800125857042888,no,0.013352207802118812
1819,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// as soon as we encounter our first letter, return the substring // from that position",no,undetermined,0,0,0,no,0.008853119328965948,no,0.009921894651247178,no,0.009525505803453405,no,0.009079852530007206
1820,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Retrieve the value of the designated column in the current row of this // ResultSet object as a java.io.Reader object,no,undetermined,0,0,0,no,0.006804360505762696,no,0.006141571987136248,no,0.005996578017260492,no,0.005744397708484478
1821,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//for arrays, replaceElements() may return a different reference, since //the array length might not match",no,undetermined,0,0,0,no,0.020824527132359067,no,0.014269525992112593,no,0.01375661374256043,no,0.013324968831464076
1822,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// should not be able to reach last without maxPosition being set // unless there are no results,no,undetermined,0,0,0,no,0.003913670368356678,no,0.003969620258036717,no,0.003877268675943167,no,0.003663725961247425
1823,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//do not use proxiesByKey, since not all //proxies that point to this session's //instances are in that collection!",no,undetermined,0,0,0,no,0.011961694050970247,no,0.014263593033975779,no,0.013765423516973737,no,0.013337787049701393
1824,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//this should be a call to resolve(), not resolveIdentifier(),  //'cos it might be a property-ref, and we did not cache the //referenced value",no,undetermined,0,0,0,no,0.005300607725121225,no,0.0055356284435450305,no,0.004275520722380211,no,0.00405851251864391
1825,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If we have <tt>not-found=""ignore""</tt> association mapped to a // formula, we always need to dirty check it, so we can update the // second-level cache",no,undetermined,0,0,0,no,0.02626862720006795,no,0.014244019124142722,no,0.013769601247156194,no,0.013313893247529232
1826,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// We now have the value of the property-ref we reference.  However, // we need to dig a little deeper, as that property might also be // an entity type, in which case we need to resolve its identitifier",no,undetermined,0,0,0,no,0.12290149190482047,no,0.08442586007000538,no,0.013763488229074526,no,0.013318380010853757
1827,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//true if this is a query and we are loading multiple instances of the same collection role //otherwise this is a CollectionInitializer and we are loading up a single collection or batch,no,undetermined,0,0,0,no,0.05494702067439024,no,0.014234405031352221,no,0.013779690854765382,no,0.013333961366316385
1828,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// PERSISTER,no,undetermined,0,0,0,no,0.026910987107764264,no,0.012166250898335543,no,0.011603723848549291,no,0.011179192346205484
1829,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This method should be implemented assuming it's valid to  // do start/stop/start -- leave state appropriate for another start,no,undetermined,0,0,0,no,0.008952757588062472,no,0.009666331579357606,no,0.0092631073761081,no,0.008981136836951415
1830,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// We don't want to waste effort setting an option if JBC is // already in LOCAL mode. If JBC is REPL_(A)SYNC then check // if they passed an config option to disable query replication,no,undetermined,0,0,0,no,0.0074667979472126155,no,0.010647675556006552,no,0.010739322716747301,no,0.010410370297385426
1831,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// See if we had a 2nd invalidation from the same initial // preinvalidation timestamp. If so, only increment // if the new current value is an increase",no,undetermined,0,0,0,no,0.000764779867152698,no,0.0009765570650445298,no,0.0009018940929226344,no,0.0008355329072480212
1832,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If the workspace node has null as well, OK; if not we've // been modified in a non-comparable manner, which we have to // treat as us being newer",no,undetermined,0,0,0,no,0.006669195615822908,no,0.008686647430244816,no,0.008308838527143581,no,0.008028371669617822
1833,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//maintain correct duplication if loaded in a cartesian product,no,undetermined,0,0,0,no,0.009493299092809443,no,0.00896447331192624,no,0.00888464643953754,no,0.008579110204947124
1834,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// local cache, so we use synchronization",no,undetermined,0,0,0,no,0.008030545948089787,no,0.010206835936929472,no,0.009864611614146097,no,0.009503710680714561
1835,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*DataSource unpooled = DataSources.unpooledDataSource(
				jdbcUrl, props.getProperty(Environment.USER), props.getProperty(Environment.PASS)
			);*/",no,undetermined,0,0,0,no,0.0018624215262015075,no,0.002458777335195579,no,0.0023758254518438547,no,0.0022356958341871094
1836,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Don't need to lock the cache here, since if someone // else inserted the same pk first, the insert would fail",no,undetermined,0,0,0,no,0.013361423080833407,no,0.014261953636078111,no,0.01376192257993929,no,0.013317857925291651
1837,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we need to grab the version value from the entity, otherwise // we have issues with generated-version entities that may have // multiple actions queued during the same flush",no,undetermined,0,0,0,no,0.06054810367463911,no,0.014265217106131408,no,0.013769037400552095,no,0.013326417953512757
1838,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// short-circuit(s) // no new elements, the old list contains only Orphans // no old elements, so no Orphans neither",no,undetermined,0,0,0,no,0.005466089202248449,no,0.013090474736654133,no,0.012314409047177108,no,0.011866528446438717
1839,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//test out the optimizer:,no,undetermined,0,0,0,no,0.0015103349370109867,no,0.0017227496288411347,no,0.0017035879238380086,no,0.001589462283096414
1840,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// get the updated snapshot of the entity state by cloning current state; // it is safe to copy in place, since by this time no-one else (should have) // has a reference  to the array",no,undetermined,0,0,0,no,0.006917973023831988,no,0.009026665520850536,no,0.008399184879984818,no,0.008092731191683876
1841,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*!persister.isCacheInvalidationRequired()*/,no,undetermined,0,0,0,no,0.026910987107764264,no,0.012166250898335543,no,0.011603723848549291,no,0.011179192346205484
1842,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// long,no,undetermined,0,0,0,no,0.012638048304131058,no,0.014248853768082867,no,0.01378003659403297,no,0.013343982008787399
1843,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Set the existing pool flag to true,no,undetermined,0,0,0,no,0.003487249819456009,no,0.0030326650691066687,no,0.002943187940314309,no,0.002724516962097083
1844,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Validate that an alias name was provided to determine which pool to use,no,undetermined,0,0,0,no,0.01197306497114074,no,0.014270071093852702,no,0.013599936742451,no,0.013103875466063907
1845,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// We have created the pool ourselves, so shut it down",no,undetermined,0,0,0,no,0.002487831971954231,no,0.0026283452163908786,no,0.002548860460043121,no,0.002400682665977519
1846,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//the load() which takes an entity does not pass an entityName,no,undetermined,0,0,0,no,0.007498759350359656,no,0.007727325717886925,no,0.007214487020257585,no,0.006979676837504149
1847,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Note : expected in the syntax: //      type=listenerClass //          ({sep}type=listenerClass)* // where {sep} is any whitespace or comma,no,undetermined,0,0,0,no,0.022958549136561545,no,0.014250940228593831,no,0.013776135843042358,no,0.013316020300191292
1848,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// tree cache in optimistic mode seems to have as very difficult // time with remove calls on non-existent nodes (NPEs)...,no,undetermined,0,0,0,no,0.024476839224206657,no,0.014254829155324285,no,0.013782035913550792,no,0.013349802402671213
1849,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// We ignore minimalPutOverride. JBossCache putForExternalRead is // already about as minimal as we can get; it will promptly return // if it discovers that the node we want to write to already exists,no,undetermined,0,0,0,no,0.0027072263203074083,no,0.0026998988857634904,no,0.002615045253210897,no,0.0024666744618750645
1850,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//it does not refer to an alias of a projection, //look for a property",no,undetermined,0,0,0,no,0.007393217473135954,no,0.00793696792780242,no,0.007421669413124562,no,0.0071035750202943565
1851,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// do nothing for persistent instances,no,undetermined,0,0,0,no,0.013240709177092603,no,0.00901377454536489,no,0.008816295163886849,no,0.00847615972369021
1852,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// OptimisticCache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.008452757423553637,no,0.008644766823342472,no,0.008315256449659856,no,0.007799510052284272
1853,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//			option.setDataVersion( NonLockingDataVersion.INSTANCE );,no,undetermined,0,0,0,no,0.004024401096635212,no,0.006317661382739758,no,0.006178000741390376,no,0.005911047503250098
1854,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//assume true, since we don't really know, and it doesn't matter",no,undetermined,0,0,0,no,0.5,no,0.48320284395648694,no,0.46163915504291353,no,0.4674124734598333
1855,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Show the modified AST.,no,undetermined,0,0,0,no,0.004431553712608966,no,0.0037836569080838536,no,0.0037415253068623306,no,0.003570569841774876
1856,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// NOTE : firstRow is zero-based,no,undetermined,0,0,0,no,0.013095539219771623,no,0.014101529769376885,no,0.013773872069993684,no,0.013254720180272763
1857,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Initialize dirty flags for arrays + collections with composite elements // and reset reached, doupdate, etc.",no,undetermined,0,0,0,no,0.02818709007417806,no,0.01426737367978845,no,0.013780922825063947,no,0.013327968143408893
1858,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Use the delegate.,no,undetermined,0,0,0,no,0.006436313866733458,no,0.005610697577373194,no,0.0052625740426617655,no,0.005028659860282434
1859,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Use the delegate.,no,undetermined,0,0,0,no,0.006436313866733458,no,0.005610697577373194,no,0.0052625740426617655,no,0.005028659860282434
1860,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Tell the dot node about the join type.,no,undetermined,0,0,0,no,0.011509849789637653,no,0.0065009907660191595,no,0.006318348994194924,no,0.006019028575035732
1861,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This 'dot' expression now refers to the resulting from element.,no,undetermined,0,0,0,no,0.009180893606767417,no,0.006036975113911139,no,0.005869930264429176,no,0.005620219671578366
1862,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Among other things, updateReachables() will recursively load all // collections that are moving roles. This might cause entities to // be loaded.",no,undetermined,0,0,0,no,0.033351985567746545,no,0.014259250526272808,no,0.01378270531791776,no,0.0133136179891345
1863,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // Post-flushing section // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0027099312626314618,no,0.0038828683063977134,no,0.003694281763203693,no,0.0034833036517478034
1864,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//otherwise recreate the mapping between the collection and its key,no,undetermined,0,0,0,no,0.003161877134743766,no,0.004859164236693693,no,0.004721986808169084,no,0.004537384947107554
1865,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Create a parameter specification for the collection filter...,no,undetermined,0,0,0,no,0.01605195947761342,no,0.013148033155974138,no,0.013766822211864647,no,0.013344107526658357
1866,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Attach any mapping-defined ""ORDER BY"" fragments",no,undetermined,0,0,0,no,0.00642592418358598,no,0.00446606060896366,no,0.004353647623868543,no,0.004169311567891839
1867,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we found some extends attributes referencing entities which were // not already processed.  here we need to locate all entity-names // and class-names contained in this document itself, making sure // that these get removed from the extendz list such that only // extends names which require us to delay processing (i.e. // external to this document and not yet processed) are contained // in the returned result",no,undetermined,0,0,0,no,0.04293562392464053,no,0.014252751086687877,no,0.013786833310156048,no,0.013346666923272027
1868,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Make sure that the persister is versioned,no,undetermined,0,0,0,no,0.022705168141839767,no,0.011302597848029061,no,0.010747954409302096,no,0.010162635178951876
1869,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// for native-sql queries, the param metadata is determined outside // any relation to a query plan, because query plan creation and/or // retreival for a native-sql query depends on all of the return // types having been set, which might not be the case up-front when // param metadata would be most useful",no,undetermined,0,0,0,no,0.08399233043412507,no,0.014247529752363439,no,0.013770270600381308,no,0.013329004306587617
1870,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this function has a template -> redirect output and catch the arguments,no,undetermined,0,0,0,no,0.003747934048389456,no,0.004451519384067201,no,0.004257296931669189,no,0.004049478367502764
1871,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// use the id assigned to the instance,no,undetermined,0,0,0,no,0.023391716049923843,no,0.014245683903856242,no,0.013749823685727301,no,0.013313252762970042
1872,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if no array holder we found an unwrappered array (this can't occur, // because we now always call wrap() before getting to here) // return (ah==null) ? true : searchForDirtyCollections(ah, type);",no,undetermined,0,0,0,no,0.01208532978282417,no,0.01144157439334116,no,0.009869076741922405,no,0.006680758590206231
1873,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// a collection loaded in the current session // can not possibly be the collection belonging // to the entity passed to update(),no,undetermined,0,0,0,no,0.008549074487936115,no,0.004862745892084826,no,0.004671030530707698,no,0.004527927859983043
1874,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If the data type is not an association type, it could not have been in the FROM clause.",no,undetermined,0,0,0,no,0.005330787238749213,no,0.004725091531980989,no,0.005035145183664835,no,0.004775589169055683
1875,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// We need to generate ids as part of this bulk insert. // // Note that this is only supported for sequence-style generators and // post-insert-style generators; basically, only in-db generators",no,undetermined,0,0,0,no,0.029540617199817133,no,0.014247019455444473,no,0.013786482544402229,no,0.013326200317668062
1876,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//first look for a reference to a projection alias,no,undetermined,0,0,0,no,0.009370078487040787,no,0.01096551973957516,no,0.010160103517944418,no,0.009765095112125111
1877,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//first look for a reference to a projection alias,no,undetermined,0,0,0,no,0.009370078487040787,no,0.01096551973957516,no,0.010160103517944418,no,0.009765095112125111
1878,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.011763867789225897,no,0.011545915465813756,no,0.010170524800448342,no,0.009788537468922127
1879,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If there are no collection fetches, then no further checks are needed",no,undetermined,0,0,0,no,0.04647581040599517,no,0.014247483543913808,no,0.013770114348497864,no,0.013311282012014968
1880,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// --Commented out by Inspection (12/11/04 10:56 AM): int getWarningCount();,no,undetermined,0,0,0,no,0.0010116333519835324,no,0.0010055087901704768,no,0.0009789306090301848,no,0.0009049810797654024
1881,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if a ThreadLocalSessionContext-bound session happens to get // serialized, to be completely correct, we need to make sure // that unbinding of that session occurs.",no,undetermined,0,0,0,no,0.04484029875325936,no,0.01422905863853084,no,0.0137695976805315,no,0.01332304086480126
1882,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Make #@%$^#^&# sure no alias is applied to the table name,no,undetermined,0,0,0,no,0.008291710231722656,no,0.007404297723964626,no,0.006681389297474505,no,0.0064108083275578286
1883,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Delegate to the QueryLoader...,no,undetermined,0,0,0,no,0.0046675678790938915,no,0.0038023377300682925,no,0.003628657669431467,no,0.0034536851486468667
1884,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// switch,no,undetermined,0,0,0,no,0.006376614624390232,no,0.008747313746650914,no,0.008365555344426158,no,0.008036263994119589
1885,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we do not actually propogate ANTLRExceptions as a cause, so // log it here for diagnostic purposes",no,undetermined,0,0,0,no,0.020794683734527922,no,0.014271945869384793,no,0.013787322687957052,no,0.013301082529584543
1886,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Use the explicitly declared select expression; determine the // return types indicated by each select token,no,undetermined,0,0,0,no,0.022639795193933995,no,0.014240719476515552,no,0.013790009880011321,no,0.013326231980669763
1887,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// select clauses for insert statements should alwasy be treated as shallow,no,undetermined,0,0,0,no,0.006993768446384428,no,0.006417738505938888,no,0.0068519490149008535,no,0.00659778114150298
1888,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// After that, process the JOINs. // Invoke a delegate to do the work, as this is farily complex.",no,undetermined,0,0,0,no,0.017352656313126134,no,0.014279544670279533,no,0.013761801533729669,no,0.013320244735399337
1889,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Cache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.010761513081726118,no,0.010461282685285525,no,0.010013782658414629,no,0.00943742274436554
1890,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// simple cache of param metadata based on query string.  Ideally, the // original ""user-supplied query"" string should be used to retreive this // metadata (i.e., not the para-list-expanded query string) to avoid // unnecessary cache entries. // Used solely for caching param metadata for native-sql queries, see // getSQLParameterMetadata() for a discussion as to why...",no,undetermined,0,0,0,no,0.039902209253485706,no,0.014269246798935393,no,0.013800174847345316,no,0.013307389007169707
1891,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Use the delegate.,no,undetermined,0,0,0,no,0.006436313866733458,no,0.005610697577373194,no,0.0052625740426617655,no,0.005028659860282434
1892,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Alias references and identifiers use the same node class.,no,undetermined,0,0,0,no,0.01071258224656558,no,0.010974104093153287,no,0.009726580038911064,no,0.009397133308530236
1893,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// make a new one,no,undetermined,0,0,0,no,0.005330089504797434,no,0.004678973642730659,no,0.004574324046878533,no,0.004355954522955229
1894,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,///////////////////////////////////////////////////////////////////////,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
1895,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// these are just two unrelated table references,no,undetermined,0,0,0,no,0.008262592563277707,no,0.007101636168518802,no,0.0067888893746423425,no,0.006502554194121759
1896,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// again, both should be FromElements",no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
1897,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// check a set of parent/child nodes in the from-clause tree // to determine if a comma is required between them,no,undetermined,0,0,0,no,0.014740135300150592,no,0.014254273624434523,no,0.013801919257353886,no,0.013328221115477337
1898,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// PHASE 2 : Analyze the HQL AST, and produce an SQL AST.",no,undetermined,0,0,0,no,0.00397406915941407,no,0.002286644051060002,no,0.002273423366098908,no,0.0021581511388090806
1899,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// PHASE 3 : Generate the SQL.,no,undetermined,0,0,0,no,0.0050790775713406445,no,0.004683407926193829,no,0.0045818930156361,no,0.004383500368236974
1900,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Otherwise, we have a non-scalar select with defined collection fetch(es). // Make sure that there is only a single root entity in the return (no tuples)",no,undetermined,0,0,0,no,0.029538885267198358,no,0.014275809437175501,no,0.013782991629751854,no,0.013338124701258055
1901,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//			paramTranslations = new ParameterTranslationsImpl( collectedParameterSpecifications );,no,undetermined,0,0,0,no,0.0007673851418173427,no,0.0010460410572209196,no,0.0010306381472826695,no,0.0009543885276787981
1902,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we are already processing a dot-structure,no,undetermined,0,0,0,no,0.015965374411816256,no,0.014242697641987516,no,0.013757544803667188,no,0.013325953851079828
1903,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Should mean that no such property was found,no,undetermined,0,0,0,no,0.0019157695101742489,no,0.0017660595092281542,no,0.001744135767398268,no,0.001644071437917494
1904,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Initialize the error handling delegate.,no,undetermined,0,0,0,no,0.0072231567737179965,no,0.0065719829140322246,no,0.006392161157501091,no,0.006111803740307896
1905,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Was there an explicit select expression?,no,undetermined,0,0,0,no,0.011258308277459784,no,0.00845005341157337,no,0.007686021362986901,no,0.007411779358280438
1906,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Resolve everything up to this dot, but don't resolve the placeholders yet.",no,undetermined,0,0,0,no,0.029484225983642528,no,0.014254845182375275,no,0.013788599397194592,no,0.013336215329096016
1907,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// (NOT (NOT_BETWEEN a b) ) => (BETWEEN a b),no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
1908,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Just add a 'not' parent.,no,undetermined,0,0,0,no,0.00651185443684047,no,0.014267004757327575,no,0.013587637508314283,no,0.013114465429553657
1909,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// First, save off the pertinent ids, as the return value",no,undetermined,0,0,0,no,0.0042386956117932174,no,0.005267476923382255,no,0.0056898921440333445,no,0.005421581508021927
1910,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// check to see if the connection is in auto-commit  // mode (no connection means aggressive connection // release outside a JTA transaction context, so MUST // be autocommit mode)",no,undetermined,0,0,0,no,0.056934720667306656,no,0.01427044519318007,no,0.013794466199258493,no,0.013332863695923996
1911,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// First, save off the pertinent ids, saving the number of pertinent ids for return",no,undetermined,0,0,0,no,0.009763751620158224,no,0.013166530407909948,no,0.01255131830094952,no,0.012120598546094832
1912,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Start performing the deletes,no,undetermined,0,0,0,no,0.0022400279372162507,no,0.0025386142696493196,no,0.002425803573323344,no,0.0022932237391680966
1913,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Don't forget to resolve the argument! // Resolve the collection function now.,no,undetermined,0,0,0,no,0.022745738950937292,no,0.014240013089208877,no,0.013765477077243191,no,0.013306757871999983
1914,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// otherwise, everything ok.",no,undetermined,0,0,0,no,4.379622851773726e-05,no,0.014237335191371664,no,0.013765826512700741,no,0.013309654037017882
1915,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Re-arrange the tree so that the collection function is the root and the lhs is the path.,no,undetermined,0,0,0,no,0.004019796773807688,no,0.005223494781052069,no,0.0052145402748162645,no,0.005026261863549418
1916,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//    protected RegionRootListener listener;,no,undetermined,0,0,0,no,0.01472075296158885,no,0.01424705613602889,no,0.013759425555229706,no,0.013307764539615272
1917,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// inject the WHERE after the parent,no,undetermined,0,0,0,no,0.015517370732232038,no,0.014255297495275503,no,0.013782217213835577,no,0.013329653764988321
1918,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Never include subclasses for implied from elements.,no,undetermined,0,0,0,no,0.0029485216618763952,no,0.003925085662746502,no,0.003772387212981328,no,0.0035671629592627274
1919,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Establish the region root node with a non-locking data version,no,undetermined,0,0,0,no,0.015859992218705442,no,0.00568023319498977,no,0.0053927783724414605,no,0.005159987027060295
1920,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// For pessimistic locking, we just want to toss out our ref // to any old invalid root node and get the latest (may be null)            ",no,undetermined,0,0,0,no,0.027264614022711044,no,0.01425248683021655,no,0.013779205210265839,no,0.01333836954835041
1921,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// The rest only matters for optimistic locking, where we // need to establish the proper data version on the region root",no,undetermined,0,0,0,no,0.0668025699476389,no,0.01426010786772202,no,0.013759503643772751,no,0.013304934450834643
1922,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Prepare the left hand side and get the data type.,no,undetermined,0,0,0,no,0.0032045833580196187,no,0.004511005934054591,no,0.004356367674700782,no,0.004097844023369053
1923,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Prepare the left hand side and get the data type.,no,undetermined,0,0,0,no,0.0032045833580196187,no,0.004511005934054591,no,0.004356367674700782,no,0.004097844023369053
1924,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If this dot has already been resolved, stop now.",no,undetermined,0,0,0,no,0.006682346070718283,no,0.00631920652921124,no,0.006135830398133879,no,0.005891372715593783
1925,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// PROPERTIES,no,undetermined,0,0,0,no,0.005804620994376463,no,0.005156405132770629,no,0.0049524991266087955,no,0.004725739377578479
1926,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The property is another class..,no,undetermined,0,0,0,no,0.01800218017323535,no,0.014269758165639555,no,0.013769313800857724,no,0.013308345375038532
1927,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Otherwise, this is a primitive type.",no,undetermined,0,0,0,no,0.00106517073296394,no,0.0012431990423966948,no,0.0012333285652977052,no,0.0011442325350071124
1928,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//foo.bars.size (also handles deprecated stuff like foo.bars.maxelement for backwardness),no,undetermined,0,0,0,no,0.008580635282826819,no,0.01004448743368166,no,0.009811998948801604,no,0.009442027827591598
1929,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Use the delegate.,no,undetermined,0,0,0,no,0.006436313866733458,no,0.005610697577373194,no,0.0052625740426617655,no,0.005028659860282434
1930,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// For Timestamps, we default to a separate config",no,undetermined,0,0,0,no,0.005117474956214366,no,0.0050779293373030155,no,0.0048579616665935825,no,0.004625926161627081
1931,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//optimistic-lock=""all"", include all updatable properties //optimistic-lock=""dirty"", include all properties we are updating this time",no,undetermined,0,0,0,no,0.003046280231881093,no,0.0030637339998832,no,0.0038001207856754463,no,0.0035307250541530906
1932,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// this property belongs to the table, and it is not specifically // excluded from optimistic locking by optimistic-lock=""false""",no,undetermined,0,0,0,no,0.012235117899542456,no,0.0071340634971478155,no,0.007700634050052681,no,0.007280566511864563
1933,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//information about properties of this class, //including inherited properties //(only really needed for updatable/insertable properties)",no,undetermined,0,0,0,no,0.032379672251749675,no,0.01423911830539574,no,0.013786576234371246,no,0.013321382189573744
1934,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Here we render the select column list based on the properties defined as being generated. // For partial component generation, we currently just re-select the whole component // rather than trying to handle the individual generated portions.",no,undetermined,0,0,0,no,0.043465860850228535,no,0.014229706344400843,no,0.013763733516313931,no,0.013313389827182292
1935,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// NOTE : addDuplicateAlias() already performs nullness checks on the alias.,no,undetermined,0,0,0,no,0.032079047479123594,no,0.014248669681599192,no,0.013769800423747609,no,0.013313707193721528
1936,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if the from-clauses are the same, we can be a little more aggressive in terms of what we reuse",no,undetermined,0,0,0,no,0.027665349036526298,no,0.014256276921009309,no,0.013770289780314353,no,0.013328497942604664
1937,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_0,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
1938,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// again, null != null here",no,undetermined,0,0,0,no,0.013222556340648216,no,0.009918052080171226,no,0.00946412573100924,no,0.009230962605114459
1939,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// otherwise (subquery case) dont reuse the fromElement if we are processing the from-clause of the subquery,no,undetermined,0,0,0,no,0.008674292694402258,no,0.014257056581917884,no,0.01379187656164563,no,0.013313004729595459
1940,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we know only the lhs-hand type, so use that",no,undetermined,0,0,0,no,0.007002767861554158,no,0.014273651835288219,no,0.013779790281167258,no,0.013332899858955222
1941,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the referenced node text is the special 'id',no,undetermined,0,0,0,no,0.004222494856934553,no,0.004618249429024213,no,0.00486846968477818,no,0.004678587878634373
1942,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// only the identifier property field name can be a reference to the associated entity's PK...,no,undetermined,0,0,0,no,0.006260661375225025,no,0.0035602745028883672,no,0.0030747374002532027,no,0.0028934018687202163
1943,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// special shortcut for id properties, skip the join! // this must only occur at the _end_ of a path expression",no,undetermined,0,0,0,no,0.014582466363589622,no,0.012197645479011556,no,0.011824743096305379,no,0.011021140589222407
1944,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Append the new property name onto the unresolved path.,no,undetermined,0,0,0,no,0.01629013734672851,no,0.014278313112527993,no,0.013777242900199028,no,0.013328602068453552
1945,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Tell the destination fromElement to 'includeSubclasses'.,no,undetermined,0,0,0,no,0.02174798231136862,no,0.014269279650355354,no,0.013794949459137633,no,0.013333868804020058
1946,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If the lhs is a collection, use CollectionPropertyMapping",no,undetermined,0,0,0,no,0.004403573100487209,no,0.003604050098641953,no,0.0033648899811416686,no,0.003212477534680875
1947,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Don't resolve the node again.,no,undetermined,0,0,0,no,0.03115048074786929,no,0.014249395893879899,no,0.013763218614831783,no,0.013343347453312284
1948,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//lists, arrays //sets, maps, bags",no,undetermined,0,0,0,no,0.01688823915660899,no,0.014280866978398789,no,0.013759462471011785,no,0.013338433180458084
1949,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we have something like : ""? [op] rhs""",no,undetermined,0,0,0,no,0.005774111105095686,no,0.005432937207978002,no,0.004958976267795227,no,0.004651307082827007
1950,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Configure the cache to use our TM,no,undetermined,0,0,0,no,0.00977877972336716,no,0.010382831085963863,no,0.010002424171640116,no,0.009571975953549978
1951,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Make sure JBC doesn't look one up,no,undetermined,0,0,0,no,0.004445903296921935,no,0.00422072731493718,no,0.004033665563974167,no,0.00382876320823168
1952,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we finish all the ""removes"" first to take care of possible unique // constraints and so that we can take better advantage of batching",no,undetermined,0,0,0,no,0.005477880919952923,no,0.01184724712923587,no,0.011449855035452643,no,0.011091003596372297
1953,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//use a combination of foreign key columns and pk columns, since //the ordering of removal and addition is not guaranteed when //a child moves from one parent to another",no,undetermined,0,0,0,no,0.010735464686294155,no,0.014235207114012322,no,0.01378612443650364,no,0.013330971488534977
1954,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Make sure we don't re-release the same cache,no,undetermined,0,0,0,no,0.03317258432058578,no,0.014265860329279213,no,0.013753066495319096,no,0.013350529225267704
1955,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// We use a different delegate than the non-optimistic superclass default,no,undetermined,0,0,0,no,0.007361049449525346,no,0.006268554848304655,no,0.005765886361285695,no,0.005521840394969779
1956,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we have something like : ""lhs [op] ?""",no,undetermined,0,0,0,no,0.003409742123144325,no,0.003852759916292304,no,0.003558093342666647,no,0.0033123260389458717
1957,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// don't create a unique key, 'cos some // databases don't like a UK on nullable // columns //getCollectionTable().createUniqueKey( getIdentifier().getConstraintColumns() );",no,undetermined,0,0,0,no,0.020104972258037795,no,0.014263882750203308,no,0.013797096880283539,no,0.013319806075542928
1958,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//isSet = collection.isSet(); //isSorted = collection.isSorted();,no,undetermined,0,0,0,no,0.006366383764297572,no,0.001994227950983786,no,0.0018595336215417348,no,0.0017738590675420325
1959,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we know only the rhs-hand type, so use that",no,undetermined,0,0,0,no,0.010878318101864985,no,0.014239649196898936,no,0.013788071201236927,no,0.013301293059456211
1960,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If JBC is using INVALIDATION, we don't want to propagate changes. // We use the Timestamps cache to manage invalidation",no,undetermined,0,0,0,no,0.05297851906386183,no,0.014241163035082023,no,0.013789601498934566,no,0.01334266575970396
1961,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// long,no,undetermined,0,0,0,no,0.012638048304131058,no,0.014248853768082867,no,0.01378003659403297,no,0.013343982008787399
1962,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Don't hold the JBC node lock throughout the tx, as that // prevents updates // Add a zero (or low) timeout option so we don't block // waiting for tx's that did a put to commit",no,undetermined,0,0,0,no,0.003967239603386271,no,0.002965256265944629,no,0.003029833152479188,no,0.0028824374808206423
1963,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Double check the distributed cache,no,undetermined,0,0,0,no,0.002880809507283701,no,0.0032765451004333184,no,0.003615032387486645,no,0.0034215939267550704
1964,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Get an exclusive right to update JBC for this key from this node.,no,undetermined,0,0,0,no,0.003146065399075877,no,0.0043084825103264345,no,0.004064140694439944,no,0.0038694564634621756
1965,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// one or the other needs to be a datetime for us to get into this method in the first place...,no,undetermined,0,0,0,no,0.03300096060870096,no,0.014271120613598105,no,0.013784608634265295,no,0.013333494771257028
1966,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// #2,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
1967,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// nothing to do,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
1968,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Add the condition to the join sequence that qualifies the indexed element.,no,undetermined,0,0,0,no,0.014062826468428598,no,0.008236244258471494,no,0.00796109243026425,no,0.007644724771661678
1969,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Sometimes use the element table alias, sometimes use the... umm... collection table alias (many to many)",no,undetermined,0,0,0,no,0.010256697355636259,no,0.009351451269562858,no,0.007203907909306644,no,0.006966727549007753
1970,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Now, set the text for this node.  It should be the element columns.",no,undetermined,0,0,0,no,0.0012060294442089905,no,0.002790486693220907,no,0.0027751095401023084,no,0.002629461309314506
1971,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Get the function return value type, based on the type of the first argument.",no,undetermined,0,0,0,no,0.006768228321826597,no,0.009225890255721342,no,0.009234967105259317,no,0.00882508161734128
1972,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This will call initialize(tok)!,no,undetermined,0,0,0,no,0.0022551931053196046,no,0.0025570476491508427,no,0.0025210804962519946,no,0.0023673250302071
1973,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// mutation depends on the types of nodes invloved...,no,undetermined,0,0,0,no,0.01769675913471826,no,0.01426719729250506,no,0.013794592508653284,no,0.013333629630328766
1974,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// logic operators by definition resolve to booleans,no,undetermined,0,0,0,no,0.02342967526914686,no,0.014243761993291467,no,0.013768641332476211,no,0.01330884865771766
1975,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Generated select expressions are already resolved, nothing to do.",no,undetermined,0,0,0,no,0.018466384401606396,no,0.014236293047075311,no,0.013762807148151337,no,0.01331334813428693
1976,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The path may be a reference to an alias defined in the parent query.,no,undetermined,0,0,0,no,0.01156902061314727,no,0.010714315261235128,no,0.009260297176264833,no,0.008971905436246973
1977,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The HQL class alias refers to the class name.,no,undetermined,0,0,0,no,0.006171043791310234,no,0.0028635225483480344,no,0.0027803991493378635,no,0.0026260870128824794
1978,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Associate the table alias with the element.,no,undetermined,0,0,0,no,0.02402226081681849,no,0.014268676473264644,no,0.013789142056810352,no,0.013346058439566792
1979,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// try the parent FromClause...,no,undetermined,0,0,0,no,0.0028104397405234417,no,0.002887069661638671,no,0.0028136255667088254,no,0.0026465451189181624
1980,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Make sure that all from elements registered with this FROM clause are actually in the AST.,no,undetermined,0,0,0,no,0.010840741879733698,no,0.007408391399402566,no,0.007203902866800743,no,0.006934650878177769
1981,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Invoke setScalarColumnText on each constructor argument.,no,undetermined,0,0,0,no,0.0039225825275347225,no,0.004296073673908026,no,0.004059303217144941,no,0.0038560692245165804
1982,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Collect the select expressions, skip the first child because it is the class name.",no,undetermined,0,0,0,no,0.0038249331510641672,no,0.003372052918447553,no,0.003198625713812856,no,0.00304664539277744
1983,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// return an empty Type array,no,undetermined,0,0,0,no,0.0034992161348155752,no,0.004147711179621679,no,0.0038622188892922247,no,0.00358620843244972
1984,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// We ensure ASYNC semantics (JBCACHE-1175),no,undetermined,0,0,0,no,0.02873540385209537,no,0.014265738399385313,no,0.013788491440491055,no,0.013315942759504314
1985,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if there is no order by, make one",no,undetermined,0,0,0,no,0.00694899378972016,no,0.00206231060132771,no,0.0020192980736145473,no,0.001904768195308513
1986,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Initial load from JBC,no,undetermined,0,0,0,no,0.00023726506298091634,no,0.0003411708776760104,no,0.00029494179605534936,no,0.00026939018503725206
1987,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Find the WHERE; if there is no WHERE, find the FROM...",no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
1988,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Now, inject the newly built ORDER BY into the tree",no,undetermined,0,0,0,no,0.023809283829782858,no,0.014234691245162112,no,0.013780468056441673,no,0.013314159721530126
1989,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// logic operators by definition resolve to boolean.,no,undetermined,0,0,0,no,0.0065621720297434,no,0.004775657702856448,no,0.004550629650676897,no,0.004334520391499612
1990,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Render the identifier select fragment using the table alias.,no,undetermined,0,0,0,no,0.010911508565593723,no,0.005738740138865427,no,0.004799779973233598,no,0.004585380524441436
1991,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Class names in the FROM clause result in a JoinSequence (the old FromParser does this).,no,undetermined,0,0,0,no,0.012750493475947379,no,0.011143919587150544,no,0.011473112095682103,no,0.01111175536836337
1992,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// will still be issued when it used to be null,no,undetermined,0,0,0,no,0.05539398415490459,no,0.014266827668383351,no,0.013753624149031972,no,0.013340029757077114
1993,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Otherwise, use the property mapping.",no,undetermined,0,0,0,no,0.010574351225165588,no,0.008880135055550126,no,0.008771081518071613,no,0.008410316380645776
1994,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// We ensure ASYNC semantics (JBCACHE-1175),no,undetermined,0,0,0,no,0.02873540385209537,no,0.014265738399385313,no,0.013788491440491055,no,0.013315942759504314
1995,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The standard comparator types are not Serializable but are singletons,no,undetermined,0,0,0,no,0.01652376459239247,no,0.014260478353824945,no,0.013775186544118785,no,0.013335248910784895
1996,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ignore!,no,undetermined,0,0,0,no,0.0003489690046840201,no,0.0004791828875098961,no,0.0004737640273004505,no,0.00043449603121796743
1997,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ignore it,no,undetermined,0,0,0,no,0.0003489690046840201,no,0.0004791828875098961,no,0.0004737640273004505,no,0.00043449603121796743
1998,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Generate implicit joins, only if necessary.",no,undetermined,0,0,0,no,0.02295554005609876,no,0.014256138183995898,no,0.013785201861839716,no,0.013325241511649042
1999,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If the property is a special collection property name, return a CollectionPropertyMapping.",no,undetermined,0,0,0,no,0.007646274834056703,no,0.00578070950197687,no,0.00571378609540781,no,0.005482815937122608
2000,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Collection of components.,no,undetermined,0,0,0,no,0.0036729540039112034,no,0.00477226990693153,no,0.004973133313019597,no,0.004789096367079327
2001,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// construct the cache,no,undetermined,0,0,0,no,0.0027121192730118265,no,0.0025632789793049076,no,0.002489653973245548,no,0.002347904401797297
2002,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// local cache, so we use synchronization",no,undetermined,0,0,0,no,0.008030545948089787,no,0.010206835936929472,no,0.009864611614146097,no,0.009503710680714561
2003,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//ie. 60 seconds,no,undetermined,0,0,0,no,0.006371447359833437,no,0.006339747874598909,no,0.006147084709193628,no,0.005866638305362936
2004,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// We need to seed the version value as part of this bulk insert,no,undetermined,0,0,0,no,0.009290635009445328,no,0.011674778665154517,no,0.01100626098681923,no,0.010604979222953196
2005,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// make sure the lhs is ""assignable""...",no,undetermined,0,0,0,no,0.002466830043314772,no,0.0025822868925160017,no,0.0025757679532862647,no,0.0024270419026429096
2006,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// false indicates to not generate parens around the assignment,no,undetermined,0,0,0,no,0.008663502830980871,no,0.007216557516208555,no,0.0068376920384258305,no,0.006549366465518178
2007,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// currently allowed...,no,undetermined,0,0,0,no,0.01726610798090142,no,0.013455351014026786,no,0.0126482222400998,no,0.012214086924030053
2008,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// in non-select queries, the only time we should need to join is if we are in a subquery from clause",no,undetermined,0,0,0,no,0.007267515486910428,no,0.009432779654849302,no,0.008913915808365968,no,0.008598935490253725
2009,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//return classAlias == null ? className : classAlias;,no,undetermined,0,0,0,no,0.005754861769468968,no,0.006632009785178147,no,0.006394848510354293,no,0.006093143943288878
2010,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This is an explicit FROM element.,no,undetermined,0,0,0,no,0.00523135737876937,no,0.005269691986808793,no,0.0047388628542096144,no,0.004519988664115331
2011,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//swaldman 2006-08-28: define c3p0-style configuration parameters for initialPoolSize, which //                     hibernate sensibly lets default to minPoolSize, but we'll let users //                     override it with the c3p0-style property if they want.",no,undetermined,0,0,0,no,0.01571026945611376,no,0.014247555655051003,no,0.013775641438092205,no,0.013326703670482736
2012,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ParameterContainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.008452757423553637,no,0.008644766823342472,no,0.008315256449659856,no,0.007799510052284272
2013,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Fetch can't be used with scroll() or iterate().,no,undetermined,0,0,0,no,0.022346312361331624,no,0.014266087706005296,no,0.013765486991567436,no,0.01334155740575254
2014,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// If it's not implied or it is implied and it's a many to many join where the target wasn't found.,no,undetermined,0,0,0,no,0.004946145117354182,no,0.004272807983070623,no,0.004158226214546129,no,0.003950855516116552
2015,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we need to wrtap the param in a cast(),no,undetermined,0,0,0,no,0.23208232953616792,no,0.1806401413906688,no,0.16727978927217557,no,0.16814740994704205
2016,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Since this is an explicit FROM element, it can't be implied in the FROM clause.",no,undetermined,0,0,0,no,0.006094073492045924,no,0.006030783000540981,no,0.005580309497882404,no,0.005342677857354717
2017,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Do nothing, eplicit from elements are *always* in the projection list.",no,undetermined,0,0,0,no,0.003137489015363895,no,0.003384618815637896,no,0.003236832011039166,no,0.003046289159410189
2018,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// propertyName refers to something like collection.size...,no,undetermined,0,0,0,no,0.021234667176901326,no,0.014247394486364211,no,0.01376615817230218,no,0.013321611909434936
2019,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// property name is a sub-path of a component...,no,undetermined,0,0,0,no,0.005905540203019384,no,0.005839478811947467,no,0.00586879674297657,no,0.005603960790745996
2020,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Always add the collection's query spaces.,no,undetermined,0,0,0,no,0.015254843452120144,no,0.013819929274565768,no,0.0126630516204498,no,0.012336860544949807
2021,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// nothing to do; even if the operand is a parameter, no way we could // infer an appropriate expected type here",no,undetermined,0,0,0,no,0.16446386568352367,no,0.1805675721576677,no,0.16359384513779726,no,0.16792973287782972
2022,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Notify the FROM element that it is being referenced by the select.,no,undetermined,0,0,0,no,0.004501735259824935,no,0.005153372292060897,no,0.005397503007675451,no,0.0051453826987538
2023,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// logic operators by definition resolve to booleans,no,undetermined,0,0,0,no,0.02342967526914686,no,0.014243761993291467,no,0.013768641332476211,no,0.01330884865771766
2024,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// DotNode uses null here...,no,undetermined,0,0,0,no,0.03326127577380307,no,0.014228925183790634,no,0.013763882767601106,no,0.01334182783312355
2025,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// We represent a from-clause alias,no,undetermined,0,0,0,no,0.013048313780888988,no,0.013380383963962485,no,0.012548394706576049,no,0.012189157362351561
2026,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we are the RHS of the DOT representing a naked comp-prop-ref,no,undetermined,0,0,0,no,0.007048057194396136,no,0.009306772307148782,no,0.008827150247409384,no,0.008484759650490009
2027,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we represent a naked (simple) prop-ref,no,undetermined,0,0,0,no,0.0027167464228766572,no,0.004887105240594085,no,0.004532221567579914,no,0.004313507803660256
2028,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// EARLY EXIT!!!  return so the resolve call explicitly coming from DotNode can // resolve this...,no,undetermined,0,0,0,no,0.02682690591387683,no,0.014237516960583386,no,0.013771418104909056,no,0.013345637046813482
2029,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// assume this ident's text does *not* refer to a property on the given persister,no,undetermined,0,0,0,no,0.03732960905025156,no,0.014246537855286734,no,0.013777393130736646,no,0.013317660357208093
2030,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// just ignore it for now, it'll get resolved later...",no,undetermined,0,0,0,no,0.018003308251149923,no,0.014264582004876214,no,0.013783089923795015,no,0.013338749422169734
2031,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// This is not actually a constant, but a reference to FROM element.",no,undetermined,0,0,0,no,0.023317403363256738,no,0.014241154177949826,no,0.013781970066952984,no,0.013341229463039696
2032,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// check to see if our ""propPath"" actually // represents a property on the persister",no,undetermined,0,0,0,no,0.014102990436689522,no,0.008774839284237383,no,0.007582915960846295,no,0.007147760817462425
2033,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// these pieces are needed for usage in select clause,no,undetermined,0,0,0,no,0.0030806627802034527,no,0.002792632330601045,no,0.0026493616216504766,no,0.0024930848971338893
2034,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// assume we do *not* refer to a property on the given persister,no,undetermined,0,0,0,no,0.023875519699787656,no,0.008364123970400136,no,0.008056884321218942,no,0.007695216629419982
2035,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// TRUE if the pool is borrowed from the outside, FALSE if we used to create it",no,undetermined,0,0,0,no,0.016294789853925372,no,0.014268017628491536,no,0.013760665818006458,no,0.013320917630858077
2036,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// assume we do *not* refer to a property on the given persister,no,undetermined,0,0,0,no,0.023875519699787656,no,0.008364123970400136,no,0.008056884321218942,no,0.007695216629419982
2037,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// get a connection from the pool (thru DriverManager, cfr. Proxool doc)",no,undetermined,0,0,0,no,0.005641444216689799,no,0.0049493915752282,no,0.004959735661425668,no,0.00474321443321188
2038,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// set the Transaction Isolation if defined,no,undetermined,0,0,0,no,0.003463508172533663,no,0.0014975492447650268,no,0.0014506802181558061,no,0.001357923627701545
2039,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// naked property-refs cannot be used with an aliased from element,no,undetermined,0,0,0,no,0.01703966526338032,no,0.014262131045065261,no,0.013765187327518075,no,0.013339019924770455
2040,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// do *not* over-write the column text, as that has already been // ""rendered"" during resolve",no,undetermined,0,0,0,no,0.04093386299892158,no,0.014277089453478402,no,0.013773394273471067,no,0.013301088040008574
2041,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Look up class name using the first identifier in the path.,no,undetermined,0,0,0,no,0.0035862345753608833,no,0.003621591006019175,no,0.003444805226979449,no,0.003276949459050724
2042,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// toggle autoCommit to false if set,no,undetermined,0,0,0,no,0.0055558775701436145,no,0.005196887161955709,no,0.005067706870940867,no,0.0048143974079665
2043,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Add to the query spaces.,no,undetermined,0,0,0,no,0.01149723932081652,no,0.013479875133884179,no,0.01235698185524014,no,0.01194934996988962
2044,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// return the connection,no,undetermined,0,0,0,no,0.018533109725941223,no,0.014265423447133871,no,0.01378077975126075,no,0.01334027231763227
2045,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If the from element isn't in the same clause, create a new from element.",no,undetermined,0,0,0,no,0.0056684858484683,no,0.005449165979737622,no,0.005239128311007144,no,0.005012491579225638
2046,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Correlated subqueries create 'special' implied from nodes // because correlated subselects can't use an ANSI-style join,no,undetermined,0,0,0,no,0.0056169349957988,no,0.00592203193139976,no,0.005755792183792235,no,0.005364271599823635
2047,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// super-duper-classic-parser-regression-testing-mojo-magic...,no,undetermined,0,0,0,no,0.03832473249502572,no,0.014260626797673282,no,0.013763052635872979,no,0.013345856246259577
2048,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Get the configurator files (if available),no,undetermined,0,0,0,no,0.004574471628526917,no,0.005223189967903481,no,0.0052440998357377614,no,0.005035328941675903
2049,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// A collection of entities...,no,undetermined,0,0,0,no,0.012345401085783376,no,0.013615264234026212,no,0.013096571986355022,no,0.012805444378639251
2050,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// A collection of components...,no,undetermined,0,0,0,no,0.0036729540039112034,no,0.00477226990693153,no,0.004973133313019597,no,0.004789096367079327
2051,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Default the Proxool alias setting,no,undetermined,0,0,0,no,0.00106749917547438,no,0.001175747077010832,no,0.0010968238709419748,no,0.0010210701755778288
2052,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// A collection of scalar elements...,no,undetermined,0,0,0,no,0.012128494817678491,no,0.007289050538978403,no,0.006859380796080328,no,0.006616154263375644
2053,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Validate that an alias name was provided to determine which pool to use,no,undetermined,0,0,0,no,0.01197306497114074,no,0.014270071093852702,no,0.013599936742451,no,0.013103875466063907
2054,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// We only build caches if *none* were passed in.  Passing in // caches counts as a clear statement of exactly what is wanted,no,undetermined,0,0,0,no,0.017901958098528233,no,0.014254242512879472,no,0.013751007629260336,no,0.0133316389166748
2055,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Validate that an alias name was provided to determine which pool to use,no,undetermined,0,0,0,no,0.01197306497114074,no,0.014270071093852702,no,0.013599936742451,no,0.013103875466063907
2056,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Don't include sub-classes for implied collection joins or subquery joins.,no,undetermined,0,0,0,no,0.004165274600373544,no,0.004264077101602972,no,0.004098281253804212,no,0.003926504657326423
2057,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Treat explict from elements in sub-queries properly.,no,undetermined,0,0,0,no,0.004453564300966864,no,0.007407543882706573,no,0.0072623939644647995,no,0.006954740268963854
2058,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// semantic action handling ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.009411423414734754,no,0.011260453656809815,no,0.010993737956567783,no,0.010682368745244487
2059,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Append the stem to the proxool pool alias,no,undetermined,0,0,0,no,0.008236885051201594,no,0.010111062614845878,no,0.009697152921356124,no,0.009336271267413578
2060,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Configured using the JAXP Configurator,no,undetermined,0,0,0,no,0.012715443710051842,no,0.0100740387744755,no,0.00915065351230998,no,0.00882387808307044
2061,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Append the stem to the proxool pool alias,no,undetermined,0,0,0,no,0.008236885051201594,no,0.010111062614845878,no,0.009697152921356124,no,0.009336271267413578
2062,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Append the stem to the proxool pool alias,no,undetermined,0,0,0,no,0.008236885051201594,no,0.010111062614845878,no,0.009697152921356124,no,0.009336271267413578
2063,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Configured using the Properties File Configurator,no,undetermined,0,0,0,no,0.0123191883644816,no,0.00987740760425859,no,0.009158940256768982,no,0.008870149853939675
2064,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Remember Isolation level,no,undetermined,0,0,0,no,0.015584135746259515,no,0.014257797779777915,no,0.013786670955390764,no,0.013344538696612028
2065,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// If the provider was leeching off an existing pool don't close it,no,undetermined,0,0,0,no,0.0008562061112555948,no,0.0006750138049572282,no,0.0006512659119268488,no,0.0005986866146645299
2066,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// NOTE: Because we're using ASTUtil.createParent(), the tree must be created from the bottom up. // IS EMPTY x => (EXISTS (QUERY (SELECT_FROM (FROM x) ) ) )",no,undetermined,0,0,0,no,0.026299788887546745,no,0.014255014773107944,no,0.013788062277622883,no,0.013343355559142515
2067,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// the ""root from-element"" in correlated subqueries do need this piece",no,undetermined,0,0,0,no,0.02110603119014917,no,0.014244132771469615,no,0.013763464001141782,no,0.013330550537004398
2068,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Create the FROM element for the target (the elements of the collection).,no,undetermined,0,0,0,no,0.0016972331922112751,no,0.0015289103369475093,no,0.0014578854126510727,no,0.001368328971639904
2069,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If the join is implied, then don't include sub-classes on the element.",no,undetermined,0,0,0,no,0.004795595663910121,no,0.004067356761235854,no,0.003931682447149226,no,0.0037404134336488193
2070,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0029192075517518335,no,0.0019428635406165216,no,0.0019258753864740586,no,0.0018095004858472681
2071,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// not really a many-to-one association *necessarily*,no,undetermined,0,0,0,no,0.02446115926059945,no,0.014268717256887149,no,0.01377961754143493,no,0.013316270493738668
2072,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// The associated entity is implied, but it must be included in the FROM. // The collection alias is the role.",no,undetermined,0,0,0,no,0.012209882634443238,no,0.010372481144244163,no,0.009033096263675326,no,0.008753115928178627
2073,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// not really a many-to-one association *necessarily*,no,undetermined,0,0,0,no,0.02446115926059945,no,0.014268717256887149,no,0.01377961754143493,no,0.013316270493738668
2074,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//always overwrite nonversioned data,no,undetermined,0,0,0,no,0.0007731120065458636,no,0.0008092527657433417,no,0.0007790358022842879,no,0.0007211982014601423
2075,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Tag this node as a JOIN. // Don't include subclasses in the join. // This is a clollection join.,no,undetermined,0,0,0,no,0.00855332780098575,no,0.006118592463837822,no,0.0060089903550203825,no,0.005760234765875233
2076,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//public Currency getCurrency(int col) throws HibernateException;,no,undetermined,0,0,0,no,0.020013679683601408,no,0.014245302048631581,no,0.013776199578765067,no,0.0133258396074905
2077,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Get the class name of the associated entity.,no,undetermined,0,0,0,no,0.0030862821289655345,no,0.002559003648085679,no,0.002446140618578504,no,0.002319013231517662
2078,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// default is POJO,no,undetermined,0,0,0,no,0.00031881819291795603,no,0.0003285017699772633,no,0.0003106464722396142,no,0.00028333751659686163
2079,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// use setParameter for null values,no,undetermined,0,0,0,no,0.0024664225571650214,no,0.0019766200843953884,no,0.001943640863645384,no,0.0018277974556559931
2080,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//  origin, path, implied, columns, classAlias,",no,undetermined,0,0,0,no,0.001988052413562164,no,0.005075242544878642,no,0.005075579086859532,no,0.004826926879137375
2081,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*implied*/,no,undetermined,0,0,0,no,0.005008851313979109,no,0.005484143504884689,no,0.005334221366265937,no,0.005072589759126027
2082,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// For implied many-to-many, just add the end join.",no,undetermined,0,0,0,no,0.011608911425769732,no,0.013044590980342097,no,0.012726604334893445,no,0.012291573963934316
2083,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Interceptor returned null, so do the dirtycheck ourself, if possible",no,undetermined,0,0,0,no,0.01071397744355618,no,0.008336407155730604,no,0.008400258208428775,no,0.00807296209601812
2084,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// use setParameter for null values,no,undetermined,0,0,0,no,0.0024664225571650214,no,0.0019766200843953884,no,0.001943640863645384,no,0.0018277974556559931
2085,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Note this!!,no,undetermined,0,0,0,no,0.013224964271193294,no,0.014275533412060025,no,0.01375069115762401,no,0.013306186570586574
2086,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0029192075517518335,no,0.0019428635406165216,no,0.0019258753864740586,no,0.0018095004858472681
2087,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0029192075517518335,no,0.0019428635406165216,no,0.0019258753864740586,no,0.0018095004858472681
2088,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Error message constants.,no,undetermined,0,0,0,no,0.007909761493160751,no,0.008167631693045461,no,0.007876837768601966,no,0.007572995080302785
2089,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the standard SQL function name is current_timestamp...,no,undetermined,0,0,0,no,0.0014147869846137125,no,0.0023462077746822297,no,0.0022792022146928322,no,0.002150871774223832
2090,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//scan for next non-whitespace token,no,undetermined,0,0,0,no,0.0020557039729900547,no,0.0022103877972011916,no,0.0021242838431069764,no,0.0019981558061106875
2091,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This causes the factory to instantiate the desired class.,no,undetermined,0,0,0,no,0.042726047221120035,no,0.014253373175978336,no,0.013751609311538023,no,0.013322615471223615
2092,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//private Type[] sqlResultTypes;,no,undetermined,0,0,0,no,0.008348239416458084,no,0.00825938912592636,no,0.00885284431485188,no,0.008416752743713443
2093,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//private CacheEntry cacheEntry;,no,undetermined,0,0,0,no,0.007581749513131291,no,0.008981641452939924,no,0.008696719943344342,no,0.008383801101725593
2094,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Make 100% certain that this is called before any subsequent ScheduledUpdate.afterTransactionCompletion()!!,no,undetermined,0,0,0,no,0.009663292536328347,no,0.01052831001040182,no,0.010372072797722735,no,0.010018067125962904
2095,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//		TypeFactory.deepCopy( currentState, propTypes, persister.getPropertyUpdateability(), deletedState, session );",no,undetermined,0,0,0,no,0.016834109466850156,no,0.014249072993585386,no,0.013777436429217433,no,0.013334868104910157
2096,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Frontbase has no known variation of a ""SELECT ... FOR UPDATE"" syntax...",no,undetermined,0,0,0,no,0.005932665232821978,no,0.008502441348906757,no,0.008125513070249711,no,0.007796607848118614
2097,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*public Type[] getSqlResultTypes() {
		return sqlResultTypes;
	}*/",no,undetermined,0,0,0,no,0.012000436595550144,no,0.012921723081301028,no,0.012546729680441902,no,0.011930099592943428
2098,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//sqlResultTypeList.addAll( constructorArgumentTypeList );,no,undetermined,0,0,0,no,0.013013827579018368,no,0.013076745728065753,no,0.012593960569295981,no,0.012084526042594829
2099,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//sqlResultTypeList.add( type );,no,undetermined,0,0,0,no,0.00203333129657488,no,0.0022555993471442192,no,0.002704028643309873,no,0.002524997539167971
2100,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Always add the type to the return type list.,no,undetermined,0,0,0,no,0.004828489587257675,no,0.006728277749182223,no,0.007296830149446484,no,0.006882526482810263
2101,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// have the entity entry perform post-update processing, passing it the // update state and the new version (if one).",no,undetermined,0,0,0,no,0.0059191371997841845,no,0.008588176692797286,no,0.008447481596002308,no,0.008174446948855114
2102,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// this entity defines proeprty generation, so process those generated // values...",no,undetermined,0,0,0,no,0.01369404548322397,no,0.007815816819137476,no,0.007337637690469794,no,0.006822813475276099
2103,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// add the fetched entities,no,undetermined,0,0,0,no,0.009848028550550138,no,0.014274153208529062,no,0.013792024041798667,no,0.013351660033985831
2104,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Get ready to start adding nodes.,no,undetermined,0,0,0,no,0.027824607959317828,no,0.014283571670384505,no,0.013781631591682464,no,0.013312691197240987
2105,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//EARLY EXIT!,no,undetermined,0,0,0,no,0.002670991679035732,no,0.002232446739692084,no,0.002188658649593499,no,0.002052037746907664
2106,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*|| oj.getJoinable().consumesCollectionAlias() */,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2107,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// just especially for the trivial collection filter,no,undetermined,0,0,0,no,0.017128925391948352,no,0.01387949380063546,no,0.012311840208215586,no,0.012001386213753813
2108,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// need to look it up from the persistence-context,no,undetermined,0,0,0,no,0.030053950750240067,no,0.014263578525502214,no,0.013780108566129988,no,0.013322007202663386
2109,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//sort first by role name,no,undetermined,0,0,0,no,0.021174387632984914,no,0.0142509806357265,no,0.013774796934286578,no,0.013337970803044654
2110,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// function support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.004439680240226012,no,0.014228555414610674,no,0.013762232915970096,no,0.013345822945650745
2111,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//update last non-whitespace token, if necessary",no,undetermined,0,0,0,no,0.006640596353715727,no,0.009612659617616067,no,0.009195405003567678,no,0.008836403054859223
2112,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//then by fk,no,undetermined,0,0,0,no,0.043847583694847724,no,0.014271856977113558,no,0.013778414023999949,no,0.013344013053330269
2113,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*sqlResultTypeList,*/",no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2114,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// nothing to do		,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2115,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*ArrayList sqlResultTypeList,*/",no,undetermined,0,0,0,no,0.0022645548744581303,no,0.002596198854152765,no,0.0025411887064866598,no,0.00239704445097054
2116,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// nothing to do,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2117,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this method is called when a new non-null collection is persisted // or when an existing (non-null) collection is moved to a new owner,no,undetermined,0,0,0,no,0.027403674982793804,no,0.014266006416461552,no,0.013787257957221329,no,0.01334616731035919
2118,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//notAfterClassTokens.add("","");",no,undetermined,0,0,0,no,0.0022048347179757614,no,0.0016784027429774203,no,0.00224188081618006,no,0.00210688983040643
2119,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//beforeClassTokens.add(""new""); DEFINITELY DON'T HAVE THIS!!",no,undetermined,0,0,0,no,0.009439244305001768,no,0.007131877183552101,no,0.007046842753916384,no,0.006732755825436186
2120,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0032242303260156323,no,0.0034414156021257214,no,0.0050354201063338684,no,0.004772473944519689
2121,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//TODO:,no,undetermined,0,0,0,no,0.01325037645668776,no,0.014260932248424719,no,0.013765265067302008,no,0.013323255765510592
2122,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// remove initial "", """,no,undetermined,0,0,0,no,0.0003872575465074532,no,0.0005927262500288508,no,0.0005282367627656559,no,0.000483459192810248
2123,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Add the type to the list of returned sqlResultTypes.,no,undetermined,0,0,0,no,0.006095478056077306,no,0.006073709040514582,no,0.006073859863720476,no,0.005716407287592942
2124,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Generate the select expression.,no,undetermined,0,0,0,no,0.010135822904992067,no,0.005481032543903358,no,0.00533233131212619,no,0.005114100768690633
2125,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// now update all changed or added rows fks,no,undetermined,0,0,0,no,0.002327217616519033,no,0.00303355223407333,no,0.003004154636330739,no,0.002842717802668023
2126,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//			boolean put = persister.getCache().insert(ck, cacheEntry);",no,undetermined,0,0,0,no,0.0032175018489371556,no,0.003144574202995102,no,0.002961711642986512,no,0.002769018873316681
2127,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// union subclass support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.04421348144644153,no,0.014258663750215478,no,0.013791437200928604,no,0.013328737878189275
2128,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Skip 'DISTINCT' and 'ALL', so we return the first expression node.",no,undetermined,0,0,0,no,0.011521317184757966,no,0.012403301236536088,no,0.01151750552220545,no,0.0111252837934636
2129,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Generate the property select tokens.,no,undetermined,0,0,0,no,0.010010210821671786,no,0.00918234676789313,no,0.008883239876011298,no,0.008522177091613445
2130,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Get the function name node.,no,undetermined,0,0,0,no,0.0023920320733968325,no,0.0034897883690506305,no,0.0033619797929976885,no,0.003207104942463402
2131,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_0,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2132,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// This handles HHH-354, where there is a strange property name in a where clause. // If the lookahead contains a DOT then something that isn't an IDENT...",no,undetermined,0,0,0,no,0.003536099830684442,no,0.00478249325845798,no,0.004696456628981602,no,0.004483911480849371
2133,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Method expressions in a SELECT should always be considered scalar.,no,undetermined,0,0,0,no,0.0036487540395825024,no,0.007572471013094939,no,0.00734720347467906,no,0.007027288510895505
2134,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// areturn // return the value of the field,no,undetermined,0,0,0,no,0.003948174771909288,no,0.004617557063137432,no,0.005933381036439615,no,0.00558958845243832
2135,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//do nothing - we only need to notify the cache...,no,undetermined,0,0,0,no,0.0386929914532222,no,0.014243550474420288,no,0.013758392563782166,no,0.013322306246645252
2136,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//sort first by entity name,no,undetermined,0,0,0,no,0.008193138939429738,no,0.006343208917285528,no,0.0060223398227588825,no,0.005792859017091146
2137,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// If this is 'elements' then create a new FROM element.,no,undetermined,0,0,0,no,0.005265069570780954,no,0.00605602894446749,no,0.0058553966013605635,no,0.0055778986547705914
2138,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//then by id,no,undetermined,0,0,0,no,0.009567634723020843,no,0.0046497597344362165,no,0.00454708473354074,no,0.004321124080657197
2139,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Not elements(x),no,undetermined,0,0,0,no,0.003083320757951637,no,0.0035905038781409476,no,0.0035059168461995206,no,0.0033038684423718464
2140,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Dialect function,no,undetermined,0,0,0,no,0.010445503592896055,no,0.01427127125111216,no,0.013773319265821295,no,0.013342539072139989
2141,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// to be safe...,no,undetermined,0,0,0,no,0.005789386985667553,no,0.004175012494238745,no,0.004314147363515724,no,0.00410536616879085
2142,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Collection 'property function',no,undetermined,0,0,0,no,0.005675614654490565,no,0.005164784094375384,no,0.005112990646929362,no,0.004950605652293144
2143,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If the constant is an IDENT, figure out what it means...",no,undetermined,0,0,0,no,0.02077073147189484,no,0.014272581798897276,no,0.0135034310028587,no,0.01309288412601835
2144,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// no transformations took place, so handle it as we would a // non-instrumented class",no,undetermined,0,0,0,no,0.012808318911594568,no,0.012427007195479378,no,0.01211791898631205,no,0.01179356865717636
2145,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// IDENT is a class alias in the FROM.,no,undetermined,0,0,0,no,0.013758915078184372,no,0.014270760594823902,no,0.013792720188713666,no,0.013325559925177382
2146,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Resolve to an identity column.,no,undetermined,0,0,0,no,0.01261879088876197,no,0.014259233304586356,no,0.013772602422988849,no,0.013331967023038816
2147,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// see if the entry represents a class file,no,undetermined,0,0,0,no,0.0014342174897423025,no,0.0018316858203436656,no,0.001572067873337392,no,0.0014839074166299372
2148,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Otherwise, it's a literal.",no,undetermined,0,0,0,no,0.003964562528712586,no,0.005039771531620465,no,0.0049719056693788575,no,0.0047210097253002304
2149,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the name of an entity class,no,undetermined,0,0,0,no,0.007382772771812495,no,0.005250422287352065,no,0.004976775295690203,no,0.004794169167665469
2150,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// see if the entry represents a class file,no,undetermined,0,0,0,no,0.0014342174897423025,no,0.0018316858203436656,no,0.001572067873337392,no,0.0014839074166299372
2151,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//the class discriminator value,no,undetermined,0,0,0,no,0.0028808920607779494,no,0.0032939846134699487,no,0.0033508978941065963,no,0.0031893034559667553
2152,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Add a space before the display text.,no,undetermined,0,0,0,no,0.001735651819991098,no,0.0020112523044121923,no,0.001981621799244033,no,0.0018620883595023116
2153,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// intentionally empty,no,undetermined,0,0,0,no,0.003644613594131404,no,0.004539019288401649,no,0.004347602997144553,no,0.004115441494444047
2154,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Find or create the WHERE clause,no,undetermined,0,0,0,no,0.004048311724807687,no,0.0042644396629328936,no,0.004121448350328038,no,0.003926474522091722
2155,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// child == parent.getFirstChild(),no,undetermined,0,0,0,no,0.00442214967692438,no,0.003764597237282651,no,0.003554816291906866,no,0.00338271749779923
2156,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// set the name of bulk accessor.,no,undetermined,0,0,0,no,0.002932575457781178,no,0.0031677166652016877,no,0.0030947081076185537,no,0.00290614912476473
2157,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_0,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2158,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_0,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2159,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// invokespecial,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2160,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// return,no,undetermined,0,0,0,no,0.0008662229729892083,no,0.001371836346092846,no,0.0012239512111443373,no,0.0011516724250478332
2161,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Find or create the WHERE clause,no,undetermined,0,0,0,no,0.004048311724807687,no,0.0042644396629328936,no,0.004121448350328038,no,0.003926474522091722
2162,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_1 // load bean,no,undetermined,0,0,0,no,0.009635127718945558,no,0.009998676528435616,no,0.009627305801376695,no,0.009284185587266668
2163,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Filter conditions need to be inserted before the HQL where condition and the // theta join node.  This is because org.hibernate.loader.Loader binds the filter parameters first, // then it binds all the HQL query parameters, see org.hibernate.loader.Loader.processFilterParameters().",no,undetermined,0,0,0,no,0.007515518391692774,no,0.0067293159366104555,no,0.006311834731787487,no,0.006059131179708139
2164,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// checkcast // cast bean,no,undetermined,0,0,0,no,0.02107525501409173,no,0.0142561551244463,no,0.013792839613067195,no,0.013335223831841452
2165,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Put the FILTERS node before the HQL condition and theta joins,no,undetermined,0,0,0,no,0.0049886416240255416,no,0.002365857200375961,no,0.002281337233172267,no,0.0021609203163601813
2166,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// astore_3 // store bean,no,undetermined,0,0,0,no,0.0037875396305952565,no,0.004210156694898226,no,0.004235366933989005,no,0.003997425314741381
2167,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// add the current fragment to the FILTERS node,no,undetermined,0,0,0,no,0.007775960336416292,no,0.005176742575571024,no,0.00465747679256168,no,0.004450733796302577
2168,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Create a new THETA_JOINS node as a parent of all filters,no,undetermined,0,0,0,no,0.0055378375666771075,no,0.005396861806756248,no,0.00511454827852093,no,0.004888501945076978
2169,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_2 // args,no,undetermined,0,0,0,no,0.006635543240326076,no,0.0070599307733128286,no,0.0068332509455077415,no,0.006524162194375866
2170,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Put the THETA_JOINS node before the HQL condition, after the filters.",no,undetermined,0,0,0,no,0.0049886416240255416,no,0.002365857200375961,no,0.002281337233172267,no,0.0021609203163601813
2171,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// First, try to get the persister using the given name directly.",no,undetermined,0,0,0,no,0.030122849235216548,no,0.014243458603554847,no,0.01377495467735431,no,0.013303484261917338
2172,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// iconst_i // continue to aastore // growing stack is 1,no,undetermined,0,0,0,no,0.008900068158377785,no,0.007409564793357835,no,0.007211338306769689,no,0.0069346306720241445
2173,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// unable to locate it using this name,no,undetermined,0,0,0,no,0.0012374319139732597,no,0.0012234223046153313,no,0.0012030564144863635,no,0.0011356395875909647
2174,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If that didn't work, try using the 'import' name.",no,undetermined,0,0,0,no,0.029942452465886202,no,0.014279995248468355,no,0.01378431937114465,no,0.013344170226435971
2175,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Implicit joins use theta style (WHERE pk = fk), explicit joins use JOIN (after from)",no,undetermined,0,0,0,no,0.017337493901873717,no,0.014260197662594364,no,0.013764713450565845,no,0.013347239331929238
2176,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// locate the registered function by the given name,no,undetermined,0,0,0,no,0.004144451371215864,no,0.005228313803808614,no,0.00509877404588964,no,0.004866687649968742
2177,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// determine the type of the first argument...,no,undetermined,0,0,0,no,0.009350301580739176,no,0.010371735012673002,no,0.009481080986272023,no,0.009191252003124945
2178,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_0,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2179,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Use the DOT node to emit the first column name. // Create the column names, folled by the column aliases.",no,undetermined,0,0,0,no,0.009628171218973632,no,0.007299122213316944,no,0.010512517305624856,no,0.010151547451615246
2180,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Append the text of the current node.,no,undetermined,0,0,0,no,0.007930620481264455,no,0.007537394071442464,no,0.0074791453098280135,no,0.007207831108833654
2181,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If the node has a first child, recurse into the first child.",no,undetermined,0,0,0,no,0.0035218679965978014,no,0.004461657920606968,no,0.00420665012610399,no,0.004037893892983784
2182,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// new,no,undetermined,0,0,0,no,0.0007673851418173427,no,0.0010460410572209196,no,0.0010306381472826695,no,0.0009543885276787981
2183,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If there is a second child (RHS), recurse into that child.",no,undetermined,0,0,0,no,0.004240793401125292,no,0.004375478333429684,no,0.00419845037776081,no,0.004015217166302704
2184,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// dup,no,undetermined,0,0,0,no,0.0023813067442933823,no,0.0034630765554825357,no,0.003392165246945921,no,0.0032137619863282594
2185,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_3 // load the raw bean,no,undetermined,0,0,0,no,0.004694487495794795,no,0.005406540008430642,no,0.005217936795437284,no,0.004971910986080429
2186,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// invokeinterface,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2187,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// invokevirtual,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2188,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// invokevirtual,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2189,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aastore // args,no,undetermined,0,0,0,no,0.006635543240326076,no,0.0070599307733128286,no,0.0068332509455077415,no,0.006524162194375866
2190,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// istore_3 // store i,no,undetermined,0,0,0,no,0.0012240055464475608,no,0.001404103621261181,no,0.0013853482241230086,no,0.0012857129268818344
2191,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_1 // load the bean,no,undetermined,0,0,0,no,0.009635127718945558,no,0.009998676528435616,no,0.009627305801376695,no,0.009284185587266668
2192,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* current stack len = 0 */,no,undetermined,0,0,0,no,0.004003558117982005,no,0.0038024130151694925,no,0.0038176439557552747,no,0.003631630802078088
2193,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Iterate through the alias,JoinSequence pairs and generate SQL token nodes.",no,undetermined,0,0,0,no,0.006101060914348235,no,0.006090396706543125,no,0.005612750097195375,no,0.0052651429594615775
2194,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this is used during SqlGenerator processing,no,undetermined,0,0,0,no,0.015490401155661799,no,0.014237108191235548,no,0.01376115168500093,no,0.013344375138833133
2195,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// start region to handling exception (BulkAccessorException),no,undetermined,0,0,0,no,0.007876861761609845,no,0.007874083518060628,no,0.007283402541136713,no,0.006977289801531879
2196,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If there is a FROM fragment and the FROM element is an explicit, then add the from part.",no,undetermined,0,0,0,no,0.014275592414713623,no,0.009367530074095591,no,0.008165854004227582,no,0.007844290279106108
2197,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*&& StringHelper.isNotEmpty( frag )*/,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2198,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// iinc 3, 1",no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2199,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// The FROM fragment will probably begin with ', '.  Remove this if it is present.",no,undetermined,0,0,0,no,0.10646236253028796,no,0.08209255359323733,no,0.013783561518167774,no,0.013312157614741844
2200,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// This uses a PathExpressionParser but notice that compound paths are not valid, // only bare names and simple paths:",no,undetermined,0,0,0,no,0.027555032054896355,no,0.014253752030994044,no,0.013799179058506927,no,0.013333042342595379
2201,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload 4 // load the raw bean,no,undetermined,0,0,0,no,0.004694487495794795,no,0.005406540008430642,no,0.005217936795437284,no,0.004971910986080429
2202,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// SELECT p FROM p IN CLASS eg.Person ORDER BY p.Name, p.Address, p",no,undetermined,0,0,0,no,0.0029194406575698594,no,0.001036568512922105,no,0.000999935922074949,no,0.0009323003723200217
2203,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The reason for this is SQL doesn't let you sort by an expression you are // not returning in the result set.,no,undetermined,0,0,0,no,0.05420683643920949,no,0.01426741188949263,no,0.013781557681715762,no,0.013322702953982064
2204,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// oracle sql-state code for deadlock,no,undetermined,0,0,0,no,0.0034155511091128418,no,0.0038101091845762925,no,0.00371652598950177,no,0.0035738913153311926
2205,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_2 // load the args,no,undetermined,0,0,0,no,0.0056738218618791305,no,0.005862357495646357,no,0.005475683241065061,no,0.005249771392392816
2206,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Otherwise, try to use the no-arg constructor",no,undetermined,0,0,0,no,0.00824588574047883,no,0.008463870366096207,no,0.008260200236710362,no,0.007928877098790598
2207,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// iconst_i,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2208,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// eat it and try next,no,undetermined,0,0,0,no,0.001437990173336355,no,0.0013559517419161938,no,0.0013463723488036886,no,0.00125542825204733
2209,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aaload,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2210,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// checkcast,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2211,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//default mode,no,undetermined,0,0,0,no,0.004512246391801949,no,0.0044928920449137655,no,0.004280192128825942,no,0.004071178621275529
2212,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// checkcast (case of reference type),no,undetermined,0,0,0,no,0.018441153991867673,no,0.014262204160472969,no,0.012918413085318482,no,0.012241279686137425
2213,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* current stack len = 2 */,no,undetermined,0,0,0,no,0.004003558117982005,no,0.0038024130151694925,no,0.0038176439557552747,no,0.003631630802078088
2214,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// at some point the processing went bad, so we need to: //      1) make sure the connection handle gets released //      2) try to cleanup the JTA context as much as possible",no,undetermined,0,0,0,no,0.19354679292012641,no,0.1797689701542207,no,0.1723491512488146,no,0.1750643497952584
2215,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// end region to handling exception (BulkAccessorException),no,undetermined,0,0,0,no,0.019135114428514052,no,0.014250910898157132,no,0.013780147905966905,no,0.013332576864064105
2216,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// register in exception table,no,undetermined,0,0,0,no,0.0021611128984828747,no,0.003659720142156377,no,0.0034963849983953355,no,0.0033131202023138013
2217,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Private constructor - stops checkstyle from complaining.,no,undetermined,0,0,0,no,0.002896392613577312,no,0.0036468332325262478,no,0.0035588841435598333,no,0.0033642290828730134
2218,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//reset the dotcount (but not the path) //after reset!,no,undetermined,0,0,0,no,0.005069481012659941,no,0.0031330287607606406,no,0.00317254832280858,no,0.0029969526612633776
2219,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_0,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2220,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//after reset!,no,undetermined,0,0,0,no,0.006004609030326683,no,0.0028564763154956554,no,0.002885893611189132,no,0.002721642307556879
2221,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Following methods we don't delegate since they have so little logic // it's clearer to just implement them here,no,undetermined,0,0,0,no,0.16668973341359927,no,0.1617937081530177,no,0.14982253716486274,no,0.1518613383309866
2222,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_0,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2223,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// return,no,undetermined,0,0,0,no,0.0008662229729892083,no,0.001371836346092846,no,0.0012239512111443373,no,0.0011516724250478332
2224,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// return,no,undetermined,0,0,0,no,0.0008662229729892083,no,0.001371836346092846,no,0.0012239512111443373,no,0.0011516724250478332
2225,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// invokevirtual,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2226,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// checkcast,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2227,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// dotcount>=2,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2228,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* local variables | target obj | each oldvalue | */,no,undetermined,0,0,0,no,0.003955983229744436,no,0.004445540922380519,no,0.004352860640526498,no,0.003443368512517939
2229,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// astore 5 // store exception,no,undetermined,0,0,0,no,0.0008886848517577191,no,0.0015902461864611443,no,0.0015518496330268312,no,0.0014434020104782282
2230,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload 5 // load exception,no,undetermined,0,0,0,no,0.0019316589266329676,no,0.003438021989780041,no,0.0031742095090246036,no,0.003017495125370882
2231,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* | this | bean | args | raw bean | */,no,undetermined,0,0,0,no,0.007927683988008959,no,0.008704229883887662,no,0.008698450965103518,no,0.008306536222133834
2232,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// iload_3 // i,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2233,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Do the corresponding RHS,no,undetermined,0,0,0,no,0.002063567917290656,no,0.0015810460919509323,no,0.0015848114301379064,no,0.0014832073240520695
2234,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// invokespecial // BulkAccessorException.<init>,no,undetermined,0,0,0,no,0.0025872082268258286,no,0.0028236180528607106,no,0.002735657305824454,no,0.0025780966196310316
2235,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// athrow,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2236,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// WARNING: classfile only,no,undetermined,0,0,0,no,0.0007347205430558385,no,0.00040273776548813725,no,0.00039096177945991436,no,0.0003565818198225944
2237,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if its ""id""",no,undetermined,0,0,0,no,0.009567634723020843,no,0.0046497597344362165,no,0.00454708473354074,no,0.004321124080657197
2238,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//swallow,no,undetermined,0,0,0,no,0.0024798120461626723,no,0.0027233742929533384,no,0.002625273502869817,no,0.002472777345398093
2239,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//or its the id property name,no,undetermined,0,0,0,no,0.03648651137127103,no,0.014268768457887496,no,0.013786424331745333,no,0.013342293129235544
2240,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//join = q.createJoinFragment(useThetaStyleJoin);,no,undetermined,0,0,0,no,0.011058790355609914,no,0.007361533215569272,no,0.00733510285881577,no,0.0070322263672484755
2241,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* local variable | this | */,no,undetermined,0,0,0,no,0.004384406212984649,no,0.00696133960336895,no,0.0067001743715610134,no,0.006407027215013233
2242,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//important!!,no,undetermined,0,0,0,no,0.009570041411943968,no,0.009976530129300372,no,0.009733180759366612,no,0.009403197579084628
2243,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// an association,no,undetermined,0,0,0,no,0.003079656562554944,no,0.0032783414647267867,no,0.003213273843439885,no,0.0030273270334517737
2244,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_0 // load this,no,undetermined,0,0,0,no,0.004054981867133717,no,0.00420599456491075,no,0.003761169908324225,no,0.0036029667285682877
2245,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//allow index() function:,no,undetermined,0,0,0,no,0.00644842883912348,no,0.012773509093952655,no,0.012492321070846964,no,0.01212037789382974
2246,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_0 // load this,no,undetermined,0,0,0,no,0.004054981867133717,no,0.00420599456491075,no,0.003761169908324225,no,0.0036029667285682877
2247,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_1 // load callback,no,undetermined,0,0,0,no,0.004756393867368433,no,0.004317184449508099,no,0.004119713504046158,no,0.004018592967920184
2248,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// case of non-static field,no,undetermined,0,0,0,no,0.015655357680860304,no,0.014243207825993748,no,0.013780406441769234,no,0.013336045291041715
2249,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// log a message about potential connection leaks,no,undetermined,0,0,0,no,0.030010545493536454,no,0.01425180647402955,no,0.01377965449460415,no,0.013317032851806701
2250,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// getfield // get each field,no,undetermined,0,0,0,no,0.010913038825884585,no,0.012053274769191564,no,0.011355705697712364,no,0.01102015600968664
2251,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// invokeinterface // invoke Enabled.getInterceptFieldCallback(),no,undetermined,0,0,0,no,0.0031358821224662264,no,0.0035301173245501885,no,0.0034265895790406673,no,0.003234086034714135
2252,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ifnonnull,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2253,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// *return // each type,no,undetermined,0,0,0,no,0.0029376918824904996,no,0.004297311118604974,no,0.004314134843099766,no,0.004021388106447886
2254,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// *return // each type,no,undetermined,0,0,0,no,0.0029376918824904996,no,0.004297311118604974,no,0.004314134843099766,no,0.004021388106447886
2255,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// *store_1 // each type,no,undetermined,0,0,0,no,0.0029636300132296067,no,0.003804606557003347,no,0.005227040539170582,no,0.005029126633100952
2256,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//many-to-many,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2257,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ldc // name of the field,no,undetermined,0,0,0,no,0.010913038825884585,no,0.012053274769191564,no,0.011355705697712364,no,0.01102015600968664
2258,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//opening paren in new Foo ( ... ),no,undetermined,0,0,0,no,0.002619120878954027,no,0.003193435896809678,no,0.0031295697287768553,no,0.002961588464361781
2259,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if we are inside a new Result(), but not inside a nested function",no,undetermined,0,0,0,no,0.007269133107827365,no,0.014233811155909906,no,0.013755974978635309,no,0.01335029815339
2260,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// invokeinterface // invoke Callback.read*() // each type,no,undetermined,0,0,0,no,0.002771244751883659,no,0.0020305109894249627,no,0.0020015621508389964,no,0.0018893258658350298
2261,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//special case,no,undetermined,0,0,0,no,0.003263080142230316,no,0.003236790701474481,no,0.003034910945566717,no,0.0028697517976291847
2262,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the name of an SQL function,no,undetermined,0,0,0,no,0.0026362633778089614,no,0.004477460134253779,no,0.004376356118317649,no,0.004183437504391465
2263,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//this is basically a copy/paste of OrderByParser ... might be worth refactoring,no,undetermined,0,0,0,no,0.3384760306868309,no,0.31527298090694555,no,0.30693795276639096,no,0.3123388719877532
2264,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// SELECT p FROM p IN CLASS eg.Person GROUP BY p.Name, p.Address, p",no,undetermined,0,0,0,no,0.003226540255431427,no,0.0018139491111634914,no,0.0017383525249742556,no,0.00163384525931869
2265,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// return aliases not supported in classic translator!,no,undetermined,0,0,0,no,0.00838589735113571,no,0.008797912012508744,no,0.013755164757394602,no,0.013331702685700086
2266,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// int,no,undetermined,0,0,0,no,0.00218528648241836,no,0.0024214870789092914,no,0.00237714898125395,no,0.002228724034688944
2267,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//register collection role,no,undetermined,0,0,0,no,0.015494283695057426,no,0.01369338535903673,no,0.011439353103480576,no,0.011115078878025764
2268,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// just do the regular thing if you can't find the ctor // Your AST must have default ctor to use this.,no,undetermined,0,0,0,no,0.006137003754208979,no,0.009190973022099681,no,0.008942088504220673,no,0.008678663017552116
2269,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// return,no,undetermined,0,0,0,no,0.0008662229729892083,no,0.001371836346092846,no,0.0012239512111443373,no,0.0011516724250478332
2270,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// The keyword used to specify an identity column, if identity column key generation is supported.",no,undetermined,0,0,0,no,0.00424665880680546,no,0.00902210477299921,no,0.008848352584584638,no,0.00850299826302949
2271,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//.getElementPropertyMapping();,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2272,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// dup,no,undetermined,0,0,0,no,0.0023813067442933823,no,0.0034630765554825357,no,0.003392165246945921,no,0.0032137619863282594
2273,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//following doesn't handle (null, not null) but unnecessary //since this would mean all rows",no,undetermined,0,0,0,no,0.02903711106311752,no,0.014257727286105134,no,0.01377243689018237,no,0.013349690379371629
2274,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// checkcast,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2275,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// checkcast,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2276,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//crossJoins.add(name);,no,undetermined,0,0,0,no,0.0022048347179757614,no,0.0016784027429774203,no,0.00224188081618006,no,0.00210688983040643
2277,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//ie no select clause in HQL,no,undetermined,0,0,0,no,0.004011720514833435,no,0.0013769292216958624,no,0.0013562925576935374,no,0.0012708847860971784
2278,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// invokeinterface // enabled.getInterceptFieldCallback(),no,undetermined,0,0,0,no,0.002990777349928088,no,0.004623206100791565,no,0.004465772359028506,no,0.004221665374389964
2279,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// invokeinterface // enabled.getInterceptFieldCallback(),no,undetermined,0,0,0,no,0.002990777349928088,no,0.004623206100791565,no,0.004465772359028506,no,0.004221665374389964
2280,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ifnonnull (label1),no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2281,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we are the LHS of the DOT representing a naked comp-prop-ref,no,undetermined,0,0,0,no,0.005154890988619797,no,0.007596143938449432,no,0.007301761267303765,no,0.006987652745777095
2282,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// *load_1,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2283,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// *load_1,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2284,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//ie. no select clause,no,undetermined,0,0,0,no,0.0041026446905214195,no,0.0030119510544414693,no,0.0029134833902413233,no,0.0027602654266597956
2285,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// putfield,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2286,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//there _was_ a select clause,no,undetermined,0,0,0,no,0.0041026446905214195,no,0.0030119510544414693,no,0.0029134833902413233,no,0.0027602654266597956
2287,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// return ;,no,undetermined,0,0,0,no,0.0008662229729892083,no,0.001371836346092846,no,0.0012239512111443373,no,0.0011516724250478332
2288,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ldc // field name,no,undetermined,0,0,0,no,0.010913038825884585,no,0.012053274769191564,no,0.011355705697712364,no,0.01102015600968664
2289,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// getfield // old value of the field,no,undetermined,0,0,0,no,0.0069312460591359265,no,0.0069766231035391325,no,0.006666627751429528,no,0.006326785056039389
2290,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// reference type,no,undetermined,0,0,0,no,0.014543626025019567,no,0.012422209214962975,no,0.012314473913469478,no,0.011664186132623265
2291,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// return the concrete type, or the underlying type if a concrete type // was not specified",no,undetermined,0,0,0,no,0.009131010177316396,no,0.01000525928553302,no,0.009926654149384439,no,0.006796586255200524
2292,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//many-to-many,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2293,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// reference type,no,undetermined,0,0,0,no,0.014543626025019567,no,0.012422209214962975,no,0.012314473913469478,no,0.011664186132623265
2294,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// not array,no,undetermined,0,0,0,no,0.0017851772986628195,no,0.0020329532119774873,no,0.0017740356180652797,no,0.001659025438167855
2295,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// array of reference type,no,undetermined,0,0,0,no,0.01315847392571899,no,0.011016348454767391,no,0.010075165642849056,no,0.009524867751943606
2296,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//q.addCollection(collectionName, collectionRole);",no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2297,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// boolean,no,undetermined,0,0,0,no,2.222115148554332e-05,no,3.435118659489354e-05,no,3.250597713632699e-05,no,2.8795171214693185e-05
2298,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// char,no,undetermined,0,0,0,no,0.0003472994132181625,no,0.0003242385416920476,no,0.00032227814208079435,no,0.00029240117773161347
2299,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// short,no,undetermined,0,0,0,no,0.0021046455803364963,no,0.014231700163144272,no,0.013788632440336812,no,0.013340322821777268
2300,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// classic parser does not support bulk manipulation statements,no,undetermined,0,0,0,no,0.013513200401697924,no,0.01427239254409348,no,0.013791702861020447,no,0.013333553320396959
2301,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// double,no,undetermined,0,0,0,no,0.0020932630681788837,no,0.0021364315186175532,no,0.0025052310733429937,no,0.0023587778413049474
2302,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_0,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2303,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// float,no,undetermined,0,0,0,no,0.0031465513892825147,no,0.0025090508648926628,no,0.0024314534968143137,no,0.002296150130638257
2304,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// float,no,undetermined,0,0,0,no,0.0031465513892825147,no,0.0025090508648926628,no,0.0024314534968143137,no,0.002296150130638257
2305,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This is called when it's time to fully resolve a path expression.,no,undetermined,0,0,0,no,0.05859812841584755,no,0.014247983436740016,no,0.013794351980234675,no,0.013343280148524084
2306,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// long,no,undetermined,0,0,0,no,0.012638048304131058,no,0.014248853768082867,no,0.01378003659403297,no,0.013343982008787399
2307,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// can't cache this stuff either (per-invocation),no,undetermined,0,0,0,no,0.006676522164139666,no,0.0076516026997029175,no,0.007315918257831788,no,0.007027377252870376
2308,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This is the legacy behaviour for HQL queries...,no,undetermined,0,0,0,no,0.00259071179060887,no,0.0024869074105155625,no,0.002482039200500772,no,0.002351913754642304
2309,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// long,no,undetermined,0,0,0,no,0.012638048304131058,no,0.014248853768082867,no,0.01378003659403297,no,0.013343982008787399
2310,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// bad type,no,undetermined,0,0,0,no,0.029759397021302522,no,0.014237787430715597,no,0.013763196198442077,no,0.013322821178360257
2311,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// bad type,no,undetermined,0,0,0,no,0.029759397021302522,no,0.014237787430715597,no,0.013763196198442077,no,0.013322821178360257
2312,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// not known!,no,undetermined,0,0,0,no,0.0025705479812303126,no,0.002425171355658591,no,0.002286987490182113,no,0.0021523026560796668
2313,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// boolean, byte, char, int, short",no,undetermined,0,0,0,no,0.00040908555013059077,no,0.0013118461480665048,no,0.0012721248565550527,no,0.0011853034797472222
2314,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// not known!,no,undetermined,0,0,0,no,0.0025705479812303126,no,0.002425171355658591,no,0.002286987490182113,no,0.0021523026560796668
2315,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// boolean, byte, char, int, short",no,undetermined,0,0,0,no,0.00040908555013059077,no,0.0013118461480665048,no,0.0012721248565550527,no,0.0011853034797472222
2316,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// not known!,no,undetermined,0,0,0,no,0.0025705479812303126,no,0.002425171355658591,no,0.002286987490182113,no,0.0021523026560796668
2317,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// reference type,no,undetermined,0,0,0,no,0.014543626025019567,no,0.012422209214962975,no,0.012314473913469478,no,0.011664186132623265
2318,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// not known!,no,undetermined,0,0,0,no,0.0025705479812303126,no,0.002425171355658591,no,0.002286987490182113,no,0.0021523026560796668
2319,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//Need this, since join condition can appear inside parens!",no,undetermined,0,0,0,no,0.05369309214221785,no,0.014254618641049065,no,0.01376855140442352,no,0.013306305342636049
2320,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// double,no,undetermined,0,0,0,no,0.0020932630681788837,no,0.0021364315186175532,no,0.0025052310733429937,no,0.0023587778413049474
2321,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// float,no,undetermined,0,0,0,no,0.0031465513892825147,no,0.0025090508648926628,no,0.0024314534968143137,no,0.002296150130638257
2322,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// float,no,undetermined,0,0,0,no,0.0031465513892825147,no,0.0025090508648926628,no,0.0024314534968143137,no,0.002296150130638257
2323,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// bad type,no,undetermined,0,0,0,no,0.029759397021302522,no,0.014237787430715597,no,0.013763196198442077,no,0.013322821178360257
2324,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// bad type,no,undetermined,0,0,0,no,0.029759397021302522,no,0.014237787430715597,no,0.013763196198442077,no,0.013322821178360257
2325,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// boolean, byte, char, int, short",no,undetermined,0,0,0,no,0.00040908555013059077,no,0.0013118461480665048,no,0.0012721248565550527,no,0.0011853034797472222
2326,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//expressionOpeners.add("",""); // deliberately excluded",no,undetermined,0,0,0,no,0.003461001072699295,no,0.0034653762655894025,no,0.0033942347101016805,no,0.003209710977283024
2327,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// skip finalize methods,no,undetermined,0,0,0,no,0.003706973652254116,no,0.0014013820974932388,no,0.0013343133595291464,no,0.0012448706760759183
2328,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Mainly for OSCache,no,undetermined,0,0,0,no,0.005799886851422431,no,0.005447294723031117,no,0.005032034370560504,no,0.004779188602466306
2329,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//decrement the lock,no,undetermined,0,0,0,no,0.0018422485416065319,no,0.0013532509628254206,no,0.0017710813546331391,no,0.001654806205464087
2330,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//recache the updated state,no,undetermined,0,0,0,no,0.0028449596161010354,no,0.002919519864900842,no,0.002833327326421339,no,0.002678009336920589
2331,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// noop,no,undetermined,0,0,0,no,0.0013887119538176895,no,0.0012179917014926022,no,0.0011950542681773133,no,0.0011139298342017806
2332,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//null clientLock is remotely possible but will never happen in practice,no,undetermined,0,0,0,no,0.004422357961187158,no,0.005400164635301796,no,0.005416625345530887,no,0.005180065392970689
2333,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//by requiring <, we rely on lock timeout in the case of an unsuccessful update!",no,undetermined,0,0,0,no,0.0060008126667261815,no,0.006323121399665287,no,0.007175097171535516,no,0.0068551728209255
2334,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// the user provided resulttransformer, not the one used with ""select new"". Here to avoid mangling // transformed/non-transformed results.",no,undetermined,0,0,0,no,0.01089571909184405,no,0.012124585452793237,no,0.011540561953583921,no,0.01119967958298205
2335,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// disassemble positional parameters,no,undetermined,0,0,0,no,0.0044547121258762265,no,0.0034190774418067322,no,0.0032018347149338853,no,0.003028615808813288
2336,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//ie. 60 seconds,no,undetermined,0,0,0,no,0.006371447359833437,no,0.006339747874598909,no,0.006147084709193628,no,0.005866638305362936
2337,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// noop,no,undetermined,0,0,0,no,0.0013887119538176895,no,0.0012179917014926022,no,0.0011950542681773133,no,0.0011139298342017806
2338,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// otherwise, a trim-specification and/or a trim-character // have been specified;  we need to decide which options // are present and ""do the right thing"" // should leading trim-characters be trimmed? // should trailing trim-characters be trimmed? // the trim-character (what is to be trimmed off?) // the trim-source (from where should it be trimmed?)",no,undetermined,0,0,0,no,0.00791552725819867,no,0.027331171368025507,no,0.025958351213289727,no,0.025599354937997046
2339,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//noop,no,undetermined,0,0,0,no,0.0013887119538176895,no,0.0012179917014926022,no,0.0011950542681773133,no,0.0011139298342017806
2340,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//noop,no,undetermined,0,0,0,no,0.0013887119538176895,no,0.0012179917014926022,no,0.0011950542681773133,no,0.0011139298342017806
2341,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this is called from SettingsFactory irregardless; trivial to simply disregard,no,undetermined,0,0,0,no,0.008621993826735704,no,0.014252303684826675,no,0.013789786834003984,no,0.013347611861462199
2342,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Do nothing; subclasses may override.,no,undetermined,0,0,0,no,0.002900192718399042,no,0.0031243843426356274,no,0.003030497997712505,no,0.0028612282464916265
2343,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Do nothing; subclasses may override.,no,undetermined,0,0,0,no,0.002900192718399042,no,0.0031243843426356274,no,0.003030497997712505,no,0.0028612282464916265
2344,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// TABLE,no,undetermined,0,0,0,no,0.0014145358968487873,no,0.0020391184049764746,no,0.0019076526326845232,no,0.001795579701972488
2345,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Inside a BETWEEN ... AND ... expression,no,undetermined,0,0,0,no,0.00816214001925494,no,0.013552488504906023,no,0.01296108659130957,no,0.012628997257965452
2346,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//were an odd or even number of NOTs encountered //the join string built up by compound paths inside this expression //a flag indicating if the subexpression is known to be boolean,no,undetermined,0,0,0,no,0.010086097448937395,no,0.008458428277744973,no,0.00819476623800808,no,0.007925780409045702
2347,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//ie. a many-to-many,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2348,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//Cope with [,]",no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2349,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Cope with a continued path expression (ie. ].baz),no,undetermined,0,0,0,no,0.008240571159766352,no,0.008190197926804397,no,0.007963035267069757,no,0.007674955618113982
2350,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//NOTE: early return,no,undetermined,0,0,0,no,0.010401580184387589,no,0.009116617074657288,no,0.008842948847518557,no,0.008354827174049081
2351,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Cope with a subselect,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2352,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// use the id value of a newly instantiated instance as the unsaved-value,no,undetermined,0,0,0,no,0.01101441068401605,no,0.0048841468953990455,no,0.004437171806404944,no,0.004295614562614475
2353,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Close extra brackets we opened,no,undetermined,0,0,0,no,0.0013550668421522963,no,0.0008276213926087494,no,0.0008021035080081557,no,0.0007410929028889541
2354,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//take note when this is a boolean expression,no,undetermined,0,0,0,no,0.00441480809841044,no,0.004863148544296298,no,0.004701506194875504,no,0.00448161201493692
2355,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//persister.setIdentifier(result, id); //before calling interceptor, for consistency with normal load",no,undetermined,0,0,0,no,0.023935004120191235,no,0.007414593942642745,no,0.0069702871297367295,no,0.006619402998262075
2356,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// no-op; CCS did not have such a concept,no,undetermined,0,0,0,no,0.0004223499080353509,no,0.00046807074927213745,no,0.0004165492251313986,no,0.00037272466587105974
2357,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// JoinProcessor needs to know if the where clause fragment came from a dynamic filter or not so it // can put the where clause fragment in the right place in the SQL AST.   'hasFilterCondition' keeps track // of that fact.,no,undetermined,0,0,0,no,0.07846417208105769,no,0.014272519405430322,no,0.013775919715083882,no,0.0133278184337507
2358,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// no-op; CCS did not have such a concept,no,undetermined,0,0,0,no,0.0004223499080353509,no,0.00046807074927213745,no,0.0004165492251313986,no,0.00037272466587105974
2359,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// assumes that types are all of span 1,no,undetermined,0,0,0,no,0.0010422541547859354,no,0.0009036629630779073,no,0.0010853998460309516,no,0.0010127586984184696
2360,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// again, CCS did not have such a concept; however a reasonable // proximity is to clear the cache.  For non-transaction aware // caches, we will also do a clear at the end of the transaction",no,undetermined,0,0,0,no,0.009320994590011743,no,0.005369762425680914,no,0.005123889527014337,no,0.004908663472812494
2361,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//process a token, mapping OO path expressions to SQL expressions",no,undetermined,0,0,0,no,0.004793193768980482,no,0.011218706866637887,no,0.010806177751923034,no,0.010217520630586197
2362,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Open any extra brackets we might need.,no,undetermined,0,0,0,no,0.04112925278298639,no,0.014258578585790892,no,0.013770732876286827,no,0.013333087429215098
2363,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//Cope with special cases of AND, NOT, )",no,undetermined,0,0,0,no,0.005056920351603717,no,0.005292816661427807,no,0.005070367320395201,no,0.004849270157638646
2364,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the next one up must also be,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2365,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Add any joins,no,undetermined,0,0,0,no,0.0022048347179757614,no,0.0016784027429774203,no,0.00224188081618006,no,0.00210688983040643
2366,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//named query parameter,no,undetermined,0,0,0,no,0.022410220958271027,no,0.014229535169701792,no,0.012118386105005765,no,0.011748671572767601
2367,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// get meta's from <hibernate-mapping>,no,undetermined,0,0,0,no,0.005311837738006141,no,0.012404179372866012,no,0.011955012398326172,no,0.011583537402715024
2368,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// get meta's from <class>,no,undetermined,0,0,0,no,0.00832239392888753,no,0.007600940933998699,no,0.00730194605886594,no,0.007031413556422068
2369,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//path expression,no,undetermined,0,0,0,no,0.008240571159766352,no,0.008190197926804397,no,0.007963035267069757,no,0.007674955618113982
2370,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// DB-OBJECTNAME,no,undetermined,0,0,0,no,0.0006487707184094839,no,0.0005771035170317931,no,0.0005693041600425414,no,0.0005248838089139676
2371,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// just decrement the lock, don't recache // (we don't know which transaction won)",no,undetermined,0,0,0,no,0.06036426212655387,no,0.014251174479216725,no,0.013764566297978202,no,0.013328051181154828
2372,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// saves / updates don't cascade to uninitialized collections,no,undetermined,0,0,0,no,0.0062986518484693015,no,0.005870574244926873,no,0.005789655717313352,no,0.005623548940074049
2373,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// MUTABLE,no,undetermined,0,0,0,no,0.0030648985674610013,no,0.003320193849805525,no,0.0031856808446419165,no,0.0030113230579595397
2374,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// A container for collections we load up when the owning entity is not // yet loaded ... for now, this is purely transient!",no,undetermined,0,0,0,no,0.020394405211000256,no,0.00932747831552285,no,0.008185102428102085,no,0.007975677609769194
2375,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// WHERE,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2376,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// CHECK,no,undetermined,0,0,0,no,0.002366121453952985,no,0.0031112760514768875,no,0.00016522256877326487,no,0.000149585977923239
2377,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// POLYMORPHISM,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2378,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// properties that we have tried to load, and not found in the database",no,undetermined,0,0,0,no,0.014791883630348786,no,0.012703322451728529,no,0.013754576764276107,no,0.013337241748005995
2379,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// TODO:,no,undetermined,0,0,0,no,0.01325037645668776,no,0.014260932248424719,no,0.013765265067302008,no,0.013323255765510592
2380,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// persists don't cascade to uninitialized collections,no,undetermined,0,0,0,no,0.010843573204206683,no,0.010781737117143033,no,0.010475229859436299,no,0.010140234721400179
2381,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//anything else,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2382,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the path expression continues after a ],no,undetermined,0,0,0,no,0.008240571159766352,no,0.008190197926804397,no,0.007963035267069757,no,0.007674955618113982
2383,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// careful with this!,no,undetermined,0,0,0,no,0.003495603012480044,no,0.0009857953136296037,no,0.000965721516205162,no,0.0008983021793918177
2384,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the path expression ends at the ],no,undetermined,0,0,0,no,0.018124320142102666,no,0.014258872009524092,no,0.013767875272518644,no,0.013333586370408821
2385,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// ""finish off"" the join",no,undetermined,0,0,0,no,0.010177685952691595,no,0.007829686954072402,no,0.007654899238964996,no,0.007323264713180167
2386,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//NOTICE: no "" or . since they are part of (compound) identifiers",no,undetermined,0,0,0,no,0.014706605169226583,no,0.013307803730555281,no,0.012562687113858747,no,0.012098174222646845
2387,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//cannot instantiate,no,undetermined,0,0,0,no,0.0026683752794155165,no,0.003725999784307066,no,0.0037828889532845627,no,0.0035828305956747395
2388,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// start by looking for HQL keywords...,no,undetermined,0,0,0,no,0.0008195012549574461,no,0.0003878252772500898,no,0.0003829596428955579,no,0.00035011862174594185
2389,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// inner joins can be abbreviated to 'join',no,undetermined,0,0,0,no,0.003738139026815036,no,0.002876194240242609,no,0.002829793380380045,no,0.002680398015391893
2390,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// 'outer' is optional and is ignored,no,undetermined,0,0,0,no,0.000296485581116489,no,0.00034594156100807653,no,0.0002738831649802136,no,0.00024818146890574294
2391,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// now anything that is not a HQL keyword,no,undetermined,0,0,0,no,0.0025778061512179685,no,0.001076358064116888,no,0.0010755824141167594,no,0.0009996619643070294
2392,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// process the ""old"" HQL style where aliases appear _first_ // ie. using the IN or IN CLASS constructions",no,undetermined,0,0,0,no,0.008057784903120603,no,0.00467459956286979,no,0.007204526010797496,no,0.006731669023934274
2393,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// treat it as a classname,no,undetermined,0,0,0,no,0.007496971474375601,no,0.006593182489774585,no,0.006450517714470417,no,0.006153511413059564
2394,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// treat it as a path expression,no,undetermined,0,0,0,no,0.015339357439394354,no,0.0124064111644961,no,0.012060249214373887,no,0.011676956822171824
2395,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// starts with a path expression (new style),no,undetermined,0,0,0,no,0.0068361262010446485,no,0.011849643271770145,no,0.01139778793897149,no,0.011004273790401213
2396,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ID,no,undetermined,0,0,0,no,0.009567634723020843,no,0.0046497597344362165,no,0.00454708473354074,no,0.004321124080657197
2397,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//allow ODMG OQL style: from Person p, p.cars c",no,undetermined,0,0,0,no,0.005680409533970002,no,0.010142844023172462,no,0.009781801478379397,no,0.009401882627602134
2398,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//handle quoted strings,no,undetermined,0,0,0,no,0.019571401856501233,no,0.014233834736560858,no,0.013778244122343812,no,0.01331411796358699
2399,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// VERSION / TIMESTAMP,no,undetermined,0,0,0,no,0.003259217926774474,no,0.00532828179400266,no,0.005130441223987908,no,0.004886797749237629
2400,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// DISCRIMINATOR,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2401,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Primary key constraint,no,undetermined,0,0,0,no,0.0062604377077076084,no,0.005196211820726527,no,0.004952642756471178,no,0.004717142200818877
2402,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// this is either a <version/> tag with no type attribute, // or a <timestamp/> tag",no,undetermined,0,0,0,no,0.004244179957926018,no,0.005802230417719813,no,0.005541989803278661,no,0.005257301095733559
2403,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Object insertions, updates, and deletions have list semantics because // they must happen in the right order so as to respect referential // integrity",no,undetermined,0,0,0,no,0.03577391495408056,no,0.014273259187355166,no,0.013770398258321506,no,0.013328529986521056
2404,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// ""finish off"" the join",no,undetermined,0,0,0,no,0.010177685952691595,no,0.007829686954072402,no,0.007654899238964996,no,0.007323264713180167
2405,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//ignore whitespace,no,undetermined,0,0,0,no,0.0010596367485967834,no,0.0011183438528738767,no,0.0010884156502644923,no,0.001009704231077639
2406,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//do replacements,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2407,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//handle HQL2 collection syntax,no,undetermined,0,0,0,no,0.012129879762980522,no,0.010993450273432853,no,0.010792690031117559,no,0.010528713223065042
2408,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// uuid.hex is deprecated,no,undetermined,0,0,0,no,0.03410091602001913,no,0.014258585149303315,no,0.013771274171099886,no,0.01330689396731213
2409,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// AbstractSelectingDelegate impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.008452757423553637,no,0.008644766823342472,no,0.008315256449659856,no,0.007799510052284272
2410,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//hilo params,no,undetermined,0,0,0,no,0.010428887126469454,no,0.012029271893423274,no,0.012204663705075343,no,0.011725330111543615
2411,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//sql = query;,no,undetermined,0,0,0,no,0.007026938034360582,no,0.007241101484526574,no,0.006483475039400229,no,0.006234800685458004
2412,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//for EJB3,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2413,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// performance opt,no,undetermined,0,0,0,no,0.016085682937974816,no,0.014244836348745132,no,0.013763962497768768,no,0.013328838428735406
2414,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//sql = update;,no,undetermined,0,0,0,no,0.0022387740891415993,no,0.0033601996404013564,no,0.0032765068288849028,no,0.0031210749924166555
2415,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// DISCRIMINATOR,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2416,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//hilo config,no,undetermined,0,0,0,no,0.0027958133737949692,no,0.0032101312878340007,no,0.0030960958768826907,no,0.002922543268760994
2417,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// so we ""clock over"" on the first invocation",no,undetermined,0,0,0,no,0.004702967960993831,no,0.005567658117013743,no,0.00537401051742749,no,0.005127438880989956
2418,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// don't allow comments on these insert statements as comments totally // blow up the Oracle getGeneratedKeys ""support"" :(",no,undetermined,0,0,0,no,0.016910909770531942,no,0.014265550226101407,no,0.013782637055069687,no,0.013306047910114352
2419,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//throw new IdentifierGenerationException(""save associated object first, or disable cascade for inverse association"");",no,undetermined,0,0,0,no,0.0035132808838129266,no,0.00990164627384876,no,0.010147348202749375,no,0.009772383829884837
2420,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//count++;,no,undetermined,0,0,0,no,0.005605632036970423,no,0.01108913433985633,no,0.01067900324937871,no,0.010259339359453048
2421,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// go ahead and set the lazy here, since pojo.proxy can override it.",no,undetermined,0,0,0,no,0.005191767194681909,no,0.0036953968338487436,no,0.0035678008660280933,no,0.002022297866593804
2422,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// DYNAMIC UPDATE,no,undetermined,0,0,0,no,0.002180078136996199,no,0.002936831519713749,no,0.002933510531873279,no,0.0027691508308890123
2423,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// IMPORT,no,undetermined,0,0,0,no,0.00636771944007112,no,0.005436194512521258,no,0.005245306963749434,no,0.004999919311430869
2424,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// BATCH SIZE,no,undetermined,0,0,0,no,0.008086386472774989,no,0.008651581116398764,no,0.00846234085144321,no,0.00814853837634038
2425,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we need to dirty check collections, since they can cause an owner // version number increment",no,undetermined,0,0,0,no,0.043777932352514884,no,0.014249359345760496,no,0.013758732274620062,no,0.01333278989586911
2426,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// SELECT BEFORE UPDATE,no,undetermined,0,0,0,no,0.0017104600639662449,no,0.0028408685779380076,no,0.0028167845573186918,no,0.002661534840029964
2427,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// OPTIMISTIC LOCK MODE,no,undetermined,0,0,0,no,0.004906296180238696,no,0.004456935168523463,no,0.006501805681287268,no,0.006227438058678054
2428,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// intentionally empty,no,undetermined,0,0,0,no,0.003644613594131404,no,0.004539019288401649,no,0.004347602997144553,no,0.004115441494444047
2429,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//first element of array is reserved for the actual instance we are loading!,no,undetermined,0,0,0,no,0.009808847976166718,no,0.008022443228526684,no,0.007636206665003895,no,0.0073322062100655006
2430,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//keep the behavior consistent even for boundary usages,no,undetermined,0,0,0,no,0.011912257530595795,no,0.01239931137958608,no,0.011999894097494593,no,0.01154840177743393
2431,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// so we ""clock over"" on the first invocation",no,undetermined,0,0,0,no,0.004702967960993831,no,0.005567658117013743,no,0.00537401051742749,no,0.005127438880989956
2432,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// do nothing until we hit the rsult set containing the generated id,no,undetermined,0,0,0,no,0.03947803410828892,no,0.014239357091415952,no,0.01377194640045646,no,0.013336838885204979
2433,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Use the delegate, resolve identifiers as FROM element aliases.",no,undetermined,0,0,0,no,0.015105646560945067,no,0.01222999992439844,no,0.013785953110809933,no,0.013331616320100586
2434,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// PERSISTER,no,undetermined,0,0,0,no,0.026910987107764264,no,0.012166250898335543,no,0.011603723848549291,no,0.011179192346205484
2435,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// CUSTOM SQL,no,undetermined,0,0,0,no,0.0036602458763009592,no,0.0021052595716952883,no,0.0020567741268323666,no,0.0019350200804244338
2436,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Loaded entity instances, by EntityKey",no,undetermined,0,0,0,no,0.020557554082012645,no,0.011257897950976072,no,0.010740120289128638,no,0.010422746880545982
2437,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// if the given name is un-qualified we may neen to qualify it,no,undetermined,0,0,0,no,0.01014179023050655,no,0.014258090970674884,no,0.01377586535289487,no,0.013350243026560227
2438,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the default...,no,undetermined,0,0,0,no,0.00031881819291795603,no,0.0003285017699772633,no,0.0003106464722396142,no,0.00028333751659686163
2439,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// cascade-save to many-to-one BEFORE the parent is saved,no,undetermined,0,0,0,no,0.010737962456708952,no,0.014265507171231064,no,0.013796962184719114,no,0.013307119141761671
2440,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// get meta's from <subclass>,no,undetermined,0,0,0,no,0.034755439954870945,no,0.014233850949637411,no,0.013776292854277604,no,0.01332351438644284
2441,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// properties,no,undetermined,0,0,0,no,0.005804620994376463,no,0.005156405132770629,no,0.0049524991266087955,no,0.004725739377578479
2442,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// joined subclasses,no,undetermined,0,0,0,no,0.002990313572909916,no,0.00343705376120156,no,0.0033524353820736964,no,0.0031693762810550653
2443,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// KEY,no,undetermined,0,0,0,no,0.000517353743429138,no,0.0007773431620271339,no,0.0007650177455099375,no,0.0007063905795288035
2444,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// CHECK,no,undetermined,0,0,0,no,0.002366121453952985,no,0.0031112760514768875,no,0.00016522256877326487,no,0.000149585977923239
2445,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// properties,no,undetermined,0,0,0,no,0.005804620994376463,no,0.005156405132770629,no,0.0049524991266087955,no,0.004725739377578479
2446,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// intentionally empty,no,undetermined,0,0,0,no,0.003644613594131404,no,0.004539019288401649,no,0.004347602997144553,no,0.004115441494444047
2447,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// KEY,no,undetermined,0,0,0,no,0.000517353743429138,no,0.0007773431620271339,no,0.0007650177455099375,no,0.0007063905795288035
2448,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//even process null collections,no,undetermined,0,0,0,no,0.005284257085240222,no,0.002994684328187918,no,0.002860253703527821,no,0.002604395701933488
2449,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//keep the existing version number in the case of replicate!,no,undetermined,0,0,0,no,0.005527233320984622,no,0.004072186127066268,no,0.0038847110729919926,no,0.003692557836491709
2450,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//source.getPersistenceContext().removeNonExist( new EntityKey( id, persister, source.getEntityMode() ) );",no,undetermined,0,0,0,no,0.010410636829138238,no,0.0068233505520881475,no,0.006466645097978093,no,0.006094895503310217
2451,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// substitutes into values by side-effect,no,undetermined,0,0,0,no,0.0034330209057999734,no,0.014262676593154956,no,0.013780740387534563,no,0.013330414975495869
2452,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Identity map of CollectionEntry instances, by the collection wrapper",no,undetermined,0,0,0,no,0.007559657120902596,no,0.0082783694230024,no,0.008143711543153943,no,0.007678370446432629
2453,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// TABLENAME,no,undetermined,0,0,0,no,0.005129532618031483,no,0.014253483281738916,no,0.013758508457257231,no,0.013332980009589787
2454,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// table-specific parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.005484004318388628,no,0.004005061166099498,no,0.0037190694132745662,no,0.0035370953106219523
2455,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// join.getKey().setType( new Type( lazz.getIdentifier() ) );,no,undetermined,0,0,0,no,0.01647942198764333,no,0.008903265223726994,no,0.008736757917002878,no,0.00830004221844223
2456,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//source.getBatcher().executeBatch(); //found another way to ensure that all batched joined inserts have been executed,no,undetermined,0,0,0,no,0.01891595213758348,no,0.014262388112500865,no,0.013789682805095467,no,0.013308637375798188
2457,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// IdentifierGenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.013233579703368387,no,0.01425141909617649,no,0.013752967834059337,no,0.013324750669858972
2458,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// PROPERTIES,no,undetermined,0,0,0,no,0.005804620994376463,no,0.005156405132770629,no,0.0049524991266087955,no,0.004725739377578479
2459,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// PersistentIdentifierGenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.013233579703368387,no,0.01425141909617649,no,0.013752967834059337,no,0.013324750669858972
2460,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// prepare and execute the insert,no,undetermined,0,0,0,no,0.0018788620393450242,no,0.0031407752468654107,no,0.0030586699328421577,no,0.0028769394176659164
2461,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// COLUMN(S),no,undetermined,0,0,0,no,0.01045040109545629,no,0.00955816571519191,no,0.0093906284265115,no,0.009023023430608653
2462,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if everything went ok, commit the transaction and close the obtained // connection handle...",no,undetermined,0,0,0,no,0.0025167300500890735,no,0.0019495156244870903,no,0.001863476320378095,no,0.0017491776559832924
2463,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// prepare and execute the insert,no,undetermined,0,0,0,no,0.0018788620393450242,no,0.0031407752468654107,no,0.0030586699328421577,no,0.0028769394176659164
2464,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//fetch the generated id in a separate query,no,undetermined,0,0,0,no,0.06115962843670195,no,0.01425082375917369,no,0.013784299227424338,no,0.013331227263600597
2465,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we just hit the last position,no,undetermined,0,0,0,no,0.009540161002670158,no,0.008439274217242086,no,0.008148449689299252,no,0.00780431841631729
2466,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// scroll ahead,no,undetermined,0,0,0,no,0.032422677328464225,no,0.014258270705426328,no,0.013769022763083888,no,0.01334577663021567
2467,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// scroll backward,no,undetermined,0,0,0,no,0.031283474528846944,no,0.014238737047059151,no,0.013772200700045574,no,0.013318007921602178
2468,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// column index,no,undetermined,0,0,0,no,0.00519280437892967,no,0.007299228308844963,no,0.007173927077098752,no,0.00688132886667259
2469,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we have not yet hit the last result...,no,undetermined,0,0,0,no,0.008128069702629649,no,0.004580768357460305,no,0.005285523070228885,no,0.005042116322597451
2470,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// State ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0003803701267563741,no,0.00041734545027376246,no,0.0004057778001511593,no,0.00037204306143792616
2471,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.005401678077003452,no,0.012611391369630817,no,0.012019182916236876,no,0.011392556008294648
2472,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//column unique-key,no,undetermined,0,0,0,no,0.003044731023233387,no,0.004042700645148318,no,0.003947741638152459,no,0.0037529067077597834
2473,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// do this when all the properties are updateable since there is // a certain likelihood that the information will already be // snapshot-cached.,no,undetermined,0,0,0,no,0.004449654040789464,no,0.005592421640811106,no,0.005540298166132923,no,0.005436305156339091
2474,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// State ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0003803701267563741,no,0.00041734545027376246,no,0.0004057778001511593,no,0.00037204306143792616
2475,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.005401678077003452,no,0.012611391369630817,no,0.012019182916236876,no,0.011392556008294648
2476,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Caches,no,undetermined,0,0,0,no,0.009317737947087693,no,0.00870931499084451,no,0.008455518904830414,no,0.00823484337210528
2477,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Generators:,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2478,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// cache region is defined by the root-class in the hierarchy...,no,undetermined,0,0,0,no,0.012405933909431057,no,0.009137441397598645,no,0.008474702697331239,no,0.008150455947078084
2479,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// PROPERTIES,no,undetermined,0,0,0,no,0.005804620994376463,no,0.005156405132770629,no,0.0049524991266087955,no,0.004725739377578479
2480,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//JNDI + Serialization:,no,undetermined,0,0,0,no,0.007300964074651916,no,0.014279917751328334,no,0.013759547530786924,no,0.013332739932731406
2481,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//checking for named queries,no,undetermined,0,0,0,no,0.015949458719598405,no,0.014266449473596766,no,0.01378636384892595,no,0.013339509198356572
2482,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//stats,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2483,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// EntityNotFoundDelegate,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2484,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Check named HQL queries,no,undetermined,0,0,0,no,0.004963321539044318,no,0.0036847456226903118,no,0.0037152511149189057,no,0.0035156483786487505
2485,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this will throw an error if there's something wrong.,no,undetermined,0,0,0,no,0.044592375077540054,no,0.014263314899483225,no,0.013764376492007239,no,0.013307424563549518
2486,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//prevents this session from adding things to cache,no,undetermined,0,0,0,no,0.020030176141268168,no,0.014273382675789412,no,0.013779467433928596,no,0.013334920790597456
2487,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// look for the instance by uuid,no,undetermined,0,0,0,no,0.005218945746241729,no,0.005136317885039488,no,0.004933021574191788,no,0.004703591965662321
2488,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//for a dynamic-class,no,undetermined,0,0,0,no,0.004872038004088902,no,0.006069748518533174,no,0.006019268588936536,no,0.005734848671466335
2489,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//test this entity to see if we must query it,no,undetermined,0,0,0,no,0.006078172336708327,no,0.004251793490550326,no,0.003751357759836485,no,0.0035890286176639514
2490,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//NOTE EARLY EXIT,no,undetermined,0,0,0,no,0.009851730953002773,no,0.008447576969000298,no,0.00839580091061771,no,0.007973154111423878
2491,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// for backward-compatability,no,undetermined,0,0,0,no,0.005687302740935783,no,0.006276528410359648,no,0.006084018678340133,no,0.005789847141970737
2492,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ignore this error for now,no,undetermined,0,0,0,no,0.0014108783591539515,no,0.0017336786889323916,no,0.0017233019784634706,no,0.0016144870499679438
2493,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//must add to JNDI _after_ adding to HashMaps, because some JNDI servers use serialization",no,undetermined,0,0,0,no,0.029217857408703928,no,0.014257906207851343,no,0.013784630408463583,no,0.013332363329957098
2494,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// look for existing collection as part of the persistence context,no,undetermined,0,0,0,no,0.007372554744694843,no,0.004550294128433556,no,0.004398626915232561,no,0.004210258843479757
2495,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Make sure this is a defined parameter and check the incoming value type,no,undetermined,0,0,0,no,0.011248646564302685,no,0.014265233447879729,no,0.013782580443853613,no,0.013340244902275172
2496,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// for each of the defined parameters, make sure its value // has been set",no,undetermined,0,0,0,no,0.0022012823791821945,no,0.0015551526518658232,no,0.001423664597981372,no,0.0013235023463195584
2497,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//we never need to apply locks to the SQL,no,undetermined,0,0,0,no,0.01621771041754186,no,0.014282811749924233,no,0.01379569905371257,no,0.013331086427047839
2498,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// deletes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.004689798697540097,no,0.004832675544591906,no,0.004679895332864747,no,0.004463205414549872
2499,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// updates ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0026915610557192594,no,0.002005099303351259,no,0.0018798895259420595,no,0.0018182449259713427
2500,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// cache the actual id of the object, not the value of the // property-ref, which might not be initialized",no,undetermined,0,0,0,no,0.026763612991108177,no,0.014244041992862626,no,0.013774836290433483,no,0.013352599086656744
2501,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// loading ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.00523959158029263,no,0.004104794755128952,no,0.0040425921289030595,no,0.003830416957545875
2502,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// select-range is terminated by declaration of ""from""",no,undetermined,0,0,0,no,0.006757453282539405,no,0.0063482866194686126,no,0.006165667616638013,no,0.005958526523557371
2503,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// for an any,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2504,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// insertable simply because that is the user did not specify // anything; just override it,no,undetermined,0,0,0,no,0.0068487876759083,no,0.01013805180834074,no,0.009834169906887813,no,0.009458994693710624
2505,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// properties generated on update can never be updateable...,no,undetermined,0,0,0,no,0.011240584151209928,no,0.010207336424969257,no,0.00995068913064652,no,0.009620093058290294
2506,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// updateable only because the user did not specify  // anything; just override it,no,undetermined,0,0,0,no,0.0033411031863635884,no,0.0036532897602318923,no,0.0034710978180017846,no,0.003280640227551159
2507,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// the user specifically supplied update=""true"", // which constitutes an illegal combo",no,undetermined,0,0,0,no,0.006930709466821704,no,0.006799933685151296,no,0.006231036573112684,no,0.005789275851624686
2508,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ROLENAME,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2509,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//final boolean forceCacheRefresh,",no,undetermined,0,0,0,no,0.00024997478579600306,no,0.0004940587870305461,no,0.00046031183846367976,no,0.0004235391267929675
2510,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// first, try to load it from the temp PC associated to this SS",no,undetermined,0,0,0,no,0.0027259728158260214,no,0.0027528846908701785,no,0.0026624027831817993,no,0.0025334257853290927
2511,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// otherwise immediately materialize it,no,undetermined,0,0,0,no,0.0016555601331516491,no,0.0018489613349253501,no,0.001787347823598307,no,0.0016613984227709276
2512,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/////////////////////////////////////////////////////////////////////////////////////////////////////,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2513,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// no auto-flushing to support in stateless session,no,undetermined,0,0,0,no,0.007522550879664252,no,0.008506577901106552,no,0.008252749185637022,no,0.007907783684333708
2514,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// FETCH STRATEGY,no,undetermined,0,0,0,no,0.008794879678671687,no,0.014254203183063082,no,0.013764064805593416,no,0.013326963811842734
2515,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// TABLE,no,undetermined,0,0,0,no,0.0014145358968487873,no,0.0020391184049764746,no,0.0019076526326845232,no,0.001795579701972488
2516,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//after setting values to object, entityMode",no,undetermined,0,0,0,no,0.0006036654703424797,no,0.0004557150994936613,no,0.0004410800932203551,no,0.00040612141735925795
2517,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// SORT,no,undetermined,0,0,0,no,0.008433184939221338,no,0.00934404007135858,no,0.009127642984819282,no,0.00876983366117301
2518,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// do a check,no,undetermined,0,0,0,no,0.002366121453952985,no,0.0031112760514768875,no,0.00016522256877326487,no,0.000149585977923239
2519,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// saveOrUpdate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.007227820479986426,no,0.0068302369575258355,no,0.006657399138082261,no,0.0063773954378130385
2520,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// update() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0029692123076790248,no,0.004153996819553727,no,0.004044166851322466,no,0.003846990393534051
2521,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// lock() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0024186781931424383,no,0.002643206720323628,no,0.004055675936456731,no,0.003842611829270461
2522,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// persist() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0008370993028636969,no,0.0009204038549950485,no,0.0008974348797075615,no,0.000830803890992926
2523,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// persistOnFlush() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.007227820479986426,no,0.0068302369575258355,no,0.006657399138082261,no,0.0063773954378130385
2524,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// delete() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.005331757218467154,no,0.005098686409757583,no,0.0049214292075090505,no,0.004683571671974446
2525,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// load()/get() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.006248923383857507,no,0.0066302570047645434,no,0.006180512199346737,no,0.0059523769822788855
2526,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// refresh() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.007981781014102678,no,0.008879058029453456,no,0.008637725232479512,no,0.008283043421724662
2527,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// CUSTOM SQL,no,undetermined,0,0,0,no,0.0036602458763009592,no,0.0021052595716952883,no,0.0020567741268323666,no,0.0019350200804244338
2528,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// unsorted, natural, comparator.class.name",no,undetermined,0,0,0,no,0.028134600353398,no,0.014255170468365464,no,0.013774427357940565,no,0.013338134990142443
2529,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// replicate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.007227820479986426,no,0.0068302369575258355,no,0.006657399138082261,no,0.0063773954378130385
2530,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// set up second pass,no,undetermined,0,0,0,no,0.004138056750610144,no,0.003413613341190287,no,0.0033290939483143554,no,0.003145526558152684
2531,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// do not auto-flush while outside a transaction,no,undetermined,0,0,0,no,0.017933956086499392,no,0.006378900523728813,no,0.0044814964538581374,no,0.004281323527916077
2532,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this is an internal error of some sort...,no,undetermined,0,0,0,no,0.01380605719241242,no,0.011116104924958263,no,0.011258146655323225,no,0.010850754444370263
2533,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//do not return a proxy! //(this option indicates we are initializing a proxy),no,undetermined,0,0,0,no,0.0033810661262625758,no,0.003912334360755624,no,0.0037153735028006584,no,0.0033092754688102194
2534,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ignore,no,undetermined,0,0,0,no,0.0003489690046840201,no,0.0004791828875098961,no,0.0004737640273004505,no,0.00043449603121796743
2535,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// for an any // we will have to use reflection,no,undetermined,0,0,0,no,0.02500628013867927,no,0.014236058069689469,no,0.013774338276731305,no,0.013307753333696222
2536,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//only collections belonging to deleted entities are allowed to be dereferenced in the case of orphan delete,no,undetermined,0,0,0,no,0.013861926872848917,no,0.01424284332488622,no,0.013782191169105888,no,0.013335248168417208
2537,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if it was previously unreferenced, we need to flush in order to // get its state into the database in order to execute query",no,undetermined,0,0,0,no,0.010952591550974458,no,0.0047901678023306036,no,0.0034334663651560075,no,0.0032717267729427913
2538,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// not for internal use:,no,undetermined,0,0,0,no,0.0044207852786827834,no,0.003494754425257018,no,0.0037702343481857085,no,0.0035704016288692487
2539,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// otherwise, we only need to flush if there are in-memory changes // to the queried tables",no,undetermined,0,0,0,no,0.12673489140006358,no,0.07949508150047127,no,0.013748164309911926,no,0.013339522019819675
2540,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_0,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2541,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if it is initialized, see if the underlying //instance is contained, since we need to  //account for the fact that it might have been //evicted",no,undetermined,0,0,0,no,0.06542785224857005,no,0.0142484869993674,no,0.013766700439058243,no,0.013316816291185864
2542,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//stops flush being called multiple times if this method is recursively called,no,undetermined,0,0,0,no,0.05637738953914678,no,0.01426644374728738,no,0.013774980233621776,no,0.013330697498092785
2543,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// decode row selection...,no,undetermined,0,0,0,no,0.0022367454860965467,no,0.0022166179636001083,no,0.0021799120292523367,no,0.0020488319364305356
2544,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// basically just an adapted copy of find(CriteriaImpl),no,undetermined,0,0,0,no,0.06850826235489699,no,0.014278071699243675,no,0.013764549383278694,no,0.013322341568919495
2545,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ignore this error for now,no,undetermined,0,0,0,no,0.0014108783591539515,no,0.0017336786889323916,no,0.0017233019784634706,no,0.0016144870499679438
2546,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we need to writeObject() on this since interceptor is user defined,no,undetermined,0,0,0,no,0.01223472509788322,no,0.009760220338864131,no,0.009303355305845171,no,0.009045586443652205
2547,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the old-time stand-by...,no,undetermined,0,0,0,no,0.008148842370878272,no,0.008412810179795647,no,0.007923556028756084,no,0.007599696898792878
2548,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// parameter bind values...,no,undetermined,0,0,0,no,0.0025335663566352644,no,0.001846120570213085,no,0.0018534781087106687,no,0.0017444142636815368
2549,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Parameter handling code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.04312875588440711,no,0.014253036707181569,no,0.013779300222685757,no,0.01331840633262752
2550,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Execution methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.003975123026071513,no,0.004373289705653102,no,0.004186337912006004,no,0.003968149891245466
2551,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//NOTE SPECIAL CASE: // one-to-one constrained=false cannot be proxied, // so default to join and non-lazy",no,undetermined,0,0,0,no,0.012937474432671556,no,0.009022903746052689,no,0.008835880988113913,no,0.0061837320501949
2552,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// use old (HB 2.1) defaults if outer-join is specified,no,undetermined,0,0,0,no,0.0037585546681869583,no,0.004558791496923907,no,0.003849984887995166,no,0.0036540428471808187
2553,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we have a CGLIB enhanced entity,no,undetermined,0,0,0,no,0.004696594366985424,no,0.002929242518985376,no,0.002803436829512337,no,0.002667824074962013
2554,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we have a CGLIB enhanced entity,no,undetermined,0,0,0,no,0.004696594366985424,no,0.002929242518985376,no,0.002803436829512337,no,0.002667824074962013
2555,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we have a Javassist enhanced entity,no,undetermined,0,0,0,no,0.004696594366985424,no,0.002929242518985376,no,0.002803436829512337,no,0.002667824074962013
2556,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we have a Javassist enhanced entity,no,undetermined,0,0,0,no,0.004696594366985424,no,0.002929242518985376,no,0.002803436829512337,no,0.002667824074962013
2557,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// FieldInterceptor impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.008452757423553637,no,0.008644766823342472,no,0.008315256449659856,no,0.007799510052284272
2558,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// subclass accesses ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.014127171368414035,no,0.012866529228696844,no,0.013302846235641356,no,0.012994090428129568
2559,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// FieldHandler impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.008452757423553637,no,0.008644766823342472,no,0.008315256449659856,no,0.007799510052284272
2560,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// should *not* need to grow beyond the size of the total number of columns in the rs,no,undetermined,0,0,0,no,0.020005169527553306,no,0.014256049236519705,no,0.013773400403318262,no,0.013327613184474457
2561,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// should probably no-op commit/rollback here, at least in JTA scenarios",no,undetermined,0,0,0,no,0.009504704488760028,no,0.005768952558138354,no,0.0051204564086223875,no,0.0048061440138468005
2562,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Various Expectation instances ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.017606299285305983,no,0.0142780378834855,no,0.013758331875344023,no,0.013332038704458654
2563,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// explicitly perform no checking...,no,undetermined,0,0,0,no,0.03329158777165034,no,0.014243752271276444,no,0.013770442341981479,no,0.013317240820421426
2564,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// used from testsuite,no,undetermined,0,0,0,no,0.013224095045540337,no,0.014233936045895415,no,0.013781161010272127,no,0.01332261098648822
2565,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// assume we are in an auto-commit state,no,undetermined,0,0,0,no,0.002159294003425945,no,0.002123386723448602,no,0.0020492259536172763,no,0.001929340408658184
2566,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*package*/,no,undetermined,0,0,0,no,0.0024028778345724696,no,0.0026803190818122666,no,0.0025599410532666095,no,0.002410048974527652
2567,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// GENERATOR,no,undetermined,0,0,0,no,0.011317479750226815,no,0.007805346456484113,no,0.007642790619187168,no,0.0073450733198109075
2568,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// register synch; stats.connect(),no,undetermined,0,0,0,no,0.0019530275376676523,no,0.0020606130992092595,no,0.002007115841859664,no,0.0018972424007372979
2569,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// calls executeBatch(),no,undetermined,0,0,0,no,0.012842865002491615,no,0.014225345427378038,no,0.01376132286998656,no,0.013308348685355131
2570,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//no big deal,no,undetermined,0,0,0,no,0.01172451134130699,no,0.011988098531757214,no,0.011569513934457034,no,0.011151422854559315
2571,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// no big deal,no,undetermined,0,0,0,no,0.01172451134130699,no,0.011988098531757214,no,0.011569513934457034,no,0.011151422854559315
2572,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// no big deal,no,undetermined,0,0,0,no,0.01172451134130699,no,0.011988098531757214,no,0.011569513934457034,no,0.011151422854559315
2573,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// see explanation above...,no,undetermined,0,0,0,no,0.009227392660828296,no,0.011518787787116527,no,0.011216925853421015,no,0.010828731427393759
2574,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If we are in the process of releasing, no sense // checking for aggressive-release possibility.",no,undetermined,0,0,0,no,0.04454356945185755,no,0.014226092079020106,no,0.013774761843640723,no,0.01332015619086077
2575,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// EARLY EXIT!!!!,no,undetermined,0,0,0,no,0.002670991679035732,no,0.002232446739692084,no,0.002188658649593499,no,0.002052037746907664
2576,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// ResultSet impl (""overridden"") ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",no,undetermined,0,0,0,no,0.003506184530764494,no,0.004181747371183019,no,0.0040118212161294855,no,0.0037376952724102325
2577,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ResultSet impl (delegated) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0021256957722562324,no,0.0022898273248784314,no,0.0022325572771253093,no,0.0020559231446821598
2578,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ID UNSAVED-VALUE,no,undetermined,0,0,0,no,0.0073246623767691445,no,0.0031992668032505512,no,0.0030905004956438722,no,0.0029248644173355946
2579,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// VERSION UNSAVED-VALUE,no,undetermined,0,0,0,no,0.0045446465581384906,no,0.002197317440033494,no,0.002110792729794338,no,0.0019835923551271323
2580,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// not necessarily a *unique* property reference,no,undetermined,0,0,0,no,0.02170358349591371,no,0.014255171888455924,no,0.012721949600510625,no,0.01226944381778171
2581,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Bind the where,no,undetermined,0,0,0,no,0.0026044942547138743,no,0.0023143287358805367,no,0.002343096552257984,no,0.0022006779663850083
2582,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// refer to comment in StatefulPersistenceContext.addCollection(),no,undetermined,0,0,0,no,0.001567051197739691,no,0.0019340592514424466,no,0.0019043130073740284,no,0.0018015008280148753
2583,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ConnectionManager.Callback implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.007395410919933001,no,0.008166041093969642,no,0.007998955482711007,no,0.00785766584208132
2584,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Note : success = false, because we don't know the outcome of the transaction",no,undetermined,0,0,0,no,0.0979439899863669,no,0.014244889245725468,no,0.013764884499346826,no,0.01330957626465186
2585,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Bind the order-by,no,undetermined,0,0,0,no,0.002211580626651178,no,0.0009901028575311326,no,0.0009923720913761797,no,0.0009222564261813067
2586,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we already have a callback registered; either a local // (org.hibernate.Transaction) transaction has accepted // callback responsibilities, or we have previously // registered a transaction synch.",no,undetermined,0,0,0,no,0.003424765129511287,no,0.0018137524993581575,no,0.0017683684141949273,no,0.0016757352216644
2587,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Bind the filters,no,undetermined,0,0,0,no,0.0022414498019474364,no,0.0021715378939934195,no,0.0021155167178490276,no,0.001989135633481917
2588,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// overriding inherited meta attribute. HBX-621 & HBX-793			,no,undetermined,0,0,0,no,0.0051135088081934316,no,0.0048253733483237,no,0.004599362717664472,no,0.004356303198583975
2589,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// first, iterate over all elements capable of defining an extends attribute // collecting all found extends references if they cannot be resolved // against the already processed mappings.",no,undetermined,0,0,0,no,0.00344045266328624,no,0.0030426236988714823,no,0.0029187547169513806,no,0.002772052619091199
2590,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//+ ""_"" + referencedColumnName not used for backward compatibility",no,undetermined,0,0,0,no,0.010454638490340824,no,0.014245284867733953,no,0.013783524355032148,no,0.013325355948950467
2591,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//SessionFactory name:,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2592,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//JDBC and connection settings:,no,undetermined,0,0,0,no,0.0034549768518299306,no,0.0045790996046215695,no,0.00452155702976961,no,0.004352197448611027
2593,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//JDBC and connection settings:,no,undetermined,0,0,0,no,0.0034549768518299306,no,0.0045790996046215695,no,0.00452155702976961,no,0.004352197448611027
2594,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Interrogate JDBC metadata,no,undetermined,0,0,0,no,0.00267836683004985,no,0.0018069705915963535,no,0.0018222757416181277,no,0.0017226235297670778
2595,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// user supplied JDBC connections,no,undetermined,0,0,0,no,0.00203031910810594,no,0.0023564147115744533,no,0.00226925772301983,no,0.002148298774946588
2596,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Transaction settings:,no,undetermined,0,0,0,no,0.001343196101817482,no,0.0008931709335614448,no,0.0008577072098288874,no,0.0007910497903181289
2597,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//SQL Generation settings:,no,undetermined,0,0,0,no,0.0011935256974702788,no,0.0015219738405301572,no,0.0014830049337851523,no,0.0013840691754888996
2598,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Query parser settings:,no,undetermined,0,0,0,no,0.004308673751836953,no,0.005565315268747343,no,0.005013622367644212,no,0.004783765730452778
2599,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Second-level / query cache:,no,undetermined,0,0,0,no,0.015578218674034309,no,0.011613850466093138,no,0.01046182193071455,no,0.010070093143798864
2600,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//SQL Exception converter:,no,undetermined,0,0,0,no,0.005915472444461948,no,0.009268817499940088,no,0.008776634437994429,no,0.008560562813630056
2601,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Statistics and logging:,no,undetermined,0,0,0,no,0.004437098368646567,no,0.004389889781514883,no,0.004057763013393288,no,0.003846553597270974
2602,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		settings.setShowSqlEnabled(showSql);,no,undetermined,0,0,0,no,2.4892244795295015e-05,no,4.894206871207723e-05,no,4.868239134402596e-05,no,4.289370857951216e-05
2603,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//postInitialize() will be called after initialization,no,undetermined,0,0,0,no,0.006326345875136198,no,0.007703762707935213,no,0.007507422199476156,no,0.008025607154439098
2604,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		settings.setFormatSqlEnabled(formatSql);,no,undetermined,0,0,0,no,2.4892244795295015e-05,no,4.894206871207723e-05,no,4.868239134402596e-05,no,4.289370857951216e-05
2605,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// cannot handle single quotes,no,undetermined,0,0,0,no,0.02316320124813341,no,0.01424256317393881,no,0.013799029077188616,no,0.013315385041562617
2606,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Schema export:,no,undetermined,0,0,0,no,0.009818695230925614,no,0.012631117331445214,no,0.012340740057706884,no,0.01191001238094831
2607,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// todo : for 4.0 //	private static final Logger log = LoggerFactory.getLogger( SQLStatementLogger.class ); // this is the legacy logging 'category'...,no,undetermined,0,0,0,yes,0.6676851377313667,yes,0.569272836328135,yes,0.5560057215257995,yes,0.5686073197121609
2608,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//if dotted and not load-collection nor return-join //regular property,no,undetermined,0,0,0,no,0.020479895128488277,no,0.013871952144106905,no,0.0134648143458706,no,0.013159224060781577
2609,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// don't even bother trying to read further,no,undetermined,0,0,0,no,0.011169134959157752,no,0.006219002636939346,no,0.00609815259962151,no,0.005831486893238086
2610,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	private ComponentTuplizerFactory componentTuplizerFactory; todo : HHH-3517 and HHH-1907 //	private BytecodeProvider bytecodeProvider;,no,undetermined,0,0,0,yes,0.9655874705686408,no,0.014262972909222387,no,0.013793257211368414,no,0.013340655965278614
2611,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// public getters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.013940211259888003,no,0.014277196592598011,no,0.013771803619144603,no,0.013336383643335526
2612,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// generated properties can *never* be insertable...,no,undetermined,0,0,0,no,0.023291855405362445,no,0.014248598309269589,no,0.013785895420362891,no,0.013348474699863444
2613,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	public ComponentTuplizerFactory getComponentTuplizerFactory() { //		return componentTuplizerFactory; //	},no,undetermined,0,0,0,no,0.007100108386456736,no,0.007622715674663459,no,0.0072916399072507545,no,0.0070315119675980736
2614,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// package protected setters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.013834171107373424,no,0.013136472819547818,no,0.01261979559513344,no,0.012224082419853427
2615,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	public BytecodeProvider getBytecodeProvider() { //		return bytecodeProvider; //	} // //	void setBytecodeProvider(BytecodeProvider bytecodeProvider) { //		this.bytecodeProvider = bytecodeProvider; //	},no,undetermined,0,0,0,no,0.008875478950636378,no,0.009176553729447373,no,0.00845158867702868,no,0.008153824784236338
2616,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// using local since the inheritedMetas at this point is not the correct map since it is always the empty map,no,undetermined,0,0,0,no,0.006976328646976733,no,0.00792170212014826,no,0.007697675300122335,no,0.007106336184388084
2617,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	protected List extendsQueue;,no,undetermined,0,0,0,no,0.009012948757873774,no,0.01040266903394457,no,0.010004318382846374,no,0.009617657034524257
2618,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		extendsQueue = new ArrayList();,no,undetermined,0,0,0,no,0.0038762423037081387,no,0.004599646089547068,no,0.004476222501728606,no,0.0042610503688104455
2619,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		componentTuplizerFactory = new ComponentTuplizerFactory();,no,undetermined,0,0,0,no,0.0007673851418173427,no,0.0010460410572209196,no,0.0010306381472826695,no,0.0009543885276787981
2620,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if doc is null, then for whatever reason, the cached file cannot be used...",no,undetermined,0,0,0,no,0.011615339366022142,no,0.01423019851959526,no,0.013773165845243093,no,0.013318112192946307
2621,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// position cursor to the last row,no,undetermined,0,0,0,no,0.0011550483516298005,no,0.0011993668409217217,no,0.0011941648043906504,no,0.0011099165477706143
2622,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// sequentially read the result set in reverse until we recognize // a change in the key value.  At that point, we are pointed at // the last physical sequential row for the logical row in which // we are interested in processing",no,undetermined,0,0,0,no,0.0010060126725125386,no,0.0010458476329417447,no,0.0009662171404265369,no,0.0008784661743569607
2623,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Read backwards until we read past the first physical sequential // row with the key we are interested in loading,no,undetermined,0,0,0,no,0.00033279894226105795,no,0.0003422631776120896,no,0.00033874923336752995,no,0.0003021471997219411
2624,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Finally, read ahead one row to position result set cursor // at the first physical row we are interested in loading",no,undetermined,0,0,0,no,0.0010301779933244968,no,0.0007582328246900934,no,0.00078203780807242,no,0.0007074407407363564
2625,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This method may be called many times!!,no,undetermined,0,0,0,no,0.04332814474463615,no,0.014243024872118632,no,0.013793366032793816,no,0.013314614092179638
2626,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// force the proxy to resolve itself,no,undetermined,0,0,0,no,0.0035742063966492897,no,0.002769771920972507,no,0.002503718019033631,no,0.002246279846095463
2627,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this is equivalent to the old behavior...,no,undetermined,0,0,0,no,0.0051979511023149925,no,0.007463075620770886,no,0.00715462019626954,no,0.006823736763682878
2628,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if null, owner will be retrieved from session",no,undetermined,0,0,0,no,0.004249508777696297,no,0.005434278416265652,no,0.005507190549837635,no,0.0052494214871267085
2629,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//			Iterator iterator = extendsQueue.iterator();,no,undetermined,0,0,0,no,0.0073655098406130454,no,0.005173736393231102,no,0.003734720911494684,no,0.0035425860840355775
2630,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		Iterator iter = extendsQueue.iterator();,no,undetermined,0,0,0,no,0.007135445894881661,no,0.005869275263145645,no,0.004492486182156441,no,0.004270663320285797
2631,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// found,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2632,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// found,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2633,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		settings.setComponentTuplizerFactory( this.getComponentTuplizerFactory() );,no,undetermined,0,0,0,no,2.4892244795295015e-05,no,4.894206871207723e-05,no,4.868239134402596e-05,no,4.289370857951216e-05
2634,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//final String queryString, ",no,undetermined,0,0,0,no,0.003100224294722253,no,0.005221415349583434,no,0.005043439186329405,no,0.004804728890571522
2635,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	private final List extendsQueue;,no,undetermined,0,0,0,no,0.006883391983465981,no,0.009710833413937511,no,0.009240912852557775,no,0.008886663077365685
2636,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//<String, String>",no,undetermined,0,0,0,no,0.00295680190675367,no,0.0033804834766621877,no,0.0034348842877159366,no,0.0032511560799850007
2637,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//<String, String>",no,undetermined,0,0,0,no,0.00295680190675367,no,0.0033804834766621877,no,0.0034348842877159366,no,0.0032511560799850007
2638,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// invokeinterface,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2639,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//end of array, start filling again from start",no,undetermined,0,0,0,no,0.0018496251452792447,no,0.002257116135960375,no,0.0021107082562830284,no,0.0019851771757164118
2640,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Set USE_REFLECTION_OPTIMIZER to false to fix HHH-227,no,undetermined,0,0,0,no,0.31652845817070835,no,0.2752598139598769,no,0.2694330059293505,no,0.27461117407322094
2641,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//orphan delete not supported for EntityMode.DOM4J,no,undetermined,0,0,0,no,0.008667677915094157,no,0.009096702065801642,no,0.008360384869830073,no,0.008022086222563335
2642,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//element = XMLHelper.generateDom4jElement( persister.getNodeName() );,no,undetermined,0,0,0,no,0.016712499135182055,no,0.0082445587946706,no,0.007828954623191766,no,0.0074781492031643785
2643,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// intentionally empty,no,undetermined,0,0,0,no,0.003644613594131404,no,0.004539019288401649,no,0.004347602997144553,no,0.004115441494444047
2644,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//we can reuse it for each row,no,undetermined,0,0,0,no,0.0009971120175608615,no,0.0034266810511379784,no,0.003377550326463857,no,0.0031998254816026197
2645,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//orphan delete not supported for EntityMode.DOM4J,no,undetermined,0,0,0,no,0.008667677915094157,no,0.009096702065801642,no,0.008360384869830073,no,0.008022086222563335
2646,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//can't reuse in this case,no,undetermined,0,0,0,no,0.005909895550896953,no,0.014240854856380979,no,0.013751739660617353,no,0.013322161916406677
2647,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//element = XMLHelper.generateDom4jElement( persister.getNodeName() );,no,undetermined,0,0,0,no,0.016712499135182055,no,0.0082445587946706,no,0.007828954623191766,no,0.0074781492031643785
2648,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//needed for SOAP libraries, etc",no,undetermined,0,0,0,no,0.006112809480546727,no,0.006290569287144217,no,0.006057124491915596,no,0.005739131114625436
2649,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//EARLY EXIT!,no,undetermined,0,0,0,no,0.002670991679035732,no,0.002232446739692084,no,0.002188658649593499,no,0.002052037746907664
2650,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// any earlier proxy takes precedence,no,undetermined,0,0,0,no,0.0027899114674026274,no,0.0026501959723532332,no,0.002571358515982849,no,0.0023496915147545104
2651,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// First we need to suspend any current JTA transaction and obtain // a JDBC connection,no,undetermined,0,0,0,no,0.014579966732519973,no,0.009287976794032848,no,0.009078187587028615,no,0.008802417641274303
2652,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//getResultList(results);,no,undetermined,0,0,0,no,0.0036199419513624174,no,0.004141070555746659,no,0.00407117351999449,no,0.003874765379526693
2653,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if we only returned one entity, query by key is more efficient",no,undetermined,0,0,0,no,0.041842279641145966,no,0.014260037427219145,no,0.013775841457079628,no,0.013318366024268396
2654,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the element has been removed from the set,no,undetermined,0,0,0,no,0.005403008985257285,no,0.006181583101554437,no,0.0059583503673026565,no,0.005691025154105845
2655,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the element has changed,no,undetermined,0,0,0,no,0.000503168925998065,no,0.0005233713896205878,no,0.0005138895965079229,no,0.0004712158517595005
2656,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.011763867789225897,no,0.011545915465813756,no,0.010170524800448342,no,0.009788537468922127
2657,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Careful: these methods do not initialize the collection.,no,undetermined,0,0,0,no,0.005240500584230205,no,0.0026196277496196387,no,0.002553267229856861,no,0.002430422450445738
2658,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//needed so that we remove this collection from the second-level cache,no,undetermined,0,0,0,no,0.03399319540596408,no,0.014274965007062598,no,0.01378399512592376,no,0.013313933976476771
2659,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// override on some subclasses,no,undetermined,0,0,0,no,0.002900192718399042,no,0.0031243843426356274,no,0.003030497997712505,no,0.0028612282464916265
2660,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//override on some subclasses,no,undetermined,0,0,0,no,0.002900192718399042,no,0.0031243843426356274,no,0.003030497997712505,no,0.0028612282464916265
2661,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//do this bit after setting initialized to true or it will recurse,no,undetermined,0,0,0,no,0.022474431787153845,no,0.014243606628683856,no,0.013772201278774468,no,0.013350608041088896
2662,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// create the collection holding the Orphans,no,undetermined,0,0,0,no,0.004386457083155689,no,0.003947127662932727,no,0.00383597237384347,no,0.003678796377461224
2663,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// collect EntityIdentifier(s) of the *current* elements - add them into a HashSet for fast access,no,undetermined,0,0,0,no,0.006290641685852184,no,0.008314979373983835,no,0.008324847222704402,no,0.007989270530157319
2664,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// iterate over the *old* list,no,undetermined,0,0,0,no,0.0021768552782114045,no,0.0022707006743062827,no,0.002130302212530825,no,0.0020116392947757186
2665,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// intentionally empty,no,undetermined,0,0,0,no,0.003644613594131404,no,0.004539019288401649,no,0.004347602997144553,no,0.004115441494444047
2666,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*(array==null) ? tempList.get(i) :*/,no,undetermined,0,0,0,no,0.0047555743508269485,no,0.004701469867566615,no,0.004203927468216615,no,0.004004319742471877
2667,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// a many-to-many; // decrement currentDepth here to allow join across the association table // without exceeding MAX_FETCH_DEPTH (i.e. the ""currentDepth - 1"" bit)",no,undetermined,0,0,0,no,0.024816788257926235,no,0.01425704831861839,no,0.013777661303722762,no,0.013308133675178418
2668,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//write(); -- doesn't,no,undetermined,0,0,0,no,0.0023289138020701427,no,0.001965802416346486,no,0.001898098963824717,no,0.0017764375318384473
2669,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//write(); -- doesn't,no,undetermined,0,0,0,no,0.0023289138020701427,no,0.001965802416346486,no,0.001898098963824717,no,0.0017764375318384473
2670,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this is the regression style determination which matches the logic of the classic translator,no,undetermined,0,0,0,no,0.0021907583486132356,no,0.003182847343238615,no,0.002969749106494221,no,0.0028222051869922155
2671,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// a collection loaded in the current session // can not possibly be the collection belonging // to the entity passed to update(),no,undetermined,0,0,0,no,0.008549074487936115,no,0.004862745892084826,no,0.004671030530707698,no,0.004527927859983043
2672,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// handle empty collection,no,undetermined,0,0,0,no,0.012604835040339551,no,0.002782769193643174,no,0.002729439115085629,no,0.0026065331585445944
2673,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//handle empty collections,no,undetermined,0,0,0,no,0.016475988581511926,no,0.009075057135892834,no,0.008812227121773175,no,0.008653133872314162
2674,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// else this is not a collection initializer (and empty collections will // be detected by looking for the owner's identifier in the result set),no,undetermined,0,0,0,no,0.009035166092051605,no,0.006670628561575285,no,0.006961962366810348,no,0.006719955366641892
2675,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//needed for SOAP libraries, etc",no,undetermined,0,0,0,no,0.006112809480546727,no,0.006290569287144217,no,0.006057124491915596,no,0.005739131114625436
2676,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// finally, what it's all about...",no,undetermined,0,0,0,no,0.00891038583041374,no,0.007666299246195113,no,0.007463769711256243,no,0.007159103893356972
2677,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// here we do not bother with the discriminator.,no,undetermined,0,0,0,no,0.017008477747838046,no,0.014253382304386593,no,0.013787664303076447,no,0.013341560320801808
2678,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// validate() instances of Validatable,no,undetermined,0,0,0,no,0.017677602545274236,no,0.014269126524590395,no,0.013780516126147283,no,0.013335056192579317
2679,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//null version means the object is in the process of being loaded somewhere else in the ResultSet,no,undetermined,0,0,0,no,0.006942159972844474,no,0.005296874158779187,no,0.005100413612117935,no,0.004718514569863309
2680,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//problematic for <key-many-to-one>!,no,undetermined,0,0,0,no,0.000517353743429138,no,0.0007773431620271339,no,0.0007650177455099375,no,0.0007063905795288035
2681,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//use the id passed in,no,undetermined,0,0,0,no,0.010796238264605497,no,0.008434725234656687,no,0.008278359856740868,no,0.00799717492250343
2682,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The property is a collection...,no,undetermined,0,0,0,no,0.010520313406613007,no,0.004999494049455239,no,0.004980516704304407,no,0.004812451612654428
2683,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Anyway, here we implement <set> semantics for a // <one-to-many> <bag>!",no,undetermined,0,0,0,no,0.28142015576047197,no,0.20121113019582046,no,0.20948131740330075,no,0.21189573233072295
2684,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//a shortcut if its location didn't change!,no,undetermined,0,0,0,no,0.022519621779061874,no,0.01425081040111899,no,0.013789133667656715,no,0.013325112326310538
2685,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//search for it //note that this code is incorrect for other than one-to-many,no,undetermined,0,0,0,no,0.27042570908355157,no,0.2153588582872061,no,0.2151328879038355,no,0.2168914502002728
2686,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//a composite key,no,undetermined,0,0,0,no,0.0026519021119335313,no,0.002260245449697232,no,0.002131535191058918,no,0.002004211320976623
2687,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if no batch, use ""foo = ? and bar = ?""",no,undetermined,0,0,0,no,0.007406782245192517,no,0.009222556402093613,no,0.00905052790192153,no,0.00869431112716587
2688,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//it must be a collection fetch,no,undetermined,0,0,0,no,0.008549909116734426,no,0.003952231754196889,no,0.0038121671092141113,no,0.0035626353872532657
2689,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// needed later for many-to-many/filter application,no,undetermined,0,0,0,no,0.06686967382244295,no,0.014242957778985947,no,0.01377114953945328,no,0.013328353113485437
2690,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*&& etype.isReferenceToPrimaryKey()*/,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2691,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Collection wrappers, by the CollectionKey //key=CollectionKey, value=PersistentCollection",no,undetermined,0,0,0,no,0.0017037041055861855,no,0.002664498993307446,no,0.0025479335280546756,no,0.00244671307560607
2692,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// it might still need to apply a collection ordering based on a // many-to-many defined order-by...,no,undetermined,0,0,0,no,0.017251423566557074,no,0.013597751557533884,no,0.013003675253841903,no,0.01275471315081017
2693,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// belong to other persister // belong to other persister,no,undetermined,0,0,0,no,0.04088368445847164,no,0.014262425461946015,no,0.013788616188302457,no,0.01334679066831582
2694,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we found it,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2695,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//we can use an inner join for the many-to-many,no,undetermined,0,0,0,no,0.005250400345450237,no,0.004041716397073148,no,0.003974318083251268,no,0.0037741763359040357
2696,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//disable a join back to this same association,no,undetermined,0,0,0,no,0.003290784745876054,no,0.0025622662184814327,no,0.0025495317166076277,no,0.002397194796412863
2697,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//NOTE: unlike all other Loaders, this one is NOT //      multithreaded, or cacheable!!",no,undetermined,0,0,0,no,0.013224964271193294,no,0.014275533412060025,no,0.01375069115762401,no,0.013306186570586574
2698,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//the user visible aliases, which are unknown to the superclass, //these are not the actual ""physical"" SQL aliases",no,undetermined,0,0,0,no,0.0028380822647874966,no,0.002750564447138203,no,0.005777931461386079,no,0.005523999666998261
2699,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Let return-propertys override whatever the persister has for aliases.,no,undetermined,0,0,0,no,0.009312382642973271,no,0.005894444213736685,no,0.009910959052377868,no,0.009322972330757994
2700,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//alias may be null //EARLY EXIT,no,undetermined,0,0,0,no,0.007171772510761998,no,0.006612971990294288,no,0.006262164073455072,no,0.005985966664152749
2701,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// if it is a compound path,no,undetermined,0,0,0,no,0.017426257264646264,no,0.014270138143925939,no,0.013779038110963194,no,0.013323358960877805
2702,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if its the root criteria, we are done",no,undetermined,0,0,0,no,0.0030931392267905763,no,0.007475691897953555,no,0.007235460905124411,no,0.006955618378177124
2703,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// otherwise, recurse",no,undetermined,0,0,0,no,0.008215187630447983,no,0.014270396218583049,no,0.013795498385670337,no,0.013333934582125393
2704,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//the criteria instance,no,undetermined,0,0,0,no,0.0034064571137952435,no,0.014252135863038,no,0.013768038943338355,no,0.01333567355978665
2705,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the entity name,no,undetermined,0,0,0,no,0.004696594366985424,no,0.002929242518985376,no,0.002803436829512337,no,0.002667824074962013
2706,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//not found in inner query , try the outer query",no,undetermined,0,0,0,no,0.003304698626551574,no,0.004122411915109733,no,0.003130343088049199,no,0.0029701910955673635
2707,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//not found in inner query , try the outer query",no,undetermined,0,0,0,no,0.003304698626551574,no,0.004122411915109733,no,0.003130343088049199,no,0.0029701910955673635
2708,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//it refers to an alias of a projection,no,undetermined,0,0,0,no,0.004449858033750753,no,0.004801770421754278,no,0.004570874179370805,no,0.004333703105349781
2709,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//should never happen, i think",no,undetermined,0,0,0,no,0.01325733087152474,no,0.014250399729819101,no,0.013758162735291225,no,0.013312623925849058
2710,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Convert the string value into the proper type.,no,undetermined,0,0,0,no,0.017932328720444774,no,0.014275243185480003,no,0.013757441366964695,no,0.013334860270168968
2711,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//needed for SOAP libraries, etc",no,undetermined,0,0,0,no,0.006112809480546727,no,0.006290569287144217,no,0.006057124491915596,no,0.005739131114625436
2712,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// and the qualifier is not the alias of this criteria //      -> check to see if we belong to some criteria other //          than the one that created us,no,undetermined,0,0,0,no,0.009897173978020014,no,0.014259727261956843,no,0.0137511569033363,no,0.013315167172387538
2713,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//it does not refer to an alias of a projection, //look for a property",no,undetermined,0,0,0,no,0.007393217473135954,no,0.00793696792780242,no,0.007421669413124562,no,0.0071035750202943565
2714,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//search for it //note that this code is incorrect for other than one-to-many,no,undetermined,0,0,0,no,0.27042570908355157,no,0.2153588582872061,no,0.2151328879038355,no,0.2168914502002728
2715,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Otherwise, this is an ordinary value.",no,undetermined,0,0,0,no,0.0008311044468180922,no,0.0009929822214564815,no,0.001125188150216738,no,0.0010523485830129424
2716,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Currently *not* cachable if autodiscover types is in effect (e.g. ""select * ..."")",no,undetermined,0,0,0,no,0.03089367753810237,no,0.014267678440703157,no,0.01379525939114556,no,0.013332434249786964
2717,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// List OPERATIONS:,no,undetermined,0,0,0,no,0.00852680602779545,no,0.008182252124188126,no,0.007871773467695005,no,0.007549622531119212
2718,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	private final String[] sqlAliases; //	private final String[] sqlAliasSuffixes;,no,undetermined,0,0,0,no,0.0069632289407249755,no,0.0099685696653769,no,0.00955966118100169,no,0.009206810178279802
2719,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this is only needed (afaict) for ResultTransformer processing...,no,undetermined,0,0,0,no,0.08217056215208092,no,0.014233658780562698,no,0.013779500542143846,no,0.013344453329961958
2720,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// determine if the collection elements are entities...,no,undetermined,0,0,0,no,0.013919090157183962,no,0.01424969526329077,no,0.013764876070855804,no,0.01332092124944869
2721,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// replace {....} with corresponding column aliases,no,undetermined,0,0,0,no,0.005528370487323669,no,0.0046177727068398705,no,0.008924994893316912,no,0.008599184818691073
2722,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// No additional open braces found in the string, append the // rest of the string in its entirty and quit this loop",no,undetermined,0,0,0,no,0.020273527241876664,no,0.014277860057277571,no,0.013792130470753398,no,0.013302934828405017
2723,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// apend everything up until the next encountered open brace,no,undetermined,0,0,0,no,0.012470188055171328,no,0.012802142833060795,no,0.012964445276032665,no,0.01257453956281843
2724,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//pad with nulls from the current last element up to the new index,no,undetermined,0,0,0,no,0.004687744083534708,no,0.0063057869654220755,no,0.0061990862759836295,no,0.00593588933346722
2725,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// it is a simple table alias {foo},no,undetermined,0,0,0,no,0.0010712471624482343,no,0.000973140281337077,no,0.0008710815025904296,no,0.0008084091565436871
2726,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// passing through anything we do not know : to support jdbc escape sequences HB-898,no,undetermined,0,0,0,no,0.01484046491670565,no,0.014239648667538213,no,0.013779032500503753,no,0.013347149120698693
2727,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// passing through anything we do not know : to support jdbc escape sequences HB-898,no,undetermined,0,0,0,no,0.01484046491670565,no,0.014239648667538213,no,0.013779032500503753,no,0.013347149120698693
2728,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The current alias is referencing the collection to be eagerly fetched,no,undetermined,0,0,0,no,0.019914954837946832,no,0.014269929136688767,no,0.013786952442674546,no,0.013327164906683531
2729,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// it is a property reference {foo.bar},no,undetermined,0,0,0,no,0.009348120572710701,no,0.008827372587261979,no,0.007977196306134842,no,0.007608829792629576
2730,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*package*/,no,undetermined,0,0,0,no,0.0024028778345724696,no,0.0026803190818122666,no,0.0025599410532666095,no,0.002410048974527652
2731,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//NOTE: EARLY EXIT!,no,undetermined,0,0,0,no,0.009851730953002773,no,0.008447576969000298,no,0.00839580091061771,no,0.007973154111423878
2732,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	private final List scalarTypes = new ArrayList(); //	private final List scalarColumnAliases = new ArrayList();,no,undetermined,0,0,0,no,0.008034897596162978,no,0.010806435242077595,no,0.010302999632128749,no,0.00994840329199155
2733,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Now, process the returns",no,undetermined,0,0,0,no,0.0014022557822488562,no,0.0009129390190085913,no,0.0008722034372593952,no,0.0007637421444902552
2734,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// already been processed...,no,undetermined,0,0,0,no,0.002090777086678784,no,0.0029613208717358653,no,0.0029228528392483445,no,0.002762047294777568
2735,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// already been processed...,no,undetermined,0,0,0,no,0.002090777086678784,no,0.0029613208717358653,no,0.0029228528392483445,no,0.002762047294777568
2736,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Make sure the owner alias is known...,no,undetermined,0,0,0,no,0.005765686437720707,no,0.007045800120351559,no,0.006810217601074696,no,0.006496816236340538
2737,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		scalarColumnAliases.add( typeReturn.getColumnAlias() ); //		scalarTypes.add( typeReturn.getType() );,no,undetermined,0,0,0,no,0.0030799902910516566,no,0.002535853768313075,no,0.002698869903538021,no,0.0025418910361728955
2738,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If this return's alias has not been processed yet, do so b4 further processing of this return",no,undetermined,0,0,0,no,0.007283880121926853,no,0.010781271950032423,no,0.010124225498086807,no,0.009763899791567887
2739,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//			collectionOwnerAliases.add( ownerAlias );,no,undetermined,0,0,0,no,0.0022048347179757614,no,0.0016784027429774203,no,0.00224188081618006,no,0.00210688983040643
2740,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//needed for SOAP libraries, etc",no,undetermined,0,0,0,no,0.006112809480546727,no,0.006290569287144217,no,0.006057124491915596,no,0.005739131114625436
2741,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//needed for SOAP libraries, etc",no,undetermined,0,0,0,no,0.006112809480546727,no,0.006290569287144217,no,0.006057124491915596,no,0.005739131114625436
2742,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// from Map,no,undetermined,0,0,0,no,0.0030378770996634125,no,0.0031986987325905063,no,0.003112779356198223,no,0.002799536931219608
2743,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// from SortedMap,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2744,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// cannot be instantiated,no,undetermined,0,0,0,no,0.003320678927779338,no,0.0024262699935691284,no,0.001948083515694242,no,0.001865995698712224
2745,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//inject the data,no,undetermined,0,0,0,no,0.014131628905485034,no,0.013597395398575017,no,0.01307014579553726,no,0.012634143737641684
2746,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//default pool size 20,no,undetermined,0,0,0,no,0.004846790912104511,no,0.004796158268736357,no,0.00466817950127118,no,0.004440654517939409
2747,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if debug level is enabled, then log the password, otherwise mask it",no,undetermined,0,0,0,no,0.007565784325241709,no,0.009266111277114202,no,0.00898296461511769,no,0.008605491586602664
2748,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// register a cleanup synch,no,undetermined,0,0,0,no,0.006056984554393387,no,0.0061897122115666635,no,0.0060425421151012815,no,0.005824445315224141
2749,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// wrap the session in the transaction-protection proxy,no,undetermined,0,0,0,no,0.003466590717844362,no,0.001879811440134451,no,0.001691821373366181,no,0.0014434051258107844
2750,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// then bind it,no,undetermined,0,0,0,no,0.0026044942547138743,no,0.0023143287358805367,no,0.002343096552257984,no,0.0022006779663850083
2751,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this property belongs on the table and is to be inserted,no,undetermined,0,0,0,no,0.047157968997955574,no,0.014233422080757636,no,0.01376475222073032,no,0.01331886477626878
2752,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// limit the methods available if no transaction is active,no,undetermined,0,0,0,no,0.009995618657438601,no,0.00811533752246893,no,0.007813429567802796,no,0.007527350449883667
2753,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// allow these (deprecated) methods to pass through,no,undetermined,0,0,0,no,0.023649969228896103,no,0.014245181836248113,no,0.013749391251104701,no,0.013312535225424955
2754,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.007300964074651916,no,0.014279917751328334,no,0.013759547530786924,no,0.013332739932731406
2755,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// add temp entry so that the next step is circular-reference // safe - only needed because some types don't take proper // advantage of two-phase-load (esp. components),no,undetermined,0,0,0,no,0.01740165658190059,no,0.014264190483568811,no,0.013776006675584273,no,0.013340908506574893
2756,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// this is the second pass through on a merge op, so here we limit the // replacement to associations types (value types were already replaced // during the first pass)",no,undetermined,0,0,0,no,0.007277377365338244,no,0.008727847534163061,no,0.00838351883246554,no,0.008018132435174973
2757,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//EARLY EXIT,no,undetermined,0,0,0,no,0.002670991679035732,no,0.002232446739692084,no,0.002188658649593499,no,0.002052037746907664
2758,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Handle collection-fiter compilation. // IMPORTANT NOTE: This is modifying the INPUT (HQL) tree, not the output tree!",no,undetermined,0,0,0,no,0.02035104732039309,no,0.013463748473526577,no,0.013499172548190887,no,0.013112796562434921
2759,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Initialize the error handling delegate.,no,undetermined,0,0,0,no,0.0072231567737179965,no,0.0065719829140322246,no,0.006392161157501091,no,0.006111803740307896
2760,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//cannot be instantiated,no,undetermined,0,0,0,no,0.003320678927779338,no,0.0024262699935691284,no,0.001948083515694242,no,0.001865995698712224
2761,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//private String propertyName;,no,undetermined,0,0,0,no,0.013129053873497488,no,0.014240099732510865,no,0.013763324197294867,no,0.013316544139187413
2762,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Use the delegate.,no,undetermined,0,0,0,no,0.006436313866733458,no,0.005610697577373194,no,0.0052625740426617655,no,0.005028659860282434
2763,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//String[] fk = StringHelper.qualify( ""collection_"", cp.getKeyColumnNames() );",no,undetermined,0,0,0,no,0.023652872731765296,no,0.014230113122869446,no,0.013756836265598527,no,0.013322984517484359
2764,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//"" collection_ where "" +",no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2765,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//unsupported,no,undetermined,0,0,0,no,0.00609978782334671,no,0.006793041669973381,no,0.006489006537038833,no,0.00620244972148346
2766,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//unsupported,no,undetermined,0,0,0,no,0.00609978782334671,no,0.006793041669973381,no,0.006489006537038833,no,0.00620244972148346
2767,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if not a composite key, use ""foo in (?, ?, ?)"" for batching // if no batch, and not a composite key, use ""foo = ?""",no,undetermined,0,0,0,no,0.003910898861819808,no,0.003882865591111452,no,0.003725707328803432,no,0.0035294229303802333
2768,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// currently only the Hibernate-supplied DbTimestampType is supported here,no,undetermined,0,0,0,no,0.006663191128064969,no,0.014267122020156538,no,0.013763244227820203,no,0.01331639385898493
2769,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//cannot be instantiated,no,undetermined,0,0,0,no,0.003320678927779338,no,0.0024262699935691284,no,0.001948083515694242,no,0.001865995698712224
2770,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This is called when it's time to fully resolve a path expression.,no,undetermined,0,0,0,no,0.05859812841584755,no,0.014247983436740016,no,0.013794351980234675,no,0.013343280148524084
2771,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//implicit polymorphism not supported (would need a union),no,undetermined,0,0,0,no,0.04412527833549303,no,0.014235316758591271,no,0.0137731080571972,no,0.013337810463764786
2772,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//pull off the last "", """,no,undetermined,0,0,0,no,0.0073828285762390445,no,0.007868683914187151,no,0.00767262252831377,no,0.007323514650709965
2773,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//$NON-NLS-1,no,undetermined,0,0,0,no,0.008901048514311482,no,0.009626142740322845,no,0.009228004327805595,no,0.008861387317920397
2774,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//always do an INSERT, and let it fail by constraint violation",no,undetermined,0,0,0,no,0.002582872678313538,no,0.0044380386362186134,no,0.004179114367901091,no,0.0039657824506224805
2775,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//by default, natural-ids are ""immutable"" (constant)",no,undetermined,0,0,0,no,0.0061106219564740685,no,0.007709950525602606,no,0.007421838894261694,no,0.007126154271138597
2776,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we have the form: trim(from trimSource). //      This is functionally equivalent to trim(trimSource),no,undetermined,0,0,0,no,0.003417479158488232,no,0.0114130636050185,no,0.010782640058343241,no,0.01041118959723644
2777,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// NOT_SUPPORTED_SHOULD_USE_JDBC3_PreparedStatement.getGeneratedKeys_method,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2778,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// make a new one,no,undetermined,0,0,0,no,0.005330089504797434,no,0.004678973642730659,no,0.004574324046878533,no,0.004355954522955229
2779,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// astore 4 // store the raw bean,no,undetermined,0,0,0,no,0.002343851230937923,no,0.002807860437506389,no,0.0027952519493367094,no,0.002620612240720042
2780,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0029192075517518335,no,0.0019428635406165216,no,0.0019258753864740586,no,0.0018095004858472681
2781,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// not so sure this is even valid subtree.  but if it was, it'd // represent two unrelated table references...",no,undetermined,0,0,0,no,0.028736254277465824,no,0.014254365468328275,no,0.01377187202997796,no,0.013305153794454154
2782,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// NOTE : firstRow is zero-based,no,undetermined,0,0,0,no,0.013095539219771623,no,0.014101529769376885,no,0.013773872069993684,no,0.013254720180272763
2783,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// grrr... for differentiation of mysql storage engines,no,undetermined,0,0,0,no,0.00017094365186303562,no,0.0003985605343654476,no,0.00039122782471448406,no,0.00035580112747989685
2784,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* current stack len = 0 */,no,undetermined,0,0,0,no,0.004003558117982005,no,0.0038024130151694925,no,0.0038176439557552747,no,0.003631630802078088
2785,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//String[] keyCols = collPersister.getKeyColumnNames();,no,undetermined,0,0,0,no,0.00295680190675367,no,0.0033804834766621877,no,0.0034348842877159366,no,0.0032511560799850007
2786,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Oracle did add support for ANSI CASE statements in 9i,no,undetermined,0,0,0,no,0.0021430526529690468,no,0.002965505664393678,no,0.002790718144156294,no,0.002631555711856863
2787,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the standard SQL function name is current_timestamp...,no,undetermined,0,0,0,no,0.0014147869846137125,no,0.0023462077746822297,no,0.0022792022146928322,no,0.002150871774223832
2788,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//refresh() does not pass an entityName,no,undetermined,0,0,0,no,0.007928784003131573,no,0.010865679955311404,no,0.010539912311914772,no,0.010094433989235341
2789,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Informix doesn't have a bit type,no,undetermined,0,0,0,no,0.02363555360334866,no,0.014255092781633035,no,0.01378165594275114,no,0.013327138117752328
2790,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// (NOT (GT a b) ) => (LE a b),no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2791,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// strip table-owner because Informix always returns constraint names as ""<table-owner>.<constraint-name>""",no,undetermined,0,0,0,no,0.0034895940929304797,no,0.003358919376438372,no,0.0033384173194485004,no,0.00316505557923888
2792,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// build the map of standard ANSI SQL aggregation functions ~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0011729589398953952,no,0.0015680911706786537,no,0.0014980724852227125,no,0.0013623259165798148
2793,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//pre H3.2 behavior: super.getReturnType(ct, m);",no,undetermined,0,0,0,no,0.0317240084335731,no,0.01423514687489094,no,0.01375791576493976,no,0.013299273350014872
2794,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// finally use the sqltype if == on Hibernate types did not find a match.,no,undetermined,0,0,0,no,0.007522736275587655,no,0.01237540077224515,no,0.012331347068617706,no,0.011988761657730246
2795,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//because numeric can be anything,no,undetermined,0,0,0,no,0.005831049817235743,no,0.005689430982828648,no,0.004221313930437243,no,0.00432197563001122
2796,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// constructors and factory methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.013223852671226038,no,0.014229766742804498,no,0.013780594165577285,no,0.01333085128374787
2797,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// standard sql92 functions (can be overridden by subclasses),no,undetermined,0,0,0,no,0.002676304519076099,no,0.003185941260740294,no,0.0030313571608507573,no,0.0028578862204772792
2798,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//map second/minute/hour/day/month/year to ANSI extract(), override on subclasses",no,undetermined,0,0,0,no,0.005826813714943915,no,0.0053705636412547,no,0.005157219425456649,no,0.004830109830303032
2799,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// database type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.014263316051629874,no,0.011762875164667268,no,0.011054751016384028,no,0.010563784309224004
2800,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// hibernate type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.008598152233538568,no,0.014249805504967888,no,0.013802040837783691,no,0.013340609544408587
2801,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//private Type[] sqlResultTypes;,no,undetermined,0,0,0,no,0.008348239416458084,no,0.00825938912592636,no,0.00885284431485188,no,0.008416752743713443
2802,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// native identifier generatiion ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0033682876385181244,no,0.0034400442731364433,no,0.00330059124701516,no,0.0031188755907186443
2803,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// IDENTITY support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.004655838065453289,no,0.012128811533153452,no,0.011942329564856446,no,0.011578237376514266
2804,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// SEQUENCE support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.012155127129392344,no,0.010071632330545994,no,0.009795924045041243,no,0.00937785045088488
2805,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// limit/offset support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0043685883898681565,no,0.007401903533936616,no,0.007194152422000662,no,0.006876365987721063
2806,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// by default we report no support,no,undetermined,0,0,0,no,0.03885801402801245,no,0.014260266741294934,no,0.013792389998113703,no,0.013331639671892132
2807,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//sqlResultTypes = selectClause.getSqlResultTypes();,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2808,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// by default we report no support for NOWAIT lock semantics,no,undetermined,0,0,0,no,0.06330304218024595,no,0.014232558079098854,no,0.013767705087182478,no,0.013310562670507405
2809,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.05158855895183377,no,0.01426285738794102,no,0.01377206414062369,no,0.013331191122679146
2810,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.01840135346856906,no,0.014259330172444101,no,0.013785901001071176,no,0.013316445812881737
2811,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// current timestamp support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.003014061663041288,no,0.005146584211164619,no,0.005081492404531848,no,0.004834485233877062
2812,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.006927532883602286,no,0.005072580630937288,no,0.004981387994095583,no,0.004719457788542873
2813,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// identifier quoting support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.011186707993204294,no,0.01395732841028148,no,0.013317350296468352,no,0.012856295913385949
2814,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//by default,no,undetermined,0,0,0,no,0.00031881819291795603,no,0.0003285017699772633,no,0.0003106464722396142,no,0.00028333751659686163
2815,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This is now handled earlier in this method.,no,undetermined,0,0,0,no,0.02293957437773909,no,0.014274237241400983,no,0.013784481598014884,no,0.013323933449177384
2816,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// -- Loader implementation --,no,undetermined,0,0,0,no,0.004187105716365586,no,0.006136851070545971,no,0.006063643630873215,no,0.005792329718322681
2817,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// -- Loader overrides --,no,undetermined,0,0,0,no,0.002309529791334881,no,0.0018362325920506946,no,0.0018229270429775451,no,0.0017025377438633213
2818,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// (NOT (IS_NULL a b) ) => (IS_NOT_NULL a b),no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2819,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// here assume SQLServer2005 using snapshot isolation, which does not have this problem",no,undetermined,0,0,0,no,0.03654058703184908,no,0.01425673896496105,no,0.013786312558233428,no,0.013332108746540922
2820,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//NONE, because its the requested lock mode, not the actual! ",no,undetermined,0,0,0,no,0.002440341928870918,no,0.0020668968680680497,no,0.002559362735099457,no,0.002416009317703745
2821,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// --- Query translator methods ---,no,undetermined,0,0,0,no,0.012046785385095843,no,0.01200429146271465,no,0.010236841986704312,no,0.009938996900686652
2822,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Oracle8 and previous define only a ""DATE"" type which //      is used to represent all aspects of date/time",no,undetermined,0,0,0,no,0.015906863710198563,no,0.014277986159894665,no,0.013789371884745171,no,0.013340673384830472
2823,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//starts with 1, implicitly",no,undetermined,0,0,0,no,0.004348937010397405,no,0.006069118632529209,no,0.006031372656906836,no,0.005800910070889385
2824,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//"" cascade"";",no,undetermined,0,0,0,no,0.0032935101036043316,no,0.014266261512849326,no,0.013798226135716905,no,0.013324741332252768
2825,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// -- Implementation private methods --,no,undetermined,0,0,0,no,0.013411470302545931,no,0.014260958834926578,no,0.013778787009187048,no,0.013311524654073552
2826,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//trim off the length/precision/scale,no,undetermined,0,0,0,no,0.008275907084666549,no,0.014263356455003533,no,0.013795737014492528,no,0.013317820328231866
2827,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// CHECK VIOLATION,no,undetermined,0,0,0,no,0.002366121453952985,no,0.0031112760514768875,no,0.00016522256877326487,no,0.000149585977923239
2828,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// UNIQUE VIOLATION,no,undetermined,0,0,0,no,0.00764243340928611,no,0.008950841650485312,no,0.008619534927719493,no,0.008279120525623835
2829,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// FOREIGN KEY VIOLATION,no,undetermined,0,0,0,no,0.0013621752263127224,no,0.0014454663011202787,no,0.0014460284842595158,no,0.0013492774979737747
2830,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//deduplicate unique constraints sharing the same columns //this is needed by Hibernate Annotations since it creates automagically // unique constraints for the user,no,undetermined,0,0,0,no,0.00030170514143904216,no,0.0015225640663627175,no,0.001499912538345962,no,0.0013980353761601217
2831,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0029192075517518335,no,0.0019428635406165216,no,0.0019258753864740586,no,0.0018095004858472681
2832,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// to support dialects that have their own identity data type,no,undetermined,0,0,0,no,0.014499048039162814,no,0.014238030944211577,no,0.013772469188461476,no,0.013334038053078767
2833,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// NOT NULL VIOLATION,no,undetermined,0,0,0,no,0.013222556340648216,no,0.009918052080171226,no,0.00946412573100924,no,0.009230962605114459
2834,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ALL OTHER,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2835,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Register the type of the out param - PostgreSQL uses Types.OTHER,no,undetermined,0,0,0,no,0.08291856543675621,no,0.014250842046778225,no,0.013776335933171423,no,0.013330779788969863
2836,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// seems to have spotty LOB suppport,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2837,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// HHH-2300,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2838,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ignore (probably H2 not in the classpath),no,undetermined,0,0,0,no,0.026418140821730923,no,0.014237336417215897,no,0.013775172537721652,no,0.013330254450649693
2839,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Prepare the left hand side and get the data type.,no,undetermined,0,0,0,no,0.0032045833580196187,no,0.004511005934054591,no,0.004356367674700782,no,0.004097844023369053
2840,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Numeric Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.006758966876932963,no,0.006484572705295268,no,0.005162487700804356,no,0.005115359712111275
2841,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//used also for generation of FK names!,no,undetermined,0,0,0,no,0.02511867259194162,no,0.013711577863281572,no,0.013237670491623686,no,0.012740079277045225
2842,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//usually useless,no,undetermined,0,0,0,no,0.012108054434489205,no,0.012226355211594942,no,0.011895426532490995,no,0.01156053854006436
2843,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//do not add unique constraint on DB not supporting unique and nullable columns,no,undetermined,0,0,0,no,0.002965624495018174,no,0.0030133222425917164,no,0.002938145230538837,no,0.002771060617347686
2844,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//for backward compatibility, disable this:",no,undetermined,0,0,0,no,0.0029966724556476742,no,0.006222815677781161,no,0.0060373383344737705,no,0.00576031015326294
2845,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//may be final //may be final //may be final,no,undetermined,0,0,0,no,0.004006403655098013,no,0.008139951982838218,no,0.007679158453880539,no,0.007359023327098456
2846,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//may be final,no,undetermined,0,0,0,no,0.004006403655098013,no,0.008139951982838218,no,0.007679158453880539,no,0.007359023327098456
2847,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// may be final,no,undetermined,0,0,0,no,0.004006403655098013,no,0.008139951982838218,no,0.007679158453880539,no,0.007359023327098456
2848,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Custom SQL,no,undetermined,0,0,0,no,0.0036602458763009592,no,0.0021052595716952883,no,0.0020567741268323666,no,0.0019350200804244338
2849,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Primary key constraint,no,undetermined,0,0,0,no,0.0062604377077076084,no,0.005196211820726527,no,0.004952642756471178,no,0.004717142200818877
2850,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ignore it...,no,undetermined,0,0,0,no,0.0003489690046840201,no,0.0004791828875098961,no,0.0004737640273004505,no,0.00043449603121796743
2851,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Time and Date Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.004973956532016152,no,0.004836917569392416,no,0.004462819800892463,no,0.004225025520417173
2852,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// System Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.007984917423299577,no,0.008436720990559504,no,0.00796718470110064,no,0.007591593471179984
2853,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// not null is implicit,no,undetermined,0,0,0,no,0.019519053735629087,no,0.014269146905527141,no,0.013791957401431831,no,0.013341085537961888
2854,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Display the dialect version.,no,undetermined,0,0,0,no,0.03510057980665874,no,0.014253643986541423,no,0.013763380511156479,no,0.013331211675762344
2855,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// nothing to do in a stateful session,no,undetermined,0,0,0,no,0.002473024906042456,no,0.0020012997337244395,no,0.0019386096671356271,no,0.001822429062934367
2856,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The RDMS concat() function only supports 2 parameters,no,undetermined,0,0,0,no,0.004038000295620073,no,0.004980976283928288,no,0.004840283828923942,no,0.0046286569737745056
2857,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//flat recursive algorithm,no,undetermined,0,0,0,no,0.005853603264400581,no,0.006273946232326386,no,0.0059523524331157535,no,0.005708316710750591
2858,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//an identifier mapper => getKey will be included in the getNonDuplicatedPropertyIterator() //and checked later, so it needs to be excluded",no,undetermined,0,0,0,no,0.036142736081548124,no,0.014251487301008184,no,0.013765966190041305,no,0.013340657661164618
2859,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* current stack len = 0 */,no,undetermined,0,0,0,no,0.004003558117982005,no,0.0038024130151694925,no,0.0038176439557552747,no,0.003631630802078088
2860,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Dialect method overrides ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.021317676813343806,no,0.014232720532296626,no,0.01377019088492916,no,0.01330978629201068
2861,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Custom SQL,no,undetermined,0,0,0,no,0.0036602458763009592,no,0.0021052595716952883,no,0.0020567741268323666,no,0.0019350200804244338
2862,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Primary key constraint,no,undetermined,0,0,0,no,0.0062604377077076084,no,0.005196211820726527,no,0.004952642756471178,no,0.004717142200818877
2863,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Original Dialect.java returns "" for update"";",no,undetermined,0,0,0,no,0.015370302535089347,no,0.014235900351731287,no,0.01377485374111319,no,0.013333515988606638
2864,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//pass the column name (a generated id almost always has a single column),no,undetermined,0,0,0,no,0.029242375123487565,no,0.01425281164790034,no,0.013760739171905659,no,0.013310809178988274
2865,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//needed to satisfy KeyValue,no,undetermined,0,0,0,no,0.009513249466763157,no,0.010282511727811895,no,0.009829238158389195,no,0.009397974115118024
2866,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Verify the state of this new method in Hibernate 3.0 Dialect.java,no,undetermined,0,0,0,no,0.009176231378623879,no,0.014252076938395924,no,0.013773637293811213,no,0.01332175761802138
2867,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Origial Dialect.java returns true;,no,undetermined,0,0,0,no,0.03942266717882643,no,0.01427851498840753,no,0.013759782125556242,no,0.013304319990316936
2868,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// index should be last column listed,no,undetermined,0,0,0,no,0.0024555464684740953,no,0.0036695124051291054,no,0.0036011995181038994,no,0.0034214133014156592
2869,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// *** Sequence methods - start. The RDMS dialect needs these,no,undetermined,0,0,0,no,0.04294725265920554,no,0.014258605008168647,no,0.013785222133232624,no,0.013344164864235073
2870,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// methods to make it possible to use the Native Id generator,no,undetermined,0,0,0,no,0.07044552369537564,no,0.014232016845017606,no,0.013779211568169443,no,0.013316958311830208
2871,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if it is a formula index, use the element columns in the PK",no,undetermined,0,0,0,no,0.002176894919125181,no,0.012684185770013654,no,0.012284143524107493,no,0.011955351931668263
2872,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// don't create a unique key, 'cos some // databases don't like a UK on nullable // columns",no,undetermined,0,0,0,no,0.020104972258037795,no,0.014263882750203308,no,0.013797096880283539,no,0.013319806075542928
2873,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// *** Sequence methods - end,no,undetermined,0,0,0,no,0.00879549476271558,no,0.005628950447180138,no,0.0055311818116120706,no,0.005268599689183822
2874,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// },no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2875,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//starts with 1, implicitly",no,undetermined,0,0,0,no,0.004348937010397405,no,0.006069118632529209,no,0.006031372656906836,no,0.005800910070889385
2876,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Used with DROP TABLE to delete all records in the table.,no,undetermined,0,0,0,no,0.02029230849024017,no,0.014257723060042703,no,0.013769920144941257,no,0.013344444541498225
2877,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// no foreign key element of for a one-to-many,no,undetermined,0,0,0,no,0.0014428341181908584,no,0.001507344487029336,no,0.0014890849555371849,no,0.0013917252362842046
2878,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//TODO: we could just return all false...,no,undetermined,0,0,0,yes,0.9727873326247758,no,0.01424319577121838,no,0.013783706985190793,no,0.013329035767996501
2879,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the case of a foreign key to something other than the pk is handled in createPropertyRefConstraints,no,undetermined,0,0,0,no,0.0028279867842892882,no,0.0022196404827396015,no,0.002194650873436286,no,0.002086187113556755
2880,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the object is persistent,no,undetermined,0,0,0,no,0.002994321957128707,no,0.003357694760683131,no,0.003139295979122192,no,0.0029827637449391245
2881,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// RDMS supports the UNION ALL clause.,no,undetermined,0,0,0,no,0.007849669124569377,no,0.004786683921126711,no,0.004684100425368946,no,0.004475091015266366
2882,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Multi-param dialect functions...,no,undetermined,0,0,0,no,0.18997393802079213,no,0.20260701083360336,no,0.1853844846493478,no,0.18655826957794588
2883,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// function templates,no,undetermined,0,0,0,no,0.002224669495687352,no,0.0035882471086415317,no,0.0034699007661455794,no,0.003284233057817378
2884,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//TODO: we could just return all false...,no,undetermined,0,0,0,yes,0.9727873326247758,no,0.01424319577121838,no,0.013783706985190793,no,0.013329035767996501
2885,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//not null is implicit,no,undetermined,0,0,0,no,0.019519053735629087,no,0.014269146905527141,no,0.013791957401431831,no,0.013341085537961888
2886,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// this assumes schema support, which is present in 1.8.0 and later...",no,undetermined,0,0,0,no,0.008019219201616527,no,0.012263712734141412,no,0.012584030300588495,no,0.012227518084208867
2887,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//columnUpdateability.length==0 ||,no,undetermined,0,0,0,no,0.007875486123893306,no,0.008150290837180182,no,0.007971299109591377,no,0.007654448738140402
2888,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// HSQLDB only supports READ_UNCOMMITTED transaction isolation,no,undetermined,0,0,0,no,0.00775969541607988,no,0.004013876810749343,no,0.003908919158780082,no,0.003704949033693446
2889,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//the entity is associated with the session, so check its status",no,undetermined,0,0,0,no,0.0035665007462295797,no,0.0031027697262662655,no,0.0030830990894683595,no,0.002920968228066013
2890,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Multi-param string dialect functions...,no,undetermined,0,0,0,no,0.2025856600683883,no,0.21044495770191737,no,0.19422287478756983,no,0.19619469022517372
2891,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Multi-param numeric dialect functions...,no,undetermined,0,0,0,no,0.15134059477553738,no,0.15844436705764176,no,0.12904016931286624,no,0.13023653758199535
2892,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Multi-param date dialect functions...,no,undetermined,0,0,0,no,0.19117341516677908,no,0.20100172982198697,no,0.18244551937431056,no,0.18355275064381174
2893,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// simple nullability constraint,no,undetermined,0,0,0,no,0.0015565356863202053,no,0.0010695542018123814,no,0.0010002415600554346,no,0.0009245546094899399
2894,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0029192075517518335,no,0.0019428635406165216,no,0.0019258753864740586,no,0.0018095004858472681
2895,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0029192075517518335,no,0.0019428635406165216,no,0.0019258753864740586,no,0.0018095004858472681
2896,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// return,no,undetermined,0,0,0,no,0.0008662229729892083,no,0.001371836346092846,no,0.0012239512111443373,no,0.0011516724250478332
2897,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	register the type of the out param - an Oracle specific type,no,undetermined,0,0,0,no,0.03303588359174213,no,0.014243781547776726,no,0.013776070860699888,no,0.013301865508410497
2898,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// TimesTen has no BLOB/CLOB support, but these types may be suitable  // for some applications. The length is limited to 4 million bytes.",no,undetermined,0,0,0,no,0.008217219674872206,no,0.014245536886595413,no,0.013755577882134617,no,0.013327545055728255
2899,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// new methods in dialect3,no,undetermined,0,0,0,no,0.0027899012297814096,no,0.0032839304375897257,no,0.0031679269403394076,no,0.0029948045324932776
2900,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*public boolean supportsForUpdateNowait() {
		return false;
	}*/",no,undetermined,0,0,0,no,0.0013496439723118675,no,0.0004963415503981963,no,0.0004784352081705701,no,0.00044422176015630353
2901,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// TimesTen has no known variation of a ""SELECT ... FOR UPDATE"" syntax...",no,undetermined,0,0,0,no,0.0035243273105159015,no,0.004555013029450131,no,0.004365730616942133,no,0.004147794316698658
2902,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// iterate entries ordered by capacity to find first fit,no,undetermined,0,0,0,no,0.0024302369678636587,no,0.003090637239688487,no,0.0029120415522757553,no,0.0027724386757598156
2903,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// add new ordered map,no,undetermined,0,0,0,no,0.007549086456426565,no,0.008371369923983234,no,0.00795295690928,no,0.007416020895998025
2904,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// expected type is intrinsic here...,no,undetermined,0,0,0,no,0.004938280482285401,no,0.004757317598051488,no,0.0044195182245636965,no,0.004413796603692551
2905,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0029192075517518335,no,0.0019428635406165216,no,0.0019258753864740586,no,0.0018095004858472681
2906,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//},no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2907,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//},no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2908,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//return memberPersister.getPropertyType(propertyName);,no,undetermined,0,0,0,no,0.0008662229729892083,no,0.001371836346092846,no,0.0012239512111443373,no,0.0011516724250478332
2909,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//return memberPersister.toColumns(alias, propertyName);",no,undetermined,0,0,0,no,0.012352615681286833,no,0.014263038586435626,no,0.013783416029863434,no,0.01331764244385697
2910,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//return memberPersister.getType();,no,undetermined,0,0,0,no,0.004133922310599986,no,0.0036121226290130887,no,0.0034255670829350803,no,0.0032212911312790036
2911,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*&& !indexIsFormula*/,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2912,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		return !isOneToMany();,no,undetermined,0,0,0,no,0.0008662229729892083,no,0.001371836346092846,no,0.0012239512111443373,no,0.0011516724250478332
2913,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//instanceof AssociationType;,no,undetermined,0,0,0,no,0.020175629998672426,no,0.014283362705892257,no,0.013750121772548899,no,0.013336499910906395
2914,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we need to determine the best way to know that two joinables // represent a single many-to-many...,no,undetermined,0,0,0,yes,0.8080745051292889,yes,0.7986536677776405,yes,0.7862186547850999,yes,0.7948331102533458
2915,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//strip leading ','",no,undetermined,0,0,0,no,0.003376798940762827,no,0.0024469312252226954,no,0.0023773199678261193,no,0.0022330086386811833
2916,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//public boolean isSubselectLoadable();,no,undetermined,0,0,0,no,0.0005994318758511362,no,0.0006251808045007584,no,0.0005999865833256175,no,0.0005609986468946807
2917,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//columns,no,undetermined,0,0,0,no,0.0001285518798389755,no,0.002550357618016872,no,0.0027262878318348093,no,0.002569745504858945
2918,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//SQL statements,no,undetermined,0,0,0,no,0.004488375496441549,no,0.006219894800221284,no,0.006039122248353858,no,0.005798511324143711
2919,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//extra information about the element type,no,undetermined,0,0,0,no,0.017879518110088123,no,0.01427173728611161,no,0.013774074774137742,no,0.013348857522220828
2920,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//types,no,undetermined,0,0,0,no,0.00523153069362538,no,0.004479881349427336,no,0.006728130334517947,no,0.006444197859208383
2921,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// sql server just returns automatically,no,undetermined,0,0,0,no,0.0177686634838767,no,0.014252132936720353,no,0.013760219680185974,no,0.013306699650078017
2922,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// custom sql,no,undetermined,0,0,0,no,0.0036602458763009592,no,0.0021052595716952883,no,0.0020567741268323666,no,0.0019350200804244338
2923,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//private final String unquotedIdentifierColumnName;,no,undetermined,0,0,0,no,0.0069632289407249755,no,0.0099685696653769,no,0.00955966118100169,no,0.009206810178279802
2924,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//		return ""select CURRENT_TIMESTAMP from RDB$DATABASE"";",no,undetermined,0,0,0,no,0.005913561479483572,no,0.004664372910629512,no,0.004316799181751823,no,0.00408469110698375
2925,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// dynamic filters specifically for many-to-many inside the collection,no,undetermined,0,0,0,no,0.007421926746272184,no,0.014239190970096566,no,0.013790609872364263,no,0.013321626294077678
2926,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// dynamic filters for the collection,no,undetermined,0,0,0,no,0.004128721180534235,no,0.003378857286417427,no,0.003318980229048582,no,0.0031735883284795233
2927,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//registerColumnType data types,no,undetermined,0,0,0,no,0.004635757837767945,no,0.014229627780965717,no,0.013748437472879788,no,0.013302905755469623
2928,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// IBID for current_time and current_date,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2929,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If we've been blocking for the mutex, perhaps another // thread has already reestablished the root. // In case the node was reestablised via replication, confirm it's  // marked ""resident"" (a status which doesn't replicate)",no,undetermined,0,0,0,no,0.013945464469222263,no,0.010509978109126471,no,0.009915404918366823,no,0.009562808637930928
2930,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Tell hibernate to use getBytes instead of getBinaryStream,no,undetermined,0,0,0,no,0.042535598173606484,no,0.014242116439410132,no,0.013791512034000078,no,0.013341171583055844
2931,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// No batch statements,no,undetermined,0,0,0,no,0.005589005804421318,no,0.005443331751691608,no,0.005335207793704607,no,0.005098802941344785
2932,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//ELEMENT,no,undetermined,0,0,0,no,0.0009115149065893579,no,0.0009290341020025774,no,0.0008941128827420959,no,0.000828734443592016
2933,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*
		 * We might want a special case for 19,2. This is very common for money types
		 * and here it is converted to 18,1
		 */",no,undetermined,0,0,0,no,0.03831576494198279,no,0.014283537075747064,no,0.013771224873482263,no,0.013304693741047983
2934,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//no pointbase BIT,no,undetermined,0,0,0,no,0.013219312079374778,no,0.014246988401629185,no,0.013760403950403134,no,0.0133068573267915
2935,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//no pointbase TINYINT,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2936,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// NativeSQL: collect element column and auto-aliases,no,undetermined,0,0,0,no,0.003993012482297843,no,0.0047111662908667674,no,0.008307694898093965,no,0.007966942023285753
2937,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// INDEX AND ROW SELECT,no,undetermined,0,0,0,no,0.0009444777590050695,no,0.001264107813135156,no,0.0012341216134144298,no,0.0011483025766584117
2938,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//starts with 1, implicitly",no,undetermined,0,0,0,no,0.004348937010397405,no,0.006069118632529209,no,0.006031372656906836,no,0.005800910070889385
2939,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// SQL Server (at least up through 2005) does not support defining // cascade delete constraints which can circel back to the mutating // table,no,undetermined,0,0,0,no,0.002999043754206803,no,0.014277440503021556,no,0.013778220071512814,no,0.013334376399532591
2940,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// NativeSQL: collect index column and auto-aliases,no,undetermined,0,0,0,no,0.0036431967616678005,no,0.005421835570487167,no,0.009707324617245291,no,0.00933719540770845
2941,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// here assume SQLServer2005 using snapshot isolation, which does not have this problem",no,undetermined,0,0,0,no,0.03654058703184908,no,0.01425673896496105,no,0.013786312558233428,no,0.013332108746540922
2942,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//		registerColumnType( Types.CLOB, 16777215, ""mediumtext"" ); //		registerColumnType( Types.CLOB, 65535, ""text"" );",no,undetermined,0,0,0,no,0.0022514624322199205,no,0.01424648700567282,no,0.01378393999505606,no,0.013329385430777035
2943,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//		registerColumnType( Types.VARCHAR, 16777215, ""mediumtext"" ); //		registerColumnType( Types.VARCHAR, 65535, ""text"" );",no,undetermined,0,0,0,no,0.006844159368364392,no,0.014205301909781264,no,0.01372000329284557,no,0.013265365544520914
2944,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//starts with 1, implicitly",no,undetermined,0,0,0,no,0.004348937010397405,no,0.006069118632529209,no,0.006031372656906836,no,0.005800910070889385
2945,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//GENERATE THE SQL:,no,undetermined,0,0,0,no,0.0050790775713406445,no,0.004683407926193829,no,0.0045818930156361,no,0.004383500368236974
2946,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* package-private */,no,undetermined,0,0,0,no,0.013230214867834772,no,0.014266992679767339,no,0.01377645948426635,no,0.013340730481062246
2947,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//not all classpersisters implement PropertyMapping!,no,undetermined,0,0,0,no,0.13319150249677905,no,0.1430443874617566,no,0.137667951899751,no,0.1385928818383433
2948,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Handle any filters applied to this collection for many-to-many,no,undetermined,0,0,0,no,0.006889221579555824,no,0.005021863763016552,no,0.004835453187813495,no,0.004655313143998256
2949,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if there is a user-specified loader, return that //TODO: filters!?",no,undetermined,0,0,0,yes,0.8053842399693052,yes,0.8020502541085247,yes,0.7946471810579019,yes,0.8039204062295588
2950,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Take care of any entities that might have // been evicted!	,no,undetermined,0,0,0,no,0.015358153502608912,no,0.014266395257918944,no,0.013757587153710366,no,0.013318342489571719
2951,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//strip leading ','",no,undetermined,0,0,0,no,0.003376798940762827,no,0.0024469312252226954,no,0.0023773199678261193,no,0.0022330086386811833
2952,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Run a subquery loader,no,undetermined,0,0,0,no,0.004613861320457344,no,0.005672854333536566,no,0.005520647543784864,no,0.005258615682266079
2953,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// We can't change the TM on a running cache; just check // if the cache has no TM and we're OK with that,no,undetermined,0,0,0,no,0.014479072501417072,no,0.014244461670080694,no,0.01375337462428725,no,0.013348280997406271
2954,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Sybase BIT type does not support null values,no,undetermined,0,0,0,no,0.05071887008391901,no,0.014270621442654298,no,0.013770294288158397,no,0.013326567247311103
2955,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// We could register the session against the transaction even though it is // not started, but we'd have no guarentee of ever getting the map // entries cleaned up (aside from spawning threads).",no,undetermined,0,0,0,no,0.003590234977113073,no,0.002972009715511242,no,0.0028809726905155326,no,0.0025449026136260757
2956,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//needed by arrays,no,undetermined,0,0,0,no,0.036800656827842705,no,0.014270028719269091,no,0.013785145580093246,no,0.013322623144732666
2957,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ignore,no,undetermined,0,0,0,no,0.0003489690046840201,no,0.0004791828875098961,no,0.0004737640273004505,no,0.00043449603121796743
2958,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		 This assumes you will want to ignore any update counts,no,undetermined,0,0,0,no,0.0013891365066733571,no,0.0015599075278804786,no,0.0017729891166164788,no,0.0016769891526072723
2959,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//TODO: something with formulas...,no,undetermined,0,0,0,no,0.01325037645668776,no,0.014260932248424719,no,0.013765265067302008,no,0.013323255765510592
2960,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//an assertion,no,undetermined,0,0,0,no,0.012604558158847232,no,0.01425292696758809,no,0.013773853119827827,no,0.01333291696436866
2961,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Remove all the old entries,no,undetermined,0,0,0,no,0.0027977873322131528,no,0.003479009182796824,no,0.0033745422848781353,no,0.003191996636710211
2962,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* local variables | target obj | each oldvalue | */,no,undetermined,0,0,0,no,0.003955983229744436,no,0.004445540922380519,no,0.004352860640526498,no,0.003443368512517939
2963,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//create all the new entries,no,undetermined,0,0,0,no,0.001850380671459996,no,0.00253319424825146,no,0.0024841281845999776,no,0.0023359550197513297
2964,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*&& !indexIsFormula*/,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2965,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*&& !indexIsFormula*/,no,undetermined,0,0,0,no,0.01326276615882029,no,0.014245354120693884,no,0.013769520690893874,no,0.013321942339624384
2966,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//delete all the deleted entries,no,undetermined,0,0,0,no,0.0025263881000989834,no,0.006309142748422721,no,0.006164156826065882,no,0.00588585175771194
2967,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//insert all the new entries,no,undetermined,0,0,0,no,0.0018882846355905724,no,0.003305988310976969,no,0.0031815458286205524,no,0.003009316463969187
