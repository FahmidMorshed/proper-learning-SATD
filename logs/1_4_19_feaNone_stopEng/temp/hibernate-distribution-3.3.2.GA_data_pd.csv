,projectname,classification,commenttext,label,code,time,yes_vote,no_vote,svm_pred_0,svm_pred_0_proba,svm_pred_1,svm_pred_1_proba,svm_pred_2,svm_pred_2_proba,svm_pred_3,svm_pred_3_proba,svm_pred_4,svm_pred_4_proba
0,hibernate-distribution-3.3.2.GA,DEFECT,"// this is only needed (afaict) for processing results from the query cache; // however, this cannot possibly work in the case of discovered types...",yes,undetermined,0,0,0,no,0.1512349818734499,no,0.15084100727915642,no,0.15252804434542722,no,0.14371015130841966,no,0.1463012475805444
1,hibernate-distribution-3.3.2.GA,DEFECT,// note that this timestamp is not correct if the connection provider // returns an older JDBC connection that was associated with a // transaction that was already begun before openSession() was called // (don't know any possible solution to this!),yes,undetermined,0,0,0,no,0.3612077514694034,no,0.35177016940660844,no,0.3275912554195134,no,0.3196629128456657,no,0.33058835984219226
2,hibernate-distribution-3.3.2.GA,DEFECT,"//TODO: This is assertion is disabled because there is a bug that means the //	  original owner of a transient, uninitialized collection is not known //	  if the collection is re-referenced by a different object associated //	  with the current Session //throw new AssertionFailure(""bug loading unowned collection"");",yes,undetermined,0,0,0,yes,0.7538373521984546,yes,0.598265368366837,yes,0.6041543351211086,yes,0.5943549505665835,yes,0.6048059713277654
3,hibernate-distribution-3.3.2.GA,DEFECT,"// This does not support the Cache SQL 'DISTINCT BY (comma-list)' extensions, // but this extension is not supported through Hibernate anyway.",yes,undetermined,0,0,0,no,0.021918988454608584,yes,0.9904033134790244,yes,0.9906464210614369,yes,0.9899194487933175,yes,0.9910752650832937
4,hibernate-distribution-3.3.2.GA,DEFECT,"//TODO: when this is the entry point, we should use an INNER_JOIN for fetching the many-to-many elements!",yes,undetermined,0,0,0,yes,0.930360889044742,yes,0.990429757952159,yes,0.9906601693160338,yes,0.9899157798854429,yes,0.9910734822402871
5,hibernate-distribution-3.3.2.GA,DEFECT,"// could happen for custom Criteria impls.  Not likely, but... // 		for long term solution, see HHH-3514",yes,undetermined,0,0,0,no,0.019298096227500106,yes,0.9904179759513435,yes,0.9906418671326126,yes,0.9899199274270547,yes,0.9910901112002171
6,hibernate-distribution-3.3.2.GA,DEFECT,//TODO: currently broken for unique-key references (does not detect //      change to unique key property of the associated object) //the owner of the association is not the owner of the id,yes,undetermined,0,0,0,yes,0.7610170886593636,yes,0.8635696874621872,yes,0.8755181972700745,yes,0.8699221987269294,yes,0.8767879466054936
7,hibernate-distribution-3.3.2.GA,DEFECT,//TODO: currently broken for unique-key references (does not detect //      change to unique key property of the associated object),yes,undetermined,0,0,0,yes,0.8799461612277689,yes,0.8902406726584414,yes,0.8892208095466304,yes,0.8832988215451827,yes,0.8892638077266919
8,hibernate-distribution-3.3.2.GA,DEFECT,"//TODO: entities CAN be compared, by PK and entity name, fix this!",yes,undetermined,0,0,0,yes,0.986823025751102,yes,0.990410093679518,yes,0.9906453144817989,yes,0.9899273157720898,yes,0.9911053385074079
9,hibernate-distribution-3.3.2.GA,DEFECT,// TODO: does not work for EntityMode.DOM4J yet!,yes,undetermined,0,0,0,yes,0.999999998650847,yes,0.9999999964971181,yes,0.9999999970069514,yes,0.9999999962707801,yes,0.9999999975957126
10,hibernate-distribution-3.3.2.GA,DEFECT,"// TODO: Deal with the ""optional"" attribute in the <join> mapping; // this code assumes that optional defaults to ""true"" because it // doesn't actually seem to work in the fetch=""join"" code // // Note that actual proper handling of optional-ality here is actually // more involved than this patch assumes.  Remember that we might have // multiple <join/> mappings associated with a single entity.  Really // a couple of things need to happen to properly handle optional here: //  1) First and foremost, when handling multiple <join/>s, we really //      should be using the entity root table as the driving table; //      another option here would be to choose some non-optional joined //      table to use as the driving table.  In all likelihood, just using //      the root table is much simplier //  2) Need to add the FK columns corresponding to each joined table //      to the generated select list; these would then be used when //      iterating the result set to determine whether all non-optional //      data is present // My initial thoughts on the best way to deal with this would be // to introduce a new SequentialSelect abstraction that actually gets // generated in the persisters (ok, SingleTable...) and utilized here. // It would encapsulated all this required optional-ality checking...",yes,undetermined,0,0,0,yes,0.8290245912908238,yes,0.7252243108278343,yes,0.6799278759559113,yes,0.6650203988936007,yes,0.6788522894668724
11,hibernate-distribution-3.3.2.GA,DEFECT,"//TODO: would be nice to use false, but issues with MS SQL",yes,undetermined,0,0,0,yes,0.9951725771062434,yes,0.9944720349956521,yes,0.9942088546188281,yes,0.993917104568363,yes,0.9946588084634347
12,hibernate-distribution-3.3.2.GA,DEFECT,"//TODO: not really completely correct, since //      the uoe could occur while resolving //      associations, leaving the PC in an //      inconsistent state",yes,undetermined,0,0,0,yes,0.7906490139518125,yes,0.7232476471351917,yes,0.7299775298442813,yes,0.7193564830184257,yes,0.7327826665475136
13,hibernate-distribution-3.3.2.GA,DEFECT,//TODO: this is kinda inconsistent with CollectionType,yes,undetermined,0,0,0,yes,0.8348720200343624,yes,0.9935210890572219,yes,0.9939411952671582,yes,0.9934582850719809,yes,0.9943168190570437
14,hibernate-distribution-3.3.2.GA,DEFECT,"// For a one-to-many, a <bag> is not really a bag; // it is *really* a set, since it can't contain the // same element twice. It could be considered a bug // in the mapping dtd that <bag> allows <one-to-many>.",yes,undetermined,0,0,0,no,0.029631793525360883,yes,0.9904094142000719,yes,0.9906522642887612,yes,0.9899203276835329,yes,0.9910853433583771
15,hibernate-distribution-3.3.2.GA,DEFECT,"//TODO: entities CAN be compared, by PK, fix this! -> only if/when we can extract the id values....",yes,undetermined,0,0,0,yes,0.973952146679513,yes,0.9904324133425741,yes,0.9906554797216386,yes,0.9898987846410989,yes,0.991091193923871
16,hibernate-distribution-3.3.2.GA,DEFECT,//TODO: old version did not require hashmap lookup: //keys[collectionOwner].getIdentifier(),yes,undetermined,0,0,0,yes,0.8914419517784458,yes,0.8750446806524589,yes,0.8802061152244274,yes,0.8756135384260634,yes,0.8842497318984294
17,hibernate-distribution-3.3.2.GA,DEFECT,// TODO: this disables laziness even in non-pojo entity modes:,yes,undetermined,0,0,0,yes,0.9687577632925924,yes,0.990432102302279,yes,0.9906711619506946,yes,0.9899303690760203,yes,0.9910943809219129
18,hibernate-distribution-3.3.2.GA,DEFECT,"// TODO: at the point where we are resolving collection references, we don't // know if the uk value has been resolved (depends if it was earlier or // later in the mapping document) - now, we could try and use e.getStatus() // to decide to semiResolve(), trouble is that initializeEntity() reuses // the same array for resolved and hydrated values",yes,undetermined,0,0,0,yes,0.7248894794759074,yes,0.7274479791962876,yes,0.7301340509766031,yes,0.7231676510112824,yes,0.7338733587765173
19,hibernate-distribution-3.3.2.GA,DEFECT,//TODO: currently we don't know a SessionFactory reference when building the Tuplizer //      THIS IS A BUG (embedded-xml=false on component) // TODO : fix this after HHH-1907 is complete,yes,undetermined,0,0,0,yes,0.9999999459088136,yes,0.9999998961490734,yes,0.9999998928956121,yes,0.9999998761053097,yes,0.9999999152686875
20,hibernate-distribution-3.3.2.GA,DEFECT,//TODO: this requires that the collection is defined after the //      referenced property in the mapping file (ok?),yes,undetermined,0,0,0,yes,0.7381854528441046,yes,0.8443554835313468,yes,0.8426262581178473,yes,0.8300526088368424,yes,0.8388381579986831
21,hibernate-distribution-3.3.2.GA,DEFECT,// TODO : currently we really do not handle ValueInclusion.PARTIAL... // ValueInclusion.PARTIAL would indicate parts of a component need to // be included in the select; currently we then just render the entire // component into the select clause in that case.,yes,undetermined,0,0,0,yes,0.8655701806669973,yes,0.7901485182320682,yes,0.7864481578121495,yes,0.770620924465917,yes,0.782588156251015
22,hibernate-distribution-3.3.2.GA,DEFECT,//TODO: is this completely correct?,yes,undetermined,0,0,0,yes,0.9999970495469154,yes,0.9972811307905369,yes,0.9999858581404916,yes,0.9999836629377451,yes,0.9999878663768159
23,hibernate-distribution-3.3.2.GA,DEFECT,// TODO: what if batchUpdate is a callablestatement ? // calls executeBatch(),yes,undetermined,0,0,0,yes,0.9832058697106723,yes,0.9904205235354467,yes,0.9906430447501089,yes,0.9899103122784112,yes,0.99108368153074
24,hibernate-distribution-3.3.2.GA,DEFECT,// This doesn't actually seem to work but it *might* // work on some dbs. Also it doesn't work if there // are multiple columns of results because it // is not accounting for the suffix: // return new String[] { getDiscriminatorColumnName() };,yes,undetermined,0,0,0,no,0.17518151098047752,no,0.22761141044406283,no,0.21877691436316324,no,0.2093451306037406,no,0.2139490168458172
25,hibernate-distribution-3.3.2.GA,DEFECT,"// First, validate all the enabled filters... //TODO: this implementation has bad performance",yes,undetermined,0,0,0,yes,0.9586736297822593,yes,0.9903994544674791,yes,0.9906427505370642,yes,0.9899099174455239,yes,0.9910918854937845
26,hibernate-distribution-3.3.2.GA,DEFECT,"//TODO: passing null here, because this method is not really used for DOM4J at the moment //      but it is still a bug, if we don't get rid of this!",yes,undetermined,0,0,0,yes,0.9999980800410321,yes,0.9999975519793403,yes,0.9999979186076139,yes,0.9999974292646573,yes,0.999998156002955
27,hibernate-distribution-3.3.2.GA,DEFECT,// TODO : this really needs to be delayed unitl after we definitively know the operand node type; // where this is currently a problem is parameters for which where we cannot unequivocally // resolve an expected type,yes,undetermined,0,0,0,yes,0.993176513679773,yes,0.9904148661122775,yes,0.9906484662288941,yes,0.9899079181031143,yes,0.9910824664328547
28,hibernate-distribution-3.3.2.GA,DEFECT,"/*
		  * Algorithm
		  * Check for any level one nullability breaks
		  * Look at non null components to
		  *   recursively check next level of nullability breaks
		  * Look at Collections contraining component to
		  *   recursively check next level of nullability breaks
		  *
		  *
		  * In the previous implementation, not-null stuffs where checked
		  * filtering by level one only updateable
		  * or insertable columns. So setting a sub component as update=""false""
		  * has no effect on not-null check if the main component had good checkeability
		  * In this implementation, we keep this feature.
		  * However, I never see any documentation mentioning that, but it's for
		  * sure a limitation.
		  */",yes,undetermined,0,0,0,no,0.018805475032673616,yes,0.9904203436195572,yes,0.9906560116672373,yes,0.9899269609575846,yes,0.9910817251730485
29,hibernate-distribution-3.3.2.GA,DEFECT,"// assume that the row was not there since it previously had only null // values, so do an INSERT instead //TODO: does not respect dynamic-insert",yes,undetermined,0,0,0,yes,0.5697953812520301,yes,0.5965506556982471,yes,0.6043688477981776,yes,0.5974934002245064,yes,0.6094446349715738
30,hibernate-distribution-3.3.2.GA,DEFECT,// todo : this call will not work for anything other than pojos!,yes,undetermined,0,0,0,yes,0.9999972983638781,yes,0.9999952503141277,yes,0.9999954740413222,yes,0.9999946095216494,yes,0.9999960691270474
31,hibernate-distribution-3.3.2.GA,DEFECT,//note that this implementation is kinda broken //for components with many-to-one associations,yes,undetermined,0,0,0,no,0.062292188866053734,yes,0.99041641195818,yes,0.9906384089016377,yes,0.9899262260835937,yes,0.9910740707462395
32,hibernate-distribution-3.3.2.GA,DEFECT,"//no need to take a snapshot - this is a  //performance optimization, but not really //important, except for entities with huge  //mutable property values",yes,undetermined,0,0,0,no,0.15736050076463404,no,0.29094367830983625,no,0.26061830212087345,no,0.25192029537200533,no,0.2589318711246671
33,hibernate-distribution-3.3.2.GA,DEFECT,// TODO : this is broke for subqueries in statements other than selects...,yes,undetermined,0,0,0,yes,0.990703939003116,yes,0.9904322282722972,yes,0.9906710838280005,yes,0.9899202889441299,yes,0.99109102520105
34,hibernate-distribution-3.3.2.GA,DEFECT,"/*
         * The following types are not supported in RDMS/JDBC and therefore commented out.
         * However, in some cases, mapping them to CHARACTER columns works
         * for many applications, but does not work for all cases.
         */",yes,undetermined,0,0,0,no,0.08762382732818397,yes,0.9904221714459873,yes,0.9906348974789669,yes,0.9899316193487593,yes,0.9910928173829823
35,hibernate-distribution-3.3.2.GA,DEFECT,// TODO : should this be an error?,yes,undetermined,0,0,0,yes,0.999997778801761,yes,0.9999949601370558,yes,0.9999962476609366,yes,0.9999955840916998,yes,0.9999967994919224
36,hibernate-distribution-3.3.2.GA,DEFECT,"// three general cases we check here as to whether to render a physical SQL join: // 1) is our parent a DotNode as well?  If so, our property reference is // 		being further de-referenced... // 2) is this a DML statement // 3) we were asked to generate any needed joins (generateJoins==true) *OR* //		we are currently processing a select or from clause // (an additional check is the REGRESSION_STYLE_JOIN_SUPPRESSION check solely intended for the test suite) // // The REGRESSION_STYLE_JOIN_SUPPRESSION is an additional check // intended solely for use within the test suite.  This forces the // implicit join resolution to behave more like the classic parser. // The underlying issue is that classic translator is simply wrong // about its decisions on whether or not to render an implicit join // into a physical SQL join in a lot of cases.  The piece it generally // tends to miss is that INNER joins effect the results by further // restricting the data set!  A particular manifestation of this is // the fact that the classic translator will skip the physical join // for ToOne implicit joins *if the query is shallow*; the result // being that Query.list() and Query.iterate() could return // different number of results!",yes,undetermined,0,0,0,no,0.14696055357726712,no,0.14246340182181572,no,0.13941526942872387,no,0.13555959419186173,no,0.1378879545313024
37,hibernate-distribution-3.3.2.GA,DEFECT,// TODO: figure out how this should be set. /////////////////////////////////////////////////////////////////////////////// // This was the reason for failures regarding INDEX_OP and subclass joins on // theta-join dialects; not sure what behaviour we were trying to emulate ;) //		joinSequence = joinSequence.getFromPart();	// Emulate the old addFromOnly behavior.,yes,undetermined,0,0,0,no,0.5501818216431403,no,0.48589698329436837,no,0.4869166930278667,no,0.472901935139671,no,0.4845856523687447
38,hibernate-distribution-3.3.2.GA,DEFECT,"// The preference here would be //   SQLFunctionTemplate( Hibernate.TIMESTAMP, ""current_timestamp(?1)"", false) // but this appears not to work. // Jay Nance 2006-09-22",yes,undetermined,0,0,0,no,0.08723050374670467,yes,0.9904156779871253,yes,0.9906362586893891,yes,0.9899006455535772,yes,0.9910990177073281
39,hibernate-distribution-3.3.2.GA,DEFECT,"//TODO: would be nice to use false, but issues with MS SQL",yes,undetermined,0,0,0,yes,0.9951725771062434,yes,0.9944720349956521,yes,0.9942088546188281,yes,0.993917104568363,yes,0.9946588084634347
40,hibernate-distribution-3.3.2.GA,DEFECT,"//TODO: inexact, what we really need to know is: are any outer joins used?",yes,undetermined,0,0,0,yes,0.9485626012259245,yes,0.9904139474197642,yes,0.990650612364913,yes,0.9899130686392628,yes,0.9910950869355465
41,hibernate-distribution-3.3.2.GA,DEFECT,"//TODO: would be nice to use false, but issues with MS SQL",yes,undetermined,0,0,0,yes,0.9951725771062434,yes,0.9944720349956521,yes,0.9942088546188281,yes,0.993917104568363,yes,0.9946588084634347
42,hibernate-distribution-3.3.2.GA,DEFECT,"// TODO : not sure which (either?) is correct, could not find docs on how to do this. // did find various blogs and forums mentioning that select CURRENT_TIMESTAMP // does not work...",yes,undetermined,0,0,0,yes,0.9935141772376805,yes,0.9927665588278646,yes,0.9930764646571762,yes,0.9924767414470659,yes,0.9933841810156904
43,hibernate-distribution-3.3.2.GA,DEFECT,// TODO: cannot use generateSuffixes() - it handles the initial suffix differently.,yes,undetermined,0,0,0,no,0.29854007045615105,no,0.32115644831600404,no,0.30376051176109425,no,0.2931279914696741,no,0.2999402720836359
44,hibernate-distribution-3.3.2.GA,DEFECT,"//Don't need this, because we should never ever be selecting no columns in an insert ... select... //and because it causes a bug on DB2",yes,undetermined,0,0,0,no,0.13366794447591993,no,0.2622932134554477,no,0.2548821012736949,no,0.24380475595727824,no,0.2493700556198242
45,hibernate-distribution-3.3.2.GA,DEFECT,// starts with an alias (old style) // semi-bad thing about this: can't re-alias another alias.....,yes,undetermined,0,0,0,no,0.02341668192153279,yes,0.9904060875586838,yes,0.9906492440194941,yes,0.9899215135493318,yes,0.9910915054620869
46,hibernate-distribution-3.3.2.GA,DEFECT,//TODO: BUG! this currently fails for named queries for non-POJO entities,yes,undetermined,0,0,0,yes,0.9949583746681804,yes,0.9940024597384144,yes,0.9934442448722663,yes,0.9927088492319734,yes,0.9936043496917956
47,hibernate-distribution-3.3.2.GA,DEFECT,"//FIXME we don't have the associated entity table name here, has to be done in a second pass",yes,undetermined,0,0,0,yes,0.8500211336771311,yes,0.7410329380320182,yes,0.7331983536112305,yes,0.7060113723346799,yes,0.7192456265436448
48,hibernate-distribution-3.3.2.GA,DEFECT,// this call is side-effecty,yes,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
49,hibernate-distribution-3.3.2.GA,DEFECT,"// RDMS does not directly support the trim() function, we use rtrim() and ltrim()",yes,undetermined,0,0,0,no,0.014494870738633227,yes,0.9904149809381847,yes,0.9906448049905975,yes,0.9899166719453996,yes,0.9910855900370816
50,hibernate-distribution-3.3.2.GA,DEFECT,// note: at least my local SQL Server 2005 Express shows this not working...,yes,undetermined,0,0,0,no,0.053768945321875906,yes,0.9904313574299096,yes,0.9906352367654748,yes,0.989920408827859,yes,0.9910905816209498
51,hibernate-distribution-3.3.2.GA,DEFECT,// note: at least my local MySQL 5.1 install shows this not working...,yes,undetermined,0,0,0,no,0.04595810008989267,yes,0.990416992017971,yes,0.9906365701314219,yes,0.9899143581905264,yes,0.9910686289379618
52,hibernate-distribution-3.3.2.GA,DESIGN,"// use COUNT as the default.  This mimics the old behavior, although // NONE might be a better option moving forward in the case of callable",yes,undetermined,0,0,0,no,0.042466440733950346,yes,0.9904140690418569,yes,0.9906373937811912,yes,0.9899151408604541,yes,0.9910763822058608
53,hibernate-distribution-3.3.2.GA,DESIGN,//perhaps not really necessary...,yes,undetermined,0,0,0,no,0.059032218353169956,yes,0.9904249977480798,yes,0.9906391746056968,yes,0.9899143255974642,yes,0.9910823592566667
54,hibernate-distribution-3.3.2.GA,DESIGN,// todo : what else to do here?,yes,undetermined,0,0,0,no,0.011915769773668481,no,0.012892946551675156,no,0.012212929575441765,no,0.011854801627810656,no,0.011589831620060054
55,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: disable batch loading if lockMode > READ?,yes,undetermined,0,0,0,yes,0.8653724628157545,yes,0.8328604900136733,yes,0.8391388302704554,yes,0.8354210073888781,yes,0.8460979111129013
56,hibernate-distribution-3.3.2.GA,DESIGN,// todo : what else to do here?,yes,undetermined,0,0,0,no,0.011915769773668481,no,0.012892946551675156,no,0.012212929575441765,no,0.011854801627810656,no,0.011589831620060054
57,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: to handle concurrent writes correctly, the client should pass in a Lock",yes,undetermined,0,0,0,yes,0.8762744161123388,yes,0.9715639897184388,yes,0.9906481923239785,yes,0.989919193212959,yes,0.99108887380163
58,hibernate-distribution-3.3.2.GA,DESIGN,"// turn hibernate.c3p0.* into c3p0.*, so c3p0 // gets a chance to see all hibernate.c3p0.*",yes,undetermined,0,0,0,no,0.014351363817152959,yes,0.9904140058005166,yes,0.9906445038290334,yes,0.9899106651940683,yes,0.9910909510467012
59,hibernate-distribution-3.3.2.GA,DESIGN,//note there is a wierd implementation in the client side,yes,undetermined,0,0,0,no,0.1954257123824632,no,0.06183119919991816,yes,0.9906656148371954,yes,0.9899207443742681,yes,0.991097057520592
60,hibernate-distribution-3.3.2.GA,DESIGN,// todo: this was added to support initializing an entity's EntityEntry snapshot during reattach; // this should be refactored to instead expose a method to assemble a EntityEntry based on this // state for return.,yes,undetermined,0,0,0,yes,0.9708939709844473,yes,0.9904044280551162,yes,0.9906627524197199,yes,0.9899210717629897,yes,0.9910703201292194
61,hibernate-distribution-3.3.2.GA,DESIGN,// Do we need to drop constraints before dropping tables in this dialect?,yes,undetermined,0,0,0,no,0.015243290752341692,yes,0.9904011961680546,yes,0.9906473045151922,yes,0.9899039129456916,yes,0.9910779520778359
62,hibernate-distribution-3.3.2.GA,DESIGN,"/**
     * FIXME Per the RegionFactory class Javadoc, this constructor version
     * should not be necessary.
     * 
     * @param props The configuration properties
     */",yes,undetermined,0,0,0,yes,0.9893394220545665,yes,0.9904354032649555,yes,0.9906498084127344,yes,0.9899199009363673,yes,0.9910903673568704
63,hibernate-distribution-3.3.2.GA,DESIGN,// Does this dialect support check constraints?,yes,undetermined,0,0,0,no,0.0010691667654680681,yes,0.9904089501992919,yes,0.9906466368188598,yes,0.9899028639396052,yes,0.9910814691642671
64,hibernate-distribution-3.3.2.GA,DESIGN,// this is called by SessionFactory irregardless; we just disregard here; // could also add a check to SessionFactory to only conditionally call start,yes,undetermined,0,0,0,no,0.011554665196613976,yes,0.9904091208077223,yes,0.9906664964691053,yes,0.9899070108932022,yes,0.9910879462280238
65,hibernate-distribution-3.3.2.GA,DESIGN,// Does this dialect support the UNIQUE column syntax?,yes,undetermined,0,0,0,no,0.048868785270955985,yes,0.9903990001184868,yes,0.9906588533595552,yes,0.9899228066315175,yes,0.9910901952001874
66,hibernate-distribution-3.3.2.GA,DESIGN,// this is done here 'cos we might only know the type here (ugly!) // TODO: improve this a lot:,yes,undetermined,0,0,0,yes,0.9999998033979334,yes,0.9999994109149772,yes,0.9999995668663485,yes,0.9999995125813067,yes,0.9999996585080566
67,hibernate-distribution-3.3.2.GA,DESIGN,// Does this dialect support the FOR UPDATE syntax?,yes,undetermined,0,0,0,no,0.02931713530345544,yes,0.9953532936455783,yes,0.9955323904082134,yes,0.9951595896526385,yes,0.9957798528497672
68,hibernate-distribution-3.3.2.GA,DESIGN,// todo : what is the implication of this?,yes,undetermined,0,0,0,no,0.011915769773668481,no,0.012892946551675156,no,0.012212929575441765,no,0.011854801627810656,no,0.011589831620060054
69,hibernate-distribution-3.3.2.GA,DESIGN,// todo : YUCK!!!,yes,undetermined,0,0,0,yes,0.9999999976316132,yes,0.9999999959491237,yes,0.9999999966658889,yes,0.9999999958888643,yes,0.9999999973330402
70,hibernate-distribution-3.3.2.GA,DESIGN,"// todo : again, how *should* this work for non-pojo entities?",yes,undetermined,0,0,0,yes,0.9999938987328117,yes,0.9999958936341858,yes,0.9999963588224182,yes,0.9999956221152978,yes,0.9999968405688123
71,hibernate-distribution-3.3.2.GA,DESIGN,"// Does this dialect support FOR UPDATE OF, allowing particular rows to be locked?",yes,undetermined,0,0,0,no,0.02579611706160172,yes,0.9904114100797664,yes,0.990644883907749,yes,0.9899081485907246,yes,0.9910885148270734
72,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: really bad, evil hack to fix!!!",yes,undetermined,0,0,0,yes,0.9999999999997506,yes,0.9999999999994887,yes,0.9999999999996064,yes,0.9999999999994954,yes,0.99999999999972
73,hibernate-distribution-3.3.2.GA,DESIGN,"//aliasRefNode.resolve( false, false, aliasRefNode.getText() ); //TODO: is it kosher to do it here? //TODO: is it kosher to do it here?",yes,undetermined,0,0,0,yes,0.9955256692071188,yes,0.9904269893283607,yes,0.9906734445405188,yes,0.9899229602734951,yes,0.991088180944819
74,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: better to degrade to lazy=""false"" if uninstrumented",yes,undetermined,0,0,0,yes,0.9999971683845588,yes,0.9999895318126255,yes,0.9999897918900124,yes,0.9999882250596596,yes,0.9999913640459492
75,hibernate-distribution-3.3.2.GA,DESIGN,// Does this dialect support the Oracle-style FOR UPDATE NOWAIT syntax?,yes,undetermined,0,0,0,no,0.011645298233032718,yes,0.9904202105133667,yes,0.9906507041416215,yes,0.9899181985102985,yes,0.9911024491541024
76,hibernate-distribution-3.3.2.GA,DESIGN,"/**
     * FIXME Per the RegionFactory class Javadoc, this constructor version
     * should not be necessary.
     * 
     * @param props The configuration properties
     */",yes,undetermined,0,0,0,yes,0.9893394220545665,yes,0.9904354032649555,yes,0.9906498084127344,yes,0.9899199009363673,yes,0.9910903673568704
77,hibernate-distribution-3.3.2.GA,DESIGN,//Icky workaround for MySQL bug:,yes,undetermined,0,0,0,yes,0.9968256170300714,yes,0.9999930062571143,yes,0.9999934344473513,yes,0.9999922298655957,yes,0.9999943069917138
78,hibernate-distribution-3.3.2.GA,DESIGN,// we have to set up the table later!! yuck,yes,undetermined,0,0,0,yes,0.5795434222142269,no,0.48205426031387427,no,0.48603214459505656,no,0.4625415371440594,no,0.47386600192197625
79,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: Somehow add the newly created foreign keys to the internal collection,yes,undetermined,0,0,0,yes,0.9221139808225564,yes,0.9904055720692655,yes,0.9906634979645387,yes,0.9899147894207634,yes,0.9910865811881681
80,hibernate-distribution-3.3.2.GA,DESIGN,// This inner class implements a case statement....perhaps im being a bit over-clever here,yes,undetermined,0,0,0,no,0.06536869516676429,yes,0.9904195696447066,yes,0.9906392186887666,yes,0.9899164399998956,yes,0.9910761047040394
81,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: merge into one method!,yes,undetermined,0,0,0,yes,0.9999908062875382,yes,0.9999879229848577,yes,0.9999887473345783,yes,0.9999866787297137,yes,0.9999901602660154
82,hibernate-distribution-3.3.2.GA,DESIGN,// TODO: this is a bit of copy/paste from IndexedCollection.createPrimaryKey(),yes,undetermined,0,0,0,yes,0.9999937496095356,yes,0.9999976232502714,yes,0.9999978961712418,yes,0.9999974930445484,yes,0.9999981972403749
83,hibernate-distribution-3.3.2.GA,DESIGN,// TODO: what type?,yes,undetermined,0,0,0,yes,0.9999997605067924,yes,0.999999586718228,yes,0.9999999315967063,yes,0.9999999162373562,yes,0.9999999430341755
84,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: inefficient,yes,undetermined,0,0,0,yes,0.9919028736402128,yes,0.9935417659903328,yes,0.9940072507414521,yes,0.9935893673189995,yes,0.9943753901188601
85,hibernate-distribution-3.3.2.GA,DESIGN,//FIXME: get the PersistentClass,yes,undetermined,0,0,0,no,0.01194509256739164,yes,0.990430600019049,yes,0.9906581259268384,yes,0.9899332213370433,yes,0.9910883182098792
86,hibernate-distribution-3.3.2.GA,DESIGN,// todo : we can remove this once the deprecated ctor can be made private...,yes,undetermined,0,0,0,yes,0.9891435691858738,yes,0.9906490918513441,yes,0.9909818133441297,yes,0.9904876757585078,yes,0.9915940086011851
87,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: this is too conservative; if all preceding joins were  //      also inner joins, we could use an inner join here",yes,undetermined,0,0,0,no,0.40543350506447606,no,0.4849496316150961,no,0.48913122845926826,no,0.47894650035163416,no,0.49155087324731167
88,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: redesign how PropertyAccessors are acquired...,yes,undetermined,0,0,0,no,0.011915769773668481,no,0.012892946551675156,no,0.012212929575441765,no,0.011854801627810656,no,0.011589831620060054
89,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : not so sure this is needed...,yes,undetermined,0,0,0,yes,0.9999999989009464,yes,0.9999999981372365,yes,0.999999998363075,yes,0.9999999979659651,yes,0.9999999986976599
90,hibernate-distribution-3.3.2.GA,DESIGN,// todo : we can remove this once the deprecated ctor can be made private...,yes,undetermined,0,0,0,yes,0.9891435691858738,yes,0.9906490918513441,yes,0.9909818133441297,yes,0.9904876757585078,yes,0.9915940086011851
91,hibernate-distribution-3.3.2.GA,DESIGN,//create an index on the key columns??,yes,undetermined,0,0,0,no,0.0003780309685424003,yes,0.9904071217449186,yes,0.9906369086515044,yes,0.9899064381074208,yes,0.9910802803420777
92,hibernate-distribution-3.3.2.GA,DESIGN,"/* TODO: joinKeyColumnName & foreignKeyColumnName should be called either here or at a
			 * slightly higer level in the stack (to get all the information we need)
			 * Right now HbmBinder does not support the
			 */",yes,undetermined,0,0,0,yes,0.9930723989837673,yes,0.9968257540297427,yes,0.9969322576145576,yes,0.9966630943718969,yes,0.9971094396532143
93,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: improve this hack!,yes,undetermined,0,0,0,yes,0.9999999999999699,yes,0.9999999999999699,yes,0.9999999999999699,yes,0.9999999999999699,yes,0.9999999999999699
94,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: bad implementation, cos it depends upon ordering of mapping doc //      fixing this requires that Collection/PersistentClass gain access //      to the Mappings reference from Configuration (or the filterDefinitions //      map directly) sometime during Configuration.buildSessionFactory //      (after all the types/filter-defs are known and before building //      persisters).",yes,undetermined,0,0,0,yes,0.7838064675487546,yes,0.8128833468001726,yes,0.8022017476973201,yes,0.7921700548947708,yes,0.8023323268128874
95,hibernate-distribution-3.3.2.GA,DESIGN,//use of trim() here is ugly?,yes,undetermined,0,0,0,yes,0.8723578343789122,yes,0.9773885455695048,yes,0.9906619369527178,yes,0.9899102988395182,yes,0.9910688861537986
96,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: ideally we need the construction of PropertyAccessor to take the following: //      1) EntityMode //      2) EntityMode-specific data (i.e., the classname for pojo entities) //      3) Property-specific data based on the EntityMode (i.e., property-name or dom4j-node-name) // The easiest way, with the introduction of the new runtime-metamodel classes, would be the // the following predicates: //      1) PropertyAccessorFactory.getPropertyAccessor() takes references to both a //          org.hibernate.metadata.EntityModeMetadata and org.hibernate.metadata.Property //      2) What is now termed a ""PropertyAccessor"" stores any values needed from those two //          pieces of information //      3) Code can then simply call PropertyAccess.getGetter() with no parameters; likewise with //          PropertyAccessor.getSetter()",yes,undetermined,0,0,0,yes,0.689686634481904,yes,0.8062739852836397,yes,0.8052806394163238,yes,0.7965641019188228,yes,0.8083660861104612
97,hibernate-distribution-3.3.2.GA,DESIGN,// can happen because of the multiple ways Cache.remove() // can be invoked :(,yes,undetermined,0,0,0,no,0.00903505194765548,yes,0.9904101267752976,yes,0.9906536033276151,yes,0.9899072322897923,yes,0.9910793595415881
98,hibernate-distribution-3.3.2.GA,DESIGN,//ick!,yes,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
99,hibernate-distribution-3.3.2.GA,DESIGN,// todo : we can remove this once the deprecated ctor can be made private...,yes,undetermined,0,0,0,yes,0.9891435691858738,yes,0.9906490918513441,yes,0.9909818133441297,yes,0.9904876757585078,yes,0.9915940086011851
100,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO: this is very suboptimal for some subclasses (namely components), // since it does not take advantage of two-phase-load",yes,undetermined,0,0,0,yes,0.6877699231769796,yes,0.721593079247315,yes,0.7276484634061953,yes,0.7198873055456498,yes,0.7304883059430554
101,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: should this be Session.instantiate(Persister, ...)?",yes,undetermined,0,0,0,yes,0.9848668428291122,yes,0.9904163348853289,yes,0.990655739608395,yes,0.9899266688449906,yes,0.991100701028843
102,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: suck this into initLaziness!,yes,undetermined,0,0,0,no,0.011915769773668481,no,0.012892946551675156,no,0.012212929575441765,no,0.011854801627810656,no,0.011589831620060054
103,hibernate-distribution-3.3.2.GA,DESIGN,// todo : we can remove this once the deprecated ctor can be made private...,yes,undetermined,0,0,0,yes,0.9891435691858738,yes,0.9906490918513441,yes,0.9909818133441297,yes,0.9904876757585078,yes,0.9915940086011851
104,hibernate-distribution-3.3.2.GA,DESIGN,"// 'hibernate.temp.use_jdbc_metadata_defaults' is a temporary magic value. // The need for it is intended to be alleviated with future developement, thus it is // not defined as an Environment constant... // // it is used to control whether we should consult the JDBC metadata to determine // certain Settings default values; it is useful to *not* do this when the database // may not be available (mainly in tools usage).",yes,undetermined,0,0,0,no,0.07657560552092196,yes,0.9904035665467171,yes,0.9906554388493134,yes,0.989919109199734,yes,0.9910909999268545
105,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: is this right??,yes,undetermined,0,0,0,yes,0.9999991963466375,yes,0.9999984418146959,yes,0.9999985040127056,yes,0.9999982086906274,yes,0.9999987161694431
106,hibernate-distribution-3.3.2.GA,DESIGN,//ie. the subquery! yuck!,yes,undetermined,0,0,0,yes,0.8304821950653398,yes,0.8328263322496082,yes,0.8344920936876562,yes,0.825931628944479,yes,0.836198845233372
107,hibernate-distribution-3.3.2.GA,DESIGN,//use of a stringbuffer to workaround a JDK bug,yes,undetermined,0,0,0,yes,0.9999990439961709,yes,0.9999980515999138,yes,0.9999982251440528,yes,0.999997875708862,yes,0.9999984699983302
108,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: copy/paste from recreate(),yes,undetermined,0,0,0,yes,0.987815992733386,yes,0.9905393305478957,yes,0.9909906863179772,yes,0.9902871743243887,yes,0.9914155739455917
109,hibernate-distribution-3.3.2.GA,DESIGN,"//workaround, for backward compatibility of sets with no //not-null columns, assume all columns are used in the //row locator SQL",yes,undetermined,0,0,0,no,0.15037307493694987,no,0.3098436332396579,no,0.3310470185680562,no,0.3209609991182602,no,0.3326239503019004
110,hibernate-distribution-3.3.2.GA,DESIGN,// todo : this eventually needs to be removed,yes,undetermined,0,0,0,yes,0.9968092684833761,yes,0.9904304468097986,yes,0.9906671423118927,yes,0.9899075719949758,yes,0.9910891846073425
111,hibernate-distribution-3.3.2.GA,DESIGN,// todo : remove,yes,undetermined,0,0,0,yes,0.999999493948077,yes,0.9999996945478953,yes,0.9999996933532487,yes,0.9999996440465766,yes,0.9999997508027092
112,hibernate-distribution-3.3.2.GA,DESIGN,"//just to help out during the load (ugly, i know)",yes,undetermined,0,0,0,yes,0.623059379595843,yes,0.7050016010509558,yes,0.7086670815704765,yes,0.701121281322181,yes,0.7108313431296843
113,hibernate-distribution-3.3.2.GA,DESIGN,// hack/workaround as sqlquery impl depend on having a key.,yes,undetermined,0,0,0,yes,0.9999998588954698,yes,0.9999997938135299,yes,0.9999998194265995,yes,0.9999997453046292,yes,0.999999824657543
114,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: handle the case of a foreign key to something other than the pk,yes,undetermined,0,0,0,yes,0.7756219979384125,yes,0.7518998344561532,yes,0.7563953763610937,yes,0.7493667153891038,yes,0.7617369460417657
115,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: assumes all collections disassemble to an array!,yes,undetermined,0,0,0,yes,0.7520203850545333,yes,0.6512898399556042,yes,0.6297623117239288,yes,0.616934324322097,yes,0.6313581250818093
116,hibernate-distribution-3.3.2.GA,DESIGN,// todo : would love to have this work on a notification basis //    where the successful binding of an entity/subclass would //    emit a notification which the extendsQueue entries could //    react to...,yes,undetermined,0,0,0,yes,0.7350239066412977,yes,0.7117213857929117,yes,0.7088375654772876,yes,0.6939549206395723,yes,0.7075957392003155
117,hibernate-distribution-3.3.2.GA,DESIGN,// TODO: is it really neceassry to provide Configuration to CollectionPersisters ? Should it not be enough with associated class ? // or why does EntityPersister's not get access to configuration ? // // The only reason I could see that Configuration gets passed to collection persisters // is so that they can look up the dom4j node name of the entity element in case // no explicit node name was applied at the collection element level.  Are you kidding me? // Trivial to fix then.  Just store and expose the node name on the entity persister // (which the collection persister looks up anyway via other means...).,yes,undetermined,0,0,0,yes,0.8415058524340694,yes,0.7689623526239929,yes,0.7473318762277362,yes,0.7331335976930852,yes,0.7440382896040414
118,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: deprecated, remove eventually",yes,undetermined,0,0,0,yes,0.9965322768501027,yes,0.9904189765537879,yes,0.9906474034961753,yes,0.9899203853172512,yes,0.9910896092622703
119,hibernate-distribution-3.3.2.GA,DESIGN,//TODO possibly relax that,yes,undetermined,0,0,0,yes,0.9962876726403028,yes,0.9947989213714915,yes,0.9950072600583688,yes,0.9945638997341615,yes,0.9952544663192834
120,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO : this is a bit dodgy, come up with a better way to check this (plus see above comment)",yes,undetermined,0,0,0,yes,0.9999913862533449,yes,0.9999935040114543,yes,0.9999892730785821,yes,0.999991956979672,yes,0.9999940992210974
121,hibernate-distribution-3.3.2.GA,DESIGN,//use a degenerated strategy for backward compatibility,yes,undetermined,0,0,0,no,0.015643276350196997,yes,0.9904053701864711,yes,0.9906671298040699,yes,0.9899102404756799,yes,0.9910743282609316
122,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: this is temporary in that the end result will probably not take a Property reference per-se.,yes,undetermined,0,0,0,yes,0.999982132294997,yes,0.9950330164770685,yes,0.9959686864480274,yes,0.9956815581740703,yes,0.9962405454727158
123,hibernate-distribution-3.3.2.GA,DESIGN,// todo : better to handle dynamic filters through implicit DynamicFilterParameterSpecification // see the discussion there in DynamicFilterParameterSpecification's javadocs as to why // it is currently not done that way.,yes,undetermined,0,0,0,yes,0.9943639435881176,yes,0.9940789318766449,yes,0.9941423196367334,yes,0.9936772111717698,yes,0.9944518406887879
124,hibernate-distribution-3.3.2.GA,DESIGN,// get the right object from the list ... would it be easier to just call getEntity() ??,yes,undetermined,0,0,0,no,0.019302400216612784,yes,0.9904138948963397,yes,0.9906527305129144,yes,0.9899114600024385,yes,0.9910835989466729
125,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO: should ""record"" how many properties we have reffered to - and if we  //       don't get'em'all we throw an exception! Way better than trial and error ;)",yes,undetermined,0,0,0,yes,0.9423704096862817,yes,0.9904097141920992,yes,0.9906552907038699,yes,0.9899235089317838,yes,0.9910949599623702
126,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: this dependency is kinda Bad,yes,undetermined,0,0,0,yes,0.9899965079371409,yes,0.9999998678773696,yes,0.999999893179018,yes,0.9999998710338737,yes,0.9999999134555474
127,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: get SQL rendering out of this package!,yes,undetermined,0,0,0,yes,0.9946288311526102,yes,0.9937662926451977,yes,0.9941931180354446,yes,0.9938477977190759,yes,0.9946056998267605
128,hibernate-distribution-3.3.2.GA,DESIGN,// why does this matter?,yes,undetermined,0,0,0,no,0.06087197757470235,yes,0.9904094525288099,yes,0.990639905336555,yes,0.9899049522649236,yes,0.9910698295720808
129,hibernate-distribution-3.3.2.GA,DESIGN,"// important, to account for newly saved entities in query // todo : some kind of check for new status...",yes,undetermined,0,0,0,yes,0.9803404359709018,yes,0.990422302960824,yes,0.9906449717201836,yes,0.9899182816404877,yes,0.9910861786024614
130,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: get SQL rendering out of this package!,yes,undetermined,0,0,0,yes,0.9946288311526102,yes,0.9937662926451977,yes,0.9941931180354446,yes,0.9938477977190759,yes,0.9946056998267605
131,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: can we *always* use the ""null property"" approach for everything?",yes,undetermined,0,0,0,yes,0.9965929758943605,yes,0.9999862616067652,yes,0.9999890456657572,yes,0.9999870427932577,yes,0.9999904146623613
132,hibernate-distribution-3.3.2.GA,DESIGN,"// does this need holdlock also? : return tableName + "" with (updlock, rowlock, holdlock)"";",yes,undetermined,0,0,0,no,0.05206474899408998,yes,0.9904151970263588,yes,0.9906473799396839,yes,0.989907886729752,yes,0.9911000549080041
133,hibernate-distribution-3.3.2.GA,DESIGN,"//for sets, we should end the collection load after resolving //the entities, since we might call hashCode() on the elements //TODO: or we could do this polymorphically, and have two //      different operations implemented differently for arrays",yes,undetermined,0,0,0,yes,0.9584673577240299,yes,0.9904110105902151,yes,0.9906633040440864,yes,0.9899167015980301,yes,0.9910794417203496
134,hibernate-distribution-3.3.2.GA,DESIGN,// todo : remove this and just have subclasses use Isolater/IsolatedWork directly...,yes,undetermined,0,0,0,yes,0.986517787686845,yes,0.9908758479062096,yes,0.9913182893212004,yes,0.9906893405307552,yes,0.9917655743716647
135,hibernate-distribution-3.3.2.GA,DESIGN,"// sql-server, at least needed this dropped after use; strange!",yes,undetermined,0,0,0,no,0.016512218439373616,yes,0.9904140462408616,yes,0.9906490595289011,yes,0.9899152217667718,yes,0.9910745417093391
136,hibernate-distribution-3.3.2.GA,DESIGN,// is it necessary to register %exact since it can only appear in a where clause?,yes,undetermined,0,0,0,no,0.013449615404384356,yes,0.9904128449164047,yes,0.9906437458510674,yes,0.9899172519852486,yes,0.9910704850077041
137,hibernate-distribution-3.3.2.GA,DESIGN,"//for arrays, we should end the collection load before resolving //the entities, since the actual array instances are not instantiated //during loading //TODO: or we could do this polymorphically, and have two //      different operations implemented differently for arrays",yes,undetermined,0,0,0,yes,0.8347056840652528,yes,0.8367892269728503,yes,0.8580099303790717,yes,0.8431657714439247,yes,0.8521555503063567
138,hibernate-distribution-3.3.2.GA,DESIGN,// Does this dialect support the ALTER TABLE syntax?,yes,undetermined,0,0,0,no,0.046675277413576466,yes,0.9904240533664787,yes,0.9906579214452286,yes,0.9899161964978426,yes,0.9910858324910018
139,hibernate-distribution-3.3.2.GA,DESIGN,"// This next bit is to allow for both unsaved-value=""negative"" // and for ""older"" behavior where version number did not get // seeded if it was already set in the object // TODO: shift it into unsaved-value strategy",yes,undetermined,0,0,0,yes,0.7268697961438844,yes,0.654384355097192,yes,0.6635594970723742,yes,0.6500189019820046,yes,0.6637846568130554
140,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: reenable if we also fix the above todo,yes,undetermined,0,0,0,yes,0.9999998276727304,yes,0.9999996753158896,yes,0.9999996973704234,yes,0.9999996403326743,yes,0.9999997505412132
141,hibernate-distribution-3.3.2.GA,DESIGN,// orphans should not be deleted during copy??,yes,undetermined,0,0,0,no,0.004293580295206977,yes,0.9903981710520305,yes,0.9906572672315512,yes,0.9899171567237781,yes,0.9910780868301219
142,hibernate-distribution-3.3.2.GA,DESIGN,// orphans should not be deleted during merge??,yes,undetermined,0,0,0,no,0.007613941756998475,yes,0.9904140526733477,yes,0.9906421906089988,yes,0.9899151449945858,yes,0.991077199815668
143,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: suck this logic into the collection!,yes,undetermined,0,0,0,yes,0.9961495543823972,yes,0.991428567054104,yes,0.9920471934074222,yes,0.9914107919265293,yes,0.9923066253218972
144,hibernate-distribution-3.3.2.GA,DESIGN,// todo : we can actually just determine this from the incoming EntityEntry-s,yes,undetermined,0,0,0,yes,0.9825264193081417,yes,0.9904028601571729,yes,0.9906413858613564,yes,0.9899162178072614,yes,0.9910873985964053
145,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: this bit actually has to be called after all cascades! //      but since identity insert is called *synchronously*, //      instead of asynchronously as other actions, it isn't",yes,undetermined,0,0,0,yes,0.9274387942107514,yes,0.9904141737698814,yes,0.990659831969335,yes,0.9899190831020497,yes,0.9910948645528888
146,hibernate-distribution-3.3.2.GA,DESIGN,// this class has no proxies (so do a shortcut),yes,undetermined,0,0,0,no,0.010654088601292896,yes,0.9904227882552,yes,0.9906380185602303,yes,0.9899211158708766,yes,0.9910802201998555
147,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: Should this be an InitializeEntityEventListener??? (watch out for performance!),yes,undetermined,0,0,0,yes,0.999997441476723,yes,0.9999996144307727,yes,0.9999995821973294,yes,0.9999995124390337,yes,0.9999996602802984
148,hibernate-distribution-3.3.2.GA,DESIGN,"// todo : need map? the prob is a proper key, right?",yes,undetermined,0,0,0,yes,0.9962321237798765,yes,0.9999840867322729,yes,0.9999853696579724,yes,0.9999831760288015,yes,0.9999875278528723
149,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: better to pass the id in as an argument?,yes,undetermined,0,0,0,yes,0.9969009101853673,yes,0.9961328928564062,yes,0.9964208316057969,yes,0.9961052377816549,yes,0.9966130302099422
150,hibernate-distribution-3.3.2.GA,DESIGN,//do we even really need this? the update will fail anyway....,yes,undetermined,0,0,0,no,0.023214995629099098,yes,0.9904092772031584,yes,0.9906669399023503,yes,0.9899140885040556,yes,0.9910830514653737
151,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: would it be better to do a refresh from db?,yes,undetermined,0,0,0,yes,0.9999854781149096,yes,0.9999814854294594,yes,0.9999831567911714,yes,0.9974227161355891,yes,0.9999850402841781
152,hibernate-distribution-3.3.2.GA,DESIGN,"/**
	 * This form used from annotations (?).  Essentially the same as the above using a
	 * resultset-mapping reference, but without cacheMode, readOnly, and comment.
	 *
	 * FIXME: annotations do not use it, so it can be remove from my POV
	 * @deprecated
	 *
	 *
	 * @param query The sql query string
	 * @param resultSetRef The result-set-mapping name
	 * @param querySpaces Any specified query spaces (used for auto-flushing)
	 * @param cacheable Whether the query results are cacheable
	 * @param cacheRegion If cacheable, the region into which to store the results
	 * @param timeout A JDBC-level timeout to be applied
	 * @param fetchSize A JDBC-level fetch-size to be applied
	 * @param flushMode The flush mode to use for this query
	 * @param parameterTypes parameter type map
	 * @param callable Does the query string represent a callable object (i.e., proc)
	 */",yes,undetermined,0,0,0,yes,0.634327289886394,yes,0.5682342863181851,no,0.5299328840073128,no,0.5,no,0.5073829528932247
153,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: ugly here:,yes,undetermined,0,0,0,yes,0.9999999999998437,yes,0.9999999999994647,yes,0.9999999999997568,yes,0.9999999999996867,yes,0.9999999999998266
154,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: not quite sure about the full implications of this!,yes,undetermined,0,0,0,yes,0.9954776288766715,yes,0.9999956489088286,yes,0.9999960662148182,yes,0.999995313679611,yes,0.9999965795409856
155,hibernate-distribution-3.3.2.GA,DESIGN,// this only works because collection entries are kept in a sequenced // map by persistence context (maybe we should do like entities and // keep a separate sequences set...) //TODO: calling entrySet on an IdentityMap is SLOW!!,yes,undetermined,0,0,0,yes,0.9300782501472437,yes,0.9904285467282439,yes,0.9906545740847585,yes,0.9899000231424712,yes,0.9910781749765254
156,hibernate-distribution-3.3.2.GA,DESIGN,"// todo : i'd much rather have this done from #endLoadingCollection(CollectionPersister,LoadingCollectionEntry)...",yes,undetermined,0,0,0,no,0.011915769773668481,no,0.012892946551675156,no,0.012212929575441765,no,0.011854801627810656,no,0.011589831620060054
157,hibernate-distribution-3.3.2.GA,DESIGN,"// todo : hack!!! // NOTE : here we cleanup the load context when we have no more local // LCE entries.  This ""works"" for the time being because really // only the collection load contexts are implemented.  Long term, // this cleanup should become part of the ""close result set"" // processing from the (sandbox/jdbc) jdbc-container code.",yes,undetermined,0,0,0,yes,0.9904225402801263,yes,0.994316751763186,yes,0.9931260770760895,yes,0.992346045062531,yes,0.9930193194616698
158,hibernate-distribution-3.3.2.GA,DESIGN,// todo : add the notion of enabled filters to the CacheKey to differentiate filtered collections from non-filtered; //      but CacheKey is currently used for both collections and entities; would ideally need to define two seperate ones; //      currently this works in conjuction with the check on //      DefaultInitializeCollectionEventHandler.initializeCollectionFromCache() (which makes sure to not read from //      cache with enabled filters). // EARLY EXIT!!!!!,yes,undetermined,0,0,0,no,0.21703441066052065,no,0.18639232223280375,no,0.17729129409021524,no,0.17244787500723485,no,0.17582488575152203
159,hibernate-distribution-3.3.2.GA,DESIGN,//PostLoad is needed for EJB3 //TODO: reuse the PostLoadEvent...,yes,undetermined,0,0,0,yes,0.9655450908550791,yes,0.990423800754374,yes,0.9906507571240574,yes,0.9899026932018808,yes,0.9910883876205671
160,hibernate-distribution-3.3.2.GA,DESIGN,// todo : should we check the current isolation mode explicitly?,yes,undetermined,0,0,0,yes,0.9723036784617576,yes,0.9904257578118545,yes,0.9906559449549166,yes,0.9898992247930094,yes,0.9910887083769208
161,hibernate-distribution-3.3.2.GA,DESIGN,// brand new collection //TODO: or an array!! we can't lock objects with arrays now??,yes,undetermined,0,0,0,yes,0.8598532385294501,yes,0.958959909983845,yes,0.990648813190134,yes,0.9899029680296623,yes,0.9910983189006423
162,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO: iteratively get transient entities and retry merge until one of the following conditions: //       1) transientCopyCache.size() == 0 //       2) transientCopyCache.size() is not decreasing and copyCache.size() is not increasing // TODO: find out if retrying can add entities to copyCache (don't think it can...) // For now, just retry once; throw TransientObjectException if there are still any transient entities",yes,undetermined,0,0,0,yes,0.9594129471555489,yes,0.9904129579521653,yes,0.9906612532706977,yes,0.9899326194014624,yes,0.9910938660342662
163,hibernate-distribution-3.3.2.GA,DESIGN,"// null or brand new collection // this will also (inefficiently) handle arrays, which have // no snapshot, so we can't do any better",yes,undetermined,0,0,0,no,0.07333315486161604,yes,0.9904295833546112,yes,0.9906475328330342,yes,0.9899240771902579,yes,0.9910915388273441
164,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : perhaps we should additionally require that the incoming entity // version be equivalent to the defined unsaved-value?,yes,undetermined,0,0,0,yes,0.6779412864449594,yes,0.6563877536613005,yes,0.6460251450297302,yes,0.6312952578054194,yes,0.645692444150593
165,hibernate-distribution-3.3.2.GA,DESIGN,"/**
 * Provides query splitting methods, which were originally in QueryTranslator.
 * <br>
 * TODO: This will need to be refactored at some point.
 *
 * @author josh
 */",yes,undetermined,0,0,0,yes,0.967865962913735,yes,0.9904078023650115,yes,0.9906661287014866,yes,0.9899370745377161,yes,0.9910938487308206
166,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : most of below was taken verbatim from DotNode; should either delegate this logic or super-type it,yes,undetermined,0,0,0,yes,0.9923678684986845,yes,0.9906841245278345,yes,0.9917194978819313,yes,0.9911354718445833,yes,0.9921754649618166
167,hibernate-distribution-3.3.2.GA,DESIGN,"// todo : currently expects that the individual with expressions apply to the same sql table join. //      This may not be the case for joined-subclass where the property values //      might be coming from different tables in the joined hierarchy.  At some //      point we should expand this to support that capability.  However, that has //      some difficulties: //          1) the biggest is how to handle ORs when the individual comparisons are //              linked to different sql joins. //          2) here we would need to track each comparison individually, along with //              the join alias to which it applies and then pass that information //              back to the FromElement so it can pass it along to the JoinSequence",yes,undetermined,0,0,0,no,0.15342219010348881,no,0.12084406409958492,no,0.12076663901629288,no,0.11758995479862874,no,0.1194654281625759
168,hibernate-distribution-3.3.2.GA,DESIGN,"// No explicit select expression; render the id and properties // projection lists for every persister in the from clause into // a single 'token node'. //TODO: the only reason we need this stuff now is collection filters, //      we should get rid of derived select clause completely!",yes,undetermined,0,0,0,yes,0.8297422823925266,yes,0.6808532379276221,yes,0.6465754524686265,yes,0.6277250828430002,yes,0.6406994778453459
169,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : better way?!?,yes,undetermined,0,0,0,yes,0.9999999995768477,yes,0.9999999995332195,yes,0.9999999995913496,yes,0.9999999994779716,yes,0.9999999996734371
170,hibernate-distribution-3.3.2.GA,DESIGN,"/////////////////////////////////////////////////////////////////////// // HACK ALERT !!!!!!!!!!!!!!!!!!!!!!!!!!!! // Attempt to work around ""ghost"" ImpliedFromElements that occasionally // show up between the actual things being joined.  This consistently // occurs from index nodes (at least against many-to-many).  Not sure // if there are other conditions // // Essentially, look-ahead to the next FromElement that actually // writes something to the SQL",yes,undetermined,0,0,0,yes,0.7324294015707774,yes,0.6846416292543152,yes,0.685365925328516,yes,0.6677816063674678,yes,0.6812012473705107
171,hibernate-distribution-3.3.2.GA,DESIGN,// Not possible to simply re-use the versionPropertyNode here as it causes // OOM errors due to circularity :(,yes,undetermined,0,0,0,no,0.045131905431696435,yes,0.9904046110997106,yes,0.9906604407215804,yes,0.9899224649258006,yes,0.9910755358207498
172,hibernate-distribution-3.3.2.GA,DESIGN,"// this function has a template -> restore output, apply the template and write the result out // TODO: Downcast to avoid using an interface?  Yuck.",yes,undetermined,0,0,0,yes,0.7906837666094044,yes,0.8087344797614818,yes,0.8204290022084647,yes,0.81209293428388,yes,0.823044104761002
173,hibernate-distribution-3.3.2.GA,DESIGN,"// at some point the generate phase needs to be moved out of here, // because a single object-level DML might spawn multiple SQL DML // command executions. // // Possible to just move the sql generation for dml stuff, but for // consistency-sake probably best to just move responsiblity for // the generation phase completely into the delegates // (QueryLoader/StatementExecutor) themselves.  Also, not sure why // QueryLoader currently even has a dependency on this at all; does // it need it?  Ideally like to see the walker itself given to the delegates directly...",yes,undetermined,0,0,0,no,0.307959314248769,no,0.21639008981459049,no,0.18240004493123757,no,0.1749695391941304,no,0.1784267325087722
174,hibernate-distribution-3.3.2.GA,DESIGN,//TODO:this is only needed during compilation .. can we eliminate the instvar?,yes,undetermined,0,0,0,yes,0.9999964962255649,yes,0.9999905261455484,yes,0.9999909642412614,yes,0.9999892784343051,yes,0.9999921611557937
175,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : absolutely no usages of this constructor form; can it go away?,yes,undetermined,0,0,0,yes,0.8284663017171691,yes,0.9802866667717187,yes,0.9906688745527776,yes,0.9899290305187951,yes,0.9910791720101987
176,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: is this a bit ugly?,yes,undetermined,0,0,0,yes,0.9999999999919365,yes,0.9999999999877968,yes,0.99999999999334,yes,0.9999999999915217,yes,0.9999999999950466
177,hibernate-distribution-3.3.2.GA,DESIGN,"// even here, if only properties mapped to the ""base table"" are referenced // in the set and where clauses, this could be handled by the BasicDelegate. // TODO : decide if it is better performance-wise to perform that check, or to simply use the MultiTableUpdateDelegate",yes,undetermined,0,0,0,yes,0.9250725594854784,yes,0.9904052281233809,yes,0.9906615936235099,yes,0.9899224834217294,yes,0.9911011779912616
178,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : remove these last two as batcher is no longer managing connections,yes,undetermined,0,0,0,yes,0.9812134382306165,yes,0.9904243620572821,yes,0.9906420644570824,yes,0.9899233369701592,yes,0.9911000808738554
179,hibernate-distribution-3.3.2.GA,DESIGN,"// VERY IMPORTANT!!!! - This class needs to be free of any static references // to any CGLIB or Javassist classes.  Otherwise, users will always need both // on their classpaths no matter which (if either) they use. // // Another option here would be to remove the Hibernate.isPropertyInitialized() // method and have the users go through the SessionFactory to get this information.",yes,undetermined,0,0,0,no,0.13643716910232656,no,0.21111269338058225,no,0.21459052332724013,no,0.20745909425112705,no,0.21181857129682116
180,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO : we really need to be able to deal with component paths here also; // this is difficult because the hql-sql grammar expects all those node types // to be FromReferenceNodes.  One potential fix here would be to convert the // IntoClause to just use a FromClause/FromElement combo (as a child of the // InsertStatement) and move all this logic into the InsertStatement.  That's // probably the easiest approach (read: least amount of changes to the grammar // and code), but just doesn't feel right as then an insert would contain // 2 from-clauses",yes,undetermined,0,0,0,yes,0.9062707863503324,yes,0.99041421306237,yes,0.9906636127729667,yes,0.9899189526909797,yes,0.9910946648353975
181,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO : an optimization here would be to consider cascade deletes and not gen those delete statements; //      the difficulty is the ordering of the tables here vs the cascade attributes on the persisters -> //          the table info gotten here should really be self-contained (i.e., a class representation //          defining all the needed attributes), then we could then get an array of those",yes,undetermined,0,0,0,yes,0.9327359083910275,yes,0.9904218730625656,yes,0.9906569371022473,yes,0.9899197275573033,yes,0.9910877304883097
182,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: switch statements are always evil! We already had bugs because  //      of forgotten token types. Use polymorphism for this!,yes,undetermined,0,0,0,yes,0.9915419278663895,yes,0.9904000625712917,yes,0.9906555970051075,yes,0.9899261205185343,yes,0.991082834308145
183,hibernate-distribution-3.3.2.GA,DESIGN,// really there are two situations where it should be ok to allow the insertion // into properties defined on a superclass: //      1) union-subclass with an abstract root entity //      2) discrim-subclass // // #1 is handled already because of the fact that // UnionSubclassPersister alreay always returns 0 // for this call... // // we may want to disallow it for discrim-subclass just for // consistency-sake (currently does not work anyway)...,yes,undetermined,0,0,0,no,0.4161154060579389,no,0.21515483739885544,no,0.20043570522854828,no,0.18589316780744955,no,0.1897669305171445
184,hibernate-distribution-3.3.2.GA,DESIGN,// implicit joins are always(?) ok to reuse,yes,undetermined,0,0,0,no,0.004425446876339327,yes,0.9904159184574173,yes,0.9906357202188667,yes,0.9899189551763843,yes,0.9911058938993306
185,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: used to be exprNoParens! was this needed?,yes,undetermined,0,0,0,yes,0.9999999999865824,yes,0.999999999973957,yes,0.9999999999756624,yes,0.9999999999688102,yes,0.9999999999813572
186,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : we may also want to check that the types here map to exactly one column/JDBC-type //      can't think of a situation where arithmetic expression between multi-column mappings //      makes any sense.,yes,undetermined,0,0,0,yes,0.9746143240546221,yes,0.9904279008456021,yes,0.9906650021433913,yes,0.9899262892130014,yes,0.9910872826260749
187,hibernate-distribution-3.3.2.GA,DESIGN,// we do not know either type //BLIND GUESS!,yes,undetermined,0,0,0,no,0.04477907740185516,yes,0.9904099579838302,yes,0.9906511097900385,yes,0.9899279949036511,yes,0.9910996503023415
188,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO: get SQL rendering out of here, create an AST for the join expressions. // Use the SQL generator grammar to generate the SQL text for the index expression.",yes,undetermined,0,0,0,no,0.49272186787390526,no,0.5126785283085546,no,0.516213875960063,no,0.5076724762799804,no,0.5203901146262306
189,hibernate-distribution-3.3.2.GA,DESIGN,"// We would probably refactor to have LogicParser (builds a tree of simple // expressions connected by and, or, not), ExpressionParser (translates // from OO terms like foo, foo.Bar, foo.Bar.Baz to SQL terms like // FOOS.ID, FOOS.BAR_ID, etc) and PathExpressionParser (which does much // the same thing it does now)",yes,undetermined,0,0,0,no,0.21358120551453924,no,0.2579187797023652,no,0.24826928556188316,no,0.24165957693528273,no,0.24709672011067035
190,hibernate-distribution-3.3.2.GA,DESIGN,// short-circuit for performance...,yes,undetermined,0,0,0,no,0.005061750967900986,yes,0.9903989439361198,yes,0.9906622411135392,yes,0.9899079465802668,yes,0.9911003706060855
191,hibernate-distribution-3.3.2.GA,DESIGN,"// not absolutely necessary, but does help with aggressive release",yes,undetermined,0,0,0,no,0.0035208612937593963,yes,0.9904157000332168,yes,0.9906424342091791,yes,0.98990207779187,yes,0.991079142910165
192,hibernate-distribution-3.3.2.GA,DESIGN,// try block is a hack around fact that currently tuplizers are not // given the opportunity to resolve a subclass entity name.  this // allows the (we assume custom) interceptor the ability to // influence this decision if we were not able to based on the // given entityName,yes,undetermined,0,0,0,yes,0.8645012319875561,yes,0.8225154574957318,yes,0.8090993360456452,yes,0.7912148165209985,yes,0.8029813713068616
193,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: this is one of the ugliest and most fragile pieces of code in Hibernate....,yes,undetermined,0,0,0,yes,0.9481629964590137,yes,0.9904366876771464,yes,0.9906586586546957,yes,0.9899118269795392,yes,0.9910825454510009
194,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: implement functionality //  this might be painful to do here, as the ""join post processing"" for //  the subquery has already been performed (meaning that for //  theta-join dialects, the join conditions have already been moved //  over to the where clause).  A ""simple"" solution here might to //  perform ""join post processing"" once for the entire query (including //  any subqueries) at one fell swoop",yes,undetermined,0,0,0,no,0.4436745780860249,no,0.38303844778426827,no,0.38781497844732066,no,0.3691628770587828,no,0.37849965176182054
195,hibernate-distribution-3.3.2.GA,DESIGN,//yuck!,yes,undetermined,0,0,0,yes,0.8304821950653398,yes,0.8328263322496082,yes,0.8344920936876562,yes,0.825931628944479,yes,0.836198845233372
196,hibernate-distribution-3.3.2.GA,DESIGN,"// ignore it; the incoming property could not be found so we // cannot be sure what to do here.  At the very least, the // safest is to simply not apply any dereference toggling...",yes,undetermined,0,0,0,no,0.012539429066684493,yes,0.9904205980926167,yes,0.9906438290771998,yes,0.9899026077316795,yes,0.9910877707433485
197,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: make this a bit nicer,yes,undetermined,0,0,0,yes,0.9964355770600442,yes,0.9953781212840422,yes,0.9955576683405978,yes,0.9953794075057163,yes,0.9959679945299327
198,hibernate-distribution-3.3.2.GA,DESIGN,// yuck!,yes,undetermined,0,0,0,yes,0.8304821950653398,yes,0.8328263322496082,yes,0.8344920936876562,yes,0.825931628944479,yes,0.836198845233372
199,hibernate-distribution-3.3.2.GA,DESIGN,// todo : potentially look at optimizing these two arrays,yes,undetermined,0,0,0,yes,0.886968321858301,yes,0.9097296636390028,yes,0.9906640398580874,yes,0.9899085745791962,yes,0.9910713016855885
200,hibernate-distribution-3.3.2.GA,DESIGN,//note that i parameter is now unused (delete it?),yes,undetermined,0,0,0,no,0.5072464501589223,no,0.4325903947701846,no,0.4339602591713506,no,0.4256946498862308,no,0.4346953588102691
201,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO: Figure out a better way to get the FROM elements in a proper tree structure. // If this is not the destination of a many-to-many, add it as a child of the origin.",yes,undetermined,0,0,0,yes,0.9959318595374617,yes,0.9958337446521136,yes,0.9955842893452522,yes,0.9952482602818201,yes,0.9959158374540075
202,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : this constructor form is *only* used from constructor directly below us; can it go away?,yes,undetermined,0,0,0,yes,0.9659800119439963,yes,0.9904056248636322,yes,0.9906637414656103,yes,0.989925308915695,yes,0.9910971392540093
203,hibernate-distribution-3.3.2.GA,DESIGN,// todo : remove,yes,undetermined,0,0,0,yes,0.999999493948077,yes,0.9999996945478953,yes,0.9999996933532487,yes,0.9999996440465766,yes,0.9999997508027092
204,hibernate-distribution-3.3.2.GA,DESIGN,"// We should reengineer this class so that, rather than the current ad - // hoc linear approach to processing a stream of tokens, we instead // build up a tree of expressions.",yes,undetermined,0,0,0,no,0.03084832026790155,yes,0.9904051751889061,yes,0.9906483021937207,yes,0.9899105558075426,yes,0.9910867714225712
205,hibernate-distribution-3.3.2.GA,DESIGN,"// todo : should this get moved to PersistentContext? // logically, is PersistentContext the ""thing"" to which an interceptor gets attached?",yes,undetermined,0,0,0,yes,0.9937476177997107,yes,0.993613609066334,yes,0.9938404824183928,yes,0.9935097778873738,yes,0.994306926426271
206,hibernate-distribution-3.3.2.GA,DESIGN,// TODO: something much better - look at the type of the other expression! // TODO: Have comparisonExpression and/or arithmeticExpression rules complete the resolution of boolean nodes.,yes,undetermined,0,0,0,yes,0.9999895396636477,yes,0.9972028307451947,yes,0.9999810200851361,yes,0.997203283258481,yes,0.9999824050640369
207,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: this class does too many things! we need a different //kind of path expression parser for each of the diffferent //ways in which path expressions can occur,yes,undetermined,0,0,0,yes,0.9497119534197507,yes,0.9904062008868652,yes,0.9906464932569602,yes,0.9899201479758051,yes,0.9910875064924807
208,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: optimize this better!,yes,undetermined,0,0,0,yes,0.9999995866889617,yes,0.9999992414215984,yes,0.9999993031087757,yes,0.9999991569623351,yes,0.99999940441186
209,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: should we allow suffixes on these ?,yes,undetermined,0,0,0,yes,0.9806187404798065,yes,0.9904198758807637,yes,0.9906736825714062,yes,0.9899356821874628,yes,0.9910876021851462
210,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: is this really necessary????,yes,undetermined,0,0,0,yes,0.9923609638419867,yes,0.9999999703650032,yes,0.9999999725199592,yes,0.9999999662321353,yes,0.9999999773318144
211,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : not sure the best way to handle this. // The non-performant way :,yes,undetermined,0,0,0,yes,0.9999995714378571,yes,0.9999996805416504,yes,0.9999991762760443,yes,0.9999990093438957,yes,0.9999992943552142
212,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: is there a better way?,yes,undetermined,0,0,0,yes,0.9999999995768477,yes,0.9999999995332195,yes,0.9999999995913496,yes,0.9999999994779716,yes,0.9999999996734371
213,hibernate-distribution-3.3.2.GA,DESIGN,//The class is now way to complex!,yes,undetermined,0,0,0,no,0.035543268499074264,yes,0.9904015117085492,yes,0.9906460016779729,yes,0.9899200845130925,yes,0.9910780113725709
214,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : would be really nice to cache the spec on the query-def so as to not have to re-calc the hash; // currently not doable though because of the resultset-ref stuff...,yes,undetermined,0,0,0,yes,0.91681842998743,yes,0.990403183383681,yes,0.9906647487795267,yes,0.9899124945716324,yes,0.9910837467963336
215,hibernate-distribution-3.3.2.GA,DESIGN,//name from a super query (a bit inelegant that it shows up here),yes,undetermined,0,0,0,no,0.06030108834069174,yes,0.9904243697392521,yes,0.9906687238120213,yes,0.9899133401862847,yes,0.9910788847653768
216,hibernate-distribution-3.3.2.GA,DESIGN,//real hacky... // used to count the nesting of parentheses,yes,undetermined,0,0,0,no,0.15859904697977908,no,0.14747425408297055,no,0.1404826130942442,no,0.13653669714192956,no,0.13868696635329492
217,hibernate-distribution-3.3.2.GA,DESIGN,// todo : we can remove this once the deprecated ctor can be made private...,yes,undetermined,0,0,0,yes,0.9891435691858738,yes,0.9906490918513441,yes,0.9909818133441297,yes,0.9904876757585078,yes,0.9915940086011851
218,hibernate-distribution-3.3.2.GA,DESIGN,"//put() has nowait semantics, is this really appropriate? //note that it needs to be async replication, never local or sync",yes,undetermined,0,0,0,no,0.4413500593542599,no,0.3848869021833463,no,0.40414239494075155,no,0.3940443912001566,no,0.4025051932257561
219,hibernate-distribution-3.3.2.GA,DESIGN,"// ugly hack for cases like ""elements(foo.bar.collection)"" // (multi-part path expression ending in elements or indices)",yes,undetermined,0,0,0,yes,0.9943338141661,yes,0.9925973335742838,yes,0.9930576347876379,yes,0.9923011815774284,yes,0.9931643429957623
220,hibernate-distribution-3.3.2.GA,DESIGN,// FIXME Hacky workaround to JBCACHE-1202,yes,undetermined,0,0,0,yes,0.9999999999998892,yes,0.9999999999999021,yes,0.9999999999999203,yes,0.9999999999998981,yes,0.9999999999999448
221,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: COPY/PASTE FROM SessionImpl, pull up!",yes,undetermined,0,0,0,yes,0.9892625347005582,yes,0.9914031701127478,yes,0.9919629659751998,yes,0.9913356123662831,yes,0.9923573994754371
222,hibernate-distribution-3.3.2.GA,DESIGN,"// todo : need to find a clean way to handle the ""event source"" role // a seperate classs responsible for generating/dispatching events just duplicates most of the Session methods... // passing around seperate reto interceptor, factory, actionQueue, and persistentContext is not manageable...",yes,undetermined,0,0,0,yes,0.9623726993329882,yes,0.9904274830475303,yes,0.9906512258612737,yes,0.9899249079655912,yes,0.991100327048569
223,hibernate-distribution-3.3.2.GA,DESIGN,//Must be done here because of side-effect! yuck...,yes,undetermined,0,0,0,yes,0.6812564605312472,yes,0.6509782864666372,yes,0.6429838232468167,yes,0.6290997093099974,yes,0.6432496184852274
224,hibernate-distribution-3.3.2.GA,DESIGN,//We should actually rework this class to not implement Parser //and just process path expressions in the most convenient way.,yes,undetermined,0,0,0,no,0.36317760601175164,no,0.43759186594015576,no,0.4187761159299025,no,0.4048412188008584,no,0.41535086138379407
225,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : should remove this exposure //  and have all references to the session's batcher use the ConnectionManager.,yes,undetermined,0,0,0,yes,0.9955825682754289,yes,0.9937240933797237,yes,0.9940495932470507,yes,0.9936514412049604,yes,0.994424366285656
226,hibernate-distribution-3.3.2.GA,DESIGN,// we may be screwed here since the collection action is about to execute // and we do not know the final owner key value,yes,undetermined,0,0,0,no,0.010034687843321627,yes,0.9904028142584113,yes,0.9906415656724551,yes,0.9899073780842648,yes,0.9910705043663588
227,hibernate-distribution-3.3.2.GA,DESIGN,"// Needed the ""clazz_"" check to work around union-subclasses // TODO : is there a way to tell whether a persister is truly discrim-column based inheritence?",yes,undetermined,0,0,0,yes,0.9858275350048971,yes,0.9904159068632666,yes,0.9906437141986985,yes,0.9899352160946032,yes,0.9910811263953577
228,hibernate-distribution-3.3.2.GA,DESIGN,//work around a bug in all known connection pools....,yes,undetermined,0,0,0,no,0.1647994434757936,no,0.1492331009228628,no,0.14504617148632104,no,0.13812704314659677,no,0.1403160121996424
229,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: reuse the PreLoadEvent,yes,undetermined,0,0,0,yes,0.9943917085574847,yes,0.9999859684237231,yes,0.999987024570987,yes,0.9999844144117012,yes,0.9999884332646114
230,hibernate-distribution-3.3.2.GA,DESIGN,// Need a better way to define the suffixes here...,yes,undetermined,0,0,0,no,0.2057814714384454,no,0.30516654161765583,no,0.2719038483602622,no,0.2636917776180375,no,0.2699976910454304
231,hibernate-distribution-3.3.2.GA,DESIGN,//workaround for WebLogic,yes,undetermined,0,0,0,yes,0.9697267666594388,yes,0.9904108702589941,yes,0.9906568440858826,yes,0.9899103075286575,yes,0.9910803420282165
232,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: temporary,yes,undetermined,0,0,0,yes,0.999999906272634,yes,0.9999978002893005,yes,0.9999979463072173,yes,0.9999975523490078,yes,0.9999982406783727
233,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : YUCK!!!  fix after HHH-1907 is complete,yes,undetermined,0,0,0,yes,0.9999984442779417,yes,0.9999988922856057,yes,0.9999990734870041,yes,0.9999989420798583,yes,0.9999992503052465
234,hibernate-distribution-3.3.2.GA,DESIGN,// would be great to move all this below here into another method that could also be used // from the new scrolling stuff. // // Would need to change the way the max-row stuff is handled (i.e. behind an interface) so // that I could do the control breaking at the means to know when to stop,yes,undetermined,0,0,0,no,0.21201322664995145,no,0.22558343192923352,no,0.19504765640212357,no,0.192921303917448,no,0.19706365968843345
235,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: the i==entitySpan-1 bit depends upon subclass implementation (very bad),yes,undetermined,0,0,0,yes,0.9999826595079884,yes,0.9999909866140165,yes,0.9999928983823425,yes,0.9999915708270803,yes,0.9999938200710278
236,hibernate-distribution-3.3.2.GA,DESIGN,"// some messy, complex stuff here, since createCriteria() can take an // aliased path, or a path rooted at the creating criteria instance",yes,undetermined,0,0,0,no,0.014205724671876627,yes,0.9904330317988196,yes,0.9906586054390742,yes,0.9899155030531605,yes,0.9910664438992408
237,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: add a CriteriaImplementor interface //      this class depends directly upon CriteriaImpl in the impl package...,yes,undetermined,0,0,0,yes,0.9701443917095005,yes,0.9904180460162372,yes,0.990661144402154,yes,0.9899193101330409,yes,0.9911037684641029
238,hibernate-distribution-3.3.2.GA,DESIGN,"// polymorphism not really handled completely correctly, // perhaps...well, actually its ok, assuming that the // entity name used in the lookup is the same as the // the one used here, which it will be",yes,undetermined,0,0,0,no,0.23330046229409143,no,0.1976992936574504,no,0.17871093870270766,no,0.17264984159511704,no,0.1762477967884437
239,hibernate-distribution-3.3.2.GA,DESIGN,//This is not very nice (and quite slow):,yes,undetermined,0,0,0,no,0.08378386477438211,yes,0.9904088184083688,yes,0.9906458865049901,yes,0.9899110224328278,yes,0.9910781089996415
240,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: get SQL rendering out of here,yes,undetermined,0,0,0,yes,0.997136488634838,yes,0.9966757624787304,yes,0.9969248464473854,yes,0.9967352063273208,yes,0.9971677603746985
241,hibernate-distribution-3.3.2.GA,DESIGN,// meant to handle dynamic instantiation queries...(Copy from QueryLoader),yes,undetermined,0,0,0,no,0.004061327202031264,yes,0.9830490436072724,yes,0.9906456314343705,yes,0.989898599662266,yes,0.9910934684614774
242,hibernate-distribution-3.3.2.GA,DESIGN,// Make sure this is a defined parameter and check the incoming value type // TODO: what should be the actual exception type here?,yes,undetermined,0,0,0,yes,0.8312653676913061,yes,0.8208991613106341,yes,0.8233575774427938,yes,0.8153856056412785,yes,0.8259432914595671
243,hibernate-distribution-3.3.2.GA,DESIGN,// worrying about proxies is perhaps a little bit of overkill here...,yes,undetermined,0,0,0,no,0.09221638652984229,yes,0.9904151333503911,yes,0.990671388365256,yes,0.9899282526110545,yes,0.9911002917218136
244,hibernate-distribution-3.3.2.GA,DESIGN,// todo : throw exception?  maybe warn if not the same?,yes,undetermined,0,0,0,yes,0.9999819946628257,yes,0.9999926163249037,yes,0.9999927680324975,yes,0.9999916639929836,yes,0.9999938826627042
245,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: make EntityPersister *not* depend on SessionFactoryImplementor //interface, if possible",yes,undetermined,0,0,0,yes,0.9999980442458039,yes,0.9999958518039679,yes,0.9999967853228398,yes,0.9999961972672389,yes,0.9999972457405797
246,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : what amount of significant digits need to be supported here? //      - from the DecimalFormat docs: //          [significant digits] = [minimum integer digits] + [maximum fraction digits],yes,undetermined,0,0,0,no,0.1243631233068551,no,0.12586143405720887,no,0.11946719723078973,no,0.11559617495997668,no,0.11700887419945677
247,hibernate-distribution-3.3.2.GA,DESIGN,"//for backward compatibility, allow a set with no not-null  //element columns, using all columns in the row locater SQL //TODO: create an implicit not null constraint on all cols?",yes,undetermined,0,0,0,no,0.23151485821231962,no,0.42817763161148303,no,0.44385550615634645,no,0.43570000478202325,no,0.44675076893450694
248,hibernate-distribution-3.3.2.GA,DESIGN,// todo : we can remove this once the deprecated ctor can be made private...,yes,undetermined,0,0,0,yes,0.9891435691858738,yes,0.9906490918513441,yes,0.9909818133441297,yes,0.9904876757585078,yes,0.9915940086011851
249,hibernate-distribution-3.3.2.GA,DESIGN,// TODO: copy/paste from ManyToOneType,yes,undetermined,0,0,0,yes,0.999994433025849,yes,0.9999963501422372,yes,0.9999967523056444,yes,0.9999961647309707,yes,0.999997219624999
250,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: code duplication with SingleTableEntityPersister,yes,undetermined,0,0,0,yes,0.9999849451240705,yes,0.9971143396766359,yes,0.9973109879028672,yes,0.9971110352334084,yes,0.9999811496430523
251,hibernate-distribution-3.3.2.GA,DESIGN,// todo : throw exception?,yes,undetermined,0,0,0,yes,0.9522268108142931,yes,0.9904254987510527,yes,0.9906669913360475,yes,0.989919427175994,yes,0.9910903421847755
252,hibernate-distribution-3.3.2.GA,DESIGN,//should this interface extend PropertyMapping?,yes,undetermined,0,0,0,no,0.029740260799011868,yes,0.9904136161592213,yes,0.9906450677733171,yes,0.9899114813251007,yes,0.9910770616565772
253,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO: here is why we need to make bytecode provider global :( // TODO : again, fix this after HHH-1907 is complete",yes,undetermined,0,0,0,yes,0.9999993570687442,yes,0.9999994684833258,yes,0.9999995216291184,yes,0.999999474219323,yes,0.9999996318043423
254,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: currently keeps Getters and Setters (instead of PropertyAccessors) because of the way getGetter() and getSetter() are implemented currently; yuck!,yes,undetermined,0,0,0,yes,0.9999954017744632,yes,0.9999894783278074,yes,0.9999901098078018,yes,0.9999882837802784,yes,0.9999912025757618
255,hibernate-distribution-3.3.2.GA,DESIGN,// todo : we can remove this once the deprecated ctor can be made private...,yes,undetermined,0,0,0,yes,0.9891435691858738,yes,0.9906490918513441,yes,0.9909818133441297,yes,0.9904876757585078,yes,0.9915940086011851
256,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: Yuck! This is not quite good enough, it's a quick //hack around the problem of having a to-one association //that refers to an embedded component:",yes,undetermined,0,0,0,yes,0.9999997789955247,yes,0.9999998545096678,yes,0.9999998709855983,yes,0.9999998433570307,yes,0.9999998920736295
257,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: implement caching?! proxies?!,yes,undetermined,0,0,0,yes,0.9943616119998104,yes,0.9999911018872685,yes,0.9999924286508478,yes,0.9999914194365375,yes,0.9999937379174276
258,hibernate-distribution-3.3.2.GA,DESIGN,// is this really necessary?,yes,undetermined,0,0,0,no,0.059032218353169956,yes,0.9904249977480798,yes,0.9906391746056968,yes,0.9899143255974642,yes,0.9910823592566667
259,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: this is a little inefficient, don't need to do a whole //      deep replaceElements() call",yes,undetermined,0,0,0,yes,0.9857476500170562,yes,0.9904219339913791,yes,0.9906587387920552,yes,0.9899383795179051,yes,0.9910864328443659
260,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: this is a bit arbitrary, expose a switch to the user?",yes,undetermined,0,0,0,yes,0.9650759089541562,yes,0.9904316672818563,yes,0.9906631970213571,yes,0.9899389920572812,yes,0.9910958684911331
261,hibernate-distribution-3.3.2.GA,DESIGN,"/**
	 * @return collection removal
	 * FIXME: even if isInverse=""true""?
	 */",yes,undetermined,0,0,0,yes,0.9921692331514863,yes,0.9910558673759606,yes,0.9909537723056148,yes,0.9899080998479323,yes,0.9910760623460377
262,hibernate-distribution-3.3.2.GA,DESIGN,// TODO: Fix this so it will work for non-POJO entity mode,yes,undetermined,0,0,0,yes,0.9999997948205197,yes,0.9999995315427771,yes,0.9999994916572247,yes,0.9999993673960588,yes,0.999999556773376
263,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: move these to a new JoinableType abstract class, //extended by EntityType and PersistentCollectionType:",yes,undetermined,0,0,0,yes,0.9896360065819957,yes,0.9904039779923394,yes,0.9906645509305773,yes,0.9899109130456107,yes,0.9910848817581922
264,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: would be nice to handle proxy classes elegantly!,yes,undetermined,0,0,0,yes,0.999999606245554,yes,0.9999995772253766,yes,0.9999996912534695,yes,0.999999628839722,yes,0.9999997413093713
265,hibernate-distribution-3.3.2.GA,DESIGN,"//SPACES //TODO: i'm not sure, but perhaps we should exclude //      abstract denormalized tables?",yes,undetermined,0,0,0,yes,0.9679808031959645,yes,0.9904097007814965,yes,0.9906641183484056,yes,0.9899051947222459,yes,0.9911019450343677
266,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: is there a more elegant way than downcasting?,yes,undetermined,0,0,0,yes,0.9999952111684859,yes,0.9999935898755928,yes,0.9999938852500404,yes,0.9999928975900232,yes,0.9999947948307175
267,hibernate-distribution-3.3.2.GA,DESIGN,// todo : remove,yes,undetermined,0,0,0,yes,0.999999493948077,yes,0.9999996945478953,yes,0.9999996933532487,yes,0.9999996440465766,yes,0.9999997508027092
268,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: remove use of instanceof!,yes,undetermined,0,0,0,yes,0.9999963361368286,yes,0.9999955019682438,yes,0.9999962146177322,yes,0.9999954293508441,yes,0.9999966541229542
269,hibernate-distribution-3.3.2.GA,DESIGN,//create an index on the key columns??,yes,undetermined,0,0,0,no,0.0003780309685424003,yes,0.9904071217449186,yes,0.9906369086515044,yes,0.9899064381074208,yes,0.9910802803420777
270,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: make this a bit nicer,yes,undetermined,0,0,0,yes,0.9964355770600442,yes,0.9953781212840422,yes,0.9955576683405978,yes,0.9953794075057163,yes,0.9959679945299327
271,hibernate-distribution-3.3.2.GA,DESIGN,// todo : we can remove this once the deprecated ctor can be made private...,yes,undetermined,0,0,0,yes,0.9891435691858738,yes,0.9906490918513441,yes,0.9909818133441297,yes,0.9904876757585078,yes,0.9915940086011851
272,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: perhaps this should be some other RuntimeException...,yes,undetermined,0,0,0,yes,0.9925146788049557,yes,0.9904357170269626,yes,0.9906604559944937,yes,0.9899265292489918,yes,0.991092426260856
273,hibernate-distribution-3.3.2.GA,DESIGN,//Yuck:,yes,undetermined,0,0,0,yes,0.8304821950653398,yes,0.8328263322496082,yes,0.8344920936876562,yes,0.825931628944479,yes,0.836198845233372
274,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: need some caching scheme? really comes down to decision  //      regarding amount of state (if any) kept on PropertyAccessors,yes,undetermined,0,0,0,yes,0.8232832586408718,yes,0.8166054352469164,yes,0.8202005999898087,yes,0.8150901935301904,yes,0.8260819758855946
275,hibernate-distribution-3.3.2.GA,DESIGN,// todo : this eventually needs to be removed,yes,undetermined,0,0,0,yes,0.9968092684833761,yes,0.9904304468097986,yes,0.9906671423118927,yes,0.9899075719949758,yes,0.9910891846073425
276,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: design new lifecycle for ProxyFactory,yes,undetermined,0,0,0,yes,0.9692494328924072,yes,0.9904209671978605,yes,0.9906440586160712,yes,0.9899061502520259,yes,0.9910759946897264
277,hibernate-distribution-3.3.2.GA,DESIGN,"// todo: we should really just collect these from the various SelectExpressions, rather than regenerating here",yes,undetermined,0,0,0,yes,0.935099503384364,yes,0.9904197039828266,yes,0.9906478588770282,yes,0.9899211365057624,yes,0.9910929073376714
278,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO: Should this really return null?  If not, figure out something better to do here.",yes,undetermined,0,0,0,yes,0.9999989886595027,yes,0.9999983319842456,yes,0.9999982503460079,yes,0.9999978699178721,yes,0.9999984757859399
279,hibernate-distribution-3.3.2.GA,DESIGN,// todo : should seriously consider not allowing a txn to begin from a child session //      can always route the request to the root session...,yes,undetermined,0,0,0,yes,0.8511265635885596,yes,0.8306415076923224,yes,0.8331575854635301,yes,0.8260357232490736,yes,0.837112555165383
280,hibernate-distribution-3.3.2.GA,DESIGN,"// should indicate that we are processing an INSERT/UPDATE/DELETE // query with a subquery implied via a collection property // function. Here, we need to use the table name itself as the // qualification alias. // TODO : verify this works for all databases... // TODO : is this also the case in non-""indexed"" scenarios?",yes,undetermined,0,0,0,yes,0.9907213820088581,yes,0.9915038853518974,yes,0.9915695231963083,yes,0.9909905569162216,yes,0.9919837440979704
281,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : this really needs to be delayed unitl after we definitively know all node types // where this is currently a problem is parameters for which where we cannot unequivocally // resolve an expected type,yes,undetermined,0,0,0,yes,0.995581197668044,yes,0.9923957107698163,yes,0.9929153526987502,yes,0.9924075247749419,yes,0.9933231953511898
282,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO : make this the factory for ""entity mode related"" sessions; // also means making this the target of transaction-synch and the // thing that knows how to cascade things between related sessions // // At that point, perhaps this thing is a ""SessionContext"", and // ConnectionManager is a ""JDBCContext""?  A ""SessionContext"" should // live in the impl package...",yes,undetermined,0,0,0,no,0.33834168383363755,no,0.29184201453517283,no,0.27510350586224713,no,0.25922520753385775,no,0.2661533727414765
283,hibernate-distribution-3.3.2.GA,DESIGN,// create an index on the key columns??,yes,undetermined,0,0,0,no,0.0003780309685424003,yes,0.9904071217449186,yes,0.9906369086515044,yes,0.9899064381074208,yes,0.9910802803420777
284,hibernate-distribution-3.3.2.GA,DESIGN,//is this ok?,yes,undetermined,0,0,0,no,1.7320370967266915e-05,no,0.01290317498933137,no,0.012218483862664971,no,0.011882034460474845,no,0.011587958413152409
285,hibernate-distribution-3.3.2.GA,DESIGN,"//init the table here instead of earlier, so that we can get a quoted table name //TODO: would it be better to simply pass the qualified table name, instead of //      splitting it up into schema/catalog/table names",yes,undetermined,0,0,0,yes,0.687991972157867,yes,0.6429961584069163,yes,0.6477422400198017,yes,0.6462886365260246,yes,0.6539244442284305
286,hibernate-distribution-3.3.2.GA,DESIGN,// perhaps this should be an exception since it is only ever used // in the above method?,yes,undetermined,0,0,0,no,0.021015813270197962,yes,0.9904019652489005,yes,0.9906457079216751,yes,0.9899340630351127,yes,0.9910832912996476
287,hibernate-distribution-3.3.2.GA,DESIGN,// NOTE: this assumes something about how propertySelectFragment is implemented by the subclass! // was toUnqotedAliasStrings( getdiscriminatorColumnName() ) before - now tried // to remove that unqoting and missing aliases..,yes,undetermined,0,0,0,no,0.12717526178285457,no,0.09836343130424029,yes,0.9906537019945311,yes,0.9899352289845893,yes,0.9910805264212832
288,hibernate-distribution-3.3.2.GA,DESIGN,"// Put a placeholder in entries, so we don't recurse back and try to save() the // same object again. QUESTION: should this be done before onSave() is called? // likewise, should it be done before onUpdate()?",yes,undetermined,0,0,0,no,0.04685386958704119,yes,0.9904233637269434,yes,0.990657946178384,yes,0.9899328883168591,yes,0.9910816425292257
289,hibernate-distribution-3.3.2.GA,DESIGN,"//before cascade! //TODO: should this be Session.instantiate(Persister, ...)?",yes,undetermined,0,0,0,yes,0.9576328015172623,yes,0.9904338023903485,yes,0.9906711752899094,yes,0.9899193539237972,yes,0.9910863734134097
290,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: we should throw an exception if we really *know* for sure   //      that this is a detached instance, rather than just assuming //throw new StaleObjectStateException(entityName, id);",yes,undetermined,0,0,0,yes,0.9652131387374115,yes,0.9904260827786445,yes,0.9906543702864798,yes,0.9899177922514056,yes,0.9910740691616214
291,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO: The order in which entities are saved may matter (e.g., a particular transient entity //       may need to be saved before other transient entities can be saved; //       Keep retrying the batch of transient entities until either: //       1) there are no transient entities left in transientCopyCache //       or 2) no transient entities were saved in the last batch // For now, just run through the transient entities and retry the merge",yes,undetermined,0,0,0,no,0.44710411593741406,no,0.41085501298022803,no,0.40797320440968426,no,0.3982778935124346,no,0.40819028603147495
292,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: if object was an uninitialized proxy, this is inefficient, //      resulting in two SQL selects",yes,undetermined,0,0,0,yes,0.7845644487671165,yes,0.726649996394749,yes,0.7354591836050974,yes,0.7288078272385428,yes,0.741689813921263
293,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: put this stuff back in to read snapshot from //      the second-level cache (needs some extra work),yes,undetermined,0,0,0,yes,0.9839476959561956,yes,0.9904248845727939,yes,0.9906562415491783,yes,0.9899255807910612,yes,0.9910851764016615
294,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: not quite sure about the full implications of this!,yes,undetermined,0,0,0,yes,0.9954776288766715,yes,0.9999956489088286,yes,0.9999960662148182,yes,0.999995313679611,yes,0.9999965795409856
295,hibernate-distribution-3.3.2.GA,DESIGN,//this is kinda the best we can do...,yes,undetermined,0,0,0,no,0.08253790307758345,yes,0.990422154390866,yes,0.9906619688738643,yes,0.9899049315043535,yes,0.9910869082985695
296,hibernate-distribution-3.3.2.GA,DESIGN,/* trim done to workaround stupid oracle bug that cant handle whitespaces before a { in a sp */,yes,undetermined,0,0,0,yes,0.9548266764416343,yes,0.9903962408008318,yes,0.9906435261997297,yes,0.9899203376275704,yes,0.9910825942327771
297,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: this needn't exclude subclasses...,yes,undetermined,0,0,0,yes,0.9814846458684704,yes,0.9904050733348032,yes,0.9906385706309643,yes,0.9899115860800497,yes,0.99107750634536
298,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: we use two visitors here, inefficient!",yes,undetermined,0,0,0,yes,0.9940488443193078,yes,0.9955167381991976,yes,0.9959209150392118,yes,0.9956376824901789,yes,0.9961886347852721
299,hibernate-distribution-3.3.2.GA,DESIGN,/* trim done to workaround stupid oracle bug that cant handle whitespaces before a { in a sp */,yes,undetermined,0,0,0,yes,0.9548266764416343,yes,0.9903962408008318,yes,0.9906435261997297,yes,0.9899203376275704,yes,0.9910825942327771
300,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: does this really need to be here? //      does the collection already have //      it's own up-to-date snapshot?,yes,undetermined,0,0,0,yes,0.9711013565458108,yes,0.9904310248207385,yes,0.9906427282110559,yes,0.9899301171043319,yes,0.9910776950126817
301,hibernate-distribution-3.3.2.GA,DESIGN,"// otherwise, a trim-specification and/or a trim-character // have been specified;  we need to decide which options // are present and ""do the right thing"" // should leading trim-characters be trimmed? // should trailing trim-characters be trimmed? // the trim-character // the trim-source",yes,undetermined,0,0,0,no,0.009186880051114966,yes,0.7960196739082774,yes,0.7972605404595633,yes,0.7879568031811517,yes,0.7991098864816663
302,hibernate-distribution-3.3.2.GA,DESIGN,"//it is possible that the tree-walking in OuterJoinLoader can get to //an association defined by a subclass, in which case the property-ref //might refer to a property defined on a subclass of the current class //in this case, the table name is not known - this temporary solution  //assumes that the property-ref refers to a property of the subclass //table that the association belongs to (a reasonable guess) //TODO: fix this, add: OuterJoinLoadable.getSubclassPropertyTableName(String propertyName)",yes,undetermined,0,0,0,yes,0.6866637419094204,no,0.5228048492110425,no,0.5080407932438543,no,0.4949082422243041,no,0.5073105397053482
303,hibernate-distribution-3.3.2.GA,DESIGN,// TODO: an alternative is to check if the owner has changed; if it hasn't then // return collection.getOwner(),yes,undetermined,0,0,0,yes,0.9178520387168173,yes,0.9904260422308175,yes,0.9906454955429258,yes,0.9899172732923477,yes,0.9910830767106314
304,hibernate-distribution-3.3.2.GA,DESIGN,//I suppose?,yes,undetermined,0,0,0,no,0.003479175184194395,yes,0.9904250593594371,yes,0.9906491911917356,yes,0.9899215668689484,yes,0.9910917838851266
305,hibernate-distribution-3.3.2.GA,DESIGN,"// TBD should this be varbinary($1)? //		registerColumnType(Types.VARBINARY,     ""binary($1)"");",yes,undetermined,0,0,0,no,0.006995757017814207,yes,0.9904207146785596,yes,0.9906452762149228,yes,0.9898983731832212,yes,0.9910739677510003
306,hibernate-distribution-3.3.2.GA,DESIGN,//shortcut,yes,undetermined,0,0,0,no,0.005532427407275679,yes,0.9904009786773774,yes,0.9906389971024718,yes,0.9899057280507491,yes,0.9910963937568231
307,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: we should provide some way to get keys of collection of statistics to make it easier to retrieve from a GUI perspective,yes,undetermined,0,0,0,yes,0.9736951559119564,yes,0.9904172647194124,yes,0.9906637150996712,yes,0.989934516963801,yes,0.9910885058524327
308,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO : probably better to calculate these and pass them in, as it'll be more performant",yes,undetermined,0,0,0,yes,0.999998827912704,yes,0.9999980910435483,yes,0.9999983372555994,yes,0.9999980670700559,yes,0.9999986165387458
309,hibernate-distribution-3.3.2.GA,DESIGN,// todo : should we additionally check the current isolation mode explicitly?,yes,undetermined,0,0,0,yes,0.9219029791383896,yes,0.9904170728934171,yes,0.9906493922395783,yes,0.9899160138938455,yes,0.9910899004679975
310,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: simply remove this override //      if we fix the above todos,yes,undetermined,0,0,0,yes,0.9699083916806024,yes,0.9904247840295053,yes,0.9906531501388937,yes,0.9899045102741358,yes,0.9910981907449903
311,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: get SQL rendering out of this package!,yes,undetermined,0,0,0,yes,0.9946288311526102,yes,0.9937662926451977,yes,0.9941931180354446,yes,0.9938477977190759,yes,0.9946056998267605
312,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: get SQL rendering out of this package!,yes,undetermined,0,0,0,yes,0.9946288311526102,yes,0.9937662926451977,yes,0.9941931180354446,yes,0.9938477977190759,yes,0.9946056998267605
313,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: get SQL rendering out of this package!,yes,undetermined,0,0,0,yes,0.9946288311526102,yes,0.9937662926451977,yes,0.9941931180354446,yes,0.9938477977190759,yes,0.9946056998267605
314,hibernate-distribution-3.3.2.GA,DESIGN,// todo : is there really any reason to kkeep trying if this fails once?,yes,undetermined,0,0,0,yes,0.9723336397669095,yes,0.9904009703137726,yes,0.9906651871931793,yes,0.9899144946383821,yes,0.9910691726140324
315,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO : not sure this is correct, could not find docs on how to do this.",yes,undetermined,0,0,0,yes,0.9958247560495642,yes,0.9949840652160575,yes,0.9959024629769198,yes,0.9955896665830555,yes,0.9961553149829985
316,hibernate-distribution-3.3.2.GA,DESIGN,//HSQL has no Blob/Clob support .... but just put these here for now!,yes,undetermined,0,0,0,no,0.005147126656563081,yes,0.990414233172506,yes,0.9906550001640628,yes,0.9899168125234422,yes,0.9910766806498061
317,hibernate-distribution-3.3.2.GA,DESIGN,// merges don't cascade to uninitialized collections //			//TODO: perhaps this does need to cascade after all....,yes,undetermined,0,0,0,yes,0.6989054878088546,yes,0.7948657963228354,yes,0.7869262154383803,yes,0.7750968271907439,yes,0.78720247319726
318,hibernate-distribution-3.3.2.GA,DESIGN,// yick!  need this for proper serialization/deserialization handling...,yes,undetermined,0,0,0,no,0.047127334435535,yes,0.9904152240824504,yes,0.9906515864764612,yes,0.9899286021219975,yes,0.9910849416554207
319,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: should orphans really be deleted during lock???,yes,undetermined,0,0,0,yes,0.9056875180064673,yes,0.9904087649455027,yes,0.990647017293446,yes,0.989939724884731,yes,0.991101586952155
320,hibernate-distribution-3.3.2.GA,DESIGN,// todo : move to StringHelper?,yes,undetermined,0,0,0,no,0.011915769773668481,no,0.012892946551675156,no,0.012212929575441765,no,0.011854801627810656,no,0.011589831620060054
321,hibernate-distribution-3.3.2.GA,DESIGN,// Sets can be just a view of a part of another collection. // do we need to copy it to be sure it won't be changing // underneath us? // ie. this.set.addAll(set);,yes,undetermined,0,0,0,no,0.12282352949631792,no,0.15964534021947638,no,0.15353257423865305,no,0.1480035686198021,no,0.14949396566923168
322,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO: It would be really, really nice to use this to also model components!",yes,undetermined,0,0,0,yes,0.8676741060451297,yes,0.944790153050016,yes,0.9906407000473336,yes,0.9899249535293976,yes,0.9910945247909924
323,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: move to .sql package!!,yes,undetermined,0,0,0,yes,0.9960012756276114,yes,0.9947870376422139,yes,0.995050661215818,yes,0.9948604807635146,yes,0.9955086043767635
324,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: look at the owning property and check that it  //      isn't lazy (by instrumentation),yes,undetermined,0,0,0,yes,0.9542630446683674,yes,0.9904157988671992,yes,0.9906443031669165,yes,0.9899122995159477,yes,0.9910978436245557
325,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : add this info to the translator and aggregate it here...,yes,undetermined,0,0,0,yes,0.9801749105262193,yes,0.9904108338579333,yes,0.9906561569384065,yes,0.9899114484866433,yes,0.991073211092275
326,hibernate-distribution-3.3.2.GA,DESIGN,//TODO possibly relax that,yes,undetermined,0,0,0,yes,0.9962876726403028,yes,0.9947989213714915,yes,0.9950072600583688,yes,0.9945638997341615,yes,0.9952544663192834
327,hibernate-distribution-3.3.2.GA,DESIGN,//TODO possibly relax that,yes,undetermined,0,0,0,yes,0.9962876726403028,yes,0.9947989213714915,yes,0.9950072600583688,yes,0.9945638997341615,yes,0.9952544663192834
328,hibernate-distribution-3.3.2.GA,DESIGN,// would be better to use the element-type to determine // whether the old and the new are equal here; the problem being // we do not necessarily have access to the element type in all // cases,yes,undetermined,0,0,0,no,0.2520075573669784,no,0.17595825395946885,no,0.1617495573059329,no,0.15744953414333174,no,0.15987121312111302
329,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: code duplication with JoinedSubclassEntityPersister,yes,undetermined,0,0,0,yes,0.9999849451240705,yes,0.9971143396766359,yes,0.9973109879028672,yes,0.9971110352334084,yes,0.9999811496430523
330,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: refactor to .sql package,yes,undetermined,0,0,0,yes,0.9999997815388866,yes,0.9999994141675562,yes,0.9999994989801921,yes,0.9999994270025125,yes,0.9999995968753578
331,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: *two* hashmap lookups here is one too many...,yes,undetermined,0,0,0,yes,0.9799160245744193,yes,0.9904015495637434,yes,0.990658339486816,yes,0.98991927870804,yes,0.9910771517790282
332,hibernate-distribution-3.3.2.GA,DESIGN,"//note that this method could easily be moved up to BasicEntityPersister, //if we ever needed to reuse it from other subclasses",yes,undetermined,0,0,0,no,0.17139106358100753,no,0.2366572993412162,no,0.22893283180728716,no,0.2194395110689404,no,0.22287622707499957
333,hibernate-distribution-3.3.2.GA,DESIGN,"// from the collection of associations, locate OJA for the // ManyToOne corresponding to this persister to fully // define the many-to-many; we need that OJA so that we can // use its alias here // TODO : is there a better way here?",yes,undetermined,0,0,0,yes,0.9859207793974553,yes,0.9904315727390756,yes,0.9906450854412782,yes,0.9899247301118738,yes,0.9910801942567852
334,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: this class depends directly upon CriteriaImpl,  //      in the impl package ... add a CriteriaImplementor  //      interface",yes,undetermined,0,0,0,yes,0.9701443917095005,yes,0.9904180460162372,yes,0.990661144402154,yes,0.9899193101330409,yes,0.9911037684641029
335,hibernate-distribution-3.3.2.GA,DESIGN,// Do we need to qualify index names with the schema name?,yes,undetermined,0,0,0,no,0.03341432538938774,yes,0.9904102229972385,yes,0.9906552076708204,yes,0.9899254228967067,yes,0.991094107868304
336,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: We probably should have a StatisticsNotPublishedException, to make it clean",yes,undetermined,0,0,0,yes,0.999999993026639,yes,0.9999999820400187,yes,0.9999999842717363,yes,0.9999999812091062,yes,0.9999999875207468
337,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: get SQL rendering out of this package!,yes,undetermined,0,0,0,yes,0.9946288311526102,yes,0.9937662926451977,yes,0.9941931180354446,yes,0.9938477977190759,yes,0.9946056998267605
338,hibernate-distribution-3.3.2.GA,DESIGN,//yukky! Don't you have subclasses for that! //TODO race conditions can happen here,yes,undetermined,0,0,0,yes,0.9935208609387578,yes,0.9935276412380057,yes,0.9937486933202394,yes,0.9929743694982859,yes,0.9938174201817002
339,hibernate-distribution-3.3.2.GA,DESIGN,// NOTE VERY HACKISH WORKAROUND!! // TODO: Fix this so it will work for non-POJO entity mode,yes,undetermined,0,0,0,yes,0.9999999999460318,yes,0.9999999998248544,yes,0.9999999998389093,yes,0.999999999785922,yes,0.9999999998670573
340,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: need to make the majority of this functionality into a top-level support class for custom impl support,yes,undetermined,0,0,0,yes,0.9796916499671957,yes,0.990428137609506,yes,0.990665337411387,yes,0.9899193488240715,yes,0.9910967318169596
341,hibernate-distribution-3.3.2.GA,DESIGN,"// for DOM4J ""collections"" only // TODO: it would be better if this was done at the higher level by Printer",yes,undetermined,0,0,0,yes,0.9678697824365673,yes,0.9904141828275003,yes,0.9906702308670108,yes,0.9899173898045082,yes,0.991089350850853
342,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: inefficient if that cache is just going to ignore the updated state!,yes,undetermined,0,0,0,yes,0.7592205434950906,yes,0.7686303652874061,yes,0.7774022669921961,yes,0.768406048406474,yes,0.78041091246489
343,hibernate-distribution-3.3.2.GA,DESIGN,// TODO: an alternative is to check if the owner has changed; if it hasn't then // get the ID from collection.getOwner(),yes,undetermined,0,0,0,yes,0.9263042859980066,yes,0.9904143784261547,yes,0.9906532615951271,yes,0.9899279496328731,yes,0.9910938900853944
344,hibernate-distribution-3.3.2.GA,DESIGN,//TODO:refactor + make this method private,yes,undetermined,0,0,0,yes,0.9999999912219133,yes,0.9999999639864613,yes,0.9999999695339897,yes,0.9999999628950914,yes,0.99999997507279
345,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : keep seperate notions of QT[] here for shallow/non-shallow queries...,yes,undetermined,0,0,0,no,0.5,no,0.4459692538757208,no,0.42102298850267333,no,0.4106192724417982,no,0.4206455947521028
346,hibernate-distribution-3.3.2.GA,DESIGN,// todo : temporary //      needed because currently persister is the one that //      creates and renders the join fragments for inheritence //      hierarchies...,yes,undetermined,0,0,0,yes,0.8412837500444496,yes,0.7623228426031557,yes,0.7654628820505968,yes,0.7535996635449432,yes,0.7663683678670012
347,hibernate-distribution-3.3.2.GA,DESIGN,// this is called by SessionFactory irregardless; we just disregard here; // could also add a check to SessionFactory to only conditionally call stop,yes,undetermined,0,0,0,no,0.01756985771689059,yes,0.9904151279373048,yes,0.99065724763794,yes,0.9899300386442383,yes,0.9910953249037787
348,hibernate-distribution-3.3.2.GA,DESIGN,//swaldman 2004-02-07: modify to allow null values to signify fall through to c3p0 PoolConfig defaults,yes,undetermined,0,0,0,no,0.015958643538828213,yes,0.9904223867102875,yes,0.9906434193775558,yes,0.9899122473240337,yes,0.9910899962855971
349,hibernate-distribution-3.3.2.GA,DESIGN,"// work around that crazy issue where the tree contains // ""empty"" FromElements (no text); afaict, this is caused // by FromElementFactory.createCollectionJoin()",yes,undetermined,0,0,0,no,0.24005578479530962,no,0.216351891666139,no,0.2154145412359695,no,0.2088650859997523,no,0.2133233871788998
350,hibernate-distribution-3.3.2.GA,DESIGN,"//kinda ugly, but needed for collections with a ""."" node mapping",yes,undetermined,0,0,0,no,0.2957058446271051,yes,0.8772270366373378,yes,0.883391611870387,yes,0.8765640864321806,yes,0.8860419846697568
351,hibernate-distribution-3.3.2.GA,DESIGN,//FIXME: get the PersistentClass,yes,undetermined,0,0,0,no,0.01194509256739164,yes,0.990430600019049,yes,0.9906581259268384,yes,0.9899332213370433,yes,0.9910883182098792
352,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO : would be great to have a Mapping#hasNonIdentifierPropertyNamedId method // I don't believe that Mapping#getReferencedPropertyType accounts for the identifier property; so // if it returns for a property named 'id', then we should have a non-id field named id",yes,undetermined,0,0,0,yes,0.7640288756518238,yes,0.5960422717114423,yes,0.5713048334218152,yes,0.5497490465565205,yes,0.5630946729156805
353,hibernate-distribution-3.3.2.GA,DESIGN,// entity name will not be available for non-POJO entities // TODO: cache the entity name somewhere so that it is available to this exception,yes,undetermined,0,0,0,yes,0.7124782903393279,yes,0.7804610266006091,yes,0.765331300164282,yes,0.7500866994995632,yes,0.7630083357994845
354,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: is this really necessary????,yes,undetermined,0,0,0,yes,0.9923609638419867,yes,0.9999999703650032,yes,0.9999999725199592,yes,0.9999999662321353,yes,0.9999999773318144
355,hibernate-distribution-3.3.2.GA,DESIGN,//index += getPropertyColumnSpan( i ); //TODO:  this is kinda slow...,yes,undetermined,0,0,0,yes,0.8659418743560705,yes,0.9999957506078104,yes,0.9999965512883813,yes,0.9999959437012216,yes,0.9999971245761022
356,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: move to .sql package, and refactor with similar things!",yes,undetermined,0,0,0,yes,0.9999925247871003,yes,0.997466991231314,yes,0.9999833582463987,yes,0.9999810001054752,yes,0.9999858512365036
357,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: I am not so sure about the exception handling in this bit!,yes,undetermined,0,0,0,yes,0.9921021171612135,yes,0.9941898002157886,yes,0.9944111960989701,yes,0.9939510957485267,yes,0.9946998981967565
358,hibernate-distribution-3.3.2.GA,DESIGN,//ugly little workaround for fact that createUniqueKeyLoaders() does not handle component properties,yes,undetermined,0,0,0,yes,0.9999989371505444,yes,0.9999989868231968,yes,0.9999991517038713,yes,0.9999990073244804,yes,0.9999992982160035
359,hibernate-distribution-3.3.2.GA,DESIGN,// append the SQL to return the generated identifier //TODO: suck into Insert,yes,undetermined,0,0,0,yes,0.9356750684303579,yes,0.9904290378811544,yes,0.9906464154511644,yes,0.9899152257099804,yes,0.9910750271297963
360,hibernate-distribution-3.3.2.GA,DESIGN,"//This is really ugly, but necessary:",yes,undetermined,0,0,0,yes,0.9883520933022717,yes,0.9999989409716235,yes,0.9999993378807878,yes,0.999999209485285,yes,0.9999994408462096
361,hibernate-distribution-3.3.2.GA,DESIGN,// todo : modify the class definition if not already transformed...,yes,undetermined,0,0,0,yes,0.9580504809617665,yes,0.9904167785864696,yes,0.9906630517451468,yes,0.9899240594176817,yes,0.9910791570544715
362,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: should we use SELECT .. FOR UPDATE?,yes,undetermined,0,0,0,yes,0.9803504434525825,yes,0.9904217521280523,yes,0.9906561094398492,yes,0.9899215081477222,yes,0.9910921233201736
363,hibernate-distribution-3.3.2.GA,DESIGN,"/** Create an action that will evict collection and entity regions based on queryspaces (table names).
	 *  TODO: cache the autodetected information and pass it in instead.
	 **/",yes,undetermined,0,0,0,yes,0.962396708145865,yes,0.9904180693042156,yes,0.9906448036383338,yes,0.9899262741235108,yes,0.9910949753972335
364,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: is this 100% correct?,yes,undetermined,0,0,0,yes,0.9999896776312508,yes,0.9973346241448844,yes,0.9999865369035648,yes,0.9999844958808952,yes,0.9999884744230144
365,hibernate-distribution-3.3.2.GA,DESIGN,/////////////////////////////////////////////////////////////////////////// // USED ONLY FOR REGRESSION TESTING!!!! // // todo : obviously get rid of all this junk ;) ///////////////////////////////////////////////////////////////////////////,yes,undetermined,0,0,0,yes,0.8924555460057295,yes,0.8441079158852907,yes,0.8477391441249157,yes,0.8406142897327689,yes,0.8505072072305588
366,hibernate-distribution-3.3.2.GA,DESIGN,// NOTE: this assumes something about how propertySelectFragment is implemented by the subclass! // was toUnqotedAliasStrings( getIdentiferColumnNames() ) before - now tried // to remove that unqoting and missing aliases..,yes,undetermined,0,0,0,no,0.12717526178285457,no,0.09836343130424029,yes,0.9906537019945311,yes,0.9899352289845893,yes,0.9910805264212832
367,hibernate-distribution-3.3.2.GA,DESIGN,//use of a stringbuffer to workaround a JDK bug,yes,undetermined,0,0,0,yes,0.9999990439961709,yes,0.9999980515999138,yes,0.9999982251440528,yes,0.999997875708862,yes,0.9999984699983302
368,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: move into collection type, so we can use polymorphism!",yes,undetermined,0,0,0,yes,0.999999552812637,yes,0.9922918598814178,yes,0.9944506520174725,yes,0.9939908899708567,yes,0.9944740124796335
369,hibernate-distribution-3.3.2.GA,DESIGN,// TODO should we just collect these like with the collections above?,yes,undetermined,0,0,0,yes,0.9628476579162938,yes,0.9904248031863055,yes,0.9906560059140577,yes,0.9899290485575937,yes,0.9910889499365921
370,hibernate-distribution-3.3.2.GA,DESIGN,"// todo : should really move this log statement to CollectionType, where this is used from...",yes,undetermined,0,0,0,yes,0.9656985327039258,yes,0.9904087069986486,yes,0.9906677434861195,yes,0.9899256201201414,yes,0.991092113579463
371,hibernate-distribution-3.3.2.GA,DESIGN,// FIXME Hacky workaround to JBCACHE-1202,yes,undetermined,0,0,0,yes,0.9999999999998892,yes,0.9999999999999021,yes,0.9999999999999203,yes,0.9999999999998981,yes,0.9999999999999448
372,hibernate-distribution-3.3.2.GA,DESIGN,//hum ... should we cascade anyway? throw an exception? fine like it is?,yes,undetermined,0,0,0,no,0.03509699560594702,yes,0.990407662331412,yes,0.9906494624517158,yes,0.9899046004680138,yes,0.991071668344937
373,hibernate-distribution-3.3.2.GA,DESIGN,// todo: this might really even be moved into the cfg package and used as the basis for all things which are configurable.,yes,undetermined,0,0,0,yes,0.9956112576086515,yes,0.9949718890587079,yes,0.9952540602032164,yes,0.9949091883351794,yes,0.9955538446920825
374,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: copy/paste from insertRows(),yes,undetermined,0,0,0,yes,0.999994433025849,yes,0.9999963501422372,yes,0.9999967523056444,yes,0.9999961647309707,yes,0.999997219624999
375,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: suck into event class,yes,undetermined,0,0,0,yes,0.9999967618916145,yes,0.9999941840709142,yes,0.9999942086546575,yes,0.9999932454774335,yes,0.9999950810022805
376,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: never reached, since getTypeName() actually throws an exception!",yes,undetermined,0,0,0,yes,0.9766474855243855,yes,0.9904155261794909,yes,0.9906454155281962,yes,0.9899279694826709,yes,0.9910908986194583
377,hibernate-distribution-3.3.2.GA,DESIGN,"// This, is used by SessionFactoryImpl to hand to the generated SessionImpl; // was the only reason I could see that we cannot just use null as // Settings.cacheProvider",yes,undetermined,0,0,0,no,0.020956021097169382,yes,0.9904362684045102,yes,0.990653857199613,yes,0.9899146032972957,yes,0.9910853613698714
378,hibernate-distribution-3.3.2.GA,DESIGN,// xmlforest requires a new kind of function constructor,yes,undetermined,0,0,0,no,0.030964689508507316,yes,0.9904091517846554,yes,0.9906464495454483,yes,0.9899192517582108,yes,0.991087748056082
379,hibernate-distribution-3.3.2.GA,DESIGN,// TODO Is this a valid operation on a timestamps cache?,yes,undetermined,0,0,0,yes,0.7745771841580981,yes,0.749484909881434,yes,0.7604744110911039,yes,0.7533092794694688,yes,0.765712043935872
380,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO: I considered validating the presence of the TS cache here, // but decided to defer unti getQueryCacheInstance() in case the  // cache is never actually used",yes,undetermined,0,0,0,no,0.47157673669657435,yes,0.5457321127814746,yes,0.5427678604063563,yes,0.533783272453503,yes,0.5463633203450772
381,hibernate-distribution-3.3.2.GA,DESIGN,// TODO Why not use the timestamp in a DataVersion?,yes,undetermined,0,0,0,yes,0.9911092827856259,yes,0.9922907245807668,yes,0.9926186702810335,yes,0.992106235594942,yes,0.9930394096921722
382,hibernate-distribution-3.3.2.GA,DESIGN,// todo : eventually merge this with TreeCache and just add optional opt-lock support there.,yes,undetermined,0,0,0,yes,0.8777962807617868,yes,0.6791051173153503,yes,0.6881294697695421,yes,0.6781852810016836,yes,0.6911723838558801
383,hibernate-distribution-3.3.2.GA,DESIGN,"/**
     * FIXME Per the RegionFactory class Javadoc, this constructor version
     * should not be necessary.
     * 
     * @param props The configuration properties
     */",yes,undetermined,0,0,0,yes,0.9893394220545665,yes,0.9904354032649555,yes,0.9906498084127344,yes,0.9899199009363673,yes,0.9910903673568704
384,hibernate-distribution-3.3.2.GA,DESIGN,"/**
     * FIXME Per the RegionFactory class Javadoc, this constructor version
     * should not be necessary.
     * 
     * @param props The configuration properties
     */",yes,undetermined,0,0,0,yes,0.9893394220545665,yes,0.9904354032649555,yes,0.9906498084127344,yes,0.9899199009363673,yes,0.9910903673568704
385,hibernate-distribution-3.3.2.GA,DESIGN,"// work around the ""feature"" where tree cache is validating the // inserted node during the next transaction.  no idea...",yes,undetermined,0,0,0,no,0.24434182335288743,no,0.14651017420998833,no,0.13622628669053716,no,0.1340256322502618,no,0.13651585093273838
386,hibernate-distribution-3.3.2.GA,DESIGN,"/**
     * FIXME Per the RegionFactory class Javadoc, this constructor version
     * should not be necessary.
     * 
     * @param props The configuration properties
     */",yes,undetermined,0,0,0,yes,0.9893394220545665,yes,0.9904354032649555,yes,0.9906498084127344,yes,0.9899199009363673,yes,0.9910903673568704
387,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO: I considered validating TS cache config here, // but decided to defer unti getTimestampsCacheInstance() in case the  // cache is never actually used",yes,undetermined,0,0,0,no,0.4377313793728545,no,0.5172179245735646,no,0.5147623013559514,no,0.5064800108208201,no,0.5187640254821746
388,hibernate-distribution-3.3.2.GA,DESIGN,// can happen because of the multiple ways Cache.remove() // can be invoked :(,yes,undetermined,0,0,0,no,0.00903505194765548,yes,0.9904101267752976,yes,0.9906536033276151,yes,0.9899072322897923,yes,0.9910793595415881
389,hibernate-distribution-3.3.2.GA,DESIGN,//need to do that here rather than in the save event listener to let //the post insert events to have a id-filled entity when IDENTITY is used (EJB3),yes,undetermined,0,0,0,no,0.025795501511146676,yes,0.9904102909502518,yes,0.9906613695356714,yes,0.9899232014847588,yes,0.9910823530510148
390,hibernate-distribution-3.3.2.GA,DESIGN,// unhappy about this being public ... is there a better way?,yes,undetermined,0,0,0,no,0.4337904209864988,no,0.4425506637015396,no,0.4263724418974303,no,0.41223720701454675,no,0.4223733740877872
391,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO : safe to interpret ""map.remove(key) == null"" as non-dirty?",yes,undetermined,0,0,0,yes,0.963828872386194,yes,0.9904113970961482,yes,0.9906720543125835,yes,0.989908982658155,yes,0.9910768947271135
392,hibernate-distribution-3.3.2.GA,DESIGN,// FIXME hack to work around fact that calling // Node added = root.addChild( fqn ); doesn't  // properly set the version on the node,yes,undetermined,0,0,0,yes,0.9999998878491952,yes,0.999999645847803,yes,0.9999996614896985,yes,0.999999585706565,yes,0.9999997109523407
393,hibernate-distribution-3.3.2.GA,DESIGN,"// work around the ""feature"" where tree cache is validating the // inserted node during the next transaction. no idea...",yes,undetermined,0,0,0,no,0.24434182335288743,no,0.14651017420998833,no,0.13622628669053716,no,0.1340256322502618,no,0.13651585093273838
394,hibernate-distribution-3.3.2.GA,DESIGN,// TODO Is this a valid operation on a timestamps cache?,yes,undetermined,0,0,0,yes,0.7745771841580981,yes,0.749484909881434,yes,0.7604744110911039,yes,0.7533092794694688,yes,0.765712043935872
395,hibernate-distribution-3.3.2.GA,DESIGN,// todo : what else to do here?,yes,undetermined,0,0,0,no,0.011915769773668481,no,0.012892946551675156,no,0.012212929575441765,no,0.011854801627810656,no,0.011589831620060054
396,hibernate-distribution-3.3.2.GA,DESIGN,// TODO: Replace this with a more elegant solution.,yes,undetermined,0,0,0,yes,0.9999935755581433,yes,0.9999956069539743,yes,0.9999960900150923,yes,0.9999954102437669,yes,0.9999966604625894
397,hibernate-distribution-3.3.2.GA,DESIGN,// short cut check...,yes,undetermined,0,0,0,no,0.008892535689562114,yes,0.990414700394978,yes,0.9906472904301249,yes,0.989913972684761,yes,0.9910729949449685
398,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: to handle concurrent writes correctly, this should return a Lock to the client",yes,undetermined,0,0,0,yes,0.9298935603391957,yes,0.9904276411133698,yes,0.9926682220042308,yes,0.9921135645014627,yes,0.9930613423634751
399,hibernate-distribution-3.3.2.GA,DESIGN,"//put() has nowait semantics, is this really appropriate? //note that it needs to be async replication, never local or sync",yes,undetermined,0,0,0,no,0.4413500593542599,no,0.3848869021833463,no,0.40414239494075155,no,0.3940443912001566,no,0.4025051932257561
400,hibernate-distribution-3.3.2.GA,DESIGN,"// this is ugly here, but needed because its a subquery",yes,undetermined,0,0,0,yes,0.9967014329008874,yes,0.9955126316479549,yes,0.9964562903594354,yes,0.9960798513865788,yes,0.9965892306492737
401,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : will need reference to session factory to fully complete HHH-1907,yes,undetermined,0,0,0,yes,0.9633041313262192,yes,0.9904163561326731,yes,0.9906636606766723,yes,0.989912134703569,yes,0.9910852003614515
402,hibernate-distribution-3.3.2.GA,DESIGN,//yuck!,yes,undetermined,0,0,0,yes,0.8304821950653398,yes,0.8328263322496082,yes,0.8344920936876562,yes,0.825931628944479,yes,0.836198845233372
403,hibernate-distribution-3.3.2.GA,DESIGN,// inheritance cycle detection (paranoid check),yes,undetermined,0,0,0,no,0.007979490174853813,yes,0.9904076965488007,yes,0.9906680552841263,yes,0.9899095871278016,yes,0.9910805044654785
404,hibernate-distribution-3.3.2.GA,DESIGN,// todo : remove,yes,undetermined,0,0,0,yes,0.999999493948077,yes,0.9999996945478953,yes,0.9999996933532487,yes,0.9999996440465766,yes,0.9999997508027092
405,hibernate-distribution-3.3.2.GA,DESIGN,// TODO: encapsulate the protected instance variables!,yes,undetermined,0,0,0,yes,0.9289180568220404,yes,0.9904164735476159,yes,0.9906679346157511,yes,0.9899391970218283,yes,0.9910897268239607
406,hibernate-distribution-3.3.2.GA,DESIGN,//polymorphism comment above,yes,undetermined,0,0,0,no,0.002401427467052527,no,0.01290309265048566,no,0.012203568009902235,yes,0.989902761018978,yes,0.991084798170186
407,hibernate-distribution-3.3.2.GA,DOCUMENTATION,//TODO find a decent name before documenting,yes,undetermined,0,0,0,yes,0.9090533899066048,yes,0.9904328151854996,yes,0.9906532928378103,yes,0.9899232890275708,yes,0.9910831323287292
408,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"// add an entry for this type of entity. // we can be assured that all referenced entities have already // been processed, // so specify that this entity is with the latest batch. // doing the batch number before adding the name to the list is // a faster way to get an accurate number.",yes,undetermined,0,0,0,no,0.07697219757687014,yes,0.9904149494674311,yes,0.9906392396827406,yes,0.9899378456111856,yes,0.9910685502112223
409,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// TODO: handle TypeDefs,yes,undetermined,0,0,0,yes,0.9999933940333362,yes,0.999991576003468,yes,0.9999923178338038,yes,0.9999909733519574,yes,0.9999933550963408
410,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"//TODO: get all properties, not just the fetched ones!",yes,undetermined,0,0,0,yes,0.8789114186282491,yes,0.7856538323990985,yes,0.8000671855779168,yes,0.7898217613134169,yes,0.802043466493471
411,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: native ids,yes,undetermined,0,0,0,yes,0.9753631997930872,yes,0.9904014102341732,yes,0.9906486215115221,yes,0.9899305622601121,yes,0.9910764450945838
412,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"// TODO: bindpropertyresults(alias, returnElem)",yes,undetermined,0,0,0,yes,0.9999920653620191,yes,0.9999908098391139,yes,0.9999914371607265,yes,0.9999899297273566,yes,0.9999926000629371
413,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: handle property-ref,yes,undetermined,0,0,0,yes,0.9884177987419404,yes,0.9904166687287359,yes,0.9906469999907431,yes,0.9899214770399973,yes,0.99109991777427
414,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: validate existing of property with the chosen name. (secondpass ),yes,undetermined,0,0,0,yes,0.9545052750142443,yes,0.9904280547944585,yes,0.9906409920878323,yes,0.9899256922618551,yes,0.9910883238089321
415,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"//TODO: get all properties, not just the fetched ones!",yes,undetermined,0,0,0,yes,0.8789114186282491,yes,0.7856538323990985,yes,0.8000671855779168,yes,0.7898217613134169,yes,0.802043466493471
416,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: check that entry.getIdentifier().equals(requestedId),yes,undetermined,0,0,0,yes,0.9446533259433951,yes,0.9904345172749753,yes,0.9906465117888453,yes,0.9899344349612289,yes,0.9910978581446626
417,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// TODO: RESTRICT VIOLATION,yes,undetermined,0,0,0,yes,0.7315497183771336,yes,0.7144062586563414,yes,0.7116924271646731,yes,0.7013408537518628,yes,0.7142973256224417
418,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"//TODO: assertion only, could be optimized away",yes,undetermined,0,0,0,yes,0.977932120130965,yes,0.9904293178680817,yes,0.990636477498346,yes,0.9899046028298262,yes,0.9910800772550719
419,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"// TODO: lowercasing done here. Was done ""at random"" before; maybe not needed at all ?",yes,undetermined,0,0,0,yes,0.9999999607887883,yes,0.9999999273273894,yes,0.9999999331814213,yes,0.9999999155658974,yes,0.9999999426071857
420,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"//TODO: optimize away this lookup for entities w/o unsaved-value=""undefined""",yes,undetermined,0,0,0,yes,0.6626872236216312,yes,0.5631586036768124,yes,0.5828496913140314,yes,0.5708712357325672,yes,0.5845005828334682
421,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// TODO: toLowerCase was not done before. Only used in Template.,yes,undetermined,0,0,0,yes,0.9725028407424119,yes,0.9904002186145637,yes,0.9906374538832458,yes,0.9899041730641666,yes,0.9910698606121872
422,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"//TODO: arithmetic expressions, multiple new Foo(...)",yes,undetermined,0,0,0,yes,0.9179227667265428,yes,0.9904228901722807,yes,0.9906574977713145,yes,0.9899382555589474,yes,0.9910896166625865
423,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: check that entry.getIdentifier().equals(requestedId),yes,undetermined,0,0,0,yes,0.9446533259433951,yes,0.9904345172749753,yes,0.9906465117888453,yes,0.9899344349612289,yes,0.9910978581446626
424,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// TODO: not visible to the user!,yes,undetermined,0,0,0,yes,0.9910569747302748,yes,0.9904056325966143,yes,0.9906370175084652,yes,0.9899084093228631,yes,0.9910807784328155
425,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: proxies!,yes,undetermined,0,0,0,yes,0.9937018532482133,yes,0.9999989643029104,yes,0.9999991824599417,yes,0.9999990399967023,yes,0.9999993245014477
426,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: can we limit stored procedures ?!,yes,undetermined,0,0,0,yes,0.9548794235105793,yes,0.9904256880341236,yes,0.9906482540961661,yes,0.9899192220773048,yes,0.9910747897242104
427,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: formulas ?,yes,undetermined,0,0,0,no,0.011915769773668481,no,0.012892946551675156,no,0.012212929575441765,no,0.011854801627810656,no,0.011589831620060054
428,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// TODO: better error message since we actually support composites if names are explicitly listed.,yes,undetermined,0,0,0,yes,0.9937273431963696,yes,0.9926451400594791,yes,0.9929348297176191,yes,0.9924656988566093,yes,0.9933701804301359
429,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: use these in methods above,yes,undetermined,0,0,0,yes,0.9999992267506536,yes,0.9999986824452811,yes,0.9999988719582602,yes,0.999998664952525,yes,0.99999904898215
430,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"//TODO: cache the persister, this shows up in yourkit",yes,undetermined,0,0,0,yes,0.9916689518540115,yes,0.996021191922187,yes,0.9962587282423705,yes,0.9960141172988778,yes,0.9965439115899287
431,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"//TODO: add referencedClass to disambiguate to FKs on the same //      columns, pointing to different tables",yes,undetermined,0,0,0,no,0.27601190409624227,no,0.2812014007191932,no,0.2805370716603442,no,0.2777925214324545,no,0.2843776645328952
432,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: create uk loaders for component properties,yes,undetermined,0,0,0,yes,0.9707683216334193,yes,0.9904274450952852,yes,0.9906534366339859,yes,0.9898976488542444,yes,0.9910847801727877
433,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// TODO : still need to make CollectionPersisters EntityMode-aware,yes,undetermined,0,0,0,yes,0.999986055037681,yes,0.9970490710290488,yes,0.9971599566398603,yes,0.996942451198663,yes,0.9973479255336227
434,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: terrible implementation!,yes,undetermined,0,0,0,yes,0.9999999998721381,yes,0.9999941448936712,yes,0.999994815485717,yes,0.9999938483111213,yes,0.9999955062320665
435,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"//TODO: eventually put this back in, once we think all is fixed //Object otherAlias = columnsUnique.put(qualifiedColumn, columnAlias);",yes,undetermined,0,0,0,yes,0.9999935590512653,yes,0.9904025117340866,yes,0.9906643679130409,yes,0.9899173633485369,yes,0.9910990934077468
436,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// TODO: I don't really like this implementation; it would be better if // this was handled by searchForDirtyCollections(),yes,undetermined,0,0,0,yes,0.999997010018454,yes,0.9999951037795283,yes,0.9999964531397458,yes,0.9999954133274609,yes,0.9999966619262066
437,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// TODO: check if key contains the owner ID,yes,undetermined,0,0,0,yes,0.9640617820611938,yes,0.9904228942170534,yes,0.9906601536345687,yes,0.989902218678662,yes,0.9910961405814875
438,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: cache this in an instvar,yes,undetermined,0,0,0,yes,0.9999828570242311,yes,0.9970737591994562,yes,0.997185349664235,yes,0.9969794296508133,yes,0.9973871991625857
439,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// TODO : temporary initial step towards HHH-1907,yes,undetermined,0,0,0,yes,0.8754256614769202,yes,0.8686166685816067,yes,0.8639823281181748,yes,0.8582489438699874,yes,0.8674457510095486
440,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// todo : remove this once ComponentMetamodel is complete and merged,yes,undetermined,0,0,0,yes,0.9820094826259108,yes,0.9904182345784848,yes,0.9906492653629113,yes,0.9899222890710219,yes,0.9910830926127031
441,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: add owner argument!!,yes,undetermined,0,0,0,yes,0.9463474608682367,yes,0.9904122008613546,yes,0.9906499601286392,yes,0.9899045845299841,yes,0.9910742229606427
442,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"//TODO handle supportsNotNullUnique=false, but such a case does not exist in the wild so far",yes,undetermined,0,0,0,yes,0.6880546325976342,yes,0.5802126963075303,yes,0.5985575558159435,yes,0.5925914710900209,yes,0.6058793737151115
443,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// TODO: better error message since we actually support composites if names are explicitly listed.,yes,undetermined,0,0,0,yes,0.9937273431963696,yes,0.9926451400594791,yes,0.9929348297176191,yes,0.9924656988566093,yes,0.9933701804301359
444,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: for some dialects it would be appropriate to add the renderOrderByPropertiesSelect() to other select strings,yes,undetermined,0,0,0,yes,0.986824335189672,yes,0.9904051736605655,yes,0.9906585620244481,yes,0.9899067249018659,yes,0.9910799694652153
445,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: unnecessary for databases with ANSI-style joins,yes,undetermined,0,0,0,yes,0.7728274247119105,yes,0.752247651680342,yes,0.7236254910817206,yes,0.716047535598024,yes,0.729739601400652
446,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: maybe call it getRowSelection() ?,yes,undetermined,0,0,0,yes,0.999999999997324,yes,0.9999999999935477,yes,0.9999999999946554,yes,0.999999999993199,yes,0.9999999999960469
447,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: make this handle multiple collection roles!,yes,undetermined,0,0,0,yes,0.9906214132135991,yes,0.9904030648706299,yes,0.9906485568801733,yes,0.9899015577857367,yes,0.9910915012701388
448,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: include the rowids!!!!,yes,undetermined,0,0,0,yes,0.9999890342127765,yes,0.9969935534279373,yes,0.9970756862262758,yes,0.996535076974695,yes,0.9969930832167001
449,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"// if we are still not resolved, we might represent a constant. //      needed to add this here because the allowance of //      naked-prop-refs in the grammar collides with the //      definition of literals/constants (""nondeterminism""). //      TODO: cleanup the grammar so that ""processConstants"" is always just handled from here",yes,undetermined,0,0,0,no,0.23111858038921843,no,0.2081631293413995,no,0.17206593062602865,no,0.16695031448251013,no,0.1700634476038775
450,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// TODO : or should we return 'containsTableAlias'??,yes,undetermined,0,0,0,yes,0.995099933056494,yes,0.9904342073728012,yes,0.9906590282491635,yes,0.9899072046494846,yes,0.9910891518731778
451,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,/////////////////////////////////////////////////////////////////////// // TODO : look at perhaps caching this...,yes,undetermined,0,0,0,yes,0.9829685408174021,yes,0.9904184726248472,yes,0.990650514544709,yes,0.9899202087691157,yes,0.9910925446058584
452,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: avoid this for non-new instances where mightBeDirty==false,yes,undetermined,0,0,0,yes,0.9935297018373307,yes,0.9904046332341985,yes,0.990646229918499,yes,0.9899337002438848,yes,0.9910776828354978
453,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: theoretically non-threadsafe...,yes,undetermined,0,0,0,yes,0.9933273468855733,yes,0.9917608578312312,yes,0.9920981243902428,yes,0.9914814842537407,yes,0.9924829168367576
454,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// todo : look at optimizing these...,yes,undetermined,0,0,0,yes,0.9739827369031292,yes,0.9904122629218315,yes,0.9906430963384618,yes,0.9899045401192996,yes,0.9910801003247742
455,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// todo : cache this sql...,yes,undetermined,0,0,0,yes,0.9949065624310104,yes,0.9952757907044496,yes,0.9955731689886842,yes,0.9954090068034784,yes,0.9959958756033647
456,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"/**
	 * TODO: Check if Mimer SQL cannot handle the way DB2 does
	 */",yes,undetermined,0,0,0,yes,0.9858597165580955,yes,0.9904165997513603,yes,0.9906399802767549,yes,0.9899201807178275,yes,0.9910803512533227
457,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"//TODO: if we are using identity columns, fetch the identifier",yes,undetermined,0,0,0,yes,0.698923982307318,yes,0.8112643303891689,yes,0.8188856200263488,yes,0.8121423791312815,yes,0.8233507178231974
458,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO check there is no actual definition elemnents when a ref is defined,yes,undetermined,0,0,0,yes,0.8046203784866258,yes,0.7716239728429204,yes,0.6613224523924891,yes,0.651698391432545,yes,0.6651215212667194
459,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// table=null -> an association // - fill it in later //TODO fill in the mappings for table == null,yes,undetermined,0,0,0,yes,0.799466717861751,yes,0.6551383865246525,yes,0.6608305412922092,yes,0.6476508801419576,yes,0.6572654243541745
460,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// table=null -> an association - fill // it in later //TODO fill in the mappings for table == null,yes,undetermined,0,0,0,yes,0.799466717861751,yes,0.6551383865246525,yes,0.6608305412922092,yes,0.6476508801419576,yes,0.6572654243541745
461,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// todo : add support for READ_WRITE ( + NONSTRICT_READ_WRITE ??? ),yes,undetermined,0,0,0,yes,0.9820611100904498,yes,0.9904202762056407,yes,0.9906579868007647,yes,0.9899228629176677,yes,0.9910866642086721
462,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: return new Lock(ts);,yes,undetermined,0,0,0,yes,0.9591259878837997,yes,0.9904228052182303,yes,0.9906512896991198,yes,0.9899195350680338,yes,0.9910715481279723
463,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// todo : add support for READ_WRITE ( + NONSTRICT_READ_WRITE ??? ),yes,undetermined,0,0,0,yes,0.9820611100904498,yes,0.9904202762056407,yes,0.9906579868007647,yes,0.9899228629176677,yes,0.9910866642086721
464,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// TODO : why aren't these the same?,yes,undetermined,0,0,0,yes,0.9999978712943505,yes,0.9999961299774971,yes,0.9999964117746156,yes,0.9999957316053482,yes,0.9999969005363272
465,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: proxies!,yes,undetermined,0,0,0,yes,0.9937018532482133,yes,0.9999989643029104,yes,0.9999991824599417,yes,0.9999990399967023,yes,0.9999993245014477
466,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: proxies!,yes,undetermined,0,0,0,yes,0.9937018532482133,yes,0.9999989643029104,yes,0.9999991824599417,yes,0.9999990399967023,yes,0.9999993245014477
467,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"//TODO: if we support multiple fetch groups, we would need //      to clone the set of lazy properties!",yes,undetermined,0,0,0,yes,0.9055963121566571,yes,0.9904092969427083,yes,0.9906594267661638,yes,0.9899151149249119,yes,0.9910749676085501
468,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO mappings.getLogicalTableName(ownerTable),yes,undetermined,0,0,0,yes,0.9880889159605571,yes,0.9904227019193643,yes,0.9906697709257823,yes,0.9899236396866369,yes,0.9910842887494907
469,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: if lock.getTimestamp().equals(ts),yes,undetermined,0,0,0,yes,0.6863881057865882,yes,0.8294092700896417,yes,0.8524939545298568,yes,0.8454112232302836,yes,0.8549755099116644
470,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"//TODO: always true for now, but not if we later decide to support elements() in the from clause",yes,undetermined,0,0,0,yes,0.992195272973186,yes,0.9924221965726934,yes,0.9928744944625323,yes,0.9921642194057718,yes,0.9931094277941046
471,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// we could move this inside if we wanted to // tolerate collection initializations during // collection dirty checking:,yes,undetermined,0,0,0,no,0.024132048916144955,yes,0.9904004122942774,yes,0.9906535056763961,yes,0.9899311290606938,yes,0.9910748022377798
472,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// See if the user configured a multiplexer stack,no,undetermined,0,0,0,no,0.0052255084504957755,no,0.005431588578825303,no,0.0052401596286642226,no,0.0051589583503759045,no,0.004959235849300076
473,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//root entity comes *last*,no,undetermined,0,0,0,no,0.007103276076169153,no,0.004012549898835634,no,0.0035617994454618584,no,0.0032139677109551856,no,0.00307013618289066
474,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//==elementType ??,no,undetermined,0,0,0,no,0.01408366707937658,no,0.012877965690830426,no,0.012213074719483066,no,0.011868024078853578,no,0.011577371117487347
475,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//scan the query string for class names appearing in the from clause and replace //with all persistent implementors of the class/interface, returning multiple //query strings (make sure we don't pick up a class in the select clause!)",no,undetermined,0,0,0,no,0.055093627701887235,no,0.012885516555548851,no,0.01221773118589387,no,0.011863549969606733,no,0.011567088180691038
476,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//identifier collections not supported for 1-to-many,no,undetermined,0,0,0,no,0.015216833422662689,no,0.010576879366216431,no,0.00897113640080555,no,0.008883563576318218,no,0.00862923409975166
477,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// potentialTrimCharacterArgIndex = 1 assumes that a // trim-specification has been specified.  we handle the // exception to that explicitly,no,undetermined,0,0,0,no,0.003485580068869069,no,0.012909635660339126,no,0.012230603614138328,no,0.01188384434514247,no,0.011560588382330789
478,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.002525552164893863,no,0.0035372964829689696,no,0.003319511533314436,no,0.0032615474029665742,no,0.0031159665856848066
479,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if the current depth is 0, the root thing being loaded is the // many-to-many collection itself.  Here, it is alright to use // an inner join...",no,undetermined,0,0,0,no,0.03454936253996302,no,0.012896872591912321,no,0.012220515885860957,no,0.01184651677084729,no,0.011551257816055345
480,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// update removed rows fks to null,no,undetermined,0,0,0,no,0.01685637348853467,no,0.012910379311676988,no,0.012206985483599215,no,0.011863097489319381,no,0.011558621673962648
481,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//registerFunction( ""trim"", new StandardSQLFunction( ""trim"", Hibernate.STRING ) );",no,undetermined,0,0,0,no,0.005009565647459734,no,0.01290622288728761,no,0.012200005354612246,no,0.011886683165393172,no,0.011581623726996521
482,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//			buf.append( selectFragment( lhsAlias, """" ) )//ignore suffix for collection columns!",no,undetermined,0,0,0,no,0.0012872320742252955,no,0.0027228624022429394,no,0.002714306674145852,no,0.002630987034208022,no,0.002465567582728418
483,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// initialize the Set of queried identifier spaces (ie. tables),no,undetermined,0,0,0,no,0.0063110782350741055,no,0.006099144176738632,no,0.005311276898689538,no,0.005266967213752566,no,0.005068628331560292
484,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//use suffix for the entity columns,no,undetermined,0,0,0,no,0.0013621856224313579,no,0.003803668667355163,no,0.0035099874414227868,no,0.0033281811963401403,no,0.003168188504854251
485,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we got here because we assumed that an instance // with an assigned id was detached, when it was // really persistent",no,undetermined,0,0,0,no,0.013142633466755451,no,0.008209561874572432,no,0.007704832394283271,no,0.007650900379188309,no,0.0074191583842942044
486,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the class hierarchy structure,no,undetermined,0,0,0,no,0.015492205692257656,no,0.012917313968489469,no,0.012228129101370592,no,0.011872794296637868,no,0.01159249593805748
487,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// remove the current element from insertions. It will be added back later.,no,undetermined,0,0,0,no,0.011257352905808836,no,0.009681328616985639,no,0.009565488397182203,no,0.009144346096271126,no,0.008884541907258056
488,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//private final String rootTableName;,no,undetermined,0,0,0,no,0.00439538589381986,no,0.006447792686437202,no,0.005965420117030523,no,0.005773786970500768,no,0.0055677127387347945
489,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// NOTE : this is being used from the process of shutting down a // SessionFactory. Specific things to consider: // (1) this clearing of the region should not propagate to // other nodes on the cluster (if any); this is the // cache-mode-local option bit... // (2) really just trying a best effort to cleanup after // ourselves; lock failures, etc are not critical here; // this is the fail-silently option bit...",no,undetermined,0,0,0,no,0.2832397368889777,no,0.35233916031620116,no,0.28802301637635225,no,0.2776402977857115,no,0.284348929775725
490,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//INITIALIZATION:,no,undetermined,0,0,0,no,0.0014236684958155125,no,0.001711230464635003,no,0.0015942286029472837,no,0.00155520435590702,no,0.001464649495568083
491,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is persister-centric and/or EntityInfo-centric ~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.03777679561253985,no,0.012894755096773717,no,0.01223334580623652,no,0.011872134005178446,no,0.011582718195785822
492,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//not null ... (start with 1) is implicit,no,undetermined,0,0,0,no,0.005619977647965352,no,0.006782829782451136,no,0.006441558849718298,no,0.006303586508331648,no,0.00608302774204125
493,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// continue loop,no,undetermined,0,0,0,no,0.006265400945261031,no,0.004174776401926181,no,0.003962555809580268,no,0.003930662375136808,no,0.0037664658388080665
494,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// return existing object or initialized proxy (unless deleted),no,undetermined,0,0,0,no,0.01467155602931062,no,0.01291776100920205,no,0.012211628879967747,no,0.011865789782724378,no,0.011571332929356946
495,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the list of entity names that indicate the batch number,no,undetermined,0,0,0,no,0.01065456883436225,no,0.012924118111640159,no,0.012244024737478208,no,0.011880586154341604,no,0.011566593670802741
496,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//disassembled state gets put in a new array (we write to cache by value!),no,undetermined,0,0,0,no,0.00453266889790495,no,0.0038751430414457402,no,0.0036446291857544118,no,0.003661122025006529,no,0.0035065194404148865
497,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Add these directly to the executions queue,no,undetermined,0,0,0,no,0.005106192285046819,no,0.008993316190070873,no,0.008524505344477051,no,0.008330020733854472,no,0.00807864790712896
498,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Execute the SQL:,no,undetermined,0,0,0,no,0.003586572903987792,no,0.005410853666734229,no,0.005214473197214283,no,0.005294851962742017,no,0.005098200648249878
499,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//sort the updates by fk,no,undetermined,0,0,0,no,0.02767765137522622,no,0.009052809813446958,no,0.008614072797064602,no,0.008288157025239126,no,0.008032151604656071
500,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This could also just be true all the time...,no,undetermined,0,0,0,no,0.00724705090028913,no,0.008306152505815158,no,0.007722539202249264,no,0.007177567721542813,no,0.006958730523918868
501,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the mapping of entity names to their latest batch numbers.,no,undetermined,0,0,0,no,0.009128830168226562,no,0.012922267817557757,no,0.012229209571840502,no,0.011873950625864122,no,0.011595683208314868
502,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//chop the last union (all),no,undetermined,0,0,0,no,0.005030693792391278,no,0.0020497819610267192,no,0.001954184378620208,no,0.0019118339594777886,no,0.0018077213409157986
503,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// note that for sequential scrolling, we make the assumption that // the first persister element is the ""root entity""",no,undetermined,0,0,0,no,0.08751803034356977,no,0.01290998035348893,no,0.01222061355203516,no,0.01184926977720772,no,0.011568995209696278
504,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//TODO: check this....,no,undetermined,0,0,0,yes,0.9923705722419193,yes,0.9852327197628649,no,0.012236841660115686,no,0.011851542676947574,no,0.0115668854261663
505,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// for deprecated saveOrUpdateCopy(),no,undetermined,0,0,0,no,0.01193720969248626,no,0.01288527837289606,no,0.01222172450037769,no,0.011854500240781666,no,0.0115552476472527
506,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//INITIALIZATION:,no,undetermined,0,0,0,no,0.0014236684958155125,no,0.001711230464635003,no,0.0015942286029472837,no,0.00155520435590702,no,0.001464649495568083
507,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// 23000: Check constraint violation: {0} // 23001: Unique index or primary key violation: {0},no,undetermined,0,0,0,no,0.005819600132958252,no,0.008618493271296322,no,0.008687575227205317,no,0.008443273128725528,no,0.008192664918202329
508,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the closure of all properties in the entire hierarchy including // subclasses and superclasses of this class,no,undetermined,0,0,0,no,0.004611034925111547,no,0.004830281823248318,no,0.004490718916803849,no,0.00417795839760741,no,0.004007774184518853
509,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//expressionTerminators.add("",""); // deliberately excluded",no,undetermined,0,0,0,no,0.0037315330892915464,no,0.0039171031645093245,no,0.0037778807975557835,no,0.0036812957869222416,no,0.003520053736754819
510,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// subclass discrimination works by assigning particular // values to certain combinations of null primary key // values in the outer join using an SQL CASE,no,undetermined,0,0,0,no,0.019791951418532794,no,0.0129069481687452,no,0.01221454853834875,no,0.011866626218045436,no,0.01158613138195932
511,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//tokens that close a sub expression //tokens that open a sub expression //tokens that would indicate a sub expression is a boolean expression,no,undetermined,0,0,0,no,0.008074609138904336,no,0.01089188783415029,no,0.010070401043214085,no,0.009668501331396715,no,0.009405866232184047
512,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Multi-param numeric dialect functions...,no,undetermined,0,0,0,no,0.13028095648216903,no,0.12095593494857192,no,0.11711616401686256,no,0.11364791474161899,no,0.11502803858287013
513,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Use theta style (for regression) // Move the node up, after the origin node.",no,undetermined,0,0,0,no,0.004112325661136476,no,0.00429915399404598,no,0.004025844475533084,no,0.003970131660655376,no,0.0038535931708571104
514,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Multi-param date dialect functions...,no,undetermined,0,0,0,no,0.16237274181276953,no,0.17003004545105896,no,0.15736986895834643,no,0.15346835665329048,no,0.15592129067232788
515,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.002525552164893863,no,0.0035372964829689696,no,0.003319511533314436,no,0.0032615474029665742,no,0.0031159665856848066
516,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// add the main query,no,undetermined,0,0,0,no,0.006093427607225475,no,0.006783597955176027,no,0.0065522909829234905,no,0.006052462344391841,no,0.0058364371898245665
517,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// SQLException support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.003498017143695212,no,0.005041721757812875,no,0.0047639002286591105,no,0.004687637252344025,no,0.004501250606996613
518,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//add the restriction to the outer select,no,undetermined,0,0,0,no,0.0006962005493460348,no,0.0007665284257134868,no,0.000649209032328708,no,0.0006425332950426377,no,0.0005976838211818738
519,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// bit_length feels a bit broken to me. We have to cast to char in order to // pass when a numeric value is supplied. But of course the answers given will // be wildly different for these two datatypes. 1234.5678 will be 9 bytes as // a char string but will be 8 or 16 bytes as a true numeric. // Jay Nance 2006-09-22,no,undetermined,0,0,0,no,0.04346107795757551,no,0.012912558254190064,no,0.012211944012701209,no,0.011876523527971307,no,0.011552547733167311
520,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This assumes you will want to ignore any update counts ,no,undetermined,0,0,0,no,0.0008826496849161933,no,0.0011605447193293516,no,0.0010715149727855149,no,0.0010897597142261702,no,0.001022762622225106
521,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//skip the FROM keyword in params,no,undetermined,0,0,0,no,0.0031887454850356737,no,0.0009889036187770571,no,0.0009111403243344424,no,0.0008914384034875521,no,0.0008317026871366841
522,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Custom sql,no,undetermined,0,0,0,no,0.0027942478790320313,no,0.0017249793691298482,no,0.0016318827204243858,no,0.0016406657358396138,no,0.001550534934879737
523,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// return a newly loaded object,no,undetermined,0,0,0,no,0.050203560243030604,no,0.012884424938957612,no,0.01220642948656698,no,0.01183902567999041,no,0.01157765961557418
524,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// make it circular-reference safe,no,undetermined,0,0,0,no,0.022882893421694254,no,0.010362989208452628,no,0.00990518574259811,no,0.009255817549031662,no,0.008985399301859482
525,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//Cope with special cases of AND, NOT, ()",no,undetermined,0,0,0,no,0.004690993287961042,no,0.00546991093528232,no,0.005055927512599563,no,0.004928670947362639,no,0.004732544876090859
526,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// subclass closure properties,no,undetermined,0,0,0,no,0.007258608977995034,no,0.004753690945371783,no,0.004309950476551967,no,0.004205076012711164,no,0.004036252446507594
527,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// for dialects which are known to not support ANSI-SQL row-value-constructor syntax, // we should mutate the tree.",no,undetermined,0,0,0,no,0.004430677087635357,no,0.005384607885820878,no,0.005196750795150991,no,0.005049177751221432,no,0.004863352266868642
528,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.002525552164893863,no,0.0035372964829689696,no,0.003319511533314436,no,0.0032615474029665742,no,0.0031159665856848066
529,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we have the form: trim(from trimSource). //      This is functionally equivalent to trim(trimSource) // EARLY EXIT!!!!,no,undetermined,0,0,0,no,0.0052843685712335945,no,0.007661808570427942,no,0.007401065428521136,no,0.007204988730205507,no,0.006975585466619441
530,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// SUBCLASSES,no,undetermined,0,0,0,no,0.0026321468905384335,no,0.002883277456102676,no,0.002686417277519633,no,0.002643980314824503,no,0.0025138158692904564
531,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//need to hydrate it.,no,undetermined,0,0,0,no,0.011917433571453747,no,0.012888510212936542,no,0.012208340727002486,no,0.011848497764482694,no,0.01155120591683537
532,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//starts with 1, implicitly",no,undetermined,0,0,0,no,0.0034618027655013697,no,0.005472177968000984,no,0.005335586868574952,no,0.005127856596961799,no,0.0049238173901157934
533,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// instantiate a new instance,no,undetermined,0,0,0,no,0.007041066222048563,no,0.01033852783359919,no,0.009851505170710937,no,0.009654924919190235,no,0.009375019538083996
534,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// simple nullability constraint,no,undetermined,0,0,0,no,0.001214951943685762,no,0.004292914484670958,no,0.0037434288561270196,no,0.003644347642159887,no,0.0034840109601623707
535,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//we need to upgrade the lock mode to the mode requested,no,undetermined,0,0,0,no,0.008919168124844824,no,0.009691842552743303,no,0.009307096916953127,no,0.009121337665308375,no,0.008862521723389812
536,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	register the type of the out param - an Oracle specific type,no,undetermined,0,0,0,no,0.035560795521373416,no,0.012880054675210004,no,0.012238598895568734,no,0.011842499285531296,no,0.011563368169588787
537,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// look for a proxy,no,undetermined,0,0,0,no,0.0017916746860339146,no,0.0026168964986472594,no,0.0025173343661916044,no,0.0019484518688864245,no,0.001848884125976533
538,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// features which change between 8i, 9i, and 10g ~~~~~~~~~~~~~~~~~~~~~~~~~~",no,undetermined,0,0,0,no,0.0005761665319121931,no,0.0006193040734981073,no,0.0005700837383540533,no,0.0005615549051079943,no,0.0005207335156776386
539,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// evicts don't cascade to uninitialized collections,no,undetermined,0,0,0,no,0.005965616357430631,no,0.005928108802069228,no,0.005418238333344994,no,0.004977143988160373,no,0.004799850813743977
540,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// features which remain constant across 8i, 9i, and 10g ~~~~~~~~~~~~~~~~~~",no,undetermined,0,0,0,no,0.0013124907297752486,no,0.0015549317784897172,no,0.0014653328532044296,no,0.0014346139256740348,no,0.0013512322679232098
541,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// need to treat this as if it where optimistic-lock=""all"" (dirty does *not* make sense); // first we need to locate the ""loaded"" state // // Note, it potentially could be a proxy, so perform the location the safe way...",no,undetermined,0,0,0,no,0.28318348734962084,no,0.210573846785601,no,0.20737814141893393,no,0.20133443507150584,no,0.20517703849475633
542,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//( (Column) sc.getTable().getPrimaryKey().getColumnIterator().next() ).getName();,no,undetermined,0,0,0,no,0.014675913789717278,no,0.010166578390063194,no,0.009566995541985639,no,0.009312390754190974,no,0.009044918422689898
543,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// might happen with a managed connection,no,undetermined,0,0,0,no,0.052143555192644415,no,0.012914825790571266,no,0.012218979441861016,no,0.011864929706274343,no,0.011578543513034487
544,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// don't need subclass tables, because they can't appear in conditions",no,undetermined,0,0,0,no,0.13492573564044544,no,0.16939556134277486,no,0.15099718063373863,no,0.14207481254222773,no,0.14416409025752128
545,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// not final-static to avoid possible classcast exceptions if using different oracle drivers.,no,undetermined,0,0,0,no,0.027180824282445643,no,0.012889734356669808,no,0.012236734239843675,no,0.011870764326185274,no,0.011572547274050587
546,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Make 100% certain that this is called before any subsequent ScheduledUpdate.afterTransactionCompletion()!!,no,undetermined,0,0,0,no,0.013156440541723444,no,0.012898570077772013,no,0.01223078801072742,no,0.011870524541692545,no,0.011561492923741607
547,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//private List aliases = new ArrayList();,no,undetermined,0,0,0,no,0.010738660444132029,no,0.008238963504175861,no,0.012200170148829502,no,0.011839666628457401,no,0.011583083967903342
548,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The reason for this is SQL doesn't let you sort by an expression you are // not returning in the result set.,no,undetermined,0,0,0,no,0.05594408027138272,no,0.012920080136552966,no,0.012236897851577623,no,0.011850768207210512,no,0.011562389895801514
549,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// register resolvers set via Environment property,no,undetermined,0,0,0,no,0.029887382077078518,no,0.01290010415697193,no,0.012225434510900938,no,0.011843346910599139,no,0.011596431330682529
550,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// an existing collection that was either non-empty or uninitialized // is replaced by null or a different collection // (if the collection is uninitialized, hibernate has no way of // knowing if the collection is actually empty without querying the db)",no,undetermined,0,0,0,no,0.0323521478047056,no,0.01162777523178817,no,0.010466295165509005,no,0.010151755626538665,no,0.009708878018708818
551,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//update all the modified entries,no,undetermined,0,0,0,no,0.0011129560703817289,no,0.002364771996750249,no,0.002276913894640482,no,0.0022447667939225185,no,0.002129805356123191
552,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// special case where we need to force incloude all subclass joins,no,undetermined,0,0,0,no,0.011924991450937792,no,0.012909945788619257,no,0.0122383526187994,no,0.011875124468297138,no,0.011581665209641337
553,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we did not find a collection element in the result set, so we // ensure that a collection is created with the owner's identifier, // since what we have is an empty collection",no,undetermined,0,0,0,no,0.0061281518867474126,no,0.002693656400705578,no,0.002502463776805231,no,0.0024568861056642253,no,0.0022985806348617063
554,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// binary %Stream // character %Stream,no,undetermined,0,0,0,no,0.0003720010866312213,no,0.0011408987612183282,no,0.0010702023314313135,no,0.0010611780088929919,no,0.00099754531168438
555,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ignore it,no,undetermined,0,0,0,no,0.0003963947956631522,no,0.0005033798635581664,no,0.0004702444207308477,no,0.0004640531103833746,no,0.0004297751119298306
556,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//getDefaultProperties().setProperty(Environment.STATEMENT_BATCH_SIZE, NO_BATCH);",no,undetermined,0,0,0,no,0.001954767059352586,no,0.002476488467543409,no,0.002329922085080237,no,0.0022838135454358683,no,0.0021680996366522636
557,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// assumes that types are all of span 1,no,undetermined,0,0,0,no,0.0005246741771731113,no,0.0005708681387498006,no,0.000564782459465381,no,0.0005640503951658663,no,0.0005236586144779642
558,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// hibernate impelemnts cast in Dialect.java,no,undetermined,0,0,0,no,0.02583802668119668,no,0.012918176585222556,no,0.012224151736540548,no,0.011851831055923254,no,0.011559857861840064
559,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// this is the root (versioned) table, and we are using version-based // optimistic locking;  if we are not updating the version, also don't // check it (unless this is a ""generated"" version column)!",no,undetermined,0,0,0,no,0.03152410180015055,no,0.012922760214758706,no,0.012207249480043645,no,0.01188141725831034,no,0.011593523254916343
560,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// aggregate functions shouldn't be registered, right? //registerFunction( ""list"", new StandardSQLFunction(""list"",Hibernate.STRING) ); // stopped on $list",no,undetermined,0,0,0,no,0.010463148053247395,no,0.012894443482952387,no,0.012211998475441282,no,0.011855208552611256,no,0.011557677365757054
561,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//its the given optional object,no,undetermined,0,0,0,no,0.009239347869500722,no,0.009683928117243074,no,0.008794424712865114,no,0.008870495719093334,no,0.00860970097320747
562,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the class hierarchy structure,no,undetermined,0,0,0,no,0.015492205692257656,no,0.012917313968489469,no,0.012228129101370592,no,0.011872794296637868,no,0.01159249593805748
563,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//decide which ResultSet to get the property value from:,no,undetermined,0,0,0,no,0.010267752819328886,no,0.012892935409950694,no,0.012237175494776327,no,0.011867204436436272,no,0.011587177501716896
564,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// properties of this class, including inherited properties",no,undetermined,0,0,0,no,0.006339607611528591,no,0.004198768075908945,no,0.003931714557631447,no,0.003882334873741184,no,0.0037219969913845808
565,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// otherwise assume the parent is the the criteria that created us,no,undetermined,0,0,0,no,0.012666053677801242,no,0.012886947265419193,no,0.012220792991216638,no,0.011861678492048567,no,0.011587973359641058
566,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the closure of all columns used by the entire hierarchy including // subclasses and superclasses of this class,no,undetermined,0,0,0,no,0.003449015459100129,no,0.006933443093314924,no,0.006813902754722744,no,0.0063321981815882555,no,0.006120118109395498
567,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we can go straight to the first required row,no,undetermined,0,0,0,no,0.002621783517025292,no,0.002265286258785313,no,0.002173039744763435,no,0.0021145972129629864,no,0.00200741622259649
568,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// now look up the object we are really interested in! // (this lets us correctly handle proxies and multi-row // or multi-column queries),no,undetermined,0,0,0,no,0.036786967559617016,no,0.012903259985779417,no,0.012226932862635511,no,0.01184518719392427,no,0.011554906680950622
569,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//before adding to collection!,no,undetermined,0,0,0,no,0.01557187449626362,no,0.005403158125419171,no,0.00505528307696029,no,0.004881355606980243,no,0.004593035524706512
570,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// discriminator column,no,undetermined,0,0,0,no,0.005758642446847601,no,0.00528915590614701,no,0.0050382692322127436,no,0.004944440791664817,no,0.004754559999778424
571,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Code to handle subclasses of topClass,no,undetermined,0,0,0,no,0.018950733091898368,no,0.01288858669344183,no,0.012206550570759842,no,0.011857590834160017,no,0.011562977848140206
572,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//INITIALIZATION:,no,undetermined,0,0,0,no,0.0014236684958155125,no,0.001711230464635003,no,0.0015942286029472837,no,0.00155520435590702,no,0.001464649495568083
573,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//NONE, because its the requested lock mode, not the actual! ",no,undetermined,0,0,0,no,0.0020601210519639985,no,0.0019048790193740102,no,0.0018742451216326446,no,0.0018596123393553182,no,0.0017596812851853449
574,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//private final Map propertyTableNumbersByName = new HashMap();,no,undetermined,0,0,0,no,0.007324440657967401,no,0.012848697389815531,no,0.012205003217402997,no,0.011870331541321716,no,0.011585256483829116
575,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// conceivable that the dialect ctor could throw HibernateExceptions, so don't re-wrap",no,undetermined,0,0,0,no,0.016885397957089914,no,0.012899251102322309,no,0.012228666618480488,no,0.011882822630350577,no,0.011590688121493518
576,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// CLASS + TABLE,no,undetermined,0,0,0,no,0.0022941803253079436,no,0.0012236951949175382,no,0.0011516398794702623,no,0.0011312721321493843,no,0.0010634885547367967
577,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// synchronized to avoid multi-thread access issues; defined as method synch to avoid // potential deadlock issues due to nature of code.,no,undetermined,0,0,0,no,0.11757497134882654,no,0.08755181421914261,no,0.012222468120247647,no,0.011872754369401972,no,0.011594243511153941
578,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// required to exception table // iconst_0 // i,no,undetermined,0,0,0,no,0.001669961933122039,no,0.0022280277977230795,no,0.002068122743551437,no,0.002037943702750861,no,0.0019319083365192842
579,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// for now, just ""re-flatten"" the metamodel since this is temporary stuff anyway (HHH-1907)",no,undetermined,0,0,0,no,0.06735511176199592,no,0.012882148945678483,no,0.012236012611357218,no,0.011873170339826248,no,0.01157671441395879
580,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// checkcast // cast the bean into a raw bean,no,undetermined,0,0,0,no,0.011692417869021603,no,0.010995831422775899,no,0.010498347456006628,no,0.010226199737254771,no,0.00994580049173402
581,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// this one only really needed for badly-behaved applications! // (if the TransactionManager has a Sychronization registered, // its a noop) // (actually we do need it for downgrading locks)",no,undetermined,0,0,0,no,0.08112633598128045,no,0.012882536162321356,no,0.01220768635882503,no,0.011851988175887765,no,0.011573027927529927
582,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// checkcast (case of primitive type) // invokevirtual (case of primitive type),no,undetermined,0,0,0,no,0.003913379487885165,no,0.0038570354438892756,no,0.0035588645083851774,no,0.003491014362099513,no,0.003336884870843127
583,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// at this point we have (drivingSqlAlias) the SQL alias of the driving table // corresponding to the given user alias.  However, the driving table is not // (necessarily) the table against which we want to apply locks.  Mainly, // the exception case here is joined-subclass hierarchies where we instead // want to apply the lock against the root table (for all other strategies, // it just happens that driving and root are the same).",no,undetermined,0,0,0,no,0.034521303342926864,no,0.012906973543217525,no,0.012227693596695786,no,0.011858890109044118,no,0.011562754318763038
584,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* | this | bean | args | i | raw bean | exception | */,no,undetermined,0,0,0,no,0.008517343072821768,no,0.012123483084501712,no,0.01164258724229031,no,0.011310686368436105,no,0.011012167185174209
585,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Get the first child to be considered.  Sub-classes may do this differently in order to skip nodes that // are not select expressions (e.g. DISTINCT).,no,undetermined,0,0,0,no,0.006595236771574584,no,0.007721786119736055,no,0.006650734117804749,no,0.0065165849695896115,no,0.006318545977218884
586,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// new // BulkAccessorException,no,undetermined,0,0,0,no,0.002636179336331818,no,0.0037656113856225134,no,0.003564350765537382,no,0.0035326015975680643,no,0.0033746501263520966
587,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//""as"" is not in KEYWORDS",no,undetermined,0,0,0,no,6.273867919714446e-06,no,8.251359888273933e-06,no,7.656990423637783e-06,no,7.813953041340898e-06,no,6.758604230466711e-06
588,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// getfield // get field ""$JAVASSIST_CALLBACK"" defined already",no,undetermined,0,0,0,no,0.005230515976975924,no,0.005024534026692927,no,0.004548656179188151,no,0.00441740283682747,no,0.0042387980602489024
589,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// all DistinctRootEntityResultTransformer are considered equal ~~~~~~~~~~~,no,undetermined,0,0,0,no,6.406352713742666e-05,no,0.00012868543175019088,no,0.00012393956139367498,no,0.0001247297589821906,no,0.00011301567553902278
590,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// dup,no,undetermined,0,0,0,no,0.0029755378220813426,no,0.003920139222089205,no,0.003740456606294171,no,0.003664229779081345,no,0.003498378148557271
591,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// todo : move this to SF per HHH-3517; also see HHH-1907 and ComponentMetamodel,no,undetermined,0,0,0,yes,0.6199331883714845,yes,0.725040886122014,yes,0.7299702556423469,yes,0.7215076215929441,yes,0.7341418681752174
592,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// putfield // put field ""$JAVASSIST_CALLBACK"" defined already",no,undetermined,0,0,0,no,0.005261871152153087,no,0.005067916937019678,no,0.0045916117182790185,no,0.0044594461061325,no,0.004279879239587852
593,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Configure the cache to use our TM,no,undetermined,0,0,0,no,0.00913715062458888,no,0.009946898538302414,no,0.009631434963731467,no,0.009429168310233726,no,0.00913273596436953
594,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* local variables | this | callback | */,no,undetermined,0,0,0,no,0.006658276597258005,no,0.006117400609038586,no,0.006004478815516224,no,0.005843221043972494,no,0.005635317134459555
595,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// find the batch number associated with the current association, if any.",no,undetermined,0,0,0,no,0.0030121072302261654,no,0.0032259366695621,no,0.0031836548709903295,no,0.0031177107810560736,no,0.0029764595900976243
596,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// invokeinterface,no,undetermined,0,0,0,no,0.004461466356121916,no,0.0048726413120573795,no,0.004563899386311012,no,0.004473418388100706,no,0.00429371128114475
597,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we *always* assume an instance with a null // identifier or no identifier property is unsaved!,no,undetermined,0,0,0,no,0.007729096590391221,no,0.003797859777793097,no,0.0033174461218256433,no,0.003329037354997955,no,0.003181726853151715
598,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// DDL support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.00873554553462725,no,0.008271360384466244,no,0.00772789774728609,no,0.007695256615644991,no,0.007446752757716868
599,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// seems to not really... //	public boolean supportsRowValueConstructorSyntax() { //		return true; //	},no,undetermined,0,0,0,no,0.015365856839341307,no,0.012912257714443634,no,0.01223040935157471,no,0.011873989677637807,no,0.011594509840912273
600,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// below is for Cache' that don't have str in 2007.1 there is str and we register str directly,no,undetermined,0,0,0,no,0.0022231728148249612,no,0.0031882299157326983,no,0.002976195264717977,no,0.0029032687196922148,no,0.00276699541139239
601,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.07099290193948361,no,0.01289104081641565,no,0.01220122216293205,no,0.011866857127213156,no,0.011587871478232894
602,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// byte,no,undetermined,0,0,0,no,0.011945268259768453,no,0.012886958504182977,no,0.012218832524874466,no,0.011865335439373997,no,0.011593129373730568
603,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the column doesnt exist at all.,no,undetermined,0,0,0,no,0.005636024760674703,no,0.004440763193914861,no,0.004344518751956536,no,0.00434753575231643,no,0.0041694492622507745
604,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// note that %string is deprecated,no,undetermined,0,0,0,no,0.10821565943781682,no,0.07052694427180382,no,0.012232424387273436,no,0.011870754421982243,no,0.011569793036074166
605,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//If the object is already loaded, return the loaded one",no,undetermined,0,0,0,no,0.019397116359682488,no,0.010132136301121185,no,0.009706251057786396,no,0.009853151728664095,no,0.009620920845367649
606,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// create new lock that times out immediately,no,undetermined,0,0,0,no,0.00453842366496069,no,0.004790514037727097,no,0.004821463049291146,no,0.004757039514129917,no,0.004570979000448357
607,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// convenience methods relating to operations across arrays of types...,no,undetermined,0,0,0,no,0.007957633852722848,no,0.007814523497581397,no,0.009287711124386375,no,0.009134838201176868,no,0.008897337259684635
608,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we really could refresh the item if it // is not a lock, but it might be slower //return freshTimestamp < txTimestamp",no,undetermined,0,0,0,no,0.004972852574667324,no,0.009806289003768714,no,0.009314280648185656,no,0.008981054504326529,no,0.008718381793814801
609,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Due to the complexity in initializing the SelectClause, do not generate one here. // If it is not found; simply return null... // // Also, do not cache since it gets generated well after we are created.",no,undetermined,0,0,0,no,0.13517842756034076,no,0.191481385801607,no,0.18140290179199475,no,0.17455720337875874,no,0.178152212175007
610,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// DISCRIMINATOR,no,undetermined,0,0,0,no,0.004742980399292193,no,0.005144618038151528,no,0.004831040616159839,no,0.004722825853118072,no,0.004537698436405277
611,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// VersionType impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //      Note : simply returns null for seed() and next() as the only known //      application of binary types for versioning is for use with the //      TIMESTAMP datatype supported by Sybase and SQL Server, which //      are completely db-generated values...",no,undetermined,0,0,0,no,0.08715812488984076,no,0.012886603265841678,no,0.012226760211239836,no,0.011857107146616962,no,0.01157706898150686
612,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // Pre-flushing section // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.004605394670289815,no,0.00494619380470994,no,0.004662962133914831,no,0.004571918713151414,no,0.004390268754039818
613,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Use the lower case function name. // Remember whether we're in a SELECT clause or not.,no,undetermined,0,0,0,no,0.00896916837569265,no,0.012921553755008088,no,0.01224865609174003,no,0.011874086545214112,no,0.011578335664343745
614,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// %upper is deprecated,no,undetermined,0,0,0,no,0.041869897306579924,no,0.01290997902455241,no,0.01221763350888518,no,0.011859765492016885,no,0.011558185174340355
615,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// let this take precedence if defined, since it works for // assigned identifiers",no,undetermined,0,0,0,no,0.009644361641303367,no,0.006451509721445011,no,0.005647201642965354,no,0.005515635611238391,no,0.005309241178098866
616,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//throw new UnsupportedOperationException(""Can't write to a readonly object"");",no,undetermined,0,0,0,no,0.006676633014334473,no,0.006339660764673378,no,0.00615504300293642,no,0.0060657020238285035,no,0.005857360808483538
617,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the contract of EntityTuplizer.determineConcreteSubclassEntityName says that returning null // is an indication that the specified entity-name (this.getEntityName) should be used.,no,undetermined,0,0,0,no,0.04875639712094285,no,0.0129062870542888,no,0.012212713348609995,no,0.011869480439457734,no,0.01157136409432138
618,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// SUBCLASSES,no,undetermined,0,0,0,no,0.0026321468905384335,no,0.002883277456102676,no,0.002686417277519633,no,0.002643980314824503,no,0.0025138158692904564
619,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// according to both the ANSI-SQL and EJB3 specs, trim can either take // exactly one parameter or a variable number of parameters between 1 and 4. // from the SQL spec: // // <trim function> ::= //      TRIM <left paren> <trim operands> <right paren> // // <trim operands> ::= //      [ [ <trim specification> ] [ <trim character> ] FROM ] <trim source> // // <trim specification> ::= //      LEADING //      | TRAILING //      | BOTH // // If only <trim specification> is omitted, BOTH is assumed; // if <trim character> is omitted, space is assumed",no,undetermined,0,0,0,no,0.0036085512060058094,no,0.0129233182516005,no,0.012222495438984104,no,0.011876460677612792,no,0.011568836752486017
620,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The syntax used to add a foreign key constraint to a table.,no,undetermined,0,0,0,no,0.003231577587247373,no,0.005222970934365825,no,0.004895309558252268,no,0.0047983792014855385,no,0.004620546507345102
621,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//note: it is conceptually possible that a UserType could map null to //	  a non-null value, so the following is arguable:",no,undetermined,0,0,0,no,0.04140008949432171,no,0.012883098436348975,no,0.012234774706380574,no,0.011865761496028759,no,0.011573432783574856
622,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Execute the SQL:,no,undetermined,0,0,0,no,0.003586572903987792,no,0.005410853666734229,no,0.005214473197214283,no,0.005294851962742017,no,0.005098200648249878
623,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// note: interfaces is assumed to already contain HibernateProxy.class,no,undetermined,0,0,0,no,0.010775367148258023,no,0.004233085439525744,no,0.0039915644461882725,no,0.003860319685417761,no,0.003693463428224562
624,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// identifier-commalist,no,undetermined,0,0,0,no,0.004166841352126509,no,0.0038987812269171552,no,0.003344149529616062,no,0.003351210279362512,no,0.00320304070714836
625,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// note: interfaces is assumed to already contain HibernateProxy.class,no,undetermined,0,0,0,no,0.010775367148258023,no,0.004233085439525744,no,0.0039915644461882725,no,0.003860319685417761,no,0.003693463428224562
626,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//assembled state gets put in a new array (we read from cache by value!),no,undetermined,0,0,0,no,0.0071411591788554125,no,0.006162009404754316,no,0.005912093581796188,no,0.00588887386836447,no,0.0056835953687175336
627,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we do not have to worry about queued additions to uninitialized // collections, since they can only occur for inverse collections!",no,undetermined,0,0,0,no,0.0031050900933413316,no,0.0017940907018457453,no,0.0016601461042448618,no,0.0016519305422718975,no,0.0015613423465864812
628,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// disassemble named parameters,no,undetermined,0,0,0,no,0.020198898621825945,no,0.01031843591426132,no,0.008954715716633362,no,0.008114269401217799,no,0.00787117825301403
629,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if not wrappered yet, its dirty (this can't occur, because // we now always call wrap() before getting to here) // return ( ! (obj instanceof PersistentCollection) ) ? //true : searchForDirtyCollections( (PersistentCollection) obj, type );",no,undetermined,0,0,0,no,0.17025374321549205,no,0.13473008879682916,no,0.10959794193073262,no,0.10555496559871828,no,0.10699504108732372
630,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// again, CCS did not have such a concept; but a reasonable // proximity is to clear the cache after transaction *as long as* // the underlying cache is not JTA aware.",no,undetermined,0,0,0,no,0.021966084104651385,no,0.012919359656122013,no,0.012223552636922277,no,0.011861068558587913,no,0.01159024047533618
631,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Oracle driver reports to support getGeneratedKeys(), but they only // support the version taking an array of the names of the columns to // be returned (via its RETURNING clause).  No other driver seems to // support this overloaded version.",no,undetermined,0,0,0,no,0.009349506570587847,no,0.012888184886285426,no,0.012212453654272815,no,0.011842875776309781,no,0.0115800887851303
632,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// again, CCS did not have such a concept; however a reasonable // proximity is to clear the cache.  For non-transaction aware // caches, we will also do a clear at the end of the transaction",no,undetermined,0,0,0,no,0.01875650855867291,no,0.007963708682558841,no,0.007122539883234395,no,0.007288683877355798,no,0.007086525827645831
633,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// remove all collections for the entity from the session-level cache,no,undetermined,0,0,0,no,0.017610321724084475,no,0.01007829345912003,no,0.008645015288477163,no,0.0083759566011093,no,0.008148035103455594
634,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// invokeinterface // callback.write*(..),no,undetermined,0,0,0,no,0.0024085243692326475,no,0.0020020059723938064,no,0.001911434358478652,no,0.001889581377395469,no,0.0017892193250658955
635,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// moved up from AbstractEntityPersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.15181587903365107,no,0.14188126989020186,no,0.1376665614723084,no,0.1357561079356872,no,0.13771021104037778
636,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// JOINS,no,undetermined,0,0,0,no,0.004509277360738598,no,0.012026547506278011,no,0.01157812602079972,no,0.011436673554164849,no,0.011212107461165606
637,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If this is an entity and the property is the identifier property, then use getIdentifierType(). //      Note that the propertyName.equals( propertyPath ) checks whether we have a component //      key reference, where the component class property name is the same as the //      entity id property name; if the two are not equal, this is the case and //      we'd need to ""fall through"" to using the property mapping.",no,undetermined,0,0,0,no,0.07581123740808654,no,0.01289148671935962,no,0.012237327542896814,no,0.011851152452008492,no,0.011568847823293066
638,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// classes mentioned in extends not available - so put it in queue,no,undetermined,0,0,0,no,0.019121431999510816,no,0.01288358428535632,no,0.012224626766147368,no,0.01183974814399725,no,0.011592940427363436
639,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is Tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.003974925200178804,no,0.004220324823510026,no,0.003952210105421293,no,0.0038754189845982704,no,0.003710509578125519
640,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//propertyTableNumbersByName.put( prop.getName(), join );",no,undetermined,0,0,0,no,0.012012372080848918,no,0.008558982008658513,no,0.008182954025967916,no,0.0079080773604408,no,0.007671496422771351
641,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Needed to bump this up to DotNode, because that is the only thing which currently // knows about the property-ref path in the correct format; it is either this, or // recurse over the DotNodes constructing the property path just like DotNode does // internally",no,undetermined,0,0,0,no,0.22918800245689705,no,0.24768335539706335,no,0.2276868132047114,no,0.2157055948079995,no,0.22068398582512683
642,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Access cached SQL,no,undetermined,0,0,0,no,0.003089389622535157,no,0.0025949693337355274,no,0.0024270130594052134,no,0.002466853644166634,no,0.002347522430564032
643,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is tuplizer-centric, but is passed a session ~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",no,undetermined,0,0,0,no,0.00478136803158064,no,0.0035379428669430964,no,0.0032992869181648716,no,0.0032781243688706687,no,0.0031298297838436608
644,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//figure out which tables need to be fetched,no,undetermined,0,0,0,no,0.026761697496135654,no,0.012892389313717457,no,0.012210517700034356,no,0.011854410720203983,no,0.01158288667583844
645,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	private final List persisters = new ArrayList();,no,undetermined,0,0,0,no,0.17248896647781906,no,0.1639998403815328,no,0.12228005081562203,no,0.11849616671507614,no,0.12002495676326147
646,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//figure out which columns are needed,no,undetermined,0,0,0,no,0.012813131454365445,no,0.012922341856743201,no,0.007527071935982574,no,0.007298072649338109,no,0.007072878229082812
647,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// it is possible for this method to be called during flush processing, // so make certain that we do not accidently initialize an uninitialized proxy",no,undetermined,0,0,0,no,0.02112206250009236,no,0.012921769901876424,no,0.011462826361870156,no,0.011113250589750327,no,0.010855296726156543
648,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//figure out which formulas are needed,no,undetermined,0,0,0,no,0.20842962961292266,no,0.09759819089256959,no,0.012214449032736614,no,0.011867943065341648,no,0.011583712937270592
649,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//get em on the second pass!,no,undetermined,0,0,0,no,0.00787984529276604,no,0.005298010812365819,no,0.00506414677442608,no,0.004939278531242865,no,0.004752628936972327
650,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//render the SQL,no,undetermined,0,0,0,no,0.009279737090308236,no,0.008084581270132639,no,0.007782508786209544,no,0.007731513090681376,no,0.007479460430576081
651,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// local cache, so we use synchronization",no,undetermined,0,0,0,no,0.007282751878040864,no,0.009916451683979581,no,0.009350097173737961,no,0.009260429019660803,no,0.008966570025754645
652,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// SQL strings,no,undetermined,0,0,0,no,0.009762883379282914,no,0.009477849959164942,no,0.009128041923613371,no,0.009089687137418126,no,0.008841431556470705
653,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*public static Object[] clone(Class elementClass, Object[] array) {
		Object[] result = (Object[]) Array.newInstance( elementClass, array.length );
		System.arraycopy(array, 0, result, 0, array.length);
		return result;
	}*/",no,undetermined,0,0,0,no,0.009502723783320725,no,0.007194975834363192,no,0.006942061243862551,no,0.006753370953126192,no,0.006533305494560158
654,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// IDENTITY support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.005309609788330111,no,0.012918510173491016,no,0.012209041355855882,no,0.011847572639896489,no,0.01155304219628317
655,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if there is no resulting row, return null",no,undetermined,0,0,0,no,0.005935965597712415,no,0.0037608780757371896,no,0.003695782255145495,no,0.0035653485564159024,no,0.003417572812858322
656,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// *load_1 // each type,no,undetermined,0,0,0,no,0.003520757683573502,no,0.004011953667038572,no,0.004574778374437608,no,0.004433830170107527,no,0.004252110415987858
657,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// unfortunately not really safe to normalize this // to 1 as an initial value like we do the others // because we would not be able to control this if // we are using a sequence...,no,undetermined,0,0,0,no,0.042307794423504075,no,0.012909864843311709,no,0.012212686222654564,no,0.01185375339231244,no,0.01156778169690926
658,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
659,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// select topic, syntax from information_schema.help // where section like 'Function%' order by section, topic // // see also ->  http://www.h2database.com/html/functions.html",no,undetermined,0,0,0,no,0.004397179332560982,no,0.005920377561067078,no,0.0054151299645056996,no,0.005287412560105562,no,0.0051010241320753
660,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The optional SQL string defined in the where attribute,no,undetermined,0,0,0,no,0.0024681100445572827,no,0.0022403194734600387,no,0.001982558438087897,no,0.002006472715349933,no,0.001900348568775093
661,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//pass this as an argument only to avoid double looking,no,undetermined,0,0,0,no,0.003915414790763577,no,0.00387143870862236,no,0.003951425441507563,no,0.0038470839766278284,no,0.003679317346881706
662,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// for version properties marked as being generated, make sure they are ""always"" // generated; aka, ""insert"" is invalid; this is dis-allowed by the DTD, // but just to make sure...",no,undetermined,0,0,0,no,0.015242941900386118,no,0.012897391819006742,no,0.01221538438980087,no,0.011845301301220537,no,0.011563203337369305
663,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// added this caching as I noticed that getType() is being called multiple times...,no,undetermined,0,0,0,no,0.06765327804023348,no,0.012884744238108353,no,0.012223111978523661,no,0.011853098716455259,no,0.011578294628097265
664,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//information about lazy properties of this class,no,undetermined,0,0,0,no,0.025533273681634914,no,0.012895885697316542,no,0.012239470748460868,no,0.011846889087213361,no,0.011549964132664105
665,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If there are any scalars (non-entities) selected, render the select column aliases.",no,undetermined,0,0,0,no,0.005731947080020024,no,0.005320089954579172,no,0.008599017827374449,no,0.00856275875543709,no,0.008327026424302662
666,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//information about all columns/formulas in class hierarchy,no,undetermined,0,0,0,no,0.0032482922668797686,no,0.009383758259669816,no,0.009777970020138837,no,0.009593660644739524,no,0.009333407377771986
667,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Inner classes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.005662397970372304,no,0.005354102765918454,no,0.004973832170364455,no,0.004823966291924914,no,0.0046301948509426035
668,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ( (Column) discrim.getColumnIterator().next() ).setType(type);,no,undetermined,0,0,0,no,0.007484062732995389,no,0.005903461251197228,no,0.005641699380788365,no,0.005518315763220548,no,0.005316917949855218
669,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// saveOrUpdateCopy() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.006324468532590012,no,0.0061390026561531875,no,0.0057804709083662306,no,0.0056159876633176745,no,0.0054124539466301295
670,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// dynamic filters attached to the class-level,no,undetermined,0,0,0,no,0.018582055980369726,no,0.012904820549644827,no,0.012241326112813491,no,0.011865401123103372,no,0.011583582990494517
671,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// the loaded owner will be set to null after the collection is removed, // so capture its value as the affected owner so it is accessible to // both pre- and post- events",no,undetermined,0,0,0,no,0.018285425218218392,no,0.012914036676312973,no,0.012204079172684285,no,0.011842562623105889,no,0.011593452216785332
672,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.07880328742694175,no,0.012902942349683897,no,0.012237152264910808,no,0.011848837056599696,no,0.011567478342838439
673,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// assume we are in an auto-commit state,no,undetermined,0,0,0,no,0.0014721533711698554,no,0.0013474543415007976,no,0.0013447545165368694,no,0.0013423431578667077,no,0.0012627667952732396
674,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// CUSTOM SQL,no,undetermined,0,0,0,no,0.0027942478790320313,no,0.0017249793691298482,no,0.0016318827204243858,no,0.0016406657358396138,no,0.001550534934879737
675,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// cascade first, so that all unsaved objects get their // copy created before we actually copy //cascadeOnMerge(event, persister, entity, copyCache, Cascades.CASCADE_BEFORE_MERGE);",no,undetermined,0,0,0,no,0.020002135487847128,no,0.0129263048234772,no,0.01223234469214622,no,0.011873761370397229,no,0.011582298012926349
676,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// model.getKey().setType( new Type( model.getIdentifier() ) );,no,undetermined,0,0,0,no,0.02225105281671353,no,0.012907312811680767,no,0.012224004023520212,no,0.011865202469144963,no,0.01158272963413735
677,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is Tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.003974925200178804,no,0.004220324823510026,no,0.003952210105421293,no,0.0038754189845982704,no,0.003710509578125519
678,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The syntax used to add a column to a table,no,undetermined,0,0,0,no,0.015328315254052583,no,0.012916250187971894,no,0.01221298232190608,no,0.01185003304876847,no,0.011557035253112294
679,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// simple, because we can't have a one-to-one or a collection  // (or even a property-ref) in a composite-element:",no,undetermined,0,0,0,no,0.003824574622440137,no,0.0021035866557595254,no,0.0017428034499334956,no,0.0016924363597119296,no,0.0015847524883428556
680,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Completely optional cascading drop clause.,no,undetermined,0,0,0,no,0.011355249131555637,no,0.008094679567860386,no,0.0076678922798579475,no,0.00757902017588504,no,0.007338985817152133
681,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// during deserialization, we need to reconnect all proxies and // collections to this session, as well as the EntityEntry and // CollectionEntry instances; these associations are transient // because serialization is used for different things.",no,undetermined,0,0,0,no,0.08423914408639156,no,0.012880812758015675,no,0.012228055534342629,no,0.011875424190291282,no,0.011592755267066686
682,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// PROPERTIES,no,undetermined,0,0,0,no,0.003538818736704457,no,0.003232205632595162,no,0.002976990883263783,no,0.002984297171515596,no,0.002850282165435171
683,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//sqlResultTypes = ( Type[] ) sqlResultTypeList.toArray( new Type[sqlResultTypeList.size()] );,no,undetermined,0,0,0,no,0.023854732817511746,no,0.012905876577579384,no,0.01221239241860219,no,0.01185219012841929,no,0.011560321485588516
684,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
685,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// potentialTrimCharacterArgIndex = 1 assumes that a // trim-specification has been specified.  we handle the // exception to that explicitly,no,undetermined,0,0,0,no,0.003485580068869069,no,0.012909635660339126,no,0.012230603614138328,no,0.01188384434514247,no,0.011560588382330789
686,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// IDENTIFIER,no,undetermined,0,0,0,no,0.004166841352126509,no,0.0038987812269171552,no,0.003344149529616062,no,0.003351210279362512,no,0.00320304070714836
687,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// We call getKeyFromResultSet() here so that we can know the // key value upon which to perform the breaking logic.  However, // it is also then called from getRowFromResultSet() which is certainly // not the most efficient.  But the call here is needed, and there // currently is no other way without refactoring of the doQuery()/getRowFromResultSet() // methods",no,undetermined,0,0,0,yes,0.6773706011309149,yes,0.6865680132270514,yes,0.6572977853566385,yes,0.6480433105769113,yes,0.6584417891301054
688,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// VERSION,no,undetermined,0,0,0,no,0.011910573587157674,no,0.012883562595757223,no,0.01221584289132605,no,0.011857091959738915,no,0.011576783152881317
689,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//operations which cascade as far as the collection also cascade to collection elements,no,undetermined,0,0,0,no,0.003869363460475226,no,0.004180815186474171,no,0.004288847895885741,no,0.004144717643359593,no,0.003908075596819892
690,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//WHERE STRING,no,undetermined,0,0,0,no,0.0015605409668824205,no,0.0017184049189373873,no,0.001497161971896812,no,0.0014376953482598907,no,0.0013551656679011554
691,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The loop ensures atomicity of the // select + update even for no transaction // or read committed isolation level,no,undetermined,0,0,0,no,0.0029883032929206707,no,0.0024019037640467477,no,0.0021554761671511136,no,0.002145903697689642,no,0.0020363659893107115
692,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// SUBCLASS PROPERTY CLOSURE,no,undetermined,0,0,0,no,0.012895222703933928,no,0.0071437462626842115,no,0.0066834448460739125,no,0.006477091679398715,no,0.006269093976159145
693,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// in an effort to avoid concurrent-modification-exceptions (from // potential recursive calls back through here as a result of the // eventual call to PersistentCollection#endRead), we scan the // internal loadingCollections map for matches and store those matches // in a temp collection.  the temp collection is then used to ""drive"" // the #endRead processing.",no,undetermined,0,0,0,no,0.016967291267523322,no,0.012881297520465795,no,0.012212484916288107,no,0.011846065373383924,no,0.01157541640400975
694,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//before add :-),no,undetermined,0,0,0,no,0.00415481083007601,no,0.004498657312271504,no,0.004201071130841578,no,0.004124244715226038,no,0.0039567375399876545
695,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// the configured transaction-factory says it only supports // local callback mode, so no sense attempting to register a // JTA Synchronization",no,undetermined,0,0,0,no,0.02876002836241711,no,0.012928236306725831,no,0.012235309643080502,no,0.011865181932450406,no,0.01158952772769572
696,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Handle any filters applied to the class level,no,undetermined,0,0,0,no,0.006149059774012077,no,0.006248560730841975,no,0.005786129692204464,no,0.005695143223386423,no,0.005484717960794769
697,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// sybase driver (jConnect) throwing NPE here in certain // cases, but we'll just handle the general ""unexpected"" case",no,undetermined,0,0,0,no,0.06960856701335871,no,0.012893497512500716,no,0.012224742494934738,no,0.011858512636419396,no,0.011562155447744731
698,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// only one-to-one is lazy fetched,no,undetermined,0,0,0,no,0.0052052391906330505,no,0.004111734364408499,no,0.004231693729383987,no,0.004130782975384498,no,0.003981432911211407
699,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// replicate does cascade to uninitialized collections,no,undetermined,0,0,0,no,0.007982571406558074,no,0.01108258722129721,no,0.010169688948048339,no,0.00994649978397304,no,0.00970544852375985
700,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//note early exit here:,no,undetermined,0,0,0,no,0.019928937636397154,no,0.007902170724451063,no,0.008003235382137295,no,0.007739298768198372,no,0.0074417866289872596
701,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/**
	 * Translates an AST join type (i.e., the token type) into a JoinFragment.XXX join type.
	 *
	 * @param astJoinType The AST join type (from HqlSqlTokenTypes or SqlTokenTypes)
	 * @return a JoinFragment.XXX join type.
	 * @see JoinFragment
	 * @see SqlTokenTypes
	 */",no,undetermined,0,0,0,no,0.4529965159461676,no,0.2590365077105073,no,0.26010630125081663,no,0.250874464241452,no,0.25698162222426363
702,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// NOTE: this assumes something about how propertySelectFragment is implemented by the subclass!,no,undetermined,0,0,0,no,0.11410069737610942,no,0.07801312374763357,no,0.012230296308817933,no,0.01187295831343229,no,0.011598992986006995
703,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//deliberately ignore return value!,no,undetermined,0,0,0,no,0.00138723993975307,no,0.0018291288266365467,no,0.002023183436750538,no,0.0019770648368496817,no,0.001876095828451825
704,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//strip leading "", """,no,undetermined,0,0,0,no,0.003240844024954472,no,0.002159422151679637,no,0.0020067480555985536,no,0.001352339890392433,no,0.0012732330668222326
705,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if the metadata allowed proxy creation and caller did not request forceful eager loading, // generate a proxy",no,undetermined,0,0,0,no,0.008936181184874867,no,0.0055613252643085375,no,0.005181623361586564,no,0.005160594247969221,no,0.004973923515949755
706,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if there is no resulting row, return null",no,undetermined,0,0,0,no,0.005935965597712415,no,0.0037608780757371896,no,0.003695782255145495,no,0.0035653485564159024,no,0.003417572812858322
707,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If this from element is a collection and the path is a collection property (maxIndex, etc.) then // generate a sub-query.",no,undetermined,0,0,0,no,0.007659417592307333,no,0.00247926205511367,no,0.002272477613892134,no,0.002152612382466273,no,0.0020093517996267237
708,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//otherwise return the ""hydrated"" state (ie. associations are not resolved)",no,undetermined,0,0,0,no,0.0053125074342583066,no,0.003183367954784718,no,0.0030016979012466014,no,0.002965998683742024,no,0.0028397703425355886
709,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The name of the SQL function that transforms a string to lowercase,no,undetermined,0,0,0,no,0.02831382980849121,no,0.012906016389814905,no,0.012206985546230965,no,0.011864509472957243,no,0.011572376818212791
710,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//null owner ok??,no,undetermined,0,0,0,no,0.0006173776490871733,no,0.006264729569808974,no,0.006263660300826023,no,0.00618950429878662,no,0.0059956727407340805
711,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// essentially, if the real session is closed allow any // method call to pass through since the real session // will complain by throwing an appropriate exception; // NOTE that allowing close() above has the same basic effect, //   but we capture that there simply to perform the unbind...",no,undetermined,0,0,0,no,0.03729483678376929,no,0.012911113963467015,no,0.012244903601480499,no,0.011857373370298458,no,0.011589379515222112
712,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// automatically makes a column with the default name if none is specifed by XML,no,undetermined,0,0,0,no,0.0032237359427737954,no,0.0028958202739653746,no,0.002736193070404184,no,0.0027132554668500264,no,0.0025886125544932934
713,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// just ignore,no,undetermined,0,0,0,no,0.0005275908406801087,no,0.0007014783940073982,no,0.0006489824524626718,no,0.0006341086036385972,no,0.0005910307146343266
714,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this is the exception returned by ReflectHelper.getConstructor() if it cannot // locate an appropriate constructor,no,undetermined,0,0,0,no,0.0077393520107864,no,0.010056674807089522,no,0.009374411407793172,no,0.009307642028447496,no,0.009070848243034337
715,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// ok in normal Hibernate usage to delete a detached entity; JPA however // forbids it, thus this is a hook for HEM to affect this behavior",no,undetermined,0,0,0,no,0.004837451464320703,no,0.012914335588842243,no,0.01223212516991943,no,0.011856083531340746,no,0.011563108586898841
716,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// null sql means that the only lazy properties // are shared PK one-to-one associations which are // handled differently in the Type#nullSafeGet code...,no,undetermined,0,0,0,no,0.05033947565359712,no,0.012905242533705693,no,0.012239113757356885,no,0.011879950183258962,no,0.011580508412300735
717,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if the property mapping consists of all formulas,  // make it non-updateable",no,undetermined,0,0,0,no,0.0057350873959326545,no,0.009636972755350184,no,0.009159676604146162,no,0.009007250870155432,no,0.0087611302568209
718,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// the user specifically supplied insert=""true"", // which constitutes an illegal combo",no,undetermined,0,0,0,no,0.005823598172802273,no,0.006064250152333121,no,0.005705711334226713,no,0.005542195464013358,no,0.005350646939987344
719,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if the property mapping consists of all formulas,  // make it insertable",no,undetermined,0,0,0,no,0.010458922141094087,no,0.010879483164216122,no,0.010491885132404661,no,0.010290208837598527,no,0.010040673322267022
720,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//it might be an unwrapped collection reference! //try to find a wrapper (slowish),no,undetermined,0,0,0,no,0.004964634623790803,no,0.0030923635673089744,no,0.002875821451268143,no,0.002834003462160437,no,0.00266546803097948
721,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Custom SQL,no,undetermined,0,0,0,no,0.0027942478790320313,no,0.0017249793691298482,no,0.0016318827204243858,no,0.0016406657358396138,no,0.001550534934879737
722,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//tableName = mappings.getNamingStrategy().propertyToTableName( className, path );",no,undetermined,0,0,0,no,0.0034781212737753624,no,0.0062744633916007615,no,0.005869928650789311,no,0.005619627081881641,no,0.005418655178156084
723,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*package*/,no,undetermined,0,0,0,no,0.002544021585726736,no,0.002756752457787323,no,0.002600423329497448,no,0.0025611192192290452,no,0.0024390968529185387
724,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// return,no,undetermined,0,0,0,no,0.001057492383143947,no,0.0013316596324714771,no,0.0011460020169193198,no,0.0011158146727426985,no,0.0010482475536592862
725,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// the entry will be removed after the flush, and will no longer // override the stale snapshot // This is now handled by removeEntity() in EntityDeleteAction //persistenceContext.removeDatabaseSnapshot(key);",no,undetermined,0,0,0,no,0.003793371769429882,no,0.004433902483803227,no,0.003383573561782492,no,0.003112366845407983,no,0.002975305067575388
726,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//bad cast,no,undetermined,0,0,0,no,0.048912224112306155,no,0.012901353221321151,no,0.012243282090722177,no,0.011876857395568674,no,0.011593402186520746
727,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*ArrayList list = new ArrayList();
			list.addAll( getKey().getConstraintColumns() );
			list.addAll( getIndex().getConstraintColumns() );
			getCollectionTable().createUniqueKey(list);*/",no,undetermined,0,0,0,no,0.01730106304363291,no,0.01290857581192024,no,0.011650087736029935,no,0.011367389450303042,no,0.011083461792088247
728,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//property-refs for associations defined on a //component are not supported, so no need to slice",no,undetermined,0,0,0,no,0.04959035764825102,no,0.012906551679136758,no,0.012207207954467881,no,0.01187802113452645,no,0.01159467179186849
729,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we have an embedded composite identifier,no,undetermined,0,0,0,no,0.011547952489080134,no,0.0070022414648001725,no,0.006139990268700861,no,0.006114687092255838,no,0.005912644380247529
730,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if there is no property-ref, assume the join //is to the subclass table (ie. the table of the //subclass that the association belongs to)",no,undetermined,0,0,0,no,0.04377073487049355,no,0.012917523897431775,no,0.012227928208425089,no,0.011867832710851251,no,0.011577886117469577
731,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//stops flush being called multiple times if this method is recursively called,no,undetermined,0,0,0,no,0.06076152929407174,no,0.01290507687309644,no,0.012224685460099777,no,0.011872422096058821,no,0.011582734658570196
732,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Create a new FROM node for the referenced class.,no,undetermined,0,0,0,no,0.0042095906651167525,no,0.008593964853981928,no,0.0077637192468886194,no,0.007703478876314904,no,0.007456817595110483
733,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Custom sql,no,undetermined,0,0,0,no,0.0027942478790320313,no,0.0017249793691298482,no,0.0016318827204243858,no,0.0016406657358396138,no,0.001550534934879737
734,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// performance op to avoid the array search,no,undetermined,0,0,0,no,0.004969462890830493,no,0.007078799611304836,no,0.006010098333712315,no,0.005780193923179733,no,0.005570474183373183
735,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// now get an existing proxy for each row element (if there is one),no,undetermined,0,0,0,no,0.000674011250601464,no,0.00043963283476044953,no,0.00040918711053872513,no,0.0004051361237924751,no,0.00037532996707674587
736,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ORPHAN DELETE (used for programmer error detection),no,undetermined,0,0,0,no,0.04596458694644183,no,0.012918719584437782,no,0.012215420964703138,no,0.011862928946295141,no,0.0115844336776976
737,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// empty means no scoping,no,undetermined,0,0,0,no,0.0010392383011515345,no,0.0009769409932260812,no,0.000928902454281786,no,0.0009431253283250515,no,0.0008844150578981168
738,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//Enable for HHH-440, which we don't like:",no,undetermined,0,0,0,no,0.007239660424924821,no,0.011275889096623365,no,0.010597381525468793,no,0.00966876486939315,no,0.009385763228526797
739,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*(LockMode) anything*/,no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
740,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//this.forceCacheRefresh = forceCacheRefresh;,no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
741,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// this is a collection initializer, so we must create a collection // for each of the passed-in keys, to account for the possibility // that the collection is empty and has no rows in the result set",no,undetermined,0,0,0,no,0.014303733672172395,no,0.004847781714131383,no,0.004739876513987153,no,0.004367522789608296,no,0.0041013773629848356
742,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// an ""embedded"" component (composite ids and unique) // note that this does not handle nested components",no,undetermined,0,0,0,no,0.10787882377667815,no,0.12959213349388662,no,0.1302559108841169,no,0.12661695964032266,no,0.12820074688145677
743,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// and perform the load,no,undetermined,0,0,0,no,0.005331427439783075,no,0.0031772288883486883,no,0.002871607895371267,no,0.0027793201248425153,no,0.002587815898051902
744,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ALIASES,no,undetermined,0,0,0,no,0.003220365869967045,no,0.0027948169328205472,no,0.009098167451742852,no,0.009161667063965515,no,0.008895845414606555
745,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// cache these since they are stateless // this one could even be static...,no,undetermined,0,0,0,no,0.004542253922382151,no,0.005080309613802819,no,0.0048248860290702215,no,0.004744143091492334,no,0.004557551160294966
746,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// a nested composite element,no,undetermined,0,0,0,no,0.010261631467646797,no,0.007857133760218434,no,0.007019095290712359,no,0.0068860462284861725,no,0.00666869652423999
747,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is tuplizer-centric, but is passed a session ~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",no,undetermined,0,0,0,no,0.00478136803158064,no,0.0035379428669430964,no,0.0032992869181648716,no,0.0032781243688706687,no,0.0031298297838436608
748,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Must occur after resolving identifiers!,no,undetermined,0,0,0,no,0.004650795318429129,no,0.004730516302054172,no,0.004228953981480571,no,0.0041181290380925654,no,0.00395544628289376
749,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Get the persister for the _subclass_,no,undetermined,0,0,0,no,0.04287748062442215,no,0.010872552410230205,no,0.010378801592523662,no,0.010149944763018066,no,0.009910192205339683
750,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aliases for composite-id's,no,undetermined,0,0,0,no,0.014900785459745537,no,0.00913961723929605,no,0.0122406216737975,no,0.011858286611259502,no,0.011560338744709093
751,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//		SQLQueryParser parser = new SQLQueryParser( //				sqlQuery, //				processor.getAlias2Persister(), //				processor.getAlias2Return(), //				aliases, //				collAliases, //				collPersisters, //				suffixes, //				collSuffixes //		); // //		sql = parser.process(); // //		namedParameterBindPoints = parser.getNamedParameters();",no,undetermined,0,0,0,no,0.00796034728102341,no,0.006744423730578952,no,0.008492934224367164,no,0.008473261010498294,no,0.008217238511963973
752,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Fetch embedded identifiers propertynames from the ""virtual"" identifier component",no,undetermined,0,0,0,no,0.009081306768514612,no,0.005853777037960936,no,0.005170496534474995,no,0.005095176167572101,no,0.004907487400039964
753,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we need to grab the version value from the entity, otherwise // we have issues with generated-version entities that may have // multiple actions queued during the same flush",no,undetermined,0,0,0,no,0.057950227360123945,no,0.012908638788184115,no,0.012223289196343289,no,0.011842125797546019,no,0.011580792485205238
754,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// embedded composite ids ( alias.idname1, alias.idname2 )",no,undetermined,0,0,0,no,0.019143634344918337,no,0.012920645198795726,no,0.012233337206069074,no,0.011871936750163578,no,0.0115939146640189
755,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// NOTE: we need to do the wrap here even if its not ""dirty"", // because collections need wrapping but changes to _them_ // don't dirty the container. Also, for versioned data, we // need to wrap before calling searchForDirtyCollections",no,undetermined,0,0,0,no,0.1473705312460083,no,0.0953067499922446,no,0.012235626461321465,no,0.011850576111630078,no,0.011566811657759522
756,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// TODO: skip formulas?,no,undetermined,0,0,0,yes,0.9898479088596592,no,0.012923327209293478,no,0.012240677702049904,no,0.011867313003717978,no,0.011585533397314003
757,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// GUID support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.00930024899229407,no,0.010472140456306803,no,0.009849617366248797,no,0.009724922879081136,no,0.009440653254343432
758,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// invokeinterface // invoke Enabled.getInterceptFieldCallback(),no,undetermined,0,0,0,no,0.003580590093816136,no,0.0039895172479729995,no,0.0037203587898022705,no,0.003620115466297919,no,0.0034576354502338135
759,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// hibernate seems to ignore this type...,no,undetermined,0,0,0,no,0.0016001541921293466,no,0.006721544465488218,no,0.0064853044604594925,no,0.006323259797761963,no,0.006120329572287084
760,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//don't need filters for the static loaders,no,undetermined,0,0,0,no,0.024653298028715045,no,0.012919200605847296,no,0.012239532099963021,no,0.011882428067448419,no,0.011577911126564373
761,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// The user requested a ""greater"" (i.e. more restrictive) form of // pessimistic lock",no,undetermined,0,0,0,no,0.0019071756820763241,no,0.0023482692712355744,no,0.002272791142891659,no,0.0022294330107459214,no,0.002117472594379925
762,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//do two passes, for collection property-ref!",no,undetermined,0,0,0,no,0.021186990226584625,no,0.012912474310655061,no,0.012244171481313725,no,0.011844882058735596,no,0.011475448479142804
763,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*public boolean dropTemporaryTableAfterUse() {
		//we have to, because postgres sets current tx
		//to rollback only after a failed create table
		return true;
	}*/",no,undetermined,0,0,0,no,0.00944152243898137,no,0.007308514067279256,no,0.004887885282747567,no,0.0047449137373695265,no,0.004570208693430927
764,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// select the correct row by either pk or rowid,no,undetermined,0,0,0,no,0.026830036054071457,no,0.012915827115550992,no,0.012238760424646635,no,0.01185862648846614,no,0.011581534759607815
765,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//			optimizer = getFactory().getSettings().getBytecodeProvider().getReflectionOptimizer( //					mappedClass, getterNames, setterNames, propTypes //			);",no,undetermined,0,0,0,no,0.004742980399289951,no,0.005144618038151528,no,0.004831040616159839,no,0.004722825853118072,no,0.004537698436405277
766,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//TODO: eventually, rowIdName[j]",no,undetermined,0,0,0,yes,0.9910296505372687,no,0.012896490258952486,no,0.012235855186623684,no,0.011844240288159948,no,0.01157424447253261
767,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//include the discriminator and class-level where, but not filters",no,undetermined,0,0,0,no,0.006120451188855128,no,0.006278437855718775,no,0.005825249511811455,no,0.005564614815393458,no,0.005361157423157438
768,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//lazy = !join;,no,undetermined,0,0,0,no,0.009231326190143767,no,0.006786216366931169,no,0.0066338725863932186,no,0.006462160643130191,no,0.006270319284577683
769,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//not absolutely necessary, but helps for some //equals()/hashCode() implementations",no,undetermined,0,0,0,no,0.006426253792118911,no,0.012928163580013778,no,0.01221934515046979,no,0.011880743089273296,no,0.011574805126729985
770,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// this is a property of the table, which we are updating",no,undetermined,0,0,0,no,0.006079773079924348,no,0.0019030440386176844,no,0.0018216319777972065,no,0.0017830864930145436,no,0.00168812682710326
771,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if the hibernate-mapping did not specify a schema/catalog, use the defaults //specified by properties - but note that if the schema/catalog were specified //in hibernate-mapping, or as params, they will already be initialized and //will override the values set here (they are in identifierGeneratorProperties)",no,undetermined,0,0,0,no,0.013041083629880235,no,0.012888427857810176,no,0.012213002660702906,no,0.011843751790184818,no,0.011564737548566592
772,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This should only be possible if the caches are constructor injected ,no,undetermined,0,0,0,no,0.01236436885270546,no,0.010053074512589608,no,0.010167637946908097,no,0.010070849621323659,no,0.009814389842804356
773,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// transactions marked for rollback-only cause some TM impls to throw exceptions,no,undetermined,0,0,0,no,0.01673938465269849,no,0.012915833997627786,no,0.012219891040890964,no,0.011883832586217394,no,0.01159383689549518
774,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// special shortcut for id properties, skip the join! // this must only occur at the _end_ of a path expression",no,undetermined,0,0,0,no,0.008388847824903978,no,0.005962868875715882,no,0.005281032180621409,no,0.004892241432502994,no,0.004704945063411218
775,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// IMPL NOTE : due to the delayed population of setters (setters cached // 		for performance), we really cannot pro0perly define equality for // 		this transformer",no,undetermined,0,0,0,no,0.019837633175493277,no,0.012898601936187741,no,0.01221710640310295,no,0.011867338119243535,no,0.011572547785218958
776,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ( (Column) ( (SimpleValue) ic.getIndex() ).getColumnIterator().next() // ).setNullable(false);,no,undetermined,0,0,0,no,0.006956030006951995,no,0.005180830818370766,no,0.0045550526916192675,no,0.004509014040235291,no,0.0043296610596055
777,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we have a mapped identifier property and the root of // the incoming property path matched that identifier // property,no,undetermined,0,0,0,no,0.01022476853321284,no,0.011199433056268082,no,0.01077498987125332,no,0.010388453136967526,no,0.010136112508938314
778,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// contained elements:,no,undetermined,0,0,0,no,0.004874969525068628,no,0.005224226232487893,no,0.005078295057655248,no,0.004935692400919346,no,0.0047469426778941745
779,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//        },no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
780,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// for non-inverse one-to-many, with a not-null fk, add a backref!",no,undetermined,0,0,0,no,0.013525652831347748,no,0.007781693714501234,no,0.007275101188588036,no,0.007089547171195243,no,0.006847805605415611
781,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//to stop the class from being unloaded,no,undetermined,0,0,0,no,0.004998938501634934,no,0.007782979887360845,no,0.007250976061134457,no,0.007050769975944024,no,0.006822982772041999
782,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// mappings might contain either the ""raw"" extends name (in the case of // an entity-name mapping) or a FQN (in the case of a POJO mapping).",no,undetermined,0,0,0,no,0.00478705627716261,no,0.005227198511056618,no,0.004569016620285124,no,0.004458152843588066,no,0.004284424486347833
783,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// for objects that came in via update(),no,undetermined,0,0,0,no,0.0014203435819740932,no,0.0014868771847167843,no,0.0014843174712362405,no,0.0014574803908301707,no,0.0013749195385236873
784,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//use dialect default properties,no,undetermined,0,0,0,no,0.009776747767298852,no,0.012907110816774333,no,0.012207161557530002,no,0.011851948403115722,no,0.01156710941020119
785,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// increment the version number (if necessary),no,undetermined,0,0,0,no,0.018836932165821694,no,0.012905137386525023,no,0.01223200035368442,no,0.011863215289686141,no,0.011581140724079442
786,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The cache provider is needed when we either have second-level cache enabled // or query cache enabled.  Note that useSecondLevelCache is enabled by default,no,undetermined,0,0,0,no,0.010141335992250049,no,0.01288621556074599,no,0.012202650932391321,no,0.011872419301200102,no,0.01154031980506089
787,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//information about all properties in class hierarchy,no,undetermined,0,0,0,no,0.012991989808487842,no,0.009898947492232453,no,0.009288564086794966,no,0.009154883878053858,no,0.008894479568177611
788,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//		String provider = properties.getProperty( Environment.BYTECODE_PROVIDER ); //		log.info( ""Bytecode provider name : "" + provider ); //		BytecodeProvider bytecodeProvider = buildBytecodeProvider( provider ); //		settings.setBytecodeProvider( bytecodeProvider );",no,undetermined,0,0,0,no,0.006380121673368746,no,0.009249091152409655,no,0.008706966869105489,no,0.008749557864748332,no,0.008489296212237755
789,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0030712994090701133,no,0.004085227175471016,no,0.003956489644463506,no,0.003920814929143984,no,0.0037568455499780297
790,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we are using ""all"" or ""dirty"" property-based optimistic locking",no,undetermined,0,0,0,no,0.02970545672310479,no,0.012887556392547433,no,0.012206396337950032,no,0.011881763563339223,no,0.011584699532388172
791,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// orphans should be deleted during save/update,no,undetermined,0,0,0,no,0.0022694736799711472,no,0.008946067678462911,no,0.00845797759857791,no,0.008407722081944834,no,0.008160664543426673
792,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// maybe a concrete SQLpropertyresult type, but Map is exactly what is required at the moment",no,undetermined,0,0,0,no,0.20620922609601877,no,0.18183176831766712,no,0.1670008737914876,no,0.15636516968905123,no,0.1594300101734143
793,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// for some reason the antlr.CommonAST initialization routines force // this method to get called twice.  The first time with an empty string,no,undetermined,0,0,0,no,0.0022108505690224076,no,0.0034940827004466975,no,0.003235909847442676,no,0.0030284038204802417,no,0.0028900032761982777
794,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// do a check,no,undetermined,0,0,0,no,0.0029195894363013408,no,0.0031570311309228713,no,0.00011060219402354293,no,0.00010926912619454861,no,9.861283449749396e-05
795,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//			sqlAliasSuffixes[i] = element.getColumnAliasSuffix();,no,undetermined,0,0,0,no,0.0006413782815104335,no,0.0006772968770454983,no,0.0006234928044225432,no,0.0006263587807835928,no,0.0005819117629047104
796,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	void setShowSqlEnabled(boolean b) { //		showSql = b; //	} // //	void setFormatSqlEnabled(boolean b) { //		formatSql = b; //	},no,undetermined,0,0,0,no,0.00011508845949306601,no,0.0001266651528848426,no,0.00011326645727264485,no,0.00011412592706771972,no,0.00010322245342583874
797,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//materialize associations (and initialize the object) later,no,undetermined,0,0,0,no,0.007270563410208715,no,0.0069423441695519224,no,0.006568914932816067,no,0.006164006397508662,no,0.005977982972327658
798,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	private ComponentTuplizerFactory componentTuplizerFactory; todo : HHH-3517 and HHH-1907,no,undetermined,0,0,0,yes,0.6141605056211925,yes,0.7135431212031144,yes,0.7182087349062511,yes,0.7092085111145298,yes,0.7219988410726539
799,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//fetch=""join"" overrides default laziness //fetch=""join"" overrides default laziness",no,undetermined,0,0,0,no,0.007483800443763463,no,0.0029243328971574885,no,0.0028710336931059106,no,0.00281331499429611,no,0.0026829782215534344
800,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// drop them in reverse order in case db needs it done that way...,no,undetermined,0,0,0,no,0.047624744280800435,no,0.012896139235362578,no,0.012220479242891946,no,0.011840070821986595,no,0.011582368068372768
801,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// This check is needed since processing leaves the cursor // after the last physical row for the current logical row; // thus if we are after the last physical row, this might be // caused by either: //      1) scrolling to the last logical row //      2) scrolling past the last logical row // In the latter scenario, the previous logical row // really is the last logical row. // // In all other cases, we should process back two // logical records (the current logic row, plus the // previous logical row).",no,undetermined,0,0,0,no,0.00670502196780453,no,0.0046569190426145185,no,0.004642788596941554,no,0.004503117254220255,no,0.0043264942232284585
802,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// the owning entity may have been deleted and its identifier unset due to // identifier-rollback; in which case, try to look up its identifier from // the persistence context",no,undetermined,0,0,0,no,0.006410159013746693,no,0.007073363044842653,no,0.005192543855160402,no,0.005063212927234014,no,0.004872433103683919
803,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// build an array with indices equal to the total number // of actual returns in the result Hibernate will return // for this query (scalars + non-scalars),no,undetermined,0,0,0,no,0.006130232402055676,no,0.009135025002019058,no,0.009155576687335343,no,0.008992394114705454,no,0.008751423939245622
804,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	public ComponentTuplizerFactory getComponentTuplizerFactory() { //		return componentTuplizerFactory; //	},no,undetermined,0,0,0,no,0.008411668112222263,no,0.007460577323323775,no,0.007052022516297924,no,0.006804267011987888,no,0.006576466446010007
805,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Mckoi has no known variation of a ""SELECT ... FOR UPDATE"" syntax...",no,undetermined,0,0,0,no,0.0045161569558457995,no,0.006842541364596364,no,0.006386033794622738,no,0.006159889323468621,no,0.005948048641947167
806,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// it is or was referenced _somewhere_,no,undetermined,0,0,0,no,0.001855597890973046,no,0.004329629166396331,no,0.003896240676671108,no,0.0038360652523449115,no,0.00366644355220091
807,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// should be ok performance-wise to generate new delegate instances for each // request since these are locally stack-scoped.  Besides, it makes the code // much easier to read than the old TransactionHelper stuff...",no,undetermined,0,0,0,no,0.03852609298014548,no,0.01291075237565777,no,0.012222647075993126,no,0.011857325765181817,no,0.011560992761507079
808,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// nothing to do; even if the operand is a parameter, no way we could // infer an appropriate expected type here",no,undetermined,0,0,0,no,0.13925503824892607,no,0.1427970649136383,no,0.13879143420050824,no,0.1347289639128648,no,0.13675092635687602
809,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the root of the incoming property path matched one // of the embedded composite identifier properties,no,undetermined,0,0,0,no,0.00889515038115746,no,0.010110874429331174,no,0.00928064780109321,no,0.008867697101280608,no,0.008633874856251148
810,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// add normal properties,no,undetermined,0,0,0,no,0.0025146945869958283,no,0.0027558738684901867,no,0.002574627306260543,no,0.002360824572652292,no,0.00224391614427156
811,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.008960595193985269,no,0.012904540997522107,no,0.012205437760713915,no,0.011881915225832998,no,0.0115938378772965
812,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// add the discriminator,no,undetermined,0,0,0,no,0.004778410593941942,no,0.005564148197272389,no,0.00519270401229248,no,0.0050794500662938846,no,0.004887019094435384
813,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// handles arrays and newly instantiated collections,no,undetermined,0,0,0,no,0.0023300605196460845,no,0.0010535080652134628,no,0.0010451142549547626,no,0.0009392150953093461,no,0.0008787813522080456
814,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if either its role changed,",no,undetermined,0,0,0,no,0.00572508541291294,no,0.005228280420220551,no,0.0036833023450377543,no,0.0036788872553752674,no,0.0035358764918223054
815,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//noncritical, swallow and let the other propagate!",no,undetermined,0,0,0,no,0.0017926936505383107,no,0.0017795294458860746,no,0.0017033755704833403,no,0.0016799949174540257,no,0.001590691911350909
816,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we will need to create new entries,no,undetermined,0,0,0,no,0.007830940242206283,no,0.012456844976878144,no,0.011534841072324354,no,0.011191259874459937,no,0.010908454738264442
817,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this piece is needed for usage in select clause,no,undetermined,0,0,0,no,0.011250955576709666,no,0.00819275349219385,no,0.007455402471996408,no,0.007175346774959898,no,0.006929199213273075
818,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// no-op. We don't own the cache so we shouldn't stop it.,no,undetermined,0,0,0,no,0.009191367794920437,no,0.009714875614548757,no,0.009286989358240206,no,0.008354312590146344,no,0.00809016899899453
819,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// key is an entity involved with the operation performed by the listener; // value can be either a copy of the entity or the entity itself,no,undetermined,0,0,0,no,0.0028934586508555116,no,0.0036801868434369516,no,0.003025029258608437,no,0.0029039388428523986,no,0.00277353791086877
820,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Get the names of the columns used to link between the collection // owner and the collection elements.,no,undetermined,0,0,0,no,0.00952087512367118,no,0.012914068709802029,no,0.01222780997608759,no,0.011881859271422015,no,0.011577133745152431
821,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//let's assume that there is only one lazy fetch group, for now!",no,undetermined,0,0,0,no,0.013276113592517033,no,0.00850013716601623,no,0.008068565899002903,no,0.007923844971789216,no,0.007693167836119426
822,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// more specifically : ""? [op] datetime"" //      1) if the operator is MINUS, the param needs to be of //          some datetime type //      2) if the operator is PLUS, the param needs to be of //          some numeric type",no,undetermined,0,0,0,no,0.12025403838109912,no,0.021215782606876444,no,0.01221275135398871,no,0.011843800940613785,no,0.01157199068099207
823,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// don't even bother trying to read any further,no,undetermined,0,0,0,no,0.014016112629209154,no,0.006697216165605461,no,0.00651438423122875,no,0.006267907112126949,no,0.006042978053204835
824,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// add normal properties,no,undetermined,0,0,0,no,0.0025146945869958283,no,0.0027558738684901867,no,0.002574627306260543,no,0.002360824572652292,no,0.00224391614427156
825,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// prepend value and type list with null for any positions before the wanted position.,no,undetermined,0,0,0,no,0.013286509024752771,no,0.012921049017889477,no,0.012242064861889246,no,0.010447308741876743,no,0.010175461919697724
826,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//+ ""_"" + referencedColumnName not used for backward compatibility",no,undetermined,0,0,0,no,0.022747801320701328,no,0.012901777340221922,no,0.012250550934823908,no,0.01187135686842872,no,0.011588094963299671
827,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// static helper methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0026547753953473285,no,0.002603358232167129,no,0.0023253359164668156,no,0.0023027283670324986,no,0.002188920524848318
828,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// add the discriminator,no,undetermined,0,0,0,no,0.004778410593941942,no,0.005564148197272389,no,0.00519270401229248,no,0.0050794500662938846,no,0.004887019094435384
829,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Base Expectation impls ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0021816687609099933,no,0.004646732703105608,no,0.004587716204028332,no,0.004467492331529788,no,0.0042849769558816544
830,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this property belongs on the table and is to be inserted,no,undetermined,0,0,0,no,0.06338433413012746,no,0.012898085331892092,no,0.012212209769132386,no,0.011857486354675092,no,0.011576398751953853
831,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// need to extract the component values and check for subtype replacements...,no,undetermined,0,0,0,no,0.020600089204838225,no,0.012890201615457874,no,0.012223707161879755,no,0.011877385514201108,no,0.01157886587110116
832,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// add the primary key,no,undetermined,0,0,0,no,0.005551162390590374,no,0.005064109605653748,no,0.004736221255673484,no,0.004609727203943213,no,0.004429698228980832
833,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// note that for sequential scrolling, we make the assumption that // the first persister element is the ""root entity""",no,undetermined,0,0,0,no,0.08751803034356977,no,0.01290998035348893,no,0.01222061355203516,no,0.01184926977720772,no,0.011568995209696278
834,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Impl Note: allows multiple collection fetches as long as the // entire fecthed graph still ""points back"" to a single // root entity for return",no,undetermined,0,0,0,no,0.11720823068187655,no,0.10089514107211299,no,0.09243506787537431,no,0.011878107406866898,no,0.011573560691601452
835,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//		registerColumnType( Types.BLOB, 16777215, ""mediumblob"" ); //		registerColumnType( Types.BLOB, 65535, ""blob"" );",no,undetermined,0,0,0,no,0.0029361917223311735,no,0.012409374949727414,no,0.01220449626683603,no,0.011880532060310972,no,0.011576885605592195
836,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// delegate already handles PK columns,no,undetermined,0,0,0,no,0.00030782714403817493,no,0.0004059216000797437,no,0.00040033012334307134,no,0.0003969689731905813,no,0.0003652828791590205
837,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// properties of this class, including inherited properties",no,undetermined,0,0,0,no,0.006339607611528591,no,0.004198768075908945,no,0.003931714557631447,no,0.003882334873741184,no,0.0037219969913845808
838,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//ie. e.status==DELETED,no,undetermined,0,0,0,no,0.007458243146209248,no,0.012908596746207854,no,0.012244969263182413,no,0.011852414832608562,no,0.011559860142759225
839,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// kept for backward compatibility until after the 3.1beta5 release of HA,no,undetermined,0,0,0,no,0.012434957680879601,no,0.012925302144013056,no,0.012244844868857215,no,0.011865281856218995,no,0.011590617883256623
840,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// legacy behavior, apply the bridge...",no,undetermined,0,0,0,no,0.014150581191836757,no,0.012918307728753199,no,0.012218062183639277,no,0.011857190134299098,no,0.011560378778392753
841,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if an exception occurs during flush, user must call rollback()",no,undetermined,0,0,0,no,0.005223226581596062,no,0.0037977653510016286,no,0.0016659910420867487,no,0.0016508334686839146,no,0.0015589651232482415
842,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Turn off includeSubclasses on all FromElements.,no,undetermined,0,0,0,no,0.0070158253923233395,no,0.012916088202946716,no,0.01222535827374436,no,0.011874285377665926,no,0.01157566178714346
843,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// can't just return null here, since that would // cause an owning component to become null",no,undetermined,0,0,0,no,0.01994200128996382,no,0.012928403835219912,no,0.01222794522511459,no,0.011882486565622076,no,0.01156051876469978
844,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the object is transient or detached,no,undetermined,0,0,0,no,0.015581403213694145,no,0.011799105471283204,no,0.011270406726101797,no,0.01137438686893286,no,0.011077746153439353
845,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Now update only the tables with dirty properties (and the table with the version number),no,undetermined,0,0,0,no,0.017205026346603505,no,0.012900197898201423,no,0.011708660333105686,no,0.011401500642004578,no,0.01112692040230106
846,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Render the SQL query,no,undetermined,0,0,0,no,0.00920821087034305,no,0.007300132539978151,no,0.007192353014206853,no,0.0068360802315511095,no,0.006601855723314022
847,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// We must return a valid RDMS/RSA command from this method to // prevent RDMS/RSA from issuing *ERROR 400,no,undetermined,0,0,0,no,0.023028110822782975,no,0.01290342741623058,no,0.01221480909896703,no,0.011843864169881754,no,0.011596259122593919
848,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Write the values of fields onto the prepared statement - we MUST use the state at the time the // insert was issued (cos of foreign key constraints). Not necessarily the object's current state,no,undetermined,0,0,0,no,0.000522006244629527,no,0.0009523479576893348,no,0.0009098784393471186,no,0.0009003914163066819,no,0.0008412504750180891
849,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// registerColumnType(Types.VARBINARY, ""CHARACTER($l)""); // registerColumnType(Types.BLOB, ""CHARACTER($l)"" );  // For use prior to CP 11.0 // registerColumnType(Types.CLOB, ""CHARACTER($l)"" );",no,undetermined,0,0,0,no,0.0036997858891672348,no,0.012904346997900381,no,0.01223571547673426,no,0.011847562284218002,no,0.011563584233984148
850,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// TODO : shouldnt inserts be Expectations.NONE?,no,undetermined,0,0,0,yes,0.9284950481042034,no,0.01290687153756082,no,0.012250621886848475,no,0.011875075406697326,no,0.011579008255329261
851,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//a proxy cannot be transient and it breaks ForeignKeys.isTransient,no,undetermined,0,0,0,no,0.018540589559782467,no,0.012909750094140129,no,0.012251180710580721,no,0.01188670901290153,no,0.011592997454131362
852,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//don't bother trying to update, we know there is no row there yet",no,undetermined,0,0,0,no,0.08710510955184525,no,0.012885332771771927,no,0.012245244130260258,no,0.011868057731998723,no,0.011558136347688656
853,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This is the root level node. // Generate an explicit from clause at the root.,no,undetermined,0,0,0,no,0.006620939416952625,no,0.005717000874692276,no,0.005386460601651083,no,0.00506986270552836,no,0.00487938515095954
854,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// CHECK,no,undetermined,0,0,0,no,0.0029195894363013408,no,0.0031570311309228713,no,0.00011060219402354293,no,0.00010926912619454861,no,9.861283449749396e-05
855,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// actual cache of the entries.  soft references are used for both the keys and the // values here since the values pertaining to the MRU entries are kept in a // seperate hard reference cache (to avoid their enqueuement/garbage-collection).,no,undetermined,0,0,0,no,0.0149566732007501,no,0.012883532128904534,no,0.012238072047040001,no,0.011869787526091857,no,0.011554219389680511
856,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if all fields are null, we might need to delete existing row",no,undetermined,0,0,0,no,0.008394359905508963,no,0.006427123461184971,no,0.0059547597084274925,no,0.005821842856697756,no,0.005632564285221088
857,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//stops flush being called multiple times if this method is recursively called,no,undetermined,0,0,0,no,0.06076152929407174,no,0.01290507687309644,no,0.012224685460099777,no,0.011872422096058821,no,0.011582734658570196
858,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//note: updates to joined tables can't be batched...,no,undetermined,0,0,0,no,0.022173397444068467,no,0.012910145404605706,no,0.012234773086600065,no,0.011884762800403353,no,0.011586833096671828
859,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// String Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0033429921984356754,no,0.0029570368522340573,no,0.002795910709500897,no,0.002689109812109436,no,0.002558004470658511
860,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// starting index,no,undetermined,0,0,0,no,0.0035103384477036884,no,0.008217959550267388,no,0.007840394997565458,no,0.00760197339950124,no,0.007353157842951345
861,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// object have been loaded with setReadOnly(true); HHH-2236,no,undetermined,0,0,0,no,0.01574823069858963,no,0.012922629122877215,no,0.01223298614837695,no,0.01187013877225885,no,0.01158634384414032
862,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/**
	 * Build a ResultSetMappingDefinition given a containing element for the ""return-XXX"" elements
	 *
	 * @param resultSetElem The element containing the return definitions.
	 * @param path No clue...
	 * @param mappings The current processing state.
	 * @return The description of the mappings...
	 */",no,undetermined,0,0,0,no,0.3579749019360947,no,0.34354593444662224,no,0.3317803415313784,no,0.31964748749903593,no,0.3314512990760889
863,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	private List collectionOwnerAliases = new ArrayList(); //	private List collectionAliases = new ArrayList(); //	private List collectionPersisters = new ArrayList(); //	private List collectionResults = new ArrayList();,no,undetermined,0,0,0,no,0.015224832535325524,no,0.01163516545349934,no,0.010056411463390261,no,0.009751191353420506,no,0.009479142819144986
864,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Write any appropriate versioning conditional parameters,no,undetermined,0,0,0,no,0.025364002020318906,no,0.012917259476091373,no,0.012233594108801643,no,0.011862346771598288,no,0.011593684975734635
865,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//check if the detached object being merged is the parent,no,undetermined,0,0,0,no,0.005849825671074861,no,0.008398945118040147,no,0.008146307948706454,no,0.008058244071017961,no,0.00781579946311586
866,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Render the SQL query,no,undetermined,0,0,0,no,0.00920821087034305,no,0.007300132539978151,no,0.007192353014206853,no,0.0068360802315511095,no,0.006601855723314022
867,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// determine if the collection elements are entities...,no,undetermined,0,0,0,no,0.016728020445384982,no,0.012899290362586536,no,0.012201975203179444,no,0.011842294956304466,no,0.011588815414043647
868,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Do the key. The key is immutable so we can use the _current_ object state - not necessarily // the state at the time the delete was issued,no,undetermined,0,0,0,no,0.0047739617401617715,no,0.004326335038955629,no,0.004284008024334668,no,0.004091155221837169,no,0.003918129238005608
869,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Let return-propertys override whatever the persister has for aliases.,no,undetermined,0,0,0,no,0.009975615485728328,no,0.00418679089757948,no,0.007288410577581277,no,0.007240657606965173,no,0.007022845692982128
870,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// We should use the _current_ object state (ie. after any updates that occurred during flush),no,undetermined,0,0,0,no,0.012504879505930395,no,0.00781100990520837,no,0.005526419980344087,no,0.005396545282466572,no,0.0051869106223895985
871,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// might need to run a different filter entirely after the flush // because the collection role may have changed,no,undetermined,0,0,0,no,0.1567214011275916,no,0.09315892898620559,no,0.012206405720444027,no,0.011847443941223047,no,0.01154974016026667
872,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// amazingly, these two will work because AbstractCollection // uses iterator() to fill the array",no,undetermined,0,0,0,no,0.18025813861641946,no,0.084805545587093,no,0.012221592225959048,no,0.01184190371362265,no,0.011554424524000137
873,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// can't cache this stuff either (per-invocation) // we are given a map of user-alias -> lock mode // create a new map of sql-alias -> lock mode,no,undetermined,0,0,0,no,0.025592642384919616,no,0.012902854949837986,no,0.012228407786360283,no,0.011881581291474238,no,0.01156793465731974
874,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//note: dirtyFields==null means we had no snapshot, and we couldn't get one using select-before-update //	  oldFields==null just means we had no snapshot to begin with (we might have used select-before-update to get the dirtyFields)",no,undetermined,0,0,0,no,0.0072492263301538054,no,0.012913431657325098,no,0.012233178941204997,no,0.011845001932504788,no,0.011586555054622728
875,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// loop through all the associations of the current entity and make sure that they are processed // before the current batch number,no,undetermined,0,0,0,no,0.007461993313449639,no,0.007584345412912403,no,0.007089376213946395,no,0.006826496270177818,no,0.006607150474381155
876,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ParameterContainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.006562256669935704,no,0.006959610490900894,no,0.006641824253982197,no,0.005272146940800083,no,0.0051040069329332145
877,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.07099290193948361,no,0.01289104081641565,no,0.01220122216293205,no,0.011866857127213156,no,0.011587871478232894
878,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// note that if we load this collection from a cartesian product // the multiplicity would be broken ... so use an idbag instead,no,undetermined,0,0,0,no,0.10292661027605748,no,0.1068273102708207,no,0.10090092501280733,no,0.0952203713323379,no,0.011597736543979702
879,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* COLUMN and TABLE should be renamed but it would break the public API */,no,undetermined,0,0,0,no,0.07192144819858703,no,0.012920394357981677,no,0.012206563358289069,no,0.011857093479947163,no,0.01158920586061648
880,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// For many-to-many joins, use the tablename from the queryable collection for the default text.",no,undetermined,0,0,0,no,0.006810247787855132,no,0.012901065336983882,no,0.012244056714584475,no,0.011884433072069734,no,0.011597378476172912
881,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//int result = 17; //result = 37 * result + type.hashCode(); //result = 37 * result + ( value==null ? 0 : value.hashCode() ); //return result;,no,undetermined,0,0,0,no,0.0050334230894035666,no,0.004098623590577504,no,0.005488530423735471,no,0.0053812458791032145,no,0.00518331949881891
882,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// For the case of dynamic-update=""true"", we need to generate the UPDATE SQL",no,undetermined,0,0,0,no,0.01324381538159582,no,0.012923263195792439,no,0.012232789844355116,no,0.011857542839502876,no,0.011556117472321817
883,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// merge() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.007934298286629709,no,0.012896578342840758,no,0.012224823473026445,no,0.011857108877005687,no,0.011578544753742844
884,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Default to collections sharing entity cache if there is one,no,undetermined,0,0,0,no,0.007143426292309476,no,0.005182014226659535,no,0.0043809149866104674,no,0.004209676660917249,no,0.0040437628447481805
885,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// --Commented out by Inspection (12/4/04 9:10 AM): public abstract void addCondition(String alias, String[] columns, String condition);",no,undetermined,0,0,0,no,0.004517940036170797,no,0.008256522728973585,no,0.007741866049522514,no,0.007533779776359323,no,0.007304698735283729
886,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// don't need to check laziness (dirty checking algorithm handles that),no,undetermined,0,0,0,no,0.09376083761029232,no,0.01291640005110961,no,0.01223097002072773,no,0.011860253031098859,no,0.011573358683589953
887,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*rootTableName = persistentClass.getRootTable().getQualifiedName( 
				factory.getDialect(), 
				factory.getDefaultCatalog(), 
				factory.getDefaultSchema() 
		);*/",no,undetermined,0,0,0,no,0.008294774317118078,no,0.007731419653469397,no,0.007315462687467173,no,0.00716000579405649,no,0.006926487943643441
888,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// For the case of dynamic-update=""false"", or no snapshot, we use the static SQL",no,undetermined,0,0,0,no,0.004593464597278878,no,0.007475981891447136,no,0.006863978494883088,no,0.006872580424882041,no,0.006630162534378886
889,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//abort the save (the object is already saved by a circular cascade),no,undetermined,0,0,0,no,0.007189833529714941,no,0.009044227903921821,no,0.008986461013694403,no,0.008827326583836096,no,0.008570990200888655
890,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if not ""get"", then try ""is""",no,undetermined,0,0,0,no,0.0017231747881278632,no,0.0016808370437699813,no,0.0015626231426394404,no,0.001611115441390362,no,0.001527896115222243
891,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// remove initial "" and """,no,undetermined,0,0,0,no,0.00018795168444234354,no,0.00022644907483344086,no,0.00018207070504325465,no,0.00018241860622662242,no,0.0001658015477899422
892,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Default to sharing the entity cache if there is one,no,undetermined,0,0,0,no,0.0058050727953562415,no,0.005815200743060076,no,0.0050102666266827744,no,0.004793194091520827,no,0.00461444213754769
893,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we have the form: trim(trimSource) //      so we trim leading and trailing spaces,no,undetermined,0,0,0,no,0.009979754870108224,no,0.012896492690320753,no,0.012240688359274896,no,0.011869237411036083,no,0.011567473091817172
894,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// For the case of dynamic-insert=""true"", we need to generate the INSERT SQL",no,undetermined,0,0,0,no,0.0074635221096075125,no,0.008115858054771797,no,0.007394563226617203,no,0.007412053550579682,no,0.007183532200785295
895,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if it was a reference to self, don't need to nullify // unless we are using native id generation, in which // case we definitely need to nullify",no,undetermined,0,0,0,no,0.05126943315851548,no,0.012889979740599302,no,0.012215457136794748,no,0.011848875714151453,no,0.011570033860375663
896,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// For the case of dynamic-insert=""true"", we need to generate the INSERT SQL",no,undetermined,0,0,0,no,0.0074635221096075125,no,0.008115858054771797,no,0.007394563226617203,no,0.007412053550579682,no,0.007183532200785295
897,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//the user visible aliases, which are unknown to the superclass, //these are not the actual ""physical"" SQL aliases",no,undetermined,0,0,0,no,0.0022152789618459477,no,0.001677037989599406,no,0.0035029679815252518,no,0.0035636394569326852,no,0.003406208347659662
898,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// For the case of dynamic-insert=""false"", use the static SQL",no,undetermined,0,0,0,no,0.004590492717297459,no,0.005552494161672196,no,0.005095244736307709,no,0.005192572562503689,no,0.0049800457525007395
899,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if a composite key, use ""( (foo = ? and bar = ?) or (foo = ? and bar = ?) )"" for batching //TODO: unnecessary for databases with ANSI-style joins",no,undetermined,0,0,0,no,0.3630817668096632,no,0.38092957921418513,no,0.3553039779597598,no,0.34740075915877183,no,0.3561165178932442
900,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// For the case of dynamic-insert=""false"", use the static SQL",no,undetermined,0,0,0,no,0.004590492717297459,no,0.005552494161672196,no,0.005095244736307709,no,0.005192572562503689,no,0.0049800457525007395
901,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the class hierarchy structure,no,undetermined,0,0,0,no,0.015492205692257656,no,0.012917313968489469,no,0.012228129101370592,no,0.011872794296637868,no,0.01159249593805748
902,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//a shortcut if its location didn't change!,no,undetermined,0,0,0,no,0.013361200946013061,no,0.012880794009737266,no,0.012216830456623846,no,0.011864787416476235,no,0.01156606302653646
903,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//swaldman 2006-08-28: define c3p0-style configuration parameters for properties with //                     hibernate-specific overrides to detect and warn about conflicting //                     declarations,no,undetermined,0,0,0,no,0.04259907257731774,no,0.012905899878802935,no,0.012221962738353432,no,0.011843792158268874,no,0.011594418132303583
904,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// not supported,no,undetermined,0,0,0,no,0.011518138690434061,no,0.012509536245112512,no,0.011566117777857411,no,0.01115812250164225,no,0.010872083344657928
905,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Need to use the identifier type of the collection owner // since the incoming is value is actually the owner's id. // Using the collection's key type causes problems with // property-ref keys...,no,undetermined,0,0,0,no,0.1402471856621258,no,0.15249307722025865,no,0.1406929439027032,no,0.13811309985660875,no,0.1388342174002751
906,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if we instantiate a collection during the flush() process, // we must ignore it for the rest of the flush()",no,undetermined,0,0,0,no,0.0071080466870617155,no,0.0036743143215732595,no,0.001903509503154234,no,0.0018722182457872741,no,0.0017509918823829258
907,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// moved up from AbstractEntityPersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.15181587903365107,no,0.14188126989020186,no,0.1376665614723084,no,0.1357561079356872,no,0.13771021104037778
908,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// new collections that get found + wrapped // during flush shouldn't be ignored,no,undetermined,0,0,0,no,0.0789679409569951,no,0.012891894527371115,no,0.012231219562227886,no,0.011874387005808772,no,0.011594350534105484
909,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// meant to handle dynamic instantiation queries...,no,undetermined,0,0,0,no,0.004426748321646388,no,0.012879534400364457,no,0.01223031828114827,no,0.011857278199467608,no,0.011587341261918786
910,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//a newly wrapped collection is NOT dirty (or we get unnecessary version updates),no,undetermined,0,0,0,no,0.0734043010006582,no,0.012902025842047315,no,0.012214514021102971,no,0.011853786824095722,no,0.011565673829712655
911,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// local cache, so we use synchronization",no,undetermined,0,0,0,no,0.007282751878040864,no,0.009916451683979581,no,0.009350097173737961,no,0.009260429019660803,no,0.008966570025754645
912,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Always add the collection's query spaces.,no,undetermined,0,0,0,no,0.01678993833897982,no,0.009138179356428452,no,0.00880780402824468,no,0.008254582115913827,no,0.007877754974684119
913,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//the BLOB type requires a size arguement - this defaults to //bytes - no arg defaults to 1 whole byte! //other argument mods include K - kilobyte, M - megabyte, G - gigabyte. //refer to the PBdevelopers guide for more info.",no,undetermined,0,0,0,no,0.00837244184593037,no,0.012891150849960654,no,0.01224655151405074,no,0.01186427575218642,no,0.011594140517391788
914,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// detached collections that get found + reattached // during flush shouldn't be ignored,no,undetermined,0,0,0,no,0.02636018405778177,no,0.009757140710648355,no,0.007584599912693156,no,0.007554839012788435,no,0.007315149164266142
915,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// revert to traditional hibernate behavior of setting initialPoolSize to minPoolSize // unless otherwise specified with a c3p0.*-style parameter.,no,undetermined,0,0,0,no,0.004238332747991836,no,0.010050736027672515,no,0.009830390882962186,no,0.00969150876894841,no,0.00943102453392174
916,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we need to utilize dynamic delete statements,no,undetermined,0,0,0,no,0.020049943934438565,no,0.012896129621831072,no,0.012244477975175385,no,0.011857036016478726,no,0.01155663216275523
917,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//columns.add(columnName); //aliases.add(tableAlias);,no,undetermined,0,0,0,no,0.001112849976585334,no,0.0025325640729757497,no,0.004550217370771954,no,0.004518316228943123,no,0.004338458416501951
918,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// otherwise, utilize the static delete statements",no,undetermined,0,0,0,no,0.00770973169590815,no,0.007488778686003427,no,0.007136138732220279,no,0.007042572489491959,no,0.006814650736201521
919,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// intentionally empty,no,undetermined,0,0,0,no,0.006952547877549867,no,0.008046386937544878,no,0.007800606743259962,no,0.008378318925596656,no,0.008145731067491674
920,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*public boolean equals(Object other) {
		read();
		return bag.equals(other);
	}

	public int hashCode(Object other) {
		read();
		return bag.hashCode();
	}*/",no,undetermined,0,0,0,no,0.006536992380443446,no,0.012915036700120308,no,0.01220619941849032,no,0.011873490190572872,no,0.011563882163446606
921,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//final boolean forceCacheRefresh,",no,undetermined,0,0,0,no,0.00011919175992967231,no,0.00022393843596094258,no,0.00020131506979420596,no,0.0001988765816702425,no,0.00018144092422210458
922,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//just a performance opt!,no,undetermined,0,0,0,no,0.028618297304467653,no,0.012912878767975491,no,0.012226478406413967,no,0.011864310249055479,no,0.011563118500813553
923,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Essentially: // 1) If we have a local (Hibernate) transaction in progress //      and it already has the UserTransaction cached, use that //      UserTransaction to determine the status. // 2) If a transaction manager has been located, use //      that transaction manager to determine the status. // 3) Finally, as the last resort, try to lookup the //      UserTransaction via JNDI and use that to determine the //      status.",no,undetermined,0,0,0,no,0.011518608827986514,no,0.008415379148846667,no,0.006530512987645351,no,0.006673573775855309,no,0.00644741678622202
924,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//just a performance opt!,no,undetermined,0,0,0,no,0.028618297304467653,no,0.012912878767975491,no,0.012226478406413967,no,0.011864310249055479,no,0.011563118500813553
925,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// used to set the type of the parent dot node,no,undetermined,0,0,0,no,0.020431465028030702,no,0.012898733318553922,no,0.012236351607627757,no,0.01187690606254994,no,0.01158262862265749
926,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//all joins join to the pk of the driving table,no,undetermined,0,0,0,no,0.0035990986933835253,no,0.001893179399594083,no,0.001789919581698654,no,0.001767231954268852,no,0.0016738629948970976
927,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// more specifically : ""datetime [op] ?"" //      1) if the operator is MINUS, we really cannot determine //          the expected type as either another datetime or //          numeric would be valid //      2) if the operator is PLUS, the param needs to be of //          some numeric type",no,undetermined,0,0,0,no,0.08824076827237008,no,0.012884646894594403,no,0.012225382867682695,no,0.011883681890570081,no,0.011588531583878627
928,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//notice that we skip the first table; it is the driving table!,no,undetermined,0,0,0,no,0.004007577839711868,no,0.0009255305430876297,no,0.0008596249437650709,no,0.0008484691358447843,no,0.0007926383950378646
929,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aliases named identifier ( alias.idname ),no,undetermined,0,0,0,no,0.014184254687376973,no,0.009689635488091224,no,0.012210759438851597,no,0.011847827154064003,no,0.01157834650931074
930,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//skip the driving table,no,undetermined,0,0,0,no,0.0029956265670565245,no,0.00043792353958720787,no,0.000392429622403734,no,0.000390701957374695,no,0.00036066675494658446
931,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// inserts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.002489875306395668,no,0.00011076007966116386,no,9.958847980071193e-05,no,9.879541734183387e-05,no,8.895085735075008e-05
932,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//get 'em in the right order (not that it really matters),no,undetermined,0,0,0,no,0.05534711557627064,no,0.012906307997650177,no,0.012197475389559752,no,0.011858976640700831,no,0.011566760950290831
933,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*package*/,no,undetermined,0,0,0,no,0.002544021585726736,no,0.002756752457787323,no,0.002600423329497448,no,0.0025611192192290452,no,0.0024390968529185387
934,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//NOTE EARLY EXIT!,no,undetermined,0,0,0,no,0.019928937636397154,no,0.007902170724451063,no,0.008003235382137295,no,0.007739298768198372,no,0.0074417866289872596
935,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
936,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// trying via forName() first to be as close to DriverManager's semantics,no,undetermined,0,0,0,no,0.005369582057250249,no,0.0019618287392577454,no,0.002029767762497198,no,0.0020124798437113852,no,0.0019049983511356713
937,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//this bit is only *really* absolutely necessary for handling //requestedId, but is also good if we merge multiple object //graphs, since it helps ensure uniqueness",no,undetermined,0,0,0,no,0.13707168096359912,yes,0.577226753356297,yes,0.5800297634567233,yes,0.5647106273079523,yes,0.5776506378144083
938,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	private boolean showSql; //	private boolean formatSql;,no,undetermined,0,0,0,no,7.077730019610105e-05,no,6.973149438142866e-05,no,6.25160227585475e-05,no,6.223891651187844e-05,no,5.569262284558636e-05
939,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// in case we were deserialized in a different JVM, look for an instance with the same name // (alternatively we could do an actual JNDI lookup here....)",no,undetermined,0,0,0,no,0.008104471476277512,no,0.006988194662934287,no,0.0065755596596168,no,0.005799870187452338,no,0.00558618977130655
940,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// try to make sure we don't wrap and already wrapped session,no,undetermined,0,0,0,no,0.026383084919458434,no,0.012912148272151147,no,0.01223032407648049,no,0.01187726151750397,no,0.011559413869882058
941,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If this is an implied join in a FROM clause, then use ANSI-style joining, and set the // flag on the FromElement that indicates that it was implied in the FROM clause itself.",no,undetermined,0,0,0,no,0.00594490680278738,no,0.005042133652605268,no,0.004814649892859462,no,0.00476416088093296,no,0.004578679025002208
942,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//render the where and from parts,no,undetermined,0,0,0,no,0.010329692055542468,no,0.008957272696438662,no,0.008526105957085185,no,0.008091355160515054,no,0.007835954007437971
943,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// There is already an existing batch for this type of entity. // Check to see if the latest batch is acceptable.,no,undetermined,0,0,0,no,0.009044056579740091,no,0.012089563182192918,no,0.012222983986208861,no,0.011868551727792859,no,0.011573087592186901
944,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// allow these to go through the the real session no matter what,no,undetermined,0,0,0,no,0.011289536518290736,no,0.012896892854667207,no,0.012217802927770603,no,0.011840617054027365,no,0.011554198219087824
945,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Don't really know all the codes required to adequately decipher returned jdbc exceptions here. // simply allow the failure to be eaten and the subsequent insert-selects/deletes should fail,no,undetermined,0,0,0,no,0.10564492031993881,no,0.2597426945934159,no,0.24970966420484467,no,0.24439479933443634,no,0.2505651399866216
946,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//we *could* regerate this inside each called method!,no,undetermined,0,0,0,no,0.023995031513548808,no,0.012897017094102427,no,0.012233337233910993,no,0.01185227528319763,no,0.01156027739700748
947,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the CascadingAction implementations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.007773354988161435,no,0.005804301726273979,no,0.005313582334588256,no,0.005207095008247299,no,0.005028203579711697
948,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//now render the joins,no,undetermined,0,0,0,no,0.008100423021408726,no,0.01292768728920715,no,0.012221937383946776,no,0.011847380507368858,no,0.011575154253944911
949,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If you're closing down the ConnectionProvider chances are an // is not a real big deal, just warn",no,undetermined,0,0,0,no,0.007319143697972558,no,0.006959190330096841,no,0.0063743107683543725,no,0.006281617886889229,no,0.00607157547067299
950,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// create a new batch for this type. The batch number is the number of current batches.,no,undetermined,0,0,0,no,0.011233815184825491,no,0.012922908736849967,no,0.012224115354882542,no,0.011875230910861978,no,0.011579201555890475
951,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// keyword support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.004451424685084126,no,0.006069893801373664,no,0.005554587607647655,no,0.005414322284356777,no,0.005200432360051345
952,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This will add the new from element to the origin.,no,undetermined,0,0,0,no,0.005026503284048648,no,0.005455568167011191,no,0.005086382501783411,no,0.005040503487636896,no,0.004996768930549926
953,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the closure of all columns used by the entire hierarchy including // subclasses and superclasses of this class,no,undetermined,0,0,0,no,0.003449015459100129,no,0.006933443093314924,no,0.006813902754722744,no,0.0063321981815882555,no,0.006120118109395498
954,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//now render the select clause,no,undetermined,0,0,0,no,0.0066498257823998175,no,0.0051633005979968795,no,0.004699652814689328,no,0.004567950041379872,no,0.004383069366530797
955,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The keyword used to insert a row without specifying // any column values,no,undetermined,0,0,0,no,0.0027134644378660243,no,0.0028349030839275187,no,0.002655906055888548,no,0.0025985119122856446,no,0.0024725386818910395
956,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//now tie it all together,no,undetermined,0,0,0,no,0.004742980399295329,no,0.004468531035549415,no,0.0044756120941178085,no,0.004243560740235129,no,0.00407832708978135
957,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Does the LIMIT clause take a ""maximum"" row number instead of a total number of returned rows?",no,undetermined,0,0,0,no,0.01954104105621273,no,0.012889394706774802,no,0.012235625117087898,no,0.011886812456155589,no,0.011549459608179068
958,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//insert/update/delete SQL,no,undetermined,0,0,0,no,0.001435551079648565,no,0.0028193273419382316,no,0.0026954545366999964,no,0.0027738224268973755,no,0.002644860060875438
959,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The keyword used to specify a nullable column.,no,undetermined,0,0,0,no,0.010690999618551392,no,0.009317869192796062,no,0.008618599167790912,no,0.008416255530913071,no,0.008157638545808005
960,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//select SQL,no,undetermined,0,0,0,no,0.0027241487301717235,no,0.002215119917463354,no,0.0017759304632708809,no,0.0018337755372493285,no,0.001734573356427181
961,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//overriden to avoid System.exit,no,undetermined,0,0,0,no,0.01096800851862769,no,0.010575686301629564,no,0.009730550851898863,no,0.009397148367412378,no,0.009105225867890707
962,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//no need to check laziness, dirty checking handles that",no,undetermined,0,0,0,no,0.06899466210292063,no,0.0129201044709021,no,0.012235455400479484,no,0.011866114217858473,no,0.011593758846568892
963,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.016506290083987858,no,0.012895135269400426,no,0.012218679504535923,no,0.011864687017934604,no,0.011589177693554938
964,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Fully resolve the map reference, create implicit joins.",no,undetermined,0,0,0,no,0.048178008657053205,no,0.012899837228971537,no,0.012232212864098733,no,0.01187405573792218,no,0.011589251236096994
965,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// break the outer loop !!!,no,undetermined,0,0,0,no,0.0024312857021297598,no,0.002038614585997941,no,0.0019370957196430988,no,0.001910642184073408,no,0.0018113762699222416
966,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// since this entity will now be processed in the latest possible batch, // we can be assured that it will come after all other associations, // there's not need to continue checking.",no,undetermined,0,0,0,no,0.05442890295991196,no,0.012908624810002118,no,0.012234568733797538,no,0.011880494383545407,no,0.01158311408996311
967,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// remove any snapshot, not really for memory management purposes, but // rather because it might now be stale, and there is no longer any  // EntityEntry to take precedence // This is now handled by removeEntity() //session.getPersistenceContext().removeDatabaseSnapshot(key);",no,undetermined,0,0,0,no,0.012807552153492737,no,0.012906117206852688,no,0.012208926577130769,no,0.01183665593425631,no,0.011552235337071805
968,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The basic implementation is to simply use the node's text,no,undetermined,0,0,0,no,0.025274438465867403,no,0.012909204236103299,no,0.01222163193792111,no,0.011878000343784532,no,0.011590783503910216
969,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// InterSystems Cache' does not current support ""SELECT ... FOR UPDATE"" syntax... // Set your transaction mode to READ_COMMITTED before using",no,undetermined,0,0,0,no,0.028094637338830976,no,0.01289433808187615,no,0.012226786826278218,no,0.011847887556910817,no,0.011573554139375984
970,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//cascade to current collection elements,no,undetermined,0,0,0,no,0.006159224540266643,no,0.006784017242917736,no,0.0066393694132091015,no,0.00641418389542353,no,0.006105329947091687
971,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.007409232495244835,no,0.009787588377173218,no,0.009216145172210916,no,0.008938086168066899,no,0.008680296626478897
972,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//not really necessary, but good for consistency...",no,undetermined,0,0,0,no,0.083872548713159,no,0.012912169500072236,no,0.012224825111258936,no,0.011863698151830778,no,0.011577951615886102
973,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Try to find out the name of the primary key to create it as identity if the IdentityGenerator is used,no,undetermined,0,0,0,no,0.0068348282824299235,no,0.012884080564769189,no,0.01221501332768728,no,0.011874968670657238,no,0.011568755601263483
974,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we can't cascade to non-embedded elements,no,undetermined,0,0,0,no,0.00565480644377564,no,0.009452384296829708,no,0.00908645851685809,no,0.008953711120065,no,0.008690872678575228
975,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//postDelete: // After actually deleting a row, record the fact that the instance no longer  // exists on the database (needed for identity-column key generation), and // remove it from the session cache",no,undetermined,0,0,0,no,0.006329896242863161,no,0.005668255068400725,no,0.005452055495828933,no,0.005364709509842962,no,0.005182289184987374
976,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//a newly instantiated collection can't have orphans,no,undetermined,0,0,0,no,0.013133245546489352,no,0.004773590108276454,no,0.004636035701838943,no,0.0038605862529504232,no,0.0036320752763153675
977,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Don't hold the JBC node lock throughout the tx, as that // prevents reads and other updates",no,undetermined,0,0,0,no,0.006626536167048995,no,0.006123612562534937,no,0.006098043999746186,no,0.005795145192999891,no,0.005582657030959496
978,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// check the version unsaved-value, if appropriate",no,undetermined,0,0,0,no,0.011459606472399606,no,0.005302416790175446,no,0.005900648517586155,no,0.005759341501697551,no,0.005557292724640549
979,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Create the SessionFactory from hibernate.cfg.xml,no,undetermined,0,0,0,no,0.0035488471687813504,no,0.011537458506090089,no,0.010863503348009422,no,0.010556865560596878,no,0.010277472611299212
980,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// handle orphaned entities!!,no,undetermined,0,0,0,no,0.013059271943060035,no,0.012885743460522124,no,0.01224071200276739,no,0.01185907826637504,no,0.011598316325790226
981,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ignore,no,undetermined,0,0,0,no,0.0003963947956631522,no,0.0005033798635581664,no,0.0004702444207308477,no,0.0004640531103833746,no,0.0004297751119298306
982,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// check the id unsaved-value,no,undetermined,0,0,0,no,0.008101027239125414,no,0.0029762568857303016,no,0.0033345406045799633,no,0.0032674889045288735,no,0.003119746107370459
983,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if we get here, it is possible that we have a proxy 'in the way' of the merge map resolution... // 		NOTE: decided to put this here rather than in the above loop as I was nervous about the performance //		of the loop-in-loop especially considering this is far more likely the 'edge case'",no,undetermined,0,0,0,no,0.053479922394107954,no,0.012887101971762509,no,0.012239272645607324,no,0.011886461945976444,no,0.011590819312309361
984,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// check to see if it is in the second-level cache,no,undetermined,0,0,0,no,0.008809590728497246,no,0.00954259576242726,no,0.00841865703844661,no,0.008303351486958056,no,0.00809422417928018
985,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Custom SQL (would be better if these were private),no,undetermined,0,0,0,no,0.0704028477307701,no,0.012891458915871479,no,0.012215796109012503,no,0.01184254620976975,no,0.011585827209039614
986,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,///////////////////////////////////////////////////////////////////////,no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
987,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// our column span is the number of columns in the PK,no,undetermined,0,0,0,no,0.001402948101310309,no,0.0020091175365067994,no,0.0020335204995782148,no,0.001998987858519902,no,0.0018907749995673356
988,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// For property references generate <tablealias>.<columnname> as <projectionalias>,no,undetermined,0,0,0,no,0.0056826799315855435,no,0.003784954397356374,no,0.0033263929440334643,no,0.0032544695889408877,no,0.003114279739994373
989,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// in case we were deserialized in a different JVM, look for an instance with the same name // (alternatively we could do an actual JNDI lookup here....)",no,undetermined,0,0,0,no,0.008104471476277512,no,0.006988194662934287,no,0.0065755596596168,no,0.005799870187452338,no,0.00558618977130655
990,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
991,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// KEY,no,undetermined,0,0,0,no,0.0014842792478038794,no,0.0015173150824865037,no,0.0014725504710908091,no,0.0014444728931114737,no,0.0013640000711130308
992,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//force immediate execution of the insert,no,undetermined,0,0,0,no,0.0015428691626668742,no,0.0015362116502260356,no,0.0014416243260674882,no,0.0014537910671770043,no,0.0013727589570089779
993,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// general purpose parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.00492865644019603,no,0.0036084671098859564,no,0.0033521162889476055,no,0.0032660666255882034,no,0.0031186326689369623
994,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// entities ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.010278710333774189,no,0.012450647921681933,no,0.012207886327976805,no,0.011787623298381615,no,0.011541767798683163
995,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.007409232495244835,no,0.009787588377173218,no,0.009216145172210916,no,0.008938086168066899,no,0.008680296626478897
996,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Loaded entity instances, by EntityUniqueKey",no,undetermined,0,0,0,no,0.023561698676579933,no,0.011390232275572513,no,0.00994674630274849,no,0.009676144231600958,no,0.0094571202309271
997,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//allow any identifier quoted with backtick //only recognizes identifiers beginning with a letter,no,undetermined,0,0,0,no,0.008161109458110183,no,0.007630375562583657,no,0.0067802658588142556,no,0.00667498625800751,no,0.006449214672520513
998,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// collections ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.013823139830675476,no,0.00790212242009111,no,0.007147045071328845,no,0.006958504004235475,no,0.0067333674083247825
999,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Configurable implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,yes,0.8383695101996729,yes,0.6591960200310877,yes,0.684226234225001,yes,0.6738369356224959,yes,0.6872866793853324
1000,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Identity map of EntityEntry instances, by the entity instance",no,undetermined,0,0,0,no,0.008747467184380233,no,0.012919652190729124,no,0.011755536711061264,no,0.011282657358991852,no,0.01103938202548889
1001,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Write HTML footer,no,undetermined,0,0,0,no,0.0017470290642829166,no,0.0017330976681539417,no,0.0015942630686814133,no,0.0015696606410848363,no,0.0014865287274860458
1002,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Entity proxies, by EntityKey",no,undetermined,0,0,0,no,0.008738326754901892,no,0.012884801921008888,no,0.012230887830827541,no,0.011849899250188534,no,0.01156689038177722
1003,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// delete does cascade to uninitialized collections,no,undetermined,0,0,0,no,0.00905588337486335,no,0.01148503480270832,no,0.010497544439484295,no,0.010353470218563372,no,0.010125063219459381
1004,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Snapshots of current database state for entities // that have *not* been loaded,no,undetermined,0,0,0,no,0.00905576816039914,no,0.008796581652393356,no,0.008703597956849975,no,0.008634505779024897,no,0.00841009623982045
1005,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// NativeSQL: collect key column and auto-aliases,no,undetermined,0,0,0,no,0.001560509287341159,no,0.002155190758324818,no,0.004010465859426156,no,0.003978688393960839,no,0.0038125651107529576
1006,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Identity map of array holder ArrayHolder instances, by the array instance",no,undetermined,0,0,0,no,0.004101395376496393,no,0.004502037741354495,no,0.004122531271596456,no,0.004059905696204685,no,0.003898430251923518
1007,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//unquotedKeyColumnNames = StringHelper.unQuote(keyColumnAliases);,no,undetermined,0,0,0,no,0.004742980399295552,no,0.00514461803815422,no,0.004831040616159839,no,0.004722825853115608,no,0.004537698436405277
1008,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//cannot occur,no,undetermined,0,0,0,no,0.005780836353851789,no,0.004809337635924238,no,0.004598260035355347,no,0.004508336706089998,no,0.0043265462992556885
1009,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Don't need to lock the cache here, since if someone // else inserted the same pk first, the insert would fail",no,undetermined,0,0,0,no,0.012805115341617088,no,0.012899397781958252,no,0.012214755915088964,no,0.011856622767897645,no,0.011581902310857284
1010,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//cannot occur,no,undetermined,0,0,0,no,0.005780836353851789,no,0.004809337635924238,no,0.004598260035355347,no,0.004508336706089998,no,0.0043265462992556885
1011,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This is not strictly true.  We actually just need to make sure that // it is ordered by root-entity PK and that that order-by comes before // any non-root-entity ordering...,no,undetermined,0,0,0,no,0.0677099672803722,no,0.012899763389523077,no,0.012242830987685806,no,0.01187259446657455,no,0.011587971551442746
1012,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// try ""get""",no,undetermined,0,0,0,no,0.0017231747881278632,no,0.0016808370437699813,no,0.0015626231426394404,no,0.001611115441390362,no,0.001527896115222243
1013,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// pass control along to the rest of the processing chain,no,undetermined,0,0,0,no,0.00628948912572658,no,0.007594328972532595,no,0.007599590462892341,no,0.007642239423351586,no,0.0074098759424094185
1014,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Set of EntityKeys of deleted objects,no,undetermined,0,0,0,no,0.0039706249715892195,no,0.008973429172095397,no,0.008981672525274407,no,0.008653708143462108,no,0.008406329059582097
1015,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// all this only really needs to consider properties // of this class, not its subclasses, but since we // are reusing code used for sequential selects, we // use the subclass closure",no,undetermined,0,0,0,no,0.3682135261857329,no,0.340343142079206,no,0.34235041960786483,no,0.33613079865088824,no,0.34457219602025657
1016,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// A list of collection wrappers that were instantiating during result set // processing, that we will need to initialize at the end of the query",no,undetermined,0,0,0,no,0.02847712417722248,no,0.012895234545540852,no,0.012216171737150313,no,0.011863184070926786,no,0.011577230469765
1017,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*protected void initPropertyPaths(
			final String path,
			final Type type,
			final String[] columns,
			final String[] formulaTemplates,
			final Mapping factory)
	throws MappingException {
		//addFormulaPropertyPath(path, type, formulaTemplates);
		initPropertyPaths(path, type, columns, formulaTemplates, factory);
	}*/",no,undetermined,0,0,0,no,0.00621470130745467,no,0.012924910052573185,no,0.012222034254353455,no,0.011866257568932231,no,0.011587584171353707
1018,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Downgrade locks,no,undetermined,0,0,0,no,0.003338192925321593,no,0.003016184074510718,no,0.0027535098577058667,no,0.0026885261325661604,no,0.002558938706927207
1019,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//( (Column) model.getTable().getPrimaryKey().getColumnIterator().next() ).getName();,no,undetermined,0,0,0,no,0.018693636236702033,no,0.012879879111457989,no,0.012218102257652033,no,0.011863827049637116,no,0.011571104165379804
1020,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// do nothing...,no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
1021,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Deserialize //-----------------------------------------------------------------------,no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
1022,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// do nothing...,no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
1023,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Actually the semantics of the next three are really ""Bag"" // Note that, unlike objects, collection insertions, updates, // deletions are not really remembered between flushes. We // just re-use the same Lists for convenience.",no,undetermined,0,0,0,no,0.11491473382026302,no,0.15520427082735136,no,0.1653024532159895,no,0.1575900007055439,no,0.15693678459641816
1024,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	public boolean isShowSqlEnabled() { //		return showSql; //	} // //	public boolean isFormatSqlEnabled() { //		return formatSql; //	},no,undetermined,0,0,0,no,0.0005456781900228709,no,0.0004116511695630564,no,0.0003754168491686543,no,0.000368359953143679,no,0.000339224698307798
1025,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//with two-deep subqueries, the same alias would get generated for //both using the old method (criteriaQuery.generateSQLAlias()), so //that is now used as a fallback if the main criteria alias isn't set",no,undetermined,0,0,0,no,0.03482996252224761,no,0.012925257417192094,no,0.012208688932411059,no,0.011880286716273863,no,0.011575692680329633
1026,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*(array==null) ? tempList.size() :*/,no,undetermined,0,0,0,no,0.0059391556146309145,no,0.004622508709405962,no,0.004093543899264776,no,0.004028411080299089,no,0.0038593114776272744
1027,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//sort the updates by pk,no,undetermined,0,0,0,no,0.004854792650161486,no,0.00244473113099028,no,0.0023051164292085366,no,0.002241287522004222,no,0.002122055292319811
1028,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// should be safe to only ever expect EntityPersister references here,no,undetermined,0,0,0,no,0.009948204015431145,no,0.008428820105902398,no,0.008157889746746503,no,0.007565490062198329,no,0.007327634562291559
1029,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//optimize the hash size to eliminate a rehash.,no,undetermined,0,0,0,no,0.047893955479747626,no,0.012919993759754353,no,0.012217810026833299,no,0.011847124741406404,no,0.011555094040799043
1030,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//unwrap the object,no,undetermined,0,0,0,no,0.002480177550644112,no,0.00312718565159385,no,0.0029501955677443408,no,0.0029264736697856794,no,0.0027889033017494025
1031,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Impl note: takes advantage of the fact that an escpaed single quote // embedded within a quote-block can really be handled as two seperate // quote-blocks for the purposes of this method...,no,undetermined,0,0,0,no,0.04763368626097365,no,0.012901383242143323,no,0.01221639132721352,no,0.011861356350790046,no,0.011554364108599577
1032,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// again, CCS did not have such a concept; but a reasonable // proximity is to clear the cache after transaction *as long as* // the underlying cache is not JTA aware.",no,undetermined,0,0,0,no,0.021966084104651385,no,0.012919359656122013,no,0.012223552636922277,no,0.011861068558587913,no,0.01159024047533618
1033,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the entity associated with the current action.,no,undetermined,0,0,0,no,0.003015790902084468,no,0.002649522778036764,no,0.002344270277538978,no,0.0022503067091910545,no,0.0021393610914446884
1034,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this page intentionally left blank :),no,undetermined,0,0,0,no,0.010221215495955623,no,0.010744529045076518,no,0.010218912649266977,no,0.01048218577113472,no,0.010203864998298543
1035,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// unfortunately this stuff can't be cached because // it is per-invocation, not constant for the // QueryTranslator instance",no,undetermined,0,0,0,no,0.016028087942240702,no,0.012889871895617352,no,0.012210759116913352,no,0.011858052161895567,no,0.011571897063392244
1036,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//initialize + unwrap the object,no,undetermined,0,0,0,no,0.0015911811429874835,no,0.00195954114938829,no,0.0018619507507556122,no,0.0018452065273780027,no,0.0017455948910636255
1037,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// SEQUENCE support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.013758266659663966,no,0.011820974772251691,no,0.011076602125487275,no,0.010805621048144974,no,0.010515785172324025
1038,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// do not do anything,no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
1039,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we can't batch joined inserts, *especially* not if it is an identity insert; // nor can we batch statements where the expectation is based on an output param",no,undetermined,0,0,0,no,0.022700116325334842,no,0.012899338270257962,no,0.012219015477304,no,0.01186682015700104,no,0.011555867415139906
1040,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//,no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
1041,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// unfortunately this stuff can't be cached because // it is per-invocation, not constant for the // QueryTranslator instance",no,undetermined,0,0,0,no,0.016028087942240702,no,0.012889871895617352,no,0.012210759116913352,no,0.011858052161895567,no,0.011571897063392244
1042,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//return the proxied object,no,undetermined,0,0,0,no,0.007732400059760834,no,0.00791623791160258,no,0.00743030379182716,no,0.007253794673374629,no,0.007028829072806418
1043,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// else no collection element, but also no owner",no,undetermined,0,0,0,no,0.0026247051941093885,no,0.004842214506144152,no,0.004568249089118935,no,0.004532009876462408,no,0.004323081181015187
1044,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ignore,no,undetermined,0,0,0,no,0.0003963947956631522,no,0.0005033798635581664,no,0.0004702444207308477,no,0.0004640531103833746,no,0.0004297751119298306
1045,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we have the form: trim(trimSource) //      so we trim leading and trailing spaces // EARLY EXIT!!!!,no,undetermined,0,0,0,no,0.008732921019338237,no,0.008576241871603605,no,0.008307627131216914,no,0.007954348903598859,no,0.007707478572215346
1046,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//overwrite old proxy,no,undetermined,0,0,0,no,0.0006369762092539171,no,0.0006668044872812042,no,0.0006092003480396052,no,0.0006007916118481613,no,0.0005587526793758428
1047,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// the MRU cache used to keep hard references to the most recently used query plans; // note : LRU here is a bit of a misnomer, it indicates that LRU entries are removed, the // actual kept entries are the MRU entries",no,undetermined,0,0,0,no,0.022906023718761884,no,0.012895834149381124,no,0.012218918197478694,no,0.01184256230763443,no,0.011574986067632293
1048,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// early exit...,no,undetermined,0,0,0,no,0.003933359283837993,no,0.001778043880411003,no,0.0017387305574731227,no,0.0017057885909706125,no,0.0016140607696130788
1049,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Handles things like: // a and b or c // a and ( b or c ) // not a and not b // not ( a and b ) // x between y and z            (overloaded ""and"") // x in ( a, b, c )             (overloaded brackets) // not not a // a is not null                (overloaded ""not"") // etc...... // and expressions like // foo = bar                    (maps to: foo.id = bar.id) // foo.Bar = 'foo'              (maps to: foo.bar = 'foo') // foo.Bar.Baz = 1.0            (maps to: foo.bar = bar.id and bar.baz = 1.0) // 1.0 = foo.Bar.Baz            (maps to: bar.baz = 1.0 and foo.Bar = bar.id) // foo.Bar.Baz = a.B.C          (maps to: bar.Baz = b.C and foo.Bar = bar.id and a.B = b.id) // foo.Bar.Baz + a.B.C          (maps to: bar.Baz + b.C and foo.Bar = bar.id and a.B = b.id) // ( foo.Bar.Baz + 1.0 ) < 2.0  (maps to: ( bar.Baz + 1.0 ) < 2.0 and foo.Bar = bar.id)",no,undetermined,0,0,0,no,0.00632061922053668,no,0.008151973183420676,no,0.007545605841172713,no,0.007338740880986387,no,0.007091908308130484
1050,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// or should it actually throw an exception?,no,undetermined,0,0,0,no,0.012002523434185505,no,0.012916587643294057,no,0.012244355572313596,no,0.011847980531399658,no,0.011564880824117421
1051,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// both many-to-one and one-to-one are represented as a // Property.  EntityPersister is relying on this value to // determine ""lazy fetch groups"" in terms of field-level // interception.  So we need to make sure that we return // true here for the case of many-to-one and one-to-one // with lazy=""no-proxy"" // // * impl note - lazy=""no-proxy"" currently forces both // lazy and unwrap to be set to true.  The other case we // are extremely interested in here is that of lazy=""proxy"" // where lazy is set to true, but unwrap is set to false. // thus we use both here under the assumption that this // return is really only ever used during persister // construction to determine the lazy property/field fetch // groupings.  If that assertion changes then this check // needs to change as well.  Partially, this is an issue with // the overloading of the term ""lazy"" here...",no,undetermined,0,0,0,no,0.17369156492232238,no,0.17476058101017725,no,0.16534794043134815,no,0.15900036132060322,no,0.16218660576131497
1052,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The property is a component...,no,undetermined,0,0,0,no,0.015375416504763949,no,0.009375758170155976,no,0.009637935530070182,no,0.00937812842889539,no,0.009137807281410415
1053,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// the ids are fully resolved, so compare them with isDirty(), not isModified()",no,undetermined,0,0,0,no,0.02265793002271646,no,0.012901408289294905,no,0.012215784104660853,no,0.011877380880094388,no,0.011597146325805077
1054,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//cant instantiate,no,undetermined,0,0,0,no,0.002122186598123858,no,0.003228717385975892,no,0.003136946370070508,no,0.003073885347112743,no,0.002927454565033682
1055,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//QueryJoinFragment join = q.createJoinFragment(useThetaStyleJoin);,no,undetermined,0,0,0,no,0.004581560113023428,no,0.002855949907436587,no,0.002761317680939189,no,0.002691409356347558,no,0.00256808360240286
1056,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if it is a property of an embedded component, invoke on the ""identifier""",no,undetermined,0,0,0,no,0.013280832839088192,no,0.007347430600686304,no,0.006879925678498108,no,0.006854739239886181,no,0.006636337177190826
1057,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// SUBCLASSES,no,undetermined,0,0,0,no,0.0026321468905384335,no,0.002883277456102676,no,0.002686417277519633,no,0.002643980314824503,no,0.0025138158692904564
1058,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// otherwise:,no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
1059,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// starts with the name of a mapped class (new style),no,undetermined,0,0,0,no,0.011707292877106918,no,0.012908222459513933,no,0.012216661629937712,no,0.0118446565762407,no,0.011569033177467268
1060,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//treat it just like a new collection,no,undetermined,0,0,0,no,0.04949326127548304,no,0.012910188322796992,no,0.012234095355883524,no,0.011865109412099353,no,0.0115830551764823
1061,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// We must return a valid RDMS/RSA command from this method to // prevent RDMS/RSA from issuing *ERROR 400,no,undetermined,0,0,0,no,0.023028110822782975,no,0.01290342741623058,no,0.01221480909896703,no,0.011843864169881754,no,0.011596259122593919
1062,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// skip finalize methods,no,undetermined,0,0,0,no,0.003031005010818424,no,0.000719952139372425,no,0.0006550514375765309,no,0.0006410557481497096,no,0.0005960982517529455
1063,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// return the (fully resolved) identifier value, but do not resolve // to the actual referenced entity instance // NOTE: the owner of the association is not really the owner of the id!",no,undetermined,0,0,0,no,0.08390792693816242,no,0.012882558802786393,no,0.012207165371647762,no,0.011872819165268963,no,0.011573389890925722
1064,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//do this work only at the very highest level of the load //don't let this method be called recursively,no,undetermined,0,0,0,no,0.06755006773792062,no,0.012894193231177636,no,0.012222940386837314,no,0.011838145633851108,no,0.011568629226955616
1065,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//	public static JDBCException newJDBCException(String string, SQLException root, String sql) { //		string = string + "" ["" + sql + ']'; //		log.error(string, root); //		logExceptions(root); //		return new JDBCException(string, root, sql); //	} // //	public static JDBCException newJDBCException(String string, SQLException root) { //		log.error(string, root); //		logExceptions(root); //		return new JDBCException(string, root); //	}",no,undetermined,0,0,0,no,0.0059054665871644775,no,0.004961518000770371,no,0.0045673072252100195,no,0.004241430575396919,no,0.004069161737005941
1066,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//note that each iteration of the loop may add new elements,no,undetermined,0,0,0,no,0.012443029644435333,no,0.01116827525012596,no,0.010850554441092406,no,0.010562574391940737,no,0.010219836337530794
1067,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if we know there is exactly 1 row, we can skip. // it would be great if we could _always_ skip this; // it is a problem for <key-many-to-one>",no,undetermined,0,0,0,no,0.021069534483834536,no,0.0030370863565649304,no,0.0025421195714325838,no,0.0024045948375581274,no,0.0022884454342241567
1068,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/* This can never happen because this rule will always eliminate the child NOT.
			case NOT:
				return x.getFirstChild();			// (NOT (NOT x) ) => (x)
*/",no,undetermined,0,0,0,no,0.009760803267372406,no,0.009488935308982668,no,0.008864829770695956,no,0.008652384879354193,no,0.008403488303554581
1069,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we need to obtain the lock before any actions are // executed, since this may be an inverse=""true"" // bidirectional association and it is one of the // earlier entity actions which actually updates // the database (this action is resposible for // second-level cache invalidation only)",no,undetermined,0,0,0,no,0.02159862080114935,no,0.012907115961922882,no,0.012202982358746685,no,0.011846869395540591,no,0.011573098392867406
1070,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// HHH-2481 make sure the callback gets cleared, otherwise the instance stays in a static thread local.",no,undetermined,0,0,0,no,0.02538888197230663,no,0.012901889353030542,no,0.012205689727300779,no,0.011852878278566223,no,0.011572699760075146
1071,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//no point doing this if NONE was requested,no,undetermined,0,0,0,no,0.0012815451713866853,no,0.0018536090553746309,no,0.0016907065119215411,no,0.0017060749700490937,no,0.0016140371967683842
1072,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// while constructor is running,no,undetermined,0,0,0,no,0.005420093228635935,no,0.006025053803884485,no,0.005920496767660059,no,0.0057599667038813135,no,0.005560970081787466
1073,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The keyword used to specify a nullable column.,no,undetermined,0,0,0,no,0.010690999618551392,no,0.009317869192796062,no,0.008618599167790912,no,0.008416255530913071,no,0.008157638545808005
1074,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// while constructor is running,no,undetermined,0,0,0,no,0.005420093228635935,no,0.006025053803884485,no,0.005920496767660059,no,0.0057599667038813135,no,0.005560970081787466
1075,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//there is probably a row there, so try to update //if no rows were updated, we will find out",no,undetermined,0,0,0,no,0.03501480322291082,no,0.012892524541054355,no,0.01222854450226807,no,0.01188450348316311,no,0.011561100075164626
1076,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// note: interface is assumed to already contain HibernateProxy.class,no,undetermined,0,0,0,no,0.0460228791977105,no,0.01290249202649649,no,0.012239271115269425,no,0.011866471516456424,no,0.011596988867609816
1077,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//do nothing to avoid a lazy property initialization,no,undetermined,0,0,0,no,0.015290633020967897,no,0.012892584473773042,no,0.012230633258154893,no,0.011843039361442067,no,0.011554347210058049
1078,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// interfaces // arguments,no,undetermined,0,0,0,no,0.0012108376980702832,no,0.0012597401568676281,no,0.0011554443670811667,no,0.0011338608180545306,no,0.0010650164794007758
1079,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Not called at runtime so doesn't matter if its slow :),no,undetermined,0,0,0,no,0.038116267293281256,no,0.012914210798747841,no,0.012201483078923537,no,0.01186813927207063,no,0.011573658015150833
1080,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//TODO!,no,undetermined,0,0,0,no,0.011915769773668481,no,0.012892946551675156,no,0.012212929575441765,no,0.011854801627810656,no,0.011589831620060054
1081,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Chop off the rest of the tree.,no,undetermined,0,0,0,no,0.005817665257875834,no,0.005871110270429971,no,0.005511168589341013,no,0.0053958331679046755,no,0.005197447993925233
1082,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Get the caller,no,undetermined,0,0,0,no,0.007008079976915571,no,0.006716268115835332,no,0.0067245607469991996,no,0.006518915204922232,no,0.006293874815197435
1083,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// prefer re-generation of identity!,no,undetermined,0,0,0,no,0.0014549797818866727,no,0.0018726459597591812,no,0.0017985324578447895,no,0.0017629444226215352,no,0.0016689527044550345
1084,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Get the caller principals,no,undetermined,0,0,0,no,0.007008079976915571,no,0.006716268115835332,no,0.0067245607469991996,no,0.006518915204922232,no,0.006293874815197435
1085,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// refresh doesn't cascade to uninitialized collections,no,undetermined,0,0,0,no,0.007703079252349687,no,0.008016907821391915,no,0.0072754828891348645,no,0.0070603598763153315,no,0.00684807457337057
1086,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//private static final Alias DEFAULT_ALIAS = new Alias(10, null);",no,undetermined,0,0,0,no,0.008467265273074726,no,0.012075923411895926,no,0.011348339371361291,no,0.011111316487113738,no,0.010841353328378885
1087,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//do nothing,no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
1088,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*public boolean isNonExistant(EntityKey key) {
		return nonExistantEntityKeys.contains(key);
	}*/",no,undetermined,0,0,0,no,0.0013838460488190705,no,0.0013638234460154669,no,0.0013902620742302766,no,0.0013562505335819,no,0.001278300140878639
1089,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// generate id select fragment and then property select fragment for // each expression, just like generateSelectFragments().",no,undetermined,0,0,0,no,0.11381070854424857,no,0.08008088320741322,no,0.012203925706944898,no,0.011862558977090962,no,0.011583127032895508
1090,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*public boolean isNonExistant(EntityUniqueKey key) {
		return nonExistentEntityUniqueKeys.contains(key);
	}*/",no,undetermined,0,0,0,no,0.0013838460488190705,no,0.0013638234460154669,no,0.0013902620742302766,no,0.0013562505335819,no,0.001278300140878639
1091,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//special case ... this is the leaf of the containment graph, even though not immutable",no,undetermined,0,0,0,no,0.005764451029748638,no,0.005290965265166891,no,0.005070784587265547,no,0.0046364064958703015,no,0.004450223267782404
1092,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// iterate all the entities currently associated with the persistence context.,no,undetermined,0,0,0,no,0.009951067611223564,no,0.010053101534729578,no,0.009777106435825564,no,0.009597903841890526,no,0.009364691550073542
1093,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// According to both the ANSI-SQL and JPA specs, trim takes a variable number of parameters between 1 and 4. // at least one paramer (trimSource) is required.  From the SQL spec: // // <trim function> ::= //      TRIM <left paren> <trim operands> <right paren> // // <trim operands> ::= //      [ [ <trim specification> ] [ <trim character> ] FROM ] <trim source> // // <trim specification> ::= //      LEADING //      | TRAILING //      | BOTH // // If <trim specification> is omitted, BOTH is assumed. // If <trim character> is omitted, space is assumed",no,undetermined,0,0,0,no,0.003126776108783909,no,0.012696607568369255,no,0.012218181361192508,no,0.0118836394595889,no,0.011575547738947154
1094,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// does this entity entry pertain to the entity persister in which we are interested (owner)?,no,undetermined,0,0,0,no,0.00869854006487572,no,0.006745743363229975,no,0.005788715936017243,no,0.0055592518485956,no,0.005373895383768337
1095,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/////////////////////////////////////////////////////////////////////// // Prepare persisters and link them up with their cache // region/access-strategy,no,undetermined,0,0,0,no,0.11176473497030735,no,0.24800363644150605,no,0.19982447804441872,no,0.1831476788629642,no,0.18714392473492622
1096,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//check if the managed object is the parent,no,undetermined,0,0,0,no,0.041389704891395866,no,0.012894580555783195,no,0.012239858299177274,no,0.011852548450566004,no,0.01157412064414618
1097,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Allows various loaders (ok mainly the QueryLoader :) to check // whether scrolling of their result set should be allowed. // // By default it is allowed.,no,undetermined,0,0,0,no,0.009449775936455138,no,0.012898981270470556,no,0.012197543366572949,no,0.011853285397909943,no,0.01157857762995563
1098,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// otherwise, the proxy was pruned during the serialization process",no,undetermined,0,0,0,no,0.0034827611795729793,no,0.0035312751104586504,no,0.003177424893564242,no,0.003132147714364057,no,0.002991916238559035
1099,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// does not handle arrays (thats ok, cos they can't be lazy) // or newly instantiated collections, so we can do the cast",no,undetermined,0,0,0,no,0.03162018494583719,no,0.012924096615373974,no,0.012224433593079042,no,0.011850735671380992,no,0.011550533596320394
1100,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// adds remove as a sort-of alias for delete...,no,undetermined,0,0,0,no,0.013426804655889319,no,0.012913195947886603,no,0.012237171678671072,no,0.01187336351390806,no,0.01159373398717145
1101,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//unquotedIdentifierColumnName = identifierColumnAlias;,no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
1102,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//return lhsPersister.getSubclassPropertyColumnNames(property);,no,undetermined,0,0,0,no,0.004942634470230946,no,0.0035673716160578794,no,0.0036165384303651037,no,0.003510214865188072,no,0.003369909855861126
1103,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// saves / updates don't cascade to uninitialized collections,no,undetermined,0,0,0,no,0.004787752998853815,no,0.00419170053828102,no,0.003843123487455336,no,0.0035934530188806942,no,0.003444355818973711
1104,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//EARLY EXIT,no,undetermined,0,0,0,no,0.003933359283837993,no,0.001778043880411003,no,0.0017387305574731227,no,0.0017057885909706125,no,0.0016140607696130788
1105,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// create our own copy of the user-supplied tuplizer impl map,no,undetermined,0,0,0,no,0.0020707945543228033,no,0.003395802204854897,no,0.0032550796576901685,no,0.0029055203947752103,no,0.0027844665412351858
1106,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if the identifier is quoted, remove the quotes",no,undetermined,0,0,0,no,0.01709650982861244,no,0.012919845681482694,no,0.012229330227284042,no,0.01187493623859726,no,0.011590796533913452
1107,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we can do the cast since orphan-delete does not apply to: // 1. newly instantiated collections // 2. arrays (we can't track orphans for detached arrays),no,undetermined,0,0,0,no,0.014512138311013684,no,0.012124348322657356,no,0.012249466093403378,no,0.011862707402850642,no,0.011574512039609183
1108,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//truncate the identifier to the max alias length, less the suffix length",no,undetermined,0,0,0,no,0.006639754433548766,no,0.007095186158505396,no,0.006311419128924697,no,0.00612776560043563,no,0.005929567891729182
1109,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
1110,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//full joins are not supported.. yet!,no,undetermined,0,0,0,no,0.00738322036078264,no,0.012907191184652838,no,0.012206175532029573,no,0.01187836887649469,no,0.011592850479869589
1111,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		 You may still have other ResultSets or update counts left to process here //		 but you can't do it now or the ResultSet you just got will be closed,no,undetermined,0,0,0,no,0.0012674231136456605,no,0.0013032979762763251,no,0.0011678559628631132,no,0.0011481398629927112,no,0.0010776186983061605
1112,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// null is not considered the same type as Integer. //$NON-NLS-1 //$NON-NLS-1,no,undetermined,0,0,0,no,0.003973128513410637,no,0.005293338879727471,no,0.004922336037437837,no,0.004819925059374106,no,0.004637589633480149
1113,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// properly handle property-ref-based associations,no,undetermined,0,0,0,no,0.02806208702884119,no,0.012919514430527686,no,0.012238807086165432,no,0.011861086540747435,no,0.011562104544197208
1114,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the outerJoinsAfterWhere needs to come before where clause to properly // handle dynamic filters,no,undetermined,0,0,0,no,0.043625876922289274,no,0.01290452093035643,no,0.012228218638487533,no,0.011880443978692123,no,0.011569620117950853
1115,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// determine the id getter and setter methods from the proxy interface (if any) // determine all interfaces needed by the resulting proxy,no,undetermined,0,0,0,no,0.01958830289563201,no,0.012911326907105858,no,0.012202285047989774,no,0.01187719971569645,no,0.011580441877994811
1116,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//$NON-NLS-1,no,undetermined,0,0,0,no,0.0057156615453538865,no,0.005544675698135255,no,0.0050634702600794385,no,0.005017083724457911,no,0.004816142592096758
1117,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// add another (inner) nested select // add the main query // close off the inner nested select,no,undetermined,0,0,0,no,0.0039810882979073176,no,0.0036685016741599854,no,0.003169596548387449,no,0.0030860706288991695,no,0.0029425482635883804
1118,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//$NON-NLS-1,no,undetermined,0,0,0,no,0.0057156615453538865,no,0.005544675698135255,no,0.0050634702600794385,no,0.005017083724457911,no,0.004816142592096758
1119,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		origin.addDestination( destination ); // This was the cause of HHH-242 //		origin.setType( FROM_FRAGMENT );			// Set the parent node type so that the AST is properly formed. // The destination node will have all the FROM text. // The parent node is a collection join too (voodoo - see JoinProcessor),no,undetermined,0,0,0,no,0.014086237497817336,no,0.009317782716331196,no,0.008882898951486726,no,0.008680205002153782,no,0.008547308845882465
1120,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//$NON-NLS-1,no,undetermined,0,0,0,no,0.0057156615453538865,no,0.005544675698135255,no,0.0050634702600794385,no,0.005017083724457911,no,0.004816142592096758
1121,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// then handle any user-defined entity modes...,no,undetermined,0,0,0,no,0.01297025019880184,no,0.012642241834644598,no,0.01068132908918993,no,0.01015904488540612,no,0.009890612399364168
1122,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//$NON-NLS-1,no,undetermined,0,0,0,no,0.0057156615453538865,no,0.005544675698135255,no,0.0050634702600794385,no,0.005017083724457911,no,0.004816142592096758
1123,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.002525552164893863,no,0.0035372964829689696,no,0.003319511533314436,no,0.0032615474029665742,no,0.0031159665856848066
1124,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// strip off any leading 'and' token,no,undetermined,0,0,0,no,0.003129089087042287,no,0.0019584177453466508,no,0.0018480154622637502,no,0.0013509171132020659,no,0.0012713356443497202
1125,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// then the pojo tuplizer, using the dynamic-map tuplizer if no pojo representation is available",no,undetermined,0,0,0,no,0.006088205792666452,no,0.005892810534918262,no,0.005473859463111257,no,0.0053109329579377265,no,0.005118299124317596
1126,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// if the condition is not already there...,no,undetermined,0,0,0,no,0.011939617265412112,no,0.012882619943631669,no,0.01220498430964479,no,0.011847607700108844,no,0.011569006794718775
1127,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// this has been shown to happen occasionally in rare cases // when using a transaction manager + transaction-timeout // where the timeout calls back through Hibernate's // registered transaction synchronization on a separate // ""reaping"" thread.  In cases where that reaping thread // executes through this block at the same time the main // application thread does we can get into situations where // these CMEs occur.  And though it is not ""allowed"" per-se, // the end result without handling it specifically is infinite // looping.  So here, we simply break the loop",no,undetermined,0,0,0,no,0.0634966017013308,no,0.01291293187364403,no,0.012227137622587685,no,0.01185200023796794,no,0.011567571265015706
1128,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//dontSpace.add(""'"");",no,undetermined,0,0,0,no,0.00415481083007601,no,0.004498657312271504,no,0.004201071130841578,no,0.004124244715226038,no,0.0039567375399876545
1129,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//	public ComponentMetamodel(Component component, SessionFactoryImplementor sessionFactory) {",no,undetermined,0,0,0,no,0.019359397818099942,no,0.012915377201728912,no,0.012207782004766327,no,0.011876592012806499,no,0.011584644498255666
1130,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//for MySQL,no,undetermined,0,0,0,no,0.0029589556138427554,no,0.01291844381187669,no,0.012240479091344044,no,0.011877238247977632,no,0.011570226953325375
1131,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Detect discriminator values...,no,undetermined,0,0,0,no,0.006550576907796975,no,0.006863157934586661,no,0.00621204636363272,no,0.006051624550582068,no,0.005838911315391775
1132,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/**
	 * Set a custom entity resolver. This entity resolver must be
	 * set before addXXX(misc) call.
	 * Default value is {@link org.hibernate.util.DTDEntityResolver}
	 *
	 * @param entityResolver entity resolver to use
	 */",no,undetermined,0,0,0,no,0.01249908566034578,no,0.012908997887857591,no,0.012232473435183812,no,0.011803960827602742,no,0.011521893428816751
1133,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Handle any filters applied to this collection,no,undetermined,0,0,0,no,0.005688410851368663,no,0.002686238756060091,no,0.0024432173919741707,no,0.002398615192124929,no,0.0022388929300130376
1134,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//handle a property-ref,no,undetermined,0,0,0,no,0.008220623909799588,no,0.009776577590997431,no,0.00886462981253648,no,0.00864472339063473,no,0.008399907389705861
1135,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if we could not register a synchronization, //do the before/after completion callbacks //ourself (but we need to let jdbcContext //know that this is what we are going to //do, so it doesn't keep trying to register //synchronizations)",no,undetermined,0,0,0,no,0.011659633619761378,no,0.011641777066640619,no,0.010182003971444207,no,0.009873800979256797,no,0.00960156738182227
1136,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//HashMap columnsUnique = new HashMap();,no,undetermined,0,0,0,no,0.003174815736191377,no,0.005663956779556188,no,0.005450239850102093,no,0.0053255064706443055,no,0.005119827767558588
1137,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// then the pojo tuplizer, using the dynamic-map tuplizer if no pojo representation is available",no,undetermined,0,0,0,no,0.006088205792666452,no,0.005892810534918262,no,0.005473859463111257,no,0.0053109329579377265,no,0.005118299124317596
1138,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//null caused some problems,no,undetermined,0,0,0,no,0.026554080550128745,no,0.012898863512446838,no,0.012216459035227334,no,0.01184837716137397,no,0.01158815986859273
1139,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// two conditions where we need to transform this to a theta-join syntax: //      1) 'elem' is the ""root from-element"" in correlated subqueries //      2) The DotNode.useThetaStyleImplicitJoins has been set to true //          and 'elem' represents an implicit join",no,undetermined,0,0,0,no,0.012470802604867857,no,0.010227217617328978,no,0.009727579593667048,no,0.009426243117590685,no,0.009176679656534929
1140,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*package*/,no,undetermined,0,0,0,no,0.002544021585726736,no,0.002756752457787323,no,0.002600423329497448,no,0.0025611192192290452,no,0.0024390968529185387
1141,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// cascade the refresh prior to refreshing this entity,no,undetermined,0,0,0,no,0.003384254982631911,no,0.004518763163408652,no,0.004018883084683553,no,0.0038477003773514417,no,0.0036796921806953663
1142,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//not sure if this would ever be null but wanted to be careful,no,undetermined,0,0,0,no,0.02771913681145881,no,0.012916540471999189,no,0.01221407261151764,no,0.011844772472998324,no,0.011584500783886252
1143,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Impl note: takes advantage of the fact that an escpaed single quote // embedded within a quote-block can really be handled as two seperate // quote-blocks for the purposes of this method...,no,undetermined,0,0,0,no,0.04763368626097365,no,0.012901383242143323,no,0.01221639132721352,no,0.011861356350790046,no,0.011554364108599577
1144,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//even on inverse=""true""",no,undetermined,0,0,0,no,0.01095281981313821,no,0.010411601848574035,no,0.009432385978514684,no,0.009237615736026961,no,0.008979716052956482
1145,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// PROPERTIES,no,undetermined,0,0,0,no,0.003538818736704457,no,0.003232205632595162,no,0.002976990883263783,no,0.002984297171515596,no,0.002850282165435171
1146,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*package*/,no,undetermined,0,0,0,no,0.002544021585726736,no,0.002756752457787323,no,0.002600423329497448,no,0.0025611192192290452,no,0.0024390968529185387
1147,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we need to dirty check many-to-ones with not-found=""ignore"" in order  // to update the cache (not the database), since in this case a null // entity reference can lose information",no,undetermined,0,0,0,no,0.06228133257503583,no,0.012882556045508193,no,0.012236982219172894,no,0.011845352505607042,no,0.011572871780428533
1148,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*package*/,no,undetermined,0,0,0,no,0.002544021585726736,no,0.002756752457787323,no,0.002600423329497448,no,0.0025611192192290452,no,0.0024390968529185387
1149,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// register hibernate types for default use in scalar sqlquery type auto detection,no,undetermined,0,0,0,no,0.01021192298188719,no,0.01289314186490642,no,0.012217609489427687,no,0.01188323088341595,no,0.01159479267675104
1150,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If true then execute db updates, otherwise just generate and display updates",no,undetermined,0,0,0,no,0.006151822832525345,no,0.004510708251731192,no,0.004037461676987658,no,0.003922436249457737,no,0.00377032108409133
1151,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// SQLFunction implementation,no,undetermined,0,0,0,yes,0.992352954848911,no,0.012897421158711302,no,0.012211956042069901,no,0.011849227554679547,no,0.011553571663548288
1152,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we only release the connection,no,undetermined,0,0,0,no,0.06243235895716169,no,0.012917115638102283,no,0.012216461787480712,no,0.011851223478379877,no,0.0115707295628523
1153,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//we only check the version when _upgrading_ lock modes,no,undetermined,0,0,0,no,0.008544681378358529,no,0.012915217963242003,no,0.01223180634411335,no,0.011886695817753196,no,0.011564583986363713
1154,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// deprecated option...,no,undetermined,0,0,0,no,0.012765174609896774,no,0.012906547218233153,no,0.012229164363984888,no,0.011861993442911814,no,0.01157418318565126
1155,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// only carry on if the method has no parameters,no,undetermined,0,0,0,no,0.0052274599785149065,no,0.00436394551200737,no,0.004111726402763757,no,0.004008012879916364,no,0.0038528995841018124
1156,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*NativeSQLQueryReturn*/,no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
1157,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//woops we got an instance of another class hierarchy branch,no,undetermined,0,0,0,no,0.005177227353347887,no,0.005590046320239141,no,0.0051338599524657046,no,0.00500544488483398,no,0.004813879943632553
1158,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// COMPOSITE-ID,no,undetermined,0,0,0,no,0.021489623174737356,no,0.01241347703013678,no,0.00944300756215839,no,0.009084568722624675,no,0.008836583870279358
1159,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Create an OuterJoinGenerator for this dialect.,no,undetermined,0,0,0,no,0.015814187913456193,no,0.012912531767588926,no,0.01224033706234665,no,0.01183865202956425,no,0.011557763874798123
1160,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if an exception occurs during flush, user must call rollback()",no,undetermined,0,0,0,no,0.005223226581596062,no,0.0037977653510016286,no,0.0016659910420867487,no,0.0016508334686839146,no,0.0015589651232482415
1161,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*<String>*/,no,undetermined,0,0,0,no,0.0015605409668824205,no,0.0017184049189373873,no,0.001497161971896812,no,0.0014376953482598907,no,0.0013551656679011554
1162,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//actually, this last test is probably unnecessary, since  //beforeCompletion() doesn't get called during rollback",no,undetermined,0,0,0,no,0.1307565002164541,no,0.09337855270956003,no,0.012213816049837095,no,0.011840016843724535,no,0.011565857241837311
1163,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we need to step through the rows one row at a time (slow),no,undetermined,0,0,0,no,0.008494692331544753,no,0.012913665489013189,no,0.012227683371311918,no,0.011872110714774883,no,0.01157985535755436
1164,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//final boolean forceCacheRefresh,",no,undetermined,0,0,0,no,0.00011919175992967231,no,0.00022393843596094258,no,0.00020131506979420596,no,0.0001988765816702425,no,0.00018144092422210458
1165,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.004656560998695368,no,0.006925669544129221,no,0.0068336108776193205,no,0.006680769418574773,no,0.006440573191393503
1166,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Create an DotNode AST for the path and resolve it.,no,undetermined,0,0,0,no,0.01884602849329664,no,0.012096876562892808,no,0.01101946512588623,no,0.008817586369985031,no,0.008549546932288573
1167,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//its already loaded so don't need to hydrate it,no,undetermined,0,0,0,no,0.03194821339062745,no,0.012911976674160565,no,0.012247282281290326,no,0.011867601311265933,no,0.011587330355444998
1168,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if an exception occurs during flush, user must call rollback()",no,undetermined,0,0,0,no,0.005223226581596062,no,0.0037977653510016286,no,0.0016659910420867487,no,0.0016508334686839146,no,0.0015589651232482415
1169,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// orphans should be deleted during delete,no,undetermined,0,0,0,no,0.00795919955932161,no,0.012898233175617772,no,0.01223642958929598,no,0.011871153083011692,no,0.011560368852193787
1170,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// swallow it, and continue to roll back JTA transaction",no,undetermined,0,0,0,no,0.0034843564153560773,no,0.002078186452794403,no,0.0018018264318986653,no,0.001834212317384734,no,0.00173786317465256
1171,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// here, we have two possibilities: // 		1) the property-name matches the explicitly identifier property name //		2) the property-name matches the implicit 'id' property name",no,undetermined,0,0,0,no,0.012054196852665507,no,0.007778791202976632,no,0.007535611487907687,no,0.007471922514092502,no,0.007257937049788672
1172,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// so the transaction is already rolled back, by JTA spec",no,undetermined,0,0,0,no,0.027999976444389167,no,0.012905813168993058,no,0.012222906005317464,no,0.011876280105753522,no,0.011571480440359983
1173,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we found a collection element in the result set,no,undetermined,0,0,0,no,0.0037360923418818318,no,0.001909561798535563,no,0.002079007348422667,no,0.0020360847341583223,no,0.0018982129614023996
1174,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this method is a noop if there is a Synchronization!,no,undetermined,0,0,0,no,0.0047437077965125736,no,0.0036934758491606297,no,0.003487611475228672,no,0.003423067312408938,no,0.003266776255926195
1175,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// register the standard dialect resolver,no,undetermined,0,0,0,no,0.004068970834029314,no,0.008528883567414176,no,0.008467324835186831,no,0.00834828439608071,no,0.008121188836185796
1176,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// why is all others non final ?,no,undetermined,0,0,0,no,0.003544685731349666,no,0.00883828668115806,no,0.00820947246189125,no,0.007971316198676394,no,0.007722901202448658
1177,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// even though we might find a pre-existing element by join path, we may not be able to reuse it...",no,undetermined,0,0,0,no,0.004282612188953006,no,0.005854008222858257,no,0.0055668288736917875,no,0.0053470878983887,no,0.005169848991994226
1178,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// HELLA IMPORTANT OPTIMIZATION!!!,no,undetermined,0,0,0,no,0.012892275938936649,no,0.01120355703106326,no,0.009614548975063513,no,0.00930702284132723,no,0.009045754028859992
1179,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//include the discriminator and class-level where, but not filters",no,undetermined,0,0,0,no,0.006120451188855128,no,0.006278437855718775,no,0.005825249511811455,no,0.005564614815393458,no,0.005361157423157438
1180,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*return that.type.equals(type) && 
			EqualsHelper.equals(that.value, value);*/",no,undetermined,0,0,0,no,0.00200763822700465,no,0.0022658549384122688,no,0.002959120524103304,no,0.0029195747986989606,no,0.002784173468703097
1181,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//null child could occur for no from clause in a filter,no,undetermined,0,0,0,no,0.005496786155880475,no,0.0046053368140069354,no,0.004302794108296122,no,0.003934003087678239,no,0.003762493353428427
1182,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The 'from element' that the property is in.,no,undetermined,0,0,0,no,0.0024831859536891994,no,0.0019288962989966105,no,0.0019064986991055566,no,0.0018938445931866482,no,0.0017986393276355254
1183,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Since the result set cursor is always left at the first // physical row after the ""last processed"", we need to jump // back one position to get the key value we are interested // in skipping",no,undetermined,0,0,0,no,0.002477431864302548,no,0.0023326015890618628,no,0.0022736180532278256,no,0.00215202613200301,no,0.002040667395559049
1184,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// WebSphere, however, is not a sane JEE/JTA container...",no,undetermined,0,0,0,no,0.0018785953313199774,no,0.0018646786512579352,no,0.0015630934252781042,no,0.0015099929224850323,no,0.0014249262915980118
1185,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// loop through all the associated entities and make sure they have been // processed before the latest // batch associated with this entity type.,no,undetermined,0,0,0,no,0.006163630890442714,no,0.012911749841112565,no,0.012245196341260806,no,0.011868568279408579,no,0.011579372215592122
1186,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// for sane JEE/JTA containers, the transaction itself functions as its identifier...",no,undetermined,0,0,0,no,0.002031229382820613,no,0.0013339864777857616,no,0.001153918060695791,no,0.0011577967969625806,no,0.001087079391369165
1187,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// First, try to find a matching constructor accepting a ViolatedConstraintNameExtracter param...",no,undetermined,0,0,0,no,0.02250134284818018,no,0.012921183829359242,no,0.012238148789746845,no,0.011865729023655616,no,0.011592475916141697
1188,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//swallow, the transaction was finished",no,undetermined,0,0,0,no,0.001919920295640807,no,0.0011240442306900988,no,0.0009361596081103576,no,0.0009540685512293552,no,0.000894775922257809
1189,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//will be ignored, using the existing Entry instead",no,undetermined,0,0,0,no,0.006429641899719349,no,0.005366684844242045,no,0.005078207811959491,no,0.004947781844917074,no,0.0047093273274510265
1190,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// 60 seconds,no,undetermined,0,0,0,no,0.006932760013743887,no,0.007086623194769695,no,0.00667432624625728,no,0.006475552481788318,no,0.006252848037954349
1191,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// this property belongs to the table and it is not specifically // excluded from optimistic locking by optimistic-lock=""false""",no,undetermined,0,0,0,no,0.009859163024473129,no,0.004429464546664988,no,0.004352516813956168,no,0.004314468102963051,no,0.0041320894230697175
1192,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Don't hold a transactional lock for this ,no,undetermined,0,0,0,no,0.00795675153098945,no,0.00929111642918518,no,0.009364214946194228,no,0.008741187895291495,no,0.008473443693888038
1193,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// some collections are not lazy:,no,undetermined,0,0,0,no,0.015752541835509764,no,0.01033368914559055,no,0.009382380134558494,no,0.009188397635633448,no,0.008954084031539713
1194,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Fix up the resident flag,no,undetermined,0,0,0,no,0.11923577111857397,no,0.11806348163415556,no,0.11935845875294458,no,0.11604577419672892,no,0.11770293360075187
1195,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Does the LIMIT clause come at the start of the SELECT statement, rather than at the end?",no,undetermined,0,0,0,no,0.01269642614685623,no,0.012886214751067005,no,0.012230767816947987,no,0.011870285071908659,no,0.011574276409156897
1196,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// all AliasToEntityMapResultTransformer are considered equal ~~~~~~~~~~~~~,no,undetermined,0,0,0,no,6.406352713742666e-05,no,0.00012868543175019088,no,0.00012393956139367498,no,0.0001247297589821906,no,0.00011301567553902278
1197,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//the following two lines were added to ensure that this.params is not null, which //can happen with two-deep nested subqueries",no,undetermined,0,0,0,no,0.01014226048477932,no,0.009564852137305905,no,0.009380005697985305,no,0.009231471533809972,no,0.00895804333652898
1198,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Set the attributes of the property reference expression.,no,undetermined,0,0,0,no,0.023118903587667505,no,0.012909496584319962,no,0.011561453501681081,no,0.010973930853381473,no,0.010699325401682213
1199,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the current batch number is the latest batch for this entity type.,no,undetermined,0,0,0,no,0.008762312976293289,no,0.012900093230297326,no,0.0122131383483693,no,0.01184931836040256,no,0.01155251278135862
1200,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//take a snapshot,no,undetermined,0,0,0,no,0.0030208576379559494,no,0.012888907508844642,no,0.011850312020227821,no,0.01153881933773261,no,0.011275893989608451
1201,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//we can inner join to superclass tables (the row MUST be there) //we can never inner join to subclass tables,no,undetermined,0,0,0,no,0.005182299566310436,no,0.003289059919837885,no,0.003048721253711959,no,0.0029525251187176825,no,0.0028199574343436896
1202,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Never evict this node,no,undetermined,0,0,0,no,0.0018862633940715298,no,0.002100729938915847,no,0.0019468400142954021,no,0.001959359877660392,no,0.0018555506817571263
1203,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Does the collection referenced by this FromElement // specify an order-by attribute?  If so, attach it to // the query's order-by",no,undetermined,0,0,0,no,0.015774652958491894,no,0.009013876750712484,no,0.008509506681299146,no,0.008127758753502681,no,0.00780249274027947
1204,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Create the join element under the from element.,no,undetermined,0,0,0,no,0.0015288582770676274,no,0.001229554714399265,no,0.0011374577179223328,no,0.001125981728656714,no,0.0010579134774260626
1205,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// for merging of versioned entities, we consider the version having // been changed only when: // 1) the two version values are different; //      *AND* // 2) The target actually represents database state! // // This second condition is a special case which allows // an entity to be merged during the same transaction // (though during a seperate operation) in which it was // originally persisted/saved",no,undetermined,0,0,0,no,0.012078910950796986,no,0.009200107771000025,no,0.008126909398247208,no,0.007821181689725237,no,0.007621939124902906
1206,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Moved here from SelectClause [jsd],no,undetermined,0,0,0,no,0.15181587903365107,no,0.14188126989020186,no,0.1376665614723084,no,0.1357561079356872,no,0.13771021104037778
1207,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// pre-determine and cache the hashcode,no,undetermined,0,0,0,no,0.023912944659740025,no,0.012907191553528544,no,0.01223067361124419,no,0.011853628076582466,no,0.01157628431489509
1208,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,///////////////////////////////////////////////////////////////////////////,no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
1209,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// (NOT (BETWEEN a b) ) => (NOT_BETWEEN a b),no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
1210,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Make sure the root node for the region exists and  // has a DataVersion that never complains,no,undetermined,0,0,0,no,0.005019632088974255,no,0.0044677415690117985,no,0.004269149328549892,no,0.004050349071921578,no,0.003885678847246336
1211,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//			ps.close(); //just close it; do NOT try to return it to the pool! //NOTE: early exit!,no,undetermined,0,0,0,no,0.000525809689289954,no,0.000309633898908763,no,0.00026992781402417743,no,0.0002702343453017639,no,0.00024746486954746585
1212,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// map of EntityMode -> Tuplizer,no,undetermined,0,0,0,no,0.003678336945979555,no,0.0039093265342582725,no,0.00370239756158028,no,0.0036587653937397773,no,0.003501302762557621
1213,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Now write the values of fields onto the prepared statement,no,undetermined,0,0,0,no,0.002239658856813749,no,0.002302299207174289,no,0.0021250239125635327,no,0.002095183202802435,no,0.0019886914586406943
1214,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this is a virtual id property...,no,undetermined,0,0,0,no,0.02420236957031881,no,0.012884704909254592,no,0.012242113637868517,no,0.011865512336642736,no,0.01159115620277713
1215,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Need to use the identifier type of the collection owner // since the incoming is value is actually the owner's id. // Using the collection's key type causes problems with // property-ref keys...,no,undetermined,0,0,0,no,0.1402471856621258,no,0.15249307722025865,no,0.1406929439027032,no,0.13811309985660875,no,0.1388342174002751
1216,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// create our own copy of the user-supplied tuplizer impl map,no,undetermined,0,0,0,no,0.0020707945543228033,no,0.003395802204854897,no,0.0032550796576901685,no,0.0029055203947752103,no,0.0027844665412351858
1217,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// The current_timestamp is more accurate, but only known to be supported // in SQL Server 7.0 and later (i.e., Sybase not known to support it at all)",no,undetermined,0,0,0,no,0.015719302746709504,no,0.01290259736385741,no,0.012234845066683922,no,0.011861000663279072,no,0.011582529182448101
1218,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//this one needed only for guessEntityMode(),no,undetermined,0,0,0,yes,0.9923556558096381,yes,0.9904118614038694,yes,0.9906460363522566,yes,0.9899307783205371,yes,0.9911018348411583
1219,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/* will check current level if some of them are not null
		 * or sublevels if they exist
		 */",no,undetermined,0,0,0,no,0.002452355203578854,no,0.0037737819186110322,no,0.003477830063454344,no,0.0034451418362124605,no,0.00328988133757746
1220,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Build the dynamic-map tuplizer...,no,undetermined,0,0,0,no,0.002100444177166392,no,0.0023168743077107076,no,0.0022342528422646646,no,0.002209010808255847,no,0.002097655240716907
1221,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Pointbase has no known variation of a ""SELECT ... FOR UPDATE"" syntax...",no,undetermined,0,0,0,no,0.010197720751312539,no,0.01292846002443253,no,0.012215124796990832,no,0.011875482260198076,no,0.011592311516105978
1222,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// then dom4j tuplizer, if dom4j representation is available",no,undetermined,0,0,0,no,0.003601892295203379,no,0.004732654540455987,no,0.004314983121111418,no,0.004194017940463744,no,0.00402728715130254
1223,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// See if the entity is already bound to this session, if not look at the // entity identifier and assume that the entity is persistent if the // id is not ""unsaved"" (that is, we rely on foreign keys to keep // database integrity)",no,undetermined,0,0,0,no,0.01689371308354715,no,0.008176615524456891,no,0.0067639669993268614,no,0.006334859065275582,no,0.006120921567097991
1224,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// do the work,no,undetermined,0,0,0,no,0.011905827338177665,no,0.012884555213221075,no,0.012216125061313093,no,0.011847695627481333,no,0.011548480023862426
1225,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// if its an uninitialized proxy it can't be transient,no,undetermined,0,0,0,no,0.007451637288552279,no,0.0033933713732586528,no,0.003230916419629426,no,0.003207320340555098,no,0.0030678103340152133
1226,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// We've been here before,no,undetermined,0,0,0,no,0.0032652589382890606,no,0.003268631770191848,no,0.0024667093452517413,no,0.0024130545252490756,no,0.0022903026412978643
1227,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//return the id, so we can use it to reset the proxy id //return result;",no,undetermined,0,0,0,no,0.023233661967645643,no,0.011659974276084908,no,0.01148648850283051,no,0.011124877356854246,no,0.010840477862474949
1228,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Build the dynamic-map tuplizer...,no,undetermined,0,0,0,no,0.002100444177166392,no,0.0023168743077107076,no,0.0022342528422646646,no,0.002209010808255847,no,0.002097655240716907
1229,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// return false here, as most databases do not properly support this construct...",no,undetermined,0,0,0,no,0.03070040721246282,no,0.012896942423652257,no,0.012230815118854347,no,0.011862280757083747,no,0.011575592425171486
1230,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// do the work,no,undetermined,0,0,0,no,0.011905827338177665,no,0.012884555213221075,no,0.012216125061313093,no,0.011847695627481333,no,0.011548480023862426
1231,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is persister-centric and/or EntityInfo-centric ~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.03777679561253985,no,0.012894755096773717,no,0.01223334580623652,no,0.011872134005178446,no,0.011582718195785822
1232,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// put the ""standard"" tuplizers into the tuplizer map first",no,undetermined,0,0,0,no,0.001410457610937952,no,0.0016110516517249627,no,0.0015416962717001539,no,0.0015310292225675969,no,0.001449757707882259
1233,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// hit the database, after checking the session cache for a snapshot",no,undetermined,0,0,0,no,0.02841123614287511,no,0.012893812761304104,no,0.012213374530353675,no,0.01187890214270391,no,0.011591644714334035
1234,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// found a ctor, but it was not publicly accessible so try to request accessibility",no,undetermined,0,0,0,no,0.004959202421315097,no,0.00399939964721765,no,0.00378680046148485,no,0.0037633888184145947,no,0.003608235258339084
1235,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// our parent is another dot node, meaning we are being further dereferenced. // thus we need to generate a join unless the parent refers to the associated // entity's PK (because 'our' table would know the FK).",no,undetermined,0,0,0,no,0.024595760739899768,no,0.00845627319651353,no,0.007125827422428062,no,0.006864712695520684,no,0.006641703635656858
1236,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	private final SessionFactoryImplementor sessionFactory;,no,undetermined,0,0,0,no,0.005637123466668922,no,0.009744448788171671,no,0.009317672373097514,no,0.009029386372902147,no,0.008771029140528784
1237,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Search for collections by reachability, updating their role. // We don't want to touch collections reachable from a deleted object",no,undetermined,0,0,0,no,0.024067470333247482,no,0.012880122995321727,no,0.012234127718271638,no,0.011872843816719242,no,0.01159022733206268
1238,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// cached for efficiency...,no,undetermined,0,0,0,no,0.003266109063528832,no,0.00292614155230668,no,0.0027696130717022177,no,0.002737850950842431,no,0.0026111989155337286
1239,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// sql server just returns automatically,no,undetermined,0,0,0,no,0.017145244648685932,no,0.01291115066250078,no,0.01221815203017483,no,0.011868993094983007,no,0.011582448363513728
1240,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		this.sessionFactory = sessionFactory;,no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
1241,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.007236732883258397,no,0.004377037982533475,no,0.004137600970181681,no,0.004056127693434628,no,0.0038847081763881785
1242,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//it was not embedded, so the argument is just an id",no,undetermined,0,0,0,no,0.020004753127701932,no,0.012922794512730602,no,0.01222840639367236,no,0.011864192005205613,no,0.011587759913854691
1243,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we have specialized case of a detached entity from the // perspective of the merge operation.  Specifically, we // have an incoming entity instance which has a corresponding // entry in the current persistence context, but registered // under a different entity instance",no,undetermined,0,0,0,no,0.007581482992228432,no,0.009528429049197198,no,0.007493082057131608,no,0.0072321198464881395,no,0.0070037108756264566
1244,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// then dom4j tuplizer, if dom4j representation is available",no,undetermined,0,0,0,no,0.003601892295203379,no,0.004732654540455987,no,0.004314983121111418,no,0.004194017940463744,no,0.00402728715130254
1245,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//where fragment must be empty!,no,undetermined,0,0,0,no,0.15312487685568799,no,0.14385216605301548,no,0.12236223606732655,no,0.11812194581009597,no,0.11973798705597888
1246,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// or its key changed,no,undetermined,0,0,0,no,0.00029225392407290654,no,0.00035629812426562547,no,0.00031541159053391857,no,0.00031095528533634913,no,0.0002867258232041784
1247,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//					int parameterStart = getWalker().getNumberOfParametersInSetClause(); //					List allParams = getIdSelectParameterSpecifications(); //					Iterator whereParams = allParams.subList( parameterStart, allParams.size() ).iterator();",no,undetermined,0,0,0,no,0.021157474433887387,no,0.010302116187137124,no,0.007901411319349244,no,0.007725865106508366,no,0.007487397377463709
1248,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// put the ""standard"" tuplizers into the tuplizer map first",no,undetermined,0,0,0,no,0.001410457610937952,no,0.0016110516517249627,no,0.0015416962717001539,no,0.0015310292225675969,no,0.001449757707882259
1249,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.007334648641950395,no,0.01060143503111715,no,0.009894540056113486,no,0.009669395178014796,no,0.009390679378702912
1250,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we will need to remove ye olde entries,no,undetermined,0,0,0,no,0.011038852971316647,no,0.012902591772812234,no,0.012239790305775364,no,0.011876884064489657,no,0.011590889661145971
1251,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// add the current fragment to the THETA_JOINS node,no,undetermined,0,0,0,no,0.011943168284495811,no,0.010849761874851394,no,0.009691863562048838,no,0.009532252919782413,no,0.009270039724653588
1252,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// force initialize!,no,undetermined,0,0,0,no,0.0007853921841373485,no,0.0007998873897584962,no,0.0007519361876585692,no,0.000742687919730572,no,0.0006947107247741178
1253,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// lock doesn't cascade to uninitialized collections,no,undetermined,0,0,0,no,0.00476695836897259,no,0.005059385599904192,no,0.004796729708164153,no,0.00467948320246037,no,0.004506146869825398
1254,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//return currentId;,no,undetermined,0,0,0,no,0.001057492383143947,no,0.0013316596324714771,no,0.0011460020169193198,no,0.0011158146727426985,no,0.0010482475536592862
1255,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//unquotedIdentifierColumnName = null;,no,undetermined,0,0,0,no,0.005972060916006604,no,0.004287374153966625,no,0.0040748026689607485,no,0.003950925837839522,no,0.0037846645478364703
1256,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//reset the id,no,undetermined,0,0,0,no,0.01710599622859351,no,0.008961594922010275,no,0.008398561691599244,no,0.008236786790418265,no,0.008004199052918172
1257,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//addInitializedCollection(collection, persister, id);",no,undetermined,0,0,0,no,0.07125935962246689,no,0.012915936021663464,no,0.012222941747880517,no,0.011866883735408824,no,0.011561871482608977
1258,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// CollectionPropertyMapping processes everything except 'index'.,no,undetermined,0,0,0,no,0.009321808948799404,no,0.012882857134048648,no,0.01222714323168038,no,0.011864250924906995,no,0.011554797794941967
1259,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if it is an uninitialized proxy, pointing //with this session, then when it is accessed, //the underlying instance will be ""contained""",no,undetermined,0,0,0,no,0.0027478050353307863,no,0.0019979206757862167,no,0.0019137092791193622,no,0.0018719501954726847,no,0.0017725159675127647
1260,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//reset the version,no,undetermined,0,0,0,no,0.011438453023230289,no,0.008159350505264383,no,0.007854876252933421,no,0.007702875495346204,no,0.007487077422677413
1261,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Note: this simply constructs a ""raw"" SQL_TOKEN representing the // where fragment and injects this into the tree.  This ""works""; // however it is probably not the best long-term solution. // // At some point we probably want to apply an additional grammar to // properly tokenize this where fragment into constituent parts // focused on the operators embedded within the fragment.",no,undetermined,0,0,0,yes,0.7355112094288899,yes,0.8497135145550411,yes,0.8273987870331653,yes,0.8205221964965711,yes,0.8308403048665223
1262,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the default is to simply not lazy fetch properties for now...,no,undetermined,0,0,0,no,0.0096317573137317,no,0.012904278870834668,no,0.01222706274393913,no,0.011861474131540992,no,0.01159779172745504
1263,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aliases for identifier ( alias.id ); skip if the entity defines a non-id property named 'id',no,undetermined,0,0,0,no,0.05895897766842653,no,0.012891221564409529,no,0.012234741976662989,no,0.01187077877671209,no,0.011551388134035724
1264,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// else if it's elements changed,no,undetermined,0,0,0,no,0.0004714690740028648,no,0.0005259696471014167,no,0.00045904910781464675,no,0.0004522072010433167,no,0.0004192332257636211
1265,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		 This assumes you will want to ignore any update counts ,no,undetermined,0,0,0,no,0.0008826496849161933,no,0.0011605447193293516,no,0.0010715149727855149,no,0.0010897597142261702,no,0.001022762622225106
1266,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//ATTRIBUTES MAINTAINED BETWEEN FLUSH CYCLES,no,undetermined,0,0,0,no,0.01599020515844154,no,0.009923717891588168,no,0.0073939040419470775,no,0.0072361839131107435,no,0.006993659199406164
1267,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// now rebuild the insertions list. There is a batch for each entry in the name list.,no,undetermined,0,0,0,no,0.0029394097755109424,no,0.006387163392789912,no,0.0061265752532400925,no,0.0060400798018182735,no,0.005819906162744147
1268,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// should be safe to only ever expect EntityPersister references here,no,undetermined,0,0,0,no,0.009948204015431145,no,0.008428820105902398,no,0.008157889746746503,no,0.007565490062198329,no,0.007327634562291559
1269,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if the original is a PersistentCollection, and that original // was not flagged as dirty, then reset the target's dirty flag // here after the copy operation. // </p> // One thing to be careful of here is a ""bare"" original collection // in which case we should never ever ever reset the dirty flag // on the target because we simply do not know...",no,undetermined,0,0,0,no,0.0169397635931947,no,0.012916225931917567,no,0.012210913652191506,no,0.011870188282874991,no,0.011582063678171637
1270,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// session-start/post-flush persistent state,no,undetermined,0,0,0,no,0.004520085113550331,no,0.0028411154731452118,no,0.002016325158459446,no,0.002005902335795674,no,0.0019020211686635207
1271,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.07099290193948361,no,0.01289104081641565,no,0.01220122216293205,no,0.011866857127213156,no,0.011587871478232894
1272,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// allow the CollectionSnapshot to be serialized,no,undetermined,0,0,0,no,0.009717166417286788,no,0.009902079677004863,no,0.009399458209399676,no,0.009244401814140803,no,0.008969529605579639
1273,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// first, break down the returns into maps keyed by alias // so that role returns can be more easily resolved to their owners",no,undetermined,0,0,0,no,0.0398341013625956,no,0.012909515870993744,no,0.012234256162425511,no,0.011877953265631574,no,0.011551321483145381
1274,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Add the second join, the one that ends in the destination table.",no,undetermined,0,0,0,no,0.010460741943544452,no,0.005368038122956366,no,0.005118543924523771,no,0.004987227875158065,no,0.004803115804800248
1275,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Generate an 2d array of column names, the first dimension is parallel with the // return types array.  The second dimension is the list of column names for each // type.",no,undetermined,0,0,0,no,0.028598208157514817,no,0.012881884192645417,no,0.012235555775800445,no,0.011853613241196014,no,0.011576905667450305
1276,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ATTRIBUTES USED ONLY DURING FLUSH CYCLE,no,undetermined,0,0,0,no,0.02836533367091287,no,0.012910653121560211,no,0.012235053315133235,no,0.011863835688455364,no,0.011585446552057219
1277,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Create SQL_TOKEN nodes for the columns.,no,undetermined,0,0,0,no,0.0007359759050566912,no,0.012905180429363667,no,0.012207682614369138,no,0.011871960077790884,no,0.01157582739475223
1278,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// ""current"" means the reference that was found during flush() ",no,undetermined,0,0,0,no,0.01207511304928637,no,0.005845013278082433,no,0.0037311034163406112,no,0.003730643551528354,no,0.003568636113892118
1279,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// RDMS has no known variation of a ""SELECT ... FOR UPDATE"" syntax...",no,undetermined,0,0,0,no,0.002588988655824365,no,0.004190067791690359,no,0.003861862409760592,no,0.0037276892401380806,no,0.0035693680872259607
1280,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ignore this row of results! Note the early exit,no,undetermined,0,0,0,no,0.0034340424798192195,no,0.0017487051418660984,no,0.00176743636196378,no,0.0017257194316596387,no,0.0016216093267722778
1281,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// not final-static to avoid possible classcast exceptions if using different oracle drivers.,no,undetermined,0,0,0,no,0.027180824282445643,no,0.012889734356669808,no,0.012236734239843675,no,0.011870764326185274,no,0.011572547274050587
1282,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// found a ctor, but it was not publicly accessible so try to request accessibility",no,undetermined,0,0,0,no,0.004959202421315097,no,0.00399939964721765,no,0.00378680046148485,no,0.0037633888184145947,no,0.003608235258339084
1283,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Add the new node to the map so that we don't create it twice.,no,undetermined,0,0,0,no,0.00879497421740146,no,0.011803206265561387,no,0.011049606657949686,no,0.010532034404470147,no,0.010240177334542673
1284,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		return getFactory().getSettings().getBytecodeProvider().getProxyFactoryFactory().buildProxyFactory();,no,undetermined,0,0,0,no,0.006014545388215525,no,0.006651164633770313,no,0.006235254979041253,no,0.006026545150712337,no,0.005820572968718282
1285,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Oracle driver reports to support getGeneratedKeys(), but they only // support the version taking an array of the names of the columns to // be returned (via its RETURNING clause).  No other driver seems to // support this overloaded version.",no,undetermined,0,0,0,no,0.009349506570587847,no,0.012888184886285426,no,0.012212453654272815,no,0.011842875776309781,no,0.0115800887851303
1286,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//not final because proxy factory creation can fail,no,undetermined,0,0,0,no,0.006676906472380522,no,0.011261875756347905,no,0.01029110313525291,no,0.010057706704233386,no,0.00979957923956809
1287,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Register the FromElement with the FROM clause, now that we have the names and aliases.",no,undetermined,0,0,0,no,0.0033804081864997927,no,0.005715930487767355,no,0.009593898661009,no,0.009443345968082049,no,0.009171496360135227
1288,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// superclass entity-name,no,undetermined,0,0,0,no,0.00552223549721113,no,0.003186048387900292,no,0.002475837973041346,no,0.002320819332009779,no,0.002205352656740484
1289,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// First allow the actual type to control the return value. (the actual underlying sqltype could actually be different),no,undetermined,0,0,0,no,0.02376214826226561,no,0.012890613415987122,no,0.012243421040126257,no,0.011876017239533496,no,0.011578256238885946
1290,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.07099290193948361,no,0.01289104081641565,no,0.01220122216293205,no,0.011866857127213156,no,0.011587871478232894
1291,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// cascade-save to collections AFTER the collection owner was saved,no,undetermined,0,0,0,no,0.01185049542753515,no,0.012895998557062008,no,0.012238696016504192,no,0.011882738996999376,no,0.011584382967953763
1292,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
1293,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// ""pass along"" our initial embedded parameter node(s) to the first generated // sql fragment so that it can be handled later for parameter binding...",no,undetermined,0,0,0,no,0.010845534919491055,no,0.007307551020777365,no,0.006803393195565994,no,0.006745215418936142,no,0.006525872161364016
1294,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// ""loaded"" means the reference that is consistent  // with the current database state",no,undetermined,0,0,0,no,0.012640664885102015,no,0.008041033208972648,no,0.007357748641499268,no,0.0074637624366277995,no,0.0072330102459379824
1295,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// cache the actual id of the object, not the value of the // property-ref, which might not be initialized",no,undetermined,0,0,0,no,0.04223894460629503,no,0.012891667217729823,no,0.012212549511225778,no,0.011849018274403553,no,0.011566249082944836
1296,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//init the aliases, after initing the constructornode",no,undetermined,0,0,0,no,0.002438475007577298,no,0.002253068919886507,no,0.005460067704394056,no,0.0055347227849804614,no,0.005329840959353177
1297,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// You may still have other ResultSets or update counts left to process here  // but you can't do it now or the ResultSet you just got will be closed ,no,undetermined,0,0,0,no,0.0012674231136456605,no,0.0013032979762763251,no,0.0011678559628631132,no,0.0011481398629927112,no,0.0010776186983061605
1298,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.07099290193948361,no,0.01289104081641565,no,0.01220122216293205,no,0.011866857127213156,no,0.011587871478232894
1299,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Multi-param string dialect functions...,no,undetermined,0,0,0,no,0.16518385734718347,no,0.16657974502754253,no,0.1536364128385878,no,0.1484652477903202,no,0.15068533464388223
1300,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// during flush, we navigate the object graph to // collections and decide what to do with them",no,undetermined,0,0,0,no,0.027150153120636164,no,0.01290021960691679,no,0.012218765499555766,no,0.011888194095858862,no,0.011563905047696
1301,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// save() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.00508347199387113,no,0.006333945118327603,no,0.0059331335423456425,no,0.005895776173020649,no,0.00569376545239376
1302,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//collection.clearDirty(),no,undetermined,0,0,0,no,0.008390355054235422,no,0.000481924065794764,no,0.00044701237645993646,no,0.0004425377360588848,no,0.00040038482595588273
1303,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The 'from element' that represents the elements of the collection.,no,undetermined,0,0,0,no,0.003476399398687292,no,0.002068365062127647,no,0.002025217235375949,no,0.001984297788952108,no,0.0018554897672880852
1304,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// legacy behavior (with no abstract attribute specified),no,undetermined,0,0,0,no,0.012294395152917068,no,0.012906365956833102,no,0.012235700879451968,no,0.011879023078019843,no,0.01158260441885283
1305,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Constructors are always considered scalar results.,no,undetermined,0,0,0,no,0.001527009279312783,no,0.003014333078095671,no,0.0028760849204170695,no,0.0028209452732677037,no,0.00269066921762015
1306,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Get ready to start adding nodes.,no,undetermined,0,0,0,no,0.009244097099914752,no,0.010847431794337463,no,0.009776694659241743,no,0.009549292900714402,no,0.009286936500957818
1307,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//use the id column alias,no,undetermined,0,0,0,no,0.03651782442534114,no,0.012904173347126766,no,0.012224266657634987,no,0.011848355700570244,no,0.011578039792566516
1308,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Collection Types:,no,undetermined,0,0,0,no,0.009974640818862667,no,0.0023418496641184235,no,0.0028815782961828344,no,0.002825769111134758,no,0.0026310895143669827
1309,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// #3 - note that this is also true of ""datetime - :param""...",no,undetermined,0,0,0,no,0.239437042171888,no,0.09957132293326755,no,0.012199081637498433,no,0.011844723996033635,no,0.011582204537364407
1310,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//collection.clearDirty(),no,undetermined,0,0,0,no,0.008390355054235422,no,0.000481924065794764,no,0.00044701237645993646,no,0.0004425377360588848,no,0.00040038482595588273
1311,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we don't need to worry about existing version being uninitialized // because this block isn't called by a re-entrant load (re-entrant // loads _always_ have lock mode NONE),no,undetermined,0,0,0,no,0.029808690660072506,no,0.012900400892442668,no,0.012212540674938278,no,0.011854150701489834,no,0.011574134902303034
1312,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//note: this affects the return value!,no,undetermined,0,0,0,no,0.029757568156228632,no,0.012895239220324333,no,0.012234628541657678,no,0.011881220465296523,no,0.01157958851490412
1313,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// isTransactionCallbackRegistered denotes whether any Hibernate // Transaction has registered as a callback against this // JDBCContext; only one such callback is allowed.  Directly // serializing this value causes problems with JDBCTransaction, // or really any Transaction impl where the callback is local // to the Transaction instance itself, since that Transaction // is not serialized along with the JDBCContext.  Thus we // handle that fact here explicitly...",no,undetermined,0,0,0,no,0.045136426193539386,no,0.01289021033696072,no,0.012199177125540328,no,0.011837849586770956,no,0.011581848040624862
1314,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// NOTE : evict() operates locally only (i.e., does not propogate // to any other nodes in the potential cluster).  This is // exactly what is needed when we destroy() here; destroy() is used // as part of the process of shutting down a SessionFactory; thus // these removals should not be propogated",no,undetermined,0,0,0,no,0.10507088547766799,no,0.09792675987667591,no,0.01222218623748996,no,0.011855462618808411,no,0.011582640064658022
1315,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Generate the inner join -- The elements need to be joined to the collection they are in.,no,undetermined,0,0,0,no,0.01504867722703414,no,0.00801464097549628,no,0.007220625743720071,no,0.006989218855636546,no,0.006712319160081197
1316,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// otherwise, perform a ""deep equivalence"" check...",no,undetermined,0,0,0,no,0.0041620157437309525,no,0.0022110575184212627,no,0.0021571126905228374,no,0.0021068458923362496,no,0.001995980428343598
1317,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// might happen with a managed connection,no,undetermined,0,0,0,no,0.052143555192644415,no,0.012914825790571266,no,0.012218979441861016,no,0.011864929706274343,no,0.011578543513034487
1318,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Need to account for allowable '_' within the variant,no,undetermined,0,0,0,no,0.014630795968724108,no,0.012909156113342115,no,0.012238606397025505,no,0.011868237246957616,no,0.011586964113071878
1319,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// for expected parameter type injection, we expect that the lhs represents // some form of property ref and that the children of the in-list represent // one-or-more params.",no,undetermined,0,0,0,no,0.029342746761217446,no,0.01289267400883969,no,0.012246061125007717,no,0.01185305877407963,no,0.011582191758524147
1320,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If there is no WHERE node, make one.",no,undetermined,0,0,0,no,0.006651643549833439,no,0.004651947061562359,no,0.004398706710643182,no,0.004379095035606189,no,0.004202332299783476
1321,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we found it in the temp PC.  Should indicate we are in the midst of processing a result set // containing eager fetches via join fetch,no,undetermined,0,0,0,no,0.014263316081937837,no,0.010177179420338496,no,0.010259156584283991,no,0.010071073137438,no,0.009814045844865638
1322,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Add the type to the list of returned sqlResultTypes.,no,undetermined,0,0,0,no,0.005811413791798783,no,0.005402232718755563,no,0.005092431263613757,no,0.005026776208584811,no,0.00485795956441151
1323,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.002525552164893863,no,0.0035372964829689696,no,0.003319511533314436,no,0.0032615474029665742,no,0.0031159665856848066
1324,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// create one,no,undetermined,0,0,0,no,0.0014483865056120358,no,0.0026741504236425903,no,0.0024732137892567677,no,0.0024106378201630197,no,0.0022888545570986423
1325,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// persists don't cascade to uninitialized collections,no,undetermined,0,0,0,no,0.00551534586016395,no,0.005843917212706518,no,0.005343500622860596,no,0.004995267247970479,no,0.004814097801056739
1326,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//lobs cannot be compared,no,undetermined,0,0,0,no,0.021886491483716106,no,0.012910004247313783,no,0.01223962971986674,no,0.011862048393592258,no,0.011562479862096386
1327,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// this property belongs to the table and it is not specifically // excluded from optimistic locking by optimistic-lock=""false""",no,undetermined,0,0,0,no,0.009859163024473129,no,0.004429464546664988,no,0.004352516813956168,no,0.004314468102963051,no,0.0041320894230697175
1328,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Blobs are ignored by merge(),no,undetermined,0,0,0,no,0.007596444957451937,no,0.012895627972801712,no,0.012203004854500609,no,0.011846061777174613,no,0.011590939089066313
1329,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// HHH-276 : implied joins in a subselect where clause - The destination needs to be added // to the destination's from clause. // Not sure if this is will fix everything, but it works.",no,undetermined,0,0,0,no,0.12730684812338322,no,0.14741627124891787,no,0.14591999882083856,no,0.14358553709794064,no,0.1462549793484891
1330,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//value is the entity name,no,undetermined,0,0,0,no,0.002812628258895416,no,0.0018156142597002298,no,0.00142720368620338,no,0.0013585884760235103,no,0.0012803370239983323
1331,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// handle the (assumed) valid cases: // #1 - the only valid datetime addition synatx is one or the other is a datetime (but not both),no,undetermined,0,0,0,no,0.020446954074095563,no,0.0076450265942210795,no,0.0036122268018813444,no,0.003563061291314308,no,0.0034199480284244606
1332,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//optimization,no,undetermined,0,0,0,no,0.006457879556725965,no,0.005812754199678476,no,0.0047581110243925685,no,0.004628325263329695,no,0.004443553430751094
1333,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the map of batch numbers to EntityInsertAction lists,no,undetermined,0,0,0,no,0.014717097417084511,no,0.01290986471828407,no,0.012210150877239966,no,0.011840513636849521,no,0.01154976743264345
1334,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//optimization //optimization,no,undetermined,0,0,0,no,0.006457879556725965,no,0.005812754199678476,no,0.0047581110243925685,no,0.004628325263329695,no,0.004443553430751094
1335,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we don't need to worry about any condition in the ON clause // here (toFromFragmentString), since anything in the ON condition // is already applied to the whole query",no,undetermined,0,0,0,no,0.01401698885579892,no,0.012912865100991013,no,0.012231861275997352,no,0.011625547405827948,no,0.011335407889857605
1336,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//re-snapshot,no,undetermined,0,0,0,no,0.0030208576379559494,no,0.012888907508844642,no,0.011850312020227821,no,0.01153881933773261,no,0.011275893989608451
1337,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the difficulty here is exactly what do we update in order to // force the version to be incremented in the db...,no,undetermined,0,0,0,no,0.01211933982768852,no,0.006972774999147689,no,0.006190319584777746,no,0.005744528111437421,no,0.00555498293727526
1338,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// for convenience to save some lookups,no,undetermined,0,0,0,no,0.014196689721605421,no,0.012906375017217768,no,0.01224603090121198,no,0.011872898807973568,no,0.011586781629929837
1339,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Regions can get instantiated in the course of normal work (e.g. // a named query region will be created the first time the query is // executed), so suspend any ongoing tx",no,undetermined,0,0,0,no,0.1492226452393709,no,0.10299566211236859,no,0.09712255375781932,no,0.011878529918723959,no,0.011576420934905237
1340,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//NOTE: this is not updated when properties are fetched lazily!,no,undetermined,0,0,0,no,0.02081323262689961,no,0.012913866679227969,no,0.01224195768076721,no,0.011870380020159508,no,0.011597287321239587
1341,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// An ident node can represent an index expression if the ident // represents a naked property ref //      *Note: this makes the assumption (which is currently the case //      in the hql-sql grammar) that the ident is first resolved //      itself (addrExpr -> resolve()).  The other option, if that //      changes, is to call resolve from here; but it is //      currently un-needed overhead.",no,undetermined,0,0,0,no,0.03801049816970214,no,0.012895724823671916,no,0.012235711373676227,no,0.011857918088271748,no,0.0115692619055786
1342,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//EARLY EXIT!,no,undetermined,0,0,0,no,0.003933359283837993,no,0.001778043880411003,no,0.0017387305574731227,no,0.0017057885909706125,no,0.0016140607696130788
1343,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	public List getCollectionAliases() { //		return collectionAliases; //	} // //	/*public List getCollectionOwners() { //		return collectionOwners; //	}*/ // //	public List getCollectionOwnerAliases() { //		return collectionOwnerAliases; //	} // //	public List getCollectionPersisters() { //		return collectionPersisters; //	} // //	public Map getAlias2Persister() { //		return alias2Persister; //	} // //	/*public boolean isCollectionInitializer() { //		return isCollectionInitializer; //	}*/ // ////	public List getPersisters() { ////		return persisters; ////	} // //	public Map getAlias2OwnerAlias() { //		return alias2OwnerAlias; //	} // //	public List getScalarTypes() { //		return scalarTypes; //	} //	public List getScalarColumnAliases() { //		return scalarColumnAliases; //	} // //	public List getPropertyResults() { //		return propertyResults; //	} // //	public List getCollectionPropertyResults() { //		return collectionResults; //	} // // //	public Map getAlias2Return() { //		return alias2Return; //	},no,undetermined,0,0,0,no,0.011860455066941597,no,0.010608846248191932,no,0.009776636313028329,no,0.009515080852164537,no,0.009245283332127102
1344,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//TODO!,no,undetermined,0,0,0,no,0.011915769773668481,no,0.012892946551675156,no,0.012212929575441765,no,0.011854801627810656,no,0.011589831620060054
1345,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//This solution would allow us to eliminate the owner arg to disassemble(), but //what if the collection was null, and then later had elements added? seems unsafe //session.getPersistenceContext().getCollectionEntry( (PersistentCollection) value ).getKey();",no,undetermined,0,0,0,no,0.29462183558859384,no,0.2748391780803853,no,0.27114621947508694,no,0.2606630457856124,no,0.2656205262671648
1346,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//xml is the entity name,no,undetermined,0,0,0,no,0.003730407101119138,no,0.0031179344812817455,no,0.0024598356831260367,no,0.0023265096879899238,no,0.00220954947012406
1347,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//named query parameter,no,undetermined,0,0,0,no,0.03300904468383624,no,0.01290090940083635,no,0.012234611428183781,no,0.011262936311027776,no,0.010968547318617555
1348,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//tolerates nulls,no,undetermined,0,0,0,no,0.00796864043101503,no,0.009451867509243747,no,0.008608259401778732,no,0.008225837396816003,no,0.007967161035822767
1349,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// check to see if our ""propPath"" actually // represents a property on the persister",no,undetermined,0,0,0,no,0.026897922537773122,no,0.011075849420437897,no,0.01171200084354265,no,0.011445197211432527,no,0.011203696158863628
1350,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Add the token to the AST.,no,undetermined,0,0,0,no,0.005898136065613355,no,0.004053523980257798,no,0.0039032967047611866,no,0.003819766666672068,no,0.0036534399401094535
1351,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Use the table fromElement and the property name to get the array of column names.,no,undetermined,0,0,0,no,0.012621515977511256,no,0.007249424018344738,no,0.00679814576919678,no,0.006647048202221723,no,0.006411535288405033
1352,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Set up the cache factory,no,undetermined,0,0,0,no,0.008047268664432465,no,0.007324350307391914,no,0.007068696739691286,no,0.006949867221799619,no,0.006719539906352003
1353,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we need to strip off the embedded parens so that sql-gen does not double these up,no,undetermined,0,0,0,no,0.029448015764246382,no,0.01289163640644789,no,0.012247134148326174,no,0.011865637188610985,no,0.01156948464282626
1354,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//memory optimization,no,undetermined,0,0,0,no,0.028192385748446756,no,0.012890980203890502,no,0.012239949105539652,no,0.011852716971257794,no,0.011562231105548978
1355,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// then handle any user-defined entity modes...,no,undetermined,0,0,0,no,0.01297025019880184,no,0.012642241834644598,no,0.01068132908918993,no,0.01015904488540612,no,0.009890612399364168
1356,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*sqlResultTypeList,*/",no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
1357,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If this is an implied join in a from element, then use the impled join type which is part of the // tree parser's state (set by the gramamar actions).",no,undetermined,0,0,0,no,0.009882732223567762,no,0.0058254326177338105,no,0.005608378915616552,no,0.005537797904638633,no,0.005343232231360484
1358,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// metaType is assumed to be single-column type,no,undetermined,0,0,0,no,0.007486620105042712,no,0.0031022028346747595,no,0.002657795886871431,no,0.002556970783379565,no,0.0024412370045222612
1359,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// End unit of work,no,undetermined,0,0,0,no,0.03013340160752035,no,0.01287995419942576,no,0.012213756596082528,no,0.011849983579070168,no,0.011558902448734611
1360,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ROW ID,no,undetermined,0,0,0,no,0.0033548523132970313,no,0.0016779416181799485,no,0.0015932447576322566,no,0.0015460279212383128,no,0.0014605315860472744
1361,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//MULTITABLES,no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
1362,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//			final List extendsQueue,",no,undetermined,0,0,0,no,0.003934930749772019,no,0.008162143452648013,no,0.007718938151839629,no,0.007555437452838487,no,0.00730754909779472
1363,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Make sure JBC doesn't look one up,no,undetermined,0,0,0,no,0.006075215498160165,no,0.006275869456927432,no,0.00600129905225306,no,0.004951549453670992,no,0.004761445609307005
1364,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Get all the select expressions (that we just generated) and render the select.,no,undetermined,0,0,0,no,0.012178745443538723,no,0.012909930794950692,no,0.010696641169467405,no,0.01025592682200967,no,0.009998508296769359
1365,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
1366,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// visit width-first, then depth",no,undetermined,0,0,0,no,0.0033369433817609538,no,0.0034207317449369973,no,0.0036001033607732428,no,0.0035422822725674446,no,0.0033940553274128924
1367,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If the uresolved property path isn't set yet, just use the property name.",no,undetermined,0,0,0,no,0.03757932728453261,no,0.01289372366563816,no,0.012231508944619121,no,0.011882363060899665,no,0.011559810584978458
1368,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Look through the FromElement's children to find any collections of values that should be fetched...,no,undetermined,0,0,0,no,0.003438239995753685,no,0.002922352669826589,no,0.0028302000012884465,no,0.0025489209898766495,no,0.0024262361500041628
1369,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// identifier-commalist,no,undetermined,0,0,0,no,0.004166841352126509,no,0.0038987812269171552,no,0.003344149529616062,no,0.003351210279362512,no,0.00320304070714836
1370,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//return AssociationType.FOREIGN_KEY_TO_PARENT; //this is better but causes a transient object exception...,no,undetermined,0,0,0,no,0.3174004747390319,no,0.3140477355515335,no,0.30242051817381893,no,0.2935450869842445,no,0.3006068229536485
1371,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// collections of values,no,undetermined,0,0,0,no,0.0023943824673261487,no,0.0015678251664347994,no,0.0014016464784742152,no,0.0013759127328304122,no,0.0012970517845931743
1372,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// copied from Session:,no,undetermined,0,0,0,no,0.04780564725084592,no,0.012906047770731085,no,0.012214067422735689,no,0.011862892787515544,no,0.011578656633575104
1373,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// For an explicit many-to-many relationship, add a second join from the intermediate  // (many-to-many) table to the destination table.  Also, make sure that the from element's  // idea of the destination is the destination table.",no,undetermined,0,0,0,no,0.02288989332278114,no,0.011759214374117265,no,0.011292759950822868,no,0.011164324358560625,no,0.010895331564152412
1374,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this should not happen since the DTD prevents it,no,undetermined,0,0,0,no,0.003171049793335073,no,0.009247810752560379,no,0.008614076375210349,no,0.008389206866658826,no,0.008133753440258094
1375,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Need to parse off the column qualifiers; this is assuming (which is true as of now) // that this is only used from update and delete HQL statement parsing,no,undetermined,0,0,0,no,0.039044211792102185,no,0.012898026614542691,no,0.01220079714912559,no,0.011847982028643787,no,0.011590794810072483
1376,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// the current join represents the join between a many-to-many association table // and its ""target"" table.  Here we need to apply any additional filters // defined specifically on the many-to-many",no,undetermined,0,0,0,no,0.005064662948932837,no,0.002538507267467331,no,0.0024628339177405227,no,0.002429600825951406,no,0.0023118348731553007
1377,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If the from element represents a JOIN_FRAGMENT and it is // a theta-style join, convert its type from JOIN_FRAGMENT // to FROM_FRAGMENT",no,undetermined,0,0,0,no,0.0037130724107272187,no,0.00272350321981409,no,0.0026122164734341184,no,0.0025476963753142978,no,0.002426293282776311
1378,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//check basic level one nullablilty,no,undetermined,0,0,0,no,0.007442337036310323,no,0.010589078983935154,no,0.008567807514650536,no,0.008309214996074446,no,0.008062959718158635
1379,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Add a zero (or quite low) timeout option so we don't block. // Ignore any TimeoutException. Basically we forego caching the // query result in order to avoid blocking. // Reads are done with suspended tx, so they should not hold the // lock for long.  Not caching the query result is OK, since // any subsequent read will just see the old result with its // out-of-date timestamp; that result will be discarded and the // db query performed again.",no,undetermined,0,0,0,no,0.009251682352257387,no,0.010651339808196523,no,0.011593315484077408,no,0.01094939656780061,no,0.010669098495552832
1380,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//values is not null and is checkable, we'll look deeper",no,undetermined,0,0,0,no,0.008925335608566917,no,0.012116761208605258,no,0.00795212923774777,no,0.007024119422149714,no,0.006792109716402809
1381,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Possibly handle :something parameters for the query ?,no,undetermined,0,0,0,no,0.00883420794097366,no,0.007795970281612042,no,0.007510754311043116,no,0.007012463131698797,no,0.006792855682225932
1382,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//for non null args, check for components and elements containing components",no,undetermined,0,0,0,no,0.0025731447100691552,no,0.005045551783781203,no,0.005567316753722467,no,0.005562327711321478,no,0.005390546667382397
1383,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If we want to handle it bidirectional and detached, we also need to load this // collection with an eager outer-join fetch, this time with Criteria and not HQL:",no,undetermined,0,0,0,no,0.010820356657279647,no,0.007342160379824334,no,0.006840735132898742,no,0.00663759731448477,no,0.006286698004977662
1384,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//cache the hashcode,no,undetermined,0,0,0,no,0.013949880000527007,no,0.01183075510412142,no,0.011785329864315757,no,0.011501524207698547,no,0.011217030498493567
1385,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*public PropertyProjection project() {
		return Projections.property(getPropertyName());
	}*/",no,undetermined,0,0,0,no,0.08755978619149828,no,0.012884812380063912,no,0.012223320450937178,no,0.01185271129691805,no,0.011567075579820335
1386,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//persistent collections may have components,no,undetermined,0,0,0,no,0.004168321324903072,no,0.003499058634502532,no,0.0033627158110325246,no,0.0033326390932110913,no,0.003194244105785414
1387,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// We have the JBCWriteMutex, so no other *local* thread will  // be trying to write this key.  // It's possible here some remote thread has come in and // changed the values again, but since we are reading the // values to write to JBC right now, we know we are writing // the latest values; i.e. we don't assume that what we cached // in entry.update() above is what we should write to JBC *now*. // Our write could be redundant, i.e. we are writing what // some remote thread just came in an wrote.  There is a chance  // that yet another remote thread will update us, and we'll then // overwrite that later data in JBC.  But, all remote nodes will // ignore that change in their localCache; the only place it  // will live will be in JBC, where it can only effect the  // initial state transfer values on newly joined nodes  // (i.e. populateLocalCache()).",no,undetermined,0,0,0,no,0.024360961161665674,no,0.012889477582704766,no,0.012218621599092937,no,0.011853679050734622,no,0.011565375919068479
1388,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//test out the optimizer:,no,undetermined,0,0,0,no,0.002425328143784503,no,0.002419380520174551,no,0.00227122265655131,no,0.002245408379653962,no,0.0021323449024968676
1389,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//		registerColumnType( Types.VARCHAR, 16777215, ""mediumtext"" );",no,undetermined,0,0,0,no,0.006616595715557975,no,0.010030482866743599,no,0.009748639926865659,no,0.009776514820424262,no,0.009671757974902936
1390,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// IDENT might be the name of a class.,no,undetermined,0,0,0,no,0.0066959485619427625,no,0.00491329254216786,no,0.005186212906942155,no,0.005156211546621421,no,0.004969082406523693
1391,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Here we don't want to suspend the tx. If we do: // 1) We might be caching query results that reflect uncommitted // changes. No tx == no WL on cache node, so other threads // can prematurely see those query results // 2) No tx == immediate replication. More overhead, plus we // spread issue #1 above around the cluster",no,undetermined,0,0,0,no,0.0922165700501917,no,0.012909913259460299,no,0.012218625645912872,no,0.011856842982134064,no,0.01156607448241707
1392,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//TODO!!!,no,undetermined,0,0,0,no,0.011915769773668481,no,0.012892946551675156,no,0.012212929575441765,no,0.011854801627810656,no,0.011589831620060054
1393,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// for regression testing against output from the old parser... // found it easiest to simply reorder the FromElements here into ascending order // in terms of injecting them into the resulting sql ast in orders relative to those // expected by the old parser; this is definitely another of those ""only needed // for regression purposes"".  The SyntheticAndFactory, then, simply injects them as it // encounters them.",no,undetermined,0,0,0,no,0.02221266554757354,no,0.012913629409768916,no,0.012222141211822076,no,0.011874260950470637,no,0.0115718024104513
1394,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//st.setTimestamp( index,  new Timestamp( cal.getTimeInMillis() ), cal ); //JDK 1.5 only",no,undetermined,0,0,0,no,0.030202739052547965,no,0.012900999098371458,no,0.012249423186652295,no,0.011850571611153476,no,0.011564879431832714
1395,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//arbitrary on clause ignored!!,no,undetermined,0,0,0,no,0.0010576066066132223,no,0.0011451621796783702,no,0.0010944091126036878,no,0.0010755517638554976,no,0.0010072489017165205
1396,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//st.setDate( index,  new Date( cal.getTimeInMillis() ), cal ); //JDK 1.5 only",no,undetermined,0,0,0,no,0.04052882792136702,no,0.012907159961276277,no,0.01224163380429714,no,0.011884433364904542,no,0.01156945997085251
1397,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// from javax.naming.Referenceable,no,undetermined,0,0,0,no,0.02850612321820292,no,0.012909381973859135,no,0.012248838291542143,no,0.011871755496928243,no,0.011588829611533189
1398,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// both are Timestamps,no,undetermined,0,0,0,no,0.0026176411347853547,no,0.002908205263894189,no,0.0027903080231182044,no,0.00271722178756662,no,0.002588156260423022
1399,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// First, collect all of the select expressions. // NOTE: This must be done *before* invoking setScalarColumnText() because setScalarColumnText() // changes the AST!!!",no,undetermined,0,0,0,no,0.02856919696863172,no,0.01291700218077621,no,0.012217887004675609,no,0.011852195976729573,no,0.011568723403602009
1400,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// at least one is a plain old Date,no,undetermined,0,0,0,no,0.005561961804058852,no,0.005763380714400336,no,0.005239003280311348,no,0.005202983097020552,no,0.005003790095388449
1401,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//swallow it (the transaction _was_ successful or successfully rolled back),no,undetermined,0,0,0,no,0.015509301568530465,no,0.00997887241533517,no,0.009159766439587142,no,0.008942847118983417,no,0.008687015983559393
1402,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//check for all components values in the collection,no,undetermined,0,0,0,no,0.0014267021907235428,no,0.0013506028797069265,no,0.001282878753454027,no,0.0012573976804029603,no,0.0011667266726695775
1403,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// after *all* persisters and named queries are registered,no,undetermined,0,0,0,no,0.10640022432283729,no,0.058368748444978386,no,0.012225597870076526,no,0.011865867289671726,no,0.011595081847286737
1404,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//do the test,no,undetermined,0,0,0,no,0.002425328143784503,no,0.002419380520174551,no,0.00227122265655131,no,0.002245408379653962,no,0.0021323449024968676
1405,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// LIMIT support (ala TOP) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.004684134834325092,no,0.00801393349902179,no,0.007489453830476707,no,0.007401097144920717,no,0.0071616550442240665
1406,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If close() is called, guarantee unbind()",no,undetermined,0,0,0,no,0.0020279200807533314,no,0.0018985528025694917,no,0.0017507798183160448,no,0.0017020038250465405,no,0.0016098839760038401
1407,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// or BYTE // or TEXT? // or MONEY,no,undetermined,0,0,0,no,0.008587792475013872,no,0.00847208147903972,no,0.008005801027889859,no,0.00776592898695366,no,0.007524858699125149
1408,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//noop,no,undetermined,0,0,0,no,0.0017911677727020594,no,0.0013427770794955454,no,0.0012729643055016016,no,0.0012721874393281062,no,0.0011958208879469371
1409,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//			        ( implied && DotNode.useThetaStyleImplicitJoins ) ) {,no,undetermined,0,0,0,no,0.006387556501337541,no,0.006017262661846408,no,0.005474547143064347,no,0.005439270191524946,no,0.005253352431157372
1410,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if the corresponding SQL value is NULL, the reader we got is NULL as well",no,undetermined,0,0,0,no,0.0057625673317482605,no,0.004394368740786658,no,0.004180473573379718,no,0.004178744564519382,no,0.004014169705957936
1411,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If there is no data type for this node, and we're at the end of the path (top most dot node), then // this might be a Java constant.",no,undetermined,0,0,0,no,0.008121337632405443,no,0.006981951892386223,no,0.006670474224802003,no,0.0065379603993007025,no,0.006320709800580964
1412,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Fetch Reader content up to the end - and put characters in a StringBuffer,no,undetermined,0,0,0,no,0.09261941261105476,no,0.012885507739336027,no,0.012211449528355867,no,0.011851890202879927,no,0.01156687963123868
1413,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The loop ensures atomicity of the // select + update even for no transaction // or read committed isolation level,no,undetermined,0,0,0,no,0.0029883032929206707,no,0.0024019037640467477,no,0.0021554761671511136,no,0.002145903697689642,no,0.0020363659893107115
1414,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Return StringBuffer content as a large String,no,undetermined,0,0,0,no,0.05580336654516612,no,0.012886242251845927,no,0.012232902537101922,no,0.011853255019595315,no,0.011592494361613815
1415,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The where clause was added to eliminate this statement from Brute Force Searches.,no,undetermined,0,0,0,no,0.06092123501458077,no,0.01289512759611627,no,0.012213608976368898,no,0.011867646742698273,no,0.011592293692756788
1416,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//or Types.LONGVARCHAR?,no,undetermined,0,0,0,no,0.005429278440473833,no,0.005186612027080151,no,0.005624776529339715,no,0.00554180392699176,no,0.0053435533846488215
1417,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.002525552164893863,no,0.0035372964829689696,no,0.003319511533314436,no,0.0032615474029665742,no,0.0031159665856848066
1418,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//TODO,no,undetermined,0,0,0,no,0.011915769773668481,no,0.012892946551675156,no,0.012212929575441765,no,0.011854801627810656,no,0.011589831620060054
1419,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// We ignore minimalPutOverride. JBossCache putForExternalRead is // already about as minimal as we can get; it will promptly return // if it discovers that the node we want to write to already exists,no,undetermined,0,0,0,no,0.0026221328751427973,no,0.0023640168199181495,no,0.0021773570337641213,no,0.0022093972798107437,no,0.0021086552550171416
1420,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Forcefully remove leading ands from where fragments; the grammar will // handle adding them,no,undetermined,0,0,0,no,0.0024100674674115033,no,0.0033007269022395694,no,0.0031821478592363958,no,0.002603235471396764,no,0.0024859272318811477
1421,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// for non-arrays, we don't need to know the element class //elementType.returnedClass();",no,undetermined,0,0,0,no,0.20764792265215254,no,0.2271024374762581,no,0.21341315449999737,no,0.20884447502321715,no,0.21343892848898274
1422,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Chop off the rest of the tree.,no,undetermined,0,0,0,no,0.005817665257875834,no,0.005871110270429971,no,0.005511168589341013,no,0.0053958331679046755,no,0.005197447993925233
1423,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// grab its state from the ResultSet and keep it in the Session // (but don't yet initialize the object itself) // note that we acquire LockMode.READ even if it was not requested,no,undetermined,0,0,0,no,0.00324698395936027,no,0.0026962485378587624,no,0.0025991137484406603,no,0.002453132160312638,no,0.0023225045491660776
1424,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//different nullability rules for pk/fk,no,undetermined,0,0,0,no,0.010618496179056192,no,0.0111182678201,no,0.009840285375223622,no,0.009640740763593851,no,0.00935345725388251
1425,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if the types report logical equivalence, return true...",no,undetermined,0,0,0,no,0.06680294376403162,no,0.012900798392641789,no,0.012245816448341346,no,0.011857348962774551,no,0.011573592230456942
1426,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//cache this,no,undetermined,0,0,0,no,0.006504446831314664,no,0.006340885264563177,no,0.006074192279684877,no,0.005972897412206743,no,0.005759256638084767
1427,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// for a subquery, the alias to use depends on a few things (we // already know this is not an overall SELECT): //      1) if this FROM_ELEMENT represents a correlation to the //          outer-most query //              A) if the outer query represents a multi-table //                  persister, we need to use the given alias //                  in anticipation of one of the multi-table //                  executors being used (as this subquery will //                  actually be used in the ""id select"" phase //                  of that multi-table executor) //              B) otherwise, we need to use the persister's //                  table name as the column qualification //      2) otherwise (not correlated), use the given alias",no,undetermined,0,0,0,no,0.09633831311129297,no,0.012880325754421232,no,0.012213647740083215,no,0.011853279252418705,no,0.011573457920449622
1428,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//only really need new array during semiresolve!,no,undetermined,0,0,0,no,0.08527855885674905,no,0.012900790580996272,no,0.012239147382575916,no,0.011871538852592185,no,0.01156713579727589
1429,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// classic translator does not support collection of ordinal // param metadata,no,undetermined,0,0,0,no,0.1370388799593964,no,0.13455245831503898,no,0.1122083683517132,no,0.10893034346710867,no,0.10894650090779526
1430,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//unwrap it,no,undetermined,0,0,0,no,0.0018371189085422018,no,0.0022552080699153425,no,0.0021372798527921426,no,0.0021056710983656805,no,0.0019940848105468754
1431,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//cache the hashcode,no,undetermined,0,0,0,no,0.013949880000527007,no,0.01183075510412142,no,0.011785329864315757,no,0.011501524207698547,no,0.011217030498493567
1432,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// an unfetched association can only point to // an entity that already exists in the db,no,undetermined,0,0,0,no,0.0007556873321867695,no,0.0005910012993134892,no,0.00050005943287587,no,0.0004977449656766043,no,0.000462028581444204
1433,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// here, we work under the following assumptions: //      ------------ valid cases -------------------------------------- //      1) datetime + {something other than datetime} : always results //              in a datetime ( db will catch invalid conversions ) //      2) datetime - datetime : always results in a DOUBLE //      3) datetime - {something other than datetime} : always results //              in a datetime ( db will catch invalid conversions ) //      ------------ invalid cases ------------------------------------ //      4) datetime + datetime //      5) {something other than datetime} - datetime //      6) datetime * {any type} //      7) datetime / {any type} //      8) {any type} / datetime // doing so allows us to properly handle parameters as either the left // or right side here in the majority of cases",no,undetermined,0,0,0,no,0.016618834340765942,no,0.006007805233207605,no,0.0018802422133402852,no,0.0018303282434211654,no,0.0017400978721477738
1434,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// let the interceptor inspect the instance to decide,no,undetermined,0,0,0,no,0.034085723442622826,no,0.012903801998571267,no,0.012231179794237539,no,0.011862875894748132,no,0.011578468522014563
1435,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*
	 * The types represented in the SQL result set.
	 *
	 * @return The types represented in the SQL result set.
	 */",no,undetermined,0,0,0,no,0.00607471004561337,no,0.004094656585292084,no,0.004862109116404098,no,0.004858829182472796,no,0.004665617623672177
1436,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// let the persister inspect the instance to decide,no,undetermined,0,0,0,no,0.0661462275584448,no,0.012882552567825277,no,0.012240846988490484,no,0.011844903247743899,no,0.011554652943307845
1437,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the CascadingAction contract ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.007288342171757563,no,0.0035633607854488785,no,0.0033898738799391873,no,0.003383150442852579,no,0.0032342688180740675
1438,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//TODO!!!!!!!,no,undetermined,0,0,0,no,0.011915769773668481,no,0.012892946551675156,no,0.012212929575441765,no,0.011854801627810656,no,0.011589831620060054
1439,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// DDL support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.00873554553462725,no,0.008271360384466244,no,0.00772789774728609,no,0.007695256615644991,no,0.007446752757716868
1440,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Create a new FILTERS node as a parent of all filters,no,undetermined,0,0,0,no,0.004013406095718771,no,0.0037701442072407736,no,0.0034476125041593545,no,0.0034639265485264976,no,0.0033086247584125355
1441,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if there is no TM configured, we will not be able to access // the javax.transaction.Transaction object in order to // register a synch anyway.",no,undetermined,0,0,0,no,0.005534251872649903,no,0.00208585462728166,no,0.001654453855818309,no,0.001683368821348627,no,0.0015924130279228212
1442,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
1443,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Establish the region root node with a non-locking data version,no,undetermined,0,0,0,no,0.010058594809989309,no,0.0060669814527473855,no,0.0057236853015054726,no,0.005408824998265929,no,0.005210719863816287
1444,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//public Object instantiate(Object parent, SessionImplementor session) throws HibernateException;",no,undetermined,0,0,0,no,0.023992091297677105,no,0.012919167532864855,no,0.012244539750967379,no,0.011873974556578347,no,0.01158622183374562
1445,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//nothing to do,no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
1446,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//nothing to do,no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
1447,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we use the assumed value, if there is one, to avoid hitting // the database",no,undetermined,0,0,0,no,0.009939780584950616,no,0.005663518586628822,no,0.005100820913776252,no,0.005002313213951972,no,0.004808117936556937
1448,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// context-entity-identifier returns null explicitly if the entity // is not associated with the persistence context; so make some // deeper checks...,no,undetermined,0,0,0,no,0.024463853595403016,no,0.01290452008826525,no,0.008649469937393333,no,0.008525037038519475,no,0.008304740066011727
1449,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//int count = 0;,no,undetermined,0,0,0,no,0.0028549508382704858,no,0.0031761143969121454,no,0.0028754864789276016,no,0.002826921580436442,no,0.0026919653178824137
1450,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// putfield // new value of the field,no,undetermined,0,0,0,no,0.0067531298865197075,no,0.006915226167854694,no,0.006489561974270803,no,0.006347340841902842,no,0.006135083578992381
1451,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//lobs cannot be compared,no,undetermined,0,0,0,no,0.021886491483716106,no,0.012910004247313783,no,0.01223962971986674,no,0.011862048393592258,no,0.011562479862096386
1452,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//not really necessary, I guess...",no,undetermined,0,0,0,no,0.1214288885326011,yes,0.8337629742983045,yes,0.837211761090877,yes,0.8288161965699998,yes,0.8392144859682491
1453,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Clobs are ignored by merge() operation,no,undetermined,0,0,0,no,0.0013452350544265021,no,0.0019603303624338314,no,0.0018274962454248006,no,0.001800047311337238,no,0.0017035039309497312
1454,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//the first key found after the given key,no,undetermined,0,0,0,no,0.003799500295713948,no,0.0038506365972103586,no,0.0037425243525090702,no,0.0036688933450716335,no,0.003513580856124881
1455,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// collections cannot be compared,no,undetermined,0,0,0,no,0.020666002704216965,no,0.010828116125742733,no,0.009612533423573485,no,0.00934864757821666,no,0.009087697508962954
1456,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//remember the uk value,no,undetermined,0,0,0,no,0.004596138483444485,no,0.007373757161575961,no,0.006899522816081485,no,0.006913278353359509,no,0.006691657550445512
1457,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//NOOP,no,undetermined,0,0,0,no,0.0017911677727020594,no,0.0013427770794955454,no,0.0012729643055016016,no,0.0012721874393281062,no,0.0011958208879469371
1458,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//processCollectionProperty(token, q.getCollectionPersister(collectionRole), collectionName);",no,undetermined,0,0,0,no,0.004134230402349919,no,0.0031300713671616165,no,0.003014677887960643,no,0.0029346417606352783,no,0.002795746234619208
1459,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//we must use the ""remembered"" uk value, since it is  //not available from the EntityEntry during assembly",no,undetermined,0,0,0,no,0.008253233407894866,no,0.010851904030001294,no,0.010304151417296351,no,0.010153905777343836,no,0.009863088888248984
1460,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// collections don't dirty an unversioned parent entity,no,undetermined,0,0,0,no,0.043014669696090226,no,0.012916939201126382,no,0.012219282756990505,no,0.011869714202553928,no,0.011579104060822023
1461,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// return false;,no,undetermined,0,0,0,no,0.00332594016901992,no,0.00012114241740030769,no,9.947739265258693e-05,no,9.984860333895903e-05,no,9.017125975887027e-05
1462,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// This just handles a particular case of component // projection, perhaps get rid of it and throw an exception",no,undetermined,0,0,0,no,0.004379963916831323,no,0.01093219924557318,no,0.010233429570709312,no,0.00992502215664576,no,0.009641007355793423
1463,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//NOTE: we avoid joining to the next table if the named property is just the foreign key value,no,undetermined,0,0,0,no,0.02295765409105913,no,0.012905509126333564,no,0.012208551772610616,no,0.011849964436583123,no,0.011579136563263573
1464,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// the key is the owning entity itself, so get the ID from the key",no,undetermined,0,0,0,no,0.006499931951736318,no,0.006371215025939398,no,0.006201941528982809,no,0.005958092710970617,no,0.005745944066968828
1465,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//checkForEnd = false;,no,undetermined,0,0,0,no,0.0036200787377893384,no,0.0010076756249404655,no,0.0007904179960245215,no,0.0008008458778442248,no,0.0007478125446664125
1466,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//ignore subselect keywords,no,undetermined,0,0,0,no,8.808675417030979e-06,no,1.267683486784462e-05,no,1.1778216246408407e-05,no,1.1957045215868319e-05,no,1.0422771845980678e-05
1467,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// copy elements into newly empty target collection,no,undetermined,0,0,0,no,0.002909097761457837,no,0.003308847909762509,no,0.003290255861372078,no,0.0032104085632599735,no,0.0030276678640802812
1468,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//end of array, start filling again from start",no,undetermined,0,0,0,no,0.001803541179579966,no,0.0020662265210368183,no,0.0018865871687039355,no,0.0018556810705570954,no,0.0017554521721393076
1469,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// for a null target, or a target which is the same as the original, we // need to put the merged elements in a new collection",no,undetermined,0,0,0,no,0.001935256807593757,no,0.0012017996264323488,no,0.0010917895262182835,no,0.0010510168872044589,no,0.0009744130052575121
1470,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//we ran out of keys to try,no,undetermined,0,0,0,no,0.002203439879599707,no,0.002446646575248631,no,0.0023505247072391463,no,0.0023763215194596643,no,0.00226321794366017
1471,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// by default just use an unanticipated capacity since we don't // know how to extract the capacity to use from original here...,no,undetermined,0,0,0,no,0.020964859332998822,no,0.012908948290930745,no,0.012224642842202971,no,0.011864647872728593,no,0.011592309942324547
1472,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//the first id found after the given id,no,undetermined,0,0,0,no,0.04779028576785912,no,0.012891271835016043,no,0.012204654491401288,no,0.01185031420779862,no,0.011556134781996978
1473,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//we ran out of ids to try,no,undetermined,0,0,0,no,0.0032140229963878884,no,0.0038012827904624212,no,0.003556000893306561,no,0.0035125786446218677,no,0.003364105539128729
1474,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// DISCRIMINATOR,no,undetermined,0,0,0,no,0.004742980399292193,no,0.005144618038151528,no,0.004831040616159839,no,0.004722825853118072,no,0.004537698436405277
1475,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// get the elements back into the target making sure to handle dirty flag,no,undetermined,0,0,0,no,0.020428525790567274,no,0.012889331231235977,no,0.012221401858446243,no,0.011844852201612415,no,0.011574681467768579
1476,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// check if collection is currently being loaded,no,undetermined,0,0,0,no,0.047271750875849644,no,0.012889849628061296,no,0.012225749410646723,no,0.011867298368126812,no,0.011596181701189067
1477,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// check if it is already completely loaded, but unowned",no,undetermined,0,0,0,no,0.03335618254051688,no,0.01291231508808319,no,0.01220547181203067,no,0.011857097579231554,no,0.01157631491609222
1478,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// initialize this collection,no,undetermined,0,0,0,no,0.003348603288811909,no,0.0009891645365067198,no,0.0009319425561006314,no,0.0009063817050819538,no,0.0008289185007431596
1479,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//TODO!!!!!!!,no,undetermined,0,0,0,no,0.011915769773668481,no,0.012892946551675156,no,0.012212929575441765,no,0.011854801627810656,no,0.011589831620060054
1480,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// create a new collection wrapper, to be initialized later",no,undetermined,0,0,0,no,0.04238306119825056,no,0.012921078365785434,no,0.012235641772423651,no,0.011867665528255307,no,0.011590846223484988
1481,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Some JDBC drivers erroneously return an empty array here for a null DB value :/,no,undetermined,0,0,0,no,0.0045563932038745125,no,0.0066806444199530605,no,0.006730526528950134,no,0.00663091714451597,no,0.006410156409433187
1482,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//cannot batch fetch by unique key (property-ref associations),no,undetermined,0,0,0,no,0.0067309210332452026,no,0.0047899473961410645,no,0.004268119493352246,no,0.004185124887551449,no,0.004027437089124024
1483,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we already know current is not null...,no,undetermined,0,0,0,no,0.03800830624680872,no,0.012904096000472983,no,0.01222936185276326,no,0.011863631713287229,no,0.011560887927569869
1484,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//the owner of the association is not the owner of the id,no,undetermined,0,0,0,no,0.003870624806864531,no,0.0059206472588628125,no,0.006640611552641427,no,0.006702748164442298,no,0.006507533027172941
1485,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ----------------------------------------------------------- Constructors,no,undetermined,0,0,0,no,0.007409232495244835,no,0.009787588377173218,no,0.009216145172210916,no,0.008938086168066899,no,0.008680296626478897
1486,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ----------------------------------------------------- Instance Variables,no,undetermined,0,0,0,no,0.00017256883594254932,no,0.0003619012213653166,no,0.00033259466915108927,no,0.00032815050732306803,no,0.00030206107771210374
1487,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// --------------------------------------------------------- Public Methods,no,undetermined,0,0,0,no,0.011915436012579468,no,0.012890715509139268,no,0.012241013181480905,no,0.011860152204013583,no,0.011584455704832354
1488,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Compare the two maps for equality,no,undetermined,0,0,0,no,0.010200677504151883,no,0.009332580467008019,no,0.008791615043087803,no,0.008718844196884519,no,0.00846487777790801
1489,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Simple tests that require no synchronization,no,undetermined,0,0,0,no,0.006133706182593873,no,0.004375503183003903,no,0.003959955691596828,no,0.0038765292274211263,no,0.0037084547530097647
1490,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//Sybase fail if we don't do that, sigh...",no,undetermined,0,0,0,no,0.004575488048712071,no,0.0031303767112305543,no,0.002864950234481109,no,0.0026321843892503096,no,0.0025065842963635687
1491,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// stream closed in the finally,no,undetermined,0,0,0,no,0.0010826676843775432,no,0.0013271112757686494,no,0.0012337640312085312,no,0.0012030796647862837,no,0.0011317069056533855
1492,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// release the jdk internal caches everytime to ensure this // plays nicely with destroyable class-loaders,no,undetermined,0,0,0,no,0.04158576963645062,no,0.012904325573334013,no,0.012203801388265621,no,0.01187344732749869,no,0.01156560565994847
1493,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// release the jdk internal caches everytime to ensure this // plays nicely with destroyable class-loaders,no,undetermined,0,0,0,no,0.04158576963645062,no,0.012904325573334013,no,0.012203801388265621,no,0.01187344732749869,no,0.01156560565994847
1494,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// try to ""pretty print"" it",no,undetermined,0,0,0,no,0.01068383802224362,no,0.0097179310706508,no,0.008930360352032554,no,0.008946908165679864,no,0.008704080546369373
1495,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// otherwise, just dump it",no,undetermined,0,0,0,no,0.005001247183621743,no,0.006310374166221761,no,0.006001291512770436,no,0.005796427182427431,no,0.005584157128620351
1496,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//its an interface so we can't really tell anything...,no,undetermined,0,0,0,no,0.039974564731610394,no,0.012924156497097244,no,0.012210364371296007,no,0.011853454370260023,no,0.011564512742119488
1497,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//its an interface so we can't really tell anything...,no,undetermined,0,0,0,no,0.039974564731610394,no,0.012924156497097244,no,0.012210364371296007,no,0.011853454370260023,no,0.011564512742119488
1498,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// use default behavior,no,undetermined,0,0,0,no,0.006610672849522247,no,0.012608794631769848,no,0.012232849628867257,no,0.011884021581858384,no,0.011579226397086152
1499,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//NOTE: early return,no,undetermined,0,0,0,no,0.01829546526566234,no,0.007268133679273271,no,0.007111152475711047,no,0.006708120303636528,no,0.006460098492314722
1500,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we want to be able to just use the defaults, // if JNDI environment properties are not supplied // so don't put null in anywhere",no,undetermined,0,0,0,no,0.0029583152507005788,no,0.004371061978257331,no,0.004110472172739285,no,0.003946421685284591,no,0.003789753255013578
1501,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Clone //-----------------------------------------------------------------------,no,undetermined,0,0,0,no,0.0011670128841225974,no,0.0011039408136273461,no,0.001054680060001992,no,0.0010341906435700889,no,0.000970600617228755
1502,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Serialize //-----------------------------------------------------------------------,no,undetermined,0,0,0,no,0.003036826847407568,no,0.0029638794571144648,no,0.002878664386265929,no,0.0028187111179263204,no,0.0026846860379668744
1503,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// warning: can cause a recursive calls! (proxy initialization),no,undetermined,0,0,0,no,0.007102609657485888,no,0.005420520083996476,no,0.005005194867857066,no,0.004903848578533801,no,0.004718525919084568
1504,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// stream closed in the finally,no,undetermined,0,0,0,no,0.0010826676843775432,no,0.0013271112757686494,no,0.0012337640312085312,no,0.0012030796647862837,no,0.0011317069056533855
1505,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* static methods only - hide constructor */,no,undetermined,0,0,0,no,0.006114283830744178,no,0.00744369869869356,no,0.007031503596109422,no,0.006866650999553895,no,0.006644663672871172
1506,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*&& !('_'==character)*/,no,undetermined,0,0,0,no,0.0025844177514315345,no,0.003624037321522975,no,0.003376600205212317,no,0.0033737522956431647,no,0.0032274927861660986
1507,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// returnign null!,no,undetermined,0,0,0,no,0.005972060916006604,no,0.004287374153966625,no,0.0040748026689607485,no,0.003950925837839522,no,0.0037846645478364703
1508,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// returnign null!,no,undetermined,0,0,0,no,0.005972060916006604,no,0.004287374153966625,no,0.0040748026689607485,no,0.003950925837839522,no,0.0037846645478364703
1509,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// includes last '.',no,undetermined,0,0,0,no,0.010549693175681019,no,0.011355000159219837,no,0.01087578849943663,no,0.010514346878076366,no,0.010267180601479048
1510,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// +1 to include the following '.',no,undetermined,0,0,0,no,0.0068157210115911086,no,0.005957786592094635,no,0.0056568911586418425,no,0.005309966943554951,no,0.005116200834762282
1511,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// first time we find match!,no,undetermined,0,0,0,no,0.002655006552481402,no,0.0030407660556636454,no,0.0028918315413083784,no,0.00264050444673749,no,0.002511869626330437
1512,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// entityNames may now include slashes for the representations //classname may be an inner class,no,undetermined,0,0,0,no,0.010726261809747326,no,0.011963404777957817,no,0.011184895108900092,no,0.010502895687344286,no,0.010226684254172965
1513,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// wrapped iterators,no,undetermined,0,0,0,no,0.02934638615892886,no,0.01287692403772828,no,0.012230671648249104,no,0.011856084374458203,no,0.011588186155445537
1514,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// index of current iterator in the wrapped iterators array,no,undetermined,0,0,0,no,0.021661993210278105,no,0.011193506151976012,no,0.00879227227418492,no,0.008561168671880082,no,0.008313868049323506
1515,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the current iterator,no,undetermined,0,0,0,no,0.005648992654856021,no,0.0021575647916749485,no,0.0017289091904556812,no,0.0016939907852503613,no,0.001600789052044053
1516,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the last used iterator,no,undetermined,0,0,0,no,0.0765399897359669,no,0.0128804180440361,no,0.01223893432744933,no,0.011852611804873134,no,0.011570546069711474
1517,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//it was a boolean expression,no,undetermined,0,0,0,no,0.0005389373690522742,no,0.0004400709528656947,no,0.0003932589833589384,no,0.0003800319829917123,no,0.00035063871646505093
1518,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// call this before any Iterator method to make sure that the current Iterator // is not exhausted,no,undetermined,0,0,0,no,0.02878646708394494,no,0.012905552690006466,no,0.011561732660661475,no,0.011266329714489183,no,0.01098928417519968
1519,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//doable if needed,no,undetermined,0,0,0,yes,0.9923556558096381,yes,0.9904118614038694,yes,0.9906460363522566,yes,0.9899307783205371,yes,0.9911018348411583
1520,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// set last used iterator here, in case the user calls remove // before calling hasNext() or next() (although they shouldn't)",no,undetermined,0,0,0,no,0.22712144301640377,no,0.16980877923558402,no,0.1594639125436244,no,0.1553991637594512,no,0.15794644189302814
1521,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// peek ahead,no,undetermined,0,0,0,no,0.0005146804939925531,no,0.0004037334309906869,no,0.0003727790545314646,no,0.00036647667819218125,no,0.00033750371875817555
1522,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if we reach the end of the string w/o finding the // matching end, that is an exception",no,undetermined,0,0,0,no,0.005824637990755083,no,0.007456379871152238,no,0.006980587513724601,no,0.006817792742591353,no,0.0065909637396461065
1523,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// there were no queued additions // and the role has a cache,no,undetermined,0,0,0,no,0.007018426205689785,no,0.006123012125940759,no,0.0058303618044916565,no,0.005802493792434655,no,0.005597778377927515
1524,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Print page,no,undetermined,0,0,0,no,0.011831714731202292,no,0.012488005615915922,no,0.011579962745755786,no,0.011261096256241374,no,0.010985392584722175
1525,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// and this is not a forced initialization during flush,no,undetermined,0,0,0,no,0.00887342428670839,no,0.006126451925632252,no,0.0039219281873761535,no,0.0038139077649520605,no,0.003651998491054918
1526,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we have a placeholder, spin forward till we find the end",no,undetermined,0,0,0,no,0.005346244020088067,no,0.008921277340911941,no,0.008490088088880363,no,0.008265945086291747,no,0.008013026948933459
1527,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// make sure spinning forward did not put us past the end of the buffer...,no,undetermined,0,0,0,no,0.014785825884013871,no,0.012902855439327314,no,0.012236134592710056,no,0.011867429743683575,no,0.011591426518606266
1528,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// First, try to locate this resource through the current // context classloader.",no,undetermined,0,0,0,no,0.012104224949806373,no,0.010652123848075694,no,0.010270741111604795,no,0.0100403238844937,no,0.009777623828482056
1529,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Next, try to locate this resource through this class's classloader",no,undetermined,0,0,0,no,0.015809275618742003,no,0.012895091680449618,no,0.012221292561542434,no,0.011848453718393648,no,0.011574429674927045
1530,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Next, try to locate this resource through the system classloader",no,undetermined,0,0,0,no,0.011280795198910922,no,0.009309524442883283,no,0.008820278207854474,no,0.008620251465294892,no,0.008376242341665167
1531,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Anywhere else we should look?,no,undetermined,0,0,0,no,0.0008786090568226188,no,0.002225558747766799,no,0.00205776378693476,no,0.0012386694243727728,no,0.0011636319149073298
1532,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// would need an IdentitySet for this!,no,undetermined,0,0,0,no,0.011917433571453747,no,0.012888510212936542,no,0.012208340727002486,no,0.011848497764482694,no,0.01155120591683537
1533,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Arrays.asList doesn't do primitive arrays,no,undetermined,0,0,0,no,0.019610086874054383,no,0.012898303283665806,no,0.012208064157177996,no,0.011866304801756657,no,0.011578443031909231
1534,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_0,no,undetermined,0,0,0,no,0.004742980399292193,no,0.005144618038151528,no,0.004831040616159839,no,0.004722825853115608,no,0.004537698436407518
1535,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//faster?,no,undetermined,0,0,0,no,0.09739109813880766,no,0.01288612915785727,no,0.012217840720752302,no,0.01185604625049495,no,0.011553154236800553
1536,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//pass the entity-name, if not a collection-id",no,undetermined,0,0,0,no,0.015345507788622035,no,0.007424914493858708,no,0.006563399334463142,no,0.005983466654714968,no,0.0056980753164617825
1537,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// right represents a joins originating from left; or // both right and left reprersent joins originating from the same FromElement,no,undetermined,0,0,0,no,0.008169237519489595,no,0.012902036970315153,no,0.012218072208668926,no,0.011854473562173532,no,0.011575166533411438
1538,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the name of a class,no,undetermined,0,0,0,no,0.00230289443922822,no,0.002008440284236993,no,0.0018916013227504216,no,0.0018457334147595165,no,0.001752469061333968
1539,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Its the listener class name,no,undetermined,0,0,0,no,0.013521652944478602,no,0.012892988926103107,no,0.01223731800170874,no,0.011858447670329803,no,0.01157032427208351
1540,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//allow 9,8,7,6,5,4,3,2,1",no,undetermined,0,0,0,no,0.009069219227138381,no,0.009407505500269697,no,0.008831043335882372,no,0.008803401718507882,no,0.008543311460777678
1541,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// default to element set if no elements() specified,no,undetermined,0,0,0,no,0.0006899954610144383,no,0.0008232279188160519,no,0.0007487132934966079,no,0.0007454407461901768,no,0.0006966540320242865
1542,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// look for the instance by uuid,no,undetermined,0,0,0,no,0.005181967190366013,no,0.005432484793085815,no,0.005239654979014783,no,0.0043595782514295345,no,0.004185492870747349
1543,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// first, lets determine whether to apply cglib or javassist based instrumentation...",no,undetermined,0,0,0,no,0.007158042111664184,no,0.008724482052124312,no,0.007057150740182529,no,0.006993600919988326,no,0.006780881553746242
1544,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Make sure we don't override previous set values,no,undetermined,0,0,0,no,0.004226671647628165,no,0.0037184855096640975,no,0.0034603304611286133,no,0.003157363292119983,no,0.0030167672401584574
1545,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//entirely optional!!,no,undetermined,0,0,0,no,0.014549106470660203,no,0.01290311370566401,no,0.009418564389617134,no,0.00949185937703287,no,0.00924714781796601
1546,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Its the listener instance (or better be),no,undetermined,0,0,0,no,0.23205724817521545,no,0.2698153876847933,no,0.2598479482879962,no,0.2501400426683368,no,0.25589407469565817
1547,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//context.unbind(boundName);,no,undetermined,0,0,0,no,0.007731244195290261,no,0.007120217907875222,no,0.006684990936544727,no,0.00650684204324049,no,0.006289652473138214
1548,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//readResolveObject,no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
1549,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//cfg.setProperty(""hibernate.show_sql"", ""true"");",no,undetermined,0,0,0,no,0.006564322390807781,no,0.012904113475879447,no,0.012214549477422043,no,0.011861397203142362,no,0.011573818328422332
1550,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Defensive, convenience methods",no,undetermined,0,0,0,no,0.0032325958836713258,no,0.003010243100967441,no,0.0027748819917120036,no,0.00269921029001135,no,0.002575920978076682
1551,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Make sure you log the exception, as it might be swallowed",no,undetermined,0,0,0,no,0.001814380360160629,no,0.002689991471178555,no,0.0024396201976336364,no,0.0023976169944429247,no,0.00227556971611805
1552,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Begin unit of work,no,undetermined,0,0,0,no,0.022432003566140436,no,0.012667785595712598,no,0.012064623750435922,no,0.011732105111342508,no,0.011417032527857212
1553,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Write HTML header,no,undetermined,0,0,0,no,0.0025709644591568733,no,0.002434846956084022,no,0.0022344347217405267,no,0.002197358187459065,no,0.0020934825547783437
1554,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Handle actions,no,undetermined,0,0,0,no,0.0055866211932543665,no,0.006259087799211319,no,0.006091487678664367,no,0.005992486433081785,no,0.005777580424224323
1555,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Start the session to be used for this request,no,undetermined,0,0,0,no,0.010393874928004743,no,0.007673691268498086,no,0.0072140816683049355,no,0.007094624575282547,no,0.006860916247606145
1556,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// cleanup code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.059850148726665026,no,0.012906156971067447,no,0.012233852514153811,no,0.011869069867344765,no,0.011576357493411816
1557,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// make the session available to the session factory's ""current context""",no,undetermined,0,0,0,no,0.022949475673169073,no,0.012920327159257996,no,0.012241977688994245,no,0.011867290326847682,no,0.011587856463942784
1558,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// remove session from ""current context""",no,undetermined,0,0,0,no,0.011962087691287064,no,0.007974680991243724,no,0.0077860131072373506,no,0.007605787578075375,no,0.007370306433524815
1559,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Eager fetch the collection so we can use it detached,no,undetermined,0,0,0,no,0.01720905594525905,no,0.01039564321442272,no,0.009979592171244925,no,0.009827296698755908,no,0.009302248288008184
1560,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*
        Event anEvent = (Event) session
                .createCriteria(Event.class).setFetchMode(""participants"", FetchMode.JOIN)
                .add( Expression.eq(""id"", eventId) )
                .uniqueResult(); // Eager fetch the colleciton so we can use it detached
        */",no,undetermined,0,0,0,no,0.03311003567379454,no,0.012905854140736509,no,0.012229381317930579,no,0.011851082864223938,no,0.011593296500739904
1561,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// End of first unit of work,no,undetermined,0,0,0,no,0.03013340160752035,no,0.01287995419942576,no,0.012213756596082528,no,0.011849983579070168,no,0.011558902448734611
1562,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// or bidirectional safety method, setting both sides: aPerson.addToEvent(anEvent);",no,undetermined,0,0,0,no,0.0011427559773733405,no,0.0010257562921771228,no,0.0009938410687832903,no,0.0009815519890586058,no,0.0009221897056981552
1563,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Begin second unit of work,no,undetermined,0,0,0,no,0.02627966893907852,no,0.012893117728659077,no,0.0122314622667558,no,0.011880648956209116,no,0.011559442937778268
1564,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Reattachment of aPerson,no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
1565,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The getEmailAddresses() might trigger a lazy load of the collection,no,undetermined,0,0,0,no,0.04068028069797427,no,0.012907527454483484,no,0.012244832099438316,no,0.011839462715822778,no,0.011579243437776556
1566,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// We need our tm, so get it now and avoid doing other work // if there is a problem",no,undetermined,0,0,0,no,0.24565152400005583,no,0.2249843843610161,no,0.2113317729891895,no,0.20325905629577398,no,0.2073714182632004
1567,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Don't hold the JBC node lock throughout the tx, as that // prevents reads and other updates",no,undetermined,0,0,0,no,0.006626536167048995,no,0.006123612562534937,no,0.006098043999746186,no,0.005795145192999891,no,0.005582657030959496
1568,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// JBC put a version in the node when it created as part of // some internal operation. We are always newer, but if // the JBC version is > 1 something odd has happened",no,undetermined,0,0,0,no,0.004365485315916985,no,0.0038621918467966897,no,0.0036937890917526127,no,0.0036092182960859066,no,0.0034596768078690673
1569,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Not null if the Isolation level has been specified in the configuration file. // Otherwise, it is left to the Driver's default value.",no,undetermined,0,0,0,no,0.005150670603277429,no,0.006353412245387505,no,0.006280393039673266,no,0.00598090024471671,no,0.005762916956685729
1570,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Configured outside of Hibernate (i.e. Servlet container, or Java Bean Container // already has Proxool pools running, and this provider is to just borrow one of these",no,undetermined,0,0,0,no,0.006550211307865203,no,0.009176962594423129,no,0.007550079137786702,no,0.006237187067334935,no,0.006022636886393263
1571,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// loading collection xrefs ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.008308533621781534,no,0.0018365781901133948,no,0.001781168744257194,no,0.001815664850851041,no,0.0016866027185144297
1572,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Collection load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.015267621235926315,no,0.00872156014453001,no,0.0029701733345109146,no,0.0028956613654939627,no,0.002590398110966223
1573,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*package*/,no,undetermined,0,0,0,no,0.002544021585726736,no,0.002756752457787323,no,0.002600423329497448,no,0.0025611192192290452,no,0.0024390968529185387
1574,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the cache of the actual plans...,no,undetermined,0,0,0,no,0.0038305022676738106,no,0.00283485061630951,no,0.0027286338569512806,no,0.002753865761999054,no,0.0026249344253208343
1575,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// (AS is always optional, for consistency with SQL/OQL)",no,undetermined,0,0,0,no,0.0017557963167926054,no,0.0003310110173104596,no,0.0002984275149237574,no,0.0002886512437922584,no,0.00026488054201855184
1576,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*package*/,no,undetermined,0,0,0,no,0.002544021585726736,no,0.002756752457787323,no,0.002600423329497448,no,0.0025611192192290452,no,0.0024390968529185387
1577,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// assumes that types are all of span 1,no,undetermined,0,0,0,no,0.0005246741771731113,no,0.0005708681387498006,no,0.000564782459465381,no,0.0005640503951658663,no,0.0005236586144779642
1578,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// process the ""new"" HQL style where aliases are assigned // _after_ the class name or path expression ie. using // the AS construction",no,undetermined,0,0,0,no,0.008565781769283866,no,0.004534483541015409,no,0.006093968835620932,no,0.005739430171951182,no,0.005539864494691267
1579,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// is a primitive type // invokespecial,no,undetermined,0,0,0,no,0.002593602461181509,no,0.002707612211154895,no,0.0025662762845468025,no,0.0024946235281826843,no,0.002372214997955011
1580,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Start performing the updates,no,undetermined,0,0,0,no,0.002998443609314004,no,0.002887207997471547,no,0.00273476458487317,no,0.00266183931841619,no,0.0025277595472055457
1581,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// array of primitive type // do nothing,no,undetermined,0,0,0,no,0.0033851746521173093,no,0.002783705996741997,no,0.002452789026702661,no,0.00239018375448324,no,0.002271026796243079
1582,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// jdbc params are 1-based,no,undetermined,0,0,0,no,0.007414126753977288,no,0.012888910800110806,no,0.012217990364693353,no,0.011887141212494207,no,0.011582641746718476
1583,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// don't care...,no,undetermined,0,0,0,no,0.00803492417806914,no,0.005854011562054773,no,0.005455594799199837,no,0.004364624317330504,no,0.00418017427851571
1584,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// on the inverse, it makes sense that if a ThreadLocalSessionContext- // bound session then gets deserialized to go ahead and re-bind it to // the ThreadLocalSessionContext session map.",no,undetermined,0,0,0,no,0.021206902003779938,no,0.01290865123140396,no,0.012245779057941858,no,0.011875429059205104,no,0.011579242787984346
1585,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Recognition code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.005322818989489336,no,0.004835900231312182,no,0.004630894903068446,no,0.004507952938976827,no,0.004323638190192729
1586,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// handle a path expression or class name that // appears at the start, in the ""new"" HQL // style or an alias that appears at the start // in the ""old"" HQL style",no,undetermined,0,0,0,no,0.1354238058261155,no,0.19477112838608227,no,0.1856852270823997,no,0.17504291905944758,no,0.17870802224071614
1587,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//important: reuse the same event instances for performance!,no,undetermined,0,0,0,no,0.028658189261738607,no,0.012897620386278527,no,0.012214583147621371,no,0.01188074417293616,no,0.011551599320575364
1588,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// don't care...,no,undetermined,0,0,0,no,0.00803492417806914,no,0.005854011562054773,no,0.005455594799199837,no,0.004364624317330504,no,0.00418017427851571
1589,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// don't care about other param types here, just those explicitly user-defined...",no,undetermined,0,0,0,no,0.09050147492865712,no,0.012891851149704966,no,0.012199721474220339,no,0.01184312426727312,no,0.011560109186729223
1590,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//handle <=, >=, !=, is not, not between, not in",no,undetermined,0,0,0,no,0.00380972186470749,no,0.0040421916373761186,no,0.0038002353840488555,no,0.0037443816336313706,no,0.003579565441048384
1591,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// jdbc params are 1-based,no,undetermined,0,0,0,no,0.007414126753977288,no,0.012888910800110806,no,0.012217990364693353,no,0.011887141212494207,no,0.011582641746718476
1592,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// named parameter,no,undetermined,0,0,0,no,0.040272491592828044,no,0.012921422178966656,no,0.012222293544690462,no,0.01188385148342789,no,0.011578130509251876
1593,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// could be either an ordinal or JPA-positional parameter,no,undetermined,0,0,0,no,0.006571134122244571,no,0.006005939194177984,no,0.005690979087326818,no,0.005648523519637671,no,0.005439488838792587
1594,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// strip the "" where """,no,undetermined,0,0,0,no,0.0045669142760727775,no,0.0032723836267844835,no,0.003068548146232649,no,0.0030023877298925054,no,0.0028664360871446235
1595,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// a peek ahead showed this as an JPA-positional parameter,no,undetermined,0,0,0,no,0.002127409310466578,no,0.0017749812893334044,no,0.0016700927800981666,no,0.0016469828785444249,no,0.0015544291571352416
1596,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// make sure this ""name"" is an integral",no,undetermined,0,0,0,no,0.004418384877521934,no,0.003737049641830734,no,0.003511933382465766,no,0.0034372781654819187,no,0.0032826889531519833
1597,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// at the very least cleanup the data :),no,undetermined,0,0,0,no,0.020595399295945144,no,0.012888104011961256,no,0.012221751328299732,no,0.011842085745626611,no,0.011578872470180914
1598,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//60 seconds,no,undetermined,0,0,0,no,0.006932760013743887,no,0.007086623194769695,no,0.00667432624625728,no,0.006475552481788318,no,0.006252848037954349
1599,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//cannot be instantiated,no,undetermined,0,0,0,no,0.0026280963041377292,no,0.0017434143724320062,no,0.0016400086971164797,no,0.001239658441787511,no,0.0011628505283393254
1600,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// transfer an explicitly defined entity name // handle the lazy attribute,no,undetermined,0,0,0,no,0.03214101015274442,no,0.012909331569405463,no,0.012217831579708717,no,0.011844899742197957,no,0.011570868562983378
1601,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//keep the behavior consistent even for boundary usages,no,undetermined,0,0,0,no,0.019279534867212664,no,0.012909462545429394,no,0.012221097310351078,no,0.011841065661390917,no,0.011582848840268063
1602,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//keep the behavior consistent even for boundary usages,no,undetermined,0,0,0,no,0.019279534867212664,no,0.012909462545429394,no,0.012221097310351078,no,0.011841065661390917,no,0.011582848840268063
1603,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// perform the actual work,no,undetermined,0,0,0,no,0.04429816015433467,no,0.012900359564750788,no,0.012218050656209452,no,0.011848076764981216,no,0.01155778727820593
1604,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ignore,no,undetermined,0,0,0,no,0.0003963947956631522,no,0.0005033798635581664,no,0.0004702444207308477,no,0.0004640531103833746,no,0.0004297751119298306
1605,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//do the failfast put outside the scope of the JTA txn,no,undetermined,0,0,0,no,0.01627214225760925,no,0.012910415586721815,no,0.011227424905835212,no,0.00482678829829647,no,0.00463740905735276
1606,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// get meta's from // <joined-subclass>,no,undetermined,0,0,0,no,0.02401555749964108,no,0.010164486919437483,no,0.00993562308127708,no,0.00969562013382644,no,0.009441358633039562
1607,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//ignore!,no,undetermined,0,0,0,no,0.0003963947956631522,no,0.0005033798635581664,no,0.0004702444207308477,no,0.0004640531103833746,no,0.0004297751119298306
1608,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// parameters on the property mapping should // override parameters in the typedef,no,undetermined,0,0,0,no,0.002945545393923425,no,0.002789293050028865,no,0.002637429729639559,no,0.0025895245046603584,no,0.002471665047902464
1609,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//NOTE SPECIAL CASE: // default to join and non-lazy for the ""second join"" // of the many-to-many",no,undetermined,0,0,0,no,0.008725041998880372,no,0.005548713125238801,no,0.005391658741424985,no,0.0052661804104870156,no,0.005059806516176006
1610,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// create the node initially with the param name so that it shows // appropriately in the ""original text"" attribute",no,undetermined,0,0,0,no,0.06671673435669961,no,0.012896739379593021,no,0.012220057256361853,no,0.011841786624219012,no,0.011561807226151842
1611,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// DYNAMIC INSERT,no,undetermined,0,0,0,no,0.0018902379154814286,no,0.0023139669536481004,no,0.002230535550233107,no,0.002213722809448391,no,0.0020993311964141986
1612,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// so we ""clock over"" on the first invocation",no,undetermined,0,0,0,no,0.0042657909471314715,no,0.005170798502587118,no,0.004841919613474505,no,0.004708574387259039,no,0.00452184260788428
1613,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// state ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0006883474976273243,no,0.0006486780640162732,no,0.0006280161981431288,no,0.000620429738036208,no,0.0005762773060012992
1614,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// finally handle the exception,no,undetermined,0,0,0,no,0.006307095355612424,no,0.009660318710095183,no,0.009084391892650864,no,0.008854925809535022,no,0.0085998667810008
1615,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// a ""detached"" collection that belonged to a different entity",no,undetermined,0,0,0,no,0.011053636808534845,no,0.008563220162926015,no,0.006946583541024158,no,0.006457192145701299,no,0.006139319359328018
1616,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	void setComponentTuplizerFactory(ComponentTuplizerFactory componentTuplizerFactory) { //		this.componentTuplizerFactory = componentTuplizerFactory; //	},no,undetermined,0,0,0,no,0.0025560083343246116,no,0.003109499029298935,no,0.002889725302271553,no,0.002873212672217819,no,0.002741297142645441
1617,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//element //index -> id,no,undetermined,0,0,0,no,0.004725708297005655,no,0.006452113788086854,no,0.00593502287151535,no,0.005870641850018242,no,0.00566954866906406
1618,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// note that it might be better to iterate the snapshot but this is safe, // assuming the user implements equals() properly, as required by the Set // contract!",no,undetermined,0,0,0,no,0.06931404881828708,no,0.012911443343568432,no,0.0121992275007572,no,0.011843321149875059,no,0.011575787801235662
1619,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// collections detect changes made via their public interface and mark // themselves as dirty as a performance optimization,no,undetermined,0,0,0,no,0.11358982622143306,no,0.09838162491967586,no,0.012209320912993638,no,0.011874100359615393,no,0.011577016102542678
1620,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//saveOrUpdateCopy() is deprecated!,no,undetermined,0,0,0,no,0.01193720969248626,no,0.01288527837289606,no,0.01222172450037769,no,0.011854500240781666,no,0.0115552476472527
1621,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Set it!,no,undetermined,0,0,0,no,0.0001961561556916521,no,0.00021588234368541441,no,0.0001981593396459761,no,0.00019379427034670106,no,0.00017655180340795103
1622,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// collectionPersister should not be null, but we don't want to throw // an exception if it is null",no,undetermined,0,0,0,no,0.032740772607526725,no,0.012922462580768606,no,0.012237734212812207,no,0.011871452708887582,no,0.0115777136778277
1623,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Case 1: Multi token keywords GROUP BY and ORDER BY // The next token ( LT(2) ) should be 'by'... otherwise, this is just an ident.",no,undetermined,0,0,0,no,0.002793822402081867,no,0.001370444702466582,no,0.0013207883761372683,no,0.0013128731377270346,no,0.0012353996681757316
1624,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The default SQLExceptionConverter for all dialects is based on SQLState // since SQLErrorCode is extremely vendor-specific.  Specific Dialects // may override to return whatever is most appropriate for that vendor.,no,undetermined,0,0,0,no,0.009277611065620929,no,0.008951959191475149,no,0.008245850559665825,no,0.008023886434347488,no,0.007780651417219127
1625,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//only necessary for postgre < 7.4 //http://anoncvs.postgresql.org/cvsweb.cgi/pgsql/doc/src/sgml/ref/create_sequence.sgml,no,undetermined,0,0,0,no,0.021817822044851626,no,0.01289546107998895,no,0.012220129084492623,no,0.011886268608414045,no,0.011582127825509205
1626,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// otherwise a null or brand new collection // this will also (inefficiently) handle arrays, which // have no snapshot, so we can't do any better //processArrayOrNewCollection(collection, type);",no,undetermined,0,0,0,no,0.08414408444662944,no,0.012885637977586005,no,0.01222074559647055,no,0.01185508336385542,no,0.011562380611780892
1627,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// a ""detached"" collection that originally belonged to the same entity",no,undetermined,0,0,0,no,0.0035776497635549008,no,0.0034599165969190267,no,0.0029846107156537016,no,0.0027672099308278437,no,0.002595297312950169
1628,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// add the comment // nest the main query in an outer select // add the rownnumber bit into the outer query select list,no,undetermined,0,0,0,no,0.004122660598014997,no,0.005756486492035868,no,0.005187358938304363,no,0.004721889728751022,no,0.004539448968885395
1629,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		 You may still have other ResultSets or update counts left to process here  //		 but you can't do it now or the ResultSet you just got will be closed ,no,undetermined,0,0,0,no,0.0012674231136456605,no,0.0013032979762763251,no,0.0011678559628631132,no,0.0011481398629927112,no,0.0010776186983061605
1630,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Note: For object <-> SQL datatype mappings see: //	 Configuration Manager | Advanced | SQL | System DDL Datatype Mappings // //	TBD	registerColumnType(Types.BINARY,        ""binary($1)""); // changed 08-11-2005, jsl",no,undetermined,0,0,0,no,0.040544497436086596,no,0.012893566816752217,no,0.012223019192164068,no,0.011885947092314237,no,0.011563624116000315
1631,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// See if the second lookahed token can be an identifier.,no,undetermined,0,0,0,no,0.004679129709255222,no,0.0031322841544468294,no,0.00280568040217707,no,0.0027833619768899568,no,0.002652171234709635
1632,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Case 2: The current token is after FROM and before '.'.,no,undetermined,0,0,0,no,0.004658520394384856,no,0.003364558665382674,no,0.0033227165468596507,no,0.0032718462662849994,no,0.0031209629178640353
1633,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//do nothing,no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
1634,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// TRIM(end_keyword string-expression-1 FROM string-expression-2) // use Hibernate implementation ""From"" is one of the parameters they pass in position ?3 //registerFunction( ""trim"", new SQLFunctionTemplate(Hibernate.STRING, ""trim(?1 ?2 from ?3)"") );",no,undetermined,0,0,0,no,0.009553054144804368,no,0.01292934188900334,no,0.012223746177689097,no,0.011862649747295659,no,0.011587940691416733
1635,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Whether this dialect has an Identity clause added to the data type or a completely seperate identity // data type,no,undetermined,0,0,0,no,0.01911036473286655,no,0.012920196805435956,no,0.01221366952940001,no,0.011870693393716103,no,0.011557760687793656
1636,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// (EQ NULL b) => (IS_NULL b),no,undetermined,0,0,0,no,0.010815629064299373,no,0.011324776244020738,no,0.011169416616477525,no,0.010827807539928161,no,0.010527651504004561
1637,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Create nodes that track line and column number.,no,undetermined,0,0,0,no,0.004350046286708059,no,0.003955086902946521,no,0.0036128793219860843,no,0.003502721923802665,no,0.0033437498005056687
1638,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//do nothing,no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
1639,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Add NOT if it's negated.,no,undetermined,0,0,0,no,0.004778410593941942,no,0.005564148197272389,no,0.005192704012300441,no,0.005079450066299155,no,0.004887019094435384
1640,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// (EQ a NULL) => (IS_NULL a),no,undetermined,0,0,0,no,0.010815629064299373,no,0.011324776244020738,no,0.011169416616477525,no,0.010827807539928161,no,0.010527651504004561
1641,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// The path AST should be a DotNode, and it should have been evaluated already.",no,undetermined,0,0,0,no,0.003930478157043496,no,0.00349282737527187,no,0.0033184848377579776,no,0.0031886614615026223,no,0.003041655548354495
1642,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Force a substitution!,no,undetermined,0,0,0,no,0.0019712936034411875,no,0.002099464120880158,no,0.00198171506684454,no,0.0019460762159464256,no,0.001847399378245054
1643,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if // if // Otherwise, handle the error normally.",no,undetermined,0,0,0,no,0.02537693309595044,no,0.012906034074012553,no,0.01223420058820429,no,0.01187493046761807,no,0.011585950139841022
1644,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// the database now holds a lock + the object is flushed from the cache, // so release the soft lock",no,undetermined,0,0,0,no,0.01379354078690698,no,0.01290955121783485,no,0.012204153945040314,no,0.011883744782277586,no,0.011569505798684217
1645,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// now update the object .. has to be outside the main if block above (because of collections),no,undetermined,0,0,0,no,0.01327965081283818,no,0.010458613788520501,no,0.008701237826774642,no,0.005823573419548187,no,0.005614286701288833
1646,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Named Queries:,no,undetermined,0,0,0,no,0.01199936817221526,no,0.005278982058615583,no,0.003709932927601101,no,0.0035693180660813953,no,0.003414234358301407
1647,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this is a situation where the entity id is assigned by a post-insert generator // and was saved outside the transaction forcing it to be delayed,no,undetermined,0,0,0,no,0.023135351316800765,no,0.012893276708103148,no,0.012233555781552653,no,0.01185242586450678,no,0.01158803645920324
1648,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//grab its state saved at deletion,no,undetermined,0,0,0,no,0.004238243476474577,no,0.0033495368843023212,no,0.0033465542352655296,no,0.003287400123887573,no,0.003145337400969493
1649,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// grab its current state,no,undetermined,0,0,0,no,0.001252181634775791,no,0.000987295857839996,no,0.0010115302655903816,no,0.000995812446191124,no,0.000932089273230663
1650,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this will throw an error if there's something wrong.,no,undetermined,0,0,0,no,0.053237376782611964,no,0.012929093754153693,no,0.012203982830468335,no,0.011853296436292175,no,0.011568457602258204
1651,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// collection deletions are a special case since update() can add // deletions of collections not loaded by the session.,no,undetermined,0,0,0,no,0.0060655399064020316,no,0.002623376699258805,no,0.0023317630640032937,no,0.0023259738946665868,no,0.0021888549641798224
1652,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if the natural-id is marked as non-mutable, it is not retrieved during a // normal database-snapshot operation...",no,undetermined,0,0,0,no,0.0036524692570282092,no,0.003479922627987922,no,0.00325211941843316,no,0.003100561970839157,no,0.0029621157790310194
1653,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// watch out for a case where old is still referenced // somewhere in the object graph! (which is a user error),no,undetermined,0,0,0,no,0.006342679657690786,no,0.009279625286823497,no,0.008931689591454328,no,0.00826184969535075,no,0.008012076410417424
1654,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//slice, to get the columns for this component //property",no,undetermined,0,0,0,no,0.004648810058416666,no,0.007352022618511711,no,0.00780063034519526,no,0.007601762014937519,no,0.007369771925518227
1655,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// schedule the update // note that we intentionally do _not_ pass in currentPersistentState!,no,undetermined,0,0,0,no,0.013976237986273309,no,0.01291885877719442,no,0.012218670311361247,no,0.01187316311686236,no,0.011589803204135735
1656,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// substitutes into values by side-effect,no,undetermined,0,0,0,no,0.004238653773286393,no,0.003462492151914759,no,0.0030177255217697617,no,0.002950429256899513,no,0.0028151644958786795
1657,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// give the Interceptor a chance to process property values, if the properties // were modified by the Interceptor, we need to set them back to the object",no,undetermined,0,0,0,no,0.023643837037298606,no,0.012925321879619355,no,0.01221725015659123,no,0.011870848033488108,no,0.011553900865058099
1658,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// (NOT (EQ a b) ) => (NE a b),no,undetermined,0,0,0,no,0.007824627512396999,no,0.008608691168877011,no,0.008296253461425613,no,0.008054917938505095,no,0.0077976133138077846
1659,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// compare to cached state (ignoring collections unless versioned),no,undetermined,0,0,0,no,0.008443529801341384,no,0.0056932844545524745,no,0.005155900143562898,no,0.005101789566620485,no,0.004916510243774759
1660,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// if it was dirtied by a collection only,no,undetermined,0,0,0,no,0.008390355054235422,no,0.000481924065794764,no,0.00044701237645993646,no,0.0004425377360588848,no,0.00040038482595588273
1661,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// check nullability but do not perform command execute // we'll use scheduled updates for that.,no,undetermined,0,0,0,no,0.011552690675813677,no,0.012914656521793737,no,0.012235578115073436,no,0.011853822027698033,no,0.01156417928466183
1662,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This 'dot' expression now refers to the resulting from element.,no,undetermined,0,0,0,no,0.011644414599083068,no,0.007653189891321917,no,0.007110810320211432,no,0.006826341391584373,no,0.006604648100271709
1663,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// (NOT (LIKE a b) ) => (NOT_LIKE a b),no,undetermined,0,0,0,no,0.015131121969252733,no,0.012925474981827776,no,0.012229605124589324,no,0.011879320815485832,no,0.011592763984971432
1664,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The CollectionEntry.isReached() stuff is just to detect any silly users   // who set up circular or shared references between/to collections.,no,undetermined,0,0,0,no,0.06630093158498872,no,0.012902135097599757,no,0.012223226993112705,no,0.0118536947018595,no,0.011586895938195134
1665,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// detached collection wrappers that get found + reattached // during flush shouldn't be ignored,no,undetermined,0,0,0,no,0.021894170307224924,no,0.010738119635480523,no,0.007709922278563113,no,0.0075532549503677495,no,0.007222761808155175
1666,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// (NOT (IS_NOT_NULL a b) ) => (IS_NULL a b),no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
1667,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// The unique property value represented here may or may not be // serializable, so we do an explicit check here in order to generate // a better error message",no,undetermined,0,0,0,no,0.05184632816917438,no,0.01291146939785377,no,0.012209689375297518,no,0.011858104535718523,no,0.011561849569470485
1668,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if the version of a newly instantiated object is not the same // as the version seed value, use that as the unsaved-value",no,undetermined,0,0,0,no,0.012916615352212054,no,0.004709027045005083,no,0.004651307595308871,no,0.004160399485013197,no,0.003989101825169969
1669,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ie. we never have to null out a reference to // an uninitialized proxy,no,undetermined,0,0,0,no,0.0038610932798117917,no,0.002639137351419708,no,0.0024976898465500583,no,0.002481167502200175,no,0.0023650887733220943
1670,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// (NOT (NOT_LIKE a b) ) => (LIKE a b),no,undetermined,0,0,0,no,0.015131121969252733,no,0.012925474981827776,no,0.012229605124589324,no,0.011879320815485832,no,0.011592763984971432
1671,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//give the Interceptor a chance to modify property values,no,undetermined,0,0,0,no,0.022818643468224865,no,0.012905650297317692,no,0.012229431723393384,no,0.011876385816069746,no,0.011579692595731491
1672,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//now we might need to recalculate the dirtyProperties array,no,undetermined,0,0,0,no,0.01544759926754356,no,0.011346571384400667,no,0.009877786749751899,no,0.009654225834061505,no,0.009386624621388527
1673,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//use the current version,no,undetermined,0,0,0,no,0.014301746801170032,no,0.012546145453074932,no,0.01223081173428409,no,0.011880605911996363,no,0.011588171182482964
1674,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// object loaded by update(),no,undetermined,0,0,0,no,0.005328384639698101,no,0.00552935889665787,no,0.005307353916811798,no,0.005396750667774633,no,0.0052125457005812136
1675,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// ignore this row, the collection is in process of // being loaded somewhere further ""up"" the stack",no,undetermined,0,0,0,no,0.001563864419687648,no,0.0007243447350856818,no,0.0006767750096912812,no,0.0006717523593315378,no,0.0006175001608882731
1676,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Entity load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // 	* currently, not yet used...",no,undetermined,0,0,0,no,0.10646578133729928,no,0.08853418919853016,no,0.012221450163471027,no,0.011875283271493186,no,0.011580577935434976
1677,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// dirty check against the usual snapshot of the entity,no,undetermined,0,0,0,no,0.00947728152177704,no,0.01021662264955989,no,0.0076771458520106355,no,0.007336628592063266,no,0.0071179467545445805
1678,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// this implementation is supposed to tolerate incorrect unsaved-value // mappings, for the purpose of backward-compatibility",no,undetermined,0,0,0,no,0.08805679983206051,no,0.012896773892647378,no,0.012226481299447076,no,0.011848757053232547,no,0.011575992701961432
1679,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// this implementation is supposed to tolerate incorrect unsaved-value // mappings, for the purpose of backward-compatibility",no,undetermined,0,0,0,no,0.08805679983206051,no,0.012896773892647378,no,0.012226481299447076,no,0.011848757053232547,no,0.011575992701961432
1680,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// wrap up any new collections directly referenced by the object // or its components,no,undetermined,0,0,0,no,0.007514021392439138,no,0.01290717924442314,no,0.011935557035125539,no,0.011867141407198394,no,0.01158305329448126
1681,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// skip this check for composite-ids relating to dom4j entity-mode; // alternatively, we could add a check to make sure the incoming id value is // an instance of Element...",no,undetermined,0,0,0,no,0.02956449094470229,no,0.012906975339737866,no,0.01221454119990884,no,0.011864416358294574,no,0.011594363301782479
1682,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// upgrade the lock if necessary: //lock(result, lockMode);",no,undetermined,0,0,0,no,0.00460497662580923,no,0.006465762520841646,no,0.007125934639609972,no,0.006928357927510787,no,0.006685623496786639
1683,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// now, any collections that are initialized // inside this block do not get updated - they // are ignored until the next flush",no,undetermined,0,0,0,no,0.03268819912470403,no,0.012914529654795668,no,0.009765208143488672,no,0.009659760769589229,no,0.009400537661559934
1684,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// (NOT (NE a b) ) => (EQ a b),no,undetermined,0,0,0,no,0.007824627512396999,no,0.008608691168877011,no,0.008296253461425613,no,0.008054917938505095,no,0.0077976133138077846
1685,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//we must clone embedded composite identifiers, or  //we will get back the same instance that we pass in",no,undetermined,0,0,0,no,0.0052998171062733175,no,0.0036066160083098797,no,0.003240832416156669,no,0.003177668825749269,no,0.003043596333423436
1686,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Sub-insertions should occur before containing insertion so // Try to do the callback now,no,undetermined,0,0,0,no,0.0031709004961410054,no,0.002940455140142054,no,0.0028246746035284023,no,0.0028052175197154274,no,0.0026766401326290237
1687,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// (NOT (LE a b) ) => (GT a b),no,undetermined,0,0,0,no,0.0077961036249851005,no,0.008418497136955487,no,0.007931818385703261,no,0.007735407253892037,no,0.007493880816944618
1688,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// (NOT (GE a b) ) => (LT a b),no,undetermined,0,0,0,no,0.0159664388652984,no,0.012876810245685523,no,0.012205124529429488,no,0.011853118791538667,no,0.011572368532981683
1689,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// (NOT (LT a b) ) => (GE a b),no,undetermined,0,0,0,no,0.0159664388652984,no,0.012876810245685523,no,0.012205124529429488,no,0.011853118791538667,no,0.011572368532981683
1690,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//the entity is not associated with the session, so //try interceptor and unsaved-value",no,undetermined,0,0,0,no,0.002026250856172597,no,0.0006625265475974958,no,0.0005650776209028403,no,0.0005518595779692353,no,0.0005126310795323897
1691,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// ... and the expected token type was an identifier, then:",no,undetermined,0,0,0,no,0.005313008703579322,no,0.00348663382280359,no,0.003334591055751491,no,0.0033331276514311256,no,0.0031819055568629013
1692,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// igndore it...,no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
1693,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// [jsd] The fix for HHH-558...,no,undetermined,0,0,0,no,0.039999099377525354,no,0.012900831193226827,no,0.012199080442628287,no,0.011862681204892193,no,0.011583170590685327
1694,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// If the token can tell us if it could be an identifier...,no,undetermined,0,0,0,no,0.009286949469741436,no,0.006217198500493919,no,0.005741943111792803,no,0.005665032867194566,no,0.0054615521637282295
1695,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we are now at a new tree level,no,undetermined,0,0,0,no,0.019687713178414033,no,0.012906248893884496,no,0.01223430822267802,no,0.011865495444770452,no,0.011585104938749697
1696,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// dirty check against the database snapshot, if possible/necessary",no,undetermined,0,0,0,no,0.035673131138922703,no,0.012915885215663529,no,0.012231350042103413,no,0.011872939910645792,no,0.011586937871440814
1697,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the Interceptor handled the dirty checking,no,undetermined,0,0,0,no,0.06513486585900384,no,0.012908311415552532,no,0.012229950917167772,no,0.011850332483097236,no,0.011570018019613512
1698,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Use the delegate.,no,undetermined,0,0,0,no,0.012794529432989317,no,0.012582682979175872,no,0.01155284886927659,no,0.011243378950904196,no,0.01090876046022325
1699,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ( (Column) ( (SimpleValue) ic.getIndex() ).getColumnIterator().next() // ).setNullable(false);,no,undetermined,0,0,0,no,0.006956030006951995,no,0.005180830818370766,no,0.0045550526916192675,no,0.004509014040235291,no,0.0043296610596055
1700,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//60 seconds,no,undetermined,0,0,0,no,0.006932760013743887,no,0.007086623194769695,no,0.00667432624625728,no,0.006475552481788318,no,0.006252848037954349
1701,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// get meta's from <subclass>,no,undetermined,0,0,0,no,0.04781990873268198,no,0.012887580649394608,no,0.012206653067216343,no,0.011874487059506954,no,0.011554203135812435
1702,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// evict() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.006324468532590012,no,0.0061390026561531875,no,0.0057804709083662306,no,0.0056159876633176745,no,0.0054124539466301295
1703,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//ignore!,no,undetermined,0,0,0,no,0.0003963947956631522,no,0.0005033798635581664,no,0.0004702444207308477,no,0.0004640531103833746,no,0.0004297751119298306
1704,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// get the id from the object,no,undetermined,0,0,0,no,0.023307067290142296,no,0.011904569406517984,no,0.011317429410581763,no,0.011081011096932372,no,0.010803583384547575
1705,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// do the put outside the scope of the JTA txn,no,undetermined,0,0,0,no,0.01627214225760925,no,0.012910415586721815,no,0.011227424905835212,no,0.00482678829829647,no,0.00463740905735276
1706,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//what is the version on the database?,no,undetermined,0,0,0,no,0.016860065653904657,no,0.012905485210333004,no,0.012233712519137414,no,0.01185389648530313,no,0.011555184581062961
1707,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/// HHH-2378,no,undetermined,0,0,0,no,0.004742980399289951,no,0.008683395336736812,no,0.00832383987358286,no,0.008194344058243031,no,0.007940278467316295
1708,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//stops flush being called multiple times if this method is recursively called,no,undetermined,0,0,0,no,0.06076152929407174,no,0.01290507687309644,no,0.012224685460099777,no,0.011872422096058821,no,0.011582734658570196
1709,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//will result in a SQL UPDATE:,no,undetermined,0,0,0,no,0.0020103975110070038,no,0.002204100245155364,no,0.0026184565980888123,no,0.002656609877222277,no,0.0025256119837465145
1710,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//else do nothing (don't even reassociate object!),no,undetermined,0,0,0,no,0.011113997967537703,no,0.012893072482405907,no,0.012234281859389648,no,0.008031356962285496,no,0.0077770391504570205
1711,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// no existing row - do an insert,no,undetermined,0,0,0,no,0.00037840259590989344,no,0.0003495301785974565,no,0.0003341822306623304,no,0.00033259047699335027,no,0.00030676463374772417
1712,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// --- Inner classes (moved here from sql-gen.g) ---,no,undetermined,0,0,0,no,0.04710865510664745,no,0.01291186909251453,no,0.01222223705444376,no,0.011856869055597585,no,0.011564000210841694
1713,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// reference type,no,undetermined,0,0,0,no,0.014037932668105607,no,0.010750025435757475,no,0.010015221204989645,no,0.009724394251620182,no,0.009441470170705839
1714,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Use the delegate.,no,undetermined,0,0,0,no,0.012794529432989317,no,0.012582682979175872,no,0.01155284886927659,no,0.011243378950904196,no,0.01090876046022325
1715,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// should be the first, but just to be safe...",no,undetermined,0,0,0,no,0.0035656723550241145,no,0.0032744502403635246,no,0.003102669286137036,no,0.002652091065988242,no,0.002531926338672213
1716,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//return a proxy if appropriate,no,undetermined,0,0,0,no,0.010518066417354893,no,0.010739985957228733,no,0.009963021428418824,no,0.009645556422302633,no,0.009406286290333337
1717,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// some filters affecting the collection are enabled on the session, so do not do the put into the cache.",no,undetermined,0,0,0,no,0.004787445269037484,no,0.003719082706041024,no,0.0034465716934627753,no,0.0033758940035679866,no,0.003182036679389438
1718,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Generate an explicit join for the root dot node.   The implied joins will be collected and passed up // to the root dot node.,no,undetermined,0,0,0,no,0.003323733560122228,no,0.0023158919727093823,no,0.0021232650067487427,no,0.002072034705149395,no,0.001971069895672178
1719,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// A session is considered to contain an entity only if the entity has // an entry in the session's persistence context and the entry reports // that the entity has not been removed,no,undetermined,0,0,0,no,0.004651781910091667,no,0.004866030984619193,no,0.0040622073374723434,no,0.0036926999843995287,no,0.003543383338891025
1720,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ... and the token could be an identifer and the error is // a mismatched token error ...,no,undetermined,0,0,0,no,0.006010687149083677,no,0.004621285885378881,no,0.004492361782932813,no,0.004403612409848416,no,0.004224876570881287
1721,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If a where clause was specified in the update/delete query, use it to limit the // returned ids here...",no,undetermined,0,0,0,no,0.005391129919094094,no,0.006552801721892498,no,0.0064371260002196095,no,0.00625441984080396,no,0.00604886559754285
1722,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Default implementation: // If this node has a data type, and that data type is not an association, then this is scalar.",no,undetermined,0,0,0,no,0.0017573851495887663,no,0.006019402033694819,no,0.006170299891856277,no,0.006084634948309248,no,0.005879354124012333
1723,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Resolve the LHS fully, generate implicit joins.  Pass in the property name so that the resolver can // discover foreign key (id) properties.",no,undetermined,0,0,0,no,0.012863081729741732,no,0.009750047489762551,no,0.0092617610701781,no,0.008205606819555348,no,0.007988676038045043
1724,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If the propertyType is null and there isn't a parent, just // stop now... there was a problem resolving the node anyway.",no,undetermined,0,0,0,no,0.02130462983464364,no,0.012905076680565087,no,0.01220959382447967,no,0.011858043099721303,no,0.011559537600204638
1725,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//We do not look for an existing join on the same path, because //it makes sense to join twice on the same collection role",no,undetermined,0,0,0,no,0.014225193849239369,no,0.011049904928647948,no,0.010337633067918649,no,0.00948797891983004,no,0.009168567777164731
1726,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// return new uninitialized proxy,no,undetermined,0,0,0,no,0.005177938852954196,no,0.003988692528780359,no,0.0038082621934434203,no,0.003749253207043876,no,0.003601932747760313
1727,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this object was already loaded,no,undetermined,0,0,0,no,0.013481335479056738,no,0.008270268567682912,no,0.00788236467692138,no,0.008083839759943827,no,0.007863350038413625
1728,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Entity was found in second-level cache...,no,undetermined,0,0,0,no,0.010824182870385597,no,0.0075735970250240545,no,0.006418295437357179,no,0.0061742179882230235,no,0.005990428401240062
1729,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// intializes result by side-effect,no,undetermined,0,0,0,no,0.022118549294902583,no,0.01289021989142377,no,0.012215554294634385,no,0.011855951849078871,no,0.01156058180610694
1730,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// NOTE : ( max - 1 ) because first is zero-based while max is not...,no,undetermined,0,0,0,no,0.01959264461432078,no,0.012898218966479394,no,0.01221992522407701,no,0.011857491342913157,no,0.011590329767949173
1731,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// A shallow query is ok (although technically there should be no fetching here...),no,undetermined,0,0,0,no,0.00490457288092068,no,0.012550710162374617,no,0.011758766985662791,no,0.011052161801346095,no,0.010795833347346611
1732,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Delegate to the QueryLoader...,no,undetermined,0,0,0,no,0.008619149001354758,no,0.007896570379852932,no,0.007324514742854785,no,0.007110006753041494,no,0.006869794575284163
1733,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Remember the parameters for the compilation.,no,undetermined,0,0,0,no,0.004233148240848887,no,0.0038360167667780424,no,0.003581798860282474,no,0.0035770682969831357,no,0.003435227615620983
1734,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// -- Package local methods for the QueryLoader delegate --,no,undetermined,0,0,0,no,0.013087196274493937,no,0.01290146800972948,no,0.012233047174784462,no,0.011872964271038773,no,0.01158714489938064
1735,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Delegate to the QueryLoader...,no,undetermined,0,0,0,no,0.008619149001354758,no,0.007896570379852932,no,0.007324514742854785,no,0.007110006753041494,no,0.006869794575284163
1736,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// double,no,undetermined,0,0,0,no,0.001153331524791959,no,0.0011637514206317002,no,0.0015455747773459295,no,0.0014964283253746436,no,0.0014101279347452072
1737,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//now done in EntityIdentityInsertAction //persister.setIdentifier( entity, id, source.getEntityMode() );",no,undetermined,0,0,0,no,0.029442661907551213,no,0.010108923556900596,no,0.008764979032426885,no,0.00848179201663954,no,0.008283054813834281
1738,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// double,no,undetermined,0,0,0,no,0.001153331524791959,no,0.0011637514206317002,no,0.0015455747773459295,no,0.0014964283253746436,no,0.0014101279347452072
1739,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Use the token as an identifier.,no,undetermined,0,0,0,no,0.005845906021782712,no,0.00488620365132082,no,0.004484429913674507,no,0.0044548624068969835,no,0.004260581582602823
1740,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//some statistics,no,undetermined,0,0,0,no,0.0035814203281832263,no,0.004382600972419289,no,0.003915890781471504,no,0.003816425597943549,no,0.0036652180980676907
1741,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//safe from concurrent modification because of how entryList() is implemented on IdentityMap,no,undetermined,0,0,0,no,0.03801496191819572,no,0.012920129129275584,no,0.01224488598895321,no,0.01185495440739853,no,0.011551089383277664
1742,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Transform the tree.,no,undetermined,0,0,0,no,0.009152978124556644,no,0.009410183662011,no,0.009037832089796865,no,0.008845485075562818,no,0.008598838752486649
1743,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Parse the query string into an HQL AST.,no,undetermined,0,0,0,no,0.01149291216418733,no,0.005736937448459648,no,0.005494984749683906,no,0.0051797963983622975,no,0.004993758060523735
1744,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we do not actually propogate ANTLRExceptions as a cause, so // log it here for diagnostic purposes",no,undetermined,0,0,0,no,0.013341790250456795,no,0.012246084396645445,no,0.008923292449141243,no,0.008705981718451756,no,0.008451717511659662
1745,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// So this needs to be safe from concurrent modification problems. // It is safe because of how IdentityMap implements entrySet(),no,undetermined,0,0,0,no,0.04689568655353623,no,0.01290988141424302,no,0.012213814704768153,no,0.011870176713376705,no,0.011589462075554596
1746,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//only needed during compilation phase...,no,undetermined,0,0,0,no,0.0017027101118869772,no,0.0016315594489066183,no,0.0014599448105436163,no,0.0014468251399240852,no,0.001366101829421827
1747,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Update the status of the object and if necessary, schedule an update",no,undetermined,0,0,0,no,0.004960512530626809,no,0.00798905547585494,no,0.007496093781732657,no,0.007302780727826928,no,0.007078844853369341
1748,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Schedule updates to collections:,no,undetermined,0,0,0,no,0.0056065334690032186,no,0.0032455566340436944,no,0.0028531698543908853,no,0.002758656626938227,no,0.0026329575484124183
1749,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we need to lock the collection caches before // executing entity inserts/updates in order to // account for bidi associations,no,undetermined,0,0,0,no,0.017078229988671645,no,0.0036752850310669874,no,0.003390898470136569,no,0.0032179305988218588,no,0.003049412616262631
1750,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//the database has changed now, so the subselect results need to be invalidated",no,undetermined,0,0,0,no,0.008598151420724908,no,0.009306853265408612,no,0.008043258460188963,no,0.008184591726436407,no,0.007947446641699904
1751,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if the collection is dereferenced, remove from the session cache //iter.remove(); //does not work, since the entrySet is not backed by the set",no,undetermined,0,0,0,no,0.07994421250233985,no,0.012893813787042544,no,0.012200909324396951,no,0.011847425855840192,no,0.011555712357421465
1752,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// PHASE 1 : Parse the HQL into an AST.,no,undetermined,0,0,0,no,0.0030495940213290025,no,0.0016247268101874214,no,0.0015066982468326883,no,0.0014919135355745705,no,0.0014078022314802441
1753,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// key is an entity involved with the operation performed by the listener; // value is a flag indicating if the listener explicitly operates on the entity,no,undetermined,0,0,0,no,0.00470129996027376,no,0.004686372845376323,no,0.0038487872673478073,no,0.0037523658282362904,no,0.0035966570131901556
1754,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//get a snapshot,no,undetermined,0,0,0,no,0.0030208576379559494,no,0.012888907508844642,no,0.011850312020227821,no,0.01153881933773261,no,0.011275893989608451
1755,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*public final Currency getCurrency(int col) throws HibernateException {
		return (Currency) get(col);
	}*/",no,undetermined,0,0,0,no,0.019432571621422867,no,0.01291448259671848,no,0.012204333993070315,no,0.011861040882729094,no,0.011557473091407533
1756,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// right represents a joins originating from left...,no,undetermined,0,0,0,no,0.006353632047483773,no,0.009377876841822915,no,0.009120640176331433,no,0.008883338376880821,no,0.008640600350413457
1757,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//overriden to avoid System.exit,no,undetermined,0,0,0,no,0.01096800851862769,no,0.010575686301629564,no,0.009730550851898863,no,0.009397148367412378,no,0.009105225867890707
1758,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If the query is already compiled, skip the compilation.",no,undetermined,0,0,0,no,0.0032262822955908617,no,0.0011585266984624673,no,0.0010823580664706964,no,0.0010442978926453897,no,0.0009813617931736583
1759,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* package-private */,no,undetermined,0,0,0,no,0.008349551517376328,no,0.008751596970466227,no,0.00834562741213526,no,0.008127259575475157,no,0.007885653980004365
1760,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* package-private */,no,undetermined,0,0,0,no,0.008349551517376328,no,0.008751596970466227,no,0.00834562741213526,no,0.008127259575475157,no,0.007885653980004365
1761,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// remember that ordinal parameters numbers are 1-based!!!,no,undetermined,0,0,0,no,0.013692989150364536,no,0.011882387827118994,no,0.0113097658049964,no,0.011162801744875729,no,0.010886944642541817
1762,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//overriden to avoid System.exit,no,undetermined,0,0,0,no,0.01096800851862769,no,0.010575686301629564,no,0.009730550851898863,no,0.009397148367412378,no,0.009105225867890707
1763,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// all clear,no,undetermined,0,0,0,no,0.004569643131058437,no,0.005201218813653286,no,0.004964512494502991,no,0.004864778293664814,no,0.004676800901531272
1764,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Ignore the token class name parameter, and use a specific token class.",no,undetermined,0,0,0,no,0.007544578064809521,no,0.006598787251629843,no,0.00637470777038173,no,0.006224560887377643,no,0.0059993254522938515
1765,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//this is a query and we are loading multiple instances of the same collection role,no,undetermined,0,0,0,no,0.06223038043222591,no,0.012918745764510976,no,0.012228425791722522,no,0.011881350414724727,no,0.011586219015238063
1766,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// EARLY EXIT!!!,no,undetermined,0,0,0,no,0.003933359283837993,no,0.001778043880411003,no,0.0017387305574731227,no,0.0017057885909706125,no,0.0016140607696130788
1767,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// before any callbacks, etc, so subdeletions see that this deletion happened first",no,undetermined,0,0,0,no,0.003497648366532845,no,0.0034982633159782598,no,0.003449747953328098,no,0.003377885728331106,no,0.003231585143763059
1768,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Ensures that containing deletions happen before sub-deletions,no,undetermined,0,0,0,no,0.0021683873562327208,no,0.0030572444474874436,no,0.002827300315995414,no,0.0027830317531298845,no,0.002650248203111025
1769,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// cascade-delete to collections BEFORE the collection owner is deleted,no,undetermined,0,0,0,no,0.007544496715867104,no,0.012905649517684458,no,0.012242525895766892,no,0.011849446918776145,no,0.011556543316046285
1770,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// cascade-delete to many-to-one AFTER the parent was deleted,no,undetermined,0,0,0,no,0.00922767626006337,no,0.012883897191650813,no,0.012230201643162089,no,0.01186512931683448,no,0.011585800532572499
1771,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if it is an initialized proxy, let cascade // handle it later on",no,undetermined,0,0,0,no,0.025204770381958144,no,0.012894074026996476,no,0.01223685410051189,no,0.011853743029348633,no,0.0115577935518268
1772,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//assign the requested id to the proxy, *before* //reassociating the proxy",no,undetermined,0,0,0,no,0.0027344008951713504,no,0.0026659757874774818,no,0.0024533915406449573,no,0.0024112422200715166,no,0.0023025747842023553
1773,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// an uninitialized proxy, noop, don't even need to // return an id, since it is never a save()",no,undetermined,0,0,0,no,0.017125680363649604,no,0.012888906737347218,no,0.01223156303346073,no,0.011862688029629361,no,0.011594424080622605
1774,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//initialize properties of the event:,no,undetermined,0,0,0,no,0.002166440150394924,no,0.0022968863410726334,no,0.0021234332287292084,no,0.0021020556376736767,no,0.0019946969937245556
1775,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//return the id in the event object,no,undetermined,0,0,0,no,0.031933182183197455,no,0.012912772294075427,no,0.012214829493128888,no,0.011845007382017752,no,0.011557259809769637
1776,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//TRANSIENT or DELETED,no,undetermined,0,0,0,no,0.020617986271861385,no,0.012876807394161246,no,0.012236566633067878,no,0.011871833585842208,no,0.011574601347798866
1777,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// assume this is a newly instantiated transient object // which should be saved rather than updated,no,undetermined,0,0,0,no,0.0834374069648354,no,0.012905382113198525,no,0.012231012556229142,no,0.011851598910376007,no,0.011582031983401252
1778,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this is a transient object with existing persistent state not loaded by the session,no,undetermined,0,0,0,no,0.00986286241597977,no,0.0034662261567281766,no,0.0032889998206217315,no,0.0033140715592942472,no,0.0031725223331201535
1779,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// check two ""adjecent"" nodes at the top of the from-clause tree",no,undetermined,0,0,0,no,0.005377604605363947,no,0.006239009729725326,no,0.0055297539665440905,no,0.005431249862530957,no,0.005226740758078978
1780,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//cachedState,",no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
1781,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//a ""detached"" collection!",no,undetermined,0,0,0,no,0.006693169479581864,no,0.00498532899877821,no,0.004767250536756285,no,0.004713019587071463,no,0.004434669840880248
1782,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if the collection belonged to a different entity, // clean up the existing state of the collection",no,undetermined,0,0,0,no,0.01811148942063899,no,0.005424377229601278,no,0.004503013193916706,no,0.004118766025203506,no,0.0038761517215687427
1783,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//log.debug( ""calling onLoad()"" );",no,undetermined,0,0,0,no,0.005126629502555732,no,0.006920448442526306,no,0.00624673260987851,no,0.006073330164797891,no,0.005855101277493469
1784,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//EARLY EXIT!,no,undetermined,0,0,0,no,0.003933359283837993,no,0.001778043880411003,no,0.0017387305574731227,no,0.0017057885909706125,no,0.0016140607696130788
1785,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// note: performExecutions() clears all collectionXxxxtion  // collections (the collection actions) in the session,no,undetermined,0,0,0,no,0.023282934033439468,no,0.009145571218435657,no,0.00845962441778235,no,0.008040575867155035,no,0.007488653312771905
1786,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//ie. the entity came in from update(),no,undetermined,0,0,0,no,0.0021776273361602907,no,0.0018416962267616024,no,0.0015853598547165327,no,0.0015112985233214607,no,0.0014258578666650828
1787,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//we need to check even if it was not initialized, because of delayed adds!",no,undetermined,0,0,0,no,0.02413652072620536,no,0.012886195624264083,no,0.01221266987331355,no,0.011859935832571769,no,0.011583170327961608
1788,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//NOTE: EARLY EXIT!,no,undetermined,0,0,0,no,0.019928937636397154,no,0.007902170724451063,no,0.008003235382137295,no,0.007739298768198372,no,0.0074417866289872596
1789,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// if template is null we just write the function out as it appears in the hql statement,no,undetermined,0,0,0,no,0.02553200139936724,no,0.012914360679277325,no,0.012222408755808191,no,0.01186180438841281,no,0.011582021398304082
1790,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// semantic action processing ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.009875320275616608,no,0.012910747155094392,no,0.01223762299469367,no,0.011878729445399517,no,0.011574902987361819
1791,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// find any entities that are still transient after retry,no,undetermined,0,0,0,no,0.024621749688805577,no,0.012906701545890771,no,0.012229124508648687,no,0.011866844992058447,no,0.011550554282721988
1792,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Initialize SQL nodes here.,no,undetermined,0,0,0,no,0.002470391749070526,no,0.0023509351487869157,no,0.002122959448102387,no,0.0021584167764476824,no,0.0020452953122516524
1793,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//EARLY EXIT!,no,undetermined,0,0,0,no,0.003933359283837993,no,0.001778043880411003,no,0.0017387305574731227,no,0.0017057885909706125,no,0.0016140607696130788
1794,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Check the persistence context for an entry relating to this // entity to be merged...,no,undetermined,0,0,0,no,0.004846872852101957,no,0.006482588857328506,no,0.006173845997491527,no,0.005953039669604399,no,0.005755192368872403
1795,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//DELETED,no,undetermined,0,0,0,no,0.006104530343515199,no,0.012880450187457156,no,0.012242860979713775,no,0.011881509056361155,no,0.011585195240172092
1796,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Set the unresolved path in this node and the parent. // Set the text for the parent.,no,undetermined,0,0,0,no,0.009123298461280214,no,0.0075484617364360886,no,0.007217350045203808,no,0.006940281020587441,no,0.006719678934659327
1797,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// 60 second lock timeout,no,undetermined,0,0,0,no,0.0022154955228811143,no,0.0021333687563976998,no,0.002094419905020462,no,0.002043014998275047,no,0.0019362137347718278
1798,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*
				 * Property prop = new Property(); prop.setName(""id"");
				 * prop.setPropertyAccessorName(""embedded""); prop.setValue(id);
				 * entity.setIdentifierProperty(prop);
				 */",no,undetermined,0,0,0,no,0.010948102703976016,no,0.009509149888001755,no,0.008534728158116536,no,0.008196827270160505,no,0.00795956627355975
1799,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//before cascade!,no,undetermined,0,0,0,no,0.004393136274998818,no,0.01288831112562013,no,0.012231950762624988,no,0.011882269967048087,no,0.011565926031431506
1800,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// continue...; we'll find out if it ends up not getting saved later,no,undetermined,0,0,0,no,0.07447636099647442,no,0.01292168186260009,no,0.012234158183060425,no,0.011879343247108798,no,0.011560692143046454
1801,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// cascade first, so that all unsaved objects get their // copy created before we actually copy",no,undetermined,0,0,0,no,0.007722172155226016,no,0.010981040623413577,no,0.010789920125627107,no,0.010529005392944457,no,0.010244971163546304
1802,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// check that entity id = requestedId,no,undetermined,0,0,0,no,0.013864801650677775,no,0.012757964558293717,no,0.009556283332185573,no,0.009101731688717937,no,0.008843627060859007
1803,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Not a collection? // Return the entity property mapping.,no,undetermined,0,0,0,no,0.012407440527335546,no,0.007206072822968778,no,0.006096558042705837,no,0.005277977806960986,no,0.005036666089880428
1804,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// collection of <many-to-any/> mappings... // used to circumvent the component-collection check below...,no,undetermined,0,0,0,no,0.0116712664034311,no,0.006105571533334628,no,0.005985637219060688,no,0.00578216556217591,no,0.005461841807507199
1805,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Otherwise, the destination node was implied by the FROM clause and the FROM clause processor // will automatically add it in the right place.",no,undetermined,0,0,0,no,0.01691292456370984,no,0.01290004661457964,no,0.012240734813219929,no,0.011853914286175347,no,0.011590240240956715
1806,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If the first identifier in the path referrs to the class alias (not the class name), then this // is a correlated subselect.  If it's a correlated sub-select, use the existing table alias.  Otherwise // generate a new one.",no,undetermined,0,0,0,no,0.007813490810327091,no,0.005497543355865652,no,0.0047862520641972816,no,0.00472297564195541,no,0.004545185032731349
1807,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// This uses a PathExpressionParser but notice that compound paths are not valid, // only bare names and simple paths:",no,undetermined,0,0,0,no,0.02807197637952951,no,0.012909831136671148,no,0.012243626099900226,no,0.01186256237500993,no,0.011577540994821998
1808,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		origin.addDestination(destination); // Add the query spaces.,no,undetermined,0,0,0,no,0.012172171967118934,no,0.010871953855765485,no,0.010337461282698827,no,0.009855576122989651,no,0.009798150142113594
1809,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Reset the node type, because the rest of the system is expecting FROM_FRAGMENT, all we wanted was // for the factory to create the right sub-class.  This might get reset again later on anyway to make the // SQL generation simpler.",no,undetermined,0,0,0,no,0.028885021486361174,no,0.01290449542100566,no,0.012229511086692667,no,0.011852315234684309,no,0.011582323197598297
1810,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//explicit = true;	// This is an explict Select. //ArrayList sqlResultTypeList = new ArrayList();,no,undetermined,0,0,0,no,0.016957800225902125,no,0.012924186536773989,no,0.010901258685259948,no,0.010611841748889626,no,0.010360001362559776
1811,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//sqlResultTypeList.add( type ); // Generate the select expression.,no,undetermined,0,0,0,no,0.01557647164493158,no,0.010160936819991284,no,0.006431178797014949,no,0.006144950921219864,no,0.00594185870796348
1812,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If the expression list has exactly one expression, and the type of the expression is a collection // then this might be a collection function, such as index(c) or size(c).",no,undetermined,0,0,0,no,0.04487379621381882,no,0.012920830736800882,no,0.012224572791479375,no,0.011843829039101644,no,0.011553960115036285
1813,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The uber-rule here is that we need to include  subclass joins if // the FromElement is in any way dereferenced by a property from // the subclass table; otherwise we end up with column references // qualified by a non-existent table reference in the resulting SQL...,no,undetermined,0,0,0,no,0.06119712966948333,no,0.012902931998190374,no,0.01219726496253198,no,0.011859433166012758,no,0.01157004079637249
1814,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//before cascade!,no,undetermined,0,0,0,no,0.004393136274998818,no,0.01288831112562013,no,0.012231950762624988,no,0.011882269967048087,no,0.011565926031431506
1815,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// cascade first, so that all unsaved objects get their  // copy created before we actually copy",no,undetermined,0,0,0,no,0.007722172155226016,no,0.010981040623413577,no,0.010789920125627107,no,0.010529005392944457,no,0.010244971163546304
1816,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//copyValues works by reflection, so explicitly mark the entity instance dirty",no,undetermined,0,0,0,no,0.1236814949812114,no,0.07597598510371784,no,0.012227466492398188,no,0.011842028019672672,no,0.011563111872000124
1817,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The following variables are stacks that keep information about each subexpression // in the list of nested subexpressions we are currently processing.,no,undetermined,0,0,0,no,0.03041611669186088,no,0.012884485257655462,no,0.012205039360962419,no,0.011871246637814402,no,0.01156829035602225
1818,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// no need to even collect this information if the persister is considered multi-table,no,undetermined,0,0,0,no,0.035403086324297055,no,0.012913453170982853,no,0.012245060851357285,no,0.011866388675701379,no,0.011594929082444748
1819,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// as soon as we encounter our first letter, return the substring // from that position",no,undetermined,0,0,0,no,0.009278818569681036,no,0.011122242861714685,no,0.01045000391796208,no,0.009532178652456385,no,0.009271114282728934
1820,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Retrieve the value of the designated column in the current row of this // ResultSet object as a java.io.Reader object,no,undetermined,0,0,0,no,0.006753005840206011,no,0.006155377479619455,no,0.005907585816374656,no,0.005836760926449867,no,0.005645995243659673
1821,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//for arrays, replaceElements() may return a different reference, since //the array length might not match",no,undetermined,0,0,0,no,0.016639165092128226,no,0.012919776739406858,no,0.012221986514393199,no,0.01187712922648898,no,0.011581135045755201
1822,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// should not be able to reach last without maxPosition being set // unless there are no results,no,undetermined,0,0,0,no,0.0043803779077509816,no,0.004948888106764931,no,0.004700697919929012,no,0.004603974436473231,no,0.004428301930057774
1823,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//do not use proxiesByKey, since not all //proxies that point to this session's //instances are in that collection!",no,undetermined,0,0,0,no,0.015518039531739825,no,0.012915241510924345,no,0.012208789995207858,no,0.01184782749985027,no,0.011585623214751243
1824,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//this should be a call to resolve(), not resolveIdentifier(),  //'cos it might be a property-ref, and we did not cache the //referenced value",no,undetermined,0,0,0,no,0.007436899075159197,no,0.005774284010739437,no,0.004467801086667891,no,0.004341844109011078,no,0.004162961517862552
1825,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If we have <tt>not-found=""ignore""</tt> association mapped to a // formula, we always need to dirty check it, so we can update the // second-level cache",no,undetermined,0,0,0,no,0.021327504120288405,no,0.012920967259126821,no,0.012244584754419424,no,0.011855089789356576,no,0.01158084999070916
1826,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// We now have the value of the property-ref we reference.  However, // we need to dig a little deeper, as that property might also be // an entity type, in which case we need to resolve its identitifier",no,undetermined,0,0,0,no,0.15505469815390435,no,0.09841163718990847,no,0.012217712237886024,no,0.011868411619859801,no,0.011551323125988458
1827,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//true if this is a query and we are loading multiple instances of the same collection role //otherwise this is a CollectionInitializer and we are loading up a single collection or batch,no,undetermined,0,0,0,no,0.07509814179018293,no,0.012886931549012732,no,0.01221832423015062,no,0.011852024037177921,no,0.01156482823760618
1828,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// PERSISTER,no,undetermined,0,0,0,no,0.04287748062442215,no,0.010872552410230205,no,0.010378801592523662,no,0.010149944763018066,no,0.009910192205339683
1829,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This method should be implemented assuming it's valid to  // do start/stop/start -- leave state appropriate for another start,no,undetermined,0,0,0,no,0.008878088610711106,no,0.009347678357200467,no,0.009278049099813009,no,0.009109326555630723,no,0.008860100438877526
1830,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// We don't want to waste effort setting an option if JBC is // already in LOCAL mode. If JBC is REPL_(A)SYNC then check // if they passed an config option to disable query replication,no,undetermined,0,0,0,no,0.008588262191696389,no,0.01092815146151152,no,0.0111568333597699,no,0.010866808022721127,no,0.010596914769444871
1831,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// See if we had a 2nd invalidation from the same initial // preinvalidation timestamp. If so, only increment // if the new current value is an increase",no,undetermined,0,0,0,no,0.000436084513424923,no,0.00043050383473275405,no,0.0003837070901126552,no,0.0003866814490674598,no,0.00035644963183826
1832,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If the workspace node has null as well, OK; if not we've // been modified in a non-comparable manner, which we have to // treat as us being newer",no,undetermined,0,0,0,no,0.008481730046120075,no,0.011414527263750656,no,0.010401473286367261,no,0.010305272112176094,no,0.010024134414670097
1833,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//maintain correct duplication if loaded in a cartesian product,no,undetermined,0,0,0,no,0.011014672581234676,no,0.01104251182254356,no,0.010655378132344061,no,0.010471521845697608,no,0.004823218331419761
1834,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// local cache, so we use synchronization",no,undetermined,0,0,0,no,0.007282751878040864,no,0.009916451683979581,no,0.009350097173737961,no,0.009260429019660803,no,0.008966570025754645
1835,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*DataSource unpooled = DataSources.unpooledDataSource(
				jdbcUrl, props.getProperty(Environment.USER), props.getProperty(Environment.PASS)
			);*/",no,undetermined,0,0,0,no,0.002038581202943588,no,0.002919097681040807,no,0.0027899288263928974,no,0.0027057271332200828,no,0.002575112112761157
1836,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Don't need to lock the cache here, since if someone // else inserted the same pk first, the insert would fail",no,undetermined,0,0,0,no,0.012805115341617088,no,0.012899397781958252,no,0.012214755915088964,no,0.011856622767897645,no,0.011581902310857284
1837,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we need to grab the version value from the entity, otherwise // we have issues with generated-version entities that may have // multiple actions queued during the same flush",no,undetermined,0,0,0,no,0.057950227360123945,no,0.012908638788184115,no,0.012223289196343289,no,0.011842125797546019,no,0.011580792485205238
1838,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// short-circuit(s) // no new elements, the old list contains only Orphans // no old elements, so no Orphans neither",no,undetermined,0,0,0,no,0.0037691184464938277,no,0.012910712406433942,no,0.012234290090284093,no,0.011866407747962856,no,0.011568906930101396
1839,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//test out the optimizer:,no,undetermined,0,0,0,no,0.002425328143784503,no,0.002419380520174551,no,0.00227122265655131,no,0.002245408379653962,no,0.0021323449024968676
1840,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// get the updated snapshot of the entity state by cloning current state; // it is safe to copy in place, since by this time no-one else (should have) // has a reference  to the array",no,undetermined,0,0,0,no,0.007615126883304162,no,0.009379780295420184,no,0.00852165261031785,no,0.00777820204961924,no,0.007543499595253447
1841,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*!persister.isCacheInvalidationRequired()*/,no,undetermined,0,0,0,no,0.04287748062442215,no,0.010872552410230205,no,0.010378801592523662,no,0.010149944763018066,no,0.009910192205339683
1842,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// long,no,undetermined,0,0,0,no,0.01175923256963221,no,0.0129166294193736,no,0.012210062465327657,no,0.011883158552642709,no,0.01158753440360029
1843,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Set the existing pool flag to true,no,undetermined,0,0,0,no,0.0031153516119889354,no,0.0029991960239767815,no,0.0022382210262289976,no,0.0022945782128765543,no,0.002188589126190848
1844,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Validate that an alias name was provided to determine which pool to use,no,undetermined,0,0,0,no,0.009254516217793374,no,0.012905558958316712,no,0.010360807570625873,no,0.010355257395919483,no,0.010073026256349111
1845,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// We have created the pool ourselves, so shut it down",no,undetermined,0,0,0,no,0.002275334178876332,no,0.0030116265939943002,no,0.002211244877304945,no,0.0022507734216361598,no,0.0021380771557122894
1846,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//the load() which takes an entity does not pass an entityName,no,undetermined,0,0,0,no,0.010206558115780485,no,0.009046440923632488,no,0.007258871633622879,no,0.006926747663629228,no,0.006621199503326985
1847,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Note : expected in the syntax: //      type=listenerClass //          ({sep}type=listenerClass)* // where {sep} is any whitespace or comma,no,undetermined,0,0,0,no,0.02891234046363143,no,0.012905620268985247,no,0.012216733564609172,no,0.011844520576060604,no,0.011562501424485058
1848,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// tree cache in optimistic mode seems to have as very difficult // time with remove calls on non-existent nodes (NPEs)...,no,undetermined,0,0,0,no,0.024427094403747858,no,0.012885909125897576,no,0.012223484812154215,no,0.01185187631951131,no,0.0115645532328393
1849,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// We ignore minimalPutOverride. JBossCache putForExternalRead is // already about as minimal as we can get; it will promptly return // if it discovers that the node we want to write to already exists,no,undetermined,0,0,0,no,0.0026221328751427973,no,0.0023640168199181495,no,0.0021773570337641213,no,0.0022093972798107437,no,0.0021086552550171416
1850,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//it does not refer to an alias of a projection, //look for a property",no,undetermined,0,0,0,no,0.005421724898719747,no,0.008548424864372694,no,0.008144227925307211,no,0.00715625403392652,no,0.006936271112521289
1851,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// do nothing for persistent instances,no,undetermined,0,0,0,no,0.010307797006896938,no,0.006359921390625624,no,0.0060773724261840864,no,0.005976648655984695,no,0.005779998836615706
1852,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// OptimisticCache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.006562256669935704,no,0.006959610490900894,no,0.006641824253982197,no,0.005272146940800083,no,0.0051040069329332145
1853,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//			option.setDataVersion( NonLockingDataVersion.INSTANCE );,no,undetermined,0,0,0,no,0.0036898600741214383,no,0.005035662653478781,no,0.004686070225153618,no,0.004559138023881459,no,0.0043764029205319655
1854,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//assume true, since we don't really know, and it doesn't matter",no,undetermined,0,0,0,no,0.5426620059036722,no,0.5288168842301655,no,0.5,no,0.4857957924125355,no,0.5
1855,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Show the modified AST.,no,undetermined,0,0,0,no,0.006764022484276615,no,0.0049755057875708235,no,0.00482111565878781,no,0.004756592955212744,no,0.004563907430735855
1856,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// NOTE : firstRow is zero-based,no,undetermined,0,0,0,no,0.020479806996294304,no,0.012924461424309986,no,0.012236713086833972,no,0.011876912769035073,no,0.011565432929628468
1857,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Initialize dirty flags for arrays + collections with composite elements // and reset reached, doupdate, etc.",no,undetermined,0,0,0,no,0.024674858533836327,no,0.012917140057625951,no,0.012222271506896837,no,0.01185221220847292,no,0.011563177092520041
1858,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Use the delegate.,no,undetermined,0,0,0,no,0.012794529432989317,no,0.012582682979175872,no,0.01155284886927659,no,0.011243378950904196,no,0.01090876046022325
1859,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Use the delegate.,no,undetermined,0,0,0,no,0.012794529432989317,no,0.012582682979175872,no,0.01155284886927659,no,0.011243378950904196,no,0.01090876046022325
1860,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Tell the dot node about the join type.,no,undetermined,0,0,0,no,0.009709585276268563,no,0.004681198779692357,no,0.004503902569562749,no,0.004438783271357583,no,0.0042690617148290946
1861,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This 'dot' expression now refers to the resulting from element.,no,undetermined,0,0,0,no,0.011644414599083068,no,0.007653189891321917,no,0.007110810320211432,no,0.006826341391584373,no,0.006604648100271709
1862,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Among other things, updateReachables() will recursively load all // collections that are moving roles. This might cause entities to // be loaded.",no,undetermined,0,0,0,no,0.021862848931274204,no,0.01290875671615804,no,0.01222393441053371,no,0.011855105159162207,no,0.011569522440754041
1863,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // Post-flushing section // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0026049760681699204,no,0.004107192311689183,no,0.003866774292946529,no,0.0038273575940960276,no,0.0036660777871330673
1864,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//otherwise recreate the mapping between the collection and its key,no,undetermined,0,0,0,no,0.003798329678341117,no,0.005122930653270708,no,0.004931704385680543,no,0.004765442756465013,no,0.004509140196365926
1865,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Create a parameter specification for the collection filter...,no,undetermined,0,0,0,no,0.020658537997376727,no,0.012899922426025811,no,0.011787211075127712,no,0.010430318554139582,no,0.009960926370306187
1866,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Attach any mapping-defined ""ORDER BY"" fragments",no,undetermined,0,0,0,no,0.004725262213360778,no,0.0038117885318994945,no,0.003544179338962885,no,0.0035263717471423193,no,0.0033847219800692153
1867,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we found some extends attributes referencing entities which were // not already processed.  here we need to locate all entity-names // and class-names contained in this document itself, making sure // that these get removed from the extendz list such that only // extends names which require us to delay processing (i.e. // external to this document and not yet processed) are contained // in the returned result",no,undetermined,0,0,0,no,0.04851857304166484,no,0.012892384669824775,no,0.012210973708222174,no,0.011849477380770234,no,0.01157100264246761
1868,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Make sure that the persister is versioned,no,undetermined,0,0,0,no,0.03191972401308014,no,0.010282977983955693,no,0.009842533264821379,no,0.009696324952209871,no,0.009456567485011853
1869,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// for native-sql queries, the param metadata is determined outside // any relation to a query plan, because query plan creation and/or // retreival for a native-sql query depends on all of the return // types having been set, which might not be the case up-front when // param metadata would be most useful",no,undetermined,0,0,0,no,0.081689165888225,no,0.012893008352115248,no,0.012215594129521775,no,0.011844631530332089,no,0.011565464726223858
1870,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this function has a template -> redirect output and catch the arguments,no,undetermined,0,0,0,no,0.0032300013742338264,no,0.003887819442989229,no,0.003617483032129857,no,0.0035428786496598703,no,0.003389096126566596
1871,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// use the id assigned to the instance,no,undetermined,0,0,0,no,0.027809392553266185,no,0.01290906792435572,no,0.012216465257720502,no,0.011878333486173932,no,0.011551166797421547
1872,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if no array holder we found an unwrappered array (this can't occur, // because we now always call wrap() before getting to here) // return (ah==null) ? true : searchForDirtyCollections(ah, type);",no,undetermined,0,0,0,no,0.012267353526105211,no,0.008417866769216638,no,0.007115292685773075,no,0.007041888695201674,no,0.006819508677205733
1873,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// a collection loaded in the current session // can not possibly be the collection belonging // to the entity passed to update(),no,undetermined,0,0,0,no,0.006648007697255167,no,0.0025932745772676746,no,0.0023059002115249547,no,0.0021753857386444444,no,0.0020350575232902187
1874,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If the data type is not an association type, it could not have been in the FROM clause.",no,undetermined,0,0,0,no,0.00499071738583432,no,0.004284036812111932,no,0.004436899469335809,no,0.004322058639823525,no,0.004146599825659789
1875,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// We need to generate ids as part of this bulk insert. // // Note that this is only supported for sequence-style generators and // post-insert-style generators; basically, only in-db generators",no,undetermined,0,0,0,no,0.03883606639465058,no,0.012897157334748253,no,0.01223838973218997,no,0.011872393341750423,no,0.01159093436629798
1876,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//first look for a reference to a projection alias,no,undetermined,0,0,0,no,0.008512805074677388,no,0.012215601501284312,no,0.011708099201573263,no,0.009642726025121243,no,0.009372855818537291
1877,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//first look for a reference to a projection alias,no,undetermined,0,0,0,no,0.008512805074677388,no,0.012215601501284312,no,0.011708099201573263,no,0.009642726025121243,no,0.009372855818537291
1878,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.011146430155654264,no,0.010896913918023388,no,0.010206319800874483,no,0.009908823561249249,no,0.009657644718185868
1879,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If there are no collection fetches, then no further checks are needed",no,undetermined,0,0,0,no,0.06712996463868343,no,0.012891397293811753,no,0.012215458503640062,no,0.011867576884771676,no,0.011572835344309517
1880,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// --Commented out by Inspection (12/11/04 10:56 AM): int getWarningCount();,no,undetermined,0,0,0,no,0.0028505269684745028,no,0.003129706812260302,no,0.0028772234301364294,no,0.0022422926869961972,no,0.002131120729097896
1881,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if a ThreadLocalSessionContext-bound session happens to get // serialized, to be completely correct, we need to make sure // that unbinding of that session occurs.",no,undetermined,0,0,0,no,0.0938291936746909,no,0.012920752914915208,no,0.012226865869142086,no,0.011853949836406514,no,0.01158326909240284
1882,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Make #@%$^#^&# sure no alias is applied to the table name,no,undetermined,0,0,0,no,0.005641623840006756,no,0.004216287009019644,no,0.003951543852863573,no,0.0038540752555823073,no,0.003690323503996079
1883,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Delegate to the QueryLoader...,no,undetermined,0,0,0,no,0.008619149001354758,no,0.007896570379852932,no,0.007324514742854785,no,0.007110006753041494,no,0.006869794575284163
1884,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// switch,no,undetermined,0,0,0,no,0.004481080144079557,no,0.004674314376705576,no,0.004424681534827464,no,0.004282550494290308,no,0.0041165851543169965
1885,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we do not actually propogate ANTLRExceptions as a cause, so // log it here for diagnostic purposes",no,undetermined,0,0,0,no,0.013341790250456795,no,0.012246084396645445,no,0.008923292449141243,no,0.008705981718451756,no,0.008451717511659662
1886,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Use the explicitly declared select expression; determine the // return types indicated by each select token,no,undetermined,0,0,0,no,0.0363507228282538,no,0.01291155544663155,no,0.012236416682633037,no,0.011854784036364306,no,0.011560314310296646
1887,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// select clauses for insert statements should alwasy be treated as shallow,no,undetermined,0,0,0,no,0.005258891876164927,no,0.004955057513113711,no,0.0044482530937231665,no,0.004364264520158983,no,0.004186644322330245
1888,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// After that, process the JOINs. // Invoke a delegate to do the work, as this is farily complex.",no,undetermined,0,0,0,no,0.02284633465704955,no,0.01289740775511615,no,0.012243901138927196,no,0.011850728737376625,no,0.011566885558253876
1889,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Cache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.008094074405819792,no,0.008646270442745203,no,0.008354173448455272,no,0.007028516193000043,no,0.00682630367731911
1890,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// simple cache of param metadata based on query string.  Ideally, the // original ""user-supplied query"" string should be used to retreive this // metadata (i.e., not the para-list-expanded query string) to avoid // unnecessary cache entries. // Used solely for caching param metadata for native-sql queries, see // getSQLParameterMetadata() for a discussion as to why...",no,undetermined,0,0,0,no,0.02387280829581057,no,0.012910187513012738,no,0.012226415693527282,no,0.011883118884973015,no,0.011581422101534792
1891,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Use the delegate.,no,undetermined,0,0,0,no,0.012794529432989317,no,0.012582682979175872,no,0.01155284886927659,no,0.011243378950904196,no,0.01090876046022325
1892,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Alias references and identifiers use the same node class.,no,undetermined,0,0,0,no,0.008395942035422727,no,0.009499742589785193,no,0.008373075532569173,no,0.008204147239099907,no,0.007950210425185364
1893,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// make a new one,no,undetermined,0,0,0,no,0.005227122735611804,no,0.00389826707817989,no,0.0036875875703153527,no,0.003610523900630659,no,0.003455259330423316
1894,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,///////////////////////////////////////////////////////////////////////,no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
1895,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// these are just two unrelated table references,no,undetermined,0,0,0,no,0.008217608156486776,no,0.006072664460883224,no,0.0065643813601242015,no,0.0063650510026224735,no,0.006151811026939129
1896,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// again, both should be FromElements",no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
1897,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// check a set of parent/child nodes in the from-clause tree // to determine if a comma is required between them,no,undetermined,0,0,0,no,0.014534264230234795,no,0.012904764251804032,no,0.012233963409663436,no,0.011872492283533606,no,0.011553398555249374
1898,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// PHASE 2 : Analyze the HQL AST, and produce an SQL AST.",no,undetermined,0,0,0,no,0.0019320618163847839,no,0.0011370066802612016,no,0.0010675282638436254,no,0.0010707295769489817,no,0.0010036286120954196
1899,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// PHASE 3 : Generate the SQL.,no,undetermined,0,0,0,no,0.0010954536726673486,no,0.00082073645622625,no,0.0007290867322667709,no,0.0007418672790726641,no,0.0006905626610845802
1900,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Otherwise, we have a non-scalar select with defined collection fetch(es). // Make sure that there is only a single root entity in the return (no tuples)",no,undetermined,0,0,0,no,0.03358124696321223,no,0.012895232985712745,no,0.01223020363170987,no,0.011405664902859245,no,0.011030368860171901
1901,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//			paramTranslations = new ParameterTranslationsImpl( collectedParameterSpecifications );,no,undetermined,0,0,0,no,0.002636179336331818,no,0.0037656113856225134,no,0.003564350765537382,no,0.0035326015975680643,no,0.0033746501263520966
1902,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we are already processing a dot-structure,no,undetermined,0,0,0,no,0.016411267965589574,no,0.0129230449504167,no,0.012237312132754162,no,0.011876559440103483,no,0.011587868876105092
1903,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Should mean that no such property was found,no,undetermined,0,0,0,no,0.008370095451522992,no,0.006107858771416188,no,0.006440328148264396,no,0.006378374169574984,no,0.006169970955282376
1904,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Initialize the error handling delegate.,no,undetermined,0,0,0,no,0.010082641446476814,no,0.00817137662160509,no,0.007835379898321072,no,0.0076335316358849626,no,0.007389201334841087
1905,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Was there an explicit select expression?,no,undetermined,0,0,0,no,0.019043296415053625,no,0.012779835641760684,no,0.009587266409146217,no,0.009116522445189432,no,0.00887016363455159
1906,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Resolve everything up to this dot, but don't resolve the placeholders yet.",no,undetermined,0,0,0,no,0.030828228522412956,no,0.012883421099647142,no,0.012206157675516012,no,0.011848184895425738,no,0.011561529939669567
1907,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// (NOT (NOT_BETWEEN a b) ) => (BETWEEN a b),no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
1908,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Just add a 'not' parent.,no,undetermined,0,0,0,no,0.005116334065680875,no,0.00811809639840545,no,0.007592742534366889,no,0.007340602669183091,no,0.0071132615068885885
1909,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// First, save off the pertinent ids, as the return value",no,undetermined,0,0,0,no,0.00422327785048312,no,0.005838841983529004,no,0.006528591913378429,no,0.0064074496586813325,no,0.006201343983296135
1910,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// check to see if the connection is in auto-commit  // mode (no connection means aggressive connection // release outside a JTA transaction context, so MUST // be autocommit mode)",no,undetermined,0,0,0,no,0.05434952947344106,no,0.012907079926248502,no,0.012245875793748397,no,0.011879833907840585,no,0.011593624169422355
1911,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// First, save off the pertinent ids, saving the number of pertinent ids for return",no,undetermined,0,0,0,no,0.009771553496081675,no,0.012878077605112049,no,0.012236686883895962,no,0.011836895086322846,no,0.011577297751225162
1912,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Start performing the deletes,no,undetermined,0,0,0,no,0.0036704307065727163,no,0.004825287843571802,no,0.004622384943716793,no,0.004517990070696781,no,0.004324621548042451
1913,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Don't forget to resolve the argument! // Resolve the collection function now.,no,undetermined,0,0,0,no,0.018308089667749442,no,0.012920518545012555,no,0.012230087382813249,no,0.01127240079594916,no,0.010830294936393687
1914,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// otherwise, everything ok.",no,undetermined,0,0,0,no,1.7320370967266915e-05,no,0.01290317498933137,no,0.012218483862664971,no,0.011882034460474845,no,0.011587958413152409
1915,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Re-arrange the tree so that the collection function is the root and the lhs is the path.,no,undetermined,0,0,0,no,0.004242809215911975,no,0.004364311246483627,no,0.004284789575471991,no,0.0038957605816489164,no,0.0036872290955415853
1916,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//    protected RegionRootListener listener;,no,undetermined,0,0,0,no,0.02258440371291666,no,0.01292427690757314,no,0.012237933527799541,no,0.01188114302867359,no,0.011592123615610687
1917,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// inject the WHERE after the parent,no,undetermined,0,0,0,no,0.019434478265341493,no,0.012906934340301194,no,0.012248160125969873,no,0.011867431018001863,no,0.011575412977366046
1918,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Never include subclasses for implied from elements.,no,undetermined,0,0,0,no,0.005139829034188687,no,0.004748138100393568,no,0.0043667536043290505,no,0.0041856118436992395,no,0.004020133255993426
1919,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Establish the region root node with a non-locking data version,no,undetermined,0,0,0,no,0.010058594809989309,no,0.0060669814527473855,no,0.0057236853015054726,no,0.005408824998265929,no,0.005210719863816287
1920,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// For pessimistic locking, we just want to toss out our ref // to any old invalid root node and get the latest (may be null)            ",no,undetermined,0,0,0,no,0.011397865523512938,no,0.01279531562556276,no,0.01188058876053953,no,0.011497857719973047,no,0.011207464336240177
1921,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// The rest only matters for optimistic locking, where we // need to establish the proper data version on the region root",no,undetermined,0,0,0,no,0.04569561608325736,no,0.012882655340423772,no,0.012211063870400768,no,0.01185779509024913,no,0.011562334672299997
1922,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Prepare the left hand side and get the data type.,no,undetermined,0,0,0,no,0.0036509074925076906,no,0.004864905159226435,no,0.004545626036442922,no,0.004431505406425374,no,0.004252240613541229
1923,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Prepare the left hand side and get the data type.,no,undetermined,0,0,0,no,0.0036509074925076906,no,0.004864905159226435,no,0.004545626036442922,no,0.004431505406425374,no,0.004252240613541229
1924,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If this dot has already been resolved, stop now.",no,undetermined,0,0,0,no,0.00610657237140661,no,0.003818884581284894,no,0.003577452934593274,no,0.003571818253461789,no,0.0034104324504759744
1925,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// PROPERTIES,no,undetermined,0,0,0,no,0.003538818736704457,no,0.003232205632595162,no,0.002976990883263783,no,0.002984297171515596,no,0.002850282165435171
1926,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The property is another class..,no,undetermined,0,0,0,no,0.017096831086018074,no,0.011901793857025448,no,0.01221693546372921,no,0.011872953014091,no,0.011587949002881135
1927,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Otherwise, this is a primitive type.",no,undetermined,0,0,0,no,0.002593602461181509,no,0.002707612211154895,no,0.0025662762845468025,no,0.0024946235281826843,no,0.002372214997955011
1928,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//foo.bars.size (also handles deprecated stuff like foo.bars.maxelement for backwardness),no,undetermined,0,0,0,no,0.00558351838322287,no,0.007855853033070988,no,0.007132121786851236,no,0.00721946427371487,no,0.0069859268700033375
1929,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Use the delegate.,no,undetermined,0,0,0,no,0.012794529432989317,no,0.012582682979175872,no,0.01155284886927659,no,0.011243378950904196,no,0.01090876046022325
1930,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// For Timestamps, we default to a separate config",no,undetermined,0,0,0,no,0.0035862947537741133,no,0.003961987285674923,no,0.0037292574212152204,no,0.003667327266883077,no,0.003512315511004246
1931,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//optimistic-lock=""all"", include all updatable properties //optimistic-lock=""dirty"", include all properties we are updating this time",no,undetermined,0,0,0,no,0.0055392125114877705,no,0.0034675676340992817,no,0.003247597230336828,no,0.0030545307177184586,no,0.002909156190592411
1932,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// this property belongs to the table, and it is not specifically // excluded from optimistic locking by optimistic-lock=""false""",no,undetermined,0,0,0,no,0.009859163024473129,no,0.004429464546664988,no,0.004352516813956168,no,0.004314468102963051,no,0.0041320894230697175
1933,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//information about properties of this class, //including inherited properties //(only really needed for updatable/insertable properties)",no,undetermined,0,0,0,no,0.025200607179870375,no,0.012888651091072558,no,0.01221857754532174,no,0.011845487501900835,no,0.011564848434139328
1934,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Here we render the select column list based on the properties defined as being generated. // For partial component generation, we currently just re-select the whole component // rather than trying to handle the individual generated portions.",no,undetermined,0,0,0,no,0.04106022999230568,no,0.012897068939213422,no,0.01222540922089432,no,0.01186987485155042,no,0.011587250810788555
1935,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// NOTE : addDuplicateAlias() already performs nullness checks on the alias.,no,undetermined,0,0,0,no,0.035520815468491174,no,0.012908105164740294,no,0.012201040009076918,no,0.011868206538710405,no,0.011587780282523557
1936,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if the from-clauses are the same, we can be a little more aggressive in terms of what we reuse",no,undetermined,0,0,0,no,0.044445815816112455,no,0.012908200427499024,no,0.012218415198438165,no,0.011859205509585842,no,0.011561751095626644
1937,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_0,no,undetermined,0,0,0,no,0.004742980399292193,no,0.005144618038151528,no,0.004831040616159839,no,0.004722825853115608,no,0.004537698436407518
1938,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// again, null != null here",no,undetermined,0,0,0,no,0.005972060916006604,no,0.004287374153966625,no,0.0040748026689607485,no,0.003950925837839522,no,0.0037846645478364703
1939,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// otherwise (subquery case) dont reuse the fromElement if we are processing the from-clause of the subquery,no,undetermined,0,0,0,no,0.006314422917234994,no,0.012925935561335328,no,0.012231206506982518,no,0.01184900246873051,no,0.011570979076124095
1940,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we know only the lhs-hand type, so use that",no,undetermined,0,0,0,no,0.011136267206931586,no,0.012912213495406824,no,0.012202951291895194,no,0.01186095011148908,no,0.01156924134222655
1941,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the referenced node text is the special 'id',no,undetermined,0,0,0,no,0.0030398672900245807,no,0.003909358348626993,no,0.0034847969044271092,no,0.003497492019390146,no,0.0033393266407683395
1942,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// only the identifier property field name can be a reference to the associated entity's PK...,no,undetermined,0,0,0,no,0.006457768891194179,no,0.002587022096908166,no,0.0020930646731986613,no,0.002044566571301805,no,0.0019379414526169527
1943,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// special shortcut for id properties, skip the join! // this must only occur at the _end_ of a path expression",no,undetermined,0,0,0,no,0.008388847824903978,no,0.005962868875715882,no,0.005281032180621409,no,0.004892241432502994,no,0.004704945063411218
1944,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Append the new property name onto the unresolved path.,no,undetermined,0,0,0,no,0.03143917898329086,no,0.012903694241628806,no,0.012211177396017748,no,0.011844172194357112,no,0.011586697920598174
1945,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Tell the destination fromElement to 'includeSubclasses'.,no,undetermined,0,0,0,no,0.015465046741987882,no,0.012889396249310653,no,0.012212588687592053,no,0.011886095567987923,no,0.011561693487937593
1946,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If the lhs is a collection, use CollectionPropertyMapping",no,undetermined,0,0,0,no,0.005907921519642344,no,0.0028902446904079783,no,0.0029272692952637355,no,0.0028141488825122406,no,0.0025580525864639142
1947,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Don't resolve the node again.,no,undetermined,0,0,0,no,0.022050870418689965,no,0.01291961438657524,no,0.012235886146557677,no,0.010807063288216305,no,0.01051446846141508
1948,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//lists, arrays //sets, maps, bags",no,undetermined,0,0,0,no,0.013911297699230812,no,0.012898244566157024,no,0.01222808246231835,no,0.011875657865110823,no,0.011580117749062703
1949,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we have something like : ""? [op] rhs""",no,undetermined,0,0,0,no,0.0042853501524778926,no,0.0033920861541173104,no,0.003249357205720906,no,0.0031332364719145766,no,0.002992305016432866
1950,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Configure the cache to use our TM,no,undetermined,0,0,0,no,0.00913715062458888,no,0.009946898538302414,no,0.009631434963731467,no,0.009429168310233726,no,0.00913273596436953
1951,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Make sure JBC doesn't look one up,no,undetermined,0,0,0,no,0.006075215498160165,no,0.006275869456927432,no,0.00600129905225306,no,0.004951549453670992,no,0.004761445609307005
1952,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we finish all the ""removes"" first to take care of possible unique // constraints and so that we can take better advantage of batching",no,undetermined,0,0,0,no,0.0026140996108816976,no,0.006823388054434261,no,0.006557120042723644,no,0.00643442482651021,no,0.006210347968295703
1953,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//use a combination of foreign key columns and pk columns, since //the ordering of removal and addition is not guaranteed when //a child moves from one parent to another",no,undetermined,0,0,0,no,0.007154758150851717,no,0.012899704222435027,no,0.012206181062890125,no,0.011846803159028732,no,0.011548951347951399
1954,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Make sure we don't re-release the same cache,no,undetermined,0,0,0,no,0.032560082946694026,no,0.012886417878215005,no,0.01222889300781262,no,0.011861261990261036,no,0.0115746788662555
1955,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// We use a different delegate than the non-optimistic superclass default,no,undetermined,0,0,0,no,0.007521285963347116,no,0.004593263066431893,no,0.00410737418048916,no,0.004052944946681725,no,0.0038711886884231156
1956,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we have something like : ""lhs [op] ?""",no,undetermined,0,0,0,no,0.0023109611563425832,no,0.0023710640842423848,no,0.0023492039316152513,no,0.0022603002461563234,no,0.0021477705889802502
1957,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// don't create a unique key, 'cos some // databases don't like a UK on nullable // columns //getCollectionTable().createUniqueKey( getIdentifier().getConstraintColumns() );",no,undetermined,0,0,0,no,0.011351981059208779,no,0.01290628778152906,no,0.012207451833043457,no,0.011861189871258832,no,0.01157110940035748
1958,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//isSet = collection.isSet(); //isSorted = collection.isSorted();,no,undetermined,0,0,0,no,0.027722372592587353,no,0.012126578652011218,no,0.010980036101059522,no,0.010545873870517558,no,0.010050571806641269
1959,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we know only the rhs-hand type, so use that",no,undetermined,0,0,0,no,0.01815194480998008,no,0.012905455803824635,no,0.01223284251803424,no,0.011866912116019628,no,0.011571578354440266
1960,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If JBC is using INVALIDATION, we don't want to propagate changes. // We use the Timestamps cache to manage invalidation",no,undetermined,0,0,0,no,0.01878049404957143,no,0.012884763282388993,no,0.012222419774915031,no,0.011878270258797084,no,0.011595480554272581
1961,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// long,no,undetermined,0,0,0,no,0.01175923256963221,no,0.0129166294193736,no,0.012210062465327657,no,0.011883158552642709,no,0.01158753440360029
1962,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Don't hold the JBC node lock throughout the tx, as that // prevents updates // Add a zero (or low) timeout option so we don't block // waiting for tx's that did a put to commit",no,undetermined,0,0,0,no,0.0036071843641632567,no,0.0030266457836326394,no,0.0029353991895688437,no,0.002713828825779387,no,0.0025821690670182057
1963,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Double check the distributed cache,no,undetermined,0,0,0,no,0.0020843731754638297,no,0.002590935071395131,no,0.0029251851086939964,no,0.002864806646914661,no,0.002729871525328331
1964,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Get an exclusive right to update JBC for this key from this node.,no,undetermined,0,0,0,no,0.0030361607048189072,no,0.004579049523869864,no,0.004322936009130904,no,0.004291030501256557,no,0.004121310060027764
1965,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// one or the other needs to be a datetime for us to get into this method in the first place...,no,undetermined,0,0,0,no,0.03626412876091257,no,0.012876638388339775,no,0.0074313397983375145,no,0.007197040057021274,no,0.006988742319473425
1966,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// #2,no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
1967,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// nothing to do,no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
1968,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Add the condition to the join sequence that qualifies the indexed element.,no,undetermined,0,0,0,no,0.010688015184786926,no,0.006954157673782774,no,0.0065677837986617554,no,0.00642317086662443,no,0.00621473714449996
1969,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Sometimes use the element table alias, sometimes use the... umm... collection table alias (many to many)",no,undetermined,0,0,0,no,0.009114318757553171,no,0.0056593491882332226,no,0.005391509147632617,no,0.005229308092459814,no,0.004903942893453836
1970,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Now, set the text for this node.  It should be the element columns.",no,undetermined,0,0,0,no,0.0005323949931664838,no,0.0017600866026423311,no,0.0018038071471617363,no,0.0018134991498988862,no,0.0017169260833830447
1971,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Get the function return value type, based on the type of the first argument.",no,undetermined,0,0,0,no,0.004387464494606711,no,0.006771999290444087,no,0.00695228432983516,no,0.006786986075152581,no,0.006578688074237833
1972,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This will call initialize(tok)!,no,undetermined,0,0,0,no,0.002469348316088528,no,0.002664651391080147,no,0.0025199254057757833,no,0.00247829445917495,no,0.0023555426302846196
1973,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// mutation depends on the types of nodes invloved...,no,undetermined,0,0,0,no,0.011961837989509205,no,0.012929744551472272,no,0.012225661953908517,no,0.011859318829759047,no,0.011553217079216013
1974,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// logic operators by definition resolve to booleans,no,undetermined,0,0,0,no,0.017527933049925445,no,0.012897498298281938,no,0.012207178682832885,no,0.011847232223903392,no,0.011572961867332964
1975,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Generated select expressions are already resolved, nothing to do.",no,undetermined,0,0,0,no,0.01844359388744652,no,0.012884449079045828,no,0.012227383456860313,no,0.011878117590411267,no,0.011586743093937178
1976,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The path may be a reference to an alias defined in the parent query.,no,undetermined,0,0,0,no,0.009418860256224898,no,0.008710515254173122,no,0.00816885381780637,no,0.007631876506990899,no,0.007388511114806059
1977,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The HQL class alias refers to the class name.,no,undetermined,0,0,0,no,0.005633437124399709,no,0.004927189490718378,no,0.004615290430464917,no,0.004481653931811376,no,0.004318387994270183
1978,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Associate the table alias with the element.,no,undetermined,0,0,0,no,0.02439138834943861,no,0.012911134446461664,no,0.012201331047287678,no,0.011869523948035367,no,0.011569718830772808
1979,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// try the parent FromClause...,no,undetermined,0,0,0,no,0.002628137100300512,no,0.0027696584696486866,no,0.002620081507190323,no,0.0026017082924937097,no,0.002479404238375616
1980,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Make sure that all from elements registered with this FROM clause are actually in the AST.,no,undetermined,0,0,0,no,0.010665735810237045,no,0.005890445519047544,no,0.005074199511143505,no,0.004999831807563872,no,0.004805204602864676
1981,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Invoke setScalarColumnText on each constructor argument.,no,undetermined,0,0,0,no,0.0027931042161750833,no,0.0029583988164793595,no,0.002789289896160613,no,0.0027249821435610605,no,0.0025922530749264818
1982,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Collect the select expressions, skip the first child because it is the class name.",no,undetermined,0,0,0,no,0.002816989063251783,no,0.002052908677944969,no,0.001831926488634584,no,0.0018219607209883878,no,0.001727482524955952
1983,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// return an empty Type array,no,undetermined,0,0,0,no,0.003812238576899492,no,0.003527323781278713,no,0.003062387060464254,no,0.002994061340658969,no,0.002861265775755728
1984,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// We ensure ASYNC semantics (JBCACHE-1175),no,undetermined,0,0,0,no,0.012656392538528259,no,0.006893123652479946,no,0.007019034250221999,no,0.006839781929779642,no,0.006605108509553583
1985,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if there is no order by, make one",no,undetermined,0,0,0,no,0.00524457605909278,no,0.0009370689320776274,no,0.0008957736130331864,no,0.0008810189085010208,no,0.0008244598716152145
1986,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Initial load from JBC,no,undetermined,0,0,0,no,8.373238627964287e-05,no,9.019168621430659e-05,no,6.692317490098602e-05,no,6.683948618050445e-05,no,5.8482737919438526e-05
1987,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Find the WHERE; if there is no WHERE, find the FROM...",no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
1988,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Now, inject the newly built ORDER BY into the tree",no,undetermined,0,0,0,no,0.041050372334555316,no,0.012887378428193322,no,0.012213288024179071,no,0.01185471326567864,no,0.011583733790711573
1989,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// logic operators by definition resolve to boolean.,no,undetermined,0,0,0,no,0.003964677160654957,no,0.003454430513568278,no,0.003137940105221285,no,0.00299872063108992,no,0.002862022076428381
1990,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Render the identifier select fragment using the table alias.,no,undetermined,0,0,0,no,0.012424287830837646,no,0.006796874960622458,no,0.004781640861897646,no,0.004705072766483271,no,0.004528043486217701
1991,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Class names in the FROM clause result in a JoinSequence (the old FromParser does this).,no,undetermined,0,0,0,no,0.010761542841646602,no,0.012911875692512875,no,0.012237562179342167,no,0.011873499336073953,no,0.011583668651523549
1992,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// will still be issued when it used to be null,no,undetermined,0,0,0,yes,0.6203580653391869,yes,0.6101265396816383,yes,0.607888969354457,yes,0.5959459239612412,yes,0.6094099438564612
1993,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Otherwise, use the property mapping.",no,undetermined,0,0,0,no,0.010656929836355106,no,0.010805959063739518,no,0.010980669678515407,no,0.010796411527075883,no,0.010515300431362083
1994,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// We ensure ASYNC semantics (JBCACHE-1175),no,undetermined,0,0,0,no,0.012656392538528259,no,0.006893123652479946,no,0.007019034250221999,no,0.006839781929779642,no,0.006605108509553583
1995,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The standard comparator types are not Serializable but are singletons,no,undetermined,0,0,0,no,0.01202309610467005,no,0.01266546482884586,no,0.012234754900329142,no,0.011850983654147948,no,0.011559254108695786
1996,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ignore!,no,undetermined,0,0,0,no,0.0003963947956631522,no,0.0005033798635581664,no,0.0004702444207308477,no,0.0004640531103833746,no,0.0004297751119298306
1997,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ignore it,no,undetermined,0,0,0,no,0.0003963947956631522,no,0.0005033798635581664,no,0.0004702444207308477,no,0.0004640531103833746,no,0.0004297751119298306
1998,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Generate implicit joins, only if necessary.",no,undetermined,0,0,0,no,0.01866872871558067,no,0.01291714380959575,no,0.012239389266399297,no,0.011869833308650397,no,0.011587390021152699
1999,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If the property is a special collection property name, return a CollectionPropertyMapping.",no,undetermined,0,0,0,no,0.013081790195918238,no,0.007175825466428115,no,0.007228667742253037,no,0.006862041178516196,no,0.006560761562275732
2000,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Collection of components.,no,undetermined,0,0,0,no,0.0038233558820462386,no,0.001969465464536049,no,0.0020793669232637485,no,0.002050215976066135,no,0.0019089662986841703
2001,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// construct the cache,no,undetermined,0,0,0,no,0.0024926276094139293,no,0.002468894977942658,no,0.0023451219338601424,no,0.002302169399264349,no,0.002185559383976986
2002,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// local cache, so we use synchronization",no,undetermined,0,0,0,no,0.007282751878040864,no,0.009916451683979581,no,0.009350097173737961,no,0.009260429019660803,no,0.008966570025754645
2003,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//ie. 60 seconds,no,undetermined,0,0,0,no,0.006932760013743887,no,0.007086623194769695,no,0.00667432624625728,no,0.006475552481788318,no,0.006252848037954349
2004,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// We need to seed the version value as part of this bulk insert,no,undetermined,0,0,0,no,0.008062113116893213,no,0.005569843961146304,no,0.005313402256586884,no,0.005256949793367751,no,0.005075048405473884
2005,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// make sure the lhs is ""assignable""...",no,undetermined,0,0,0,no,0.0019717956022459286,no,0.002016906720638493,no,0.0019954389809321445,no,0.0019486879637374635,no,0.0018470101839593352
2006,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// false indicates to not generate parens around the assignment,no,undetermined,0,0,0,no,0.006257500400963419,no,0.0034680166430771176,no,0.0029491307534018495,no,0.0028918112799063127,no,0.002757393852998664
2007,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// currently allowed...,no,undetermined,0,0,0,no,0.033952266993714376,no,0.012921467045200825,no,0.012221843391392453,no,0.01184299690060091,no,0.011570924388267295
2008,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// in non-select queries, the only time we should need to join is if we are in a subquery from clause",no,undetermined,0,0,0,no,0.006672804129110701,no,0.004790729970812855,no,0.003940541481341982,no,0.003818335132403055,no,0.003658643283074
2009,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//return classAlias == null ? className : classAlias;,no,undetermined,0,0,0,no,0.0063726377612532805,no,0.00661162184603637,no,0.00619121310587259,no,0.005985849754564975,no,0.005788355033292482
2010,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This is an explicit FROM element.,no,undetermined,0,0,0,no,0.006023427032692876,no,0.0050022349927899695,no,0.00477080446768134,no,0.004674173600525418,no,0.0044993717633710194
2011,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//swaldman 2006-08-28: define c3p0-style configuration parameters for initialPoolSize, which //                     hibernate sensibly lets default to minPoolSize, but we'll let users //                     override it with the c3p0-style property if they want.",no,undetermined,0,0,0,no,0.010342596485374752,no,0.01180455088748776,no,0.011391262742571798,no,0.011268096345530273,no,0.011019704183141982
2012,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ParameterContainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.006562256669935704,no,0.006959610490900894,no,0.006641824253982197,no,0.005272146940800083,no,0.0051040069329332145
2013,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Fetch can't be used with scroll() or iterate().,no,undetermined,0,0,0,no,0.0374463562243454,no,0.01291843392988943,no,0.012231114439946678,no,0.011841203834437508,no,0.01156260361895702
2014,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// If it's not implied or it is implied and it's a many to many join where the target wasn't found.,no,undetermined,0,0,0,no,0.0044451792560125155,no,0.003566531419420437,no,0.0032701458076556627,no,0.0032143476172824584,no,0.0030736368434725147
2015,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we need to wrtap the param in a cast(),no,undetermined,0,0,0,no,0.32815034448187724,no,0.22499474706215247,no,0.2048108184422708,no,0.1995292813680705,no,0.2036100719033747
2016,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Since this is an explicit FROM element, it can't be implied in the FROM clause.",no,undetermined,0,0,0,no,0.006095373953589759,no,0.005278830608124766,no,0.004980313126663244,no,0.004920134595080885,no,0.004742193842097086
2017,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Do nothing, eplicit from elements are *always* in the projection list.",no,undetermined,0,0,0,no,0.002490511367574175,no,0.002350125946359281,no,0.0021676139412901752,no,0.0021285268057387226,no,0.0020182187222297036
2018,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// propertyName refers to something like collection.size...,no,undetermined,0,0,0,no,0.012180965320592032,no,0.008484881343038245,no,0.008150942073529828,no,0.007844330474736195,no,0.007489796234659018
2019,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// property name is a sub-path of a component...,no,undetermined,0,0,0,no,0.009629665087917696,no,0.008989998394043255,no,0.008659242284660024,no,0.008326557755639306,no,0.008090776893381675
2020,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Always add the collection's query spaces.,no,undetermined,0,0,0,no,0.01678993833897982,no,0.009138179356428452,no,0.00880780402824468,no,0.008254582115913827,no,0.007877754974684119
2021,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// nothing to do; even if the operand is a parameter, no way we could // infer an appropriate expected type here",no,undetermined,0,0,0,no,0.13925503824892607,no,0.1427970649136383,no,0.13879143420050824,no,0.1347289639128648,no,0.13675092635687602
2022,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Notify the FROM element that it is being referenced by the select.,no,undetermined,0,0,0,no,0.0036203105253586193,no,0.004980371910471258,no,0.004179574571506874,no,0.00417007430458209,no,0.0040009637591121375
2023,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// logic operators by definition resolve to booleans,no,undetermined,0,0,0,no,0.017527933049925445,no,0.012897498298281938,no,0.012207178682832885,no,0.011847232223903392,no,0.011572961867332964
2024,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// DotNode uses null here...,no,undetermined,0,0,0,no,0.04572260847810214,no,0.012880927940886982,no,0.012214559320151142,no,0.011853254552145925,no,0.01156750471656487
2025,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// We represent a from-clause alias,no,undetermined,0,0,0,no,0.009417092805261979,no,0.008866334524499132,no,0.004474540938546563,no,0.004396345458591207,no,0.004213672132436069
2026,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we are the RHS of the DOT representing a naked comp-prop-ref,no,undetermined,0,0,0,no,0.008444401319575655,no,0.006450825991595193,no,0.005897064204184079,no,0.005794103572440472,no,0.005593560860157032
2027,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we represent a naked (simple) prop-ref,no,undetermined,0,0,0,no,0.002617368935562718,no,0.001936982605648999,no,0.0009887127001514688,no,0.0009681798424683734,no,0.0009064475997990947
2028,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// EARLY EXIT!!!  return so the resolve call explicitly coming from DotNode can // resolve this...,no,undetermined,0,0,0,no,0.03505476407115389,no,0.012917242302122755,no,0.012240547240051712,no,0.011854534590406468,no,0.01156651942450748
2029,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// assume this ident's text does *not* refer to a property on the given persister,no,undetermined,0,0,0,no,0.030252095505730162,no,0.012912089332514278,no,0.0122309844337212,no,0.011845370071843825,no,0.011560765404702043
2030,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// just ignore it for now, it'll get resolved later...",no,undetermined,0,0,0,no,0.015936839033420167,no,0.010128110153399506,no,0.009861483854067125,no,0.00940273652952717,no,0.009144496290362972
2031,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// This is not actually a constant, but a reference to FROM element.",no,undetermined,0,0,0,no,0.019431237315660193,no,0.012927250639644127,no,0.01221337780563033,no,0.01185340357653152,no,0.011558094186873428
2032,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// check to see if our ""propPath"" actually // represents a property on the persister",no,undetermined,0,0,0,no,0.026897922537773122,no,0.011075849420437897,no,0.01171200084354265,no,0.011445197211432527,no,0.011203696158863628
2033,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// these pieces are needed for usage in select clause,no,undetermined,0,0,0,no,0.011955506116065006,no,0.01288358469499805,no,0.012218554644394981,no,0.011878357965813333,no,0.011563254160323071
2034,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// assume we do *not* refer to a property on the given persister,no,undetermined,0,0,0,no,0.022006088982995164,no,0.008010369738431956,no,0.007368239992423425,no,0.007164477601502395,no,0.006935370853576063
2035,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// TRUE if the pool is borrowed from the outside, FALSE if we used to create it",no,undetermined,0,0,0,no,0.10017099977724658,no,0.08652246238826503,no,0.01222398005795244,no,0.011855004850471362,no,0.011566940196628664
2036,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// assume we do *not* refer to a property on the given persister,no,undetermined,0,0,0,no,0.022006088982995164,no,0.008010369738431956,no,0.007368239992423425,no,0.007164477601502395,no,0.006935370853576063
2037,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// get a connection from the pool (thru DriverManager, cfr. Proxool doc)",no,undetermined,0,0,0,no,0.006434076988844425,no,0.005359984889329958,no,0.00430223908859203,no,0.00432055101708436,no,0.004149526529048275
2038,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// set the Transaction Isolation if defined,no,undetermined,0,0,0,no,0.0038887511432370504,no,0.0025842930921179995,no,0.0023798019208964784,no,0.002368838499129696,no,0.0022496184056347403
2039,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// naked property-refs cannot be used with an aliased from element,no,undetermined,0,0,0,no,0.02003069521734078,no,0.012896646183987993,no,0.012219052212627297,no,0.011866802510011003,no,0.011564799237898632
2040,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// do *not* over-write the column text, as that has already been // ""rendered"" during resolve",no,undetermined,0,0,0,no,0.04167363839753589,no,0.01290382382348221,no,0.012233796816608657,no,0.011857615907873514,no,0.011578121982935787
2041,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Look up class name using the first identifier in the path.,no,undetermined,0,0,0,no,0.00555817312776847,no,0.005618937430501743,no,0.0052312648874619835,no,0.0044832732402592165,no,0.004311454113338416
2042,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// toggle autoCommit to false if set,no,undetermined,0,0,0,no,0.004681400168223621,no,0.0037691126386629327,no,0.0033241483042943496,no,0.0033053931664412694,no,0.003157104751747017
2043,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Add to the query spaces.,no,undetermined,0,0,0,no,0.011419282459494844,no,0.01059818506205651,no,0.010171546777713376,no,0.009552327420309255,no,0.009285087756204135
2044,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// return the connection,no,undetermined,0,0,0,no,0.03707368861598862,no,0.012916076806533542,no,0.012202648109355894,no,0.011843913545842424,no,0.011576322723392821
2045,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If the from element isn't in the same clause, create a new from element.",no,undetermined,0,0,0,no,0.004001031133148799,no,0.004253804323338877,no,0.004013642198400391,no,0.00393407423145539,no,0.003768270554570315
2046,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Correlated subqueries create 'special' implied from nodes // because correlated subselects can't use an ANSI-style join,no,undetermined,0,0,0,no,0.003470080842902667,no,0.0028188618111798258,no,0.002548690333471771,no,0.0025295331606520113,no,0.0024045758426510236
2047,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// super-duper-classic-parser-regression-testing-mojo-magic...,no,undetermined,0,0,0,no,0.052044961989957894,no,0.012892886098175925,no,0.01222672887793081,no,0.01186747130472924,no,0.011549232087248267
2048,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Get the configurator files (if available),no,undetermined,0,0,0,no,0.003253676438168423,no,0.00374646392978395,no,0.0036672757811437,no,0.003556787044377953,no,0.0034054426126569146
2049,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// A collection of entities...,no,undetermined,0,0,0,no,0.014751647491033333,no,0.009330105962902832,no,0.009525202315679764,no,0.009124021830147733,no,0.00875966566128585
2050,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// A collection of components...,no,undetermined,0,0,0,no,0.0038233558820462386,no,0.001969465464536049,no,0.0020793669232637485,no,0.002050215976066135,no,0.0019089662986841703
2051,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Default the Proxool alias setting,no,undetermined,0,0,0,no,0.00041918932850125386,no,0.0005109424305701176,no,0.0004561947250958046,no,0.00045838250207339714,no,0.00042367758107675693
2052,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// A collection of scalar elements...,no,undetermined,0,0,0,no,0.011723722673888711,no,0.0031035124955611612,no,0.0029524866327623805,no,0.0029013974449822546,no,0.002726808293989877
2053,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Validate that an alias name was provided to determine which pool to use,no,undetermined,0,0,0,no,0.009254516217793374,no,0.012905558958316712,no,0.010360807570625873,no,0.010355257395919483,no,0.010073026256349111
2054,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// We only build caches if *none* were passed in.  Passing in // caches counts as a clear statement of exactly what is wanted,no,undetermined,0,0,0,no,0.022756694574860983,no,0.01288464061930349,no,0.012231403646728338,no,0.01185191390398005,no,0.011577677414144333
2055,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Validate that an alias name was provided to determine which pool to use,no,undetermined,0,0,0,no,0.009254516217793374,no,0.012905558958316712,no,0.010360807570625873,no,0.010355257395919483,no,0.010073026256349111
2056,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Don't include sub-classes for implied collection joins or subquery joins.,no,undetermined,0,0,0,no,0.008764852662607105,no,0.012931280284854848,no,0.012230448780855963,no,0.011853268450348661,no,0.011570849874304576
2057,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Treat explict from elements in sub-queries properly.,no,undetermined,0,0,0,no,0.011848678321588169,no,0.009205472026552424,no,0.007908663744464337,no,0.007958754182633821,no,0.007722646458831748
2058,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// semantic action handling ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.011624237440590617,no,0.012883282645648985,no,0.012205029527266103,no,0.01186621765371883,no,0.011572658597536712
2059,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Append the stem to the proxool pool alias,no,undetermined,0,0,0,no,0.004798943591668792,no,0.006807726529872212,no,0.005461939265141769,no,0.005505339970324617,no,0.005309543942732475
2060,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Configured using the JAXP Configurator,no,undetermined,0,0,0,no,0.004080037280435092,no,0.0034798951111689115,no,0.0032615506894246586,no,0.0031966218133728627,no,0.003057172089218741
2061,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Append the stem to the proxool pool alias,no,undetermined,0,0,0,no,0.004798943591668792,no,0.006807726529872212,no,0.005461939265141769,no,0.005505339970324617,no,0.005309543942732475
2062,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Append the stem to the proxool pool alias,no,undetermined,0,0,0,no,0.004798943591668792,no,0.006807726529872212,no,0.005461939265141769,no,0.005505339970324617,no,0.005309543942732475
2063,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Configured using the Properties File Configurator,no,undetermined,0,0,0,no,0.009396194294759031,no,0.007335342518032433,no,0.006927936811156284,no,0.006425967916155346,no,0.00620568279549417
2064,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Remember Isolation level,no,undetermined,0,0,0,no,0.00925770932689603,no,0.012664843492098822,no,0.012239321351459541,no,0.011869560355506733,no,0.011569345343632844
2065,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// If the provider was leeching off an existing pool don't close it,no,undetermined,0,0,0,no,0.0007074853930226837,no,0.0006218384652778249,no,0.0005043105044490429,no,0.0004883886144609057,no,0.00045292194226082564
2066,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// NOTE: Because we're using ASTUtil.createParent(), the tree must be created from the bottom up. // IS EMPTY x => (EXISTS (QUERY (SELECT_FROM (FROM x) ) ) )",no,undetermined,0,0,0,no,0.02683010511585411,no,0.01289526452055242,no,0.012207967221849976,no,0.011867165416909064,no,0.011584200685111738
2067,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// the ""root from-element"" in correlated subqueries do need this piece",no,undetermined,0,0,0,no,0.0168925874602686,no,0.012125351306861524,no,0.011110170042941932,no,0.010613628854436327,no,0.010340687332541582
2068,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Create the FROM element for the target (the elements of the collection).,no,undetermined,0,0,0,no,0.001155119819380001,no,0.000783183119649459,no,0.0007214329219177334,no,0.0007079929223226033,no,0.0006501396955476967
2069,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If the join is implied, then don't include sub-classes on the element.",no,undetermined,0,0,0,no,0.007420629106419382,no,0.005194915697288608,no,0.0047893408427239674,no,0.004436624993142872,no,0.004272965904367201
2070,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.002525552164893863,no,0.0035372964829689696,no,0.003319511533314436,no,0.0032615474029665742,no,0.0031159665856848066
2071,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// not really a many-to-one association *necessarily*,no,undetermined,0,0,0,no,0.026444512384652587,no,0.012894364284142947,no,0.012231372172448135,no,0.011865351281684004,no,0.011571554745856655
2072,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// The associated entity is implied, but it must be included in the FROM. // The collection alias is the role.",no,undetermined,0,0,0,no,0.016548971530232465,no,0.010983122684027694,no,0.008809894615610027,no,0.008354538589234049,no,0.00802974914595242
2073,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// not really a many-to-one association *necessarily*,no,undetermined,0,0,0,no,0.026444512384652587,no,0.012894364284142947,no,0.012231372172448135,no,0.011865351281684004,no,0.011571554745856655
2074,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//always overwrite nonversioned data,no,undetermined,0,0,0,no,0.0003104364542465416,no,0.0004204855205975205,no,0.0003826874970943663,no,0.000376264489756444,no,0.0003467815543350745
2075,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Tag this node as a JOIN. // Don't include subclasses in the join. // This is a clollection join.,no,undetermined,0,0,0,no,0.005161491698671765,no,0.003365105588410928,no,0.0032224964555428734,no,0.003052525287190921,no,0.0029161608071856283
2076,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//public Currency getCurrency(int col) throws HibernateException;,no,undetermined,0,0,0,no,0.02111666202001039,no,0.01227358707936318,no,0.011590721257865715,no,0.011326960521155434,no,0.011023163187794368
2077,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Get the class name of the associated entity.,no,undetermined,0,0,0,no,0.003228139466602212,no,0.0027817554661674873,no,0.0023505303818014585,no,0.0022219479240633685,no,0.002111053488968328
2078,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// default is POJO,no,undetermined,0,0,0,no,9.054312686246939e-05,no,0.00018487480121048662,no,0.0001627417203441907,no,0.00016241986424737542,no,0.00014787394602370658
2079,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// use setParameter for null values,no,undetermined,0,0,0,no,0.0018682500608942071,no,0.0021497178900962556,no,0.002075641440795818,no,0.0020539737181375075,no,0.0019444160403461472
2080,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//  origin, path, implied, columns, classAlias,",no,undetermined,0,0,0,no,0.0015676928016621048,no,0.00393750648097764,no,0.003940214078246425,no,0.003835699270039864,no,0.003770046225755426
2081,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*implied*/,no,undetermined,0,0,0,no,0.006387556501337541,no,0.006017262661846408,no,0.005474547143064347,no,0.005439270191524946,no,0.005253352431157372
2082,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// For implied many-to-many, just add the end join.",no,undetermined,0,0,0,no,0.0064723369566828245,no,0.006122182213668793,no,0.005742075027633782,no,0.00560578742625443,no,0.005421914102372405
2083,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Interceptor returned null, so do the dirtycheck ourself, if possible",no,undetermined,0,0,0,no,0.00494837192373547,no,0.0040017476556327486,no,0.0038758037093383816,no,0.0037481123335486354,no,0.0036059376142043163
2084,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// use setParameter for null values,no,undetermined,0,0,0,no,0.0018682500608942071,no,0.0021497178900962556,no,0.002075641440795818,no,0.0020539737181375075,no,0.0019444160403461472
2085,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Note this!!,no,undetermined,0,0,0,no,0.07781680918992707,no,0.012887704847256681,no,0.012203138579314559,no,0.011853417087007568,no,0.011563588444329496
2086,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.002525552164893863,no,0.0035372964829689696,no,0.003319511533314436,no,0.0032615474029665742,no,0.0031159665856848066
2087,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.002525552164893863,no,0.0035372964829689696,no,0.003319511533314436,no,0.0032615474029665742,no,0.0031159665856848066
2088,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Error message constants.,no,undetermined,0,0,0,no,0.008705021319794825,no,0.007480391013145585,no,0.007221196184290194,no,0.0070563107832731,no,0.006818939226536282
2089,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the standard SQL function name is current_timestamp...,no,undetermined,0,0,0,no,0.0006818146379750761,no,0.0011095847801412069,no,0.001047669532768826,no,0.0010602995141772863,no,0.0009967814451125958
2090,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//scan for next non-whitespace token,no,undetermined,0,0,0,no,0.0012689159507272504,no,0.0011160310919190147,no,0.0010467701077697196,no,0.0010210437467586514,no,0.0009574867475523369
2091,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This causes the factory to instantiate the desired class.,no,undetermined,0,0,0,no,0.03642403898434239,no,0.012906996639791187,no,0.012204812136296235,no,0.011885382910062263,no,0.011589778538973935
2092,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//private Type[] sqlResultTypes;,no,undetermined,0,0,0,no,0.010266473772302916,no,0.009187750086970998,no,0.009280103129059105,no,0.008982280072957823,no,0.008726742201503029
2093,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//private CacheEntry cacheEntry;,no,undetermined,0,0,0,no,0.012007605672528853,no,0.012405388285462421,no,0.01165915224419676,no,0.011327747815959537,no,0.011040416412694444
2094,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Make 100% certain that this is called before any subsequent ScheduledUpdate.afterTransactionCompletion()!!,no,undetermined,0,0,0,no,0.013156440541723444,no,0.012898570077772013,no,0.01223078801072742,no,0.011870524541692545,no,0.011561492923741607
2095,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//		TypeFactory.deepCopy( currentState, propTypes, persister.getPropertyUpdateability(), deletedState, session );",no,undetermined,0,0,0,no,0.031126428616663388,no,0.01292701753741313,no,0.012244804664904074,no,0.011863638646232955,no,0.011592546575079844
2096,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Frontbase has no known variation of a ""SELECT ... FOR UPDATE"" syntax...",no,undetermined,0,0,0,no,0.0050567108596303294,no,0.00689862944685082,no,0.006411077685827824,no,0.006197378814886336,no,0.005990484459765798
2097,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*public Type[] getSqlResultTypes() {
		return sqlResultTypes;
	}*/",no,undetermined,0,0,0,no,0.01151408366249248,no,0.010890004147560098,no,0.010376700209338022,no,0.010074965181830757,no,0.009816884963698045
2098,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//sqlResultTypeList.addAll( constructorArgumentTypeList );,no,undetermined,0,0,0,no,0.016918610065510903,no,0.012902495698489355,no,0.012227703866917974,no,0.011866956202834093,no,0.01159844602264371
2099,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//sqlResultTypeList.add( type );,no,undetermined,0,0,0,no,0.003504555186272465,no,0.004099663899521071,no,0.004150675561830903,no,0.004044005111439305,no,0.0038761435927615355
2100,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Always add the type to the return type list.,no,undetermined,0,0,0,no,0.004561779380052521,no,0.006991861885410878,no,0.006987707350734919,no,0.006852852978861464,no,0.006640650020120534
2101,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// have the entity entry perform post-update processing, passing it the // update state and the new version (if one).",no,undetermined,0,0,0,no,0.005766163624820963,no,0.008563636724745916,no,0.00825019495140887,no,0.00799538424057839,no,0.007778784677246176
2102,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// this entity defines proeprty generation, so process those generated // values...",no,undetermined,0,0,0,no,0.015250106528068517,no,0.007685557214979242,no,0.006494927216508501,no,0.0061630528681850694,no,0.005946570131205814
2103,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// add the fetched entities,no,undetermined,0,0,0,no,0.004702516534127513,no,0.00556319254751636,no,0.00574822531853106,no,0.005577584255897116,no,0.005399476486493808
2104,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Get ready to start adding nodes.,no,undetermined,0,0,0,no,0.009244097099914752,no,0.010847431794337463,no,0.009776694659241743,no,0.009549292900714402,no,0.009286936500957818
2105,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//EARLY EXIT!,no,undetermined,0,0,0,no,0.003933359283837993,no,0.001778043880411003,no,0.0017387305574731227,no,0.0017057885909706125,no,0.0016140607696130788
2106,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*|| oj.getJoinable().consumesCollectionAlias() */,no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
2107,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// just especially for the trivial collection filter,no,undetermined,0,0,0,no,0.015516884547772301,no,0.010070595021866026,no,0.008895680675031086,no,0.007886757537118382,no,0.007526435944618294
2108,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// need to look it up from the persistence-context,no,undetermined,0,0,0,no,0.025784697228793948,no,0.012885799014728931,no,0.012199630571527736,no,0.01186196102007902,no,0.011592669454256998
2109,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//sort first by role name,no,undetermined,0,0,0,no,0.027667565043842154,no,0.01291019513284422,no,0.012200051685168195,no,0.011871296403668356,no,0.011582488201193218
2110,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// function support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.003669965830817299,no,0.0129293762566348,no,0.012208762797528425,no,0.011874152676545959,no,0.011586051988788516
2111,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//update last non-whitespace token, if necessary",no,undetermined,0,0,0,no,0.003288000475586772,no,0.004058585789220524,no,0.003855864938832972,no,0.0037114551051943318,no,0.0035500087503133556
2112,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//then by fk,no,undetermined,0,0,0,no,0.05819221715043414,no,0.012918180725041402,no,0.012228758701736692,no,0.01187124440104125,no,0.011575587394248873
2113,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*sqlResultTypeList,*/",no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
2114,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// nothing to do		,no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
2115,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*ArrayList sqlResultTypeList,*/",no,undetermined,0,0,0,no,0.006156981999046176,no,0.005722980581929466,no,0.005150790347593588,no,0.00499030028106174,no,0.004801320731701759
2116,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// nothing to do,no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
2117,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this method is called when a new non-null collection is persisted // or when an existing (non-null) collection is moved to a new owner,no,undetermined,0,0,0,no,0.057830203545604704,no,0.012883229059981873,no,0.012241308033062169,no,0.011861255721230866,no,0.011564833107947032
2118,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//notAfterClassTokens.add("","");",no,undetermined,0,0,0,no,0.00415481083007601,no,0.004498657312271504,no,0.004201071130841578,no,0.004124244715226038,no,0.0039567375399876545
2119,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//beforeClassTokens.add(""new""); DEFINITELY DON'T HAVE THIS!!",no,undetermined,0,0,0,no,0.011612075257761992,no,0.009612278506365105,no,0.009119821751697706,no,0.007992451681425369,no,0.007743374936755836
2120,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.004656560998695368,no,0.006925669544129221,no,0.0068336108776193205,no,0.006680769418574773,no,0.006440573191393503
2121,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//TODO:,no,undetermined,0,0,0,no,0.011915769773668481,no,0.012892946551675156,no,0.012212929575441765,no,0.011854801627810656,no,0.011589831620060054
2122,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// remove initial "", """,no,undetermined,0,0,0,no,0.00018795168444234354,no,0.00022644907483344086,no,0.00018207070504325465,no,0.00018241860622662242,no,0.0001658015477899422
2123,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Add the type to the list of returned sqlResultTypes.,no,undetermined,0,0,0,no,0.005811413791798783,no,0.005402232718755563,no,0.005092431263613757,no,0.005026776208584811,no,0.00485795956441151
2124,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Generate the select expression.,no,undetermined,0,0,0,no,0.01490290743108032,no,0.008919079615621899,no,0.004874956688429032,no,0.004655231467199534,no,0.004476018143436744
2125,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// now update all changed or added rows fks,no,undetermined,0,0,0,no,0.00532262958593909,no,0.004637008390014913,no,0.004224752661864949,no,0.0044689456928813705,no,0.00428922561139014
2126,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//			boolean put = persister.getCache().insert(ck, cacheEntry);",no,undetermined,0,0,0,no,0.002180978559689654,no,0.0013686495404479967,no,0.0012781641460237973,no,0.001283032301068005,no,0.0012092906533383914
2127,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// union subclass support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.05991119100017924,no,0.012924038368546928,no,0.012223579409211188,no,0.011861931389148083,no,0.011552184360624251
2128,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Skip 'DISTINCT' and 'ALL', so we return the first expression node.",no,undetermined,0,0,0,no,0.013244280380073553,no,0.010722086280372644,no,0.009531594488404673,no,0.009032127387138355,no,0.008782280556701856
2129,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Generate the property select tokens.,no,undetermined,0,0,0,no,0.011397194571099726,no,0.012203764358433965,no,0.008384616860784668,no,0.008209041744472416,no,0.007976573380908807
2130,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Get the function name node.,no,undetermined,0,0,0,no,0.0012457283559085812,no,0.0025058483401907057,no,0.0022930767120029013,no,0.0022791784235245277,no,0.002164104076739532
2131,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_0,no,undetermined,0,0,0,no,0.004742980399292193,no,0.005144618038151528,no,0.004831040616159839,no,0.004722825853115608,no,0.004537698436407518
2132,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// This handles HHH-354, where there is a strange property name in a where clause. // If the lookahead contains a DOT then something that isn't an IDENT...",no,undetermined,0,0,0,no,0.002696724343855532,no,0.003940684092675245,no,0.003967559280130063,no,0.0039405773464421855,no,0.003777065240186459
2133,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Method expressions in a SELECT should always be considered scalar.,no,undetermined,0,0,0,no,0.0023451617540205714,no,0.005216853236802753,no,0.004644407514534532,no,0.004478071817233847,no,0.004312756795803553
2134,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// areturn // return the value of the field,no,undetermined,0,0,0,no,0.002885129279069309,no,0.0033363740571238647,no,0.0045932022625432434,no,0.004448893935140986,no,0.004276538916787914
2135,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//do nothing - we only need to notify the cache...,no,undetermined,0,0,0,no,0.038092819175466024,no,0.012878177284741154,no,0.012209228534563629,no,0.011874023113608863,no,0.011596537858331256
2136,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//sort first by entity name,no,undetermined,0,0,0,no,0.009251689739251225,no,0.006953056715573803,no,0.005701621749152739,no,0.005310832836407312,no,0.005110491276706159
2137,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// If this is 'elements' then create a new FROM element.,no,undetermined,0,0,0,no,0.003724002966704315,no,0.004820778312742385,no,0.0044558953579572754,no,0.004391874097454941,no,0.00421629819339907
2138,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//then by id,no,undetermined,0,0,0,no,0.011822636310289425,no,0.00479989917497007,no,0.0044550654933279265,no,0.004352286948767134,no,0.004177164859374285
2139,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Not elements(x),no,undetermined,0,0,0,no,0.002625222005751507,no,0.002543173466476578,no,0.002417156821681157,no,0.002366152393792156,no,0.0022503502286218553
2140,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Dialect function,no,undetermined,0,0,0,no,0.007259084944237441,no,0.012912460510240689,no,0.012235396708113543,no,0.011869436536137801,no,0.011595195619305068
2141,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// to be safe...,no,undetermined,0,0,0,no,0.004733730884140914,no,0.0036375475159005207,no,0.0034767745841063477,no,0.00306223121004748,no,0.002921071192436947
2142,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Collection 'property function',no,undetermined,0,0,0,no,0.00492774496134953,no,0.0031744758518003685,no,0.0030755304791338896,no,0.0029950013670227383,no,0.002808938077084466
2143,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If the constant is an IDENT, figure out what it means...",no,undetermined,0,0,0,no,0.014470280084680718,no,0.010179365875760555,no,0.008807124245754961,no,0.0087745189189728,no,0.00852983477260498
2144,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// no transformations took place, so handle it as we would a // non-instrumented class",no,undetermined,0,0,0,no,0.009092680510598309,no,0.00994591572651228,no,0.009622127042650386,no,0.009381763751846729,no,0.009111553187892547
2145,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// IDENT is a class alias in the FROM.,no,undetermined,0,0,0,no,0.009755848316978866,no,0.008991752425923172,no,0.009148718581860707,no,0.009038954263102408,no,0.008792427590235009
2146,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Resolve to an identity column.,no,undetermined,0,0,0,no,0.010668220839298522,no,0.012902874321664,no,0.012238511728403383,no,0.011870965337287221,no,0.011589163028025075
2147,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// see if the entry represents a class file,no,undetermined,0,0,0,no,0.0016147688001721613,no,0.0019002369208128455,no,0.0019358090518812163,no,0.0017644814684020132,no,0.0016687163658420383
2148,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Otherwise, it's a literal.",no,undetermined,0,0,0,no,0.008471668526311071,no,0.010212267952630508,no,0.00999698921640738,no,0.009726593582527985,no,0.009451273635403929
2149,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the name of an entity class,no,undetermined,0,0,0,no,0.00832571773353047,no,0.005903267702082896,no,0.0046966952022516155,no,0.004383712737073339,no,0.004213977058248968
2150,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// see if the entry represents a class file,no,undetermined,0,0,0,no,0.0016147688001721613,no,0.0019002369208128455,no,0.0019358090518812163,no,0.0017644814684020132,no,0.0016687163658420383
2151,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//the class discriminator value,no,undetermined,0,0,0,no,0.004429788800648157,no,0.004889543372287324,no,0.004624976220678132,no,0.004536974610233802,no,0.004361648390313875
2152,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Add a space before the display text.,no,undetermined,0,0,0,no,0.0012728348633363432,no,0.0013430637946846298,no,0.0012470382116791597,no,0.0012434558880740022,no,0.001168525247535565
2153,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// intentionally empty,no,undetermined,0,0,0,no,0.006952547877549867,no,0.008046386937544878,no,0.007800606743259962,no,0.008378318925596656,no,0.008145731067491674
2154,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Find or create the WHERE clause,no,undetermined,0,0,0,no,0.0025105367659016406,no,0.003300792311699694,no,0.0032322707782388355,no,0.0031570528473852974,no,0.003008877192680474
2155,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// child == parent.getFirstChild(),no,undetermined,0,0,0,no,0.004979235551942236,no,0.0041501674994845195,no,0.0038675010388578538,no,0.0038482998468676115,no,0.0036834715230284697
2156,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// set the name of bulk accessor.,no,undetermined,0,0,0,no,0.005032035767834709,no,0.0030816523114814945,no,0.0029732247256073823,no,0.0028649556112152544,no,0.0027304118423916914
2157,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_0,no,undetermined,0,0,0,no,0.004742980399292193,no,0.005144618038151528,no,0.004831040616159839,no,0.004722825853115608,no,0.004537698436407518
2158,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_0,no,undetermined,0,0,0,no,0.004742980399292193,no,0.005144618038151528,no,0.004831040616159839,no,0.004722825853115608,no,0.004537698436407518
2159,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// invokespecial,no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
2160,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// return,no,undetermined,0,0,0,no,0.001057492383143947,no,0.0013316596324714771,no,0.0011460020169193198,no,0.0011158146727426985,no,0.0010482475536592862
2161,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Find or create the WHERE clause,no,undetermined,0,0,0,no,0.0025105367659016406,no,0.003300792311699694,no,0.0032322707782388355,no,0.0031570528473852974,no,0.003008877192680474
2162,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_1 // load bean,no,undetermined,0,0,0,no,0.006903188599239487,no,0.007293414914037466,no,0.006690977697319778,no,0.006500639338265014,no,0.006166514074958367
2163,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Filter conditions need to be inserted before the HQL where condition and the // theta join node.  This is because org.hibernate.loader.Loader binds the filter parameters first, // then it binds all the HQL query parameters, see org.hibernate.loader.Loader.processFilterParameters().",no,undetermined,0,0,0,no,0.00626123598341794,no,0.007655191543447532,no,0.007246298632284419,no,0.00669969392490343,no,0.006503291586821178
2164,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// checkcast // cast bean,no,undetermined,0,0,0,no,0.016307142276091965,no,0.012904119897691796,no,0.012229343161378458,no,0.011864877897838407,no,0.011576218187052695
2165,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Put the FILTERS node before the HQL condition and theta joins,no,undetermined,0,0,0,no,0.004669251484497432,no,0.00449370840570615,no,0.0042210034441697636,no,0.0041838605661149355,no,0.004024255617728316
2166,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// astore_3 // store bean,no,undetermined,0,0,0,no,0.0038886591660096848,no,0.004413814276609168,no,0.004235007619220241,no,0.004128758773121584,no,0.003961900035796647
2167,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// add the current fragment to the FILTERS node,no,undetermined,0,0,0,no,0.006669631828206874,no,0.006087058096063367,no,0.005393187266260564,no,0.005370926252216167,no,0.005170953195444623
2168,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Create a new THETA_JOINS node as a parent of all filters,no,undetermined,0,0,0,no,0.004139712730862291,no,0.004320012238081805,no,0.003966530372415873,no,0.003962106223955047,no,0.00379375132107924
2169,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_2 // args,no,undetermined,0,0,0,no,0.0070221650045603915,no,0.007440626929650025,no,0.00699030314042458,no,0.0067990995454041804,no,0.006571759158054591
2170,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Put the THETA_JOINS node before the HQL condition, after the filters.",no,undetermined,0,0,0,no,0.004534653097438123,no,0.003203697003347914,no,0.002980699262062525,no,0.00296151646192252,no,0.002829875325638599
2171,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// First, try to get the persister using the given name directly.",no,undetermined,0,0,0,no,0.03614556773545582,no,0.012892720011331621,no,0.012211648089636661,no,0.011855161952215865,no,0.011581798569459968
2172,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// iconst_i // continue to aastore // growing stack is 1,no,undetermined,0,0,0,no,0.004265734937905118,no,0.0038315621768508436,no,0.0036629182786143233,no,0.0036385338728069797,no,0.003480819825226383
2173,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// unable to locate it using this name,no,undetermined,0,0,0,no,0.0013903829244700965,no,0.0011926129300441042,no,0.0011137000820470133,no,0.0011070224761974884,no,0.00104099050086301
2174,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If that didn't work, try using the 'import' name.",no,undetermined,0,0,0,no,0.022790733262937363,no,0.012907188476829918,no,0.012230393320222905,no,0.011879399076483296,no,0.01155100241159541
2175,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Implicit joins use theta style (WHERE pk = fk), explicit joins use JOIN (after from)",no,undetermined,0,0,0,no,0.014137454943519253,no,0.012926524556509665,no,0.012218050078304617,no,0.01187323636523398,no,0.011560582243879616
2176,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// locate the registered function by the given name,no,undetermined,0,0,0,no,0.0039868925910135095,no,0.004520877766496509,no,0.0037161158709378274,no,0.003691382361678125,no,0.003529620294606486
2177,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// determine the type of the first argument...,no,undetermined,0,0,0,no,0.006690536866822713,no,0.006822974014027568,no,0.005576533741059331,no,0.0054265549899788395,no,0.00522659937699986
2178,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_0,no,undetermined,0,0,0,no,0.004742980399292193,no,0.005144618038151528,no,0.004831040616159839,no,0.004722825853115608,no,0.004537698436407518
2179,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Use the DOT node to emit the first column name. // Create the column names, folled by the column aliases.",no,undetermined,0,0,0,no,0.0074491546188084285,no,0.005268083435381609,no,0.00731860959909431,no,0.007287527390025687,no,0.007041664347098923
2180,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Append the text of the current node.,no,undetermined,0,0,0,no,0.0044390875429371045,no,0.004197195941450175,no,0.004067497660047686,no,0.004034197653809136,no,0.0038655570167277077
2181,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If the node has a first child, recurse into the first child.",no,undetermined,0,0,0,no,0.004193683790741309,no,0.005120827677742235,no,0.004716381902602708,no,0.004754542403696218,no,0.004568418904569846
2182,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// new,no,undetermined,0,0,0,no,0.002636179336331818,no,0.0037656113856225134,no,0.003564350765537382,no,0.0035326015975680643,no,0.0033746501263520966
2183,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If there is a second child (RHS), recurse into that child.",no,undetermined,0,0,0,no,0.005528971465344464,no,0.00466848429250874,no,0.004361472664221409,no,0.004328016028865061,no,0.004155733837863945
2184,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// dup,no,undetermined,0,0,0,no,0.0029755378220813426,no,0.003920139222089205,no,0.003740456606294171,no,0.003664229779081345,no,0.003498378148557271
2185,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_3 // load the raw bean,no,undetermined,0,0,0,no,0.0045962864491976025,no,0.00520216194871317,no,0.0047225635414139345,no,0.004632040617124858,no,0.004374318196448248
2186,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// invokeinterface,no,undetermined,0,0,0,no,0.004461466356121916,no,0.0048726413120573795,no,0.004563899386311012,no,0.004473418388100706,no,0.00429371128114475
2187,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// invokevirtual,no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
2188,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// invokevirtual,no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
2189,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aastore // args,no,undetermined,0,0,0,no,0.0076501302565504335,no,0.008036079447111592,no,0.0075334970580592615,no,0.007289749622968074,no,0.007059170782709348
2190,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// istore_3 // store i,no,undetermined,0,0,0,no,0.0022761663156667033,no,0.002538031795629605,no,0.0023768454554662743,no,0.002333905878639027,no,0.0022203906419601856
2191,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_1 // load the bean,no,undetermined,0,0,0,no,0.006903188599239487,no,0.007293414914037466,no,0.006690977697319778,no,0.006500639338265014,no,0.006166514074958367
2192,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* current stack len = 0 */,no,undetermined,0,0,0,no,0.003049251213476724,no,0.0031335449918461463,no,0.0030567670111638088,no,0.0029924398979720664,no,0.002852664453886876
2193,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Iterate through the alias,JoinSequence pairs and generate SQL token nodes.",no,undetermined,0,0,0,no,0.004685933670186623,no,0.003516679765204877,no,0.0030760468234808697,no,0.003029176839551626,no,0.002889031548182927
2194,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this is used during SqlGenerator processing,no,undetermined,0,0,0,no,0.076025457695404,no,0.012921325075858985,no,0.012241904182361173,no,0.011886227912624493,no,0.011592968903113595
2195,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// start region to handling exception (BulkAccessorException),no,undetermined,0,0,0,no,0.004396559395763588,no,0.0069519789496706825,no,0.0065137209855667295,no,0.006213813541591378,no,0.005989355329487794
2196,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If there is a FROM fragment and the FROM element is an explicit, then add the from part.",no,undetermined,0,0,0,no,0.018459532191194138,no,0.012921495188955464,no,0.012235916031558405,no,0.011859855931205952,no,0.011589656395594918
2197,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*&& StringHelper.isNotEmpty( frag )*/,no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
2198,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// iinc 3, 1",no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
2199,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// The FROM fragment will probably begin with ', '.  Remove this if it is present.",no,undetermined,0,0,0,no,0.18027151873684238,no,0.212732657439212,no,0.19654267564516484,no,0.19008286773801994,no,0.193868699790392
2200,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// This uses a PathExpressionParser but notice that compound paths are not valid, // only bare names and simple paths:",no,undetermined,0,0,0,no,0.02807197637952951,no,0.012909831136671148,no,0.012243626099900226,no,0.01186256237500993,no,0.011577540994821998
2201,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload 4 // load the raw bean,no,undetermined,0,0,0,no,0.004329593440199446,no,0.00500117280208978,no,0.004501463665586324,no,0.004419547407586683,no,0.004156461829890573
2202,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// SELECT p FROM p IN CLASS eg.Person ORDER BY p.Name, p.Address, p",no,undetermined,0,0,0,no,0.00238893514594303,no,0.000794532192269891,no,0.0006802894859501732,no,0.0006739025578827055,no,0.0006274440887011043
2203,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The reason for this is SQL doesn't let you sort by an expression you are // not returning in the result set.,no,undetermined,0,0,0,no,0.05594408027138272,no,0.012920080136552966,no,0.012236897851577623,no,0.011850768207210512,no,0.011562389895801514
2204,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// oracle sql-state code for deadlock,no,undetermined,0,0,0,no,0.004273541597347746,no,0.004324925381045375,no,0.00349363241928297,no,0.003457479361530273,no,0.0033039228304769827
2205,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_2 // load the args,no,undetermined,0,0,0,no,0.005864479661548613,no,0.00597180852663184,no,0.005351400772657615,no,0.0052083553361291675,no,0.0049257635285391245
2206,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Otherwise, try to use the no-arg constructor",no,undetermined,0,0,0,no,0.011463540065834466,no,0.012874223756443875,no,0.012228988359045949,no,0.011868996580237776,no,0.01159391491187311
2207,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// iconst_i,no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
2208,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// eat it and try next,no,undetermined,0,0,0,no,0.05995852267770608,no,0.012908433572779748,no,0.012212195091014916,no,0.011845207707621567,no,0.011563777772596533
2209,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aaload,no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
2210,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// checkcast,no,undetermined,0,0,0,no,0.004742980399292193,no,0.005057311703155543,no,0.004736545962292542,no,0.004628336617329349,no,0.004447822391908367
2211,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//default mode,no,undetermined,0,0,0,no,0.0025177432829724877,no,0.00326801447101069,no,0.003029634996940925,no,0.0029803372014357583,no,0.002842328198500322
2212,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// checkcast (case of reference type),no,undetermined,0,0,0,no,0.011625107405923582,no,0.009046189452752245,no,0.008193266895373029,no,0.008056876054379904,no,0.007805838712555474
2213,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* current stack len = 2 */,no,undetermined,0,0,0,no,0.003049251213476724,no,0.0031335449918461463,no,0.0030567670111638088,no,0.0029924398979720664,no,0.002852664453886876
2214,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// at some point the processing went bad, so we need to: //      1) make sure the connection handle gets released //      2) try to cleanup the JTA context as much as possible",no,undetermined,0,0,0,no,0.1139914880042041,no,0.10504875746126285,no,0.10321362315095868,no,0.10200901185191039,no,0.10335602226304132
2215,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// end region to handling exception (BulkAccessorException),no,undetermined,0,0,0,no,0.009754299598012264,no,0.012912908092514488,no,0.012241880079608424,no,0.011860233562619662,no,0.011551216667789955
2216,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// register in exception table,no,undetermined,0,0,0,no,0.0008305098876043361,no,0.0012177878337284857,no,0.001131477235321175,no,0.0011124478994254535,no,0.001045399575433637
2217,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Private constructor - stops checkstyle from complaining.,no,undetermined,0,0,0,no,0.0036652028400299846,no,0.0033628693568370964,no,0.003312942899032326,no,0.0032486844371717306,no,0.003100533603184312
2218,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//reset the dotcount (but not the path) //after reset!,no,undetermined,0,0,0,no,0.006623300350428876,no,0.004361520037761103,no,0.004167179154042916,no,0.004028127815003366,no,0.0038718188215763217
2219,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_0,no,undetermined,0,0,0,no,0.004742980399292193,no,0.005144618038151528,no,0.004831040616159839,no,0.004722825853115608,no,0.004537698436407518
2220,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//after reset!,no,undetermined,0,0,0,no,0.007649381743928059,no,0.004423765248456459,no,0.004185542940680021,no,0.004137858713271183,no,0.003979192731785199
2221,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Following methods we don't delegate since they have so little logic // it's clearer to just implement them here,no,undetermined,0,0,0,no,0.474323431080912,no,0.44545698992744853,no,0.43363260052438046,no,0.41205987151293944,no,0.4227170838905337
2222,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_0,no,undetermined,0,0,0,no,0.004742980399292193,no,0.005144618038151528,no,0.004831040616159839,no,0.004722825853115608,no,0.004537698436407518
2223,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// return,no,undetermined,0,0,0,no,0.001057492383143947,no,0.0013316596324714771,no,0.0011460020169193198,no,0.0011158146727426985,no,0.0010482475536592862
2224,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// return,no,undetermined,0,0,0,no,0.001057492383143947,no,0.0013316596324714771,no,0.0011460020169193198,no,0.0011158146727426985,no,0.0010482475536592862
2225,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// invokevirtual,no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
2226,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// checkcast,no,undetermined,0,0,0,no,0.004742980399292193,no,0.005057311703155543,no,0.004736545962292542,no,0.004628336617329349,no,0.004447822391908367
2227,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// dotcount>=2,no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
2228,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* local variables | target obj | each oldvalue | */,no,undetermined,0,0,0,no,0.0033661796901962946,no,0.00417010357312893,no,0.003935706497755669,no,0.0038191522249142146,no,0.0036533132926682677
2229,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// astore 5 // store exception,no,undetermined,0,0,0,no,0.0002678855052117427,no,0.0006421412363915949,no,0.0005885276207851076,no,0.0005841678363961423,no,0.0005435570334676221
2230,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload 5 // load exception,no,undetermined,0,0,0,no,0.00044976809937394594,no,0.0009995643703211343,no,0.000849814246886149,no,0.0008387973236748046,no,0.0007662803511664902
2231,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* | this | bean | args | raw bean | */,no,undetermined,0,0,0,no,0.009302266645896182,no,0.010912807068719816,no,0.0105700590498371,no,0.01026147752811868,no,0.009973921800989244
2232,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// iload_3 // i,no,undetermined,0,0,0,no,0.004742980399289951,no,0.005144618038151528,no,0.004831040616159839,no,0.004722825853118072,no,0.004537698436405277
2233,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Do the corresponding RHS,no,undetermined,0,0,0,no,0.0020617860368306565,no,0.001496230518132965,no,0.0014454981327911222,no,0.0014215054656571359,no,0.0013414330570162012
2234,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// invokespecial // BulkAccessorException.<init>,no,undetermined,0,0,0,no,0.0019108280441759678,no,0.0020848203561341797,no,0.0019251582278592882,no,0.0019396331601704497,no,0.0018361518699052898
2235,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// athrow,no,undetermined,0,0,0,no,0.004742980399292193,no,0.005144618038151528,no,0.004831040616159839,no,0.004722825853115608,no,0.004537698436407518
2236,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// WARNING: classfile only,no,undetermined,0,0,0,no,0.002439151279809418,no,0.0019615349768569504,no,0.0018024572392639528,no,0.0017911323356430283,no,0.001695502238388457
2237,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if its ""id""",no,undetermined,0,0,0,no,0.011822636310289425,no,0.00479989917497007,no,0.0044550654933279265,no,0.004352286948767134,no,0.004177164859374285
2238,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//swallow,no,undetermined,0,0,0,no,0.0024876490524568824,no,0.0025862718427859355,no,0.0024359695728546397,no,0.0023979377992671305,no,0.002287946234737879
2239,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//or its the id property name,no,undetermined,0,0,0,no,0.04510058988976623,no,0.012917899360720997,no,0.012201370480063424,no,0.011876740526613203,no,0.011591993313720598
2240,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//join = q.createJoinFragment(useThetaStyleJoin);,no,undetermined,0,0,0,no,0.004581560113023428,no,0.002855949907436587,no,0.002761317680939189,no,0.002691409356347558,no,0.00256808360240286
2241,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* local variable | this | */,no,undetermined,0,0,0,no,0.004802529211990083,no,0.00682877059706582,no,0.006214841905372966,no,0.006226283121238823,no,0.006015265773151892
2242,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//important!!,no,undetermined,0,0,0,no,0.011577402622975018,no,0.010059218879676724,no,0.0097735820215034,no,0.00947492806094444,no,0.009211646909488757
2243,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// an association,no,undetermined,0,0,0,no,0.003308032998327484,no,0.0033520019598768575,no,0.0031764561822490572,no,0.0030824671176063086,no,0.0029463974333402932
2244,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_0 // load this,no,undetermined,0,0,0,no,0.004278924706670203,no,0.004379381456785928,no,0.003890425958971077,no,0.0038051414376500245,no,0.003571961094131456
2245,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//allow index() function:,no,undetermined,0,0,0,no,0.003460446898446541,no,0.010352126718686131,no,0.009769327642605508,no,0.009574620092226843,no,0.009307036020801643
2246,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_0 // load this,no,undetermined,0,0,0,no,0.004278924706670203,no,0.004379381456785928,no,0.003890425958971077,no,0.0038051414376500245,no,0.003571961094131456
2247,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_1 // load callback,no,undetermined,0,0,0,no,0.0056527188103659845,no,0.004812004879115425,no,0.004449286860184552,no,0.004338586733779625,no,0.004090621359533326
2248,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// case of non-static field,no,undetermined,0,0,0,no,0.010042587056859092,no,0.01085896544464452,no,0.010179611345818436,no,0.009977511960182584,no,0.009691855020551463
2249,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// log a message about potential connection leaks,no,undetermined,0,0,0,no,0.014586584130421664,no,0.0128848440474728,no,0.011833029348292437,no,0.01159067453871254,no,0.01131744495424146
2250,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// getfield // get each field,no,undetermined,0,0,0,no,0.007386662205235938,no,0.007508841808284021,no,0.006998775002623206,no,0.006779451168995523,no,0.0065561559551051704
2251,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// invokeinterface // invoke Enabled.getInterceptFieldCallback(),no,undetermined,0,0,0,no,0.003580590093816136,no,0.0039895172479729995,no,0.0037203587898022705,no,0.003620115466297919,no,0.0034576354502338135
2252,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ifnonnull,no,undetermined,0,0,0,no,0.004742980399289951,no,0.005144618038151528,no,0.004831040616159839,no,0.004722825853118072,no,0.004537698436405277
2253,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// *return // each type,no,undetermined,0,0,0,no,0.0020956895217548632,no,0.0033820709509571178,no,0.003174505662216099,no,0.003118388886588334,no,0.00298571449212358
2254,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// *return // each type,no,undetermined,0,0,0,no,0.0020956895217548632,no,0.0033820709509571178,no,0.003174505662216099,no,0.003118388886588334,no,0.00298571449212358
2255,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// *store_1 // each type,no,undetermined,0,0,0,no,0.003520757683573502,no,0.004011953667038572,no,0.004574778374437608,no,0.004433830170107527,no,0.004252110415987858
2256,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//many-to-many,no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
2257,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ldc // name of the field,no,undetermined,0,0,0,no,0.007165626220356446,no,0.007272714961727594,no,0.006672961336172538,no,0.006452303405219526,no,0.006224410783100062
2258,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//opening paren in new Foo ( ... ),no,undetermined,0,0,0,no,0.0024548633670762976,no,0.001846734033885016,no,0.0017035924996003278,no,0.0016712380098902403,no,0.0015782607545503026
2259,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if we are inside a new Result(), but not inside a nested function",no,undetermined,0,0,0,no,0.00827337404412968,no,0.012887079023433229,no,0.012231974517613901,no,0.011883215998385053,no,0.01159201119597687
2260,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// invokeinterface // invoke Callback.read*() // each type,no,undetermined,0,0,0,no,0.005418020570206576,no,0.003502479471247423,no,0.0034237943357607447,no,0.00335231476069111,no,0.0032038828060307603
2261,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//special case,no,undetermined,0,0,0,no,0.001587344372201926,no,0.001583547971844797,no,0.0013634805050348315,no,0.0013489326005273155,no,0.0012663992152392172
2262,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the name of an SQL function,no,undetermined,0,0,0,no,0.001424817370403783,no,0.002377470795687551,no,0.0022170165437997223,no,0.002253042882851448,no,0.0021373969076594976
2263,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//this is basically a copy/paste of OrderByParser ... might be worth refactoring,no,undetermined,0,0,0,no,0.46149414013265244,no,0.5,no,0.5,no,0.4919804656980401,no,0.505412399010274
2264,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// SELECT p FROM p IN CLASS eg.Person GROUP BY p.Name, p.Address, p",no,undetermined,0,0,0,no,0.003238134455734571,no,0.0016693169824731813,no,0.00141479864520466,no,0.001396420564709211,no,0.001315124691869115
2265,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// return aliases not supported in classic translator!,no,undetermined,0,0,0,no,0.02632752767060652,no,0.01290539136242999,no,0.012224639376529551,no,0.011870083584698855,no,0.011566317899389805
2266,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// int,no,undetermined,0,0,0,no,0.0017776323826315162,no,0.0016495941207972707,no,0.0015049307956678344,no,0.0014823333639504015,no,0.0013977424680676985
2267,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//register collection role,no,undetermined,0,0,0,no,0.01832930735781281,no,0.009641948284451014,no,0.007671744863463466,no,0.0075564244438412614,no,0.007203659679595516
2268,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// just do the regular thing if you can't find the ctor // Your AST must have default ctor to use this.,no,undetermined,0,0,0,no,0.008449082509213385,no,0.007443614437763124,no,0.00729578937705657,no,0.00729415310607857,no,0.007047042290040162
2269,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// return,no,undetermined,0,0,0,no,0.001057492383143947,no,0.0013316596324714771,no,0.0011460020169193198,no,0.0011158146727426985,no,0.0010482475536592862
2270,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// The keyword used to specify an identity column, if identity column key generation is supported.",no,undetermined,0,0,0,no,0.00391081837946681,no,0.0070176246228415284,no,0.006773002697599106,no,0.006709379964156171,no,0.006490295965354615
2271,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//.getElementPropertyMapping();,no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
2272,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// dup,no,undetermined,0,0,0,no,0.0029755378220813426,no,0.003920139222089205,no,0.003740456606294171,no,0.003664229779081345,no,0.003498378148557271
2273,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//following doesn't handle (null, not null) but unnecessary //since this would mean all rows",no,undetermined,0,0,0,no,0.04015125402073391,no,0.012888571907079656,no,0.012205954575836559,no,0.01183918229108978,no,0.011565654258426594
2274,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// checkcast,no,undetermined,0,0,0,no,0.004742980399292193,no,0.005057311703155543,no,0.004736545962292542,no,0.004628336617329349,no,0.004447822391908367
2275,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// checkcast,no,undetermined,0,0,0,no,0.004742980399292193,no,0.005057311703155543,no,0.004736545962292542,no,0.004628336617329349,no,0.004447822391908367
2276,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//crossJoins.add(name);,no,undetermined,0,0,0,no,0.00415481083007601,no,0.004498657312271504,no,0.004201071130841578,no,0.004124244715226038,no,0.0039567375399876545
2277,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//ie no select clause in HQL,no,undetermined,0,0,0,no,0.0036928079118605526,no,0.0021119152676531035,no,0.0018984252418882883,no,0.0018673803974592923,no,0.0017716892298917403
2278,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// invokeinterface // enabled.getInterceptFieldCallback(),no,undetermined,0,0,0,no,0.0033576085484333397,no,0.004633328565387075,no,0.0042932934146894695,no,0.004172211018627265,no,0.003995439513984015
2279,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// invokeinterface // enabled.getInterceptFieldCallback(),no,undetermined,0,0,0,no,0.0033576085484333397,no,0.004633328565387075,no,0.0042932934146894695,no,0.004172211018627265,no,0.003995439513984015
2280,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ifnonnull (label1),no,undetermined,0,0,0,no,0.004742980399289951,no,0.005144618038151528,no,0.004831040616164993,no,0.004722825853118072,no,0.004537698436405277
2281,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we are the LHS of the DOT representing a naked comp-prop-ref,no,undetermined,0,0,0,no,0.006095768129755621,no,0.005322840449651447,no,0.0049984311259113744,no,0.004904760834290389,no,0.0047232168778814166
2282,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// *load_1,no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
2283,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// *load_1,no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
2284,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//ie. no select clause,no,undetermined,0,0,0,no,0.0031065850746428026,no,0.0026385888296094444,no,0.0023204136388368067,no,0.002293088495101392,no,0.002176523142674634
2285,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// putfield,no,undetermined,0,0,0,no,0.004742980399294881,no,0.005144618038151528,no,0.004831040616159839,no,0.004722825853108324,no,0.004537698436400685
2286,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//there _was_ a select clause,no,undetermined,0,0,0,no,0.0031065850746428026,no,0.0026385888296094444,no,0.0023204136388368067,no,0.002293088495101392,no,0.002176523142674634
2287,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// return ;,no,undetermined,0,0,0,no,0.001057492383143947,no,0.0013316596324714771,no,0.0011460020169193198,no,0.0011158146727426985,no,0.0010482475536592862
2288,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ldc // field name,no,undetermined,0,0,0,no,0.007165626220356446,no,0.007272714961727594,no,0.006672961336172538,no,0.006452303405219526,no,0.006224410783100062
2289,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// getfield // old value of the field,no,undetermined,0,0,0,no,0.004827299415694023,no,0.005086350435272619,no,0.004744714449856394,no,0.00462107727489177,no,0.0044461901556144025
2290,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// reference type,no,undetermined,0,0,0,no,0.014037932668105607,no,0.010750025435757475,no,0.010015221204989645,no,0.009724394251620182,no,0.009441470170705839
2291,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// return the concrete type, or the underlying type if a concrete type // was not specified",no,undetermined,0,0,0,no,0.008833699626219972,no,0.00996210044279326,no,0.009655870842700686,no,0.00937028009811247,no,0.009121510293383282
2292,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//many-to-many,no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
2293,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// reference type,no,undetermined,0,0,0,no,0.014037932668105607,no,0.010750025435757475,no,0.010015221204989645,no,0.009724394251620182,no,0.009441470170705839
2294,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// not array,no,undetermined,0,0,0,no,0.0024267218386808975,no,0.001432470294204337,no,0.0011554166239612785,no,0.001132920796831106,no,0.0010624554860764956
2295,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// array of reference type,no,undetermined,0,0,0,no,0.012929552352091684,no,0.00775805970241058,no,0.0066629186363134025,no,0.006509660016449149,no,0.006278374064716856
2296,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//q.addCollection(collectionName, collectionRole);",no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
2297,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// boolean,no,undetermined,0,0,0,no,1.1462556743156558e-05,no,1.0806054966049088e-05,no,9.474801756963425e-06,no,9.555949239985942e-06,no,8.289804030848805e-06
2298,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// char,no,undetermined,0,0,0,no,0.0020081491171669453,no,0.0017724972440114777,no,0.0017090510307692383,no,0.0017726521095160225,no,0.0016767358945035764
2299,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// short,no,undetermined,0,0,0,no,0.003218641895997924,no,0.012907169248914994,no,0.01221287895814558,no,0.011856601334642738,no,0.011562726338425637
2300,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// classic parser does not support bulk manipulation statements,no,undetermined,0,0,0,no,0.02615430197846954,no,0.012892772833696858,no,0.01222155062009514,no,0.011867532003128428,no,0.011572694456598868
2301,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// double,no,undetermined,0,0,0,no,0.001153331524791959,no,0.0011637514206317002,no,0.0015455747773459295,no,0.0014964283253746436,no,0.0014101279347452072
2302,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_0,no,undetermined,0,0,0,no,0.004742980399292193,no,0.005144618038151528,no,0.004831040616159839,no,0.004722825853115608,no,0.004537698436407518
2303,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// float,no,undetermined,0,0,0,no,0.0032651093669667747,no,0.002885845734884415,no,0.002691350651802285,no,0.002628520451356237,no,0.002499045170973245
2304,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// float,no,undetermined,0,0,0,no,0.0032651093669667747,no,0.002885845734884415,no,0.002691350651802285,no,0.002628520451356237,no,0.002499045170973245
2305,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This is called when it's time to fully resolve a path expression.,no,undetermined,0,0,0,no,0.16138020870808528,no,0.10096941208489582,no,0.09438999026002198,no,0.011845698649556827,no,0.011557842501722268
2306,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// long,no,undetermined,0,0,0,no,0.01175923256963221,no,0.0129166294193736,no,0.012210062465327657,no,0.011883158552642709,no,0.01158753440360029
2307,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// can't cache this stuff either (per-invocation),no,undetermined,0,0,0,no,0.0056736505471386605,no,0.006452183368147042,no,0.0060972806830247375,no,0.00593904408248241,no,0.005721607483107075
2308,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This is the legacy behaviour for HQL queries...,no,undetermined,0,0,0,no,0.003716070725292771,no,0.0027654975178705,no,0.0023617062183975534,no,0.002363085703025156,no,0.0022475513854322746
2309,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// long,no,undetermined,0,0,0,no,0.01175923256963221,no,0.0129166294193736,no,0.012210062465327657,no,0.011883158552642709,no,0.01158753440360029
2310,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// bad type,no,undetermined,0,0,0,no,0.024239569560029196,no,0.012922960597819418,no,0.012204917439165403,no,0.011851897393556469,no,0.011588054731773956
2311,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// bad type,no,undetermined,0,0,0,no,0.024239569560029196,no,0.012922960597819418,no,0.012204917439165403,no,0.011851897393556469,no,0.011588054731773956
2312,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// not known!,no,undetermined,0,0,0,no,0.0016562887786415368,no,0.0014196032103204511,no,0.001369027450148302,no,0.0013354525283137046,no,0.0012549066233442892
2313,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// boolean, byte, char, int, short",no,undetermined,0,0,0,no,0.00035262869224833007,no,0.0006613395464217858,no,0.0006099844855335513,no,0.000619060163707444,no,0.0005753325085609433
2314,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// not known!,no,undetermined,0,0,0,no,0.0016562887786415368,no,0.0014196032103204511,no,0.001369027450148302,no,0.0013354525283137046,no,0.0012549066233442892
2315,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// boolean, byte, char, int, short",no,undetermined,0,0,0,no,0.00035262869224833007,no,0.0006613395464217858,no,0.0006099844855335513,no,0.000619060163707444,no,0.0005753325085609433
2316,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// not known!,no,undetermined,0,0,0,no,0.0016562887786415368,no,0.0014196032103204511,no,0.001369027450148302,no,0.0013354525283137046,no,0.0012549066233442892
2317,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// reference type,no,undetermined,0,0,0,no,0.014037932668105607,no,0.010750025435757475,no,0.010015221204989645,no,0.009724394251620182,no,0.009441470170705839
2318,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// not known!,no,undetermined,0,0,0,no,0.0016562887786415368,no,0.0014196032103204511,no,0.001369027450148302,no,0.0013354525283137046,no,0.0012549066233442892
2319,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//Need this, since join condition can appear inside parens!",no,undetermined,0,0,0,no,0.03133690478352691,no,0.012888726409297085,no,0.012205238503704377,no,0.011856382811057891,no,0.011560167634453037
2320,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// double,no,undetermined,0,0,0,no,0.001153331524791959,no,0.0011637514206317002,no,0.0015455747773459295,no,0.0014964283253746436,no,0.0014101279347452072
2321,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// float,no,undetermined,0,0,0,no,0.0032651093669667747,no,0.002885845734884415,no,0.002691350651802285,no,0.002628520451356237,no,0.002499045170973245
2322,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// float,no,undetermined,0,0,0,no,0.0032651093669667747,no,0.002885845734884415,no,0.002691350651802285,no,0.002628520451356237,no,0.002499045170973245
2323,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// bad type,no,undetermined,0,0,0,no,0.024239569560029196,no,0.012922960597819418,no,0.012204917439165403,no,0.011851897393556469,no,0.011588054731773956
2324,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// bad type,no,undetermined,0,0,0,no,0.024239569560029196,no,0.012922960597819418,no,0.012204917439165403,no,0.011851897393556469,no,0.011588054731773956
2325,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// boolean, byte, char, int, short",no,undetermined,0,0,0,no,0.00035262869224833007,no,0.0006613395464217858,no,0.0006099844855335513,no,0.000619060163707444,no,0.0005753325085609433
2326,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//expressionOpeners.add("",""); // deliberately excluded",no,undetermined,0,0,0,no,0.0037315330892915464,no,0.0039171031645093245,no,0.0037778807975557835,no,0.0036812957869222416,no,0.003520053736754819
2327,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// skip finalize methods,no,undetermined,0,0,0,no,0.003031005010818424,no,0.000719952139372425,no,0.0006550514375765309,no,0.0006410557481497096,no,0.0005960982517529455
2328,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Mainly for OSCache,no,undetermined,0,0,0,no,0.007561293363441364,no,0.012920294767271023,no,0.0122252179702492,no,0.011865358201704044,no,0.01157564080970861
2329,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//decrement the lock,no,undetermined,0,0,0,no,0.0018765606908172077,no,0.0012121686113536524,no,0.0012975385504690497,no,0.001321188084534532,no,0.0012412138158686718
2330,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//recache the updated state,no,undetermined,0,0,0,no,0.0035813810067433856,no,0.0034157159883110555,no,0.0032801210580381554,no,0.003209566166260003,no,0.003062432510584282
2331,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// noop,no,undetermined,0,0,0,no,0.0017911677727020594,no,0.0013427770794955454,no,0.0012729643055016016,no,0.0012721874393281062,no,0.0011958208879469371
2332,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//null clientLock is remotely possible but will never happen in practice,no,undetermined,0,0,0,no,0.004271835570561493,no,0.005092223769860028,no,0.004962663969631788,no,0.004810608231863498,no,0.00462920489826508
2333,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//by requiring <, we rely on lock timeout in the case of an unsuccessful update!",no,undetermined,0,0,0,no,0.004573608565694387,no,0.005632532811460655,no,0.005540995788840817,no,0.005427701578208348,no,0.005222899530080868
2334,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// the user provided resulttransformer, not the one used with ""select new"". Here to avoid mangling // transformed/non-transformed results.",no,undetermined,0,0,0,no,0.009505274439298736,no,0.012914409040398698,no,0.012219228092845095,no,0.011840994140864895,no,0.011570265879561756
2335,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// disassemble positional parameters,no,undetermined,0,0,0,no,0.0042559963339601084,no,0.003953052272753859,no,0.0037084087794152865,no,0.00361604123876527,no,0.003461081611079642
2336,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//ie. 60 seconds,no,undetermined,0,0,0,no,0.006932760013743887,no,0.007086623194769695,no,0.00667432624625728,no,0.006475552481788318,no,0.006252848037954349
2337,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// noop,no,undetermined,0,0,0,no,0.0017911677727020594,no,0.0013427770794955454,no,0.0012729643055016016,no,0.0012721874393281062,no,0.0011958208879469371
2338,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// otherwise, a trim-specification and/or a trim-character // have been specified;  we need to decide which options // are present and ""do the right thing"" // should leading trim-characters be trimmed? // should trailing trim-characters be trimmed? // the trim-character (what is to be trimmed off?) // the trim-source (from where should it be trimmed?)",no,undetermined,0,0,0,no,0.00848737314059695,no,0.012923044991033111,no,0.012206758687189406,no,0.011882522714395603,no,0.01156580026137077
2339,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//noop,no,undetermined,0,0,0,no,0.0017911677727020594,no,0.0013427770794955454,no,0.0012729643055016016,no,0.0012721874393281062,no,0.0011958208879469371
2340,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//noop,no,undetermined,0,0,0,no,0.0017911677727020594,no,0.0013427770794955454,no,0.0012729643055016016,no,0.0012721874393281062,no,0.0011958208879469371
2341,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this is called from SettingsFactory irregardless; trivial to simply disregard,no,undetermined,0,0,0,no,0.012933921737700669,no,0.012907853661693627,no,0.01221984985137301,no,0.011880701969877817,no,0.011554694352229672
2342,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Do nothing; subclasses may override.,no,undetermined,0,0,0,no,0.0013738043546850113,no,0.0016386098173399811,no,0.0015132167046448706,no,0.0015444330805321213,no,0.0014560900585730134
2343,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Do nothing; subclasses may override.,no,undetermined,0,0,0,no,0.0013738043546850113,no,0.0016386098173399811,no,0.0015132167046448706,no,0.0015444330805321213,no,0.0014560900585730134
2344,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// TABLE,no,undetermined,0,0,0,no,0.0020116522780454977,no,0.0007637735363257275,no,0.0007211122444365675,no,0.0007062697267307175,no,0.0006577124689186037
2345,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Inside a BETWEEN ... AND ... expression,no,undetermined,0,0,0,no,0.0146933558794311,no,0.012875799408506682,no,0.01221137771011405,no,0.011874187810529546,no,0.011577893265204227
2346,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//were an odd or even number of NOTs encountered //the join string built up by compound paths inside this expression //a flag indicating if the subexpression is known to be boolean,no,undetermined,0,0,0,no,0.007870739466550255,no,0.005278655339265949,no,0.005076696151881508,no,0.004476782851054984,no,0.004291327536463545
2347,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//ie. a many-to-many,no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
2348,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//Cope with [,]",no,undetermined,0,0,0,no,0.004453983061297909,no,0.004947886990178904,no,0.004657288469443337,no,0.004535813700679151,no,0.004354122150988214
2349,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Cope with a continued path expression (ie. ].baz),no,undetermined,0,0,0,no,0.010725122052992492,no,0.009571076992350467,no,0.008919293511801542,no,0.00777235120910931,no,0.007529959459572091
2350,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//NOTE: early return,no,undetermined,0,0,0,no,0.01829546526566234,no,0.007268133679273271,no,0.007111152475711047,no,0.006708120303636528,no,0.006460098492314722
2351,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Cope with a subselect,no,undetermined,0,0,0,no,0.004453983061297909,no,0.004947886990178904,no,0.004657288469443337,no,0.004535813700679151,no,0.004354122150988214
2352,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// use the id value of a newly instantiated instance as the unsaved-value,no,undetermined,0,0,0,no,0.012799102200355515,no,0.004422145898810908,no,0.004200212133369834,no,0.003716209833412452,no,0.003547695208348282
2353,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Close extra brackets we opened,no,undetermined,0,0,0,no,0.0007724218588516725,no,0.0004557642758009224,no,0.0004211724232403319,no,0.00041703522936798246,no,0.000384624619121397
2354,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//take note when this is a boolean expression,no,undetermined,0,0,0,no,0.005479007485936918,no,0.0032114878767446568,no,0.0030143588101703227,no,0.002854468307368159,no,0.002697748072360844
2355,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//persister.setIdentifier(result, id); //before calling interceptor, for consistency with normal load",no,undetermined,0,0,0,no,0.03209054861121402,no,0.006494122315691065,no,0.006025967151941573,no,0.0054570863356292795,no,0.00519945959291128
2356,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// no-op; CCS did not have such a concept,no,undetermined,0,0,0,no,0.00513468924200224,no,0.004599815299354515,no,0.004472352795882077,no,0.0043049141282404755,no,0.004226336632993768
2357,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// JoinProcessor needs to know if the where clause fragment came from a dynamic filter or not so it // can put the where clause fragment in the right place in the SQL AST.   'hasFilterCondition' keeps track // of that fact.,no,undetermined,0,0,0,no,0.08336125009110917,no,0.012895560478286494,no,0.012211064470737573,no,0.01186436604267159,no,0.011558343597281447
2358,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// no-op; CCS did not have such a concept,no,undetermined,0,0,0,no,0.00513468924200224,no,0.004599815299354515,no,0.004472352795882077,no,0.0043049141282404755,no,0.004226336632993768
2359,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// assumes that types are all of span 1,no,undetermined,0,0,0,no,0.0005246741771731113,no,0.0005708681387498006,no,0.000564782459465381,no,0.0005640503951658663,no,0.0005236586144779642
2360,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// again, CCS did not have such a concept; however a reasonable // proximity is to clear the cache.  For non-transaction aware // caches, we will also do a clear at the end of the transaction",no,undetermined,0,0,0,no,0.01875650855867291,no,0.007963708682558841,no,0.007122539883234395,no,0.007288683877355798,no,0.007086525827645831
2361,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//process a token, mapping OO path expressions to SQL expressions",no,undetermined,0,0,0,no,0.0034565545520023845,no,0.00646906139196072,no,0.006110549953022716,no,0.005922766419621806,no,0.005720742550927945
2362,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Open any extra brackets we might need.,no,undetermined,0,0,0,no,0.03037986013603193,no,0.01291252251763009,no,0.01224227638152248,no,0.011884467785903135,no,0.011565811007932749
2363,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//Cope with special cases of AND, NOT, )",no,undetermined,0,0,0,no,0.004690993287961042,no,0.00546991093528232,no,0.005055927512599563,no,0.004928670947362639,no,0.004732544876090859
2364,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the next one up must also be,no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
2365,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Add any joins,no,undetermined,0,0,0,no,0.004561954327264985,no,0.011867146811368775,no,0.011340044295592232,no,0.01120789402335967,no,0.0109802100734598
2366,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//named query parameter,no,undetermined,0,0,0,no,0.03300904468383624,no,0.01290090940083635,no,0.012234611428183781,no,0.011262936311027776,no,0.010968547318617555
2367,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// get meta's from <hibernate-mapping>,no,undetermined,0,0,0,no,0.004550789982591506,no,0.012900388948608996,no,0.01222658633791789,no,0.011851323990728822,no,0.011584224641739246
2368,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// get meta's from <class>,no,undetermined,0,0,0,no,0.012409230026784361,no,0.009715099621136787,no,0.009358220199894744,no,0.009355215731574648,no,0.009078431708638313
2369,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//path expression,no,undetermined,0,0,0,no,0.014906419367910664,no,0.01016214223554258,no,0.009608675073432842,no,0.007645023690866702,no,0.007403959376400222
2370,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// DB-OBJECTNAME,no,undetermined,0,0,0,no,0.0019523205117846635,no,0.0018665226551261725,no,0.0017323558211033863,no,0.0017043569503923579,no,0.0016099430992831656
2371,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// just decrement the lock, don't recache // (we don't know which transaction won)",no,undetermined,0,0,0,no,0.07449750455663123,no,0.012883743444782287,no,0.012227852756173913,no,0.011882113663694438,no,0.011588300978774845
2372,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// saves / updates don't cascade to uninitialized collections,no,undetermined,0,0,0,no,0.004787752998853815,no,0.00419170053828102,no,0.003843123487455336,no,0.0035934530188806942,no,0.003444355818973711
2373,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// MUTABLE,no,undetermined,0,0,0,no,0.002711698337384031,no,0.0027577990819448845,no,0.0027103659444205966,no,0.002657437312358904,no,0.0025336407899531213
2374,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// A container for collections we load up when the owning entity is not // yet loaded ... for now, this is purely transient!",no,undetermined,0,0,0,no,0.015676898338528394,no,0.007063763012008985,no,0.005417518231859828,no,0.0052603866604317715,no,0.005000871131395319
2375,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// WHERE,no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
2376,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// CHECK,no,undetermined,0,0,0,no,0.0029195894363013408,no,0.0031570311309228713,no,0.00011060219402354293,no,0.00010926912619454861,no,9.861283449749396e-05
2377,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// POLYMORPHISM,no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
2378,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// properties that we have tried to load, and not found in the database",no,undetermined,0,0,0,no,0.014331335544376492,no,0.012920596506948299,no,0.012236076202962782,no,0.01186726571196591,no,0.011578030780559998
2379,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// TODO:,no,undetermined,0,0,0,no,0.011915769773668481,no,0.012892946551675156,no,0.012212929575441765,no,0.011854801627810656,no,0.011589831620060054
2380,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// persists don't cascade to uninitialized collections,no,undetermined,0,0,0,no,0.00551534586016395,no,0.005843917212706518,no,0.005343500622860596,no,0.004995267247970479,no,0.004814097801056739
2381,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//anything else,no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
2382,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the path expression continues after a ],no,undetermined,0,0,0,no,0.007895082499344872,no,0.007307470774432598,no,0.0067500854252846776,no,0.005912398451579133,no,0.00570644169285214
2383,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// careful with this!,no,undetermined,0,0,0,no,0.004360321987763608,no,0.002136936721146493,no,0.00203163014331952,no,0.0023343610535935134,no,0.002216059133877665
2384,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the path expression ends at the ],no,undetermined,0,0,0,no,0.026317861644144624,no,0.012882932148016875,no,0.012246829662034024,no,0.011878636861156805,no,0.01156055299232255
2385,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// ""finish off"" the join",no,undetermined,0,0,0,no,0.006126080251725793,no,0.0044237560225042554,no,0.004206252077714978,no,0.004129534214296274,no,0.003962922618509712
2386,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//NOTICE: no "" or . since they are part of (compound) identifiers",no,undetermined,0,0,0,no,0.017083002732070484,no,0.012912161880321158,no,0.012215082101161666,no,0.0118822364904359,no,0.011575491032172267
2387,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//cannot instantiate,no,undetermined,0,0,0,no,0.002122186598123858,no,0.003228717385975892,no,0.003136946370070508,no,0.003073885347112743,no,0.002927454565033682
2388,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// start by looking for HQL keywords...,no,undetermined,0,0,0,no,0.0003280311380086843,no,0.0002809055979850902,no,0.0002645141557038723,no,0.0002640370403183301,no,0.00024242905291536093
2389,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// inner joins can be abbreviated to 'join',no,undetermined,0,0,0,no,0.0030153958714601975,no,0.0038774302337708138,no,0.0037349641551298845,no,0.0036784037149297636,no,0.0035367013312554894
2390,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// 'outer' is optional and is ignored,no,undetermined,0,0,0,no,0.0006253534128458328,no,0.0006253031362706535,no,0.0005657497262830376,no,0.0005670839052936253,no,0.0005263133633450836
2391,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// now anything that is not a HQL keyword,no,undetermined,0,0,0,no,0.0026541812467784868,no,0.0017746386224828067,no,0.0016303150318974639,no,0.001586579106432343,no,0.0014999494946806328
2392,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// process the ""old"" HQL style where aliases appear _first_ // ie. using the IN or IN CLASS constructions",no,undetermined,0,0,0,no,0.008927498627613918,no,0.008801480102557347,no,0.012222114979129187,no,0.011861964927825886,no,0.0115510700928708
2393,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// treat it as a classname,no,undetermined,0,0,0,no,0.009800417101827944,no,0.00717031017743315,no,0.006744937392718904,no,0.0067073475753321385,no,0.006490475042445687
2394,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// treat it as a path expression,no,undetermined,0,0,0,no,0.025447968256240086,no,0.012921201386636919,no,0.01224249895701272,no,0.011866181891116911,no,0.011578463012568738
2395,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// starts with a path expression (new style),no,undetermined,0,0,0,no,0.008267547420229645,no,0.012910812027559537,no,0.01222583264423414,no,0.01099866505332264,no,0.010701612381042537
2396,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ID,no,undetermined,0,0,0,no,0.011822636310289425,no,0.00479989917497007,no,0.0044550654933279265,no,0.004352286948767134,no,0.004177164859374285
2397,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//allow ODMG OQL style: from Person p, p.cars c",no,undetermined,0,0,0,no,0.0040841091078658315,no,0.005891301557662977,no,0.005435439400906073,no,0.005355070014578355,no,0.0051576919042054655
2398,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//handle quoted strings,no,undetermined,0,0,0,no,0.017548379928572118,no,0.01290854613421095,no,0.01223108119234879,no,0.011871983222256128,no,0.01156620371192669
2399,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// VERSION / TIMESTAMP,no,undetermined,0,0,0,no,0.003486275086296536,no,0.004703151122142139,no,0.0044254525831262095,no,0.00433220059257429,no,0.004161937659967963
2400,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// DISCRIMINATOR,no,undetermined,0,0,0,no,0.004742980399292193,no,0.005144618038151528,no,0.004831040616159839,no,0.004722825853118072,no,0.004537698436405277
2401,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Primary key constraint,no,undetermined,0,0,0,no,0.007983475137703288,no,0.005417701492788688,no,0.0050802515040156305,no,0.0049346442207156204,no,0.004742571934643038
2402,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// this is either a <version/> tag with no type attribute, // or a <timestamp/> tag",no,undetermined,0,0,0,no,0.005603490142212862,no,0.006537906880476262,no,0.00622194010160719,no,0.006099817115782228,no,0.0058946165204786845
2403,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Object insertions, updates, and deletions have list semantics because // they must happen in the right order so as to respect referential // integrity",no,undetermined,0,0,0,no,0.034894865624437166,no,0.01289696322400438,no,0.012208825600370158,no,0.011868078234663654,no,0.011571151504307915
2404,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// ""finish off"" the join",no,undetermined,0,0,0,no,0.006126080251725793,no,0.0044237560225042554,no,0.004206252077714978,no,0.004129534214296274,no,0.003962922618509712
2405,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//ignore whitespace,no,undetermined,0,0,0,no,0.0007323922109235236,no,0.0008313525004972188,no,0.0007694497848481842,no,0.0007400504491539197,no,0.0006908751851895171
2406,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//do replacements,no,undetermined,0,0,0,no,0.004204100766414345,no,0.00243557208665887,no,0.002244236413067654,no,0.002188512250196386,no,0.0020729173977598442
2407,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//handle HQL2 collection syntax,no,undetermined,0,0,0,no,0.014216448288962293,no,0.008096412655773016,no,0.007549291140773966,no,0.007306983124680175,no,0.006938487267297872
2408,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// uuid.hex is deprecated,no,undetermined,0,0,0,no,0.04190045026235986,no,0.012899480894249657,no,0.012236806096152944,no,0.01186894359562261,no,0.011590572903183246
2409,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// AbstractSelectingDelegate impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.006562256669935704,no,0.006959610490900894,no,0.006641824253982197,no,0.005272146940800083,no,0.0051040069329332145
2410,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//hilo params,no,undetermined,0,0,0,no,0.009950277278741287,no,0.01150219935058981,no,0.01131189822322381,no,0.01090534204892872,no,0.01060822099583702
2411,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//sql = query;,no,undetermined,0,0,0,no,0.004539847880927572,no,0.0036146004415581806,no,0.0035784006393876056,no,0.00345207694375558,no,0.0032973755966333213
2412,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//for EJB3,no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
2413,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// performance opt,no,undetermined,0,0,0,no,0.03283817580508973,no,0.01290598310010761,no,0.012233874293850318,no,0.01187958982821646,no,0.01159002427412183
2414,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//sql = update;,no,undetermined,0,0,0,no,0.0011240577580640123,no,0.001599763863205668,no,0.0015431966586177308,no,0.0015801988241902715,no,0.001489493633400639
2415,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// DISCRIMINATOR,no,undetermined,0,0,0,no,0.004742980399292193,no,0.005144618038151528,no,0.004831040616159839,no,0.004722825853118072,no,0.004537698436405277
2416,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//hilo config,no,undetermined,0,0,0,no,0.002178342978377579,no,0.002510095098144306,no,0.002350859349814525,no,0.0023419710272503773,no,0.002225048501307727
2417,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// so we ""clock over"" on the first invocation",no,undetermined,0,0,0,no,0.0042657909471314715,no,0.005170798502587118,no,0.004841919613474505,no,0.004708574387259039,no,0.00452184260788428
2418,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// don't allow comments on these insert statements as comments totally // blow up the Oracle getGeneratedKeys ""support"" :(",no,undetermined,0,0,0,no,0.011362712764705456,no,0.012910447789249706,no,0.012224199460710869,no,0.011882288542029792,no,0.011557451911727759
2419,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//throw new IdentifierGenerationException(""save associated object first, or disable cascade for inverse association"");",no,undetermined,0,0,0,no,0.0037309745109268197,no,0.00996198939451238,no,0.00962826564108578,no,0.009523162826004865,no,0.009270301340987858
2420,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//count++;,no,undetermined,0,0,0,no,0.0040541671758134255,no,0.004981153696861058,no,0.004570069939251512,no,0.0044750952345706,no,0.004292916745605218
2421,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// go ahead and set the lazy here, since pojo.proxy can override it.",no,undetermined,0,0,0,no,0.005498600064187292,no,0.0044183645163395095,no,0.0042118625217810995,no,0.0041181150340622846,no,0.0039607723798357935
2422,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// DYNAMIC UPDATE,no,undetermined,0,0,0,no,0.0019248306626470006,no,0.002204736094806946,no,0.002162258168396922,no,0.0020945558059552306,no,0.001982552231645756
2423,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// IMPORT,no,undetermined,0,0,0,no,0.004049852456051326,no,0.0031698463959997326,no,0.0030167756025224943,no,0.0030094347692270727,no,0.00286908943400002
2424,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// BATCH SIZE,no,undetermined,0,0,0,no,0.007388456201674129,no,0.008072224284161208,no,0.0077148017313528735,no,0.007576722271370968,no,0.007331202837702017
2425,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we need to dirty check collections, since they can cause an owner // version number increment",no,undetermined,0,0,0,no,0.04333064440012452,no,0.01288555952300964,no,0.012210104742291093,no,0.01184832019344404,no,0.011557882319328704
2426,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// SELECT BEFORE UPDATE,no,undetermined,0,0,0,no,0.0011558964623318438,no,0.002120595572252612,no,0.0017801415358184081,no,0.001744519359154493,no,0.0016517477124097996
2427,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// OPTIMISTIC LOCK MODE,no,undetermined,0,0,0,no,0.006062122144487048,no,0.00426602337202244,no,0.004364616890985769,no,0.004312453877407162,no,0.004128011655953564
2428,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// intentionally empty,no,undetermined,0,0,0,no,0.006952547877549867,no,0.008046386937544878,no,0.007800606743259962,no,0.008378318925596656,no,0.008145731067491674
2429,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//first element of array is reserved for the actual instance we are loading!,no,undetermined,0,0,0,no,0.008195322831062241,no,0.005447598723404495,no,0.004929546654139713,no,0.004963931632166609,no,0.004780331801651667
2430,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//keep the behavior consistent even for boundary usages,no,undetermined,0,0,0,no,0.019279534867212664,no,0.012909462545429394,no,0.012221097310351078,no,0.011841065661390917,no,0.011582848840268063
2431,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// so we ""clock over"" on the first invocation",no,undetermined,0,0,0,no,0.0042657909471314715,no,0.005170798502587118,no,0.004841919613474505,no,0.004708574387259039,no,0.00452184260788428
2432,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// do nothing until we hit the rsult set containing the generated id,no,undetermined,0,0,0,no,0.037687391612135204,no,0.012900066089569255,no,0.012201711128604536,no,0.011862119138630134,no,0.011559654549946403
2433,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Use the delegate, resolve identifiers as FROM element aliases.",no,undetermined,0,0,0,no,0.017968184577063662,no,0.012915513838914849,no,0.01222495549442857,no,0.011859447817149253,no,0.011564827496283807
2434,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// PERSISTER,no,undetermined,0,0,0,no,0.04287748062442215,no,0.010872552410230205,no,0.010378801592523662,no,0.010149944763018066,no,0.009910192205339683
2435,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// CUSTOM SQL,no,undetermined,0,0,0,no,0.0027942478790320313,no,0.0017249793691298482,no,0.0016318827204243858,no,0.0016406657358396138,no,0.001550534934879737
2436,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Loaded entity instances, by EntityKey",no,undetermined,0,0,0,no,0.023561698676579933,no,0.011390232275572513,no,0.00994674630274849,no,0.009676144231600958,no,0.0094571202309271
2437,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// if the given name is un-qualified we may neen to qualify it,no,undetermined,0,0,0,no,0.013545184078316206,no,0.01290453237660666,no,0.012239225932142534,no,0.011876848392117386,no,0.01159817876007932
2438,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the default...,no,undetermined,0,0,0,no,9.054312686246939e-05,no,0.00018487480121048662,no,0.0001627417203441907,no,0.00016241986424737542,no,0.00014787394602370658
2439,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// cascade-save to many-to-one BEFORE the parent is saved,no,undetermined,0,0,0,no,0.017624796160807147,no,0.01290863029044356,no,0.012212764849363152,no,0.011862692059973272,no,0.011568148625777194
2440,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// get meta's from <subclass>,no,undetermined,0,0,0,no,0.04781990873268198,no,0.012887580649394608,no,0.012206653067216343,no,0.011874487059506954,no,0.011554203135812435
2441,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// properties,no,undetermined,0,0,0,no,0.003538818736704457,no,0.003232205632595162,no,0.002976990883263783,no,0.002984297171515596,no,0.002850282165435171
2442,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// joined subclasses,no,undetermined,0,0,0,no,0.004190807678786412,no,0.0035374650875854285,no,0.0033105650700856228,no,0.003260632666188864,no,0.003122682107235835
2443,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// KEY,no,undetermined,0,0,0,no,0.0014842792478038794,no,0.0015173150824865037,no,0.0014725504710908091,no,0.0014444728931114737,no,0.0013640000711130308
2444,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// CHECK,no,undetermined,0,0,0,no,0.0029195894363013408,no,0.0031570311309228713,no,0.00011060219402354293,no,0.00010926912619454861,no,9.861283449749396e-05
2445,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// properties,no,undetermined,0,0,0,no,0.003538818736704457,no,0.003232205632595162,no,0.002976990883263783,no,0.002984297171515596,no,0.002850282165435171
2446,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// intentionally empty,no,undetermined,0,0,0,no,0.006952547877549867,no,0.008046386937544878,no,0.007800606743259962,no,0.008378318925596656,no,0.008145731067491674
2447,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// KEY,no,undetermined,0,0,0,no,0.0014842792478038794,no,0.0015173150824865037,no,0.0014725504710908091,no,0.0014444728931114737,no,0.0013640000711130308
2448,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//even process null collections,no,undetermined,0,0,0,no,0.004626547598352451,no,0.002313152352819261,no,0.0019570994349105753,no,0.001943089807804881,no,0.0018411032231769114
2449,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//keep the existing version number in the case of replicate!,no,undetermined,0,0,0,no,0.004746202042899912,no,0.003542359981497238,no,0.0034181983854952172,no,0.003363733004255049,no,0.0032182464716314866
2450,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//source.getPersistenceContext().removeNonExist( new EntityKey( id, persister, source.getEntityMode() ) );",no,undetermined,0,0,0,no,0.015302152002038251,no,0.00799304993760581,no,0.007772594384671342,no,0.007726195582983233,no,0.007521785533630435
2451,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// substitutes into values by side-effect,no,undetermined,0,0,0,no,0.004238653773286393,no,0.003462492151914759,no,0.0030177255217697617,no,0.002950429256899513,no,0.0028151644958786795
2452,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Identity map of CollectionEntry instances, by the collection wrapper",no,undetermined,0,0,0,no,0.006866129320115849,no,0.005623291721780575,no,0.005614379523001362,no,0.005506947471530645,no,0.0052645114439183
2453,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// TABLENAME,no,undetermined,0,0,0,no,0.0056161001639408355,no,0.012879719813735405,no,0.012220197236986063,no,0.011862190008377162,no,0.011549329975000175
2454,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// table-specific parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.004408957302896167,no,0.002159177140846721,no,0.001995516501917679,no,0.001942034386696962,no,0.0018395800013517557
2455,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// join.getKey().setType( new Type( lazz.getIdentifier() ) );,no,undetermined,0,0,0,no,0.011242139793664107,no,0.005255381721333184,no,0.004985606330894476,no,0.004860728864820348,no,0.004680488685910077
2456,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//source.getBatcher().executeBatch(); //found another way to ensure that all batched joined inserts have been executed,no,undetermined,0,0,0,no,0.01263937776932812,no,0.004000019647823705,no,0.003609871097772495,no,0.0033003602267873285,no,0.0031516653613254267
2457,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// IdentifierGenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,yes,0.992352954848911,no,0.012897421158711302,no,0.012211956042069901,no,0.011849227554679547,no,0.011553571663548288
2458,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// PROPERTIES,no,undetermined,0,0,0,no,0.003538818736704457,no,0.003232205632595162,no,0.002976990883263783,no,0.002984297171515596,no,0.002850282165435171
2459,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// PersistentIdentifierGenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,yes,0.992352954848911,no,0.012897421158711302,no,0.012211956042069901,no,0.011849227554679547,no,0.011553571663548288
2460,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// prepare and execute the insert,no,undetermined,0,0,0,no,0.0011362040487866223,no,0.002311925537464115,no,0.0021892390563695704,no,0.0021906493069815776,no,0.002082735327203995
2461,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// COLUMN(S),no,undetermined,0,0,0,no,0.00830463673436996,no,0.006515247903132979,no,0.006234362731137962,no,0.006163557996058233,no,0.005943838045994968
2462,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if everything went ok, commit the transaction and close the obtained // connection handle...",no,undetermined,0,0,0,no,0.0012866447083652779,no,0.001032872826214882,no,0.0009071496642919189,no,0.0009432722819662084,no,0.0008834621708894321
2463,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// prepare and execute the insert,no,undetermined,0,0,0,no,0.0011362040487866223,no,0.002311925537464115,no,0.0021892390563695704,no,0.0021906493069815776,no,0.002082735327203995
2464,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//fetch the generated id in a separate query,no,undetermined,0,0,0,no,0.07620220002257849,no,0.012914861848175363,no,0.012214267258306478,no,0.011888511447088348,no,0.011592623192892039
2465,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we just hit the last position,no,undetermined,0,0,0,no,0.007901078156550098,no,0.008333866153910085,no,0.007618849994309981,no,0.006299682717833998,no,0.0060760527352291364
2466,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// scroll ahead,no,undetermined,0,0,0,no,0.04424795666282241,no,0.012899842879700849,no,0.012202785328219775,no,0.011868852156292832,no,0.011581317904928992
2467,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// scroll backward,no,undetermined,0,0,0,no,0.04535858588483651,no,0.012901841572537697,no,0.01221408850812951,no,0.011869826929508503,no,0.011573280384174846
2468,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// column index,no,undetermined,0,0,0,no,0.0038064642042617237,no,0.007110046533782151,no,0.006821716433251958,no,0.006660948095939803,no,0.006433006378492253
2469,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we have not yet hit the last result...,no,undetermined,0,0,0,no,0.008417671059260837,no,0.007151384333431332,no,0.008168844182097398,no,0.007915289971714855,no,0.007649187587864011
2470,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// State ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0006883474976273243,no,0.0006486780640162732,no,0.0006280161981431288,no,0.000620429738036208,no,0.0005762773060012992
2471,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.004976569023183423,no,0.010444148429048283,no,0.010183905797391318,no,0.008718332471560076,no,0.008496847840724858
2472,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//column unique-key,no,undetermined,0,0,0,no,0.0037659239512058875,no,0.004867225976316987,no,0.004748638241072194,no,0.004663861780749169,no,0.004487324172381899
2473,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// do this when all the properties are updateable since there is // a certain likelihood that the information will already be // snapshot-cached.,no,undetermined,0,0,0,no,0.0031242490579426307,no,0.007229847156601066,no,0.006784452121881277,no,0.006648305071893555,no,0.0064299786745704674
2474,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// State ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0006883474976273243,no,0.0006486780640162732,no,0.0006280161981431288,no,0.000620429738036208,no,0.0005762773060012992
2475,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.004976569023183423,no,0.010444148429048283,no,0.010183905797391318,no,0.008718332471560076,no,0.008496847840724858
2476,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Caches,no,undetermined,0,0,0,no,0.018676937455928168,no,0.011698681951774014,no,0.011333786255594691,no,0.01161959366457775,no,0.011328126164914736
2477,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Generators:,no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
2478,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// cache region is defined by the root-class in the hierarchy...,no,undetermined,0,0,0,no,0.011195038424864892,no,0.011746148624223933,no,0.010998907025544987,no,0.010125137969222197,no,0.009842541886276122
2479,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// PROPERTIES,no,undetermined,0,0,0,no,0.003538818736704457,no,0.003232205632595162,no,0.002976990883263783,no,0.002984297171515596,no,0.002850282165435171
2480,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//JNDI + Serialization:,no,undetermined,0,0,0,no,0.008960595193985269,no,0.012904540997522107,no,0.012205437760713915,no,0.011881915225832998,no,0.0115938378772965
2481,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//checking for named queries,no,undetermined,0,0,0,no,0.03761011719519893,no,0.012893876325721993,no,0.012248224501716474,no,0.011870216636801899,no,0.011582105945703544
2482,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//stats,no,undetermined,0,0,0,no,0.004149320764019456,no,0.004828254085312114,no,0.004663012957118866,no,0.004567418160130061,no,0.004386214072078232
2483,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// EntityNotFoundDelegate,no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
2484,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Check named HQL queries,no,undetermined,0,0,0,no,0.009449042256227903,no,0.0047512442851599165,no,0.0037265007757443175,no,0.003557887986698902,no,0.003412012808720966
2485,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this will throw an error if there's something wrong.,no,undetermined,0,0,0,no,0.053237376782611964,no,0.012929093754153693,no,0.012203982830468335,no,0.011853296436292175,no,0.011568457602258204
2486,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//prevents this session from adding things to cache,no,undetermined,0,0,0,no,0.021393555016767023,no,0.012913428709042165,no,0.012227256742841393,no,0.011866961345388253,no,0.011574743698198683
2487,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// look for the instance by uuid,no,undetermined,0,0,0,no,0.005181967190366013,no,0.005432484793085815,no,0.005239654979014783,no,0.0043595782514295345,no,0.004185492870747349
2488,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//for a dynamic-class,no,undetermined,0,0,0,no,0.005878868248989533,no,0.00517214203837827,no,0.005008458547903784,no,0.004842003952474679,no,0.004655007100093363
2489,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//test this entity to see if we must query it,no,undetermined,0,0,0,no,0.005742747747711719,no,0.003444324886778522,no,0.002909752682850916,no,0.0026497609432989274,no,0.002522914306494761
2490,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//NOTE EARLY EXIT,no,undetermined,0,0,0,no,0.019928937636397154,no,0.007902170724451063,no,0.008003235382137295,no,0.007739298768198372,no,0.0074417866289872596
2491,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// for backward-compatability,no,undetermined,0,0,0,no,0.007326663856086777,no,0.005294887170687844,no,0.004918632419277026,no,0.004802445787118319,no,0.004614965697353858
2492,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ignore this error for now,no,undetermined,0,0,0,no,0.0016166464137181292,no,0.0018181762829226188,no,0.001736205762700858,no,0.0017134023445796811,no,0.0016214213824039445
2493,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//must add to JNDI _after_ adding to HashMaps, because some JNDI servers use serialization",no,undetermined,0,0,0,no,0.01616992114998596,no,0.012914976030897165,no,0.012209774627091458,no,0.011881423328377437,no,0.011554372655643437
2494,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// look for existing collection as part of the persistence context,no,undetermined,0,0,0,no,0.006916543257860239,no,0.0037152009806179715,no,0.003625748631268487,no,0.003223833771439649,no,0.0030349147679416284
2495,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Make sure this is a defined parameter and check the incoming value type,no,undetermined,0,0,0,no,0.01017094531592181,no,0.012913051138817374,no,0.012231015106329107,no,0.011871605541278293,no,0.011564977966539144
2496,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// for each of the defined parameters, make sure its value // has been set",no,undetermined,0,0,0,no,0.0015677149591276779,no,0.0011170250019693845,no,0.0009800472780658056,no,0.0009653765978037028,no,0.0009036963417012005
2497,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//we never need to apply locks to the SQL,no,undetermined,0,0,0,no,0.012668620504837531,no,0.012915156059876332,no,0.012228793361467205,no,0.011846115246801871,no,0.011557830135055762
2498,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// deletes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.005087206603506959,no,0.0059221908977383775,no,0.005709833061780701,no,0.005589830476027869,no,0.005380877280317066
2499,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// updates ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0030916309052949143,no,0.0019677603843085137,no,0.0018584266634007363,no,0.0018046942962683368,no,0.0017084215877309762
2500,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// cache the actual id of the object, not the value of the // property-ref, which might not be initialized",no,undetermined,0,0,0,no,0.04223894460629503,no,0.012891667217729823,no,0.012212549511225778,no,0.011849018274403553,no,0.011566249082944836
2501,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// loading ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.004535153946259284,no,0.0034712441750093244,no,0.0032694183892678103,no,0.003355392889772536,no,0.00321255964892643
2502,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// select-range is terminated by declaration of ""from""",no,undetermined,0,0,0,no,0.00660984216098605,no,0.005446845983424096,no,0.004872759315436298,no,0.004844945730963827,no,0.004670781733583931
2503,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// for an any,no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
2504,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// insertable simply because that is the user did not specify // anything; just override it,no,undetermined,0,0,0,no,0.008831674942969651,no,0.01290538186860519,no,0.012224308941374612,no,0.011865368997284178,no,0.011590824512780139
2505,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// properties generated on update can never be updateable...,no,undetermined,0,0,0,no,0.004349587029348438,no,0.009173304784449119,no,0.008712154879704998,no,0.00852940613342078,no,0.008274166171819131
2506,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// updateable only because the user did not specify  // anything; just override it,no,undetermined,0,0,0,no,0.003085259996060096,no,0.005195759568169461,no,0.004857978332403054,no,0.004721148100504645,no,0.0045385917741191445
2507,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// the user specifically supplied update=""true"", // which constitutes an illegal combo",no,undetermined,0,0,0,no,0.007039697828191876,no,0.006788200798609905,no,0.006403461065282255,no,0.006177556691980377,no,0.005974049848444756
2508,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ROLENAME,no,undetermined,0,0,0,no,0.004212989672722126,no,0.004649668047432374,no,0.00434314844267807,no,0.00426820289729493,no,0.0041009775187455
2509,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//final boolean forceCacheRefresh,",no,undetermined,0,0,0,no,0.00011919175992967231,no,0.00022393843596094258,no,0.00020131506979420596,no,0.0001988765816702425,no,0.00018144092422210458
2510,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// first, try to load it from the temp PC associated to this SS",no,undetermined,0,0,0,no,0.0023813837275275767,no,0.003060335642253505,no,0.0028254493065814016,no,0.0028198556871944455,no,0.002653384557270058
2511,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// otherwise immediately materialize it,no,undetermined,0,0,0,no,0.0017117226909095383,no,0.00167565354790558,no,0.0015629751726756974,no,0.0015346063368175116,no,0.0014451545187909919
2512,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/////////////////////////////////////////////////////////////////////////////////////////////////////,no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
2513,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// no auto-flushing to support in stateless session,no,undetermined,0,0,0,no,0.006522206472379627,no,0.00660498504437908,no,0.006226081365868451,no,0.006098513720811195,no,0.005879533359592948
2514,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// FETCH STRATEGY,no,undetermined,0,0,0,no,0.012684947684165525,no,0.01290419835891007,no,0.012213178423750547,no,0.011862415930881467,no,0.011578967567581767
2515,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// TABLE,no,undetermined,0,0,0,no,0.0020116522780454977,no,0.0007637735363257275,no,0.0007211122444365675,no,0.0007062697267307175,no,0.0006577124689186037
2516,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//after setting values to object, entityMode",no,undetermined,0,0,0,no,0.00017669178361189063,no,0.00016235933981039534,no,0.00014759137556502356,no,0.00015086528810624985,no,0.00013694072107356528
2517,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// SORT,no,undetermined,0,0,0,no,0.007672981012280233,no,0.0077311463791689666,no,0.0073555711557564945,no,0.007099164860102501,no,0.006859592282195079
2518,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// do a check,no,undetermined,0,0,0,no,0.0029195894363013408,no,0.0031570311309228713,no,0.00011060219402354293,no,0.00010926912619454861,no,9.861283449749396e-05
2519,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// saveOrUpdate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.006324468532590012,no,0.0061390026561531875,no,0.0057804709083662306,no,0.0056159876633176745,no,0.0054124539466301295
2520,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// update() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.001886158426524015,no,0.0030691455764134284,no,0.002924360189779414,no,0.002857086975227829,no,0.0027240931763303734
2521,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// lock() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0027125283346053548,no,0.0038449149904617058,no,0.003945900277063161,no,0.0038469370630741253,no,0.003679345084432348
2522,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// persist() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0011025899312497893,no,0.001201475450829676,no,0.001113439124674555,no,0.0010939282960387815,no,0.001026657318995228
2523,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// persistOnFlush() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.006324468532590012,no,0.0061390026561531875,no,0.0057804709083662306,no,0.0056159876633176745,no,0.0054124539466301295
2524,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// delete() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.006334225723173869,no,0.007513880621397559,no,0.007017108510699219,no,0.0069489299648002895,no,0.006733465252564224
2525,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// load()/get() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.004134582659042617,no,0.004162571041533056,no,0.0036243846968303304,no,0.003536886263322817,no,0.003313348973136018
2526,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// refresh() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.006672740105357596,no,0.00829261515770157,no,0.007879815662780934,no,0.007625725690268252,no,0.007390988009075015
2527,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// CUSTOM SQL,no,undetermined,0,0,0,no,0.0027942478790320313,no,0.0017249793691298482,no,0.0016318827204243858,no,0.0016406657358396138,no,0.001550534934879737
2528,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// unsorted, natural, comparator.class.name",no,undetermined,0,0,0,no,0.010774256247067087,no,0.01177019918932568,no,0.011114639502592366,no,0.01076146108318855,no,0.010474719063593653
2529,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// replicate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.006324468532590012,no,0.0061390026561531875,no,0.0057804709083662306,no,0.0056159876633176745,no,0.0054124539466301295
2530,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// set up second pass,no,undetermined,0,0,0,no,0.002993617922077873,no,0.0019670063282922687,no,0.0018881973229009272,no,0.0018470191501429804,no,0.0017501291308854223
2531,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// do not auto-flush while outside a transaction,no,undetermined,0,0,0,no,0.01612242888170994,no,0.005512358244768122,no,0.0031053790949975425,no,0.002133986710812309,no,0.002024216886722921
2532,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this is an internal error of some sort...,no,undetermined,0,0,0,no,0.013003794948580491,no,0.009992495283759615,no,0.009718039231622476,no,0.00942154472779526,no,0.00917280288937721
2533,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//do not return a proxy! //(this option indicates we are initializing a proxy),no,undetermined,0,0,0,no,0.008558500096597258,no,0.009521408912355594,no,0.008865162230735345,no,0.008575317001544827,no,0.008337197645963178
2534,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ignore,no,undetermined,0,0,0,no,0.0003963947956631522,no,0.0005033798635581664,no,0.0004702444207308477,no,0.0004640531103833746,no,0.0004297751119298306
2535,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// for an any // we will have to use reflection,no,undetermined,0,0,0,no,0.02231619812307195,no,0.012879571727351807,no,0.012203417211007619,no,0.011841764775575839,no,0.011580716645123676
2536,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//only collections belonging to deleted entities are allowed to be dereferenced in the case of orphan delete,no,undetermined,0,0,0,no,0.007093397160226864,no,0.009517034351390579,no,0.008632302068651664,no,0.008484569902838043,no,0.008257948209430705
2537,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if it was previously unreferenced, we need to flush in order to // get its state into the database in order to execute query",no,undetermined,0,0,0,no,0.009668078290975986,no,0.00319205358856875,no,0.0022966170366048658,no,0.0022552174942206786,no,0.002145834878778483
2538,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// not for internal use:,no,undetermined,0,0,0,no,0.00479074075210517,no,0.0043720116149801565,no,0.004288342952585134,no,0.004181954759243524,no,0.004013843530370002
2539,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// otherwise, we only need to flush if there are in-memory changes // to the queried tables",no,undetermined,0,0,0,no,0.11137296680855072,no,0.08192253421671737,no,0.012225695586877833,no,0.011862680987777053,no,0.011563300704536124
2540,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_0,no,undetermined,0,0,0,no,0.004742980399292193,no,0.005144618038151528,no,0.004831040616159839,no,0.004722825853115608,no,0.004537698436407518
2541,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if it is initialized, see if the underlying //instance is contained, since we need to  //account for the fact that it might have been //evicted",no,undetermined,0,0,0,no,0.14644163117282424,no,0.13910277440939803,no,0.13164632878241403,no,0.12693178081324447,no,0.1287029897827775
2542,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//stops flush being called multiple times if this method is recursively called,no,undetermined,0,0,0,no,0.06076152929407174,no,0.01290507687309644,no,0.012224685460099777,no,0.011872422096058821,no,0.011582734658570196
2543,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// decode row selection...,no,undetermined,0,0,0,no,0.0025636454969051835,no,0.002055604756870427,no,0.001975267163888053,no,0.0019234203088991405,no,0.0018231249243764903
2544,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// basically just an adapted copy of find(CriteriaImpl),no,undetermined,0,0,0,no,0.23995472070670415,no,0.36615187519676184,no,0.37336530322927375,no,0.3625575103597785,no,0.37120081495937546
2545,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ignore this error for now,no,undetermined,0,0,0,no,0.0016166464137181292,no,0.0018181762829226188,no,0.001736205762700858,no,0.0017134023445796811,no,0.0016214213824039445
2546,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we need to writeObject() on this since interceptor is user defined,no,undetermined,0,0,0,no,0.011120549287940332,no,0.010701961079110244,no,0.00943876511704646,no,0.009225440048891892,no,0.008968203515788292
2547,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the old-time stand-by...,no,undetermined,0,0,0,no,0.0068318931754720305,no,0.007096230903974382,no,0.006652413079817815,no,0.006314952677824923,no,0.006094971040959758
2548,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// parameter bind values...,no,undetermined,0,0,0,no,0.002216052058144422,no,0.0017591101412861574,no,0.0017169005725056314,no,0.0017022295881155567,no,0.0016162572823754328
2549,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Parameter handling code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.051691198389450715,no,0.012891622094108246,no,0.012213530270798861,no,0.011837477226037826,no,0.01156731579847184
2550,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Execution methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0028931510863584326,no,0.003168859262619701,no,0.0029119511081439264,no,0.002863090801580639,no,0.0027307718957183145
2551,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//NOTE SPECIAL CASE: // one-to-one constrained=false cannot be proxied, // so default to join and non-lazy",no,undetermined,0,0,0,no,0.0073099421075984465,no,0.005932662273990199,no,0.005409311647794581,no,0.005334578934714,no,0.005122891524930683
2552,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// use old (HB 2.1) defaults if outer-join is specified,no,undetermined,0,0,0,no,0.0017309258301351925,no,0.002188307695523622,no,0.0020878699164261936,no,0.002043857905709787,no,0.0019347482673219517
2553,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we have a CGLIB enhanced entity,no,undetermined,0,0,0,no,0.0075301725916864844,no,0.006063580285843872,no,0.005030478964758623,no,0.004758838591916155,no,0.004572523928734847
2554,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we have a CGLIB enhanced entity,no,undetermined,0,0,0,no,0.0075301725916864844,no,0.006063580285843872,no,0.005030478964758623,no,0.004758838591916155,no,0.004572523928734847
2555,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we have a Javassist enhanced entity,no,undetermined,0,0,0,no,0.0075301725916864844,no,0.006063580285843872,no,0.005030478964758623,no,0.004758838591916155,no,0.004572523928734847
2556,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we have a Javassist enhanced entity,no,undetermined,0,0,0,no,0.0075301725916864844,no,0.006063580285843872,no,0.005030478964758623,no,0.004758838591916155,no,0.004572523928734847
2557,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// FieldInterceptor impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.006562256669935704,no,0.006959610490900894,no,0.006641824253982197,no,0.005272146940800083,no,0.0051040069329332145
2558,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// subclass accesses ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.017907033021360003,no,0.012917223156162254,no,0.012209803498692273,no,0.011856859473242968,no,0.011588923354903267
2559,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// FieldHandler impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.006562256669935704,no,0.006959610490900894,no,0.006641824253982197,no,0.005272146940800083,no,0.0051040069329332145
2560,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// should *not* need to grow beyond the size of the total number of columns in the rs,no,undetermined,0,0,0,no,0.01184344395172778,no,0.012912688537657464,no,0.012214858905643703,no,0.011875226594586086,no,0.011590364815883278
2561,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// should probably no-op commit/rollback here, at least in JTA scenarios",no,undetermined,0,0,0,no,0.009841865491157441,no,0.008798403293134062,no,0.004905803978200402,no,0.004800539864169982,no,0.004613390121775846
2562,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Various Expectation instances ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.010646660056107675,no,0.009343742051792782,no,0.008944583551866137,no,0.008624094409299097,no,0.008375670122095289
2563,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// explicitly perform no checking...,no,undetermined,0,0,0,no,0.058761302177401296,no,0.01288454262347744,no,0.01220504097270591,no,0.011859371676656103,no,0.011547544834298021
2564,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// used from testsuite,no,undetermined,0,0,0,no,0.012897512005352238,no,0.01292851834038609,no,0.011901319971827152,no,0.011619469754965668,no,0.011325445985110935
2565,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// assume we are in an auto-commit state,no,undetermined,0,0,0,no,0.0014721533711698554,no,0.0013474543415007976,no,0.0013447545165368694,no,0.0013423431578667077,no,0.0012627667952732396
2566,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*package*/,no,undetermined,0,0,0,no,0.002544021585726736,no,0.002756752457787323,no,0.002600423329497448,no,0.0025611192192290452,no,0.0024390968529185387
2567,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// GENERATOR,no,undetermined,0,0,0,no,0.009257881122613151,no,0.006324272152943168,no,0.006088472229380813,no,0.005970545183879006,no,0.005783701190377049
2568,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// register synch; stats.connect(),no,undetermined,0,0,0,no,0.0019268284005216005,no,0.0021246183439562905,no,0.001730424300252332,no,0.0017184709895231162,no,0.0016253536237417568
2569,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// calls executeBatch(),no,undetermined,0,0,0,no,0.012834467986735074,no,0.01290165498526816,no,0.012248698692680155,no,0.01185235944190604,no,0.011559383447657737
2570,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//no big deal,no,undetermined,0,0,0,no,0.019167262714001577,no,0.012899216374837043,no,0.012223905625038126,no,0.011839730432876403,no,0.011573992756029923
2571,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// no big deal,no,undetermined,0,0,0,no,0.019167262714001577,no,0.012899216374837043,no,0.012223905625038126,no,0.011839730432876403,no,0.011573992756029923
2572,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// no big deal,no,undetermined,0,0,0,no,0.019167262714001577,no,0.012899216374837043,no,0.012223905625038126,no,0.011839730432876403,no,0.011573992756029923
2573,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// see explanation above...,no,undetermined,0,0,0,no,0.008720683010039847,no,0.012304392689341375,no,0.011508002236616325,no,0.01112467684850339,no,0.010856519404414193
2574,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If we are in the process of releasing, no sense // checking for aggressive-release possibility.",no,undetermined,0,0,0,no,0.053933807130848166,no,0.012886760305168355,no,0.012237842070907572,no,0.011845835082310612,no,0.011582256080131473
2575,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// EARLY EXIT!!!!,no,undetermined,0,0,0,no,0.003933359283837993,no,0.001778043880411003,no,0.0017387305574731227,no,0.0017057885909706125,no,0.0016140607696130788
2576,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// ResultSet impl (""overridden"") ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",no,undetermined,0,0,0,no,0.0027307979134278118,no,0.0038157478936249488,no,0.003438979420996513,no,0.002963603067947083,no,0.0028356545593412456
2577,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ResultSet impl (delegated) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.001483345263237461,no,0.0019058838559173094,no,0.001762824307818884,no,0.0015404783980968336,no,0.001458976901575652
2578,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ID UNSAVED-VALUE,no,undetermined,0,0,0,no,0.00833280384961455,no,0.002354363489289348,no,0.002187434000236187,no,0.0021500218973726313,no,0.0020382391808901152
2579,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// VERSION UNSAVED-VALUE,no,undetermined,0,0,0,no,0.004808068319301886,no,0.0015383700957402467,no,0.0014642703960184252,no,0.0014400376361297252,no,0.0013578914693532975
2580,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// not necessarily a *unique* property reference,no,undetermined,0,0,0,no,0.028745968564643423,no,0.012927025344734834,no,0.01220500434575162,no,0.011879540066120632,no,0.011576419039284053
2581,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Bind the where,no,undetermined,0,0,0,no,0.0036841927317291068,no,0.002864375961705746,no,0.002837096481653278,no,0.00279413021287511,no,0.002669794808431949
2582,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// refer to comment in StatefulPersistenceContext.addCollection(),no,undetermined,0,0,0,no,0.0007646866961240923,no,0.0011803393035751937,no,0.0010877781855631876,no,0.006768005696233906,no,0.006543084795978632
2583,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ConnectionManager.Callback implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.03410004129949485,no,0.009186648743830402,no,0.010334190533431412,no,0.01005194875451442,no,0.009781418822716829
2584,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Note : success = false, because we don't know the outcome of the transaction",no,undetermined,0,0,0,no,0.1416429645175782,no,0.08065438419215326,no,0.012213031424527005,no,0.011839459699385975,no,0.011574081286446528
2585,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Bind the order-by,no,undetermined,0,0,0,no,0.0024026537816632643,no,0.0007634110928594858,no,0.0007445392182806772,no,0.0007363229366597248,no,0.0006885736382128849
2586,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we already have a callback registered; either a local // (org.hibernate.Transaction) transaction has accepted // callback responsibilities, or we have previously // registered a transaction synch.",no,undetermined,0,0,0,no,0.0035260361534383243,no,0.0014609173183983053,no,0.0011420859972085943,no,0.0011654575326763411,no,0.0010953082115770342
2587,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Bind the filters,no,undetermined,0,0,0,no,0.0023572434242174196,no,0.0019306180967698639,no,0.0018328377548896112,no,0.0018305496665556539,no,0.0017340980624074348
2588,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// overriding inherited meta attribute. HBX-621 & HBX-793			,no,undetermined,0,0,0,no,0.006990402232686402,no,0.006170267682565558,no,0.005805698983973287,no,0.0056630432850965536,no,0.005457714340833444
2589,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// first, iterate over all elements capable of defining an extends attribute // collecting all found extends references if they cannot be resolved // against the already processed mappings.",no,undetermined,0,0,0,no,0.002883584051834801,no,0.0016969653624756362,no,0.0015765706703628154,no,0.001557701429005074,no,0.0014692709415299627
2590,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//+ ""_"" + referencedColumnName not used for backward compatibility",no,undetermined,0,0,0,no,0.022747801320701328,no,0.012901777340221922,no,0.012250550934823908,no,0.01187135686842872,no,0.011588094963299671
2591,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//SessionFactory name:,no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
2592,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//JDBC and connection settings:,no,undetermined,0,0,0,no,0.003309825120067845,no,0.008156646197227871,no,0.007924209209032545,no,0.007952144126345777,no,0.007704004884622663
2593,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//JDBC and connection settings:,no,undetermined,0,0,0,no,0.003309825120067845,no,0.008156646197227871,no,0.007924209209032545,no,0.007952144126345777,no,0.007704004884622663
2594,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Interrogate JDBC metadata,no,undetermined,0,0,0,no,0.0020298605469998006,no,0.0069238611389764,no,0.006925864081526368,no,0.006964402428873075,no,0.006733082356164523
2595,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// user supplied JDBC connections,no,undetermined,0,0,0,no,0.0013007240212049363,no,0.0024862322191820303,no,0.0022966005382716883,no,0.0022679263394175075,no,0.0021559772420635523
2596,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Transaction settings:,no,undetermined,0,0,0,no,0.0008625460417600187,no,0.0005424334128515298,no,0.00042775796636769904,no,0.0004394076996344886,no,0.00040607606685067355
2597,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//SQL Generation settings:,no,undetermined,0,0,0,no,0.0006747626011230812,no,0.0006112419368598222,no,0.0005661558103189948,no,0.0005758362134235788,no,0.0005341542773627852
2598,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Query parser settings:,no,undetermined,0,0,0,no,0.0024369619414498036,no,0.0030679473746993316,no,0.0029717966290025806,no,0.0027926645479964623,no,0.002658261677937879
2599,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Second-level / query cache:,no,undetermined,0,0,0,no,0.01008514845996937,no,0.008015146776344337,no,0.007751140001245147,no,0.007393114690351719,no,0.007185170784213686
2600,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//SQL Exception converter:,no,undetermined,0,0,0,no,0.0036633868352268944,no,0.00580940492721477,no,0.005421239121176035,no,0.0054361517462551065,no,0.005231799430391282
2601,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Statistics and logging:,no,undetermined,0,0,0,no,0.004321646104985621,no,0.0047178349504440695,no,0.004218110004446728,no,0.004110994122036762,no,0.003952665814856937
2602,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		settings.setShowSqlEnabled(showSql);,no,undetermined,0,0,0,no,9.800479145687017e-06,no,2.021376716606765e-05,no,1.842905174757944e-05,no,1.8431715996336232e-05,no,1.6158710755459818e-05
2603,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//postInitialize() will be called after initialization,no,undetermined,0,0,0,no,0.005272088215781612,no,0.00657696344161711,no,0.006213746774701117,no,0.005923054043171062,no,0.0057046059139654465
2604,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		settings.setFormatSqlEnabled(formatSql);,no,undetermined,0,0,0,no,9.800479145687017e-06,no,2.021376716606765e-05,no,1.842905174757944e-05,no,1.8431715996336232e-05,no,1.6158710755459818e-05
2605,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// cannot handle single quotes,no,undetermined,0,0,0,no,0.02401136707180127,no,0.01287929366852911,no,0.012211386760682006,no,0.011853998669716505,no,0.011566422573922921
2606,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Schema export:,no,undetermined,0,0,0,no,0.013246141841702449,no,0.012902793049451907,no,0.012215531173708863,no,0.011875744711408944,no,0.011573313366495992
2607,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// todo : for 4.0 //	private static final Logger log = LoggerFactory.getLogger( SQLStatementLogger.class ); // this is the legacy logging 'category'...,no,undetermined,0,0,0,yes,0.6797097879320299,yes,0.6820193420948109,yes,0.6800867917388409,yes,0.6680853788962354,yes,0.6813185737666021
2608,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//if dotted and not load-collection nor return-join //regular property,no,undetermined,0,0,0,no,0.013893278384985925,no,0.008415646450833793,no,0.00778567583651879,no,0.0075005437639670365,no,0.006999985110743488
2609,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// don't even bother trying to read further,no,undetermined,0,0,0,no,0.014016112629209154,no,0.006697216165605461,no,0.00651438423122875,no,0.006267907112126949,no,0.006042978053204835
2610,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	private ComponentTuplizerFactory componentTuplizerFactory; todo : HHH-3517 and HHH-1907 //	private BytecodeProvider bytecodeProvider;,no,undetermined,0,0,0,no,0.5528599218660196,yes,0.6514783507034558,yes,0.6555228859967569,yes,0.6452871204405702,yes,0.6584767844556565
2611,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// public getters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.014022243142147912,no,0.012890039830522096,no,0.012215091034558567,no,0.011849354231538926,no,0.011557589919099403
2612,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// generated properties can *never* be insertable...,no,undetermined,0,0,0,no,0.01827416931181428,no,0.012931436510411697,no,0.012207906952188438,no,0.011878545795246975,no,0.011584338396751355
2613,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	public ComponentTuplizerFactory getComponentTuplizerFactory() { //		return componentTuplizerFactory; //	},no,undetermined,0,0,0,no,0.008411668112222263,no,0.007460577323323775,no,0.007052022516297924,no,0.006804267011987888,no,0.006576466446010007
2614,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// package protected setters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.01619012064000223,no,0.012891037925253958,no,0.012211633606197264,no,0.011859108239982926,no,0.011559974319775686
2615,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	public BytecodeProvider getBytecodeProvider() { //		return bytecodeProvider; //	} // //	void setBytecodeProvider(BytecodeProvider bytecodeProvider) { //		this.bytecodeProvider = bytecodeProvider; //	},no,undetermined,0,0,0,no,0.007932414446394856,no,0.007788704707451189,no,0.007183232352460362,no,0.0070072209062801896,no,0.0067873592784712085
2616,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// using local since the inheritedMetas at this point is not the correct map since it is always the empty map,no,undetermined,0,0,0,no,0.0060670200532447855,no,0.0067090195814617625,no,0.0063375846239780214,no,0.006367985193374086,no,0.006160870310414867
2617,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	protected List extendsQueue;,no,undetermined,0,0,0,no,0.013734033988454963,no,0.012919417561313633,no,0.012223172653927524,no,0.011861862619585488,no,0.01158043086882051
2618,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		extendsQueue = new ArrayList();,no,undetermined,0,0,0,no,0.010469123842916867,no,0.009710757667607792,no,0.008731437748574856,no,0.008476815007989443,no,0.008225025623516916
2619,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		componentTuplizerFactory = new ComponentTuplizerFactory();,no,undetermined,0,0,0,no,0.002636179336331818,no,0.0037656113856225134,no,0.003564350765537382,no,0.0035326015975680643,no,0.0033746501263520966
2620,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if doc is null, then for whatever reason, the cached file cannot be used...",no,undetermined,0,0,0,no,0.012977159933333657,no,0.012880999641987656,no,0.012237892247028303,no,0.011850393940233727,no,0.011570181596647707
2621,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// position cursor to the last row,no,undetermined,0,0,0,no,0.0016184328131357705,no,0.0012473066026511888,no,0.0012169201868513573,no,0.0010389920017572051,no,0.0009743537061461695
2622,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// sequentially read the result set in reverse until we recognize // a change in the key value.  At that point, we are pointed at // the last physical sequential row for the logical row in which // we are interested in processing",no,undetermined,0,0,0,no,0.0013117891050590854,no,0.0009955810834875753,no,0.0009798075992413326,no,0.0009877667222469412,no,0.0009299830417091773
2623,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Read backwards until we read past the first physical sequential // row with the key we are interested in loading,no,undetermined,0,0,0,no,0.0011877219685373123,no,0.0007936698676520382,no,0.0007582548355692348,no,0.000762948999267466,no,0.0007137028730617271
2624,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Finally, read ahead one row to position result set cursor // at the first physical row we are interested in loading",no,undetermined,0,0,0,no,0.0015023105359967728,no,0.0008364715500259086,no,0.0008404545911203268,no,0.000797570534678244,no,0.0007451124674489964
2625,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This method may be called many times!!,no,undetermined,0,0,0,no,0.05597487072390591,no,0.01288269709997901,no,0.012233306029089477,no,0.011879890461748102,no,0.011585768950709743
2626,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// force the proxy to resolve itself,no,undetermined,0,0,0,no,0.0053188090431970595,no,0.0038613758255139725,no,0.003384001266063322,no,0.003128540350175944,no,0.002995130405422498
2627,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this is equivalent to the old behavior...,no,undetermined,0,0,0,no,0.006618941153561777,no,0.008429512670243978,no,0.008101904719108976,no,0.007817502586560825,no,0.007575746799652082
2628,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if null, owner will be retrieved from session",no,undetermined,0,0,0,no,0.006775010408376231,no,0.007320200067441259,no,0.007090236466456926,no,0.0070413543474231845,no,0.006834606178163938
2629,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//			Iterator iterator = extendsQueue.iterator();,no,undetermined,0,0,0,no,0.00827944546291905,no,0.002536323712575574,no,0.0018123315040582354,no,0.0017754271597019444,no,0.0016795657353315813
2630,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		Iterator iter = extendsQueue.iterator();,no,undetermined,0,0,0,no,0.008275794096611952,no,0.003091443522923141,no,0.0023066320589240235,no,0.0022474058172560906,no,0.00213623984925416
2631,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// found,no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
2632,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// found,no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
2633,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		settings.setComponentTuplizerFactory( this.getComponentTuplizerFactory() );,no,undetermined,0,0,0,no,9.800479145687017e-06,no,2.021376716606765e-05,no,1.842905174757944e-05,no,1.8431715996336232e-05,no,1.6158710755459818e-05
2634,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//final String queryString, ",no,undetermined,0,0,0,no,0.0035696969890137483,no,0.005442720809191583,no,0.005007634983401784,no,0.004845469675102602,no,0.004648671005017279
2635,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	private final List extendsQueue;,no,undetermined,0,0,0,no,0.005689760153180838,no,0.008805539073720205,no,0.008428326172308723,no,0.008234661067229683,no,0.00797702284863335
2636,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//<String, String>",no,undetermined,0,0,0,no,0.0015605409668824205,no,0.0017184049189373873,no,0.001497161971896812,no,0.0014376953482598907,no,0.0013551656679011554
2637,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//<String, String>",no,undetermined,0,0,0,no,0.0015605409668824205,no,0.0017184049189373873,no,0.001497161971896812,no,0.0014376953482598907,no,0.0013551656679011554
2638,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// invokeinterface,no,undetermined,0,0,0,no,0.004461466356121916,no,0.0048726413120573795,no,0.004563899386311012,no,0.004473418388100706,no,0.00429371128114475
2639,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//end of array, start filling again from start",no,undetermined,0,0,0,no,0.001803541179579966,no,0.0020662265210368183,no,0.0018865871687039355,no,0.0018556810705570954,no,0.0017554521721393076
2640,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Set USE_REFLECTION_OPTIMIZER to false to fix HHH-227,no,undetermined,0,0,0,no,0.061651678119802704,no,0.012889090777649418,no,0.01221154750592793,no,0.011845224092094651,no,0.011589828506252398
2641,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//orphan delete not supported for EntityMode.DOM4J,no,undetermined,0,0,0,no,0.011400130064938485,no,0.01291019627697638,no,0.01222899303868716,no,0.011882386040874538,no,0.011588426428691173
2642,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//element = XMLHelper.generateDom4jElement( persister.getNodeName() );,no,undetermined,0,0,0,no,0.021064156355583136,no,0.00668909415808898,no,0.0062951900549440675,no,0.0062683908431492375,no,0.006073957002791954
2643,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// intentionally empty,no,undetermined,0,0,0,no,0.006952547877549867,no,0.008046386937544878,no,0.007800606743259962,no,0.008378318925596656,no,0.008145731067491674
2644,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//we can reuse it for each row,no,undetermined,0,0,0,no,0.0011452912238398615,no,0.0027471978082161046,no,0.0026498273845456505,no,0.0025427786560178003,no,0.002420649118866883
2645,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//orphan delete not supported for EntityMode.DOM4J,no,undetermined,0,0,0,no,0.011400130064938485,no,0.01291019627697638,no,0.01222899303868716,no,0.011882386040874538,no,0.011588426428691173
2646,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//can't reuse in this case,no,undetermined,0,0,0,no,0.004423905724746654,no,0.012907295793609122,no,0.01222620870872186,no,0.011867640513810958,no,0.011580876106974116
2647,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//element = XMLHelper.generateDom4jElement( persister.getNodeName() );,no,undetermined,0,0,0,no,0.021064156355583136,no,0.00668909415808898,no,0.0062951900549440675,no,0.0062683908431492375,no,0.006073957002791954
2648,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//needed for SOAP libraries, etc",no,undetermined,0,0,0,no,0.008509644261456659,no,0.008880079188744802,no,0.008618841729518581,no,0.008285774246594773,no,0.008031918975513395
2649,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//EARLY EXIT!,no,undetermined,0,0,0,no,0.003933359283837993,no,0.001778043880411003,no,0.0017387305574731227,no,0.0017057885909706125,no,0.0016140607696130788
2650,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// any earlier proxy takes precedence,no,undetermined,0,0,0,no,0.004024754132852731,no,0.003511477018058006,no,0.003322662351768308,no,0.0032362390086237945,no,0.003092252408289797
2651,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// First we need to suspend any current JTA transaction and obtain // a JDBC connection,no,undetermined,0,0,0,no,0.025574955731891225,no,0.012891885394482544,no,0.012238600712557267,no,0.011877012705658482,no,0.011585336261652918
2652,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//getResultList(results);,no,undetermined,0,0,0,no,0.002537993165058301,no,0.00285360344373873,no,0.0027148940414964914,no,0.0027343092842276704,no,0.0026020103604415066
2653,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if we only returned one entity, query by key is more efficient",no,undetermined,0,0,0,no,0.08216079701345884,no,0.012913828658030911,no,0.012199551425185704,no,0.011852057515690424,no,0.011570569607595262
2654,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the element has been removed from the set,no,undetermined,0,0,0,no,0.00437202643664571,no,0.004728227017516522,no,0.004395829127420178,no,0.003368689969865634,no,0.003222471681870643
2655,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the element has changed,no,undetermined,0,0,0,no,0.00033240139018044483,no,0.0003815929237290045,no,0.0003251702864802526,no,0.00032487496575265206,no,0.00029946103787092276
2656,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.011146430155654264,no,0.010896913918023388,no,0.010206319800874483,no,0.009908823561249249,no,0.009657644718185868
2657,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Careful: these methods do not initialize the collection.,no,undetermined,0,0,0,no,0.006002947522490166,no,0.0024379700181741976,no,0.0023411988123210846,no,0.0024564538101722183,no,0.0022918528710533857
2658,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//needed so that we remove this collection from the second-level cache,no,undetermined,0,0,0,no,0.03715973282244044,no,0.012904943563391067,no,0.012223082424692435,no,0.011880542640090815,no,0.011595690574036149
2659,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// override on some subclasses,no,undetermined,0,0,0,no,0.0013738043546850113,no,0.0016386098173399811,no,0.0015132167046448706,no,0.0015444330805321213,no,0.0014560900585730134
2660,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//override on some subclasses,no,undetermined,0,0,0,no,0.0013738043546850113,no,0.0016386098173399811,no,0.0015132167046448706,no,0.0015444330805321213,no,0.0014560900585730134
2661,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//do this bit after setting initialized to true or it will recurse,no,undetermined,0,0,0,no,0.046950019711114045,no,0.012888995265009771,no,0.012230436918624537,no,0.011840462998881961,no,0.01156879598563511
2662,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// create the collection holding the Orphans,no,undetermined,0,0,0,no,0.004758964146091888,no,0.0028739878356795496,no,0.0027218170879775338,no,0.002649583446761391,no,0.0024721403881734338
2663,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// collect EntityIdentifier(s) of the *current* elements - add them into a HashSet for fast access,no,undetermined,0,0,0,no,0.007179977024410087,no,0.00964565237926684,no,0.009401917582280898,no,0.009129283697907536,no,0.008891758467856819
2664,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// iterate over the *old* list,no,undetermined,0,0,0,no,0.0015685456906847878,no,0.0014163065005353766,no,0.0012903398894591879,no,0.0012720699594671342,no,0.0011952385539663337
2665,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// intentionally empty,no,undetermined,0,0,0,no,0.006952547877549867,no,0.008046386937544878,no,0.007800606743259962,no,0.008378318925596656,no,0.008145731067491674
2666,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*(array==null) ? tempList.get(i) :*/,no,undetermined,0,0,0,no,0.00439404349851977,no,0.002814745060813037,no,0.002412351478590797,no,0.0023645763190578307,no,0.00224618865798223
2667,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// a many-to-many; // decrement currentDepth here to allow join across the association table // without exceeding MAX_FETCH_DEPTH (i.e. the ""currentDepth - 1"" bit)",no,undetermined,0,0,0,no,0.020633919572928795,no,0.01188202360772756,no,0.011790798645795237,no,0.011613351263356463,no,0.011339614596803391
2668,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//write(); -- doesn't,no,undetermined,0,0,0,no,0.0011783728831160232,no,0.0008841725522710116,no,0.0007880806404335293,no,0.0007769795454345414,no,0.000725942069587236
2669,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//write(); -- doesn't,no,undetermined,0,0,0,no,0.0011783728831160232,no,0.0008841725522710116,no,0.0007880806404335293,no,0.0007769795454345414,no,0.000725942069587236
2670,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this is the regression style determination which matches the logic of the classic translator,no,undetermined,0,0,0,no,0.006020933527556453,no,0.004326606605463446,no,0.003438390099444833,no,0.003361195470379357,no,0.003211508648336385
2671,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// a collection loaded in the current session // can not possibly be the collection belonging // to the entity passed to update(),no,undetermined,0,0,0,no,0.006648007697255167,no,0.0025932745772676746,no,0.0023059002115249547,no,0.0021753857386444444,no,0.0020350575232902187
2672,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// handle empty collection,no,undetermined,0,0,0,no,0.012632417789801623,no,0.0009038612373048493,no,0.0007987657601025584,no,0.000789661848004527,no,0.0007229750389905878
2673,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//handle empty collections,no,undetermined,0,0,0,no,0.012484534982916119,no,0.007679304837341716,no,0.00689858441406343,no,0.006766186970858155,no,0.006541796377449698
2674,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// else this is not a collection initializer (and empty collections will // be detected by looking for the owner's identifier in the result set),no,undetermined,0,0,0,no,0.008281223232814619,no,0.006729315137439266,no,0.0064240439410080995,no,0.005809728230233599,no,0.005560007239449682
2675,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//needed for SOAP libraries, etc",no,undetermined,0,0,0,no,0.008509644261456659,no,0.008880079188744802,no,0.008618841729518581,no,0.008285774246594773,no,0.008031918975513395
2676,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// finally, what it's all about...",no,undetermined,0,0,0,no,0.010233977834252048,no,0.008990399145112928,no,0.008543377423073387,no,0.008278346579455061,no,0.008036044298077076
2677,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// here we do not bother with the discriminator.,no,undetermined,0,0,0,no,0.011330206093094122,no,0.011968611084084374,no,0.011397772335199218,no,0.011828527609337273,no,0.01153653858350545
2678,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// validate() instances of Validatable,no,undetermined,0,0,0,no,0.020093606987085295,no,0.012898761151983079,no,0.012218397888599625,no,0.011850618016564734,no,0.011580765089128574
2679,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//null version means the object is in the process of being loaded somewhere else in the ResultSet,no,undetermined,0,0,0,no,0.006106939883908073,no,0.004561636570285439,no,0.004157367342842741,no,0.0042048159926720615,no,0.004044919070079013
2680,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//problematic for <key-many-to-one>!,no,undetermined,0,0,0,no,0.39058122727154954,no,0.3722821506291247,no,0.36884746409259306,no,0.36205837222725945,no,0.3706749971703808
2681,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//use the id passed in,no,undetermined,0,0,0,no,0.011318095907679683,no,0.00876214872558627,no,0.008234913278207629,no,0.008084126479754102,no,0.007808286128917602
2682,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The property is a collection...,no,undetermined,0,0,0,no,0.013318627738740766,no,0.0028019953537631918,no,0.002820559147041922,no,0.0027454069497223014,no,0.0025683954219483086
2683,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Anyway, here we implement <set> semantics for a // <one-to-many> <bag>!",no,undetermined,0,0,0,no,0.0941594234437651,no,0.01291488898217275,no,0.01224242195850174,no,0.011865876829855697,no,0.011584911283229332
2684,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//a shortcut if its location didn't change!,no,undetermined,0,0,0,no,0.013361200946013061,no,0.012880794009737266,no,0.012216830456623846,no,0.011864787416476235,no,0.01156606302653646
2685,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//search for it //note that this code is incorrect for other than one-to-many,no,undetermined,0,0,0,no,0.4176719562258632,no,0.26259033520588776,no,0.2644974057839434,no,0.25679147483807885,no,0.26090947127488806
2686,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//a composite key,no,undetermined,0,0,0,no,0.003966326208393124,no,0.0035384010136988724,no,0.0031537898166051786,no,0.0030616178133604636,no,0.0029306056774725414
2687,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if no batch, use ""foo = ? and bar = ?""",no,undetermined,0,0,0,no,0.006539771471922538,no,0.009508838464950315,no,0.009157243653874238,no,0.008971243093725526,no,0.008676740951775914
2688,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//it must be a collection fetch,no,undetermined,0,0,0,no,0.011296999131971169,no,0.0020559614893582664,no,0.0019295228081068348,no,0.0018793262050858287,no,0.0017379348214682112
2689,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// needed later for many-to-many/filter application,no,undetermined,0,0,0,no,0.11777014613756279,no,0.10570039490876627,no,0.09551707010581158,no,0.011868751027222435,no,0.011567397727311328
2690,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*&& etype.isReferenceToPrimaryKey()*/,no,undetermined,0,0,0,no,0.008739471003527751,no,0.00933280846926596,no,0.00872605264251713,no,0.008481104739672738,no,0.008227441822409457
2691,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Collection wrappers, by the CollectionKey //key=CollectionKey, value=PersistentCollection",no,undetermined,0,0,0,no,0.0021446693867172364,no,0.0027891684180121916,no,0.002590421733219027,no,0.002506054534368069,no,0.0023510987622529407
2692,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// it might still need to apply a collection ordering based on a // many-to-many defined order-by...,no,undetermined,0,0,0,no,0.021267028731594317,no,0.01291757443009016,no,0.012230536502781294,no,0.011881508433326901,no,0.01159494990616146
2693,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// belong to other persister // belong to other persister,no,undetermined,0,0,0,no,0.05536145648862187,no,0.012885688047572967,no,0.012204722036205038,no,0.011871516470666579,no,0.011561703819866941
2694,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we found it,no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
2695,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//we can use an inner join for the many-to-many,no,undetermined,0,0,0,no,0.003037225634142855,no,0.0021991078569949334,no,0.002114520664908439,no,0.002076019222135211,no,0.00196900391406627
2696,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//disable a join back to this same association,no,undetermined,0,0,0,no,0.0020774653157405783,no,0.0016320403683840825,no,0.0015556780429429038,no,0.001532208504644723,no,0.0014510518306491318
2697,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//NOTE: unlike all other Loaders, this one is NOT //      multithreaded, or cacheable!!",no,undetermined,0,0,0,no,0.013071503323529843,no,0.009426167669109668,no,0.008909417064657048,no,0.00866048978591499,no,0.008318049888438993
2698,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//the user visible aliases, which are unknown to the superclass, //these are not the actual ""physical"" SQL aliases",no,undetermined,0,0,0,no,0.0022152789618459477,no,0.001677037989599406,no,0.0035029679815252518,no,0.0035636394569326852,no,0.003406208347659662
2699,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Let return-propertys override whatever the persister has for aliases.,no,undetermined,0,0,0,no,0.009975615485728328,no,0.00418679089757948,no,0.007288410577581277,no,0.007240657606965173,no,0.007022845692982128
2700,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//alias may be null //EARLY EXIT,no,undetermined,0,0,0,no,0.008899424027439646,no,0.005502445884403485,no,0.0053257281582020435,no,0.00521233903207361,no,0.00502606827699783
2701,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// if it is a compound path,no,undetermined,0,0,0,no,0.020018269245277533,no,0.012903201777299795,no,0.012220267259349184,no,0.011879844633468669,no,0.011574998744262389
2702,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if its the root criteria, we are done",no,undetermined,0,0,0,no,0.0038455875791479684,no,0.008445666887167507,no,0.008231765449355475,no,0.007774824936518177,no,0.007534780265621091
2703,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// otherwise, recurse",no,undetermined,0,0,0,no,0.011931928501068284,no,0.012917508748364748,no,0.012245222845959369,no,0.01186218135216916,no,0.011582763828477675
2704,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//the criteria instance,no,undetermined,0,0,0,no,0.004048900188932081,no,0.012926253709625773,no,0.012234740911645984,no,0.01186363224931512,no,0.011576886667134812
2705,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the entity name,no,undetermined,0,0,0,no,0.005965353213529661,no,0.003906049991520161,no,0.003008861342615912,no,0.002808115715339343,no,0.002675994641866169
2706,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//not found in inner query , try the outer query",no,undetermined,0,0,0,no,0.0024875459561479337,no,0.0027949511242998603,no,0.0027392611816724373,no,0.0025482597799089046,no,0.0024266378336327966
2707,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//not found in inner query , try the outer query",no,undetermined,0,0,0,no,0.0024875459561479337,no,0.0027949511242998603,no,0.0027392611816724373,no,0.0025482597799089046,no,0.0024266378336327966
2708,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//it refers to an alias of a projection,no,undetermined,0,0,0,no,0.003966829148089257,no,0.004998880393173199,no,0.004691253090299362,no,0.004565702668724656,no,0.004388700402408306
2709,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//should never happen, i think",no,undetermined,0,0,0,no,0.011915208044591636,no,0.01289360306371325,no,0.012249614960481938,no,0.011863708455817168,no,0.01158608074136933
2710,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Convert the string value into the proper type.,no,undetermined,0,0,0,no,0.017334651809688857,no,0.012879573751733932,no,0.012210074910047507,no,0.011865913952214924,no,0.011573200358606166
2711,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//needed for SOAP libraries, etc",no,undetermined,0,0,0,no,0.008509644261456659,no,0.008880079188744802,no,0.008618841729518581,no,0.008285774246594773,no,0.008031918975513395
2712,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// and the qualifier is not the alias of this criteria //      -> check to see if we belong to some criteria other //          than the one that created us,no,undetermined,0,0,0,no,0.010118827801244996,no,0.012887528602158346,no,0.012247488615479071,no,0.011849751141505485,no,0.01155383744928499
2713,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//it does not refer to an alias of a projection, //look for a property",no,undetermined,0,0,0,no,0.005421724898719747,no,0.008548424864372694,no,0.008144227925307211,no,0.00715625403392652,no,0.006936271112521289
2714,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//search for it //note that this code is incorrect for other than one-to-many,no,undetermined,0,0,0,no,0.4176719562258632,no,0.26259033520588776,no,0.2644974057839434,no,0.25679147483807885,no,0.26090947127488806
2715,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Otherwise, this is an ordinary value.",no,undetermined,0,0,0,no,0.0028836743164968553,no,0.003075314092702227,no,0.002907509341279995,no,0.002860644635958847,no,0.0027276993808621353
2716,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Currently *not* cachable if autodiscover types is in effect (e.g. ""select * ..."")",no,undetermined,0,0,0,no,0.05653712011887999,no,0.012884689249232407,no,0.01220051837157598,no,0.011861070937200483,no,0.011566145540615977
2717,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// List OPERATIONS:,no,undetermined,0,0,0,no,0.006419563587987684,no,0.006473091734768277,no,0.005992352556915764,no,0.005887552720126788,no,0.005675725074368228
2718,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	private final String[] sqlAliases; //	private final String[] sqlAliasSuffixes;,no,undetermined,0,0,0,no,0.00439538589381986,no,0.006447792686437202,no,0.005965420117030523,no,0.005773786970500768,no,0.0055677127387347945
2719,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this is only needed (afaict) for ResultTransformer processing...,no,undetermined,0,0,0,no,0.12096463331341821,no,0.1429202656403958,no,0.1377972010277469,no,0.1309729670573594,no,0.13300612855154947
2720,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// determine if the collection elements are entities...,no,undetermined,0,0,0,no,0.016728020445384982,no,0.012899290362586536,no,0.012201975203179444,no,0.011842294956304466,no,0.011588815414043647
2721,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// replace {....} with corresponding column aliases,no,undetermined,0,0,0,no,0.004997599288565548,no,0.004064240114201723,no,0.007966203198574101,no,0.00794521209722126,no,0.007703581965330768
2722,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// No additional open braces found in the string, append the // rest of the string in its entirty and quit this loop",no,undetermined,0,0,0,no,0.010049081641564676,no,0.009715303043005967,no,0.00923739661652074,no,0.00901942538321302,no,0.008752407189136962
2723,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// apend everything up until the next encountered open brace,no,undetermined,0,0,0,no,0.009892165172365608,no,0.010080548111286232,no,0.010183553844318209,no,0.010028694108557924,no,0.009732042748531938
2724,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//pad with nulls from the current last element up to the new index,no,undetermined,0,0,0,no,0.004202924720995318,no,0.005988442632544509,no,0.005646226964167095,no,0.005557825876663141,no,0.005357680474199004
2725,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// it is a simple table alias {foo},no,undetermined,0,0,0,no,0.000636116528536818,no,0.0005168682272880627,no,0.00046412733880180426,no,0.00045675923284358604,no,0.0004228953953367838
2726,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// passing through anything we do not know : to support jdbc escape sequences HB-898,no,undetermined,0,0,0,no,0.02075762377535228,no,0.012881474644328863,no,0.012227549534378662,no,0.01184990916494309,no,0.011581160891528474
2727,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// passing through anything we do not know : to support jdbc escape sequences HB-898,no,undetermined,0,0,0,no,0.02075762377535228,no,0.012881474644328863,no,0.012227549534378662,no,0.01184990916494309,no,0.011581160891528474
2728,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The current alias is referencing the collection to be eagerly fetched,no,undetermined,0,0,0,no,0.01022873674729163,no,0.007041541605400348,no,0.006995356067889017,no,0.006765528287746806,no,0.006454419992694982
2729,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// it is a property reference {foo.bar},no,undetermined,0,0,0,no,0.007761572778873851,no,0.007329862467518921,no,0.006634227306798577,no,0.006510854913896984,no,0.006291711898964561
2730,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*package*/,no,undetermined,0,0,0,no,0.002544021585726736,no,0.002756752457787323,no,0.002600423329497448,no,0.0025611192192290452,no,0.0024390968529185387
2731,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//NOTE: EARLY EXIT!,no,undetermined,0,0,0,no,0.019928937636397154,no,0.007902170724451063,no,0.008003235382137295,no,0.007739298768198372,no,0.0074417866289872596
2732,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	private final List scalarTypes = new ArrayList(); //	private final List scalarColumnAliases = new ArrayList();,no,undetermined,0,0,0,no,0.01310933977043575,no,0.012912095365176821,no,0.012222548775391594,no,0.011869408244550654,no,0.01155584563955808
2733,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Now, process the returns",no,undetermined,0,0,0,no,0.0020731828818115593,no,0.001112410197006811,no,0.0009644623984104905,no,0.0009768952094754025,no,0.0009157962487462729
2734,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// already been processed...,no,undetermined,0,0,0,no,0.002297070970546192,no,0.0030551512409921822,no,0.0028483864311123464,no,0.0027826787402855336,no,0.0026442431883896026
2735,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// already been processed...,no,undetermined,0,0,0,no,0.002297070970546192,no,0.0030551512409921822,no,0.0028483864311123464,no,0.0027826787402855336,no,0.0026442431883896026
2736,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Make sure the owner alias is known...,no,undetermined,0,0,0,no,0.004989368168422207,no,0.0065458635198889295,no,0.0064583805070631516,no,0.006336816293302393,no,0.006130103670256491
2737,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		scalarColumnAliases.add( typeReturn.getColumnAlias() ); //		scalarTypes.add( typeReturn.getType() );,no,undetermined,0,0,0,no,0.004244859839878923,no,0.0034058708622836643,no,0.0031415282935670238,no,0.003086155965320003,no,0.002945380416503304
2738,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If this return's alias has not been processed yet, do so b4 further processing of this return",no,undetermined,0,0,0,no,0.008093233426054816,no,0.012647638969107023,no,0.011776570979882777,no,0.011328991883174131,no,0.011059265491088193
2739,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//			collectionOwnerAliases.add( ownerAlias );,no,undetermined,0,0,0,no,0.00415481083007601,no,0.004498657312271504,no,0.004201071130841578,no,0.004124244715226038,no,0.0039567375399876545
2740,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//needed for SOAP libraries, etc",no,undetermined,0,0,0,no,0.008509644261456659,no,0.008880079188744802,no,0.008618841729518581,no,0.008285774246594773,no,0.008031918975513395
2741,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//needed for SOAP libraries, etc",no,undetermined,0,0,0,no,0.008509644261456659,no,0.008880079188744802,no,0.008618841729518581,no,0.008285774246594773,no,0.008031918975513395
2742,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// from Map,no,undetermined,0,0,0,no,0.003678336945979555,no,0.0039093265342582725,no,0.00370239756158028,no,0.0036587653937397773,no,0.003501302762557621
2743,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// from SortedMap,no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
2744,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// cannot be instantiated,no,undetermined,0,0,0,no,0.0026280963041377292,no,0.0017434143724320062,no,0.0016400086971164797,no,0.001239658441787511,no,0.0011628505283393254
2745,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//inject the data,no,undetermined,0,0,0,no,0.014526188265385006,no,0.012410975134092044,no,0.011561030317971177,no,0.011206451297711032,no,0.010920045423058418
2746,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//default pool size 20,no,undetermined,0,0,0,no,0.0026048687416448174,no,0.003154488862791382,no,0.0025204059362814992,no,0.002545518351048666,no,0.0024222350950916373
2747,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if debug level is enabled, then log the password, otherwise mask it",no,undetermined,0,0,0,no,0.005671021342015383,no,0.007834582528456467,no,0.007225634660710664,no,0.006998933650122224,no,0.006765180038971613
2748,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// register a cleanup synch,no,undetermined,0,0,0,no,0.004728835988339812,no,0.0037583572955734736,no,0.003215668590555789,no,0.00318048733838602,no,0.003039275929629545
2749,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// wrap the session in the transaction-protection proxy,no,undetermined,0,0,0,no,0.006308823008400021,no,0.0030291496787032642,no,0.0024464334072253667,no,0.0024805355175056944,no,0.002359744548068914
2750,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// then bind it,no,undetermined,0,0,0,no,0.0036841927317291068,no,0.002864375961705746,no,0.002837096481653278,no,0.00279413021287511,no,0.002669794808431949
2751,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this property belongs on the table and is to be inserted,no,undetermined,0,0,0,no,0.06338433413012746,no,0.012898085331892092,no,0.012212209769132386,no,0.011857486354675092,no,0.011576398751953853
2752,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// limit the methods available if no transaction is active,no,undetermined,0,0,0,no,0.005918393092887986,no,0.004608800012325589,no,0.003996371923984302,no,0.004029624454806728,no,0.003870874324890081
2753,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// allow these (deprecated) methods to pass through,no,undetermined,0,0,0,no,0.025106853097335586,no,0.012895970920579656,no,0.012232488835409215,no,0.011852959694173038,no,0.01157603121030368
2754,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.008960595193985269,no,0.012904540997522107,no,0.012205437760713915,no,0.011881915225832998,no,0.0115938378772965
2755,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// add temp entry so that the next step is circular-reference // safe - only needed because some types don't take proper // advantage of two-phase-load (esp. components),no,undetermined,0,0,0,no,0.008109022039096416,no,0.00882406372142954,no,0.008539634907702098,no,0.00804680565556265,no,0.007721435405952039
2756,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// this is the second pass through on a merge op, so here we limit the // replacement to associations types (value types were already replaced // during the first pass)",no,undetermined,0,0,0,no,0.0056988404373332635,no,0.006063504712095042,no,0.006596884386880223,no,0.006494535765210005,no,0.0062989679470664495
2757,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//EARLY EXIT,no,undetermined,0,0,0,no,0.003933359283837993,no,0.001778043880411003,no,0.0017387305574731227,no,0.0017057885909706125,no,0.0016140607696130788
2758,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Handle collection-fiter compilation. // IMPORTANT NOTE: This is modifying the INPUT (HQL) tree, not the output tree!",no,undetermined,0,0,0,no,0.027156113501839246,no,0.012879829460504531,no,0.012226026046938615,no,0.01184230618228566,no,0.011580549921677731
2759,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Initialize the error handling delegate.,no,undetermined,0,0,0,no,0.010082641446476814,no,0.00817137662160509,no,0.007835379898321072,no,0.0076335316358849626,no,0.007389201334841087
2760,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//cannot be instantiated,no,undetermined,0,0,0,no,0.0026280963041377292,no,0.0017434143724320062,no,0.0016400086971164797,no,0.001239658441787511,no,0.0011628505283393254
2761,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//private String propertyName;,no,undetermined,0,0,0,no,0.005423750485224884,no,0.004205222778398651,no,0.003984181530779307,no,0.0038401814682531873,no,0.0036760108047577122
2762,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Use the delegate.,no,undetermined,0,0,0,no,0.012794529432989317,no,0.012582682979175872,no,0.01155284886927659,no,0.011243378950904196,no,0.01090876046022325
2763,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//String[] fk = StringHelper.qualify( ""collection_"", cp.getKeyColumnNames() );",no,undetermined,0,0,0,no,0.0332322048705753,no,0.012887610188215153,no,0.012224303300376268,no,0.01187284728225262,no,0.011556699422453551
2764,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//"" collection_ where "" +",no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
2765,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//unsupported,no,undetermined,0,0,0,no,0.008192344890536165,no,0.008536482312219696,no,0.007911658014344925,no,0.007671734593209153,no,0.00743397274769085
2766,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//unsupported,no,undetermined,0,0,0,no,0.008192344890536165,no,0.008536482312219696,no,0.007911658014344925,no,0.007671734593209153,no,0.00743397274769085
2767,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if not a composite key, use ""foo in (?, ?, ?)"" for batching // if no batch, and not a composite key, use ""foo = ?""",no,undetermined,0,0,0,no,0.0047119077344881955,no,0.005925600875645892,no,0.005500687283502965,no,0.005378341069439763,no,0.0051757604383773775
2768,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// currently only the Hibernate-supplied DbTimestampType is supported here,no,undetermined,0,0,0,no,0.005212291444632382,no,0.01292161324277483,no,0.012202332032336621,no,0.011882851553050805,no,0.01157954287962872
2769,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//cannot be instantiated,no,undetermined,0,0,0,no,0.0026280963041377292,no,0.0017434143724320062,no,0.0016400086971164797,no,0.001239658441787511,no,0.0011628505283393254
2770,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This is called when it's time to fully resolve a path expression.,no,undetermined,0,0,0,no,0.16138020870808528,no,0.10096941208489582,no,0.09438999026002198,no,0.011845698649556827,no,0.011557842501722268
2771,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//implicit polymorphism not supported (would need a union),no,undetermined,0,0,0,no,0.05665720559102309,no,0.012887586215310467,no,0.012206930956128025,no,0.011881007003855656,no,0.011576693175042329
2772,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//pull off the last "", """,no,undetermined,0,0,0,no,0.007788974077020205,no,0.008173297573360827,no,0.007931425543380713,no,0.007688598901657782,no,0.0074393771119958905
2773,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//$NON-NLS-1,no,undetermined,0,0,0,no,0.0057156615453538865,no,0.005544675698135255,no,0.0050634702600794385,no,0.005017083724457911,no,0.004816142592096758
2774,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//always do an INSERT, and let it fail by constraint violation",no,undetermined,0,0,0,no,0.001984707231870552,no,0.0032788657346257337,no,0.0030378203168404095,no,0.0030073592488212134,no,0.0028705306422922424
2775,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//by default, natural-ids are ""immutable"" (constant)",no,undetermined,0,0,0,no,0.005796715269121016,no,0.007395928966889431,no,0.007025488629762609,no,0.0068266037900991325,no,0.006600663946202114
2776,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we have the form: trim(from trimSource). //      This is functionally equivalent to trim(trimSource),no,undetermined,0,0,0,no,0.00582997016398448,no,0.012893267070228585,no,0.012222740540899295,no,0.0118534166436194,no,0.01156354430092714
2777,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// NOT_SUPPORTED_SHOULD_USE_JDBC3_PreparedStatement.getGeneratedKeys_method,no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
2778,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// make a new one,no,undetermined,0,0,0,no,0.005227122735611804,no,0.00389826707817989,no,0.0036875875703153527,no,0.003610523900630659,no,0.003455259330423316
2779,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// astore 4 // store the raw bean,no,undetermined,0,0,0,no,0.0023031648296353542,no,0.0028882744221906584,no,0.0027355498136565075,no,0.0026963352603279265,no,0.002567709693670278
2780,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.002525552164893863,no,0.0035372964829689696,no,0.003319511533314436,no,0.0032615474029665742,no,0.0031159665856848066
2781,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// not so sure this is even valid subtree.  but if it was, it'd // represent two unrelated table references...",no,undetermined,0,0,0,no,0.023574812875041293,no,0.01292400045124525,no,0.011478409367656076,no,0.011330779182054312,no,0.011037730074536624
2782,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// NOTE : firstRow is zero-based,no,undetermined,0,0,0,no,0.020479806996294304,no,0.012924461424309986,no,0.012236713086833972,no,0.011876912769035073,no,0.011565432929628468
2783,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// grrr... for differentiation of mysql storage engines,no,undetermined,0,0,0,no,0.005866217066656873,no,0.009555897068817244,no,0.009043074200525233,no,0.008747442648301742,no,0.008485788106372766
2784,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* current stack len = 0 */,no,undetermined,0,0,0,no,0.003049251213476724,no,0.0031335449918461463,no,0.0030567670111638088,no,0.0029924398979720664,no,0.002852664453886876
2785,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//String[] keyCols = collPersister.getKeyColumnNames();,no,undetermined,0,0,0,no,0.0015605409668824205,no,0.0017184049189373873,no,0.001497161971896812,no,0.0014376953482598907,no,0.0013551656679011554
2786,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Oracle did add support for ANSI CASE statements in 9i,no,undetermined,0,0,0,no,0.001916014386873562,no,0.00201262915994052,no,0.0018591807720785862,no,0.001823002187085175,no,0.0017204867953867953
2787,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the standard SQL function name is current_timestamp...,no,undetermined,0,0,0,no,0.0006818146379750761,no,0.0011095847801412069,no,0.001047669532768826,no,0.0010602995141772863,no,0.0009967814451125958
2788,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//refresh() does not pass an entityName,no,undetermined,0,0,0,no,0.010082222895410534,no,0.012915712938705965,no,0.01222400085546142,no,0.01186159832223809,no,0.011584705670761941
2789,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Informix doesn't have a bit type,no,undetermined,0,0,0,no,0.024501182049359308,no,0.012877601755327567,no,0.012225215068470378,no,0.011866267563592851,no,0.011566724829252216
2790,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// (NOT (GT a b) ) => (LE a b),no,undetermined,0,0,0,no,0.0077961036249851005,no,0.008418497136955487,no,0.007931818385703261,no,0.007735407253892037,no,0.007493880816944618
2791,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// strip table-owner because Informix always returns constraint names as ""<table-owner>.<constraint-name>""",no,undetermined,0,0,0,no,0.0029937502008231327,no,0.0024687254669881866,no,0.0024206898629821087,no,0.00240991445502392,no,0.0022962342757873655
2792,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// build the map of standard ANSI SQL aggregation functions ~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0011967801083720365,no,0.0010925829334949592,no,0.0010400218124408816,no,0.001044209361050186,no,0.0009819276356039807
2793,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//pre H3.2 behavior: super.getReturnType(ct, m);",no,undetermined,0,0,0,no,0.020161044673606965,no,0.01289899230528135,no,0.012227025287100913,no,0.011862460287415623,no,0.011564659820026501
2794,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// finally use the sqltype if == on Hibernate types did not find a match.,no,undetermined,0,0,0,no,0.008955809605241198,no,0.012927521083231279,no,0.012224091214618297,no,0.011848957991563033,no,0.011562108999944408
2795,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//because numeric can be anything,no,undetermined,0,0,0,no,0.004254506745048533,no,0.0032262650853356646,no,0.0034148808957700644,no,0.003335794661149462,no,0.003192422909896311
2796,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// constructors and factory methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.01194743701712814,no,0.012881781914485812,no,0.012203019760560754,no,0.011847077590139454,no,0.011567686862223578
2797,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// standard sql92 functions (can be overridden by subclasses),no,undetermined,0,0,0,no,0.0020145009804690807,no,0.0022449987790154834,no,0.0020939082995462158,no,0.002042334167927581,no,0.0019377355221284025
2798,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//map second/minute/hour/day/month/year to ANSI extract(), override on subclasses",no,undetermined,0,0,0,no,0.0037961289470753697,no,0.003142008439452327,no,0.002974055101128451,no,0.002936974986651682,no,0.0028004290919973825
2799,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// database type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.017111378086875264,no,0.012908999344148998,no,0.012219236565253224,no,0.01185024347117569,no,0.0115604122205711
2800,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// hibernate type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.007502160548797618,no,0.012913267028876739,no,0.012207176967694302,no,0.011866427559918019,no,0.011588862860289071
2801,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//private Type[] sqlResultTypes;,no,undetermined,0,0,0,no,0.010266473772302916,no,0.009187750086970998,no,0.009280103129059105,no,0.008982280072957823,no,0.008726742201503029
2802,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// native identifier generatiion ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0034381193724920644,no,0.0030923571664748088,no,0.0027411029536617048,no,0.0027923807672999394,no,0.0026607274878924494
2803,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// IDENTITY support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.005309609788330111,no,0.012918510173491016,no,0.012209041355855882,no,0.011847572639896489,no,0.01155304219628317
2804,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// SEQUENCE support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.013758266659663966,no,0.011820974772251691,no,0.011076602125487275,no,0.010805621048144974,no,0.010515785172324025
2805,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// limit/offset support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0031109280286820977,no,0.0048853962203618175,no,0.004565588802100434,no,0.004541206980558959,no,0.0043588163673963995
2806,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// by default we report no support,no,undetermined,0,0,0,no,0.03492155373872119,no,0.012895606951402325,no,0.012206811813694715,no,0.011882560776202039,no,0.011579737868558187
2807,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//sqlResultTypes = selectClause.getSqlResultTypes();,no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
2808,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// by default we report no support for NOWAIT lock semantics,no,undetermined,0,0,0,no,0.07323317346051464,no,0.012917829112017849,no,0.012232446416281765,no,0.011855886988242123,no,0.011564751110532196
2809,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.07880328742694175,no,0.012902942349683897,no,0.012237152264910808,no,0.011848837056599696,no,0.011567478342838439
2810,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.016506290083987858,no,0.012895135269400426,no,0.012218679504535923,no,0.011864687017934604,no,0.011589177693554938
2811,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// current timestamp support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0032366702557667915,no,0.004825814020998734,no,0.004614087194049781,no,0.0045353525867312516,no,0.004351449169189912
2812,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.007334648641950395,no,0.01060143503111715,no,0.009894540056113486,no,0.009669395178014796,no,0.009390679378702912
2813,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// identifier quoting support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.014091521264087387,no,0.012911051533864076,no,0.012218833688750704,no,0.011873925269811814,no,0.011576591455097278
2814,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//by default,no,undetermined,0,0,0,no,9.054312686246939e-05,no,0.00018487480121048662,no,0.0001627417203441907,no,0.00016241986424737542,no,0.00014787394602370658
2815,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This is now handled earlier in this method.,no,undetermined,0,0,0,no,0.01939363869284647,no,0.012911686880406966,no,0.01223476421844792,no,0.011888582700704442,no,0.01157181332957754
2816,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// -- Loader implementation --,no,undetermined,0,0,0,no,0.026430554079805692,no,0.005530369635628988,no,0.006137196591657815,no,0.006004959808238575,no,0.005811138671758466
2817,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// -- Loader overrides --,no,undetermined,0,0,0,no,0.0026799666263546207,no,0.0016850774143874223,no,0.0016208733902560617,no,0.001593375889497388,no,0.0015074267695344
2818,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// (NOT (IS_NULL a b) ) => (IS_NOT_NULL a b),no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
2819,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// here assume SQLServer2005 using snapshot isolation, which does not have this problem",no,undetermined,0,0,0,no,0.029700582859453737,no,0.012888435550455362,no,0.012237017219316262,no,0.011838826023881328,no,0.011569211597727221
2820,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//NONE, because its the requested lock mode, not the actual! ",no,undetermined,0,0,0,no,0.0020601210519639985,no,0.0019048790193740102,no,0.0018742451216326446,no,0.0018596123393553182,no,0.0017596812851853449
2821,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// --- Query translator methods ---,no,undetermined,0,0,0,no,0.019034961597168852,no,0.012883729139452427,no,0.01220791409326222,no,0.011870771776322396,no,0.011574340873321617
2822,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Oracle8 and previous define only a ""DATE"" type which //      is used to represent all aspects of date/time",no,undetermined,0,0,0,no,0.006258940536223469,no,0.005193079099120912,no,0.003404245655509112,no,0.003258353284715831,no,0.00310987038132055
2823,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//starts with 1, implicitly",no,undetermined,0,0,0,no,0.0034618027655013697,no,0.005472177968000984,no,0.005335586868574952,no,0.005127856596961799,no,0.0049238173901157934
2824,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//"" cascade"";",no,undetermined,0,0,0,no,0.004393136274998818,no,0.01288831112562013,no,0.012231950762624988,no,0.011882269967048087,no,0.011565926031431506
2825,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// -- Implementation private methods --,no,undetermined,0,0,0,no,0.07233042488586307,no,0.012656094309452184,no,0.01222072028670115,no,0.0118554791566254,no,0.011576039431123654
2826,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//trim off the length/precision/scale,no,undetermined,0,0,0,no,0.009772525480220517,no,0.012894631992485063,no,0.012199063913940008,no,0.011874655598637048,no,0.011577171594422737
2827,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// CHECK VIOLATION,no,undetermined,0,0,0,no,0.004323603574016357,no,0.005487931071829846,no,0.004562555890349105,no,0.004457391170192148,no,0.004280056790389882
2828,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// UNIQUE VIOLATION,no,undetermined,0,0,0,no,0.0064152020536753064,no,0.007795272956663704,no,0.007383905473857221,no,0.007199118333785803,no,0.006966984667915245
2829,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// FOREIGN KEY VIOLATION,no,undetermined,0,0,0,no,0.0012690258969422956,no,0.0020586962925131422,no,0.001935528356298491,no,0.0019092279935844342,no,0.0018120113798573215
2830,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//deduplicate unique constraints sharing the same columns //this is needed by Hibernate Annotations since it creates automagically // unique constraints for the user,no,undetermined,0,0,0,no,0.0002348837205601712,no,0.0017664867745001832,no,0.0017292126604077193,no,0.0016769881736279125,no,0.0015856870913158402
2831,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.002525552164893863,no,0.0035372964829689696,no,0.003319511533314436,no,0.0032615474029665742,no,0.0031159665856848066
2832,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// to support dialects that have their own identity data type,no,undetermined,0,0,0,no,0.016048529797307424,no,0.012894578793810325,no,0.012226242962720894,no,0.011883470595730168,no,0.01159336515516823
2833,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// NOT NULL VIOLATION,no,undetermined,0,0,0,no,0.005578629583654181,no,0.005763951184873865,no,0.005453673406803736,no,0.005340459841817148,no,0.005143457404475634
2834,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ALL OTHER,no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
2835,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Register the type of the out param - PostgreSQL uses Types.OTHER,no,undetermined,0,0,0,no,0.09856609914346832,no,0.012905469714446637,no,0.01223290105338219,no,0.011846077036350421,no,0.011549083935245723
2836,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// seems to have spotty LOB suppport,no,undetermined,0,0,0,no,0.0045527541844926165,no,0.004588943863617372,no,0.004281817409910719,no,0.004179206883779964,no,0.004007917933360512
2837,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// HHH-2300,no,undetermined,0,0,0,no,0.0047429803992962245,no,0.007685832229627766,no,0.0073132560017390436,no,0.007179169263732579,no,0.006943098726316502
2838,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ignore (probably H2 not in the classpath),no,undetermined,0,0,0,no,0.05483513928601246,no,0.012928586027703965,no,0.01222349536028416,no,0.011849302104684238,no,0.011562031168338538
2839,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Prepare the left hand side and get the data type.,no,undetermined,0,0,0,no,0.0036509074925076906,no,0.004864905159226435,no,0.004545626036442922,no,0.004431505406425374,no,0.004252240613541229
2840,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Numeric Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.004012506340106256,no,0.0029762256847177043,no,0.0031072467519557027,no,0.003021232028775246,no,0.0028836720623719074
2841,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//used also for generation of FK names!,no,undetermined,0,0,0,no,0.03662930359083638,no,0.012791598650730773,no,0.011972759946559774,no,0.011737021183136472,no,0.011450352566662646
2842,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//usually useless,no,undetermined,0,0,0,no,0.0127955788545241,no,0.012792477204624349,no,0.011629996717700031,no,0.011312526263838989,no,0.011227337758387633
2843,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//do not add unique constraint on DB not supporting unique and nullable columns,no,undetermined,0,0,0,no,0.00428011603443891,no,0.006075660986050767,no,0.006017523898151711,no,0.005907119733617605,no,0.005697376225217512
2844,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//for backward compatibility, disable this:",no,undetermined,0,0,0,no,0.003005325436075864,no,0.005275246397056982,no,0.004922015115878561,no,0.004829663090213943,no,0.0046513382470325946
2845,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//may be final //may be final //may be final,no,undetermined,0,0,0,no,0.004048768048758331,no,0.011016068283730418,no,0.010305846730413336,no,0.009957708908011701,no,0.009691087397044757
2846,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//may be final,no,undetermined,0,0,0,no,0.004048768048758331,no,0.011016068283730418,no,0.010305846730413336,no,0.009957708908011701,no,0.009691087397044757
2847,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// may be final,no,undetermined,0,0,0,no,0.004048768048758331,no,0.011016068283730418,no,0.010305846730413336,no,0.009957708908011701,no,0.009691087397044757
2848,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Custom SQL,no,undetermined,0,0,0,no,0.0027942478790320313,no,0.0017249793691298482,no,0.0016318827204243858,no,0.0016406657358396138,no,0.001550534934879737
2849,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Primary key constraint,no,undetermined,0,0,0,no,0.007983475137703288,no,0.005417701492788688,no,0.0050802515040156305,no,0.0049346442207156204,no,0.004742571934643038
2850,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ignore it...,no,undetermined,0,0,0,no,0.0003963947956631522,no,0.0005033798635581664,no,0.0004702444207308477,no,0.0004640531103833746,no,0.0004297751119298306
2851,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Time and Date Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.003812475081316125,no,0.003537302476890309,no,0.0033841279928230788,no,0.00316211000981195,no,0.0030158674985378835
2852,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// System Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.004188421136300115,no,0.003963606858465297,no,0.003882294703303714,no,0.0037639081054386156,no,0.0036006405512064355
2853,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// not null is implicit,no,undetermined,0,0,0,no,0.013243545826272872,no,0.012886752399610705,no,0.01222508469264826,no,0.011870104508141011,no,0.011576080306941319
2854,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Display the dialect version.,no,undetermined,0,0,0,no,0.03498712469081982,no,0.01289264688250885,no,0.012234207895424563,no,0.0118457829580357,no,0.011567172717232857
2855,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// nothing to do in a stateful session,no,undetermined,0,0,0,no,0.004390556532554848,no,0.003160870599812191,no,0.00295394210540477,no,0.002891832458538492,no,0.002756472658097609
2856,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The RDMS concat() function only supports 2 parameters,no,undetermined,0,0,0,no,0.005622199618256672,no,0.007818586500338218,no,0.007378179233739458,no,0.007139600151019789,no,0.0069637852789867175
2857,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//flat recursive algorithm,no,undetermined,0,0,0,no,0.006645874830266853,no,0.006561254819531297,no,0.006095642294112341,no,0.005973530339012098,no,0.005763376211176658
2858,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//an identifier mapper => getKey will be included in the getNonDuplicatedPropertyIterator() //and checked later, so it needs to be excluded",no,undetermined,0,0,0,no,0.05198265461318862,no,0.012902067774093742,no,0.012199937243493553,no,0.011839116765422398,no,0.011547986083598914
2859,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* current stack len = 0 */,no,undetermined,0,0,0,no,0.003049251213476724,no,0.0031335449918461463,no,0.0030567670111638088,no,0.0029924398979720664,no,0.002852664453886876
2860,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Dialect method overrides ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.02405354017382119,no,0.01288090315217043,no,0.01223329347363041,no,0.011864208015894814,no,0.011571460498871932
2861,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Custom SQL,no,undetermined,0,0,0,no,0.0027942478790320313,no,0.0017249793691298482,no,0.0016318827204243858,no,0.0016406657358396138,no,0.001550534934879737
2862,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Primary key constraint,no,undetermined,0,0,0,no,0.007983475137703288,no,0.005417701492788688,no,0.0050802515040156305,no,0.0049346442207156204,no,0.004742571934643038
2863,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Original Dialect.java returns "" for update"";",no,undetermined,0,0,0,no,0.012332630143198242,no,0.012906580773972408,no,0.012229037150471711,no,0.011852201046468822,no,0.011582623794172022
2864,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//pass the column name (a generated id almost always has a single column),no,undetermined,0,0,0,no,0.029332117648513126,no,0.012892422705506206,no,0.012208613046264472,no,0.011846284908910721,no,0.011557387322071394
2865,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//needed to satisfy KeyValue,no,undetermined,0,0,0,no,0.012404500614243233,no,0.012908376896332344,no,0.012198580916916793,no,0.011870730526613596,no,0.011577212121330789
2866,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Verify the state of this new method in Hibernate 3.0 Dialect.java,no,undetermined,0,0,0,no,0.008895522024919245,no,0.012885953574654625,no,0.0122364261484905,no,0.011869075249818105,no,0.011592860046945064
2867,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Origial Dialect.java returns true;,no,undetermined,0,0,0,no,0.04546851010494487,no,0.012890296741633389,no,0.012216702970085945,no,0.011870218394472302,no,0.011566501059134445
2868,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// index should be last column listed,no,undetermined,0,0,0,no,0.001690902833464765,no,0.0027410445862195935,no,0.002714698616315809,no,0.0026714180290930783,no,0.002539308972860863
2869,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// *** Sequence methods - start. The RDMS dialect needs these,no,undetermined,0,0,0,no,0.04233561754752963,no,0.012914543107388467,no,0.012217417442944871,no,0.011879500331548479,no,0.011577798179598357
2870,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// methods to make it possible to use the Native Id generator,no,undetermined,0,0,0,no,0.04609874948907799,no,0.012904250583894552,no,0.012234218785072951,no,0.011866090345113618,no,0.011566043691838713
2871,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if it is a formula index, use the element columns in the PK",no,undetermined,0,0,0,no,0.001581750906073267,no,0.005896677161701138,no,0.005832883514468432,no,0.0057202584306681025,no,0.005493909071865307
2872,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// don't create a unique key, 'cos some // databases don't like a UK on nullable // columns",no,undetermined,0,0,0,no,0.011351981059208779,no,0.01290628778152906,no,0.012207451833043457,no,0.011861189871258832,no,0.01157110940035748
2873,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// *** Sequence methods - end,no,undetermined,0,0,0,no,0.00664248142655561,no,0.003917843925230182,no,0.0037129901965726347,no,0.0036098287451077154,no,0.0034544618093437316
2874,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// },no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
2875,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//starts with 1, implicitly",no,undetermined,0,0,0,no,0.0034618027655013697,no,0.005472177968000984,no,0.005335586868574952,no,0.005127856596961799,no,0.0049238173901157934
2876,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Used with DROP TABLE to delete all records in the table.,no,undetermined,0,0,0,no,0.028628949527996182,no,0.012920104901086405,no,0.012213860615377598,no,0.01186130874102873,no,0.011585633752858118
2877,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// no foreign key element of for a one-to-many,no,undetermined,0,0,0,no,0.0006513425190390691,no,0.0011489729791354158,no,0.001065877140660166,no,0.0010654279962925989,no,0.0010028657053044406
2878,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//TODO: we could just return all false...,no,undetermined,0,0,0,yes,0.9809957880235654,no,0.012923175029610927,no,0.012223025400727639,no,0.011865728991179866,no,0.011588097201140266
2879,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the case of a foreign key to something other than the pk is handled in createPropertyRefConstraints,no,undetermined,0,0,0,no,0.001540807490560437,no,0.0013235231467947286,no,0.00124610954165328,no,0.0012359150147115223,no,0.001161023982266512
2880,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the object is persistent,no,undetermined,0,0,0,no,0.005754857800373196,no,0.005017464173543434,no,0.004674122642582013,no,0.004615525665458749,no,0.004436109618155168
2881,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// RDMS supports the UNION ALL clause.,no,undetermined,0,0,0,no,0.008675887446464957,no,0.004676398970789519,no,0.004698858242370615,no,0.004564278703836028,no,0.004414952633240589
2882,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Multi-param dialect functions...,no,undetermined,0,0,0,no,0.17734280979970674,no,0.18585887739550336,no,0.17313742805172944,no,0.16824575541258222,no,0.1710957534254646
2883,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// function templates,no,undetermined,0,0,0,no,0.0013299768153433094,no,0.0026027395306603813,no,0.0024392724571889943,no,0.00243015392920786,no,0.0023087426258423275
2884,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//TODO: we could just return all false...,no,undetermined,0,0,0,yes,0.9809957880235654,no,0.012923175029610927,no,0.012223025400727639,no,0.011865728991179866,no,0.011588097201140266
2885,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//not null is implicit,no,undetermined,0,0,0,no,0.013243545826272872,no,0.012886752399610705,no,0.01222508469264826,no,0.011870104508141011,no,0.011576080306941319
2886,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// this assumes schema support, which is present in 1.8.0 and later...",no,undetermined,0,0,0,no,0.0063009163722194846,no,0.010950628081143051,no,0.010245123078587508,no,0.009678655495771791,no,0.009418672663665183
2887,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//columnUpdateability.length==0 ||,no,undetermined,0,0,0,no,0.009918957511123996,no,0.0099968730957484,no,0.009434194939050433,no,0.008847072542430036,no,0.0085942857980931
2888,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// HSQLDB only supports READ_UNCOMMITTED transaction isolation,no,undetermined,0,0,0,no,0.006402044616380559,no,0.0053602167743663776,no,0.005063557072328691,no,0.005004447582937198,no,0.004846752243723353
2889,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//the entity is associated with the session, so check its status",no,undetermined,0,0,0,no,0.004161805418113793,no,0.0031750594729237002,no,0.0027675851330218352,no,0.0026525910124015916,no,0.002526788267563605
2890,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Multi-param string dialect functions...,no,undetermined,0,0,0,no,0.16518385734718347,no,0.16657974502754253,no,0.1536364128385878,no,0.1484652477903202,no,0.15068533464388223
2891,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Multi-param numeric dialect functions...,no,undetermined,0,0,0,no,0.13028095648216903,no,0.12095593494857192,no,0.11711616401686256,no,0.11364791474161899,no,0.11502803858287013
2892,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Multi-param date dialect functions...,no,undetermined,0,0,0,no,0.16237274181276953,no,0.17003004545105896,no,0.15736986895834643,no,0.15346835665329048,no,0.15592129067232788
2893,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// simple nullability constraint,no,undetermined,0,0,0,no,0.001214951943685762,no,0.004292914484670958,no,0.0037434288561270196,no,0.003644347642159887,no,0.0034840109601623707
2894,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.002525552164893863,no,0.0035372964829689696,no,0.003319511533314436,no,0.0032615474029665742,no,0.0031159665856848066
2895,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.002525552164893863,no,0.0035372964829689696,no,0.003319511533314436,no,0.0032615474029665742,no,0.0031159665856848066
2896,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// return,no,undetermined,0,0,0,no,0.001057492383143947,no,0.0013316596324714771,no,0.0011460020169193198,no,0.0011158146727426985,no,0.0010482475536592862
2897,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	register the type of the out param - an Oracle specific type,no,undetermined,0,0,0,no,0.035560795521373416,no,0.012880054675210004,no,0.012238598895568734,no,0.011842499285531296,no,0.011563368169588787
2898,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// TimesTen has no BLOB/CLOB support, but these types may be suitable  // for some applications. The length is limited to 4 million bytes.",no,undetermined,0,0,0,no,0.007309294870150826,no,0.012877203692276996,no,0.012234713909848295,no,0.011858633680634782,no,0.011559814526883538
2899,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// new methods in dialect3,no,undetermined,0,0,0,no,0.005367227000823955,no,0.00586335384863822,no,0.005532569692874637,no,0.0054080132465586265,no,0.005206555972765421
2900,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*public boolean supportsForUpdateNowait() {
		return false;
	}*/",no,undetermined,0,0,0,no,0.0008554436685149988,no,0.00020754930789401214,no,0.00017537380743333332,no,0.0001746846332257486,no,0.00015900900181001307
2901,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// TimesTen has no known variation of a ""SELECT ... FOR UPDATE"" syntax...",no,undetermined,0,0,0,no,0.0029916763189728494,no,0.003688924630870949,no,0.0033879338256693867,no,0.0032839119821798106,no,0.0031375296874392505
2902,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// iterate entries ordered by capacity to find first fit,no,undetermined,0,0,0,no,0.002989173204586367,no,0.002936590598565748,no,0.002752066616714138,no,0.0027029420649423764,no,0.0025774662872793718
2903,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// add new ordered map,no,undetermined,0,0,0,no,0.008107091913212551,no,0.0083150200687084,no,0.007806881023885498,no,0.007727767453759961,no,0.00748793163962166
2904,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// expected type is intrinsic here...,no,undetermined,0,0,0,no,0.006001824961522322,no,0.004750149765175877,no,0.005076770353518586,no,0.005030179579177503,no,0.004831881742176051
2905,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.002525552164893863,no,0.0035372964829689696,no,0.003319511533314436,no,0.0032615474029665742,no,0.0031159665856848066
2906,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//},no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
2907,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//},no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
2908,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//return memberPersister.getPropertyType(propertyName);,no,undetermined,0,0,0,no,0.005235092147721616,no,0.004375965840497639,no,0.004208789733906224,no,0.004039208087145676,no,0.003873811647402417
2909,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//return memberPersister.toColumns(alias, propertyName);",no,undetermined,0,0,0,no,0.009390881970351723,no,0.009188561625390664,no,0.00876954584736302,no,0.008420224962522099,no,0.008177702220872838
2910,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//return memberPersister.getType();,no,undetermined,0,0,0,no,0.005423324304642121,no,0.0036958438542909265,no,0.0034173636081976165,no,0.003314025510219112,no,0.0031691828482103075
2911,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*&& !indexIsFormula*/,no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
2912,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		return !isOneToMany();,no,undetermined,0,0,0,no,0.001057492383143947,no,0.0013316596324714771,no,0.0011460020169193198,no,0.0011158146727426985,no,0.0010482475536592862
2913,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//instanceof AssociationType;,no,undetermined,0,0,0,no,0.015964993752693103,no,0.012931226818675081,no,0.012236672516738488,no,0.011885746290819437,no,0.01158726633218178
2914,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we need to determine the best way to know that two joinables // represent a single many-to-many...,no,undetermined,0,0,0,yes,0.8993956996770803,yes,0.9012233005814079,no,0.012234728535901993,no,0.011854301865743468,no,0.01158654192370795
2915,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//strip leading ','",no,undetermined,0,0,0,no,0.003240844024954472,no,0.002159422151679637,no,0.0020067480555985536,no,0.001352339890392433,no,0.0012732330668222326
2916,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//public boolean isSubselectLoadable();,no,undetermined,0,0,0,no,0.00023038643561223884,no,0.00019433441127968427,no,0.00017654274812835524,no,0.0001752257365176929,no,0.00015931282028937426
2917,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//columns,no,undetermined,0,0,0,no,4.53885762352056e-05,no,0.000937244733272642,no,0.0011475304004873136,no,0.0011348009299548528,no,0.0010658816039462937
2918,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//SQL statements,no,undetermined,0,0,0,no,0.005613766999461002,no,0.004890598181182991,no,0.004752117757571713,no,0.004795402467815777,no,0.004601413176695883
2919,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//extra information about the element type,no,undetermined,0,0,0,no,0.016408556224849706,no,0.012923379097474964,no,0.012230034795766946,no,0.011863826304793847,no,0.011549328466443512
2920,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//types,no,undetermined,0,0,0,no,0.004182220552139805,no,0.0031495147660270217,no,0.00593705716717016,no,0.0059176519073686745,no,0.005705187902541644
2921,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// sql server just returns automatically,no,undetermined,0,0,0,no,0.017145244648685932,no,0.01291115066250078,no,0.01221815203017483,no,0.011868993094983007,no,0.011582448363513728
2922,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// custom sql,no,undetermined,0,0,0,no,0.0027942478790320313,no,0.0017249793691298482,no,0.0016318827204243858,no,0.0016406657358396138,no,0.001550534934879737
2923,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//private final String unquotedIdentifierColumnName;,no,undetermined,0,0,0,no,0.00439538589381986,no,0.006447792686437202,no,0.005965420117030523,no,0.005773786970500768,no,0.0055677127387347945
2924,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//		return ""select CURRENT_TIMESTAMP from RDB$DATABASE"";",no,undetermined,0,0,0,no,0.012840299315081662,no,0.010265454774180083,no,0.00890092905259029,no,0.008658821411164227,no,0.00842853791327151
2925,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// dynamic filters specifically for many-to-many inside the collection,no,undetermined,0,0,0,no,0.010044275524076617,no,0.009168166727030096,no,0.008830919312165519,no,0.008636764917407742,no,0.008249984303623467
2926,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// dynamic filters for the collection,no,undetermined,0,0,0,no,0.004607834535108055,no,0.0021817762264872355,no,0.0020422377241446402,no,0.0019831452001665886,no,0.00184098103381998
2927,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//registerColumnType data types,no,undetermined,0,0,0,no,0.005663499344479028,no,0.0119268649941361,no,0.011991079633120844,no,0.01184824884604802,no,0.011584928261477005
2928,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// IBID for current_time and current_date,no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
2929,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If we've been blocking for the mutex, perhaps another // thread has already reestablished the root. // In case the node was reestablised via replication, confirm it's  // marked ""resident"" (a status which doesn't replicate)",no,undetermined,0,0,0,no,0.01834955171439258,no,0.012924011569809643,no,0.012185117261371914,no,0.01185205660336293,no,0.011554572963131067
2930,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Tell hibernate to use getBytes instead of getBinaryStream,no,undetermined,0,0,0,no,0.041017837191102524,no,0.012918051028514644,no,0.012239074138441238,no,0.011869300651264701,no,0.01156027727406554
2931,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// No batch statements,no,undetermined,0,0,0,no,0.007679959084218266,no,0.007538737428449883,no,0.0073217951897136535,no,0.007151327197051237,no,0.0069081086215149546
2932,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//ELEMENT,no,undetermined,0,0,0,no,0.0006413782815104335,no,0.0006772968770454983,no,0.0006234928044225432,no,0.0006263587807835928,no,0.0005819117629047104
2933,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*
		 * We might want a special case for 19,2. This is very common for money types
		 * and here it is converted to 18,1
		 */",no,undetermined,0,0,0,no,0.02041349962496456,no,0.012882509059594588,no,0.012215545836821889,no,0.011870852698174868,no,0.011583686341185265
2934,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//no pointbase BIT,no,undetermined,0,0,0,no,0.13452811054623076,no,0.16049822959944804,no,0.15725138028999508,no,0.15496754837512883,no,0.15771673992882046
2935,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//no pointbase TINYINT,no,undetermined,0,0,0,no,0.11278548950057171,no,0.11151127866347227,no,0.10790847751882279,no,0.10631051132209506,no,0.10743347142046962
2936,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// NativeSQL: collect element column and auto-aliases,no,undetermined,0,0,0,no,0.002325234579187933,no,0.00308087407157152,no,0.005513630208327925,no,0.00550514226996656,no,0.005303715290609127
2937,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// INDEX AND ROW SELECT,no,undetermined,0,0,0,no,0.0009704915558772445,no,0.0011874553188237378,no,0.0010135052932950897,no,0.0009889183072051186,no,0.0009272627084473256
2938,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//starts with 1, implicitly",no,undetermined,0,0,0,no,0.0034618027655013697,no,0.005472177968000984,no,0.005335586868574952,no,0.005127856596961799,no,0.0049238173901157934
2939,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// SQL Server (at least up through 2005) does not support defining // cascade delete constraints which can circel back to the mutating // table,no,undetermined,0,0,0,no,0.0018103888276968401,no,0.0129070161498798,no,0.01222803987518204,no,0.011878308257957285,no,0.011550630945318687
2940,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// NativeSQL: collect index column and auto-aliases,no,undetermined,0,0,0,no,0.0021062017007555315,no,0.003894638640529402,no,0.007215623436904902,no,0.007132663898937841,no,0.006895601680108961
2941,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// here assume SQLServer2005 using snapshot isolation, which does not have this problem",no,undetermined,0,0,0,no,0.029700582859453737,no,0.012888435550455362,no,0.012237017219316262,no,0.011838826023881328,no,0.011569211597727221
2942,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//		registerColumnType( Types.CLOB, 16777215, ""mediumtext"" ); //		registerColumnType( Types.CLOB, 65535, ""text"" );",no,undetermined,0,0,0,no,0.002970808207518702,no,0.009562888371521399,no,0.009484361281119473,no,0.009523822945773155,no,0.009249829070230899
2943,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//		registerColumnType( Types.VARCHAR, 16777215, ""mediumtext"" ); //		registerColumnType( Types.VARCHAR, 65535, ""text"" );",no,undetermined,0,0,0,no,0.006520526730157243,no,0.009822988752460142,no,0.009614295436334236,no,0.009564156115287882,no,0.009438521612200148
2944,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//starts with 1, implicitly",no,undetermined,0,0,0,no,0.0034618027655013697,no,0.005472177968000984,no,0.005335586868574952,no,0.005127856596961799,no,0.0049238173901157934
2945,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//GENERATE THE SQL:,no,undetermined,0,0,0,no,0.004236014025970517,no,0.003107213238781,no,0.002817470307505417,no,0.0028537140226500106,no,0.002717958391175518
2946,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* package-private */,no,undetermined,0,0,0,no,0.008349551517376328,no,0.008751596970466227,no,0.00834562741213526,no,0.008127259575475157,no,0.007885653980004365
2947,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//not all classpersisters implement PropertyMapping!,no,undetermined,0,0,0,no,0.011911037485146688,no,0.01289233919445314,no,0.012210105560902143,no,0.011842150060353574,no,0.011563543452540733
2948,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Handle any filters applied to this collection for many-to-many,no,undetermined,0,0,0,no,0.005688410851368663,no,0.002686238756060091,no,0.0024432173919741707,no,0.002398615192124929,no,0.0022388929300130376
2949,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if there is a user-specified loader, return that //TODO: filters!?",no,undetermined,0,0,0,yes,0.880720998518824,yes,0.8754876730054603,yes,0.8788780024317191,yes,0.8728791699999894,yes,0.881908638503443
2950,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Take care of any entities that might have // been evicted!	,no,undetermined,0,0,0,no,0.012152225180185047,no,0.012880639847917756,no,0.012234950101067819,no,0.01184416011707367,no,0.01156097008216293
2951,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//strip leading ','",no,undetermined,0,0,0,no,0.003240844024954472,no,0.002159422151679637,no,0.0020067480555985536,no,0.001352339890392433,no,0.0012732330668222326
2952,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Run a subquery loader,no,undetermined,0,0,0,no,0.004758591382818365,no,0.0056335894741822694,no,0.00534805872691535,no,0.005234526166220505,no,0.005054086167869729
2953,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// We can't change the TM on a running cache; just check // if the cache has no TM and we're OK with that,no,undetermined,0,0,0,no,0.007754267226613833,no,0.012482817777376436,no,0.01220823724408936,no,0.011848417386527055,no,0.011560315353267174
2954,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Sybase BIT type does not support null values,no,undetermined,0,0,0,no,0.05294884513363604,no,0.01289719498701717,no,0.012216734607119235,no,0.011871497900740038,no,0.011578997359149636
2955,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// We could register the session against the transaction even though it is // not started, but we'd have no guarentee of ever getting the map // entries cleaned up (aside from spawning threads).",no,undetermined,0,0,0,no,0.0048488371679354155,no,0.003844989534294049,no,0.0034731974975281293,no,0.0033257757817803436,no,0.0031789179642998126
2956,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//needed by arrays,no,undetermined,0,0,0,no,0.0433602114953342,no,0.012928505237392236,no,0.012245272443452538,no,0.01184746901359776,no,0.01156412951206259
2957,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ignore,no,undetermined,0,0,0,no,0.0003963947956631522,no,0.0005033798635581664,no,0.0004702444207308477,no,0.0004640531103833746,no,0.0004297751119298306
2958,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		 This assumes you will want to ignore any update counts,no,undetermined,0,0,0,no,0.0008826496849161933,no,0.0011605447193293516,no,0.0010715149727855149,no,0.0010897597142261702,no,0.001022762622225106
2959,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//TODO: something with formulas...,no,undetermined,0,0,0,no,0.011915769773668481,no,0.012892946551675156,no,0.012212929575441765,no,0.011854801627810656,no,0.011589831620060054
2960,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//an assertion,no,undetermined,0,0,0,no,0.013682854125484032,no,0.012884055055045947,no,0.012208826692061494,no,0.011870332271714926,no,0.011562220666932257
2961,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Remove all the old entries,no,undetermined,0,0,0,no,0.002084448043780242,no,0.002830506901738002,no,0.002692988774293433,no,0.002635935703193768,no,0.002509387273804708
2962,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* local variables | target obj | each oldvalue | */,no,undetermined,0,0,0,no,0.0033661796901962946,no,0.00417010357312893,no,0.003935706497755669,no,0.0038191522249142146,no,0.0036533132926682677
2963,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//create all the new entries,no,undetermined,0,0,0,no,0.0013609781006552208,no,0.003312542607334586,no,0.0030944572687083725,no,0.0030269520006383087,no,0.0028875537316341545
2964,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*&& !indexIsFormula*/,no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
2965,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*&& !indexIsFormula*/,no,undetermined,0,0,0,no,0.011953354697572636,no,0.012892926680822078,no,0.012215042234414027,no,0.011855240311178256,no,0.01158863204348535
2966,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//delete all the deleted entries,no,undetermined,0,0,0,no,0.002947367600219709,no,0.008231900966276547,no,0.007791572366265868,no,0.007592331821758844,no,0.0073508090348499205
2967,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//insert all the new entries,no,undetermined,0,0,0,no,0.0013594838650235756,no,0.0030429714506210828,no,0.002890985250571167,no,0.0028864327218691825,no,0.0027523107421657334
