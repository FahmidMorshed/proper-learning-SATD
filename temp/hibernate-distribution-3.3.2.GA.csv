,projectname,classification,commenttext,label,code,yes_vote,no_vote
0,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// force the proxy to resolve itself,no,undetermined,0,9
1,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// inject the WHERE after the parent,no,undetermined,0,9
2,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// embedded composite ids ( alias.idname1, alias.idname2 )",no,undetermined,0,9
3,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//can't reuse in this case,no,undetermined,0,9
4,hibernate-distribution-3.3.2.GA,DESIGN,//yuck!,yes,undetermined,2,7
5,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//init the aliases, after initing the constructornode",no,undetermined,0,9
6,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the old-time stand-by...,no,undetermined,0,9
7,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//ignore!,no,undetermined,0,9
8,hibernate-distribution-3.3.2.GA,DESIGN,"// from the collection of associations, locate OJA for the // ManyToOne corresponding to this persister to fully // define the many-to-many; we need that OJA so that we can // use its alias here // TODO : is there a better way here?",yes,undetermined,8,1
9,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// do nothing...,no,undetermined,0,9
10,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//unquotedIdentifierColumnName = null;,no,undetermined,0,9
11,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//no need to check laziness, dirty checking handles that",no,undetermined,1,8
12,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//the first key found after the given key,no,undetermined,0,9
13,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// (NOT (IS_NULL a b) ) => (IS_NOT_NULL a b),no,undetermined,2,7
14,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	private final SessionFactoryImplementor sessionFactory;,no,undetermined,1,8
15,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// allow these (deprecated) methods to pass through,no,undetermined,1,8
16,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: get SQL rendering out of this package!,yes,undetermined,8,1
17,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: this is one of the ugliest and most fragile pieces of code in Hibernate....,yes,undetermined,7,2
18,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Resolve to an identity column.,no,undetermined,0,9
19,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// cleanup code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,1,8
20,hibernate-distribution-3.3.2.GA,DESIGN,// todo : remove,yes,undetermined,7,2
21,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// JoinProcessor needs to know if the where clause fragment came from a dynamic filter or not so it // can put the where clause fragment in the right place in the SQL AST.   'hasFilterCondition' keeps track // of that fact.,no,undetermined,0,9
22,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//an assertion,no,undetermined,0,9
23,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//need to hydrate it.,no,undetermined,0,9
24,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// generate id select fragment and then property select fragment for // each expression, just like generateSelectFragments().",no,undetermined,1,8
25,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// -- Package local methods for the QueryLoader delegate --,no,undetermined,1,8
26,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//WHERE STRING,no,undetermined,0,9
27,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//figure out which columns are needed,no,undetermined,1,8
28,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// generated properties can *never* be insertable...,no,undetermined,0,9
29,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Generators:,no,undetermined,0,9
30,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//all joins join to the pk of the driving table,no,undetermined,0,9
31,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// reference type,no,undetermined,0,9
32,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// sql server just returns automatically,no,undetermined,0,9
33,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// for non-arrays, we don't need to know the element class //elementType.returnedClass();",no,undetermined,0,9
34,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*NativeSQLQueryReturn*/,no,undetermined,0,9
35,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Add these directly to the executions queue,no,undetermined,1,8
36,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// lock() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
37,hibernate-distribution-3.3.2.GA,DESIGN,// short-circuit for performance...,yes,undetermined,0,9
38,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// default to element set if no elements() specified,no,undetermined,0,9
39,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// again, both should be FromElements",no,undetermined,0,9
40,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// intializes result by side-effect,no,undetermined,0,9
41,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
42,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this is a transient object with existing persistent state not loaded by the session,no,undetermined,0,9
43,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//ie. 60 seconds,no,undetermined,0,9
44,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// checkcast (case of reference type),no,undetermined,0,9
45,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this property belongs on the table and is to be inserted,no,undetermined,0,9
46,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//TODO: check this....,no,undetermined,7,2
47,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// could be either an ordinal or JPA-positional parameter,no,undetermined,1,8
48,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// treat it as a path expression,no,undetermined,0,9
49,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If the query is already compiled, skip the compilation.",no,undetermined,0,9
50,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// unsorted, natural, comparator.class.name",no,undetermined,0,9
51,hibernate-distribution-3.3.2.GA,DESIGN,// really there are two situations where it should be ok to allow the insertion // into properties defined on a superclass: //      1) union-subclass with an abstract root entity //      2) discrim-subclass // // #1 is handled already because of the fact that // UnionSubclassPersister alreay always returns 0 // for this call... // // we may want to disallow it for discrim-subclass just for // consistency-sake (currently does not work anyway)...,yes,undetermined,1,8
52,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*&& StringHelper.isNotEmpty( frag )*/,no,undetermined,0,9
53,hibernate-distribution-3.3.2.GA,DESIGN,// todo : remove,yes,undetermined,7,2
54,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//deduplicate unique constraints sharing the same columns //this is needed by Hibernate Annotations since it creates automagically // unique constraints for the user,no,undetermined,0,9
55,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// invokeinterface,no,undetermined,0,9
56,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// collectionPersister should not be null, but we don't want to throw // an exception if it is null",no,undetermined,1,8
57,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Dialect function,no,undetermined,0,9
58,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//before add :-),no,undetermined,0,9
59,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//do nothing - we only need to notify the cache...,no,undetermined,0,9
60,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// remove all collections for the entity from the session-level cache,no,undetermined,0,9
61,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we have an embedded composite identifier,no,undetermined,0,9
62,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Don't hold a transactional lock for this ,no,undetermined,1,8
63,hibernate-distribution-3.3.2.GA,DESIGN,"// todo: we should really just collect these from the various SelectExpressions, rather than regenerating here",yes,undetermined,9,0
64,hibernate-distribution-3.3.2.GA,DESIGN,// TODO: is it really neceassry to provide Configuration to CollectionPersisters ? Should it not be enough with associated class ? // or why does EntityPersister's not get access to configuration ? // // The only reason I could see that Configuration gets passed to collection persisters // is so that they can look up the dom4j node name of the entity element in case // no explicit node name was applied at the collection element level.  Are you kidding me? // Trivial to fix then.  Just store and expose the node name on the entity persister // (which the collection persister looks up anyway via other means...).,yes,undetermined,9,0
65,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	private final List scalarTypes = new ArrayList(); //	private final List scalarColumnAliases = new ArrayList();,no,undetermined,1,8
66,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//sort the updates by pk,no,undetermined,0,9
67,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if an exception occurs during flush, user must call rollback()",no,undetermined,0,9
68,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// create our own copy of the user-supplied tuplizer impl map,no,undetermined,0,9
69,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// SUBCLASSES,no,undetermined,0,9
70,hibernate-distribution-3.3.2.GA,DESIGN,// todo : should we additionally check the current isolation mode explicitly?,yes,undetermined,9,0
71,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// for backward-compatability,no,undetermined,0,9
72,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//allow index() function:,no,undetermined,0,9
73,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// COMPOSITE-ID,no,undetermined,0,9
74,hibernate-distribution-3.3.2.GA,DESIGN,// todo : add the notion of enabled filters to the CacheKey to differentiate filtered collections from non-filtered; //      but CacheKey is currently used for both collections and entities; would ideally need to define two seperate ones; //      currently this works in conjuction with the check on //      DefaultInitializeCollectionEventHandler.initializeCollectionFromCache() (which makes sure to not read from //      cache with enabled filters). // EARLY EXIT!!!!!,yes,undetermined,8,1
75,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: can we *always* use the ""null property"" approach for everything?",yes,undetermined,9,0
76,hibernate-distribution-3.3.2.GA,DEFECT,// TODO : currently we really do not handle ValueInclusion.PARTIAL... // ValueInclusion.PARTIAL would indicate parts of a component need to // be included in the select; currently we then just render the entire // component into the select clause in that case.,yes,undetermined,9,0
77,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//EARLY EXIT!,no,undetermined,0,9
78,hibernate-distribution-3.3.2.GA,DESIGN,"// todo : need map? the prob is a proper key, right?",yes,undetermined,9,0
79,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//NOTE: this is not updated when properties are fetched lazily!,no,undetermined,0,9
80,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// not known!,no,undetermined,1,8
81,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//noop,no,undetermined,0,9
82,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// collection deletions are a special case since update() can add // deletions of collections not loaded by the session.,no,undetermined,0,9
83,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Use the delegate.,no,undetermined,0,9
84,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*package*/,no,undetermined,0,9
85,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Establish the region root node with a non-locking data version,no,undetermined,0,9
86,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// by default we report no support,no,undetermined,2,7
87,hibernate-distribution-3.3.2.GA,DESIGN,//TODO possibly relax that,yes,undetermined,9,0
88,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we need to obtain the lock before any actions are // executed, since this may be an inverse=""true"" // bidirectional association and it is one of the // earlier entity actions which actually updates // the database (this action is resposible for // second-level cache invalidation only)",no,undetermined,0,9
89,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//use a combination of foreign key columns and pk columns, since //the ordering of removal and addition is not guaranteed when //a child moves from one parent to another",no,undetermined,0,9
90,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//faster?,no,undetermined,0,9
91,hibernate-distribution-3.3.2.GA,DEFECT,"// this is only needed (afaict) for processing results from the query cache; // however, this cannot possibly work in the case of discovered types...",yes,undetermined,1,8
92,hibernate-distribution-3.3.2.GA,DEFECT,"//TODO: passing null here, because this method is not really used for DOM4J at the moment //      but it is still a bug, if we don't get rid of this!",yes,undetermined,8,1
93,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*public static Object[] clone(Class elementClass, Object[] array) {
		Object[] result = (Object[]) Array.newInstance( elementClass, array.length );
		System.arraycopy(array, 0, result, 0, array.length);
		return result;
	}*/",no,undetermined,0,9
94,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// PERSISTER,no,undetermined,0,9
95,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Prepare the left hand side and get the data type.,no,undetermined,0,9
96,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	private boolean showSql; //	private boolean formatSql;,no,undetermined,0,9
97,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//add the restriction to the outer select,no,undetermined,0,9
98,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// might happen with a managed connection,no,undetermined,0,9
99,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
100,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: to handle concurrent writes correctly, this should return a Lock to the client",yes,undetermined,8,1
101,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: can we limit stored procedures ?!,yes,undetermined,9,0
102,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// note that for sequential scrolling, we make the assumption that // the first persister element is the ""root entity""",no,undetermined,0,9
103,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this will throw an error if there's something wrong.,no,undetermined,0,9
104,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Bind the order-by,no,undetermined,1,8
105,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// An ident node can represent an index expression if the ident // represents a naked property ref //      *Note: this makes the assumption (which is currently the case //      in the hql-sql grammar) that the ident is first resolved //      itself (addrExpr -> resolve()).  The other option, if that //      changes, is to call resolve from here; but it is //      currently un-needed overhead.",no,undetermined,2,7
106,hibernate-distribution-3.3.2.GA,DEFECT,// TODO: this disables laziness even in non-pojo entity modes:,yes,undetermined,8,1
107,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we need to grab the version value from the entity, otherwise // we have issues with generated-version entities that may have // multiple actions queued during the same flush",no,undetermined,1,8
108,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: validate existing of property with the chosen name. (secondpass ),yes,undetermined,9,0
109,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// otherwise, just dump it",no,undetermined,1,8
110,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"//TODO: arithmetic expressions, multiple new Foo(...)",yes,undetermined,9,0
111,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// do the work,no,undetermined,0,9
112,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// release the jdk internal caches everytime to ensure this // plays nicely with destroyable class-loaders,no,undetermined,1,8
113,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the CascadingAction implementations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
114,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO : an optimization here would be to consider cascade deletes and not gen those delete statements; //      the difficulty is the ordering of the tables here vs the cascade attributes on the persisters -> //          the table info gotten here should really be self-contained (i.e., a class representation //          defining all the needed attributes), then we could then get an array of those",yes,undetermined,9,0
115,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Make #@%$^#^&# sure no alias is applied to the table name,no,undetermined,0,9
116,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* COLUMN and TABLE should be renamed but it would break the public API */,no,undetermined,0,9
117,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Treat explict from elements in sub-queries properly.,no,undetermined,0,9
118,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Don't include sub-classes for implied collection joins or subquery joins.,no,undetermined,0,9
119,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This method may be called many times!!,no,undetermined,0,9
120,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//st.setTimestamp( index,  new Timestamp( cal.getTimeInMillis() ), cal ); //JDK 1.5 only",no,undetermined,0,9
121,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If the node has a first child, recurse into the first child.",no,undetermined,0,9
122,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		this.sessionFactory = sessionFactory;,no,undetermined,0,9
123,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This should only be possible if the caches are constructor injected ,no,undetermined,0,9
124,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// delete() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
125,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//do nothing to avoid a lazy property initialization,no,undetermined,0,9
126,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: we use two visitors here, inefficient!",yes,undetermined,9,0
127,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//a composite key,no,undetermined,0,9
128,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// persists don't cascade to uninitialized collections,no,undetermined,0,9
129,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Resolve the LHS fully, generate implicit joins.  Pass in the property name so that the resolver can // discover foreign key (id) properties.",no,undetermined,0,9
130,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// put the ""standard"" tuplizers into the tuplizer map first",no,undetermined,0,9
131,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//TODO!,no,undetermined,4,5
132,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the element has been removed from the set,no,undetermined,0,9
133,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// (NOT (NE a b) ) => (EQ a b),no,undetermined,2,7
134,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	public ComponentTuplizerFactory getComponentTuplizerFactory() { //		return componentTuplizerFactory; //	},no,undetermined,0,9
135,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// constructors and factory methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
136,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Skip 'DISTINCT' and 'ALL', so we return the first expression node.",no,undetermined,0,9
137,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//element = XMLHelper.generateDom4jElement( persister.getNodeName() );,no,undetermined,0,9
138,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* local variables | this | callback | */,no,undetermined,1,8
139,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// noop,no,undetermined,0,9
140,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// dup,no,undetermined,0,9
141,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// The associated entity is implied, but it must be included in the FROM. // The collection alias is the role.",no,undetermined,0,9
142,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This is the root level node. // Generate an explicit from clause at the root.,no,undetermined,0,9
143,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//its an interface so we can't really tell anything...,no,undetermined,0,9
144,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//remember the uk value,no,undetermined,1,8
145,hibernate-distribution-3.3.2.GA,DESIGN,"// Put a placeholder in entries, so we don't recurse back and try to save() the // same object again. QUESTION: should this be done before onSave() is called? // likewise, should it be done before onUpdate()?",yes,undetermined,1,8
146,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//handle HQL2 collection syntax,no,undetermined,0,9
147,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//		registerColumnType( Types.CLOB, 16777215, ""mediumtext"" ); //		registerColumnType( Types.CLOB, 65535, ""text"" );",no,undetermined,0,9
148,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// semantic action handling ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
149,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// FieldInterceptor impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
150,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// for expected parameter type injection, we expect that the lhs represents // some form of property ref and that the children of the in-list represent // one-or-more params.",no,undetermined,0,9
151,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// according to both the ANSI-SQL and EJB3 specs, trim can either take // exactly one parameter or a variable number of parameters between 1 and 4. // from the SQL spec: // // <trim function> ::= //      TRIM <left paren> <trim operands> <right paren> // // <trim operands> ::= //      [ [ <trim specification> ] [ <trim character> ] FROM ] <trim source> // // <trim specification> ::= //      LEADING //      | TRAILING //      | BOTH // // If only <trim specification> is omitted, BOTH is assumed; // if <trim character> is omitted, space is assumed",no,undetermined,0,9
152,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: disable batch loading if lockMode > READ?,yes,undetermined,9,0
153,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// don't need subclass tables, because they can't appear in conditions",no,undetermined,0,9
154,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	public ComponentTuplizerFactory getComponentTuplizerFactory() { //		return componentTuplizerFactory; //	},no,undetermined,0,9
155,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO: The order in which entities are saved may matter (e.g., a particular transient entity //       may need to be saved before other transient entities can be saved; //       Keep retrying the batch of transient entities until either: //       1) there are no transient entities left in transientCopyCache //       or 2) no transient entities were saved in the last batch // For now, just run through the transient entities and retry the merge",yes,undetermined,6,3
156,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// pass control along to the rest of the processing chain,no,undetermined,0,9
157,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// For the case of dynamic-insert=""false"", use the static SQL",no,undetermined,0,9
158,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : perhaps we should additionally require that the incoming entity // version be equivalent to the defined unsaved-value?,yes,undetermined,8,1
159,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//return a proxy if appropriate,no,undetermined,0,9
160,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// copied from Session:,no,undetermined,0,9
161,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// NOTE : evict() operates locally only (i.e., does not propogate // to any other nodes in the potential cluster).  This is // exactly what is needed when we destroy() here; destroy() is used // as part of the process of shutting down a SessionFactory; thus // these removals should not be propogated",no,undetermined,0,9
162,hibernate-distribution-3.3.2.GA,DESIGN,// Does this dialect support the UNIQUE column syntax?,yes,undetermined,0,9
163,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// ""loaded"" means the reference that is consistent  // with the current database state",no,undetermined,0,9
164,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// belong to other persister // belong to other persister,no,undetermined,0,9
165,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//xml is the entity name,no,undetermined,0,9
166,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//use suffix for the entity columns,no,undetermined,0,9
167,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// this property belongs to the table and it is not specifically // excluded from optimistic locking by optimistic-lock=""false""",no,undetermined,0,9
168,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//information about all properties in class hierarchy,no,undetermined,0,9
169,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//identifier collections not supported for 1-to-many,no,undetermined,0,9
170,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Pointbase has no known variation of a ""SELECT ... FOR UPDATE"" syntax...",no,undetermined,0,9
171,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// contained elements:,no,undetermined,0,9
172,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// starting index,no,undetermined,0,9
173,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//unsupported,no,undetermined,0,9
174,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Now, set the text for this node.  It should be the element columns.",no,undetermined,1,8
175,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// if the condition is not already there...,no,undetermined,0,9
176,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*sqlResultTypeList,*/",no,undetermined,0,9
177,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//unwrap the object,no,undetermined,0,9
178,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//private String propertyName;,no,undetermined,0,9
179,hibernate-distribution-3.3.2.GA,DESIGN,// we do not know either type //BLIND GUESS!,yes,undetermined,0,9
180,hibernate-distribution-3.3.2.GA,DESIGN,// todo : this eventually needs to be removed,yes,undetermined,7,2
181,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Validate that an alias name was provided to determine which pool to use,no,undetermined,0,9
182,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// if it is a compound path,no,undetermined,0,9
183,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// create the collection holding the Orphans,no,undetermined,0,9
184,hibernate-distribution-3.3.2.GA,DESIGN,//TODO:this is only needed during compilation .. can we eliminate the instvar?,yes,undetermined,8,1
185,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// all DistinctRootEntityResultTransformer are considered equal ~~~~~~~~~~~,no,undetermined,0,9
186,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Entity proxies, by EntityKey",no,undetermined,1,8
187,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// -- Loader overrides --,no,undetermined,0,9
188,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Collect the select expressions, skip the first child because it is the class name.",no,undetermined,0,9
189,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// add normal properties,no,undetermined,0,9
190,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO: here is why we need to make bytecode provider global :( // TODO : again, fix this after HHH-1907 is complete",yes,undetermined,9,0
191,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we have the form: trim(trimSource) //      so we trim leading and trailing spaces,no,undetermined,0,9
192,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// default is POJO,no,undetermined,0,9
193,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Remember the parameters for the compilation.,no,undetermined,1,8
194,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// remove session from ""current context""",no,undetermined,0,9
195,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// at some point the processing went bad, so we need to: //      1) make sure the connection handle gets released //      2) try to cleanup the JTA context as much as possible",no,undetermined,0,9
196,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Does the LIMIT clause take a ""maximum"" row number instead of a total number of returned rows?",no,undetermined,0,9
197,hibernate-distribution-3.3.2.GA,DESIGN,"// 'hibernate.temp.use_jdbc_metadata_defaults' is a temporary magic value. // The need for it is intended to be alleviated with future developement, thus it is // not defined as an Environment constant... // // it is used to control whether we should consult the JDBC metadata to determine // certain Settings default values; it is useful to *not* do this when the database // may not be available (mainly in tools usage).",yes,undetermined,1,8
198,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// determine if the collection elements are entities...,no,undetermined,0,9
199,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// State ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
200,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// don't care...,no,undetermined,0,9
201,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//path expression,no,undetermined,0,9
202,hibernate-distribution-3.3.2.GA,DESIGN,"// use COUNT as the default.  This mimics the old behavior, although // NONE might be a better option moving forward in the case of callable",yes,undetermined,1,8
203,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// an uninitialized proxy, noop, don't even need to // return an id, since it is never a save()",no,undetermined,0,9
204,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// checkcast,no,undetermined,0,9
205,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// if template is null we just write the function out as it appears in the hql statement,no,undetermined,0,9
206,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Note this!!,no,undetermined,0,9
207,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//private Type[] sqlResultTypes;,no,undetermined,0,9
208,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// String Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
209,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// We must return a valid RDMS/RSA command from this method to // prevent RDMS/RSA from issuing *ERROR 400,no,undetermined,0,9
210,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: this is a little inefficient, don't need to do a whole //      deep replaceElements() call",yes,undetermined,8,1
211,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: for some dialects it would be appropriate to add the renderOrderByPropertiesSelect() to other select strings,yes,undetermined,8,1
212,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
213,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// adds remove as a sort-of alias for delete...,no,undetermined,0,9
214,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//now done in EntityIdentityInsertAction //persister.setIdentifier( entity, id, source.getEntityMode() );",no,undetermined,0,9
215,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// expected type is intrinsic here...,no,undetermined,0,9
216,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: terrible implementation!,yes,undetermined,8,1
217,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// this implementation is supposed to tolerate incorrect unsaved-value // mappings, for the purpose of backward-compatibility",no,undetermined,0,9
218,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// hibernate type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
219,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// passing through anything we do not know : to support jdbc escape sequences HB-898,no,undetermined,0,9
220,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_2 // load the args,no,undetermined,0,9
221,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// in non-select queries, the only time we should need to join is if we are in a subquery from clause",no,undetermined,1,8
222,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Snapshots of current database state for entities // that have *not* been loaded,no,undetermined,0,9
223,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* current stack len = 0 */,no,undetermined,0,9
224,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The reason for this is SQL doesn't let you sort by an expression you are // not returning in the result set.,no,undetermined,0,9
225,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// collections of values,no,undetermined,0,9
226,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Multi-param numeric dialect functions...,no,undetermined,0,9
227,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// remember that ordinal parameters numbers are 1-based!!!,no,undetermined,0,9
228,hibernate-distribution-3.3.2.GA,DESIGN,// TODO: what type?,yes,undetermined,9,0
229,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//let's assume that there is only one lazy fetch group, for now!",no,undetermined,0,9
230,hibernate-distribution-3.3.2.GA,DESIGN,// This inner class implements a case statement....perhaps im being a bit over-clever here,yes,undetermined,1,8
231,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// subclass closure properties,no,undetermined,0,9
232,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the closure of all columns used by the entire hierarchy including // subclasses and superclasses of this class,no,undetermined,0,9
233,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// CUSTOM SQL,no,undetermined,0,9
234,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Remember Isolation level,no,undetermined,1,8
235,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the standard SQL function name is current_timestamp...,no,undetermined,0,9
236,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// super-duper-classic-parser-regression-testing-mojo-magic...,no,undetermined,1,8
237,hibernate-distribution-3.3.2.GA,DESIGN,// Make sure this is a defined parameter and check the incoming value type // TODO: what should be the actual exception type here?,yes,undetermined,9,0
238,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this is only needed (afaict) for ResultTransformer processing...,no,undetermined,0,9
239,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// VersionType impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //      Note : simply returns null for seed() and next() as the only known //      application of binary types for versioning is for use with the //      TIMESTAMP datatype supported by Sybase and SQL Server, which //      are completely db-generated values...",no,undetermined,0,9
240,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Create the FROM element for the target (the elements of the collection).,no,undetermined,0,9
241,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//were an odd or even number of NOTs encountered //the join string built up by compound paths inside this expression //a flag indicating if the subexpression is known to be boolean,no,undetermined,0,9
242,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If this is an entity and the property is the identifier property, then use getIdentifierType(). //      Note that the propertyName.equals( propertyPath ) checks whether we have a component //      key reference, where the component class property name is the same as the //      entity id property name; if the two are not equal, this is the case and //      we'd need to ""fall through"" to using the property mapping.",no,undetermined,0,9
243,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//			optimizer = getFactory().getSettings().getBytecodeProvider().getReflectionOptimizer( //					mappedClass, getterNames, setterNames, propTypes //			);",no,undetermined,0,9
244,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//sqlResultTypes = ( Type[] ) sqlResultTypeList.toArray( new Type[sqlResultTypeList.size()] );,no,undetermined,0,9
245,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//write(); -- doesn't,no,undetermined,0,9
246,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//implicit polymorphism not supported (would need a union),no,undetermined,0,9
247,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Make sure you log the exception, as it might be swallowed",no,undetermined,0,9
248,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the list of entity names that indicate the batch number,no,undetermined,0,9
249,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//prevents this session from adding things to cache,no,undetermined,0,9
250,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// then bind it,no,undetermined,0,9
251,hibernate-distribution-3.3.2.GA,DESIGN,// todo : we can remove this once the deprecated ctor can be made private...,yes,undetermined,8,1
252,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// See if the user configured a multiplexer stack,no,undetermined,0,9
253,hibernate-distribution-3.3.2.GA,DESIGN,"// ignore it; the incoming property could not be found so we // cannot be sure what to do here.  At the very least, the // safest is to simply not apply any dereference toggling...",yes,undetermined,0,9
254,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we have a Javassist enhanced entity,no,undetermined,0,9
255,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Execution methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
256,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// finally use the sqltype if == on Hibernate types did not find a match.,no,undetermined,0,9
257,hibernate-distribution-3.3.2.GA,DESIGN,// this class has no proxies (so do a shortcut),yes,undetermined,0,9
258,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// limit/offset support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
259,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// TODO : shouldnt inserts be Expectations.NONE?,no,undetermined,8,1
260,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Deserialize //-----------------------------------------------------------------------,no,undetermined,0,9
261,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// table=null -> an association // - fill it in later //TODO fill in the mappings for table == null,yes,undetermined,8,1
262,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// TODO : or should we return 'containsTableAlias'??,yes,undetermined,9,0
263,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//value is the entity name,no,undetermined,0,9
264,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this will throw an error if there's something wrong.,no,undetermined,0,9
265,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If the expression list has exactly one expression, and the type of the expression is a collection // then this might be a collection function, such as index(c) or size(c).",no,undetermined,0,9
266,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// iinc 3, 1",no,undetermined,0,9
267,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// let the interceptor inspect the instance to decide,no,undetermined,0,9
268,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if the collection belonged to a different entity, // clean up the existing state of the collection",no,undetermined,0,9
269,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// invokeinterface // invoke Enabled.getInterceptFieldCallback(),no,undetermined,0,9
270,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// perform the actual work,no,undetermined,0,9
271,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Handle any filters applied to the class level,no,undetermined,0,9
272,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// (NOT (GE a b) ) => (LT a b),no,undetermined,2,7
273,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//st.setDate( index,  new Date( cal.getTimeInMillis() ), cal ); //JDK 1.5 only",no,undetermined,0,9
274,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//This solution would allow us to eliminate the owner arg to disassemble(), but //what if the collection was null, and then later had elements added? seems unsafe //session.getPersistenceContext().getCollectionEntry( (PersistentCollection) value ).getKey();",no,undetermined,1,8
275,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Fetch Reader content up to the end - and put characters in a StringBuffer,no,undetermined,1,8
276,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// note: interfaces is assumed to already contain HibernateProxy.class,no,undetermined,0,9
277,hibernate-distribution-3.3.2.GA,DESIGN,// todo : we can remove this once the deprecated ctor can be made private...,yes,undetermined,8,1
278,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// or BYTE // or TEXT? // or MONEY,no,undetermined,0,9
279,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// then the pojo tuplizer, using the dynamic-map tuplizer if no pojo representation is available",no,undetermined,0,9
280,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	void setComponentTuplizerFactory(ComponentTuplizerFactory componentTuplizerFactory) { //		this.componentTuplizerFactory = componentTuplizerFactory; //	},no,undetermined,0,9
281,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// we could move this inside if we wanted to // tolerate collection initializations during // collection dirty checking:,yes,undetermined,1,8
282,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: inefficient if that cache is just going to ignore the updated state!,yes,undetermined,9,0
283,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//			boolean put = persister.getCache().insert(ck, cacheEntry);",no,undetermined,0,9
284,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// returnign null!,no,undetermined,0,9
285,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This is not strictly true.  We actually just need to make sure that // it is ordered by root-entity PK and that that order-by comes before // any non-root-entity ordering...,no,undetermined,1,8
286,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//private final String unquotedIdentifierColumnName;,no,undetermined,1,8
287,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//ie. e.status==DELETED,no,undetermined,0,9
288,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//TODO!,no,undetermined,4,5
289,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if there is no order by, make one",no,undetermined,0,9
290,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ----------------------------------------------------- Instance Variables,no,undetermined,0,9
291,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// add temp entry so that the next step is circular-reference // safe - only needed because some types don't take proper // advantage of two-phase-load (esp. components),no,undetermined,0,9
292,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//entirely optional!!,no,undetermined,0,9
293,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Add any joins,no,undetermined,0,9
294,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ( (Column) ( (SimpleValue) ic.getIndex() ).getColumnIterator().next() // ).setNullable(false);,no,undetermined,0,9
295,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// early exit...,no,undetermined,0,9
296,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// have the entity entry perform post-update processing, passing it the // update state and the new version (if one).",no,undetermined,0,9
297,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// some filters affecting the collection are enabled on the session, so do not do the put into the cache.",no,undetermined,0,9
298,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//it refers to an alias of a projection,no,undetermined,0,9
299,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// drop them in reverse order in case db needs it done that way...,no,undetermined,0,9
300,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// column index,no,undetermined,0,9
301,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// locate the registered function by the given name,no,undetermined,0,9
302,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// so the transaction is already rolled back, by JTA spec",no,undetermined,0,9
303,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// dotcount>=2,no,undetermined,0,9
304,hibernate-distribution-3.3.2.GA,DESIGN,// todo : should we check the current isolation mode explicitly?,yes,undetermined,9,0
305,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// these are just two unrelated table references,no,undetermined,0,9
306,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/////////////////////////////////////////////////////////////////////////////////////////////////////,no,undetermined,0,9
307,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// This uses a PathExpressionParser but notice that compound paths are not valid, // only bare names and simple paths:",no,undetermined,0,9
308,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Render the identifier select fragment using the table alias.,no,undetermined,0,9
309,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ignore,no,undetermined,0,9
310,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO: get SQL rendering out of here, create an AST for the join expressions. // Use the SQL generator grammar to generate the SQL text for the index expression.",yes,undetermined,9,0
311,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Base Expectation impls ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
312,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//not null ... (start with 1) is implicit,no,undetermined,0,9
313,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we know only the rhs-hand type, so use that",no,undetermined,0,9
314,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// If it's not implied or it is implied and it's a many to many join where the target wasn't found.,no,undetermined,0,9
315,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : keep seperate notions of QT[] here for shallow/non-shallow queries...,yes,undetermined,9,0
316,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// might happen with a managed connection,no,undetermined,0,9
317,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//ie. a many-to-many,no,undetermined,0,9
318,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// get meta's from <subclass>,no,undetermined,0,9
319,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Named Queries:,no,undetermined,0,9
320,hibernate-distribution-3.3.2.GA,DEFECT,"// TODO: Deal with the ""optional"" attribute in the <join> mapping; // this code assumes that optional defaults to ""true"" because it // doesn't actually seem to work in the fetch=""join"" code // // Note that actual proper handling of optional-ality here is actually // more involved than this patch assumes.  Remember that we might have // multiple <join/> mappings associated with a single entity.  Really // a couple of things need to happen to properly handle optional here: //  1) First and foremost, when handling multiple <join/>s, we really //      should be using the entity root table as the driving table; //      another option here would be to choose some non-optional joined //      table to use as the driving table.  In all likelihood, just using //      the root table is much simplier //  2) Need to add the FK columns corresponding to each joined table //      to the generated select list; these would then be used when //      iterating the result set to determine whether all non-optional //      data is present // My initial thoughts on the best way to deal with this would be // to introduce a new SequentialSelect abstraction that actually gets // generated in the persisters (ok, SingleTable...) and utilized here. // It would encapsulated all this required optional-ality checking...",yes,undetermined,6,3
321,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// SUBCLASSES,no,undetermined,0,9
322,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// byte,no,undetermined,0,9
323,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// allow these to go through the the real session no matter what,no,undetermined,0,9
324,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// TimesTen has no BLOB/CLOB support, but these types may be suitable  // for some applications. The length is limited to 4 million bytes.",no,undetermined,1,8
325,hibernate-distribution-3.3.2.GA,DESIGN,"// important, to account for newly saved entities in query // todo : some kind of check for new status...",yes,undetermined,7,2
326,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
327,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// end region to handling exception (BulkAccessorException),no,undetermined,0,9
328,hibernate-distribution-3.3.2.GA,DESIGN,//create an index on the key columns??,yes,undetermined,0,9
329,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// metaType is assumed to be single-column type,no,undetermined,0,9
330,hibernate-distribution-3.3.2.GA,DESIGN,//create an index on the key columns??,yes,undetermined,0,9
331,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//private List aliases = new ArrayList();,no,undetermined,0,9
332,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// SUBCLASS PROPERTY CLOSURE,no,undetermined,0,9
333,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//a shortcut if its location didn't change!,no,undetermined,0,9
334,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//null child could occur for no from clause in a filter,no,undetermined,1,8
335,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*(array==null) ? tempList.get(i) :*/,no,undetermined,0,9
336,hibernate-distribution-3.3.2.GA,DESIGN,"//aliasRefNode.resolve( false, false, aliasRefNode.getText() ); //TODO: is it kosher to do it here? //TODO: is it kosher to do it here?",yes,undetermined,9,0
337,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_2 // args,no,undetermined,0,9
338,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// false indicates to not generate parens around the assignment,no,undetermined,0,9
339,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
340,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// convenience methods relating to operations across arrays of types...,no,undetermined,0,9
341,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//"" collection_ where "" +",no,undetermined,0,9
342,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// look for a proxy,no,undetermined,0,9
343,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Write any appropriate versioning conditional parameters,no,undetermined,0,9
344,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Append the new property name onto the unresolved path.,no,undetermined,0,9
345,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Bind the where,no,undetermined,0,9
346,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//otherwise recreate the mapping between the collection and its key,no,undetermined,1,8
347,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//pass the entity-name, if not a collection-id",no,undetermined,0,9
348,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// used from testsuite,no,undetermined,1,8
349,hibernate-distribution-3.3.2.GA,DEFECT,// note: at least my local MySQL 5.1 install shows this not working...,yes,undetermined,1,8
350,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//  origin, path, implied, columns, classAlias,",no,undetermined,0,9
351,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// break the outer loop !!!,no,undetermined,0,9
352,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Get the configurator files (if available),no,undetermined,0,9
353,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// more specifically : ""datetime [op] ?"" //      1) if the operator is MINUS, we really cannot determine //          the expected type as either another datetime or //          numeric would be valid //      2) if the operator is PLUS, the param needs to be of //          some numeric type",no,undetermined,1,8
354,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//do not return a proxy! //(this option indicates we are initializing a proxy),no,undetermined,0,9
355,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Use theta style (for regression) // Move the node up, after the origin node.",no,undetermined,0,9
356,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// jdbc params are 1-based,no,undetermined,0,9
357,hibernate-distribution-3.3.2.GA,DESIGN,"/**
     * FIXME Per the RegionFactory class Javadoc, this constructor version
     * should not be necessary.
     * 
     * @param props The configuration properties
     */",yes,undetermined,7,2
358,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//allow ODMG OQL style: from Person p, p.cars c",no,undetermined,0,9
359,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If this from element is a collection and the path is a collection property (maxIndex, etc.) then // generate a sub-query.",no,undetermined,0,9
360,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// override on some subclasses,no,undetermined,0,9
361,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// need to look it up from the persistence-context,no,undetermined,0,9
362,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Always add the collection's query spaces.,no,undetermined,0,9
363,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: refactor to .sql package,yes,undetermined,8,1
364,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// not known!,no,undetermined,1,8
365,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// parameters on the property mapping should // override parameters in the typedef,no,undetermined,1,8
366,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*package*/,no,undetermined,0,9
367,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// EARLY EXIT!!!,no,undetermined,0,9
368,hibernate-distribution-3.3.2.GA,DESIGN,// todo : would love to have this work on a notification basis //    where the successful binding of an entity/subclass would //    emit a notification which the extendsQueue entries could //    react to...,yes,undetermined,8,1
369,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//a newly wrapped collection is NOT dirty (or we get unnecessary version updates),no,undetermined,0,9
370,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Create the SessionFactory from hibernate.cfg.xml,no,undetermined,0,9
371,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// get a connection from the pool (thru DriverManager, cfr. Proxool doc)",no,undetermined,0,9
372,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//lobs cannot be compared,no,undetermined,0,9
373,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// potentialTrimCharacterArgIndex = 1 assumes that a // trim-specification has been specified.  we handle the // exception to that explicitly,no,undetermined,0,9
374,hibernate-distribution-3.3.2.GA,DESIGN,// Does this dialect support the FOR UPDATE syntax?,yes,undetermined,0,9
375,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : better way?!?,yes,undetermined,9,0
376,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Multi-param numeric dialect functions...,no,undetermined,0,9
377,hibernate-distribution-3.3.2.GA,DESIGN,"// We should reengineer this class so that, rather than the current ad - // hoc linear approach to processing a stream of tokens, we instead // build up a tree of expressions.",yes,undetermined,1,8
378,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// We use a different delegate than the non-optimistic superclass default,no,undetermined,0,9
379,hibernate-distribution-3.3.2.GA,DESIGN,// inheritance cycle detection (paranoid check),yes,undetermined,0,9
380,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// UNIQUE VIOLATION,no,undetermined,0,9
381,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Handle any filters applied to this collection for many-to-many,no,undetermined,0,9
382,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// make sure this ""name"" is an integral",no,undetermined,0,9
383,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// TODO: better error message since we actually support composites if names are explicitly listed.,yes,undetermined,9,0
384,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Initial load from JBC,no,undetermined,0,9
385,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Defensive, convenience methods",no,undetermined,0,9
386,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// classes mentioned in extends not available - so put it in queue,no,undetermined,0,9
387,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*package*/,no,undetermined,0,9
388,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: I am not so sure about the exception handling in this bit!,yes,undetermined,9,0
389,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// in case we were deserialized in a different JVM, look for an instance with the same name // (alternatively we could do an actual JNDI lookup here....)",no,undetermined,0,9
390,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// here assume SQLServer2005 using snapshot isolation, which does not have this problem",no,undetermined,0,9
391,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Register the FromElement with the FROM clause, now that we have the names and aliases.",no,undetermined,0,9
392,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//nothing to do,no,undetermined,0,9
393,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// replicate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
394,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Tell hibernate to use getBytes instead of getBinaryStream,no,undetermined,0,9
395,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// for merging of versioned entities, we consider the version having // been changed only when: // 1) the two version values are different; //      *AND* // 2) The target actually represents database state! // // This second condition is a special case which allows // an entity to be merged during the same transaction // (though during a seperate operation) in which it was // originally persisted/saved",no,undetermined,0,9
396,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// swallow it, and continue to roll back JTA transaction",no,undetermined,0,9
397,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//we can reuse it for each row,no,undetermined,0,9
398,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//values is not null and is checkable, we'll look deeper",no,undetermined,0,9
399,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we have the form: trim(from trimSource). //      This is functionally equivalent to trim(trimSource) // EARLY EXIT!!!!,no,undetermined,0,9
400,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// some collections are not lazy:,no,undetermined,0,9
401,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// might need to run a different filter entirely after the flush // because the collection role may have changed,no,undetermined,1,8
402,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// check the version unsaved-value, if appropriate",no,undetermined,0,9
403,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we want to be able to just use the defaults, // if JNDI environment properties are not supplied // so don't put null in anywhere",no,undetermined,0,9
404,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: is this really necessary????,yes,undetermined,8,1
405,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//may be final //may be final //may be final,no,undetermined,2,7
406,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// FETCH STRATEGY,no,undetermined,0,9
407,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//a shortcut if its location didn't change!,no,undetermined,0,9
408,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Interrogate JDBC metadata,no,undetermined,0,9
409,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// putfield // put field ""$JAVASSIST_CALLBACK"" defined already",no,undetermined,0,9
410,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Not called at runtime so doesn't matter if its slow :),no,undetermined,0,9
411,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// long,no,undetermined,0,9
412,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the contract of EntityTuplizer.determineConcreteSubclassEntityName says that returning null // is an indication that the specified entity-name (this.getEntityName) should be used.,no,undetermined,1,8
413,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// already been processed...,no,undetermined,0,9
414,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// NativeSQL: collect element column and auto-aliases,no,undetermined,0,9
415,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// For the case of dynamic-update=""false"", or no snapshot, we use the static SQL",no,undetermined,0,9
416,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Currently *not* cachable if autodiscover types is in effect (e.g. ""select * ..."")",no,undetermined,0,9
417,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//after setting values to object, entityMode",no,undetermined,0,9
418,hibernate-distribution-3.3.2.GA,DESIGN,// todo : throw exception?,yes,undetermined,9,0
419,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// get meta's from // <joined-subclass>,no,undetermined,0,9
420,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//we never need to apply locks to the SQL,no,undetermined,0,9
421,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// classic parser does not support bulk manipulation statements,no,undetermined,0,9
422,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if it is an uninitialized proxy, pointing //with this session, then when it is accessed, //the underlying instance will be ""contained""",no,undetermined,0,9
423,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we do not have to worry about queued additions to uninitialized // collections, since they can only occur for inverse collections!",no,undetermined,0,9
424,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the Interceptor handled the dirty checking,no,undetermined,0,9
425,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//for arrays, replaceElements() may return a different reference, since //the array length might not match",no,undetermined,0,9
426,hibernate-distribution-3.3.2.GA,DESIGN,// todo : is there really any reason to kkeep trying if this fails once?,yes,undetermined,7,2
427,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//tokens that close a sub expression //tokens that open a sub expression //tokens that would indicate a sub expression is a boolean expression,no,undetermined,0,9
428,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//not really necessary, I guess...",no,undetermined,0,9
429,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// select clauses for insert statements should alwasy be treated as shallow,no,undetermined,0,9
430,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if it is a formula index, use the element columns in the PK",no,undetermined,0,9
431,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if the metadata allowed proxy creation and caller did not request forceful eager loading, // generate a proxy",no,undetermined,0,9
432,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: move to .sql package!!,yes,undetermined,8,1
433,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//note early exit here:,no,undetermined,0,9
434,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Force a substitution!,no,undetermined,0,9
435,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// (NOT (GT a b) ) => (LE a b),no,undetermined,2,7
436,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//},no,undetermined,0,9
437,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// revert to traditional hibernate behavior of setting initialPoolSize to minPoolSize // unless otherwise specified with a c3p0.*-style parameter.,no,undetermined,0,9
438,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // Post-flushing section // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
439,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// here assume SQLServer2005 using snapshot isolation, which does not have this problem",no,undetermined,0,9
440,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// For many-to-many joins, use the tablename from the queryable collection for the default text.",no,undetermined,0,9
441,hibernate-distribution-3.3.2.GA,DESIGN,// todo : we can remove this once the deprecated ctor can be made private...,yes,undetermined,8,1
442,hibernate-distribution-3.3.2.GA,DESIGN,// try block is a hack around fact that currently tuplizers are not // given the opportunity to resolve a subclass entity name.  this // allows the (we assume custom) interceptor the ability to // influence this decision if we were not able to based on the // given entityName,yes,undetermined,7,2
443,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the difficulty here is exactly what do we update in order to // force the version to be incremented in the db...,no,undetermined,0,9
444,hibernate-distribution-3.3.2.GA,DESIGN,// xmlforest requires a new kind of function constructor,yes,undetermined,0,9
445,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//update last non-whitespace token, if necessary",no,undetermined,0,9
446,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// conceivable that the dialect ctor could throw HibernateExceptions, so don't re-wrap",no,undetermined,1,8
447,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// return false here, as most databases do not properly support this construct...",no,undetermined,0,9
448,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//re-snapshot,no,undetermined,0,9
449,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// new // BulkAccessorException,no,undetermined,0,9
450,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*package*/,no,undetermined,0,9
451,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// potentialTrimCharacterArgIndex = 1 assumes that a // trim-specification has been specified.  we handle the // exception to that explicitly,no,undetermined,0,9
452,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Search for collections by reachability, updating their role. // We don't want to touch collections reachable from a deleted object",no,undetermined,0,9
453,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// so we ""clock over"" on the first invocation",no,undetermined,0,9
454,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// double,no,undetermined,0,9
455,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// create a new collection wrapper, to be initialized later",no,undetermined,0,9
456,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// collections detect changes made via their public interface and mark // themselves as dirty as a performance optimization,no,undetermined,0,9
457,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Does the LIMIT clause come at the start of the SELECT statement, rather than at the end?",no,undetermined,0,9
458,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If the workspace node has null as well, OK; if not we've // been modified in a non-comparable manner, which we have to // treat as us being newer",no,undetermined,1,8
459,hibernate-distribution-3.3.2.GA,DEFECT,// This doesn't actually seem to work but it *might* // work on some dbs. Also it doesn't work if there // are multiple columns of results because it // is not accounting for the suffix: // return new String[] { getDiscriminatorColumnName() };,yes,undetermined,1,8
460,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//getDefaultProperties().setProperty(Environment.STATEMENT_BATCH_SIZE, NO_BATCH);",no,undetermined,0,9
461,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// no-op; CCS did not have such a concept,no,undetermined,0,9
462,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// local cache, so we use synchronization",no,undetermined,1,8
463,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// now, any collections that are initialized // inside this block do not get updated - they // are ignored until the next flush",no,undetermined,0,9
464,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//named query parameter,no,undetermined,0,9
465,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// index of current iterator in the wrapped iterators array,no,undetermined,0,9
466,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//instanceof AssociationType;,no,undetermined,0,9
467,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// handle the (assumed) valid cases: // #1 - the only valid datetime addition synatx is one or the other is a datetime (but not both),no,undetermined,1,8
468,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//we ran out of keys to try,no,undetermined,0,9
469,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this is the exception returned by ReflectHelper.getConstructor() if it cannot // locate an appropriate constructor,no,undetermined,0,9
470,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//starts with 1, implicitly",no,undetermined,1,8
471,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Do nothing; subclasses may override.,no,undetermined,1,8
472,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The current alias is referencing the collection to be eagerly fetched,no,undetermined,0,9
473,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// saves / updates don't cascade to uninitialized collections,no,undetermined,0,9
474,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*rootTableName = persistentClass.getRootTable().getQualifiedName( 
				factory.getDialect(), 
				factory.getDefaultCatalog(), 
				factory.getDefaultSchema() 
		);*/",no,undetermined,0,9
475,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the object is transient or detached,no,undetermined,0,9
476,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//cant instantiate,no,undetermined,0,9
477,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Make 100% certain that this is called before any subsequent ScheduledUpdate.afterTransactionCompletion()!!,no,undetermined,0,9
478,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// this is either a <version/> tag with no type attribute, // or a <timestamp/> tag",no,undetermined,0,9
479,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// identifier-commalist,no,undetermined,0,9
480,hibernate-distribution-3.3.2.GA,DESIGN,"// some messy, complex stuff here, since createCriteria() can take an // aliased path, or a path rooted at the creating criteria instance",yes,undetermined,0,9
481,hibernate-distribution-3.3.2.GA,DESIGN,// todo : what else to do here?,yes,undetermined,8,1
482,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// check nullability but do not perform command execute // we'll use scheduled updates for that.,no,undetermined,1,8
483,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the cache of the actual plans...,no,undetermined,0,9
484,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: move to .sql package, and refactor with similar things!",yes,undetermined,8,1
485,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/* will check current level if some of them are not null
		 * or sublevels if they exist
		 */",no,undetermined,0,9
486,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// would need an IdentitySet for this!,no,undetermined,0,9
487,hibernate-distribution-3.3.2.GA,DEFECT,// TODO: what if batchUpdate is a callablestatement ? // calls executeBatch(),yes,undetermined,9,0
488,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// table=null -> an association - fill // it in later //TODO fill in the mappings for table == null,yes,undetermined,8,1
489,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// look for existing collection as part of the persistence context,no,undetermined,0,9
490,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// SEQUENCE support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
491,hibernate-distribution-3.3.2.GA,DESIGN,"/**
     * FIXME Per the RegionFactory class Javadoc, this constructor version
     * should not be necessary.
     * 
     * @param props The configuration properties
     */",yes,undetermined,7,2
492,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//write(); -- doesn't,no,undetermined,0,9
493,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// List OPERATIONS:,no,undetermined,0,9
494,hibernate-distribution-3.3.2.GA,DESIGN,//I suppose?,yes,undetermined,0,9
495,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// function templates,no,undetermined,0,9
496,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// invokespecial,no,undetermined,0,9
497,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// This uses a PathExpressionParser but notice that compound paths are not valid, // only bare names and simple paths:",no,undetermined,0,9
498,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if no array holder we found an unwrappered array (this can't occur, // because we now always call wrap() before getting to here) // return (ah==null) ? true : searchForDirtyCollections(ah, type);",no,undetermined,0,9
499,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// GUID support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
500,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//process a token, mapping OO path expressions to SQL expressions",no,undetermined,0,9
501,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//search for it //note that this code is incorrect for other than one-to-many,no,undetermined,0,9
502,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_0,no,undetermined,0,9
503,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Try to find out the name of the primary key to create it as identity if the IdentityGenerator is used,no,undetermined,0,9
504,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// index should be last column listed,no,undetermined,0,9
505,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//INITIALIZATION:,no,undetermined,0,9
506,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// position cursor to the last row,no,undetermined,0,9
507,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//many-to-many,no,undetermined,0,9
508,hibernate-distribution-3.3.2.GA,DESIGN,// todo : remove,yes,undetermined,7,2
509,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// just do the regular thing if you can't find the ctor // Your AST must have default ctor to use this.,no,undetermined,0,9
510,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//$NON-NLS-1,no,undetermined,0,9
511,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// determine if the collection elements are entities...,no,undetermined,0,9
512,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Update the status of the object and if necessary, schedule an update",no,undetermined,0,9
513,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// nothing to do,no,undetermined,0,9
514,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//Cope with special cases of AND, NOT, )",no,undetermined,0,9
515,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Make sure JBC doesn't look one up,no,undetermined,0,9
516,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// We have the JBCWriteMutex, so no other *local* thread will  // be trying to write this key.  // It's possible here some remote thread has come in and // changed the values again, but since we are reading the // values to write to JBC right now, we know we are writing // the latest values; i.e. we don't assume that what we cached // in entry.update() above is what we should write to JBC *now*. // Our write could be redundant, i.e. we are writing what // some remote thread just came in an wrote.  There is a chance  // that yet another remote thread will update us, and we'll then // overwrite that later data in JBC.  But, all remote nodes will // ignore that change in their localCache; the only place it  // will live will be in JBC, where it can only effect the  // initial state transfer values on newly joined nodes  // (i.e. populateLocalCache()).",no,undetermined,1,8
517,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// NOTE : ( max - 1 ) because first is zero-based while max is not...,no,undetermined,0,9
518,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Compare the two maps for equality,no,undetermined,0,9
519,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// transactions marked for rollback-only cause some TM impls to throw exceptions,no,undetermined,0,9
520,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we *always* assume an instance with a null // identifier or no identifier property is unsaved!,no,undetermined,0,9
521,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Render the SQL query,no,undetermined,0,9
522,hibernate-distribution-3.3.2.GA,DESIGN,// FIXME Hacky workaround to JBCACHE-1202,yes,undetermined,8,1
523,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: proxies!,yes,undetermined,6,3
524,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//do nothing,no,undetermined,0,9
525,hibernate-distribution-3.3.2.GA,DESIGN,// todo: this might really even be moved into the cfg package and used as the basis for all things which are configurable.,yes,undetermined,8,1
526,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Loaded entity instances, by EntityKey",no,undetermined,0,9
527,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// BATCH SIZE,no,undetermined,0,9
528,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// A collection of scalar elements...,no,undetermined,0,9
529,hibernate-distribution-3.3.2.GA,DESIGN,//is this ok?,yes,undetermined,0,9
530,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//it does not refer to an alias of a projection, //look for a property",no,undetermined,0,9
531,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// VERSION / TIMESTAMP,no,undetermined,0,9
532,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// instantiate a new instance,no,undetermined,0,9
533,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// The FROM fragment will probably begin with ', '.  Remove this if it is present.",no,undetermined,0,9
534,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// SQL Server (at least up through 2005) does not support defining // cascade delete constraints which can circel back to the mutating // table,no,undetermined,0,9
535,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// note: performExecutions() clears all collectionXxxxtion  // collections (the collection actions) in the session,no,undetermined,0,9
536,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// continue loop,no,undetermined,0,9
537,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//return memberPersister.toColumns(alias, propertyName);",no,undetermined,0,9
538,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// not array,no,undetermined,1,8
539,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/**
	 * Translates an AST join type (i.e., the token type) into a JoinFragment.XXX join type.
	 *
	 * @param astJoinType The AST join type (from HqlSqlTokenTypes or SqlTokenTypes)
	 * @return a JoinFragment.XXX join type.
	 * @see JoinFragment
	 * @see SqlTokenTypes
	 */",no,undetermined,3,6
540,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//the criteria instance,no,undetermined,0,9
541,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/**
	 * Set a custom entity resolver. This entity resolver must be
	 * set before addXXX(misc) call.
	 * Default value is {@link org.hibernate.util.DTDEntityResolver}
	 *
	 * @param entityResolver entity resolver to use
	 */",no,undetermined,0,9
542,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"//TODO: eventually put this back in, once we think all is fixed //Object otherAlias = columnsUnique.put(qualifiedColumn, columnAlias);",yes,undetermined,8,1
543,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//disassembled state gets put in a new array (we write to cache by value!),no,undetermined,0,9
544,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//test this entity to see if we must query it,no,undetermined,0,9
545,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the next one up must also be,no,undetermined,0,9
546,hibernate-distribution-3.3.2.GA,DEFECT,"// The preference here would be //   SQLFunctionTemplate( Hibernate.TIMESTAMP, ""current_timestamp(?1)"", false) // but this appears not to work. // Jay Nance 2006-09-22",yes,undetermined,0,9
547,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this is used during SqlGenerator processing,no,undetermined,0,9
548,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is tuplizer-centric, but is passed a session ~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",no,undetermined,0,9
549,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// assume we are in an auto-commit state,no,undetermined,0,9
550,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//keep the behavior consistent even for boundary usages,no,undetermined,0,9
551,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if there is no resulting row, return null",no,undetermined,0,9
552,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// nothing to do; even if the operand is a parameter, no way we could // infer an appropriate expected type here",no,undetermined,1,8
553,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// try ""get""",no,undetermined,0,9
554,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//TODO!!!,no,undetermined,4,5
555,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//now we might need to recalculate the dirtyProperties array,no,undetermined,0,9
556,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Get ready to start adding nodes.,no,undetermined,0,9
557,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// switch,no,undetermined,0,9
558,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Don't need to lock the cache here, since if someone // else inserted the same pk first, the insert would fail",no,undetermined,1,8
559,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// should be safe to only ever expect EntityPersister references here,no,undetermined,0,9
560,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//update all the modified entries,no,undetermined,0,9
561,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//$NON-NLS-1,no,undetermined,0,9
562,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		origin.addDestination( destination ); // This was the cause of HHH-242 //		origin.setType( FROM_FRAGMENT );			// Set the parent node type so that the AST is properly formed. // The destination node will have all the FROM text. // The parent node is a collection join too (voodoo - see JoinProcessor),no,undetermined,0,9
563,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//don't need filters for the static loaders,no,undetermined,0,9
564,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// used to set the type of the parent dot node,no,undetermined,0,9
565,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// for each of the defined parameters, make sure its value // has been set",no,undetermined,0,9
566,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// deletes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
567,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Get the names of the columns used to link between the collection // owner and the collection elements.,no,undetermined,0,9
568,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the last used iterator,no,undetermined,1,8
569,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// below is for Cache' that don't have str in 2007.1 there is str and we register str directly,no,undetermined,0,9
570,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Make sure JBC doesn't look one up,no,undetermined,0,9
571,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// properties,no,undetermined,0,9
572,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// the entry will be removed after the flush, and will no longer // override the stale snapshot // This is now handled by removeEntity() in EntityDeleteAction //persistenceContext.removeDatabaseSnapshot(key);",no,undetermined,0,9
573,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// nothing to do,no,undetermined,0,9
574,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: check that entry.getIdentifier().equals(requestedId),yes,undetermined,9,0
575,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: should this be Session.instantiate(Persister, ...)?",yes,undetermined,9,0
576,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// process the ""new"" HQL style where aliases are assigned // _after_ the class name or path expression ie. using // the AS construction",no,undetermined,0,9
577,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/* This can never happen because this rule will always eliminate the child NOT.
			case NOT:
				return x.getFirstChild();			// (NOT (NOT x) ) => (x)
*/",no,undetermined,3,6
578,hibernate-distribution-3.3.2.GA,DESIGN,"// at some point the generate phase needs to be moved out of here, // because a single object-level DML might spawn multiple SQL DML // command executions. // // Possible to just move the sql generation for dml stuff, but for // consistency-sake probably best to just move responsiblity for // the generation phase completely into the delegates // (QueryLoader/StatementExecutor) themselves.  Also, not sure why // QueryLoader currently even has a dependency on this at all; does // it need it?  Ideally like to see the walker itself given to the delegates directly...",yes,undetermined,3,6
579,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Otherwise, the destination node was implied by the FROM clause and the FROM clause processor // will automatically add it in the right place.",no,undetermined,0,9
580,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//addInitializedCollection(collection, persister, id);",no,undetermined,0,9
581,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// find any entities that are still transient after retry,no,undetermined,0,9
582,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if the current depth is 0, the root thing being loaded is the // many-to-many collection itself.  Here, it is alright to use // an inner join...",no,undetermined,0,9
583,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// do a check,no,undetermined,0,9
584,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//not null is implicit,no,undetermined,1,8
585,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//only really need new array during semiresolve!,no,undetermined,0,9
586,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: move into collection type, so we can use polymorphism!",yes,undetermined,8,1
587,hibernate-distribution-3.3.2.GA,DESIGN,//FIXME: get the PersistentClass,yes,undetermined,6,3
588,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//the load() which takes an entity does not pass an entityName,no,undetermined,0,9
589,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Custom sql,no,undetermined,0,9
590,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// return aliases not supported in classic translator!,no,undetermined,0,9
591,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// by default just use an unanticipated capacity since we don't // know how to extract the capacity to use from original here...,no,undetermined,1,8
592,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//register collection role,no,undetermined,0,9
593,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
594,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// For the case of dynamic-insert=""false"", use the static SQL",no,undetermined,0,9
595,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// remove initial "", """,no,undetermined,0,9
596,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//ie. the entity came in from update(),no,undetermined,0,9
597,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// toggle autoCommit to false if set,no,undetermined,0,9
598,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// return existing object or initialized proxy (unless deleted),no,undetermined,0,9
599,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// at the very least cleanup the data :),no,undetermined,1,8
600,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// HHH-2481 make sure the callback gets cleared, otherwise the instance stays in a static thread local.",no,undetermined,1,8
601,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//NONE, because its the requested lock mode, not the actual! ",no,undetermined,0,9
602,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Possibly handle :something parameters for the query ?,no,undetermined,0,9
603,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO mappings.getLogicalTableName(ownerTable),yes,undetermined,6,3
604,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// For an explicit many-to-many relationship, add a second join from the intermediate  // (many-to-many) table to the destination table.  Also, make sure that the from element's  // idea of the destination is the destination table.",no,undetermined,0,9
605,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Oracle driver reports to support getGeneratedKeys(), but they only // support the version taking an array of the names of the columns to // be returned (via its RETURNING clause).  No other driver seems to // support this overloaded version.",no,undetermined,1,8
606,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//do the failfast put outside the scope of the JTA txn,no,undetermined,0,9
607,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// boolean,no,undetermined,0,9
608,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// try to ""pretty print"" it",no,undetermined,0,9
609,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// TABLE,no,undetermined,0,9
610,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// We need to generate ids as part of this bulk insert. // // Note that this is only supported for sequence-style generators and // post-insert-style generators; basically, only in-db generators",no,undetermined,1,8
611,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//private static final Alias DEFAULT_ALIAS = new Alias(10, null);",no,undetermined,0,9
612,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// table-specific parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
613,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// just decrement the lock, don't recache // (we don't know which transaction won)",no,undetermined,0,9
614,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: better to pass the id in as an argument?,yes,undetermined,7,2
615,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if // if // Otherwise, handle the error normally.",no,undetermined,1,8
616,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*&& !indexIsFormula*/,no,undetermined,0,9
617,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// iconst_i,no,undetermined,0,9
618,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//final boolean forceCacheRefresh,",no,undetermined,1,8
619,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if not a composite key, use ""foo in (?, ?, ?)"" for batching // if no batch, and not a composite key, use ""foo = ?""",no,undetermined,0,9
620,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this is an internal error of some sort...,no,undetermined,0,9
621,hibernate-distribution-3.3.2.GA,DESIGN,// todo : we can remove this once the deprecated ctor can be made private...,yes,undetermined,8,1
622,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// set the Transaction Isolation if defined,no,undetermined,0,9
623,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// includes last '.',no,undetermined,0,9
624,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ROW ID,no,undetermined,0,9
625,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we are now at a new tree level,no,undetermined,0,9
626,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: would be nice to handle proxy classes elegantly!,yes,undetermined,7,2
627,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if we know there is exactly 1 row, we can skip. // it would be great if we could _always_ skip this; // it is a problem for <key-many-to-one>",no,undetermined,1,8
628,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// KEY,no,undetermined,0,9
629,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// sql server just returns automatically,no,undetermined,0,9
630,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//	public ComponentMetamodel(Component component, SessionFactoryImplementor sessionFactory) {",no,undetermined,0,9
631,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// wrap the session in the transaction-protection proxy,no,undetermined,0,9
632,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// does not handle arrays (thats ok, cos they can't be lazy) // or newly instantiated collections, so we can do the cast",no,undetermined,0,9
633,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// else this is not a collection initializer (and empty collections will // be detected by looking for the owner's identifier in the result set),no,undetermined,0,9
634,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// right represents a joins originating from left...,no,undetermined,0,9
635,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// will still be issued when it used to be null,no,undetermined,0,9
636,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If there are no collection fetches, then no further checks are needed",no,undetermined,0,9
637,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Create an DotNode AST for the path and resolve it.,no,undetermined,0,9
638,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// note: interface is assumed to already contain HibernateProxy.class,no,undetermined,0,9
639,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//needed for SOAP libraries, etc",no,undetermined,1,8
640,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: this is temporary in that the end result will probably not take a Property reference per-se.,yes,undetermined,7,2
641,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// do nothing...,no,undetermined,0,9
642,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: handle property-ref,yes,undetermined,9,0
643,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//crossJoins.add(name);,no,undetermined,0,9
644,hibernate-distribution-3.3.2.GA,DEFECT,"// This does not support the Cache SQL 'DISTINCT BY (comma-list)' extensions, // but this extension is not supported through Hibernate anyway.",yes,undetermined,0,9
645,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Use the token as an identifier.,no,undetermined,0,9
646,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO: should ""record"" how many properties we have reffered to - and if we  //       don't get'em'all we throw an exception! Way better than trial and error ;)",yes,undetermined,9,0
647,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ALIASES,no,undetermined,0,9
648,hibernate-distribution-3.3.2.GA,DEFECT,// TODO: figure out how this should be set. /////////////////////////////////////////////////////////////////////////////// // This was the reason for failures regarding INDEX_OP and subclass joins on // theta-join dialects; not sure what behaviour we were trying to emulate ;) //		joinSequence = joinSequence.getFromPart();	// Emulate the old addFromOnly behavior.,yes,undetermined,9,0
649,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// properties generated on update can never be updateable...,no,undetermined,0,9
650,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// return,no,undetermined,0,9
651,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//EARLY EXIT!,no,undetermined,0,9
652,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// set last used iterator here, in case the user calls remove // before calling hasNext() or next() (although they shouldn't)",no,undetermined,1,8
653,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Sybase BIT type does not support null values,no,undetermined,0,9
654,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// should be the first, but just to be safe...",no,undetermined,0,9
655,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Tag this node as a JOIN. // Don't include subclasses in the join. // This is a clollection join.,no,undetermined,0,9
656,hibernate-distribution-3.3.2.GA,DESIGN,"// todo : should this get moved to PersistentContext? // logically, is PersistentContext the ""thing"" to which an interceptor gets attached?",yes,undetermined,9,0
657,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//return classAlias == null ? className : classAlias;,no,undetermined,0,9
658,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// SELECT BEFORE UPDATE,no,undetermined,0,9
659,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// do not do anything,no,undetermined,0,9
660,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// let this take precedence if defined, since it works for // assigned identifiers",no,undetermined,0,9
661,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Generated select expressions are already resolved, nothing to do.",no,undetermined,1,8
662,hibernate-distribution-3.3.2.GA,DEFECT,"/*
		  * Algorithm
		  * Check for any level one nullability breaks
		  * Look at non null components to
		  *   recursively check next level of nullability breaks
		  * Look at Collections contraining component to
		  *   recursively check next level of nullability breaks
		  *
		  *
		  * In the previous implementation, not-null stuffs where checked
		  * filtering by level one only updateable
		  * or insertable columns. So setting a sub component as update=""false""
		  * has no effect on not-null check if the main component had good checkeability
		  * In this implementation, we keep this feature.
		  * However, I never see any documentation mentioning that, but it's for
		  * sure a limitation.
		  */",yes,undetermined,1,8
663,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: optimize this better!,yes,undetermined,8,1
664,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"//TODO: add referencedClass to disambiguate to FKs on the same //      columns, pointing to different tables",yes,undetermined,8,1
665,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// IdentifierGenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
666,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: we should provide some way to get keys of collection of statistics to make it easier to retrieve from a GUI perspective,yes,undetermined,8,1
667,hibernate-distribution-3.3.2.GA,DOCUMENTATION,//TODO find a decent name before documenting,yes,undetermined,9,0
668,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// We represent a from-clause alias,no,undetermined,0,9
669,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If there is a FROM fragment and the FROM element is an explicit, then add the from part.",no,undetermined,0,9
670,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: this dependency is kinda Bad,yes,undetermined,8,1
671,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// since this entity will now be processed in the latest possible batch, // we can be assured that it will come after all other associations, // there's not need to continue checking.",no,undetermined,0,9
672,hibernate-distribution-3.3.2.GA,DESIGN,//use of a stringbuffer to workaround a JDK bug,yes,undetermined,9,0
673,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// can't cache this stuff either (per-invocation),no,undetermined,0,9
674,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
675,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	protected List extendsQueue;,no,undetermined,0,9
676,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//expressionOpeners.add("",""); // deliberately excluded",no,undetermined,0,9
677,hibernate-distribution-3.3.2.GA,DEFECT,"/*
         * The following types are not supported in RDMS/JDBC and therefore commented out.
         * However, in some cases, mapping them to CHARACTER columns works
         * for many applications, but does not work for all cases.
         */",yes,undetermined,0,9
678,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//reset the dotcount (but not the path) //after reset!,no,undetermined,0,9
679,hibernate-distribution-3.3.2.GA,DESIGN,// TODO Why not use the timestamp in a DataVersion?,yes,undetermined,8,1
680,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Need to use the identifier type of the collection owner // since the incoming is value is actually the owner's id. // Using the collection's key type causes problems with // property-ref keys...,no,undetermined,1,8
681,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this is a virtual id property...,no,undetermined,0,9
682,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// here, we work under the following assumptions: //      ------------ valid cases -------------------------------------- //      1) datetime + {something other than datetime} : always results //              in a datetime ( db will catch invalid conversions ) //      2) datetime - datetime : always results in a DOUBLE //      3) datetime - {something other than datetime} : always results //              in a datetime ( db will catch invalid conversions ) //      ------------ invalid cases ------------------------------------ //      4) datetime + datetime //      5) {something other than datetime} - datetime //      6) datetime * {any type} //      7) datetime / {any type} //      8) {any type} / datetime // doing so allows us to properly handle parameters as either the left // or right side here in the majority of cases",no,undetermined,0,9
683,hibernate-distribution-3.3.2.GA,DESIGN,"// todo : currently expects that the individual with expressions apply to the same sql table join. //      This may not be the case for joined-subclass where the property values //      might be coming from different tables in the joined hierarchy.  At some //      point we should expand this to support that capability.  However, that has //      some difficulties: //          1) the biggest is how to handle ORs when the individual comparisons are //              linked to different sql joins. //          2) here we would need to track each comparison individually, along with //              the join alias to which it applies and then pass that information //              back to the FromElement so it can pass it along to the JoinSequence",yes,undetermined,8,1
684,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//unsupported,no,undetermined,0,9
685,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: this is a bit arbitrary, expose a switch to the user?",yes,undetermined,8,1
686,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// invokeinterface,no,undetermined,0,9
687,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// set the name of bulk accessor.,no,undetermined,0,9
688,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This is an explicit FROM element.,no,undetermined,0,9
689,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// (AS is always optional, for consistency with SQL/OQL)",no,undetermined,0,9
690,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The 'from element' that the property is in.,no,undetermined,0,9
691,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aliases for identifier ( alias.id ); skip if the entity defines a non-id property named 'id',no,undetermined,0,9
692,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// let the persister inspect the instance to decide,no,undetermined,0,9
693,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//			Iterator iterator = extendsQueue.iterator();,no,undetermined,0,9
694,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// return a newly loaded object,no,undetermined,0,9
695,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Find or create the WHERE clause,no,undetermined,0,9
696,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//important!!,no,undetermined,0,9
697,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Initialize SQL nodes here.,no,undetermined,0,9
698,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// KEY,no,undetermined,0,9
699,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//			paramTranslations = new ParameterTranslationsImpl( collectedParameterSpecifications );,no,undetermined,0,9
700,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// for a subquery, the alias to use depends on a few things (we // already know this is not an overall SELECT): //      1) if this FROM_ELEMENT represents a correlation to the //          outer-most query //              A) if the outer query represents a multi-table //                  persister, we need to use the given alias //                  in anticipation of one of the multi-table //                  executors being used (as this subquery will //                  actually be used in the ""id select"" phase //                  of that multi-table executor) //              B) otherwise, we need to use the persister's //                  table name as the column qualification //      2) otherwise (not correlated), use the given alias",no,undetermined,0,9
701,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// moved up from AbstractEntityPersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,1,8
702,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//anything else,no,undetermined,0,9
703,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//,no,undetermined,0,9
704,hibernate-distribution-3.3.2.GA,DESIGN,// Not possible to simply re-use the versionPropertyNode here as it causes // OOM errors due to circularity :(,yes,undetermined,1,8
705,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Constructors are always considered scalar results.,no,undetermined,0,9
706,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// create the node initially with the param name so that it shows // appropriately in the ""original text"" attribute",no,undetermined,0,9
707,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// add the current fragment to the THETA_JOINS node,no,undetermined,0,9
708,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Append the stem to the proxool pool alias,no,undetermined,0,9
709,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this method is called when a new non-null collection is persisted // or when an existing (non-null) collection is moved to a new owner,no,undetermined,0,9
710,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// legacy behavior, apply the bridge...",no,undetermined,0,9
711,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// array of primitive type // do nothing,no,undetermined,0,9
712,hibernate-distribution-3.3.2.GA,DESIGN,// todo : YUCK!!!,yes,undetermined,6,3
713,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// DYNAMIC INSERT,no,undetermined,0,9
714,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : YUCK!!!  fix after HHH-1907 is complete,yes,undetermined,9,0
715,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//delete all the deleted entries,no,undetermined,0,9
716,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// This is not actually a constant, but a reference to FROM element.",no,undetermined,0,9
717,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// no existing row - do an insert,no,undetermined,0,9
718,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//pass this as an argument only to avoid double looking,no,undetermined,1,8
719,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// the configured transaction-factory says it only supports // local callback mode, so no sense attempting to register a // JTA Synchronization",no,undetermined,0,9
720,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Make sure that the persister is versioned,no,undetermined,0,9
721,hibernate-distribution-3.3.2.GA,DEFECT,// starts with an alias (old style) // semi-bad thing about this: can't re-alias another alias.....,yes,undetermined,0,9
722,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// strip the "" where """,no,undetermined,0,9
723,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If we want to handle it bidirectional and detached, we also need to load this // collection with an eager outer-join fetch, this time with Criteria and not HQL:",no,undetermined,0,9
724,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ROLENAME,no,undetermined,0,9
725,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//return the id, so we can use it to reset the proxy id //return result;",no,undetermined,0,9
726,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Custom sql,no,undetermined,0,9
727,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// getfield // get each field,no,undetermined,0,9
728,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// this is a collection initializer, so we must create a collection // for each of the passed-in keys, to account for the possibility // that the collection is empty and has no rows in the result set",no,undetermined,0,9
729,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//EARLY EXIT!,no,undetermined,0,9
730,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Do nothing; subclasses may override.,no,undetermined,1,8
731,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// skip this check for composite-ids relating to dom4j entity-mode; // alternatively, we could add a check to make sure the incoming id value is // an instance of Element...",no,undetermined,1,8
732,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Moved here from SelectClause [jsd],no,undetermined,1,8
733,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// handles arrays and newly instantiated collections,no,undetermined,1,8
734,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//scan the query string for class names appearing in the from clause and replace //with all persistent implementors of the class/interface, returning multiple //query strings (make sure we don't pick up a class in the select clause!)",no,undetermined,0,9
735,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// the key is the owning entity itself, so get the ID from the key",no,undetermined,0,9
736,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//do the test,no,undetermined,0,9
737,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// astore_3 // store bean,no,undetermined,0,9
738,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// register a cleanup synch,no,undetermined,1,8
739,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// inserts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
740,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//abort the save (the object is already saved by a circular cascade),no,undetermined,0,9
741,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Custom SQL,no,undetermined,0,9
742,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Downgrade locks,no,undetermined,0,9
743,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// HELLA IMPORTANT OPTIMIZATION!!!,no,undetermined,0,9
744,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// ignore this row, the collection is in process of // being loaded somewhere further ""up"" the stack",no,undetermined,0,9
745,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//log.debug( ""calling onLoad()"" );",no,undetermined,0,9
746,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// prepend value and type list with null for any positions before the wanted position.,no,undetermined,0,9
747,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// just ignore it for now, it'll get resolved later...",no,undetermined,1,8
748,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ConnectionManager.Callback implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
749,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
750,hibernate-distribution-3.3.2.GA,DESIGN,//swaldman 2004-02-07: modify to allow null values to signify fall through to c3p0 PoolConfig defaults,yes,undetermined,0,9
751,hibernate-distribution-3.3.2.GA,DESIGN,// orphans should not be deleted during copy??,yes,undetermined,0,9
752,hibernate-distribution-3.3.2.GA,DESIGN,//Yuck:,yes,undetermined,2,7
753,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// do nothing until we hit the rsult set containing the generated id,no,undetermined,1,8
754,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// do the put outside the scope of the JTA txn,no,undetermined,0,9
755,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//overriden to avoid System.exit,no,undetermined,0,9
756,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//doable if needed,no,undetermined,2,7
757,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//optimization //optimization,no,undetermined,0,9
758,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// loop through all the associated entities and make sure they have been // processed before the latest // batch associated with this entity type.,no,undetermined,0,9
759,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//TRANSIENT or DELETED,no,undetermined,0,9
760,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If close() is called, guarantee unbind()",no,undetermined,0,9
761,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// PersistentIdentifierGenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
762,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Set up the cache factory,no,undetermined,0,9
763,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Multi-param date dialect functions...,no,undetermined,0,9
764,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// allow the CollectionSnapshot to be serialized,no,undetermined,0,9
765,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// if its an uninitialized proxy it can't be transient,no,undetermined,0,9
766,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Need to use the identifier type of the collection owner // since the incoming is value is actually the owner's id. // Using the collection's key type causes problems with // property-ref keys...,no,undetermined,1,8
767,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we just hit the last position,no,undetermined,1,8
768,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// warning: can cause a recursive calls! (proxy initialization),no,undetermined,0,9
769,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//keep the existing version number in the case of replicate!,no,undetermined,0,9
770,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// else no collection element, but also no owner",no,undetermined,0,9
771,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//information about all columns/formulas in class hierarchy,no,undetermined,0,9
772,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//NOTE: early return,no,undetermined,0,9
773,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Since this is an explicit FROM element, it can't be implied in the FROM clause.",no,undetermined,0,9
774,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// not known!,no,undetermined,1,8
775,hibernate-distribution-3.3.2.GA,DEFECT,"// three general cases we check here as to whether to render a physical SQL join: // 1) is our parent a DotNode as well?  If so, our property reference is // 		being further de-referenced... // 2) is this a DML statement // 3) we were asked to generate any needed joins (generateJoins==true) *OR* //		we are currently processing a select or from clause // (an additional check is the REGRESSION_STYLE_JOIN_SUPPRESSION check solely intended for the test suite) // // The REGRESSION_STYLE_JOIN_SUPPRESSION is an additional check // intended solely for use within the test suite.  This forces the // implicit join resolution to behave more like the classic parser. // The underlying issue is that classic translator is simply wrong // about its decisions on whether or not to render an implicit join // into a physical SQL join in a lot of cases.  The piece it generally // tends to miss is that INNER joins effect the results by further // restricting the data set!  A particular manifestation of this is // the fact that the classic translator will skip the physical join // for ToOne implicit joins *if the query is shallow*; the result // being that Query.list() and Query.iterate() could return // different number of results!",yes,undetermined,0,9
776,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_0,no,undetermined,0,9
777,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// can't just return null here, since that would // cause an owning component to become null",no,undetermined,0,9
778,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//map second/minute/hour/day/month/year to ANSI extract(), override on subclasses",no,undetermined,0,9
779,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//use the id passed in,no,undetermined,0,9
780,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Next, try to locate this resource through the system classloader",no,undetermined,1,8
781,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: handle the case of a foreign key to something other than the pk,yes,undetermined,7,2
782,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//no point doing this if NONE was requested,no,undetermined,0,9
783,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// new collections that get found + wrapped // during flush shouldn't be ignored,no,undetermined,0,9
784,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//columns.add(columnName); //aliases.add(tableAlias);,no,undetermined,0,9
785,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we really could refresh the item if it // is not a lock, but it might be slower //return freshTimestamp < txTimestamp",no,undetermined,0,9
786,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Begin unit of work,no,undetermined,0,9
787,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//			sqlAliasSuffixes[i] = element.getColumnAliasSuffix();,no,undetermined,0,9
788,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//this.forceCacheRefresh = forceCacheRefresh;,no,undetermined,0,9
789,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this is the regression style determination which matches the logic of the classic translator,no,undetermined,0,9
790,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the name of an SQL function,no,undetermined,0,9
791,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we have a mapped identifier property and the root of // the incoming property path matched that identifier // property,no,undetermined,0,9
792,hibernate-distribution-3.3.2.GA,DESIGN,//real hacky... // used to count the nesting of parentheses,yes,undetermined,0,9
793,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// SQLException support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
794,hibernate-distribution-3.3.2.GA,DESIGN,"// work around the ""feature"" where tree cache is validating the // inserted node during the next transaction. no idea...",yes,undetermined,2,7
795,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//the class discriminator value,no,undetermined,0,9
796,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// We must return a valid RDMS/RSA command from this method to // prevent RDMS/RSA from issuing *ERROR 400,no,undetermined,0,9
797,hibernate-distribution-3.3.2.GA,DEFECT,//TODO: currently broken for unique-key references (does not detect //      change to unique key property of the associated object) //the owner of the association is not the owner of the id,yes,undetermined,9,0
798,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// peek ahead,no,undetermined,0,9
799,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// nothing to do in a stateful session,no,undetermined,0,9
800,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		 You may still have other ResultSets or update counts left to process here //		 but you can't do it now or the ResultSet you just got will be closed,no,undetermined,1,8
801,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//always overwrite nonversioned data,no,undetermined,0,9
802,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The name of the SQL function that transforms a string to lowercase,no,undetermined,0,9
803,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we need to writeObject() on this since interceptor is user defined,no,undetermined,0,9
804,hibernate-distribution-3.3.2.GA,DESIGN,/////////////////////////////////////////////////////////////////////////// // USED ONLY FOR REGRESSION TESTING!!!! // // todo : obviously get rid of all this junk ;) ///////////////////////////////////////////////////////////////////////////,yes,undetermined,8,1
805,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// assume we are in an auto-commit state,no,undetermined,0,9
806,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we need to determine the best way to know that two joinables // represent a single many-to-many...,no,undetermined,2,7
807,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// return,no,undetermined,0,9
808,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// create one,no,undetermined,0,9
809,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: the i==entitySpan-1 bit depends upon subclass implementation (very bad),yes,undetermined,9,0
810,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// invokeinterface // invoke Callback.read*() // each type,no,undetermined,0,9
811,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//the owner of the association is not the owner of the id,no,undetermined,0,9
812,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// collections don't dirty an unversioned parent entity,no,undetermined,0,9
813,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// does this entity entry pertain to the entity persister in which we are interested (owner)?,no,undetermined,0,9
814,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//<String, String>",no,undetermined,0,9
815,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//end of array, start filling again from start",no,undetermined,0,9
816,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// NOTE: this assumes something about how propertySelectFragment is implemented by the subclass!,no,undetermined,1,8
817,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//do this work only at the very highest level of the load //don't let this method be called recursively,no,undetermined,0,9
818,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the current iterator,no,undetermined,0,9
819,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: move these to a new JoinableType abstract class, //extended by EntityType and PersistentCollectionType:",yes,undetermined,8,1
820,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// to support dialects that have their own identity data type,no,undetermined,0,9
821,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// double,no,undetermined,0,9
822,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Tell the destination fromElement to 'includeSubclasses'.,no,undetermined,0,9
823,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if not ""get"", then try ""is""",no,undetermined,0,9
824,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// while constructor is running,no,undetermined,0,9
825,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// features which change between 8i, 9i, and 10g ~~~~~~~~~~~~~~~~~~~~~~~~~~",no,undetermined,0,9
826,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the name of a class,no,undetermined,0,9
827,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_0,no,undetermined,0,9
828,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//EARLY EXIT,no,undetermined,0,9
829,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The standard comparator types are not Serializable but are singletons,no,undetermined,0,9
830,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//starts with 1, implicitly",no,undetermined,1,8
831,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO : not sure this is correct, could not find docs on how to do this.",yes,undetermined,9,0
832,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// return ;,no,undetermined,0,9
833,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// the loaded owner will be set to null after the collection is removed, // so capture its value as the affected owner so it is accessible to // both pre- and post- events",no,undetermined,1,8
834,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// A list of collection wrappers that were instantiating during result set // processing, that we will need to initialize at the end of the query",no,undetermined,0,9
835,hibernate-distribution-3.3.2.GA,DESIGN,//ugly little workaround for fact that createUniqueKeyLoaders() does not handle component properties,yes,undetermined,6,3
836,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Caches,no,undetermined,0,9
837,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// passing through anything we do not know : to support jdbc escape sequences HB-898,no,undetermined,0,9
838,hibernate-distribution-3.3.2.GA,DESIGN,// yick!  need this for proper serialization/deserialization handling...,yes,undetermined,1,8
839,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// do this when all the properties are updateable since there is // a certain likelihood that the information will already be // snapshot-cached.,no,undetermined,0,9
840,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//usually useless,no,undetermined,0,9
841,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// todo : look at optimizing these...,yes,undetermined,9,0
842,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ignore,no,undetermined,0,9
843,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// dirty check against the usual snapshot of the entity,no,undetermined,0,9
844,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If the join is implied, then don't include sub-classes on the element.",no,undetermined,0,9
845,hibernate-distribution-3.3.2.GA,DESIGN,"/**
	 * @return collection removal
	 * FIXME: even if isInverse=""true""?
	 */",yes,undetermined,6,3
846,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this page intentionally left blank :),no,undetermined,0,9
847,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// subclass discrimination works by assigning particular // values to certain combinations of null primary key // values in the outer join using an SQL CASE,no,undetermined,0,9
848,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: make EntityPersister *not* depend on SessionFactoryImplementor //interface, if possible",yes,undetermined,9,0
849,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/////////////////////////////////////////////////////////////////////// // Prepare persisters and link them up with their cache // region/access-strategy,no,undetermined,1,8
850,hibernate-distribution-3.3.2.GA,DESIGN,// TODO: something much better - look at the type of the other expression! // TODO: Have comparisonExpression and/or arithmeticExpression rules complete the resolution of boolean nodes.,yes,undetermined,8,1
851,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"//TODO: if we support multiple fetch groups, we would need //      to clone the set of lazy properties!",yes,undetermined,8,1
852,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The 'from element' that represents the elements of the collection.,no,undetermined,0,9
853,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Look up class name using the first identifier in the path.,no,undetermined,0,9
854,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if doc is null, then for whatever reason, the cached file cannot be used...",no,undetermined,0,9
855,hibernate-distribution-3.3.2.GA,DESIGN,// todo : eventually merge this with TreeCache and just add optional opt-lock support there.,yes,undetermined,8,1
856,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: check that entry.getIdentifier().equals(requestedId),yes,undetermined,9,0
857,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// an association,no,undetermined,0,9
858,hibernate-distribution-3.3.2.GA,DESIGN,// TODO: Replace this with a more elegant solution.,yes,undetermined,8,1
859,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// from SortedMap,no,undetermined,0,9
860,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Collection load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,1,8
861,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
862,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// get meta's from <class>,no,undetermined,0,9
863,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// don't even bother trying to read further,no,undetermined,0,9
864,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// astore 5 // store exception,no,undetermined,0,9
865,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// FieldHandler impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
866,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//checkForEnd = false;,no,undetermined,0,9
867,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we can go straight to the first required row,no,undetermined,0,9
868,hibernate-distribution-3.3.2.GA,DESIGN,//need to do that here rather than in the save event listener to let //the post insert events to have a id-filled entity when IDENTITY is used (EJB3),yes,undetermined,1,8
869,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is Tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
870,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: use these in methods above,yes,undetermined,8,1
871,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: ugly here:,yes,undetermined,8,1
872,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//null clientLock is remotely possible but will never happen in practice,no,undetermined,0,9
873,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Object insertions, updates, and deletions have list semantics because // they must happen in the right order so as to respect referential // integrity",no,undetermined,0,9
874,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if a composite key, use ""( (foo = ? and bar = ?) or (foo = ? and bar = ?) )"" for batching //TODO: unnecessary for databases with ANSI-style joins",no,undetermined,8,1
875,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if null, owner will be retrieved from session",no,undetermined,0,9
876,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//it might be an unwrapped collection reference! //try to find a wrapper (slowish),no,undetermined,0,9
877,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// state ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
878,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Inside a BETWEEN ... AND ... expression,no,undetermined,0,9
879,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// database type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
880,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// reference type,no,undetermined,0,9
881,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Don't need to lock the cache here, since if someone // else inserted the same pk first, the insert would fail",no,undetermined,1,8
882,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// todo : for 4.0 //	private static final Logger log = LoggerFactory.getLogger( SQLStatementLogger.class ); // this is the legacy logging 'category'...,no,undetermined,8,1
883,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : we may also want to check that the types here map to exactly one column/JDBC-type //      can't think of a situation where arithmetic expression between multi-column mappings //      makes any sense.,yes,undetermined,8,1
884,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// performance opt,no,undetermined,0,9
885,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//cannot occur,no,undetermined,0,9
886,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO: this is very suboptimal for some subclasses (namely components), // since it does not take advantage of two-phase-load",yes,undetermined,8,1
887,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is tuplizer-centric, but is passed a session ~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",no,undetermined,0,9
888,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the default is to simply not lazy fetch properties for now...,no,undetermined,0,9
889,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//ignore!,no,undetermined,0,9
890,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//bad cast,no,undetermined,0,9
891,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// ok in normal Hibernate usage to delete a detached entity; JPA however // forbids it, thus this is a hook for HEM to affect this behavior",no,undetermined,1,8
892,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: We probably should have a StatisticsNotPublishedException, to make it clean",yes,undetermined,8,1
893,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//getResultList(results);,no,undetermined,0,9
894,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// after *all* persisters and named queries are registered,no,undetermined,1,8
895,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The property is another class..,no,undetermined,0,9
896,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//for non null args, check for components and elements containing components",no,undetermined,0,9
897,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// during deserialization, we need to reconnect all proxies and // collections to this session, as well as the EntityEntry and // CollectionEntry instances; these associations are transient // because serialization is used for different things.",no,undetermined,0,9
898,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// We ignore minimalPutOverride. JBossCache putForExternalRead is // already about as minimal as we can get; it will promptly return // if it discovers that the node we want to write to already exists,no,undetermined,0,9
899,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If we have <tt>not-found=""ignore""</tt> association mapped to a // formula, we always need to dirty check it, so we can update the // second-level cache",no,undetermined,0,9
900,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//or Types.LONGVARCHAR?,no,undetermined,0,9
901,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Attach any mapping-defined ""ORDER BY"" fragments",no,undetermined,0,9
902,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If the lhs is a collection, use CollectionPropertyMapping",no,undetermined,0,9
903,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// WARNING: classfile only,no,undetermined,0,9
904,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//must add to JNDI _after_ adding to HashMaps, because some JNDI servers use serialization",no,undetermined,0,9
905,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Prepare the left hand side and get the data type.,no,undetermined,0,9
906,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	private final String[] sqlAliases; //	private final String[] sqlAliasSuffixes;,no,undetermined,1,8
907,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// copy elements into newly empty target collection,no,undetermined,0,9
908,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the path expression ends at the ],no,undetermined,0,9
909,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//NOTE: EARLY EXIT!,no,undetermined,0,9
910,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// from javax.naming.Referenceable,no,undetermined,1,8
911,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// handle a path expression or class name that // appears at the start, in the ""new"" HQL // style or an alias that appears at the start // in the ""old"" HQL style",no,undetermined,0,9
912,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//even on inverse=""true""",no,undetermined,0,9
913,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// cache region is defined by the root-class in the hierarchy...,no,undetermined,0,9
914,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the class hierarchy structure,no,undetermined,1,8
915,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// a nested composite element,no,undetermined,0,9
916,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: this class does too many things! we need a different //kind of path expression parser for each of the diffferent //ways in which path expressions can occur,yes,undetermined,8,1
917,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// identifier quoting support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
918,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// determine the type of the first argument...,no,undetermined,1,8
919,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// update() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
920,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// should *not* need to grow beyond the size of the total number of columns in the rs,no,undetermined,1,8
921,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: cache this in an instvar,yes,undetermined,7,2
922,hibernate-distribution-3.3.2.GA,DESIGN,"// todo : i'd much rather have this done from #endLoadingCollection(CollectionPersister,LoadingCollectionEntry)...",yes,undetermined,8,1
923,hibernate-distribution-3.3.2.GA,DEFECT,// note: at least my local SQL Server 2005 Express shows this not working...,yes,undetermined,1,8
924,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we have the form: trim(from trimSource). //      This is functionally equivalent to trim(trimSource),no,undetermined,0,9
925,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// (NOT (LE a b) ) => (GT a b),no,undetermined,2,7
926,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// schedule the update // note that we intentionally do _not_ pass in currentPersistentState!,no,undetermined,0,9
927,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Add the new node to the map so that we don't create it twice.,no,undetermined,0,9
928,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// dynamic filters for the collection,no,undetermined,0,9
929,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// istore_3 // store i,no,undetermined,0,9
930,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//flat recursive algorithm,no,undetermined,0,9
931,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Need to parse off the column qualifiers; this is assuming (which is true as of now) // that this is only used from update and delete HQL statement parsing,no,undetermined,0,9
932,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// athrow,no,undetermined,0,9
933,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//collection.clearDirty(),no,undetermined,0,9
934,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ... and the token could be an identifer and the error is // a mismatched token error ...,no,undetermined,0,9
935,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// add the primary key,no,undetermined,0,9
936,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// The user requested a ""greater"" (i.e. more restrictive) form of // pessimistic lock",no,undetermined,0,9
937,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// do the work,no,undetermined,0,9
938,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Method expressions in a SELECT should always be considered scalar.,no,undetermined,1,8
939,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// no big deal,no,undetermined,0,9
940,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//		registerColumnType( Types.BLOB, 16777215, ""mediumblob"" ); //		registerColumnType( Types.BLOB, 65535, ""blob"" );",no,undetermined,0,9
941,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//types,no,undetermined,0,9
942,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// DISCRIMINATOR,no,undetermined,0,9
943,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// logic operators by definition resolve to booleans,no,undetermined,1,8
944,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// jdbc params are 1-based,no,undetermined,0,9
945,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aastore // args,no,undetermined,0,9
946,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// go ahead and set the lazy here, since pojo.proxy can override it.",no,undetermined,0,9
947,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Since the result set cursor is always left at the first // physical row after the ""last processed"", we need to jump // back one position to get the key value we are interested // in skipping",no,undetermined,0,9
948,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//private final String rootTableName;,no,undetermined,1,8
949,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we found it,no,undetermined,0,9
950,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aliases for composite-id's,no,undetermined,0,9
951,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Add a zero (or quite low) timeout option so we don't block. // Ignore any TimeoutException. Basically we forego caching the // query result in order to avoid blocking. // Reads are done with suspended tx, so they should not hold the // lock for long.  Not caching the query result is OK, since // any subsequent read will just see the old result with its // out-of-date timestamp; that result will be discarded and the // db query performed again.",no,undetermined,0,9
952,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// DB-OBJECTNAME,no,undetermined,0,9
953,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Get all the select expressions (that we just generated) and render the select.,no,undetermined,0,9
954,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Completely optional cascading drop clause.,no,undetermined,0,9
955,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// RDMS has no known variation of a ""SELECT ... FOR UPDATE"" syntax...",no,undetermined,0,9
956,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// add the discriminator,no,undetermined,0,9
957,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: native ids,yes,undetermined,9,0
958,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//sql = query;,no,undetermined,0,9
959,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Now update only the tables with dirty properties (and the table with the version number),no,undetermined,0,9
960,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the object is persistent,no,undetermined,0,9
961,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// CLASS + TABLE,no,undetermined,0,9
962,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// grab its state from the ResultSet and keep it in the Session // (but don't yet initialize the object itself) // note that we acquire LockMode.READ even if it was not requested,no,undetermined,0,9
963,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// grab its current state,no,undetermined,0,9
964,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//where fragment must be empty!,no,undetermined,0,9
965,hibernate-distribution-3.3.2.GA,DESIGN,// todo : we can actually just determine this from the incoming EntityEntry-s,yes,undetermined,8,1
966,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//we can use an inner join for the many-to-many,no,undetermined,0,9
967,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// persist() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
968,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// get the id from the object,no,undetermined,0,9
969,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Start the session to be used for this request,no,undetermined,1,8
970,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// visit width-first, then depth",no,undetermined,0,9
971,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//swaldman 2006-08-28: define c3p0-style configuration parameters for properties with //                     hibernate-specific overrides to detect and warn about conflicting //                     declarations,no,undetermined,0,9
972,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: is this really necessary????,yes,undetermined,8,1
973,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//by requiring <, we rely on lock timeout in the case of an unsuccessful update!",no,undetermined,0,9
974,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// binary %Stream // character %Stream,no,undetermined,0,9
975,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// For property references generate <tablealias>.<columnname> as <projectionalias>,no,undetermined,0,9
976,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//for backward compatibility, disable this:",no,undetermined,0,9
977,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Create a new FROM node for the referenced class.,no,undetermined,0,9
978,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// The current_timestamp is more accurate, but only known to be supported // in SQL Server 7.0 and later (i.e., Sybase not known to support it at all)",no,undetermined,0,9
979,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//expressionTerminators.add("",""); // deliberately excluded",no,undetermined,0,9
980,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we can do the cast since orphan-delete does not apply to: // 1. newly instantiated collections // 2. arrays (we can't track orphans for detached arrays),no,undetermined,0,9
981,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This is called when it's time to fully resolve a path expression.,no,undetermined,0,9
982,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//			collectionOwnerAliases.add( ownerAlias );,no,undetermined,0,9
983,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// so we ""clock over"" on the first invocation",no,undetermined,0,9
984,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// register the standard dialect resolver,no,undetermined,0,9
985,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//ie no select clause in HQL,no,undetermined,0,9
986,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// then handle any user-defined entity modes...,no,undetermined,0,9
987,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The reason for this is SQL doesn't let you sort by an expression you are // not returning in the result set.,no,undetermined,0,9
988,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// limit the methods available if no transaction is active,no,undetermined,0,9
989,hibernate-distribution-3.3.2.GA,DESIGN,//perhaps not really necessary...,yes,undetermined,1,8
990,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Oracle did add support for ANSI CASE statements in 9i,no,undetermined,0,9
991,hibernate-distribution-3.3.2.GA,DESIGN,"/* TODO: joinKeyColumnName & foreignKeyColumnName should be called either here or at a
			 * slightly higer level in the stack (to get all the information we need)
			 * Right now HbmBinder does not support the
			 */",yes,undetermined,9,0
992,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO : would be great to have a Mapping#hasNonIdentifierPropertyNamedId method // I don't believe that Mapping#getReferencedPropertyType accounts for the identifier property; so // if it returns for a property named 'id', then we should have a non-id field named id",yes,undetermined,9,0
993,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Cope with a subselect,no,undetermined,1,8
994,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Set the attributes of the property reference expression.,no,undetermined,0,9
995,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// PROPERTIES,no,undetermined,0,9
996,hibernate-distribution-3.3.2.GA,DESIGN,"// Needed the ""clazz_"" check to work around union-subclasses // TODO : is there a way to tell whether a persister is truly discrim-column based inheritence?",yes,undetermined,9,0
997,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// static helper methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
998,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//extra information about the element type,no,undetermined,0,9
999,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// updates ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
1000,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//treat it just like a new collection,no,undetermined,1,8
1001,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// essentially, if the real session is closed allow any // method call to pass through since the real session // will complain by throwing an appropriate exception; // NOTE that allowing close() above has the same basic effect, //   but we capture that there simply to perform the unbind...",no,undetermined,0,9
1002,hibernate-distribution-3.3.2.GA,DESIGN,// Does this dialect support the Oracle-style FOR UPDATE NOWAIT syntax?,yes,undetermined,0,9
1003,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// return the (fully resolved) identifier value, but do not resolve // to the actual referenced entity instance // NOTE: the owner of the association is not really the owner of the id!",no,undetermined,2,7
1004,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// After that, process the JOINs. // Invoke a delegate to do the work, as this is farily complex.",no,undetermined,1,8
1005,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_0 // load this,no,undetermined,0,9
1006,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// add the fetched entities,no,undetermined,0,9
1007,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// package protected setters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
1008,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// join.getKey().setType( new Type( lazz.getIdentifier() ) );,no,undetermined,0,9
1009,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: copy/paste from insertRows(),yes,undetermined,9,0
1010,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ignore,no,undetermined,0,9
1011,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// CHECK,no,undetermined,0,9
1012,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// First, try to find a matching constructor accepting a ViolatedConstraintNameExtracter param...",no,undetermined,0,9
1013,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// ResultSet impl (""overridden"") ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",no,undetermined,0,9
1014,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// decode row selection...,no,undetermined,0,9
1015,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Blobs are ignored by merge(),no,undetermined,2,7
1016,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// trying via forName() first to be as close to DriverManager's semantics,no,undetermined,0,9
1017,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//use the id column alias,no,undetermined,0,9
1018,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ORPHAN DELETE (used for programmer error detection),no,undetermined,1,8
1019,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If true then execute db updates, otherwise just generate and display updates",no,undetermined,0,9
1020,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//cfg.setProperty(""hibernate.show_sql"", ""true"");",no,undetermined,0,9
1021,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// finally, what it's all about...",no,undetermined,2,7
1022,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//this is a query and we are loading multiple instances of the same collection role,no,undetermined,0,9
1023,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//		return ""select CURRENT_TIMESTAMP from RDB$DATABASE"";",no,undetermined,0,9
1024,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//there is probably a row there, so try to update //if no rows were updated, we will find out",no,undetermined,1,8
1025,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// assume this is a newly instantiated transient object // which should be saved rather than updated,no,undetermined,1,8
1026,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ignore this row of results! Note the early exit,no,undetermined,0,9
1027,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// special case where we need to force incloude all subclass joins,no,undetermined,0,9
1028,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Otherwise, this is an ordinary value.",no,undetermined,1,8
1029,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//orphan delete not supported for EntityMode.DOM4J,no,undetermined,0,9
1030,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the entity name,no,undetermined,0,9
1031,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The following variables are stacks that keep information about each subexpression // in the list of nested subexpressions we are currently processing.,no,undetermined,0,9
1032,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this is a situation where the entity id is assigned by a post-insert generator // and was saved outside the transaction forcing it to be delayed,no,undetermined,0,9
1033,hibernate-distribution-3.3.2.GA,DESIGN,//Icky workaround for MySQL bug:,yes,undetermined,9,0
1034,hibernate-distribution-3.3.2.GA,DESIGN,"// This next bit is to allow for both unsaved-value=""negative"" // and for ""older"" behavior where version number did not get // seeded if it was already set in the object // TODO: shift it into unsaved-value strategy",yes,undetermined,8,1
1035,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//before adding to collection!,no,undetermined,0,9
1036,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// First, try to get the persister using the given name directly.",no,undetermined,0,9
1037,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//JDBC and connection settings:,no,undetermined,2,7
1038,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// CHECK,no,undetermined,0,9
1039,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This could also just be true all the time...,no,undetermined,1,8
1040,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//not sure if this would ever be null but wanted to be careful,no,undetermined,0,9
1041,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: ideally we need the construction of PropertyAccessor to take the following: //      1) EntityMode //      2) EntityMode-specific data (i.e., the classname for pojo entities) //      3) Property-specific data based on the EntityMode (i.e., property-name or dom4j-node-name) // The easiest way, with the introduction of the new runtime-metamodel classes, would be the // the following predicates: //      1) PropertyAccessorFactory.getPropertyAccessor() takes references to both a //          org.hibernate.metadata.EntityModeMetadata and org.hibernate.metadata.Property //      2) What is now termed a ""PropertyAccessor"" stores any values needed from those two //          pieces of information //      3) Code can then simply call PropertyAccess.getGetter() with no parameters; likewise with //          PropertyAccessor.getSetter()",yes,undetermined,9,0
1042,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// TODO: skip formulas?,no,undetermined,7,2
1043,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// union subclass support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
1044,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//if dotted and not load-collection nor return-join //regular property,no,undetermined,0,9
1045,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// otherwise, utilize the static delete statements",no,undetermined,1,8
1046,hibernate-distribution-3.3.2.GA,DESIGN,// merges don't cascade to uninitialized collections //			//TODO: perhaps this does need to cascade after all....,yes,undetermined,8,1
1047,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This 'dot' expression now refers to the resulting from element.,no,undetermined,1,8
1048,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// eat it and try next,no,undetermined,2,7
1049,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// special shortcut for id properties, skip the join! // this must only occur at the _end_ of a path expression",no,undetermined,0,9
1050,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//public Object instantiate(Object parent, SessionImplementor session) throws HibernateException;",no,undetermined,0,9
1051,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The keyword used to specify a nullable column.,no,undetermined,0,9
1052,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The default SQLExceptionConverter for all dialects is based on SQLState // since SQLErrorCode is extremely vendor-specific.  Specific Dialects // may override to return whatever is most appropriate for that vendor.,no,undetermined,1,8
1053,hibernate-distribution-3.3.2.GA,DEFECT,"//TODO: This is assertion is disabled because there is a bug that means the //	  original owner of a transient, uninitialized collection is not known //	  if the collection is re-referenced by a different object associated //	  with the current Session //throw new AssertionFailure(""bug loading unowned collection"");",yes,undetermined,8,1
1054,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : will need reference to session factory to fully complete HHH-1907,yes,undetermined,7,2
1055,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// The keyword used to specify an identity column, if identity column key generation is supported.",no,undetermined,0,9
1056,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//figure out which tables need to be fetched,no,undetermined,1,8
1057,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// intentionally empty,no,undetermined,0,9
1058,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we are already processing a dot-structure,no,undetermined,1,8
1059,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//fetch the generated id in a separate query,no,undetermined,0,9
1060,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//problematic for <key-many-to-one>!,no,undetermined,1,8
1061,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// collection of <many-to-any/> mappings... // used to circumvent the component-collection check below...,no,undetermined,0,9
1062,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// lock doesn't cascade to uninitialized collections,no,undetermined,0,9
1063,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// invokeinterface // callback.write*(..),no,undetermined,0,9
1064,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// all AliasToEntityMapResultTransformer are considered equal ~~~~~~~~~~~~~,no,undetermined,0,9
1065,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// IDENTITY support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
1066,hibernate-distribution-3.3.2.GA,DESIGN,"//for arrays, we should end the collection load before resolving //the entities, since the actual array instances are not instantiated //during loading //TODO: or we could do this polymorphically, and have two //      different operations implemented differently for arrays",yes,undetermined,9,0
1067,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	private ComponentTuplizerFactory componentTuplizerFactory; todo : HHH-3517 and HHH-1907,no,undetermined,9,0
1068,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// update removed rows fks to null,no,undetermined,0,9
1069,hibernate-distribution-3.3.2.GA,DESIGN,// FIXME hack to work around fact that calling // Node added = root.addChild( fqn ); doesn't  // properly set the version on the node,yes,undetermined,9,0
1070,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ldc // field name,no,undetermined,0,9
1071,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// not for internal use:,no,undetermined,1,8
1072,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO : we really need to be able to deal with component paths here also; // this is difficult because the hql-sql grammar expects all those node types // to be FromReferenceNodes.  One potential fix here would be to convert the // IntoClause to just use a FromClause/FromElement combo (as a child of the // InsertStatement) and move all this logic into the InsertStatement.  That's // probably the easiest approach (read: least amount of changes to the grammar // and code), but just doesn't feel right as then an insert would contain // 2 from-clauses",yes,undetermined,8,1
1073,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
1074,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// null is not considered the same type as Integer. //$NON-NLS-1 //$NON-NLS-1,no,undetermined,0,9
1075,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// reference type,no,undetermined,0,9
1076,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* current stack len = 0 */,no,undetermined,0,9
1077,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//force immediate execution of the insert,no,undetermined,0,9
1078,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Use the delegate.,no,undetermined,0,9
1079,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Associate the table alias with the element.,no,undetermined,1,8
1080,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//return the proxied object,no,undetermined,0,9
1081,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*public final Currency getCurrency(int col) throws HibernateException {
		return (Currency) get(col);
	}*/",no,undetermined,1,8
1082,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
1083,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Don't really know all the codes required to adequately decipher returned jdbc exceptions here. // simply allow the failure to be eaten and the subsequent insert-selects/deletes should fail,no,undetermined,0,9
1084,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//only necessary for postgre < 7.4 //http://anoncvs.postgresql.org/cvsweb.cgi/pgsql/doc/src/sgml/ref/create_sequence.sgml,no,undetermined,0,9
1085,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// intentionally empty,no,undetermined,0,9
1086,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
1087,hibernate-distribution-3.3.2.GA,DESIGN,// this only works because collection entries are kept in a sequenced // map by persistence context (maybe we should do like entities and // keep a separate sequences set...) //TODO: calling entrySet on an IdentityMap is SLOW!!,yes,undetermined,9,0
1088,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//get a snapshot,no,undetermined,0,9
1089,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we do not actually propogate ANTLRExceptions as a cause, so // log it here for diagnostic purposes",no,undetermined,2,7
1090,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//Need this, since join condition can appear inside parens!",no,undetermined,0,9
1091,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// for convenience to save some lookups,no,undetermined,0,9
1092,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: suck this logic into the collection!,yes,undetermined,7,2
1093,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//notAfterClassTokens.add("","");",no,undetermined,0,9
1094,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// strip table-owner because Informix always returns constraint names as ""<table-owner>.<constraint-name>""",no,undetermined,0,9
1095,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// watch out for a case where old is still referenced // somewhere in the object graph! (which is a user error),no,undetermined,0,9
1096,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// So this needs to be safe from concurrent modification problems. // It is safe because of how IdentityMap implements entrySet(),no,undetermined,0,9
1097,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Return StringBuffer content as a large String,no,undetermined,1,8
1098,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The keyword used to insert a row without specifying // any column values,no,undetermined,0,9
1099,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// for now, just ""re-flatten"" the metamodel since this is temporary stuff anyway (HHH-1907)",no,undetermined,1,8
1100,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If the constant is an IDENT, figure out what it means...",no,undetermined,1,8
1101,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// NOT_SUPPORTED_SHOULD_USE_JDBC3_PreparedStatement.getGeneratedKeys_method,no,undetermined,0,9
1102,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//NOTE: EARLY EXIT!,no,undetermined,0,9
1103,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//then by fk,no,undetermined,1,8
1104,hibernate-distribution-3.3.2.GA,DESIGN,"// TBD should this be varbinary($1)? //		registerColumnType(Types.VARBINARY,     ""binary($1)"");",yes,undetermined,1,8
1105,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//what is the version on the database?,no,undetermined,2,7
1106,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*
	 * The types represented in the SQL result set.
	 *
	 * @return The types represented in the SQL result set.
	 */",no,undetermined,0,9
1107,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// give the Interceptor a chance to process property values, if the properties // were modified by the Interceptor, we need to set them back to the object",no,undetermined,0,9
1108,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ParameterContainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
1109,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// simple nullability constraint,no,undetermined,0,9
1110,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//the entity is associated with the session, so check its status",no,undetermined,0,9
1111,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// substitutes into values by side-effect,no,undetermined,0,9
1112,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//null caused some problems,no,undetermined,1,8
1113,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// iterate entries ordered by capacity to find first fit,no,undetermined,0,9
1114,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// array of reference type,no,undetermined,0,9
1115,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//return memberPersister.getType();,no,undetermined,0,9
1116,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// According to both the ANSI-SQL and JPA specs, trim takes a variable number of parameters between 1 and 4. // at least one paramer (trimSource) is required.  From the SQL spec: // // <trim function> ::= //      TRIM <left paren> <trim operands> <right paren> // // <trim operands> ::= //      [ [ <trim specification> ] [ <trim character> ] FROM ] <trim source> // // <trim specification> ::= //      LEADING //      | TRAILING //      | BOTH // // If <trim specification> is omitted, BOTH is assumed. // If <trim character> is omitted, space is assumed",no,undetermined,0,9
1117,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// COLUMN(S),no,undetermined,0,9
1118,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Begin second unit of work,no,undetermined,0,9
1119,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// careful with this!,no,undetermined,0,9
1120,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// create a new batch for this type. The batch number is the number of current batches.,no,undetermined,1,8
1121,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ifnonnull,no,undetermined,0,9
1122,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Second-level / query cache:,no,undetermined,0,9
1123,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Otherwise, use the property mapping.",no,undetermined,1,8
1124,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		settings.setComponentTuplizerFactory( this.getComponentTuplizerFactory() );,no,undetermined,1,8
1125,hibernate-distribution-3.3.2.GA,DESIGN,"// null or brand new collection // this will also (inefficiently) handle arrays, which have // no snapshot, so we can't do any better",yes,undetermined,1,8
1126,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"// add an entry for this type of entity. // we can be assured that all referenced entities have already // been processed, // so specify that this entity is with the latest batch. // doing the batch number before adding the name to the list is // a faster way to get an accurate number.",yes,undetermined,1,8
1127,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// a many-to-many; // decrement currentDepth here to allow join across the association table // without exceeding MAX_FETCH_DEPTH (i.e. the ""currentDepth - 1"" bit)",no,undetermined,0,9
1128,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we found a collection element in the result set,no,undetermined,0,9
1129,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// saveOrUpdateCopy() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
1130,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//ie. 60 seconds,no,undetermined,0,9
1131,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we need to grab the version value from the entity, otherwise // we have issues with generated-version entities that may have // multiple actions queued during the same flush",no,undetermined,1,8
1132,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_0,no,undetermined,0,9
1133,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Delegate to the QueryLoader...,no,undetermined,0,9
1134,hibernate-distribution-3.3.2.GA,DESIGN,"//This is really ugly, but necessary:",yes,undetermined,4,5
1135,hibernate-distribution-3.3.2.GA,DESIGN,"// not absolutely necessary, but does help with aggressive release",yes,undetermined,1,8
1136,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//postDelete: // After actually deleting a row, record the fact that the instance no longer  // exists on the database (needed for identity-column key generation), and // remove it from the session cache",no,undetermined,0,9
1137,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This will call initialize(tok)!,no,undetermined,0,9
1138,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If there is no WHERE node, make one.",no,undetermined,0,9
1139,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Add NOT if it's negated.,no,undetermined,1,8
1140,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ignore!,no,undetermined,0,9
1141,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
1142,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// You may still have other ResultSets or update counts left to process here  // but you can't do it now or the ResultSet you just got will be closed ,no,undetermined,1,8
1143,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//the entity is not associated with the session, so //try interceptor and unsaved-value",no,undetermined,0,9
1144,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// select-range is terminated by declaration of ""from""",no,undetermined,0,9
1145,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// make sure the lhs is ""assignable""...",no,undetermined,0,9
1146,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//no pointbase TINYINT,no,undetermined,0,9
1147,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// See if the entity is already bound to this session, if not look at the // entity identifier and assume that the entity is persistent if the // id is not ""unsaved"" (that is, we rely on foreign keys to keep // database integrity)",no,undetermined,0,9
1148,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// refresh doesn't cascade to uninitialized collections,no,undetermined,0,9
1149,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// TABLE,no,undetermined,0,9
1150,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Just add a 'not' parent.,no,undetermined,1,8
1151,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//note: it is conceptually possible that a UserType could map null to //	  a non-null value, so the following is arguable:",no,undetermined,0,9
1152,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: Should this be an InitializeEntityEventListener??? (watch out for performance!),yes,undetermined,9,0
1153,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
1154,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//NOTE: early return,no,undetermined,0,9
1155,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: suck into event class,yes,undetermined,8,1
1156,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we have a CGLIB enhanced entity,no,undetermined,0,9
1157,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Find or create the WHERE clause,no,undetermined,0,9
1158,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Put the FILTERS node before the HQL condition and theta joins,no,undetermined,0,9
1159,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// *store_1 // each type,no,undetermined,0,9
1160,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//its an interface so we can't really tell anything...,no,undetermined,0,9
1161,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//sort first by entity name,no,undetermined,0,9
1162,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// SQLFunction implementation,no,undetermined,0,9
1163,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// dynamic filters attached to the class-level,no,undetermined,0,9
1164,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if there is no resulting row, return null",no,undetermined,0,9
1165,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// ""finish off"" the join",no,undetermined,0,9
1166,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this property belongs on the table and is to be inserted,no,undetermined,0,9
1167,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: get SQL rendering out of this package!,yes,undetermined,8,1
1168,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ignore it...,no,undetermined,0,9
1169,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If there is a second child (RHS), recurse into that child.",no,undetermined,0,9
1170,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//safe from concurrent modification because of how entryList() is implemented on IdentityMap,no,undetermined,1,8
1171,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//arbitrary on clause ignored!!,no,undetermined,0,9
1172,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Mainly for OSCache,no,undetermined,0,9
1173,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"//TODO: assertion only, could be optimized away",yes,undetermined,9,0
1174,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// hit the database, after checking the session cache for a snapshot",no,undetermined,1,8
1175,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//int result = 17; //result = 37 * result + type.hashCode(); //result = 37 * result + ( value==null ? 0 : value.hashCode() ); //return result;,no,undetermined,0,9
1176,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"//TODO: optimize away this lookup for entities w/o unsaved-value=""undefined""",yes,undetermined,7,2
1177,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Impl note: takes advantage of the fact that an escpaed single quote // embedded within a quote-block can really be handled as two seperate // quote-blocks for the purposes of this method...,no,undetermined,0,9
1178,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//        },no,undetermined,0,9
1179,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//cachedState,",no,undetermined,0,9
1180,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Get the function name node.,no,undetermined,0,9
1181,hibernate-distribution-3.3.2.GA,DEFECT,"// TODO: at the point where we are resolving collection references, we don't // know if the uk value has been resolved (depends if it was earlier or // later in the mapping document) - now, we could try and use e.getStatus() // to decide to semiResolve(), trouble is that initializeEntity() reuses // the same array for resolved and hydrated values",yes,undetermined,8,1
1182,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//hilo config,no,undetermined,0,9
1183,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_0,no,undetermined,0,9
1184,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//			final List extendsQueue,",no,undetermined,1,8
1185,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Correlated subqueries create 'special' implied from nodes // because correlated subselects can't use an ANSI-style join,no,undetermined,0,9
1186,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* current stack len = 2 */,no,undetermined,0,9
1187,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// first, break down the returns into maps keyed by alias // so that role returns can be more easily resolved to their owners",no,undetermined,1,8
1188,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// logic operators by definition resolve to boolean.,no,undetermined,1,8
1189,hibernate-distribution-3.3.2.GA,DEFECT,"//TODO: entities CAN be compared, by PK, fix this! -> only if/when we can extract the id values....",yes,undetermined,9,0
1190,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//search for it //note that this code is incorrect for other than one-to-many,no,undetermined,0,9
1191,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: get SQL rendering out of this package!,yes,undetermined,8,1
1192,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// do *not* over-write the column text, as that has already been // ""rendered"" during resolve",no,undetermined,1,8
1193,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// needed later for many-to-many/filter application,no,undetermined,0,9
1194,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we will need to remove ye olde entries,no,undetermined,0,9
1195,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// cache the actual id of the object, not the value of the // property-ref, which might not be initialized",no,undetermined,0,9
1196,hibernate-distribution-3.3.2.GA,DEFECT,// TODO : this is broke for subqueries in statements other than selects...,yes,undetermined,7,2
1197,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// note that it might be better to iterate the snapshot but this is safe, // assuming the user implements equals() properly, as required by the Set // contract!",no,undetermined,2,7
1198,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// +1 to include the following '.',no,undetermined,0,9
1199,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Serialize //-----------------------------------------------------------------------,no,undetermined,0,9
1200,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//sort the updates by fk,no,undetermined,0,9
1201,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//source.getBatcher().executeBatch(); //found another way to ensure that all batched joined inserts have been executed,no,undetermined,1,8
1202,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we got here because we assumed that an instance // with an assigned id was detached, when it was // really persistent",no,undetermined,0,9
1203,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//handle a property-ref,no,undetermined,0,9
1204,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// scroll ahead,no,undetermined,0,9
1205,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//final String queryString, ",no,undetermined,1,8
1206,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// double,no,undetermined,0,9
1207,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// prefer re-generation of identity!,no,undetermined,0,9
1208,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This is called when it's time to fully resolve a path expression.,no,undetermined,0,9
1209,hibernate-distribution-3.3.2.GA,DESIGN,// meant to handle dynamic instantiation queries...(Copy from QueryLoader),yes,undetermined,0,9
1210,hibernate-distribution-3.3.2.GA,DESIGN,// perhaps this should be an exception since it is only ever used // in the above method?,yes,undetermined,2,7
1211,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//count++;,no,undetermined,0,9
1212,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// (EQ a NULL) => (IS_NULL a),no,undetermined,0,9
1213,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Set the unresolved path in this node and the parent. // Set the text for the parent.,no,undetermined,0,9
1214,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*
				 * Property prop = new Property(); prop.setName(""id"");
				 * prop.setPropertyAccessorName(""embedded""); prop.setValue(id);
				 * entity.setIdentifierProperty(prop);
				 */",no,undetermined,0,9
1215,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// use default behavior,no,undetermined,0,9
1216,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Chop off the rest of the tree.,no,undetermined,0,9
1217,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// We can't change the TM on a running cache; just check // if the cache has no TM and we're OK with that,no,undetermined,0,9
1218,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// all clear,no,undetermined,0,9
1219,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// skip finalize methods,no,undetermined,0,9
1220,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ----------------------------------------------------------- Constructors,no,undetermined,0,9
1221,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	public boolean isShowSqlEnabled() { //		return showSql; //	} // //	public boolean isFormatSqlEnabled() { //		return formatSql; //	},no,undetermined,0,9
1222,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// native identifier generatiion ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
1223,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// NOTE : this is being used from the process of shutting down a // SessionFactory. Specific things to consider: // (1) this clearing of the region should not propagate to // other nodes on the cluster (if any); this is the // cache-mode-local option bit... // (2) really just trying a best effort to cleanup after // ourselves; lock failures, etc are not critical here; // this is the fail-silently option bit...",no,undetermined,1,8
1224,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// double,no,undetermined,0,9
1225,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	private final List persisters = new ArrayList();,no,undetermined,2,7
1226,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// hibernate seems to ignore this type...,no,undetermined,1,8
1227,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// NOT NULL VIOLATION,no,undetermined,2,7
1228,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// intentionally empty,no,undetermined,0,9
1229,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		Iterator iter = extendsQueue.iterator();,no,undetermined,0,9
1230,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*return that.type.equals(type) && 
			EqualsHelper.equals(that.value, value);*/",no,undetermined,0,9
1231,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Some JDBC drivers erroneously return an empty array here for a null DB value :/,no,undetermined,1,8
1232,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: used to be exprNoParens! was this needed?,yes,undetermined,7,2
1233,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// use setParameter for null values,no,undetermined,0,9
1234,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// only one-to-one is lazy fetched,no,undetermined,0,9
1235,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//public Currency getCurrency(int col) throws HibernateException;,no,undetermined,0,9
1236,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// oracle sql-state code for deadlock,no,undetermined,0,9
1237,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//reset the version,no,undetermined,0,9
1238,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// note that if we load this collection from a cartesian product // the multiplicity would be broken ... so use an idbag instead,no,undetermined,0,9
1239,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//not final because proxy factory creation can fail,no,undetermined,1,8
1240,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if not wrappered yet, its dirty (this can't occur, because // we now always call wrap() before getting to here) // return ( ! (obj instanceof PersistentCollection) ) ? //true : searchForDirtyCollections( (PersistentCollection) obj, type );",no,undetermined,0,9
1241,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//sqlResultTypeList.add( type ); // Generate the select expression.,no,undetermined,0,9
1242,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// TODO:,no,undetermined,4,5
1243,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This will add the new from element to the origin.,no,undetermined,0,9
1244,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//now tie it all together,no,undetermined,0,9
1245,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: better to degrade to lazy=""false"" if uninstrumented",yes,undetermined,8,1
1246,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// If the provider was leeching off an existing pool don't close it,no,undetermined,0,9
1247,hibernate-distribution-3.3.2.GA,DEFECT,"//TODO: would be nice to use false, but issues with MS SQL",yes,undetermined,8,1
1248,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Turn off includeSubclasses on all FromElements.,no,undetermined,0,9
1249,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is persister-centric and/or EntityInfo-centric ~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
1250,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// see explanation above...,no,undetermined,1,8
1251,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// For implied many-to-many, just add the end join.",no,undetermined,0,9
1252,hibernate-distribution-3.3.2.GA,DESIGN,// TODO: Fix this so it will work for non-POJO entity mode,yes,undetermined,9,0
1253,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// For pessimistic locking, we just want to toss out our ref // to any old invalid root node and get the latest (may be null)            ",no,undetermined,1,8
1254,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//ignore subselect keywords,no,undetermined,0,9
1255,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Custom SQL,no,undetermined,0,9
1256,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// not necessarily a *unique* property reference,no,undetermined,0,9
1257,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// sequentially read the result set in reverse until we recognize // a change in the key value.  At that point, we are pointed at // the last physical sequential row for the logical row in which // we are interested in processing",no,undetermined,0,9
1258,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// return,no,undetermined,0,9
1259,hibernate-distribution-3.3.2.GA,DESIGN,"// Does this dialect support FOR UPDATE OF, allowing particular rows to be locked?",yes,undetermined,0,9
1260,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//swaldman 2006-08-28: define c3p0-style configuration parameters for initialPoolSize, which //                     hibernate sensibly lets default to minPoolSize, but we'll let users //                     override it with the c3p0-style property if they want.",no,undetermined,0,9
1261,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: code duplication with SingleTableEntityPersister,yes,undetermined,8,1
1262,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// again, CCS did not have such a concept; however a reasonable // proximity is to clear the cache.  For non-transaction aware // caches, we will also do a clear at the end of the transaction",no,undetermined,0,9
1263,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// the owning entity may have been deleted and its identifier unset due to // identifier-rollback; in which case, try to look up its identifier from // the persistence context",no,undetermined,1,8
1264,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
1265,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// is a primitive type // invokespecial,no,undetermined,0,9
1266,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//with two-deep subqueries, the same alias would get generated for //both using the old method (criteriaQuery.generateSQLAlias()), so //that is now used as a fallback if the main criteria alias isn't set",no,undetermined,0,9
1267,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//		String provider = properties.getProperty( Environment.BYTECODE_PROVIDER ); //		log.info( ""Bytecode provider name : "" + provider ); //		BytecodeProvider bytecodeProvider = buildBytecodeProvider( provider ); //		settings.setBytecodeProvider( bytecodeProvider );",no,undetermined,1,8
1268,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Informix doesn't have a bit type,no,undetermined,0,9
1269,hibernate-distribution-3.3.2.GA,DESIGN,"//it is possible that the tree-walking in OuterJoinLoader can get to //an association defined by a subclass, in which case the property-ref //might refer to a property defined on a subclass of the current class //in this case, the table name is not known - this temporary solution  //assumes that the property-ref refers to a property of the subclass //table that the association belongs to (a reasonable guess) //TODO: fix this, add: OuterJoinLoadable.getSubclassPropertyTableName(String propertyName)",yes,undetermined,8,1
1270,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// just especially for the trivial collection filter,no,undetermined,0,9
1271,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// object loaded by update(),no,undetermined,1,8
1272,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// This handles HHH-354, where there is a strange property name in a where clause. // If the lookahead contains a DOT then something that isn't an IDENT...",no,undetermined,1,8
1273,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// See if the second lookahed token can be an identifier.,no,undetermined,0,9
1274,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// try to make sure we don't wrap and already wrapped session,no,undetermined,0,9
1275,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the outerJoinsAfterWhere needs to come before where clause to properly // handle dynamic filters,no,undetermined,0,9
1276,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// put the ""standard"" tuplizers into the tuplizer map first",no,undetermined,0,9
1277,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//},no,undetermined,0,9
1278,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: need to make the majority of this functionality into a top-level support class for custom impl support,yes,undetermined,6,3
1279,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// found a ctor, but it was not publicly accessible so try to request accessibility",no,undetermined,1,8
1280,hibernate-distribution-3.3.2.GA,DESIGN,// is it necessary to register %exact since it can only appear in a where clause?,yes,undetermined,0,9
1281,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Not elements(x),no,undetermined,0,9
1282,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Initialize the error handling delegate.,no,undetermined,0,9
1283,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The loop ensures atomicity of the // select + update even for no transaction // or read committed isolation level,no,undetermined,0,9
1284,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// *load_1,no,undetermined,0,9
1285,hibernate-distribution-3.3.2.GA,DESIGN,// todo : throw exception?  maybe warn if not the same?,yes,undetermined,9,0
1286,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// PHASE 2 : Analyze the HQL AST, and produce an SQL AST.",no,undetermined,0,9
1287,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*public boolean equals(Object other) {
		read();
		return bag.equals(other);
	}

	public int hashCode(Object other) {
		read();
		return bag.hashCode();
	}*/",no,undetermined,0,9
1288,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// handle orphaned entities!!,no,undetermined,0,9
1289,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Initialize dirty flags for arrays + collections with composite elements // and reset reached, doupdate, etc.",no,undetermined,0,9
1290,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Use the delegate.,no,undetermined,0,9
1291,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// [jsd] The fix for HHH-558...,no,undetermined,1,8
1292,hibernate-distribution-3.3.2.GA,DESIGN,// append the SQL to return the generated identifier //TODO: suck into Insert,yes,undetermined,7,2
1293,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_1 // load the bean,no,undetermined,0,9
1294,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// return,no,undetermined,0,9
1295,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Use the delegate.,no,undetermined,0,9
1296,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//information about properties of this class, //including inherited properties //(only really needed for updatable/insertable properties)",no,undetermined,0,9
1297,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Primary key constraint,no,undetermined,0,9
1298,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
1299,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The keyword used to specify a nullable column.,no,undetermined,0,9
1300,hibernate-distribution-3.3.2.GA,DESIGN,"// does this need holdlock also? : return tableName + "" with (updlock, rowlock, holdlock)"";",yes,undetermined,0,9
1301,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// use the id value of a newly instantiated instance as the unsaved-value,no,undetermined,0,9
1302,hibernate-distribution-3.3.2.GA,DESIGN,// can happen because of the multiple ways Cache.remove() // can be invoked :(,yes,undetermined,0,9
1303,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//chop the last union (all),no,undetermined,0,9
1304,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Make sure we don't re-release the same cache,no,undetermined,1,8
1305,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Custom SQL,no,undetermined,0,9
1306,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//take note when this is a boolean expression,no,undetermined,0,9
1307,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	register the type of the out param - an Oracle specific type,no,undetermined,0,9
1308,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: not quite sure about the full implications of this!,yes,undetermined,8,1
1309,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// otherwise, the proxy was pruned during the serialization process",no,undetermined,0,9
1310,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If this is an implied join in a FROM clause, then use ANSI-style joining, and set the // flag on the FromElement that indicates that it was implied in the FROM clause itself.",no,undetermined,0,9
1311,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//String[] fk = StringHelper.qualify( ""collection_"", cp.getKeyColumnNames() );",no,undetermined,0,9
1312,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// wrapped iterators,no,undetermined,0,9
1313,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//join = q.createJoinFragment(useThetaStyleJoin);,no,undetermined,0,9
1314,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ( (Column) ( (SimpleValue) ic.getIndex() ).getColumnIterator().next() // ).setNullable(false);,no,undetermined,0,9
1315,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// detached collection wrappers that get found + reattached // during flush shouldn't be ignored,no,undetermined,0,9
1316,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if an exception occurs during flush, user must call rollback()",no,undetermined,0,9
1317,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if its ""id""",no,undetermined,0,9
1318,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//special case ... this is the leaf of the containment graph, even though not immutable",no,undetermined,0,9
1319,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Generate an explicit join for the root dot node.   The implied joins will be collected and passed up // to the root dot node.,no,undetermined,0,9
1320,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// for objects that came in via update(),no,undetermined,0,9
1321,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// disassemble positional parameters,no,undetermined,0,9
1322,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// remove any snapshot, not really for memory management purposes, but // rather because it might now be stale, and there is no longer any  // EntityEntry to take precedence // This is now handled by removeEntity() //session.getPersistenceContext().removeDatabaseSnapshot(key);",no,undetermined,1,8
1323,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// ""pass along"" our initial embedded parameter node(s) to the first generated // sql fragment so that it can be handled later for parameter binding...",no,undetermined,0,9
1324,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//			buf.append( selectFragment( lhsAlias, """" ) )//ignore suffix for collection columns!",no,undetermined,0,9
1325,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//the BLOB type requires a size arguement - this defaults to //bytes - no arg defaults to 1 whole byte! //other argument mods include K - kilobyte, M - megabyte, G - gigabyte. //refer to the PBdevelopers guide for more info.",no,undetermined,0,9
1326,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//			        ( implied && DotNode.useThetaStyleImplicitJoins ) ) {,no,undetermined,0,9
1327,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//private final Map propertyTableNumbersByName = new HashMap();,no,undetermined,1,8
1328,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//the first id found after the given id,no,undetermined,0,9
1329,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// --- Query translator methods ---,no,undetermined,0,9
1330,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// CollectionPropertyMapping processes everything except 'index'.,no,undetermined,0,9
1331,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		 This assumes you will want to ignore any update counts ,no,undetermined,0,9
1332,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The syntax used to add a column to a table,no,undetermined,0,9
1333,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// why is all others non final ?,no,undetermined,4,5
1334,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//cascade to current collection elements,no,undetermined,0,9
1335,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//stats,no,undetermined,0,9
1336,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Essentially: // 1) If we have a local (Hibernate) transaction in progress //      and it already has the UserTransaction cached, use that //      UserTransaction to determine the status. // 2) If a transaction manager has been located, use //      that transaction manager to determine the status. // 3) Finally, as the last resort, try to lookup the //      UserTransaction via JNDI and use that to determine the //      status.",no,undetermined,0,9
1337,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Not null if the Isolation level has been specified in the configuration file. // Otherwise, it is left to the Driver's default value.",no,undetermined,0,9
1338,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Handle any filters applied to this collection,no,undetermined,0,9
1339,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//final boolean forceCacheRefresh,",no,undetermined,1,8
1340,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// check if collection is currently being loaded,no,undetermined,0,9
1341,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// invokeinterface // enabled.getInterceptFieldCallback(),no,undetermined,0,9
1342,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Retrieve the value of the designated column in the current row of this // ResultSet object as a java.io.Reader object,no,undetermined,0,9
1343,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// replace {....} with corresponding column aliases,no,undetermined,0,9
1344,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// and the qualifier is not the alias of this criteria //      -> check to see if we belong to some criteria other //          than the one that created us,no,undetermined,0,9
1345,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//needed so that we remove this collection from the second-level cache,no,undetermined,0,9
1346,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// --- Inner classes (moved here from sql-gen.g) ---,no,undetermined,0,9
1347,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//return AssociationType.FOREIGN_KEY_TO_PARENT; //this is better but causes a transient object exception...,no,undetermined,2,7
1348,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// The unique property value represented here may or may not be // serializable, so we do an explicit check here in order to generate // a better error message",no,undetermined,2,7
1349,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//SQL Generation settings:,no,undetermined,1,8
1350,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//not found in inner query , try the outer query",no,undetermined,0,9
1351,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// DISCRIMINATOR,no,undetermined,0,9
1352,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"//TODO: always true for now, but not if we later decide to support elements() in the from clause",yes,undetermined,8,1
1353,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// both are Timestamps,no,undetermined,0,9
1354,hibernate-distribution-3.3.2.GA,DESIGN,"// this function has a template -> restore output, apply the template and write the result out // TODO: Downcast to avoid using an interface?  Yuck.",yes,undetermined,7,2
1355,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//we can inner join to superclass tables (the row MUST be there) //we can never inner join to subclass tables,no,undetermined,0,9
1356,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"//TODO: get all properties, not just the fetched ones!",yes,undetermined,9,0
1357,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/// HHH-2378,no,undetermined,0,9
1358,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// superclass entity-name,no,undetermined,0,9
1359,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//recache the updated state,no,undetermined,1,8
1360,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// now look up the object we are really interested in! // (this lets us correctly handle proxies and multi-row // or multi-column queries),no,undetermined,0,9
1361,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//woops we got an instance of another class hierarchy branch,no,undetermined,0,9
1362,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// inner joins can be abbreviated to 'join',no,undetermined,0,9
1363,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Use the delegate.,no,undetermined,0,9
1364,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Do the key. The key is immutable so we can use the _current_ object state - not necessarily // the state at the time the delete was issued,no,undetermined,0,9
1365,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// insertable simply because that is the user did not specify // anything; just override it,no,undetermined,0,9
1366,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// for native-sql queries, the param metadata is determined outside // any relation to a query plan, because query plan creation and/or // retreival for a native-sql query depends on all of the return // types having been set, which might not be the case up-front when // param metadata would be most useful",no,undetermined,0,9
1367,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Among other things, updateReachables() will recursively load all // collections that are moving roles. This might cause entities to // be loaded.",no,undetermined,0,9
1368,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//		SQLQueryParser parser = new SQLQueryParser( //				sqlQuery, //				processor.getAlias2Persister(), //				processor.getAlias2Return(), //				aliases, //				collAliases, //				collPersisters, //				suffixes, //				collSuffixes //		); // //		sql = parser.process(); // //		namedParameterBindPoints = parser.getNamedParameters();",no,undetermined,0,9
1369,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Collection wrappers, by the CollectionKey //key=CollectionKey, value=PersistentCollection",no,undetermined,0,9
1370,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//unquotedIdentifierColumnName = identifierColumnAlias;,no,undetermined,0,9
1371,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// deprecated option...,no,undetermined,1,8
1372,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// %upper is deprecated,no,undetermined,1,8
1373,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Identity map of array holder ArrayHolder instances, by the array instance",no,undetermined,0,9
1374,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: add a CriteriaImplementor interface //      this class depends directly upon CriteriaImpl in the impl package...,yes,undetermined,8,1
1375,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// for sane JEE/JTA containers, the transaction itself functions as its identifier...",no,undetermined,0,9
1376,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// make it circular-reference safe,no,undetermined,0,9
1377,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//give the Interceptor a chance to modify property values,no,undetermined,0,9
1378,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// initialize this collection,no,undetermined,0,9
1379,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// return,no,undetermined,0,9
1380,hibernate-distribution-3.3.2.GA,DESIGN,// orphans should not be deleted during merge??,yes,undetermined,0,9
1381,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//render the SQL,no,undetermined,0,9
1382,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// again, CCS did not have such a concept; however a reasonable // proximity is to clear the cache.  For non-transaction aware // caches, we will also do a clear at the end of the transaction",no,undetermined,0,9
1383,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//$NON-NLS-1,no,undetermined,0,9
1384,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// dup,no,undetermined,0,9
1385,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Check named HQL queries,no,undetermined,0,9
1386,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*package*/,no,undetermined,0,9
1387,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ignore,no,undetermined,0,9
1388,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// strip off any leading 'and' token,no,undetermined,0,9
1389,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we need to lock the collection caches before // executing entity inserts/updates in order to // account for bidi associations,no,undetermined,0,9
1390,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// check the id unsaved-value,no,undetermined,0,9
1391,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// should not be able to reach last without maxPosition being set // unless there are no results,no,undetermined,0,9
1392,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Actually the semantics of the next three are really ""Bag"" // Note that, unlike objects, collection insertions, updates, // deletions are not really remembered between flushes. We // just re-use the same Lists for convenience.",no,undetermined,0,9
1393,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Set the existing pool flag to true,no,undetermined,0,9
1394,hibernate-distribution-3.3.2.GA,DESIGN,//shortcut,yes,undetermined,0,9
1395,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: really bad, evil hack to fix!!!",yes,undetermined,8,1
1396,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//source.getPersistenceContext().removeNonExist( new EntityKey( id, persister, source.getEntityMode() ) );",no,undetermined,0,9
1397,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//sort first by role name,no,undetermined,0,9
1398,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Don't hold the JBC node lock throughout the tx, as that // prevents reads and other updates",no,undetermined,0,9
1399,hibernate-distribution-3.3.2.GA,DESIGN,// todo : this eventually needs to be removed,yes,undetermined,7,2
1400,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//pull off the last "", """,no,undetermined,0,9
1401,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// register hibernate types for default use in scalar sqlquery type auto detection,no,undetermined,0,9
1402,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//this should be a call to resolve(), not resolveIdentifier(),  //'cos it might be a property-ref, and we did not cache the //referenced value",no,undetermined,1,8
1403,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// (NOT (LT a b) ) => (GE a b),no,undetermined,2,7
1404,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// first time we find match!,no,undetermined,0,9
1405,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// so we ""clock over"" on the first invocation",no,undetermined,0,9
1406,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// KEY,no,undetermined,0,9
1407,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Case 1: Multi token keywords GROUP BY and ORDER BY // The next token ( LT(2) ) should be 'by'... otherwise, this is just an ident.",no,undetermined,2,7
1408,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Always add the type to the return type list.,no,undetermined,0,9
1409,hibernate-distribution-3.3.2.GA,DEFECT,// TODO : this really needs to be delayed unitl after we definitively know the operand node type; // where this is currently a problem is parameters for which where we cannot unequivocally // resolve an expected type,yes,undetermined,9,0
1410,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// hibernate impelemnts cast in Dialect.java,no,undetermined,0,9
1411,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Add the type to the list of returned sqlResultTypes.,no,undetermined,0,9
1412,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Careful: these methods do not initialize the collection.,no,undetermined,0,9
1413,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//property-refs for associations defined on a //component are not supported, so no need to slice",no,undetermined,0,9
1414,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Initialize the error handling delegate.,no,undetermined,0,9
1415,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Primary key constraint,no,undetermined,0,9
1416,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: improve this hack!,yes,undetermined,9,0
1417,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// checkcast,no,undetermined,0,9
1418,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//optimistic-lock=""all"", include all updatable properties //optimistic-lock=""dirty"", include all properties we are updating this time",no,undetermined,0,9
1419,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If you're closing down the ConnectionProvider chances are an // is not a real big deal, just warn",no,undetermined,0,9
1420,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The RDMS concat() function only supports 2 parameters,no,undetermined,0,9
1421,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//not all classpersisters implement PropertyMapping!,no,undetermined,1,8
1422,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: suck this into initLaziness!,yes,undetermined,7,2
1423,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Error message constants.,no,undetermined,0,9
1424,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// PERSISTER,no,undetermined,0,9
1425,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we have specialized case of a detached entity from the // perspective of the merge operation.  Specifically, we // have an incoming entity instance which has a corresponding // entry in the current persistence context, but registered // under a different entity instance",no,undetermined,0,9
1426,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//after reset!,no,undetermined,0,9
1427,hibernate-distribution-3.3.2.GA,DESIGN,"// even here, if only properties mapped to the ""base table"" are referenced // in the set and where clauses, this could be handled by the BasicDelegate. // TODO : decide if it is better performance-wise to perform that check, or to simply use the MultiTableUpdateDelegate",yes,undetermined,8,1
1428,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: perhaps this should be some other RuntimeException...,yes,undetermined,9,0
1429,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
1430,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// #2,no,undetermined,0,9
1431,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//collection.clearDirty(),no,undetermined,0,9
1432,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// our parent is another dot node, meaning we are being further dereferenced. // thus we need to generate a join unless the parent refers to the associated // entity's PK (because 'our' table would know the FK).",no,undetermined,0,9
1433,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//will result in a SQL UPDATE:,no,undetermined,0,9
1434,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we represent a naked (simple) prop-ref,no,undetermined,0,9
1435,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// map of EntityMode -> Tuplizer,no,undetermined,0,9
1436,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*
		 * We might want a special case for 19,2. This is very common for money types
		 * and here it is converted to 18,1
		 */",no,undetermined,0,9
1437,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//inject the data,no,undetermined,0,9
1438,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// disassemble named parameters,no,undetermined,0,9
1439,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//it does not refer to an alias of a projection, //look for a property",no,undetermined,0,9
1440,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//swallow, the transaction was finished",no,undetermined,0,9
1441,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// ... and the expected token type was an identifier, then:",no,undetermined,0,9
1442,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// object have been loaded with setReadOnly(true); HHH-2236,no,undetermined,0,9
1443,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//memory optimization,no,undetermined,0,9
1444,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// model.getKey().setType( new Type( model.getIdentifier() ) );,no,undetermined,0,9
1445,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // Pre-flushing section // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,1,8
1446,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The property is a collection...,no,undetermined,0,9
1447,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// to be safe...,no,undetermined,0,9
1448,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"//TODO: if we are using identity columns, fetch the identifier",yes,undetermined,9,0
1449,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if all fields are null, we might need to delete existing row",no,undetermined,0,9
1450,hibernate-distribution-3.3.2.GA,DESIGN,// todo : better to handle dynamic filters through implicit DynamicFilterParameterSpecification // see the discussion there in DynamicFilterParameterSpecification's javadocs as to why // it is currently not done that way.,yes,undetermined,9,0
1451,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*public boolean dropTemporaryTableAfterUse() {
		//we have to, because postgres sets current tx
		//to rollback only after a failed create table
		return true;
	}*/",no,undetermined,0,9
1452,hibernate-distribution-3.3.2.GA,DESIGN,"// todo : again, how *should* this work for non-pojo entities?",yes,undetermined,9,0
1453,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//note: dirtyFields==null means we had no snapshot, and we couldn't get one using select-before-update //	  oldFields==null just means we had no snapshot to begin with (we might have used select-before-update to get the dirtyFields)",no,undetermined,0,9
1454,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//we *could* regerate this inside each called method!,no,undetermined,1,8
1455,hibernate-distribution-3.3.2.GA,DEFECT,"//TODO: would be nice to use false, but issues with MS SQL",yes,undetermined,8,1
1456,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"//TODO: cache the persister, this shows up in yourkit",yes,undetermined,7,2
1457,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//return currentId;,no,undetermined,0,9
1458,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the column doesnt exist at all.,no,undetermined,0,9
1459,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//include the discriminator and class-level where, but not filters",no,undetermined,0,9
1460,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// entityNames may now include slashes for the representations //classname may be an inner class,no,undetermined,1,8
1461,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// unable to locate it using this name,no,undetermined,0,9
1462,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// NOTE: we need to do the wrap here even if its not ""dirty"", // because collections need wrapping but changes to _them_ // don't dirty the container. Also, for versioned data, we // need to wrap before calling searchForDirtyCollections",no,undetermined,0,9
1463,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we found it in the temp PC.  Should indicate we are in the midst of processing a result set // containing eager fetches via join fetch,no,undetermined,1,8
1464,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//it was a boolean expression,no,undetermined,0,9
1465,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
1466,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// CHECK VIOLATION,no,undetermined,0,9
1467,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// noop,no,undetermined,0,9
1468,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// bad type,no,undetermined,0,9
1469,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//trim off the length/precision/scale,no,undetermined,0,9
1470,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//just a performance opt!,no,undetermined,1,8
1471,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,///////////////////////////////////////////////////////////////////////,no,undetermined,0,9
1472,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// now update the object .. has to be outside the main if block above (because of collections),no,undetermined,0,9
1473,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Loaded entity instances, by EntityUniqueKey",no,undetermined,0,9
1474,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// the ""root from-element"" in correlated subqueries do need this piece",no,undetermined,0,9
1475,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//==elementType ??,no,undetermined,0,9
1476,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//first element of array is reserved for the actual instance we are loading!,no,undetermined,0,9
1477,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ignore it,no,undetermined,0,9
1478,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// For the case of dynamic-update=""true"", we need to generate the UPDATE SQL",no,undetermined,0,9
1479,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we did not find a collection element in the result set, so we // ensure that a collection is created with the owner's identifier, // since what we have is an empty collection",no,undetermined,0,9
1480,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// this has been shown to happen occasionally in rare cases // when using a transaction manager + transaction-timeout // where the timeout calls back through Hibernate's // registered transaction synchronization on a separate // ""reaping"" thread.  In cases where that reaping thread // executes through this block at the same time the main // application thread does we can get into situations where // these CMEs occur.  And though it is not ""allowed"" per-se, // the end result without handling it specifically is infinite // looping.  So here, we simply break the loop",no,undetermined,0,9
1481,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//noncritical, swallow and let the other propagate!",no,undetermined,0,9
1482,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if it is initialized, see if the underlying //instance is contained, since we need to  //account for the fact that it might have been //evicted",no,undetermined,0,9
1483,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: temporary,yes,undetermined,9,0
1484,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we have something like : ""? [op] rhs""",no,undetermined,1,8
1485,hibernate-distribution-3.3.2.GA,DEFECT,"// First, validate all the enabled filters... //TODO: this implementation has bad performance",yes,undetermined,7,2
1486,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// iload_3 // i,no,undetermined,0,9
1487,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the class hierarchy structure,no,undetermined,1,8
1488,hibernate-distribution-3.3.2.GA,DESIGN,"// todo : need to find a clean way to handle the ""event source"" role // a seperate classs responsible for generating/dispatching events just duplicates most of the Session methods... // passing around seperate reto interceptor, factory, actionQueue, and persistentContext is not manageable...",yes,undetermined,9,0
1489,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Its the listener instance (or better be),no,undetermined,2,7
1490,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// currently allowed...,no,undetermined,1,8
1491,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: make this handle multiple collection roles!,yes,undetermined,8,1
1492,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Multi-param string dialect functions...,no,undetermined,0,9
1493,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Impl note: takes advantage of the fact that an escpaed single quote // embedded within a quote-block can really be handled as two seperate // quote-blocks for the purposes of this method...,no,undetermined,0,9
1494,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//scan for next non-whitespace token,no,undetermined,0,9
1495,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// IDENT is a class alias in the FROM.,no,undetermined,0,9
1496,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if we reach the end of the string w/o finding the // matching end, that is an exception",no,undetermined,0,9
1497,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// putfield,no,undetermined,0,9
1498,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Handle collection-fiter compilation. // IMPORTANT NOTE: This is modifying the INPUT (HQL) tree, not the output tree!",no,undetermined,0,9
1499,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//this is basically a copy/paste of OrderByParser ... might be worth refactoring,no,undetermined,1,8
1500,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//explicit = true;	// This is an explict Select. //ArrayList sqlResultTypeList = new ArrayList();,no,undetermined,0,9
1501,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// char,no,undetermined,0,9
1502,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//( (Column) model.getTable().getPrimaryKey().getColumnIterator().next() ).getName();,no,undetermined,0,9
1503,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: maybe call it getRowSelection() ?,yes,undetermined,9,0
1504,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Print page,no,undetermined,0,9
1505,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// for some reason the antlr.CommonAST initialization routines force // this method to get called twice.  The first time with an empty string,no,undetermined,0,9
1506,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// check to see if the connection is in auto-commit  // mode (no connection means aggressive connection // release outside a JTA transaction context, so MUST // be autocommit mode)",no,undetermined,2,7
1507,hibernate-distribution-3.3.2.GA,DESIGN,//We should actually rework this class to not implement Parser //and just process path expressions in the most convenient way.,yes,undetermined,3,6
1508,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// InterSystems Cache' does not current support ""SELECT ... FOR UPDATE"" syntax... // Set your transaction mode to READ_COMMITTED before using",no,undetermined,0,9
1509,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: get SQL rendering out of this package!,yes,undetermined,8,1
1510,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// finally handle the exception,no,undetermined,0,9
1511,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Let return-propertys override whatever the persister has for aliases.,no,undetermined,0,9
1512,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// scroll backward,no,undetermined,0,9
1513,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//return the id in the event object,no,undetermined,0,9
1514,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Run a subquery loader,no,undetermined,0,9
1515,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Create a parameter specification for the collection filter...,no,undetermined,0,9
1516,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//figure out which formulas are needed,no,undetermined,1,8
1517,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the name of an entity class,no,undetermined,0,9
1518,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Multi-param string dialect functions...,no,undetermined,0,9
1519,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// cannot be instantiated,no,undetermined,0,9
1520,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// a collection loaded in the current session // can not possibly be the collection belonging // to the entity passed to update(),no,undetermined,0,9
1521,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// short-circuit(s) // no new elements, the old list contains only Orphans // no old elements, so no Orphans neither",no,undetermined,0,9
1522,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		 This assumes you will want to ignore any update counts,no,undetermined,0,9
1523,hibernate-distribution-3.3.2.GA,DESIGN,//FIXME: get the PersistentClass,yes,undetermined,6,3
1524,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Multi-param dialect functions...,no,undetermined,0,9
1525,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// at least one is a plain old Date,no,undetermined,0,9
1526,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Configurable implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
1527,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// *return // each type,no,undetermined,0,9
1528,hibernate-distribution-3.3.2.GA,DESIGN,//yukky! Don't you have subclasses for that! //TODO race conditions can happen here,yes,undetermined,9,0
1529,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Double check the distributed cache,no,undetermined,0,9
1530,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Frontbase has no known variation of a ""SELECT ... FOR UPDATE"" syntax...",no,undetermined,0,9
1531,hibernate-distribution-3.3.2.GA,DESIGN,// brand new collection //TODO: or an array!! we can't lock objects with arrays now??,yes,undetermined,9,0
1532,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//do this bit after setting initialized to true or it will recurse,no,undetermined,0,9
1533,hibernate-distribution-3.3.2.GA,DESIGN,/* trim done to workaround stupid oracle bug that cant handle whitespaces before a { in a sp */,yes,undetermined,7,2
1534,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// see if the entry represents a class file,no,undetermined,0,9
1535,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// not really a many-to-one association *necessarily*,no,undetermined,1,8
1536,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// SELECT p FROM p IN CLASS eg.Person ORDER BY p.Name, p.Address, p",no,undetermined,0,9
1537,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
1538,hibernate-distribution-3.3.2.GA,DESIGN,"/**
     * FIXME Per the RegionFactory class Javadoc, this constructor version
     * should not be necessary.
     * 
     * @param props The configuration properties
     */",yes,undetermined,7,2
1539,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// replicate does cascade to uninitialized collections,no,undetermined,0,9
1540,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Use the delegate.,no,undetermined,0,9
1541,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// short,no,undetermined,0,9
1542,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO: Should this really return null?  If not, figure out something better to do here.",yes,undetermined,7,2
1543,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: COPY/PASTE FROM SessionImpl, pull up!",yes,undetermined,9,0
1544,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
1545,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// an unfetched association can only point to // an entity that already exists in the db,no,undetermined,0,9
1546,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// dirty check against the database snapshot, if possible/necessary",no,undetermined,0,9
1547,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the current batch number is the latest batch for this entity type.,no,undetermined,1,8
1548,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//NOOP,no,undetermined,0,9
1549,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// There is already an existing batch for this type of entity. // Check to see if the latest batch is acceptable.,no,undetermined,0,9
1550,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// added this caching as I noticed that getType() is being called multiple times...,no,undetermined,0,9
1551,hibernate-distribution-3.3.2.GA,DESIGN,"/////////////////////////////////////////////////////////////////////// // HACK ALERT !!!!!!!!!!!!!!!!!!!!!!!!!!!! // Attempt to work around ""ghost"" ImpliedFromElements that occasionally // show up between the actual things being joined.  This consistently // occurs from index nodes (at least against many-to-many).  Not sure // if there are other conditions // // Essentially, look-ahead to the next FromElement that actually // writes something to the SQL",yes,undetermined,7,2
1552,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Display the dialect version.,no,undetermined,0,9
1553,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//TODO,no,undetermined,4,5
1554,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: reenable if we also fix the above todo,yes,undetermined,8,1
1555,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: get SQL rendering out of here,yes,undetermined,9,0
1556,hibernate-distribution-3.3.2.GA,DEFECT,//TODO: is this completely correct?,yes,undetermined,8,1
1557,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// required to exception table // iconst_0 // i,no,undetermined,0,9
1558,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Convert the string value into the proper type.,no,undetermined,0,9
1559,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// reference type,no,undetermined,0,9
1560,hibernate-distribution-3.3.2.GA,DEFECT,"//Don't need this, because we should never ever be selecting no columns in an insert ... select... //and because it causes a bug on DB2",yes,undetermined,2,7
1561,hibernate-distribution-3.3.2.GA,DESIGN,// Need a better way to define the suffixes here...,yes,undetermined,2,7
1562,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Implicit joins use theta style (WHERE pk = fk), explicit joins use JOIN (after from)",no,undetermined,0,9
1563,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// start region to handling exception (BulkAccessorException),no,undetermined,0,9
1564,hibernate-distribution-3.3.2.GA,DESIGN,//hum ... should we cascade anyway? throw an exception? fine like it is?,yes,undetermined,1,8
1565,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// then the pojo tuplizer, using the dynamic-map tuplizer if no pojo representation is available",no,undetermined,0,9
1566,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we know only the lhs-hand type, so use that",no,undetermined,0,9
1567,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: currently keeps Getters and Setters (instead of PropertyAccessors) because of the way getGetter() and getSetter() are implemented currently; yuck!,yes,undetermined,8,1
1568,hibernate-distribution-3.3.2.GA,DESIGN,//HSQL has no Blob/Clob support .... but just put these here for now!,yes,undetermined,1,8
1569,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//test out the optimizer:,no,undetermined,0,9
1570,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// more specifically : ""? [op] datetime"" //      1) if the operator is MINUS, the param needs to be of //          some datetime type //      2) if the operator is PLUS, the param needs to be of //          some numeric type",no,undetermined,0,9
1571,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// If this is 'elements' then create a new FROM element.,no,undetermined,0,9
1572,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we only release the connection,no,undetermined,2,7
1573,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// check to see if our ""propPath"" actually // represents a property on the persister",no,undetermined,0,9
1574,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// start by looking for HQL keywords...,no,undetermined,0,9
1575,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// putfield // new value of the field,no,undetermined,0,9
1576,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// TODO : still need to make CollectionPersisters EntityMode-aware,yes,undetermined,8,1
1577,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// TODO: better error message since we actually support composites if names are explicitly listed.,yes,undetermined,9,0
1578,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*package*/,no,undetermined,0,9
1579,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//cannot be instantiated,no,undetermined,0,9
1580,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//we need to upgrade the lock mode to the mode requested,no,undetermined,0,9
1581,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// this entity defines proeprty generation, so process those generated // values...",no,undetermined,0,9
1582,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// meant to handle dynamic instantiation queries...,no,undetermined,0,9
1583,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// INDEX AND ROW SELECT,no,undetermined,0,9
1584,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Cope with a continued path expression (ie. ].baz),no,undetermined,0,9
1585,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the default...,no,undetermined,0,9
1586,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Alias references and identifiers use the same node class.,no,undetermined,0,9
1587,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// refer to comment in StatefulPersistenceContext.addCollection(),no,undetermined,0,9
1588,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Take care of any entities that might have // been evicted!	,no,undetermined,0,9
1589,hibernate-distribution-3.3.2.GA,DESIGN,// todo : we can remove this once the deprecated ctor can be made private...,yes,undetermined,8,1
1590,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Anyway, here we implement <set> semantics for a // <one-to-many> <bag>!",no,undetermined,2,7
1591,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the CascadingAction contract ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
1592,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// iterate over the *old* list,no,undetermined,0,9
1593,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: bad implementation, cos it depends upon ordering of mapping doc //      fixing this requires that Collection/PersistentClass gain access //      to the Mappings reference from Configuration (or the filterDefinitions //      map directly) sometime during Configuration.buildSessionFactory //      (after all the types/filter-defs are known and before building //      persisters).",yes,undetermined,9,0
1594,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// a collection loaded in the current session // can not possibly be the collection belonging // to the entity passed to update(),no,undetermined,0,9
1595,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//this one needed only for guessEntityMode(),no,undetermined,0,9
1596,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
1597,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// else if it's elements changed,no,undetermined,0,9
1598,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//it must be a collection fetch,no,undetermined,0,9
1599,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// already been processed...,no,undetermined,0,9
1600,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Build the dynamic-map tuplizer...,no,undetermined,0,9
1601,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Needed to bump this up to DotNode, because that is the only thing which currently // knows about the property-ref path in the correct format; it is either this, or // recurse over the DotNodes constructing the property path just like DotNode does // internally",no,undetermined,1,8
1602,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//override on some subclasses,no,undetermined,0,9
1603,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_0,no,undetermined,0,9
1604,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// all this only really needs to consider properties // of this class, not its subclasses, but since we // are reusing code used for sequential selects, we // use the subclass closure",no,undetermined,0,9
1605,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if there is no TM configured, we will not be able to access // the javax.transaction.Transaction object in order to // register a synch anyway.",no,undetermined,2,7
1606,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// simple cache of param metadata based on query string.  Ideally, the // original ""user-supplied query"" string should be used to retreive this // metadata (i.e., not the para-list-expanded query string) to avoid // unnecessary cache entries. // Used solely for caching param metadata for native-sql queries, see // getSQLParameterMetadata() for a discussion as to why...",no,undetermined,2,7
1607,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Fix up the resident flag,no,undetermined,1,8
1608,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Create nodes that track line and column number.,no,undetermined,0,9
1609,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Create a new FILTERS node as a parent of all filters,no,undetermined,0,9
1610,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Never include subclasses for implied from elements.,no,undetermined,0,9
1611,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//Cope with special cases of AND, NOT, ()",no,undetermined,0,9
1612,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// the user provided resulttransformer, not the one used with ""select new"". Here to avoid mangling // transformed/non-transformed results.",no,undetermined,0,9
1613,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//select SQL,no,undetermined,0,9
1614,hibernate-distribution-3.3.2.GA,DESIGN,"//SPACES //TODO: i'm not sure, but perhaps we should exclude //      abstract denormalized tables?",yes,undetermined,9,0
1615,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: copy/paste from recreate(),yes,undetermined,9,0
1616,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*<String>*/,no,undetermined,0,9
1617,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// dynamic filters specifically for many-to-many inside the collection,no,undetermined,0,9
1618,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//SQL Exception converter:,no,undetermined,0,9
1619,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//deliberately ignore return value!,no,undetermined,0,9
1620,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*(LockMode) anything*/,no,undetermined,0,9
1621,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//orphan delete not supported for EntityMode.DOM4J,no,undetermined,0,9
1622,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"// if we are still not resolved, we might represent a constant. //      needed to add this here because the allowance of //      naked-prop-refs in the grammar collides with the //      definition of literals/constants (""nondeterminism""). //      TODO: cleanup the grammar so that ""processConstants"" is always just handled from here",yes,undetermined,8,1
1623,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//hilo params,no,undetermined,0,9
1624,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//q.addCollection(collectionName, collectionRole);",no,undetermined,0,9
1625,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//no big deal,no,undetermined,0,9
1626,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
1627,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This is the legacy behaviour for HQL queries...,no,undetermined,0,9
1628,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Need to account for allowable '_' within the variant,no,undetermined,0,9
1629,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		return !isOneToMany();,no,undetermined,0,9
1630,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : not sure the best way to handle this. // The non-performant way :,yes,undetermined,7,2
1631,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// wrap up any new collections directly referenced by the object // or its components,no,undetermined,0,9
1632,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Sub-insertions should occur before containing insertion so // Try to do the callback now,no,undetermined,0,9
1633,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//cache the hashcode,no,undetermined,0,9
1634,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//take a snapshot,no,undetermined,0,9
1635,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// otherwise assume the parent is the the criteria that created us,no,undetermined,0,9
1636,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// EARLY EXIT!!!  return so the resolve call explicitly coming from DotNode can // resolve this...,no,undetermined,0,9
1637,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ParameterContainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
1638,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// OPTIMISTIC LOCK MODE,no,undetermined,0,9
1639,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* package-private */,no,undetermined,0,9
1640,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// No additional open braces found in the string, append the // rest of the string in its entirty and quit this loop",no,undetermined,0,9
1641,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// only the identifier property field name can be a reference to the associated entity's PK...,no,undetermined,0,9
1642,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// updateable only because the user did not specify  // anything; just override it,no,undetermined,0,9
1643,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If the first identifier in the path referrs to the class alias (not the class name), then this // is a correlated subselect.  If it's a correlated sub-select, use the existing table alias.  Otherwise // generate a new one.",no,undetermined,0,9
1644,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// don't create a unique key, 'cos some // databases don't like a UK on nullable // columns //getCollectionTable().createUniqueKey( getIdentifier().getConstraintColumns() );",no,undetermined,1,8
1645,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// pre-determine and cache the hashcode,no,undetermined,1,8
1646,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*&& !indexIsFormula*/,no,undetermined,0,9
1647,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Note: For object <-> SQL datatype mappings see: //	 Configuration Manager | Advanced | SQL | System DDL Datatype Mappings // //	TBD	registerColumnType(Types.BINARY,        ""binary($1)""); // changed 08-11-2005, jsl",no,undetermined,1,8
1648,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// NOTE : addDuplicateAlias() already performs nullness checks on the alias.,no,undetermined,0,9
1649,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//Sybase fail if we don't do that, sigh...",no,undetermined,0,9
1650,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//cannot be instantiated,no,undetermined,0,9
1651,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Custom SQL (would be better if these were private),no,undetermined,2,7
1652,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Filter conditions need to be inserted before the HQL where condition and the // theta join node.  This is because org.hibernate.loader.Loader binds the filter parameters first, // then it binds all the HQL query parameters, see org.hibernate.loader.Loader.processFilterParameters().",no,undetermined,0,9
1653,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//60 seconds,no,undetermined,0,9
1654,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Whether this dialect has an Identity clause added to the data type or a completely seperate identity // data type,no,undetermined,1,8
1655,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// starts with a path expression (new style),no,undetermined,0,9
1656,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: make this a bit nicer,yes,undetermined,8,1
1657,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//INITIALIZATION:,no,undetermined,0,9
1658,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// custom sql,no,undetermined,0,9
1659,hibernate-distribution-3.3.2.GA,DEFECT,//TODO: currently we don't know a SessionFactory reference when building the Tuplizer //      THIS IS A BUG (embedded-xml=false on component) // TODO : fix this after HHH-1907 is complete,yes,undetermined,9,0
1660,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// the MRU cache used to keep hard references to the most recently used query plans; // note : LRU here is a bit of a misnomer, it indicates that LRU entries are removed, the // actual kept entries are the MRU entries",no,undetermined,1,8
1661,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//notice that we skip the first table; it is the driving table!,no,undetermined,0,9
1662,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Query parser settings:,no,undetermined,1,8
1663,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// TRIM(end_keyword string-expression-1 FROM string-expression-2) // use Hibernate implementation ""From"" is one of the parameters they pass in position ?3 //registerFunction( ""trim"", new SQLFunctionTemplate(Hibernate.STRING, ""trim(?1 ?2 from ?3)"") );",no,undetermined,0,9
1664,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//we ran out of ids to try,no,undetermined,0,9
1665,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// in an effort to avoid concurrent-modification-exceptions (from // potential recursive calls back through here as a result of the // eventual call to PersistentCollection#endRead), we scan the // internal loadingCollections map for matches and store those matches // in a temp collection.  the temp collection is then used to ""drive"" // the #endRead processing.",no,undetermined,0,9
1666,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//true if this is a query and we are loading multiple instances of the same collection role //otherwise this is a CollectionInitializer and we are loading up a single collection or batch,no,undetermined,0,9
1667,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// POLYMORPHISM,no,undetermined,0,9
1668,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// #3 - note that this is also true of ""datetime - :param""...",no,undetermined,0,9
1669,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// get meta's from <subclass>,no,undetermined,0,9
1670,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Otherwise, try to use the no-arg constructor",no,undetermined,1,8
1671,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If the property is a special collection property name, return a CollectionPropertyMapping.",no,undetermined,0,9
1672,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// or its key changed,no,undetermined,0,9
1673,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// find the batch number associated with the current association, if any.",no,undetermined,0,9
1674,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//for MySQL,no,undetermined,0,9
1675,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: implement functionality //  this might be painful to do here, as the ""join post processing"" for //  the subquery has already been performed (meaning that for //  theta-join dialects, the join conditions have already been moved //  over to the where clause).  A ""simple"" solution here might to //  perform ""join post processing"" once for the entire query (including //  any subqueries) at one fell swoop",yes,undetermined,7,2
1676,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// just ignore,no,undetermined,1,8
1677,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//a newly instantiated collection can't have orphans,no,undetermined,0,9
1678,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Note: this simply constructs a ""raw"" SQL_TOKEN representing the // where fragment and injects this into the tree.  This ""works""; // however it is probably not the best long-term solution. // // At some point we probably want to apply an additional grammar to // properly tokenize this where fragment into constituent parts // focused on the operators embedded within the fragment.",no,undetermined,2,7
1679,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if the identifier is quoted, remove the quotes",no,undetermined,0,9
1680,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Access cached SQL,no,undetermined,0,9
1681,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//processCollectionProperty(token, q.getCollectionPersister(collectionRole), collectionName);",no,undetermined,0,9
1682,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if the hibernate-mapping did not specify a schema/catalog, use the defaults //specified by properties - but note that if the schema/catalog were specified //in hibernate-mapping, or as params, they will already be initialized and //will override the values set here (they are in identifierGeneratorProperties)",no,undetermined,0,9
1683,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// getfield // get field ""$JAVASSIST_CALLBACK"" defined already",no,undetermined,0,9
1684,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : what amount of significant digits need to be supported here? //      - from the DecimalFormat docs: //          [significant digits] = [minimum integer digits] + [maximum fraction digits],yes,undetermined,9,0
1685,hibernate-distribution-3.3.2.GA,DESIGN,// todo : we can remove this once the deprecated ctor can be made private...,yes,undetermined,8,1
1686,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if we get here, it is possible that we have a proxy 'in the way' of the merge map resolution... // 		NOTE: decided to put this here rather than in the above loop as I was nervous about the performance //		of the loop-in-loop especially considering this is far more likely the 'edge case'",no,undetermined,1,8
1687,hibernate-distribution-3.3.2.GA,DESIGN,//name from a super query (a bit inelegant that it shows up here),yes,undetermined,1,8
1688,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//		registerColumnType( Types.VARCHAR, 16777215, ""mediumtext"" );",no,undetermined,0,9
1689,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// (EQ NULL b) => (IS_NULL b),no,undetermined,0,9
1690,hibernate-distribution-3.3.2.GA,DESIGN,"// turn hibernate.c3p0.* into c3p0.*, so c3p0 // gets a chance to see all hibernate.c3p0.*",yes,undetermined,0,9
1691,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Add the type to the list of returned sqlResultTypes.,no,undetermined,0,9
1692,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//note that each iteration of the loop may add new elements,no,undetermined,0,9
1693,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// try the parent FromClause...,no,undetermined,0,9
1694,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//noop,no,undetermined,0,9
1695,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we have the form: trim(trimSource) //      so we trim leading and trailing spaces // EARLY EXIT!!!!,no,undetermined,0,9
1696,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Make sure this is a defined parameter and check the incoming value type,no,undetermined,1,8
1697,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// long,no,undetermined,0,9
1698,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//return lhsPersister.getSubclassPropertyColumnNames(property);,no,undetermined,0,9
1699,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// orphans should be deleted during save/update,no,undetermined,0,9
1700,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// property name is a sub-path of a component...,no,undetermined,0,9
1701,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//$NON-NLS-1,no,undetermined,0,9
1702,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// get the elements back into the target making sure to handle dirty flag,no,undetermined,0,9
1703,hibernate-distribution-3.3.2.GA,DESIGN,// would be great to move all this below here into another method that could also be used // from the new scrolling stuff. // // Would need to change the way the max-row stuff is handled (i.e. behind an interface) so // that I could do the control breaking at the means to know when to stop,yes,undetermined,2,7
1704,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//not absolutely necessary, but helps for some //equals()/hashCode() implementations",no,undetermined,0,9
1705,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we have a placeholder, spin forward till we find the end",no,undetermined,0,9
1706,hibernate-distribution-3.3.2.GA,DESIGN,//The class is now way to complex!,yes,undetermined,1,8
1707,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//not really necessary, but good for consistency...",no,undetermined,1,8
1708,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// the database now holds a lock + the object is flushed from the cache, // so release the soft lock",no,undetermined,1,8
1709,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If the from element represents a JOIN_FRAGMENT and it is // a theta-style join, convert its type from JOIN_FRAGMENT // to FROM_FRAGMENT",no,undetermined,0,9
1710,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// -- Loader implementation --,no,undetermined,0,9
1711,hibernate-distribution-3.3.2.GA,DESIGN,// get the right object from the list ... would it be easier to just call getEntity() ??,yes,undetermined,0,9
1712,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// nothing to do		,no,undetermined,0,9
1713,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*sqlResultTypeList,*/",no,undetermined,0,9
1714,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// stream closed in the finally,no,undetermined,0,9
1715,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If this return's alias has not been processed yet, do so b4 further processing of this return",no,undetermined,0,9
1716,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_1 // load callback,no,undetermined,0,9
1717,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		settings.setFormatSqlEnabled(formatSql);,no,undetermined,1,8
1718,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Invoke setScalarColumnText on each constructor argument.,no,undetermined,1,8
1719,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//TODO: eventually, rowIdName[j]",no,undetermined,8,1
1720,hibernate-distribution-3.3.2.GA,DESIGN,"//note that this method could easily be moved up to BasicEntityPersister, //if we ever needed to reuse it from other subclasses",yes,undetermined,1,8
1721,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//cannot instantiate,no,undetermined,0,9
1722,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*(array==null) ? tempList.size() :*/,no,undetermined,0,9
1723,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//noop,no,undetermined,0,9
1724,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: create uk loaders for component properties,yes,undetermined,9,0
1725,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// stream closed in the finally,no,undetermined,0,9
1726,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//( (Column) sc.getTable().getPrimaryKey().getColumnIterator().next() ).getName();,no,undetermined,0,9
1727,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// properties that we have tried to load, and not found in the database",no,undetermined,0,9
1728,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// 60 seconds,no,undetermined,0,9
1729,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if everything went ok, commit the transaction and close the obtained // connection handle...",no,undetermined,0,9
1730,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// a ""detached"" collection that originally belonged to the same entity",no,undetermined,0,9
1731,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The path may be a reference to an alias defined in the parent query.,no,undetermined,1,8
1732,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* local variables | target obj | each oldvalue | */,no,undetermined,1,8
1733,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Create a new THETA_JOINS node as a parent of all filters,no,undetermined,0,9
1734,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: is there a better way?,yes,undetermined,8,1
1735,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//final boolean forceCacheRefresh,",no,undetermined,1,8
1736,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// new,no,undetermined,0,9
1737,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// local cache, so we use synchronization",no,undetermined,1,8
1738,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// now rebuild the insertions list. There is a batch for each entry in the name list.,no,undetermined,0,9
1739,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// named parameter,no,undetermined,0,9
1740,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// properties,no,undetermined,0,9
1741,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Write the values of fields onto the prepared statement - we MUST use the state at the time the // insert was issued (cos of foreign key constraints). Not necessarily the object's current state,no,undetermined,0,9
1742,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: if lock.getTimestamp().equals(ts),yes,undetermined,9,0
1743,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//starts with 1, implicitly",no,undetermined,1,8
1744,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Transaction settings:,no,undetermined,1,8
1745,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//check if the detached object being merged is the parent,no,undetermined,0,9
1746,hibernate-distribution-3.3.2.GA,DESIGN,"// work around that crazy issue where the tree contains // ""empty"" FromElements (no text); afaict, this is caused // by FromElementFactory.createCollectionJoin()",yes,undetermined,1,8
1747,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Re-arrange the tree so that the collection function is the root and the lhs is the path.,no,undetermined,0,9
1748,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Make sure we don't override previous set values,no,undetermined,0,9
1749,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// it is possible for this method to be called during flush processing, // so make certain that we do not accidently initialize an uninitialized proxy",no,undetermined,0,9
1750,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: to handle concurrent writes correctly, the client should pass in a Lock",yes,undetermined,8,1
1751,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Generate an 2d array of column names, the first dimension is parallel with the // return types array.  The second dimension is the list of column names for each // type.",no,undetermined,0,9
1752,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// intentionally empty,no,undetermined,0,9
1753,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//		TypeFactory.deepCopy( currentState, propTypes, persister.getPropertyUpdateability(), deletedState, session );",no,undetermined,0,9
1754,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// use the id assigned to the instance,no,undetermined,0,9
1755,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// for dialects which are known to not support ANSI-SQL row-value-constructor syntax, // we should mutate the tree.",no,undetermined,0,9
1756,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*implied*/,no,undetermined,0,9
1757,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ATTRIBUTES USED ONLY DURING FLUSH CYCLE,no,undetermined,0,9
1758,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// performance op to avoid the array search,no,undetermined,0,9
1759,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	public BytecodeProvider getBytecodeProvider() { //		return bytecodeProvider; //	} // //	void setBytecodeProvider(BytecodeProvider bytecodeProvider) { //		this.bytecodeProvider = bytecodeProvider; //	},no,undetermined,0,9
1760,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//check if the managed object is the parent,no,undetermined,0,9
1761,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// TODO : temporary initial step towards HHH-1907,yes,undetermined,9,0
1762,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// 23000: Check constraint violation: {0} // 23001: Unique index or primary key violation: {0},no,undetermined,0,9
1763,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// user supplied JDBC connections,no,undetermined,0,9
1764,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//operations which cascade as far as the collection also cascade to collection elements,no,undetermined,0,9
1765,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The CollectionEntry.isReached() stuff is just to detect any silly users   // who set up circular or shared references between/to collections.,no,undetermined,1,8
1766,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// local cache, so we use synchronization",no,undetermined,1,8
1767,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//SessionFactory name:,no,undetermined,0,9
1768,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//SQL statements,no,undetermined,0,9
1769,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// before any callbacks, etc, so subdeletions see that this deletion happened first",no,undetermined,1,8
1770,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// A container for collections we load up when the owning entity is not // yet loaded ... for now, this is purely transient!",no,undetermined,1,8
1771,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// no foreign key element of for a one-to-many,no,undetermined,0,9
1772,hibernate-distribution-3.3.2.GA,DESIGN,// todo : what is the implication of this?,yes,undetermined,7,2
1773,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// it is a simple table alias {foo},no,undetermined,0,9
1774,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// *** Sequence methods - start. The RDMS dialect needs these,no,undetermined,1,8
1775,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//tableName = mappings.getNamingStrategy().propertyToTableName( className, path );",no,undetermined,0,9
1776,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// System Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
1777,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// float,no,undetermined,0,9
1778,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//do not use proxiesByKey, since not all //proxies that point to this session's //instances are in that collection!",no,undetermined,0,9
1779,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// IMPL NOTE : due to the delayed population of setters (setters cached // 		for performance), we really cannot pro0perly define equality for // 		this transformer",no,undetermined,0,9
1780,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//HashMap columnsUnique = new HashMap();,no,undetermined,0,9
1781,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : most of below was taken verbatim from DotNode; should either delegate this logic or super-type it,yes,undetermined,9,0
1782,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// mappings might contain either the ""raw"" extends name (in the case of // an entity-name mapping) or a FQN (in the case of a POJO mapping).",no,undetermined,0,9
1783,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// create new lock that times out immediately,no,undetermined,0,9
1784,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: is this a bit ugly?,yes,undetermined,8,1
1785,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*ArrayList list = new ArrayList();
			list.addAll( getKey().getConstraintColumns() );
			list.addAll( getIndex().getConstraintColumns() );
			getCollectionTable().createUniqueKey(list);*/",no,undetermined,0,9
1786,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// *return // each type,no,undetermined,0,9
1787,hibernate-distribution-3.3.2.GA,DESIGN,//TODO:refactor + make this method private,yes,undetermined,8,1
1788,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: theoretically non-threadsafe...,yes,undetermined,5,4
1789,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if we instantiate a collection during the flush() process, // we must ignore it for the rest of the flush()",no,undetermined,0,9
1790,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// explicitly perform no checking...,no,undetermined,0,9
1791,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// during flush, we navigate the object graph to // collections and decide what to do with them",no,undetermined,0,9
1792,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: remove use of instanceof!,yes,undetermined,9,0
1793,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// assume this ident's text does *not* refer to a property on the given persister,no,undetermined,0,9
1794,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//always do an INSERT, and let it fail by constraint violation",no,undetermined,0,9
1795,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// here, we have two possibilities: // 		1) the property-name matches the explicitly identifier property name //		2) the property-name matches the implicit 'id' property name",no,undetermined,0,9
1796,hibernate-distribution-3.3.2.GA,DESIGN,// todo : we can remove this once the deprecated ctor can be made private...,yes,undetermined,8,1
1797,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//important: reuse the same event instances for performance!,no,undetermined,0,9
1798,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// boolean, byte, char, int, short",no,undetermined,0,9
1799,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Handle actions,no,undetermined,0,9
1800,hibernate-distribution-3.3.2.GA,DESIGN,//workaround for WebLogic,yes,undetermined,7,2
1801,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This method should be implemented assuming it's valid to  // do start/stop/start -- leave state appropriate for another start,no,undetermined,1,8
1802,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// not final-static to avoid possible classcast exceptions if using different oracle drivers.,no,undetermined,1,8
1803,hibernate-distribution-3.3.2.GA,DESIGN,"// for DOM4J ""collections"" only // TODO: it would be better if this was done at the higher level by Printer",yes,undetermined,8,1
1804,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Delegate to the QueryLoader...,no,undetermined,0,9
1805,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// nothing to do; even if the operand is a parameter, no way we could // infer an appropriate expected type here",no,undetermined,1,8
1806,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//just a performance opt!,no,undetermined,1,8
1807,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//may be final,no,undetermined,2,7
1808,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Append the stem to the proxool pool alias,no,undetermined,0,9
1809,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// make a new one,no,undetermined,0,9
1810,hibernate-distribution-3.3.2.GA,DEFECT,"//TODO: entities CAN be compared, by PK and entity name, fix this!",yes,undetermined,9,0
1811,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// We now have the value of the property-ref we reference.  However, // we need to dig a little deeper, as that property might also be // an entity type, in which case we need to resolve its identitifier",no,undetermined,0,9
1812,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Clone //-----------------------------------------------------------------------,no,undetermined,0,9
1813,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: need some caching scheme? really comes down to decision  //      regarding amount of state (if any) kept on PropertyAccessors,yes,undetermined,9,0
1814,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
1815,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//no pointbase BIT,no,undetermined,0,9
1816,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Write HTML footer,no,undetermined,0,9
1817,hibernate-distribution-3.3.2.GA,DESIGN,// Do we need to qualify index names with the schema name?,yes,undetermined,0,9
1818,hibernate-distribution-3.3.2.GA,DESIGN,// FIXME Hacky workaround to JBCACHE-1202,yes,undetermined,8,1
1819,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// for deprecated saveOrUpdateCopy(),no,undetermined,1,8
1820,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// remove the current element from insertions. It will be added back later.,no,undetermined,0,9
1821,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// should probably no-op commit/rollback here, at least in JTA scenarios",no,undetermined,2,7
1822,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// get the updated snapshot of the entity state by cloning current state; // it is safe to copy in place, since by this time no-one else (should have) // has a reference  to the array",no,undetermined,1,8
1823,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// checkcast,no,undetermined,0,9
1824,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Otherwise, it's a literal.",no,undetermined,1,8
1825,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the mapping of entity names to their latest batch numbers.,no,undetermined,0,9
1826,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we have a CGLIB enhanced entity,no,undetermined,0,9
1827,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//int count = 0;,no,undetermined,0,9
1828,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Default implementation: // If this node has a data type, and that data type is not an association, then this is scalar.",no,undetermined,1,8
1829,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// now update all changed or added rows fks,no,undetermined,0,9
1830,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: reuse the PreLoadEvent,yes,undetermined,8,1
1831,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//""as"" is not in KEYWORDS",no,undetermined,0,9
1832,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Identity map of EntityEntry instances, by the entity instance",no,undetermined,0,9
1833,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Add to the query spaces.,no,undetermined,0,9
1834,hibernate-distribution-3.3.2.GA,DESIGN,// implicit joins are always(?) ok to reuse,yes,undetermined,0,9
1835,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// boolean, byte, char, int, short",no,undetermined,0,9
1836,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//only needed during compilation phase...,no,undetermined,0,9
1837,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// AbstractSelectingDelegate impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
1838,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// GENERATOR,no,undetermined,0,9
1839,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// actual cache of the entries.  soft references are used for both the keys and the // values here since the values pertaining to the MRU entries are kept in a // seperate hard reference cache (to avoid their enqueuement/garbage-collection).,no,undetermined,0,9
1840,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//there _was_ a select clause,no,undetermined,0,9
1841,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//do two passes, for collection property-ref!",no,undetermined,1,8
1842,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
1843,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// as soon as we encounter our first letter, return the substring // from that position",no,undetermined,0,9
1844,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//TODO: we could just return all false...,no,undetermined,9,0
1845,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//we must use the ""remembered"" uk value, since it is  //not available from the EntityEntry during assembly",no,undetermined,0,9
1846,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//a ""detached"" collection!",no,undetermined,0,9
1847,hibernate-distribution-3.3.2.GA,DEFECT,// this call is side-effecty,yes,undetermined,0,9
1848,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// IDENTITY support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
1849,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we need to utilize dynamic delete statements,no,undetermined,0,9
1850,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//swallow it (the transaction _was_ successful or successfully rolled back),no,undetermined,0,9
1851,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// collections cannot be compared,no,undetermined,0,9
1852,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload 5 // load exception,no,undetermined,0,9
1853,hibernate-distribution-3.3.2.GA,DESIGN,"// polymorphism not really handled completely correctly, // perhaps...well, actually its ok, assuming that the // entity name used in the lookup is the same as the // the one used here, which it will be",yes,undetermined,0,9
1854,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Numeric Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
1855,hibernate-distribution-3.3.2.GA,DESIGN,// we may be screwed here since the collection action is about to execute // and we do not know the final owner key value,yes,undetermined,1,8
1856,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// --Commented out by Inspection (12/4/04 9:10 AM): public abstract void addCondition(String alias, String[] columns, String condition);",no,undetermined,0,9
1857,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if its the root criteria, we are done",no,undetermined,0,9
1858,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//INITIALIZATION:,no,undetermined,0,9
1859,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//skip the driving table,no,undetermined,0,9
1860,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// case of non-static field,no,undetermined,0,9
1861,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the referenced node text is the special 'id',no,undetermined,0,9
1862,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//allow any identifier quoted with backtick //only recognizes identifiers beginning with a letter,no,undetermined,1,8
1863,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// context-entity-identifier returns null explicitly if the entity // is not associated with the persistence context; so make some // deeper checks...,no,undetermined,0,9
1864,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// --------------------------------------------------------- Public Methods,no,undetermined,0,9
1865,hibernate-distribution-3.3.2.GA,DESIGN,// TODO: an alternative is to check if the owner has changed; if it hasn't then // get the ID from collection.getOwner(),yes,undetermined,9,0
1866,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// (NOT (IS_NOT_NULL a b) ) => (IS_NULL a b),no,undetermined,2,7
1867,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if there is a user-specified loader, return that //TODO: filters!?",no,undetermined,8,1
1868,hibernate-distribution-3.3.2.GA,DEFECT,//note that this implementation is kinda broken //for components with many-to-one associations,yes,undetermined,0,9
1869,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// both many-to-one and one-to-one are represented as a // Property.  EntityPersister is relying on this value to // determine ""lazy fetch groups"" in terms of field-level // interception.  So we need to make sure that we return // true here for the case of many-to-one and one-to-one // with lazy=""no-proxy"" // // * impl note - lazy=""no-proxy"" currently forces both // lazy and unwrap to be set to true.  The other case we // are extremely interested in here is that of lazy=""proxy"" // where lazy is set to true, but unwrap is set to false. // thus we use both here under the assumption that this // return is really only ever used during persister // construction to determine the lazy property/field fetch // groupings.  If that assertion changes then this check // needs to change as well.  Partially, this is an issue with // the overloading of the term ""lazy"" here...",no,undetermined,0,9
1870,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if we only returned one entity, query by key is more efficient",no,undetermined,1,8
1871,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO : safe to interpret ""map.remove(key) == null"" as non-dirty?",yes,undetermined,8,1
1872,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// use setParameter for null values,no,undetermined,0,9
1873,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//NONE, because its the requested lock mode, not the actual! ",no,undetermined,0,9
1874,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// cascade first, so that all unsaved objects get their // copy created before we actually copy",no,undetermined,0,9
1875,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: formulas ?,yes,undetermined,4,5
1876,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This is now handled earlier in this method.,no,undetermined,1,8
1877,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// otherwise, we only need to flush if there are in-memory changes // to the queried tables",no,undetermined,2,7
1878,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This causes the factory to instantiate the desired class.,no,undetermined,0,9
1879,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// collections ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
1880,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//GENERATE THE SQL:,no,undetermined,0,9
1881,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Simple tests that require no synchronization,no,undetermined,0,9
1882,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// this property belongs to the table and it is not specifically // excluded from optimistic locking by optimistic-lock=""false""",no,undetermined,0,9
1883,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//optimization,no,undetermined,0,9
1884,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//default mode,no,undetermined,0,9
1885,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: is there a more elegant way than downcasting?,yes,undetermined,8,1
1886,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// DDL support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
1887,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//the following two lines were added to ensure that this.params is not null, which //can happen with two-deep nested subqueries",no,undetermined,0,9
1888,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// PROPERTIES,no,undetermined,0,9
1889,hibernate-distribution-3.3.2.GA,DESIGN,// TODO: an alternative is to check if the owner has changed; if it hasn't then // return collection.getOwner(),yes,undetermined,9,0
1890,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ldc // name of the field,no,undetermined,0,9
1891,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// amazingly, these two will work because AbstractCollection // uses iterator() to fill the array",no,undetermined,0,9
1892,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// iconst_i // continue to aastore // growing stack is 1,no,undetermined,0,9
1893,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: avoid this for non-new instances where mightBeDirty==false,yes,undetermined,8,1
1894,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//alias may be null //EARLY EXIT,no,undetermined,1,8
1895,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: this needn't exclude subclasses...,yes,undetermined,8,1
1896,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//starts with 1, implicitly",no,undetermined,1,8
1897,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// seems to not really... //	public boolean supportsRowValueConstructorSyntax() { //		return true; //	},no,undetermined,1,8
1898,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* static methods only - hide constructor */,no,undetermined,0,9
1899,hibernate-distribution-3.3.2.GA,DESIGN,"/**
 * Provides query splitting methods, which were originally in QueryTranslator.
 * <br>
 * TODO: This will need to be refactored at some point.
 *
 * @author josh
 */",yes,undetermined,7,2
1900,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if the property mapping consists of all formulas,  // make it insertable",no,undetermined,0,9
1901,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// can't cache this stuff either (per-invocation) // we are given a map of user-alias -> lock mode // create a new map of sql-alias -> lock mode,no,undetermined,0,9
1902,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//for EJB3,no,undetermined,0,9
1903,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// First, collect all of the select expressions. // NOTE: This must be done *before* invoking setScalarColumnText() because setScalarColumnText() // changes the AST!!!",no,undetermined,0,9
1904,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Bind the filters,no,undetermined,0,9
1905,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : should remove this exposure //  and have all references to the session's batcher use the ConnectionManager.,yes,undetermined,8,1
1906,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If this dot has already been resolved, stop now.",no,undetermined,2,7
1907,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// not really a many-to-one association *necessarily*,no,undetermined,1,8
1908,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// note: interfaces is assumed to already contain HibernateProxy.class,no,undetermined,0,9
1909,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// initialize the Set of queried identifier spaces (ie. tables),no,undetermined,0,9
1910,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* local variables | target obj | each oldvalue | */,no,undetermined,1,8
1911,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If we've been blocking for the mutex, perhaps another // thread has already reestablished the root. // In case the node was reestablised via replication, confirm it's  // marked ""resident"" (a status which doesn't replicate)",no,undetermined,1,8
1912,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// this assumes schema support, which is present in 1.8.0 and later...",no,undetermined,0,9
1913,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//NOTE: we avoid joining to the next table if the named property is just the foreign key value,no,undetermined,0,9
1914,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//do nothing,no,undetermined,0,9
1915,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*package*/,no,undetermined,0,9
1916,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this is equivalent to the old behavior...,no,undetermined,0,9
1917,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//check basic level one nullablilty,no,undetermined,0,9
1918,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//QueryJoinFragment join = q.createJoinFragment(useThetaStyleJoin);,no,undetermined,0,9
1919,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Parse the query string into an HQL AST.,no,undetermined,0,9
1920,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Generate the inner join -- The elements need to be joined to the collection they are in.,no,undetermined,0,9
1921,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// *load_1 // each type,no,undetermined,0,9
1922,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Set USE_REFLECTION_OPTIMIZER to false to fix HHH-227,no,undetermined,1,8
1923,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// JOINS,no,undetermined,0,9
1924,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// an ""embedded"" component (composite ids and unique) // note that this does not handle nested components",no,undetermined,0,9
1925,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//tolerates nulls,no,undetermined,0,9
1926,hibernate-distribution-3.3.2.GA,DESIGN,"/**
     * FIXME Per the RegionFactory class Javadoc, this constructor version
     * should not be necessary.
     * 
     * @param props The configuration properties
     */",yes,undetermined,7,2
1927,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if debug level is enabled, then log the password, otherwise mask it",no,undetermined,0,9
1928,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// features which remain constant across 8i, 9i, and 10g ~~~~~~~~~~~~~~~~~~",no,undetermined,0,9
1929,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if the original is a PersistentCollection, and that original // was not flagged as dirty, then reset the target's dirty flag // here after the copy operation. // </p> // One thing to be careful of here is a ""bare"" original collection // in which case we should never ever ever reset the dirty flag // on the target because we simply do not know...",no,undetermined,0,9
1930,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// not null is implicit,no,undetermined,1,8
1931,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// no auto-flushing to support in stateless session,no,undetermined,0,9
1932,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Interceptor returned null, so do the dirtycheck ourself, if possible",no,undetermined,0,9
1933,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Let return-propertys override whatever the persister has for aliases.,no,undetermined,0,9
1934,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
1935,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//we only check the version when _upgrading_ lock modes,no,undetermined,0,9
1936,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// keyword support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
1937,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//cache the hashcode,no,undetermined,0,9
1938,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// float,no,undetermined,0,9
1939,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// cannot handle single quotes,no,undetermined,0,9
1940,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
1941,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//before cascade!,no,undetermined,0,9
1942,hibernate-distribution-3.3.2.GA,DESIGN,// is this really necessary?,yes,undetermined,0,9
1943,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//MULTITABLES,no,undetermined,0,9
1944,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Use the delegate, resolve identifiers as FROM element aliases.",no,undetermined,0,9
1945,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// invokevirtual,no,undetermined,0,9
1946,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// ""finish off"" the join",no,undetermined,0,9
1947,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//handle <=, >=, !=, is not, not between, not in",no,undetermined,2,7
1948,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// kept for backward compatibility until after the 3.1beta5 release of HA,no,undetermined,1,8
1949,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// synchronized to avoid multi-thread access issues; defined as method synch to avoid // potential deadlock issues due to nature of code.,no,undetermined,0,9
1950,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//If the object is already loaded, return the loaded one",no,undetermined,0,9
1951,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// cached for efficiency...,no,undetermined,0,9
1952,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// (NOT (EQ a b) ) => (NE a b),no,undetermined,2,7
1953,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we have not yet hit the last result...,no,undetermined,1,8
1954,hibernate-distribution-3.3.2.GA,DESIGN,"//before cascade! //TODO: should this be Session.instantiate(Persister, ...)?",yes,undetermined,9,0
1955,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Add the second join, the one that ends in the destination table.",no,undetermined,0,9
1956,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// there were no queued additions // and the role has a cache,no,undetermined,0,9
1957,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// No batch statements,no,undetermined,0,9
1958,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// cascade the refresh prior to refreshing this entity,no,undetermined,0,9
1959,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : absolutely no usages of this constructor form; can it go away?,yes,undetermined,8,1
1960,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// get meta's from <hibernate-mapping>,no,undetermined,0,9
1961,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// validate() instances of Validatable,no,undetermined,0,9
1962,hibernate-distribution-3.3.2.GA,DESIGN,// short cut check...,yes,undetermined,0,9
1963,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: get SQL rendering out of this package!,yes,undetermined,8,1
1964,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// DYNAMIC UPDATE,no,undetermined,0,9
1965,hibernate-distribution-3.3.2.GA,DESIGN,"/**
     * FIXME Per the RegionFactory class Javadoc, this constructor version
     * should not be necessary.
     * 
     * @param props The configuration properties
     */",yes,undetermined,7,2
1966,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// checkcast // cast bean,no,undetermined,0,9
1967,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// VERSION UNSAVED-VALUE,no,undetermined,0,9
1968,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//ELEMENT,no,undetermined,0,9
1969,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// log a message about potential connection leaks,no,undetermined,0,9
1970,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if we are inside a new Result(), but not inside a nested function",no,undetermined,0,9
1971,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
1972,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// float,no,undetermined,0,9
1973,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// register synch; stats.connect(),no,undetermined,0,9
1974,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// For the case of dynamic-insert=""true"", we need to generate the INSERT SQL",no,undetermined,0,9
1975,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// no need to even collect this information if the persister is considered multi-table,no,undetermined,0,9
1976,hibernate-distribution-3.3.2.GA,DESIGN,// this is called by SessionFactory irregardless; we just disregard here; // could also add a check to SessionFactory to only conditionally call stop,yes,undetermined,1,8
1977,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//we must clone embedded composite identifiers, or  //we will get back the same instance that we pass in",no,undetermined,0,9
1978,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : remove these last two as batcher is no longer managing connections,yes,undetermined,9,0
1979,hibernate-distribution-3.3.2.GA,DESIGN,//PostLoad is needed for EJB3 //TODO: reuse the PostLoadEvent...,yes,undetermined,9,0
1980,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// note that for sequential scrolling, we make the assumption that // the first persister element is the ""root entity""",no,undetermined,0,9
1981,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// HSQLDB only supports READ_UNCOMMITTED transaction isolation,no,undetermined,0,9
1982,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//then by id,no,undetermined,0,9
1983,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//ie. no select clause,no,undetermined,0,9
1984,hibernate-distribution-3.3.2.GA,DESIGN,// TODO Is this a valid operation on a timestamps cache?,yes,undetermined,8,1
1985,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if there is no property-ref, assume the join //is to the subclass table (ie. the table of the //subclass that the association belongs to)",no,undetermined,0,9
1986,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Sometimes use the element table alias, sometimes use the... umm... collection table alias (many to many)",no,undetermined,1,8
1987,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//slice, to get the columns for this component //property",no,undetermined,0,9
1988,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : this really needs to be delayed unitl after we definitively know all node types // where this is currently a problem is parameters for which where we cannot unequivocally // resolve an expected type,yes,undetermined,8,1
1989,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// assumes that types are all of span 1,no,undetermined,0,9
1990,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// for an any // we will have to use reflection,no,undetermined,0,9
1991,hibernate-distribution-3.3.2.GA,DESIGN,// todo : potentially look at optimizing these two arrays,yes,undetermined,9,0
1992,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Ensures that containing deletions happen before sub-deletions,no,undetermined,0,9
1993,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// see if the entry represents a class file,no,undetermined,0,9
1994,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// should be safe to only ever expect EntityPersister references here,no,undetermined,0,9
1995,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// DDL support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
1996,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Generate the property select tokens.,no,undetermined,0,9
1997,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// getfield // old value of the field,no,undetermined,0,9
1998,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		 You may still have other ResultSets or update counts left to process here  //		 but you can't do it now or the ResultSet you just got will be closed ,no,undetermined,1,8
1999,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ResultSet impl (delegated) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
2000,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// set up second pass,no,undetermined,0,9
2001,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// todo : cache this sql...,yes,undetermined,8,1
2002,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//columnUpdateability.length==0 ||,no,undetermined,0,9
2003,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// First allow the actual type to control the return value. (the actual underlying sqltype could actually be different),no,undetermined,0,9
2004,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*&& !('_'==character)*/,no,undetermined,0,9
2005,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: *two* hashmap lookups here is one too many...,yes,undetermined,9,0
2006,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// now anything that is not a HQL keyword,no,undetermined,0,9
2007,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// (NOT (NOT_BETWEEN a b) ) => (BETWEEN a b),no,undetermined,0,9
2008,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
2009,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
2010,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO check there is no actual definition elemnents when a ref is defined,yes,undetermined,9,0
2011,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//skip the FROM keyword in params,no,undetermined,0,9
2012,hibernate-distribution-3.3.2.GA,DESIGN,// Do we need to drop constraints before dropping tables in this dialect?,yes,undetermined,0,9
2013,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: deprecated, remove eventually",yes,undetermined,9,0
2014,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//checking for named queries,no,undetermined,1,8
2015,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Otherwise, this is a primitive type.",no,undetermined,2,7
2016,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Add a space before the display text.,no,undetermined,0,9
2017,hibernate-distribution-3.3.2.GA,DESIGN,// yuck!,yes,undetermined,2,7
2018,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Delegate to the QueryLoader...,no,undetermined,0,9
2019,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// NativeSQL: collect key column and auto-aliases,no,undetermined,0,9
2020,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If that didn't work, try using the 'import' name.",no,undetermined,0,9
2021,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// check to see if our ""propPath"" actually // represents a property on the persister",no,undetermined,0,9
2022,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//sqlResultTypes = selectClause.getSqlResultTypes();,no,undetermined,0,9
2023,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: Yuck! This is not quite good enough, it's a quick //hack around the problem of having a to-one association //that refers to an embedded component:",yes,undetermined,9,0
2024,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// SEQUENCE support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
2025,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// bad type,no,undetermined,0,9
2026,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Create the join element under the from element.,no,undetermined,0,9
2027,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Collection Types:,no,undetermined,0,9
2028,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// do not auto-flush while outside a transaction,no,undetermined,0,9
2029,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,///////////////////////////////////////////////////////////////////////////,no,undetermined,0,9
2030,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// for non-inverse one-to-many, with a not-null fk, add a backref!",no,undetermined,0,9
2031,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// dup,no,undetermined,0,9
2032,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// todo : remove this once ComponentMetamodel is complete and merged,yes,undetermined,8,1
2033,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// ""current"" means the reference that was found during flush() ",no,undetermined,0,9
2034,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//its already loaded so don't need to hydrate it,no,undetermined,0,9
2035,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//sqlResultTypeList.addAll( constructorArgumentTypeList );,no,undetermined,0,9
2036,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// loading collection xrefs ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
2037,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// long,no,undetermined,0,9
2038,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//only collections belonging to deleted entities are allowed to be dereferenced in the case of orphan delete,no,undetermined,0,9
2039,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The loop ensures atomicity of the // select + update even for no transaction // or read committed isolation level,no,undetermined,0,9
2040,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//			ps.close(); //just close it; do NOT try to return it to the pool! //NOTE: early exit!,no,undetermined,0,9
2041,hibernate-distribution-3.3.2.GA,DESIGN,"//init the table here instead of earlier, so that we can get a quoted table name //TODO: would it be better to simply pass the qualified table name, instead of //      splitting it up into schema/catalog/table names",yes,undetermined,8,1
2042,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//otherwise return the ""hydrated"" state (ie. associations are not resolved)",no,undetermined,2,7
2043,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// register in exception table,no,undetermined,0,9
2044,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// logic operators by definition resolve to booleans,no,undetermined,1,8
2045,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// otherwise:,no,undetermined,1,8
2046,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//TODO:,no,undetermined,4,5
2047,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// NOTE : firstRow is zero-based,no,undetermined,0,9
2048,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Validate that an alias name was provided to determine which pool to use,no,undetermined,0,9
2049,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// areturn // return the value of the field,no,undetermined,0,9
2050,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//a proxy cannot be transient and it breaks ForeignKeys.isTransient,no,undetermined,0,9
2051,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// joined subclasses,no,undetermined,0,9
2052,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If JBC is using INVALIDATION, we don't want to propagate changes. // We use the Timestamps cache to manage invalidation",no,undetermined,1,8
2053,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// properties of this class, including inherited properties",no,undetermined,0,9
2054,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//60 seconds,no,undetermined,0,9
2055,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// currently only the Hibernate-supplied DbTimestampType is supported here,no,undetermined,0,9
2056,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if the version of a newly instantiated object is not the same // as the version seed value, use that as the unsaved-value",no,undetermined,0,9
2057,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//assembled state gets put in a new array (we read from cache by value!),no,undetermined,0,9
2058,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//following doesn't handle (null, not null) but unnecessary //since this would mean all rows",no,undetermined,0,9
2059,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//used also for generation of FK names!,no,undetermined,0,9
2060,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// make the session available to the session factory's ""current context""",no,undetermined,0,9
2061,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,///////////////////////////////////////////////////////////////////////,no,undetermined,0,9
2062,hibernate-distribution-3.3.2.GA,DEFECT,"// RDMS does not directly support the trim() function, we use rtrim() and ltrim()",yes,undetermined,0,9
2063,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//we need to check even if it was not initialized, because of delayed adds!",no,undetermined,0,9
2064,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// at this point we have (drivingSqlAlias) the SQL alias of the driving table // corresponding to the given user alias.  However, the driving table is not // (necessarily) the table against which we want to apply locks.  Mainly, // the exception case here is joined-subclass hierarchies where we instead // want to apply the lock against the root table (for all other strategies, // it just happens that driving and root are the same).",no,undetermined,0,9
2065,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we need to dirty check collections, since they can cause an owner // version number increment",no,undetermined,0,9
2066,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we have something like : ""lhs [op] ?""",no,undetermined,1,8
2067,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		origin.addDestination(destination); // Add the query spaces.,no,undetermined,0,9
2068,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//isSet = collection.isSet(); //isSorted = collection.isSorted();,no,undetermined,0,9
2069,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// add normal properties,no,undetermined,0,9
2070,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Statistics and logging:,no,undetermined,0,9
2071,hibernate-distribution-3.3.2.GA,DESIGN,"// This, is used by SessionFactoryImpl to hand to the generated SessionImpl; // was the only reason I could see that we cannot just use null as // Settings.cacheProvider",yes,undetermined,2,7
2072,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,/////////////////////////////////////////////////////////////////////// // TODO : look at perhaps caching this...,yes,undetermined,8,1
2073,hibernate-distribution-3.3.2.GA,DESIGN,//this is kinda the best we can do...,yes,undetermined,1,8
2074,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// otherwise (subquery case) dont reuse the fromElement if we are processing the from-clause of the subquery,no,undetermined,0,9
2075,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// naked property-refs cannot be used with an aliased from element,no,undetermined,0,9
2076,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// first, lets determine whether to apply cglib or javassist based instrumentation...",no,undetermined,0,9
2077,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
2078,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// *load_1,no,undetermined,0,9
2079,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Get an exclusive right to update JBC for this key from this node.,no,undetermined,0,9
2080,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Start performing the updates,no,undetermined,0,9
2081,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//sqlResultTypeList.add( type );,no,undetermined,0,9
2082,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: should we use SELECT .. FOR UPDATE?,yes,undetermined,8,1
2083,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// prepare and execute the insert,no,undetermined,0,9
2084,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Show the modified AST.,no,undetermined,0,9
2085,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Case 2: The current token is after FROM and before '.'.,no,undetermined,0,9
2086,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO : probably better to calculate these and pass them in, as it'll be more performant",yes,undetermined,8,1
2087,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// maybe a concrete SQLpropertyresult type, but Map is exactly what is required at the moment",no,undetermined,1,8
2088,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//cannot be instantiated,no,undetermined,0,9
2089,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//needed to satisfy KeyValue,no,undetermined,2,7
2090,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//NOTE: unlike all other Loaders, this one is NOT //      multithreaded, or cacheable!!",no,undetermined,0,9
2091,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// saveOrUpdate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
2092,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// For Timestamps, we default to a separate config",no,undetermined,1,8
2093,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// one or the other needs to be a datetime for us to get into this method in the first place...,no,undetermined,0,9
2094,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// upgrade the lock if necessary: //lock(result, lockMode);",no,undetermined,0,9
2095,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Oracle driver reports to support getGeneratedKeys(), but they only // support the version taking an array of the names of the columns to // be returned (via its RETURNING clause).  No other driver seems to // support this overloaded version.",no,undetermined,1,8
2096,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* local variable | this | */,no,undetermined,1,8
2097,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ignore this error for now,no,undetermined,2,7
2098,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// float,no,undetermined,0,9
2099,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// it is or was referenced _somewhere_,no,undetermined,0,9
2100,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: should we allow suffixes on these ?,yes,undetermined,9,0
2101,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
2102,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// This just handles a particular case of component // projection, perhaps get rid of it and throw an exception",no,undetermined,2,7
2103,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//insert/update/delete SQL,no,undetermined,0,9
2104,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//fetch=""join"" overrides default laziness //fetch=""join"" overrides default laziness",no,undetermined,0,9
2105,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// checkcast (case of primitive type) // invokevirtual (case of primitive type),no,undetermined,0,9
2106,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//the user visible aliases, which are unknown to the superclass, //these are not the actual ""physical"" SQL aliases",no,undetermined,0,9
2107,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Used with DROP TABLE to delete all records in the table.,no,undetermined,0,9
2108,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// classic translator does not support collection of ordinal // param metadata,no,undetermined,0,9
2109,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//named query parameter,no,undetermined,0,9
2110,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Parameter handling code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
2111,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//NOTE EARLY EXIT!,no,undetermined,0,9
2112,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Get the class name of the associated entity.,no,undetermined,0,9
2113,hibernate-distribution-3.3.2.GA,DEFECT,// todo : this call will not work for anything other than pojos!,yes,undetermined,9,0
2114,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ignore,no,undetermined,0,9
2115,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//truncate the identifier to the max alias length, less the suffix length",no,undetermined,0,9
2116,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// invokeinterface,no,undetermined,0,9
2117,hibernate-distribution-3.3.2.GA,DESIGN,// worrying about proxies is perhaps a little bit of overkill here...,yes,undetermined,1,8
2118,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	private final List extendsQueue;,no,undetermined,1,8
2119,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// session-start/post-flush persistent state,no,undetermined,0,9
2120,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is Tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
2121,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Collection of components.,no,undetermined,0,9
2122,hibernate-distribution-3.3.2.GA,DESIGN,// todo : modify the class definition if not already transformed...,yes,undetermined,9,0
2123,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// simple, because we can't have a one-to-one or a collection  // (or even a property-ref) in a composite-element:",no,undetermined,0,9
2124,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		extendsQueue = new ArrayList();,no,undetermined,0,9
2125,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// TODO: toLowerCase was not done before. Only used in Template.,yes,undetermined,9,0
2126,hibernate-distribution-3.3.2.GA,DEFECT,"//TODO: inexact, what we really need to know is: are any outer joins used?",yes,undetermined,9,0
2127,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Notify the FROM element that it is being referenced by the select.,no,undetermined,0,9
2128,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we use the assumed value, if there is one, to avoid hitting // the database",no,undetermined,0,9
2129,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//public boolean isSubselectLoadable();,no,undetermined,0,9
2130,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// subclass accesses ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
2131,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Recognition code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
2132,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// invokeinterface // invoke Enabled.getInterceptFieldCallback(),no,undetermined,0,9
2133,hibernate-distribution-3.3.2.GA,DESIGN,"//workaround, for backward compatibility of sets with no //not-null columns, assume all columns are used in the //row locator SQL",yes,undetermined,5,4
2134,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// PHASE 1 : Parse the HQL into an AST.,no,undetermined,0,9
2135,hibernate-distribution-3.3.2.GA,DESIGN,// todo : we can remove this once the deprecated ctor can be made private...,yes,undetermined,8,1
2136,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: proxies!,yes,undetermined,6,3
2137,hibernate-distribution-3.3.2.GA,DESIGN,// todo : move to StringHelper?,yes,undetermined,8,1
2138,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//initialize + unwrap the object,no,undetermined,0,9
2139,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// intentionally empty,no,undetermined,0,9
2140,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
2141,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//needed for SOAP libraries, etc",no,undetermined,1,8
2142,hibernate-distribution-3.3.2.GA,DESIGN,"// VERY IMPORTANT!!!! - This class needs to be free of any static references // to any CGLIB or Javassist classes.  Otherwise, users will always need both // on their classpaths no matter which (if either) they use. // // Another option here would be to remove the Hibernate.isPropertyInitialized() // method and have the users go through the SessionFactory to get this information.",yes,undetermined,0,9
2143,hibernate-distribution-3.3.2.GA,DESIGN,"//kinda ugly, but needed for collections with a ""."" node mapping",yes,undetermined,3,6
2144,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*|| oj.getJoinable().consumesCollectionAlias() */,no,undetermined,0,9
2145,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ignore (probably H2 not in the classpath),no,undetermined,2,7
2146,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO: It would be really, really nice to use this to also model components!",yes,undetermined,7,2
2147,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// first, try to load it from the temp PC associated to this SS",no,undetermined,0,9
2148,hibernate-distribution-3.3.2.GA,DESIGN,// NOTE: this assumes something about how propertySelectFragment is implemented by the subclass! // was toUnqotedAliasStrings( getdiscriminatorColumnName() ) before - now tried // to remove that unqoting and missing aliases..,yes,undetermined,0,9
2149,hibernate-distribution-3.3.2.GA,DEFECT,//TODO: BUG! this currently fails for named queries for non-POJO entities,yes,undetermined,8,1
2150,hibernate-distribution-3.3.2.GA,DEFECT,"// For a one-to-many, a <bag> is not really a bag; // it is *really* a set, since it can't contain the // same element twice. It could be considered a bug // in the mapping dtd that <bag> allows <one-to-many>.",yes,undetermined,1,8
2151,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// seems to have spotty LOB suppport,no,undetermined,0,9
2152,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// properties of this class, including inherited properties",no,undetermined,0,9
2153,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//NOTE SPECIAL CASE: // one-to-one constrained=false cannot be proxied, // so default to join and non-lazy",no,undetermined,0,9
2154,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// CUSTOM SQL,no,undetermined,0,9
2155,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we already know current is not null...,no,undetermined,0,9
2156,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*protected void initPropertyPaths(
			final String path,
			final Type type,
			final String[] columns,
			final String[] formulaTemplates,
			final Mapping factory)
	throws MappingException {
		//addFormulaPropertyPath(path, type, formulaTemplates);
		initPropertyPaths(path, type, columns, formulaTemplates, factory);
	}*/",no,undetermined,1,8
2157,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Its the listener class name,no,undetermined,0,9
2158,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// the user specifically supplied insert=""true"", // which constitutes an illegal combo",no,undetermined,0,9
2159,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// We ensure ASYNC semantics (JBCACHE-1175),no,undetermined,0,9
2160,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//null version means the object is in the process of being loaded somewhere else in the ResultSet,no,undetermined,0,9
2161,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*public boolean supportsForUpdateNowait() {
		return false;
	}*/",no,undetermined,0,9
2162,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: is this 100% correct?,yes,undetermined,8,1
2163,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// call this before any Iterator method to make sure that the current Iterator // is not exhausted,no,undetermined,0,9
2164,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ALL OTHER,no,undetermined,0,9
2165,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//by default, natural-ids are ""immutable"" (constant)",no,undetermined,0,9
2166,hibernate-distribution-3.3.2.GA,DESIGN,"// todo : should really move this log statement to CollectionType, where this is used from...",yes,undetermined,9,0
2167,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// merge() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
2168,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// found a ctor, but it was not publicly accessible so try to request accessibility",no,undetermined,1,8
2169,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// VERSION,no,undetermined,0,9
2170,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if it is an initialized proxy, let cascade // handle it later on",no,undetermined,0,9
2171,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Now, inject the newly built ORDER BY into the tree",no,undetermined,0,9
2172,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Inner classes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
2173,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// assumes that types are all of span 1,no,undetermined,0,9
2174,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Should mean that no such property was found,no,undetermined,0,9
2175,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		return getFactory().getSettings().getBytecodeProvider().getProxyFactoryFactory().buildProxyFactory();,no,undetermined,0,9
2176,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if the types report logical equivalence, return true...",no,undetermined,2,7
2177,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// cascade first, so that all unsaved objects get their // copy created before we actually copy //cascadeOnMerge(event, persister, entity, copyCache, Cascades.CASCADE_BEFORE_MERGE);",no,undetermined,0,9
2178,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// this is the second pass through on a merge op, so here we limit the // replacement to associations types (value types were already replaced // during the first pass)",no,undetermined,0,9
2179,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//its the given optional object,no,undetermined,0,9
2180,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*public boolean isNonExistant(EntityKey key) {
		return nonExistantEntityKeys.contains(key);
	}*/",no,undetermined,0,9
2181,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Make sure that all from elements registered with this FROM clause are actually in the AST.,no,undetermined,0,9
2182,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//strip leading ','",no,undetermined,0,9
2183,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// HHH-2300,no,undetermined,0,9
2184,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_1 // load bean,no,undetermined,0,9
2185,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// returnign null!,no,undetermined,0,9
2186,hibernate-distribution-3.3.2.GA,DESIGN,// todo : remove,yes,undetermined,7,2
2187,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//reset the id,no,undetermined,0,9
2188,hibernate-distribution-3.3.2.GA,DESIGN,"/**
	 * This form used from annotations (?).  Essentially the same as the above using a
	 * resultset-mapping reference, but without cacheMode, readOnly, and comment.
	 *
	 * FIXME: annotations do not use it, so it can be remove from my POV
	 * @deprecated
	 *
	 *
	 * @param query The sql query string
	 * @param resultSetRef The result-set-mapping name
	 * @param querySpaces Any specified query spaces (used for auto-flushing)
	 * @param cacheable Whether the query results are cacheable
	 * @param cacheRegion If cacheable, the region into which to store the results
	 * @param timeout A JDBC-level timeout to be applied
	 * @param fetchSize A JDBC-level fetch-size to be applied
	 * @param flushMode The flush mode to use for this query
	 * @param parameterTypes parameter type map
	 * @param callable Does the query string represent a callable object (i.e., proc)
	 */",yes,undetermined,3,6
2189,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Eager fetch the collection so we can use it detached,no,undetermined,0,9
2190,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// We've been here before,no,undetermined,0,9
2191,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// propertyName refers to something like collection.size...,no,undetermined,1,8
2192,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// special shortcut for id properties, skip the join! // this must only occur at the _end_ of a path expression",no,undetermined,0,9
2193,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Append the text of the current node.,no,undetermined,0,9
2194,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we need to step through the rows one row at a time (slow),no,undetermined,0,9
2195,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO: I considered validating the presence of the TS cache here, // but decided to defer unti getQueryCacheInstance() in case the  // cache is never actually used",yes,undetermined,9,0
2196,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if it was previously unreferenced, we need to flush in order to // get its state into the database in order to execute query",no,undetermined,0,9
2197,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we finish all the ""removes"" first to take care of possible unique // constraints and so that we can take better advantage of batching",no,undetermined,1,8
2198,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* package-private */,no,undetermined,0,9
2199,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Generate the select expression.,no,undetermined,0,9
2200,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//handle quoted strings,no,undetermined,1,8
2201,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// interfaces // arguments,no,undetermined,0,9
2202,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//registerColumnType data types,no,undetermined,0,9
2203,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Don't resolve the node again.,no,undetermined,0,9
2204,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we have a Javassist enhanced entity,no,undetermined,0,9
2205,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// HHH-276 : implied joins in a subselect where clause - The destination needs to be added // to the destination's from clause. // Not sure if this is will fix everything, but it works.",no,undetermined,1,8
2206,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// cascade-delete to many-to-one AFTER the parent was deleted,no,undetermined,0,9
2207,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is persister-centric and/or EntityInfo-centric ~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
2208,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// sybase driver (jConnect) throwing NPE here in certain // cases, but we'll just handle the general ""unexpected"" case",no,undetermined,1,8
2209,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	private List collectionOwnerAliases = new ArrayList(); //	private List collectionAliases = new ArrayList(); //	private List collectionPersisters = new ArrayList(); //	private List collectionResults = new ArrayList();,no,undetermined,0,9
2210,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// PROPERTIES,no,undetermined,0,9
2211,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// methods to make it possible to use the Native Id generator,no,undetermined,0,9
2212,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// not known!,no,undetermined,1,8
2213,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//needed for SOAP libraries, etc",no,undetermined,1,8
2214,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//else do nothing (don't even reassociate object!),no,undetermined,0,9
2215,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If the data type is not an association type, it could not have been in the FROM clause.",no,undetermined,0,9
2216,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// TODO: I don't really like this implementation; it would be better if // this was handled by searchForDirtyCollections(),yes,undetermined,8,1
2217,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// cache these since they are stateless // this one could even be static...,no,undetermined,1,8
2218,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//grab its state saved at deletion,no,undetermined,0,9
2219,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// it is a property reference {foo.bar},no,undetermined,0,9
2220,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//TODO: we could just return all false...,no,undetermined,9,0
2221,hibernate-distribution-3.3.2.GA,DESIGN,// why does this matter?,yes,undetermined,2,7
2222,hibernate-distribution-3.3.2.GA,DESIGN,// this is called by SessionFactory irregardless; we just disregard here; // could also add a check to SessionFactory to only conditionally call start,yes,undetermined,1,8
2223,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//use dialect default properties,no,undetermined,0,9
2224,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// new methods in dialect3,no,undetermined,0,9
2225,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_0,no,undetermined,0,9
2226,hibernate-distribution-3.3.2.GA,DESIGN,"//for backward compatibility, allow a set with no not-null  //element columns, using all columns in the row locater SQL //TODO: create an implicit not null constraint on all cols?",yes,undetermined,9,0
2227,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//return memberPersister.getPropertyType(propertyName);,no,undetermined,0,9
2228,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// cascade first, so that all unsaved objects get their  // copy created before we actually copy",no,undetermined,0,9
2229,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// parameter bind values...,no,undetermined,0,9
2230,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Remove all the old entries,no,undetermined,0,9
2231,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// should be ok performance-wise to generate new delegate instances for each // request since these are locally stack-scoped.  Besides, it makes the code // much easier to read than the old TransactionHelper stuff...",no,undetermined,1,8
2232,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//some statistics,no,undetermined,0,9
2233,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//dontSpace.add(""'"");",no,undetermined,0,9
2234,hibernate-distribution-3.3.2.GA,DEFECT,//TODO: this requires that the collection is defined after the //      referenced property in the mapping file (ok?),yes,undetermined,8,1
2235,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// properly handle property-ref-based associations,no,undetermined,0,9
2236,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// We call getKeyFromResultSet() here so that we can know the // key value upon which to perform the breaking logic.  However, // it is also then called from getRowFromResultSet() which is certainly // not the most efficient.  But the call here is needed, and there // currently is no other way without refactoring of the doQuery()/getRowFromResultSet() // methods",no,undetermined,2,7
2237,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// We need our tm, so get it now and avoid doing other work // if there is a problem",no,undetermined,1,8
2238,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// process the ""old"" HQL style where aliases appear _first_ // ie. using the IN or IN CLASS constructions",no,undetermined,0,9
2239,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// continue...; we'll find out if it ends up not getting saved later,no,undetermined,0,9
2240,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Primary key constraint,no,undetermined,0,9
2241,hibernate-distribution-3.3.2.GA,DESIGN,// TODO: this is a bit of copy/paste from IndexedCollection.createPrimaryKey(),yes,undetermined,8,1
2242,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Get ready to start adding nodes.,no,undetermined,0,9
2243,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		scalarColumnAliases.add( typeReturn.getColumnAlias() ); //		scalarTypes.add( typeReturn.getType() );,no,undetermined,0,9
2244,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//	public static JDBCException newJDBCException(String string, SQLException root, String sql) { //		string = string + "" ["" + sql + ']'; //		log.error(string, root); //		logExceptions(root); //		return new JDBCException(string, root, sql); //	} // //	public static JDBCException newJDBCException(String string, SQLException root) { //		log.error(string, root); //		logExceptions(root); //		return new JDBCException(string, root); //	}",no,undetermined,0,9
2245,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Use the lower case function name. // Remember whether we're in a SELECT clause or not.,no,undetermined,0,9
2246,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_3 // load the raw bean,no,undetermined,0,9
2247,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// simple nullability constraint,no,undetermined,0,9
2248,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// We need to seed the version value as part of this bulk insert,no,undetermined,1,8
2249,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Mckoi has no known variation of a ""SELECT ... FOR UPDATE"" syntax...",no,undetermined,0,9
2250,hibernate-distribution-3.3.2.GA,DEFECT,"// assume that the row was not there since it previously had only null // values, so do an INSERT instead //TODO: does not respect dynamic-insert",yes,undetermined,7,2
2251,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//check for all components values in the collection,no,undetermined,0,9
2252,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ignore it,no,undetermined,0,9
2253,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Always add the collection's query spaces.,no,undetermined,0,9
2254,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Prepare the left hand side and get the data type.,no,undetermined,0,9
2255,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// intentionally empty,no,undetermined,0,9
2256,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: look at the owning property and check that it  //      isn't lazy (by instrumentation),yes,undetermined,9,0
2257,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Regions can get instantiated in the course of normal work (e.g. // a named query region will be created the first time the query is // executed), so suspend any ongoing tx",no,undetermined,0,9
2258,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Find the WHERE; if there is no WHERE, find the FROM...",no,undetermined,0,9
2259,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*public PropertyProjection project() {
		return Projections.property(getPropertyName());
	}*/",no,undetermined,0,9
2260,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//.getElementPropertyMapping();,no,undetermined,0,9
2261,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// this is a property of the table, which we are updating",no,undetermined,0,9
2262,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// WHERE,no,undetermined,0,9
2263,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : add this info to the translator and aggregate it here...,yes,undetermined,7,2
2264,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: never reached, since getTypeName() actually throws an exception!",yes,undetermined,9,0
2265,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Read backwards until we read past the first physical sequential // row with the key we are interested in loading,no,undetermined,0,9
2266,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//or its the id property name,no,undetermined,0,9
2267,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// 'outer' is optional and is ignored,no,undetermined,0,9
2268,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//NOTE EARLY EXIT,no,undetermined,0,9
2269,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//persister.setIdentifier(result, id); //before calling interceptor, for consistency with normal load",no,undetermined,0,9
2270,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//allow 9,8,7,6,5,4,3,2,1",no,undetermined,0,9
2271,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// We don't want to waste effort setting an option if JBC is // already in LOCAL mode. If JBC is REPL_(A)SYNC then check // if they passed an config option to disable query replication,no,undetermined,0,9
2272,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the entity associated with the current action.,no,undetermined,0,9
2273,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// for regression testing against output from the old parser... // found it easiest to simply reorder the FromElements here into ascending order // in terms of injecting them into the resulting sql ast in orders relative to those // expected by the old parser; this is definitely another of those ""only needed // for regression purposes"".  The SyntheticAndFactory, then, simply injects them as it // encounters them.",no,undetermined,0,9
2274,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// found,no,undetermined,0,9
2275,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The cache provider is needed when we either have second-level cache enabled // or query cache enabled.  Note that useSecondLevelCache is enabled by default,no,undetermined,0,9
2276,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//pass the column name (a generated id almost always has a single column),no,undetermined,0,9
2277,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The where clause was added to eliminate this statement from Brute Force Searches.,no,undetermined,0,9
2278,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//now render the select clause,no,undetermined,0,9
2279,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//information about lazy properties of this class,no,undetermined,0,9
2280,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// IDENTIFIER,no,undetermined,0,9
2281,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Arrays.asList doesn't do primitive arrays,no,undetermined,0,9
2282,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Entity was found in second-level cache...,no,undetermined,0,9
2283,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//throw new IdentifierGenerationException(""save associated object first, or disable cascade for inverse association"");",no,undetermined,0,9
2284,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// check that entity id = requestedId,no,undetermined,0,9
2285,hibernate-distribution-3.3.2.GA,DEFECT,"//no need to take a snapshot - this is a  //performance optimization, but not really //important, except for entities with huge  //mutable property values",yes,undetermined,1,8
2286,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//stops flush being called multiple times if this method is recursively called,no,undetermined,0,9
2287,hibernate-distribution-3.3.2.GA,DESIGN,"// should indicate that we are processing an INSERT/UPDATE/DELETE // query with a subquery implied via a collection property // function. Here, we need to use the table name itself as the // qualification alias. // TODO : verify this works for all databases... // TODO : is this also the case in non-""indexed"" scenarios?",yes,undetermined,9,0
2288,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// igndore it...,no,undetermined,0,9
2289,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// empty means no scoping,no,undetermined,0,9
2290,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//					int parameterStart = getWalker().getNumberOfParametersInSetClause(); //					List allParams = getIdSelectParameterSpecifications(); //					Iterator whereParams = allParams.subList( parameterStart, allParams.size() ).iterator();",no,undetermined,0,9
2291,hibernate-distribution-3.3.2.GA,DESIGN,// unhappy about this being public ... is there a better way?,yes,undetermined,1,8
2292,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: switch statements are always evil! We already had bugs because  //      of forgotten token types. Use polymorphism for this!,yes,undetermined,8,1
2293,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Anywhere else we should look?,no,undetermined,0,9
2294,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// a ""detached"" collection that belonged to a different entity",no,undetermined,0,9
2295,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Entity load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // 	* currently, not yet used...",no,undetermined,1,8
2296,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//context.unbind(boundName);,no,undetermined,0,9
2297,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// then handle any user-defined entity modes...,no,undetermined,0,9
2298,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if the from-clauses are the same, we can be a little more aggressive in terms of what we reuse",no,undetermined,0,9
2299,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// delegate already handles PK columns,no,undetermined,1,8
2300,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//copyValues works by reflection, so explicitly mark the entity instance dirty",no,undetermined,0,9
2301,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
2302,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// assume we do *not* refer to a property on the given persister,no,undetermined,0,9
2303,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_0 // load this,no,undetermined,0,9
2304,hibernate-distribution-3.3.2.GA,DESIGN,// NOTE: this assumes something about how propertySelectFragment is implemented by the subclass! // was toUnqotedAliasStrings( getIdentiferColumnNames() ) before - now tried // to remove that unqoting and missing aliases..,yes,undetermined,0,9
2305,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// don't allow comments on these insert statements as comments totally // blow up the Oracle getGeneratedKeys ""support"" :(",no,undetermined,0,9
2306,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//null owner ok??,no,undetermined,0,9
2307,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Forcefully remove leading ands from where fragments; the grammar will // handle adding them,no,undetermined,0,9
2308,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Get the caller,no,undetermined,0,9
2309,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Was there an explicit select expression?,no,undetermined,0,9
2310,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
2311,hibernate-distribution-3.3.2.GA,DESIGN,"/** Create an action that will evict collection and entity regions based on queryspaces (table names).
	 *  TODO: cache the autodetected information and pass it in instead.
	 **/",yes,undetermined,8,1
2312,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if the natural-id is marked as non-mutable, it is not retrieved during a // normal database-snapshot operation...",no,undetermined,0,9
2313,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this piece is needed for usage in select clause,no,undetermined,0,9
2314,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Don't hold the JBC node lock throughout the tx, as that // prevents updates // Add a zero (or low) timeout option so we don't block // waiting for tx's that did a put to commit",no,undetermined,0,9
2315,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Open any extra brackets we might need.,no,undetermined,0,9
2316,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//it was not embedded, so the argument is just an id",no,undetermined,1,8
2317,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: does this really need to be here? //      does the collection already have //      it's own up-to-date snapshot?,yes,undetermined,7,2
2318,hibernate-distribution-3.3.2.GA,DESIGN,"// work around the ""feature"" where tree cache is validating the // inserted node during the next transaction.  no idea...",yes,undetermined,2,7
2319,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//saveOrUpdateCopy() is deprecated!,no,undetermined,1,8
2320,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//note: this affects the return value!,no,undetermined,0,9
2321,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//column unique-key,no,undetermined,0,9
2322,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	void setShowSqlEnabled(boolean b) { //		showSql = b; //	} // //	void setFormatSqlEnabled(boolean b) { //		formatSql = b; //	},no,undetermined,0,9
2323,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// use old (HB 2.1) defaults if outer-join is specified,no,undetermined,0,9
2324,hibernate-distribution-3.3.2.GA,DESIGN,"// this is ugly here, but needed because its a subquery",yes,undetermined,4,5
2325,hibernate-distribution-3.3.2.GA,DESIGN,//note there is a wierd implementation in the client side,yes,undetermined,0,9
2326,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//optimize the hash size to eliminate a rehash.,no,undetermined,0,9
2327,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//get em on the second pass!,no,undetermined,0,9
2328,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Schema export:,no,undetermined,0,9
2329,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//keep the behavior consistent even for boundary usages,no,undetermined,0,9
2330,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// todo : move this to SF per HHH-3517; also see HHH-1907 and ComponentMetamodel,no,undetermined,7,2
2331,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//pad with nulls from the current last element up to the new index,no,undetermined,0,9
2332,hibernate-distribution-3.3.2.GA,DESIGN,// todo : what else to do here?,yes,undetermined,8,1
2333,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		componentTuplizerFactory = new ComponentTuplizerFactory();,no,undetermined,0,9
2334,hibernate-distribution-3.3.2.GA,DESIGN,// TODO Is this a valid operation on a timestamps cache?,yes,undetermined,8,1
2335,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// overriding inherited meta attribute. HBX-621 & HBX-793			,no,undetermined,0,9
2336,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Reattachment of aPerson,no,undetermined,0,9
2337,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// 60 second lock timeout,no,undetermined,0,9
2338,hibernate-distribution-3.3.2.GA,DEFECT,"//TODO: when this is the entry point, we should use an INNER_JOIN for fetching the many-to-many elements!",yes,undetermined,9,0
2339,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// grrr... for differentiation of mysql storage engines,no,undetermined,1,8
2340,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// register resolvers set via Environment property,no,undetermined,0,9
2341,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* | this | bean | args | raw bean | */,no,undetermined,0,9
2342,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If this is an implied join in a from element, then use the impled join type which is part of the // tree parser's state (set by the gramamar actions).",no,undetermined,1,8
2343,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//propertyTableNumbersByName.put( prop.getName(), join );",no,undetermined,0,9
2344,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// We should use the _current_ object state (ie. after any updates that occurred during flush),no,undetermined,1,8
2345,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: simply remove this override //      if we fix the above todos,yes,undetermined,9,0
2346,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we need to strip off the embedded parens so that sql-gen does not double these up,no,undetermined,0,9
2347,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//first look for a reference to a projection alias,no,undetermined,0,9
2348,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// otherwise, perform a ""deep equivalence"" check...",no,undetermined,1,8
2349,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// We could register the session against the transaction even though it is // not started, but we'd have no guarentee of ever getting the map // entries cleaned up (aside from spawning threads).",no,undetermined,0,9
2350,hibernate-distribution-3.3.2.GA,DESIGN,//This is not very nice (and quite slow):,yes,undetermined,1,8
2351,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the closure of all columns used by the entire hierarchy including // subclasses and superclasses of this class,no,undetermined,0,9
2352,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//unquotedKeyColumnNames = StringHelper.unQuote(keyColumnAliases);,no,undetermined,0,9
2353,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Handles things like: // a and b or c // a and ( b or c ) // not a and not b // not ( a and b ) // x between y and z            (overloaded ""and"") // x in ( a, b, c )             (overloaded brackets) // not not a // a is not null                (overloaded ""not"") // etc...... // and expressions like // foo = bar                    (maps to: foo.id = bar.id) // foo.Bar = 'foo'              (maps to: foo.bar = 'foo') // foo.Bar.Baz = 1.0            (maps to: foo.bar = bar.id and bar.baz = 1.0) // 1.0 = foo.Bar.Baz            (maps to: bar.baz = 1.0 and foo.Bar = bar.id) // foo.Bar.Baz = a.B.C          (maps to: bar.Baz = b.C and foo.Bar = bar.id and a.B = b.id) // foo.Bar.Baz + a.B.C          (maps to: bar.Baz + b.C and foo.Bar = bar.id and a.B = b.id) // ( foo.Bar.Baz + 1.0 ) < 2.0  (maps to: ( bar.Baz + 1.0 ) < 2.0 and foo.Bar = bar.id)",no,undetermined,0,9
2354,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// TODO: not visible to the user!,yes,undetermined,8,1
2355,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// or should it actually throw an exception?,no,undetermined,0,9
2356,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// entities ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
2357,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Note : expected in the syntax: //      type=listenerClass //          ({sep}type=listenerClass)* // where {sep} is any whitespace or comma,no,undetermined,0,9
2358,hibernate-distribution-3.3.2.GA,DESIGN,"// We would probably refactor to have LogicParser (builds a tree of simple // expressions connected by and, or, not), ExpressionParser (translates // from OO terms like foo, foo.Bar, foo.Bar.Baz to SQL terms like // FOOS.ID, FOOS.BAR_ID, etc) and PathExpressionParser (which does much // the same thing it does now)",yes,undetermined,2,7
2359,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//materialize associations (and initialize the object) later,no,undetermined,0,9
2360,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Resolve everything up to this dot, but don't resolve the placeholders yet.",no,undetermined,1,8
2361,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// first, iterate over all elements capable of defining an extends attribute // collecting all found extends references if they cannot be resolved // against the already processed mappings.",no,undetermined,1,8
2362,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// now get an existing proxy for each row element (if there is one),no,undetermined,0,9
2363,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//TODO: something with formulas...,no,undetermined,9,0
2364,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Execute the SQL:,no,undetermined,0,9
2365,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// JBC put a version in the node when it created as part of // some internal operation. We are always newer, but if // the JBC version is > 1 something odd has happened",no,undetermined,0,9
2366,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Make sure the owner alias is known...,no,undetermined,0,9
2367,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//do nothing,no,undetermined,0,9
2368,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if the collection is dereferenced, remove from the session cache //iter.remove(); //does not work, since the entrySet is not backed by the set",no,undetermined,1,8
2369,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*public boolean isNonExistant(EntityUniqueKey key) {
		return nonExistentEntityUniqueKeys.contains(key);
	}*/",no,undetermined,0,9
2370,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// NOTE: Because we're using ASTUtil.createParent(), the tree must be created from the bottom up. // IS EMPTY x => (EXISTS (QUERY (SELECT_FROM (FROM x) ) ) )",no,undetermined,0,9
2371,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//now render the joins,no,undetermined,0,9
2372,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// return the connection,no,undetermined,1,8
2373,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// checkcast // cast the bean into a raw bean,no,undetermined,0,9
2374,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//throw new UnsupportedOperationException(""Can't write to a readonly object"");",no,undetermined,0,9
2375,hibernate-distribution-3.3.2.GA,DESIGN,// TODO: copy/paste from ManyToOneType,yes,undetermined,9,0
2376,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Generate implicit joins, only if necessary.",no,undetermined,0,9
2377,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// return new uninitialized proxy,no,undetermined,0,9
2378,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aliases named identifier ( alias.idname ),no,undetermined,0,9
2379,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the case of a foreign key to something other than the pk is handled in createPropertyRefConstraints,no,undetermined,0,9
2380,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//ignore whitespace,no,undetermined,0,9
2381,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_0,no,undetermined,0,9
2382,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// astore 4 // store the raw bean,no,undetermined,0,9
2383,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Do the corresponding RHS,no,undetermined,0,9
2384,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// orphans should be deleted during delete,no,undetermined,0,9
2385,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: add owner argument!!,yes,undetermined,8,1
2386,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// check two ""adjecent"" nodes at the top of the from-clause tree",no,undetermined,0,9
2387,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//note: updates to joined tables can't be batched...,no,undetermined,0,9
2388,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// uuid.hex is deprecated,no,undetermined,1,8
2389,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Write HTML header,no,undetermined,0,9
2390,hibernate-distribution-3.3.2.GA,DESIGN,"//put() has nowait semantics, is this really appropriate? //note that it needs to be async replication, never local or sync",yes,undetermined,1,8
2391,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//by default,no,undetermined,1,8
2392,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//render the where and from parts,no,undetermined,0,9
2393,hibernate-distribution-3.3.2.GA,DESIGN,//use a degenerated strategy for backward compatibility,yes,undetermined,0,9
2394,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//decrement the lock,no,undetermined,0,9
2395,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// increment the version number (if necessary),no,undetermined,0,9
2396,hibernate-distribution-3.3.2.GA,DESIGN,// create an index on the key columns??,yes,undetermined,0,9
2397,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// TODO: check if key contains the owner ID,yes,undetermined,9,0
2398,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//TODO!!!!!!!,no,undetermined,4,5
2399,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: design new lifecycle for ProxyFactory,yes,undetermined,9,0
2400,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//because numeric can be anything,no,undetermined,0,9
2401,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Collection 'property function',no,undetermined,0,9
2402,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//do replacements,no,undetermined,0,9
2403,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// First we need to suspend any current JTA transaction and obtain // a JDBC connection,no,undetermined,0,9
2404,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//lobs cannot be compared,no,undetermined,0,9
2405,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Default to collections sharing entity cache if there is one,no,undetermined,0,9
2406,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//do not add unique constraint on DB not supporting unique and nullable columns,no,undetermined,0,9
2407,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// no transformations took place, so handle it as we would a // non-instrumented class",no,undetermined,0,9
2408,hibernate-distribution-3.3.2.GA,DEFECT,// TODO : should this be an error?,yes,undetermined,9,0
2409,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// right represents a joins originating from left; or // both right and left reprersent joins originating from the same FromElement,no,undetermined,0,9
2410,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// an existing collection that was either non-empty or uninitialized // is replaced by null or a different collection // (if the collection is uninitialized, hibernate has no way of // knowing if the collection is actually empty without querying the db)",no,undetermined,0,9
2411,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//columns,no,undetermined,0,9
2412,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// no big deal,no,undetermined,0,9
2413,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//overriden to avoid System.exit,no,undetermined,0,9
2414,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// add the main query,no,undetermined,0,9
2415,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// DISCRIMINATOR,no,undetermined,0,9
2416,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// MUTABLE,no,undetermined,0,9
2417,hibernate-distribution-3.3.2.GA,DESIGN,//ick!,yes,undetermined,0,9
2418,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// any earlier proxy takes precedence,no,undetermined,0,9
2419,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: this is too conservative; if all preceding joins were  //      also inner joins, we could use an inner join here",yes,undetermined,8,1
2420,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Get the function return value type, based on the type of the first argument.",no,undetermined,0,9
2421,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*DataSource unpooled = DataSources.unpooledDataSource(
				jdbcUrl, props.getProperty(Environment.USER), props.getProperty(Environment.PASS)
			);*/",no,undetermined,0,9
2422,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ie. we never have to null out a reference to // an uninitialized proxy,no,undetermined,0,9
2423,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Do nothing, eplicit from elements are *always* in the projection list.",no,undetermined,0,9
2424,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// boolean, byte, char, int, short",no,undetermined,0,9
2425,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// add new ordered map,no,undetermined,0,9
2426,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Put the THETA_JOINS node before the HQL condition, after the filters.",no,undetermined,0,9
2427,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we need to dirty check many-to-ones with not-found=""ignore"" in order  // to update the cache (not the database), since in this case a null // entity reference can lose information",no,undetermined,0,9
2428,hibernate-distribution-3.3.2.GA,DESIGN,//use of trim() here is ugly?,yes,undetermined,3,6
2429,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we don't need to worry about any condition in the ON clause // here (toFromFragmentString), since anything in the ON condition // is already applied to the whole query",no,undetermined,0,9
2430,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// make a new one,no,undetermined,0,9
2431,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if the property mapping consists of all formulas,  // make it non-updateable",no,undetermined,0,9
2432,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// note that %string is deprecated,no,undetermined,1,8
2433,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO: iteratively get transient entities and retry merge until one of the following conditions: //       1) transientCopyCache.size() == 0 //       2) transientCopyCache.size() is not decreasing and copyCache.size() is not increasing // TODO: find out if retrying can add entities to copyCache (don't think it can...) // For now, just retry once; throw TransientObjectException if there are still any transient entities",yes,undetermined,9,0
2434,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Don't hold the JBC node lock throughout the tx, as that // prevents reads and other updates",no,undetermined,0,9
2435,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO: Figure out a better way to get the FROM elements in a proper tree structure. // If this is not the destination of a many-to-many, add it as a child of the origin.",yes,undetermined,8,1
2436,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// IBID for current_time and current_date,no,undetermined,0,9
2437,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// don't create a unique key, 'cos some // databases don't like a UK on nullable // columns",no,undetermined,1,8
2438,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// do nothing for persistent instances,no,undetermined,0,9
2439,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// no-op. We don't own the cache so we shouldn't stop it.,no,undetermined,0,9
2440,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Origial Dialect.java returns true;,no,undetermined,0,9
2441,hibernate-distribution-3.3.2.GA,DESIGN,"// otherwise, a trim-specification and/or a trim-character // have been specified;  we need to decide which options // are present and ""do the right thing"" // should leading trim-characters be trimmed? // should trailing trim-characters be trimmed? // the trim-character // the trim-source",yes,undetermined,0,9
2442,hibernate-distribution-3.3.2.GA,DESIGN,"// sql-server, at least needed this dropped after use; strange!",yes,undetermined,0,9
2443,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// SQL strings,no,undetermined,1,8
2444,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// CUSTOM SQL,no,undetermined,0,9
2445,hibernate-distribution-3.3.2.GA,DEFECT,// TODO: cannot use generateSuffixes() - it handles the initial suffix differently.,yes,undetermined,9,0
2446,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
2447,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//DELETED,no,undetermined,0,9
2448,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//pre H3.2 behavior: super.getReturnType(ct, m);",no,undetermined,2,7
2449,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: this bit actually has to be called after all cascades! //      but since identity insert is called *synchronously*, //      instead of asynchronously as other actions, it isn't",yes,undetermined,8,1
2450,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: put this stuff back in to read snapshot from //      the second-level cache (needs some extra work),yes,undetermined,9,0
2451,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if it was a reference to self, don't need to nullify // unless we are using native id generation, in which // case we definitely need to nullify",no,undetermined,0,9
2452,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_0,no,undetermined,0,9
2453,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// cascade-save to many-to-one BEFORE the parent is saved,no,undetermined,0,9
2454,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// again, CCS did not have such a concept; but a reasonable // proximity is to clear the cache after transaction *as long as* // the underlying cache is not JTA aware.",no,undetermined,0,9
2455,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// on the inverse, it makes sense that if a ThreadLocalSessionContext- // bound session then gets deserialized to go ahead and re-bind it to // the ThreadLocalSessionContext session map.",no,undetermined,0,9
2456,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* package-private */,no,undetermined,0,9
2457,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// TODO: handle TypeDefs,yes,undetermined,8,1
2458,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
2459,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// invokevirtual,no,undetermined,0,9
2460,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*ArrayList sqlResultTypeList,*/",no,undetermined,0,9
2461,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// A collection of components...,no,undetermined,0,9
2462,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// isTransactionCallbackRegistered denotes whether any Hibernate // Transaction has registered as a callback against this // JDBCContext; only one such callback is allowed.  Directly // serializing this value causes problems with JDBCTransaction, // or really any Transaction impl where the callback is local // to the Transaction instance itself, since that Transaction // is not serialized along with the JDBCContext.  Thus we // handle that fact here explicitly...",no,undetermined,1,8
2463,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//default pool size 20,no,undetermined,0,9
2464,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ifnonnull (label1),no,undetermined,0,9
2465,hibernate-distribution-3.3.2.GA,DESIGN,// would be better to use the element-type to determine // whether the old and the new are equal here; the problem being // we do not necessarily have access to the element type in all // cases,yes,undetermined,1,8
2466,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// invokevirtual,no,undetermined,0,9
2467,hibernate-distribution-3.3.2.GA,DESIGN,// Does this dialect support the ALTER TABLE syntax?,yes,undetermined,0,9
2468,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// build the map of standard ANSI SQL aggregation functions ~~~~~~~~~~~~~~~,no,undetermined,0,9
2469,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// First, save off the pertinent ids, saving the number of pertinent ids for return",no,undetermined,0,9
2470,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"/**
	 * TODO: Check if Mimer SQL cannot handle the way DB2 does
	 */",yes,undetermined,9,0
2471,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Transform the tree.,no,undetermined,0,9
2472,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The optional SQL string defined in the where attribute,no,undetermined,0,9
2473,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*public Type[] getSqlResultTypes() {
		return sqlResultTypes;
	}*/",no,undetermined,0,9
2474,hibernate-distribution-3.3.2.GA,DESIGN,//work around a bug in all known connection pools....,yes,undetermined,2,7
2475,hibernate-distribution-3.3.2.GA,DEFECT,"//TODO: not really completely correct, since //      the uoe could occur while resolving //      associations, leaving the PC in an //      inconsistent state",yes,undetermined,9,0
2476,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Impl Note: allows multiple collection fetches as long as the // entire fecthed graph still ""points back"" to a single // root entity for return",no,undetermined,0,9
2477,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// need to extract the component values and check for subtype replacements...,no,undetermined,0,9
2478,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Default the Proxool alias setting,no,undetermined,0,9
2479,hibernate-distribution-3.3.2.GA,DESIGN,//TODO possibly relax that,yes,undetermined,9,0
2480,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Add the condition to the join sequence that qualifies the indexed element.,no,undetermined,0,9
2481,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// This check is needed since processing leaves the cursor // after the last physical row for the current logical row; // thus if we are after the last physical row, this might be // caused by either: //      1) scrolling to the last logical row //      2) scrolling past the last logical row // In the latter scenario, the previous logical row // really is the last logical row. // // In all other cases, we should process back two // logical records (the current logic row, plus the // previous logical row).",no,undetermined,1,8
2482,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the root of the incoming property path matched one // of the embedded composite identifier properties,no,undetermined,0,9
2483,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Time and Date Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
2484,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//EARLY EXIT!,no,undetermined,0,9
2485,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// two conditions where we need to transform this to a theta-join syntax: //      1) 'elem' is the ""root from-element"" in correlated subqueries //      2) The DotNode.useThetaStyleImplicitJoins has been set to true //          and 'elem' represents an implicit join",no,undetermined,0,9
2486,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// First, try to locate this resource through the current // context classloader.",no,undetermined,1,8
2487,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// DotNode uses null here...,no,undetermined,0,9
2488,hibernate-distribution-3.3.2.GA,DESIGN,// entity name will not be available for non-POJO entities // TODO: cache the entity name somewhere so that it is available to this exception,yes,undetermined,8,1
2489,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
2490,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload 4 // load the raw bean,no,undetermined,0,9
2491,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Establish the region root node with a non-locking data version,no,undetermined,0,9
2492,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we already have a callback registered; either a local // (org.hibernate.Transaction) transaction has accepted // callback responsibilities, or we have previously // registered a transaction synch.",no,undetermined,0,9
2493,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//starts with 1, implicitly",no,undetermined,1,8
2494,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// discriminator column,no,undetermined,0,9
2495,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// loop through all the associations of the current entity and make sure that they are processed // before the current batch number,no,undetermined,0,9
2496,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// semantic action processing ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
2497,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// our column span is the number of columns in the PK,no,undetermined,0,9
2498,hibernate-distribution-3.3.2.GA,DESIGN,// todo : temporary //      needed because currently persister is the one that //      creates and renders the join fragments for inheritence //      hierarchies...,yes,undetermined,9,0
2499,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we will need to create new entries,no,undetermined,0,9
2500,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// save() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
2501,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// checkcast,no,undetermined,0,9
2502,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: proxies!,yes,undetermined,6,3
2503,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Configure the cache to use our TM,no,undetermined,0,9
2504,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// SELECT p FROM p IN CLASS eg.Person GROUP BY p.Name, p.Address, p",no,undetermined,0,9
2505,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
2506,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// NativeSQL: collect index column and auto-aliases,no,undetermined,0,9
2507,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// evicts don't cascade to uninitialized collections,no,undetermined,0,9
2508,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
2509,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//test out the optimizer:,no,undetermined,0,9
2510,hibernate-distribution-3.3.2.GA,DESIGN,"// todo : hack!!! // NOTE : here we cleanup the load context when we have no more local // LCE entries.  This ""works"" for the time being because really // only the collection load contexts are implemented.  Long term, // this cleanup should become part of the ""close result set"" // processing from the (sandbox/jdbc) jdbc-container code.",yes,undetermined,9,0
2511,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Verify the state of this new method in Hibernate 3.0 Dialect.java,no,undetermined,0,9
2512,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// SUBCLASSES,no,undetermined,0,9
2513,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//opening paren in new Foo ( ... ),no,undetermined,0,9
2514,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// general purpose parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
2515,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// not supported,no,undetermined,0,9
2516,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// skip finalize methods,no,undetermined,0,9
2517,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// this one only really needed for badly-behaved applications! // (if the TransactionManager has a Sychronization registered, // its a noop) // (actually we do need it for downgrading locks)",no,undetermined,1,8
2518,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// look for the instance by uuid,no,undetermined,0,9
2519,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//initialize properties of the event:,no,undetermined,0,9
2520,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// },no,undetermined,0,9
2521,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// identifier-commalist,no,undetermined,0,9
2522,hibernate-distribution-3.3.2.GA,DESIGN,"// No explicit select expression; render the id and properties // projection lists for every persister in the from clause into // a single 'token node'. //TODO: the only reason we need this stuff now is collection filters, //      we should get rid of derived select clause completely!",yes,undetermined,9,0
2523,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Set of EntityKeys of deleted objects,no,undetermined,0,9
2524,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//beforeClassTokens.add(""new""); DEFINITELY DON'T HAVE THIS!!",no,undetermined,1,8
2525,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Execute the SQL:,no,undetermined,0,9
2526,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// *** Sequence methods - end,no,undetermined,0,9
2527,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Iterate through the alias,JoinSequence pairs and generate SQL token nodes.",no,undetermined,0,9
2528,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Add the token to the AST.,no,undetermined,0,9
2529,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//even process null collections,no,undetermined,0,9
2530,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we are the RHS of the DOT representing a naked comp-prop-ref,no,undetermined,0,9
2531,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// look for the instance by uuid,no,undetermined,0,9
2532,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Use the table fromElement and the property name to get the array of column names.,no,undetermined,0,9
2533,hibernate-distribution-3.3.2.GA,DEFECT,//TODO: this is kinda inconsistent with CollectionType,yes,undetermined,7,2
2534,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// force initialize!,no,undetermined,0,9
2535,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO: I considered validating TS cache config here, // but decided to defer unti getTimestampsCacheInstance() in case the  // cache is never actually used",yes,undetermined,9,0
2536,hibernate-distribution-3.3.2.GA,DESIGN,// Sets can be just a view of a part of another collection. // do we need to copy it to be sure it won't be changing // underneath us? // ie. this.set.addAll(set);,yes,undetermined,1,8
2537,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ID UNSAVED-VALUE,no,undetermined,0,9
2538,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//+ ""_"" + referencedColumnName not used for backward compatibility",no,undetermined,0,9
2539,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//the database has changed now, so the subselect results need to be invalidated",no,undetermined,0,9
2540,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// iterate all the entities currently associated with the persistence context.,no,undetermined,0,9
2541,hibernate-distribution-3.3.2.GA,DESIGN,// can happen because of the multiple ways Cache.remove() // can be invoked :(,yes,undetermined,0,9
2542,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// RDMS supports the UNION ALL clause.,no,undetermined,0,9
2543,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Build the dynamic-map tuplizer...,no,undetermined,0,9
2544,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//private Type[] sqlResultTypes;,no,undetermined,0,9
2545,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// bit_length feels a bit broken to me. We have to cast to char in order to // pass when a numeric value is supplied. But of course the answers given will // be wildly different for these two datatypes. 1234.5678 will be 9 bytes as // a char string but will be 8 or 16 bytes as a true numeric. // Jay Nance 2006-09-22,no,undetermined,2,7
2546,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// CHECK,no,undetermined,0,9
2547,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we found some extends attributes referencing entities which were // not already processed.  here we need to locate all entity-names // and class-names contained in this document itself, making sure // that these get removed from the extendz list such that only // extends names which require us to delay processing (i.e. // external to this document and not yet processed) are contained // in the returned result",no,undetermined,0,9
2548,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// TimesTen has no known variation of a ""SELECT ... FOR UPDATE"" syntax...",no,undetermined,0,9
2549,hibernate-distribution-3.3.2.GA,DEFECT,//TODO: currently broken for unique-key references (does not detect //      change to unique key property of the associated object),yes,undetermined,9,0
2550,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// todo : add support for READ_WRITE ( + NONSTRICT_READ_WRITE ??? ),yes,undetermined,9,0
2551,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Cache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
2552,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// PROPERTIES,no,undetermined,0,9
2553,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"// TODO: lowercasing done here. Was done ""at random"" before; maybe not needed at all ?",yes,undetermined,9,0
2554,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// from Map,no,undetermined,0,9
2555,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO : make this the factory for ""entity mode related"" sessions; // also means making this the target of transaction-synch and the // thing that knows how to cascade things between related sessions // // At that point, perhaps this thing is a ""SessionContext"", and // ConnectionManager is a ""JDBCContext""?  A ""SessionContext"" should // live in the impl package...",yes,undetermined,9,0
2556,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// bad type,no,undetermined,0,9
2557,hibernate-distribution-3.3.2.GA,DESIGN,//ie. the subquery! yuck!,yes,undetermined,2,7
2558,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// moved up from AbstractEntityPersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,1,8
2559,hibernate-distribution-3.3.2.GA,DESIGN,//should this interface extend PropertyMapping?,yes,undetermined,0,9
2560,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"//TODO: get all properties, not just the fetched ones!",yes,undetermined,9,0
2561,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// public getters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
2562,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*package*/,no,undetermined,0,9
2563,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// not final-static to avoid possible classcast exceptions if using different oracle drivers.,no,undetermined,1,8
2564,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// The rest only matters for optimistic locking, where we // need to establish the proper data version on the region root",no,undetermined,0,9
2565,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Configure the cache to use our TM,no,undetermined,0,9
2566,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this method is a noop if there is a Synchronization!,no,undetermined,0,9
2567,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Configured outside of Hibernate (i.e. Servlet container, or Java Bean Container // already has Proxool pools running, and this provider is to just borrow one of these",no,undetermined,0,9
2568,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// standard sql92 functions (can be overridden by subclasses),no,undetermined,0,9
2569,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// -- Implementation private methods --,no,undetermined,0,9
2570,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// even though we might find a pre-existing element by join path, we may not be able to reuse it...",no,undetermined,1,8
2571,hibernate-distribution-3.3.2.GA,DESIGN,//use of a stringbuffer to workaround a JDK bug,yes,undetermined,9,0
2572,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The basic implementation is to simply use the node's text,no,undetermined,0,9
2573,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//sql = update;,no,undetermined,0,9
2574,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the closure of all properties in the entire hierarchy including // subclasses and superclasses of this class,no,undetermined,0,9
2575,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// persistOnFlush() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
2576,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Configured using the JAXP Configurator,no,undetermined,0,9
2577,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		settings.setShowSqlEnabled(showSql);,no,undetermined,1,8
2578,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this is called from SettingsFactory irregardless; trivial to simply disregard,no,undetermined,0,9
2579,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// IMPORT,no,undetermined,0,9
2580,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//don't bother trying to update, we know there is no row there yet",no,undetermined,0,9
2581,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// for version properties marked as being generated, make sure they are ""always"" // generated; aka, ""insert"" is invalid; this is dis-allowed by the DTD, // but just to make sure...",no,undetermined,1,8
2582,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// current timestamp support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
2583,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*&& etype.isReferenceToPrimaryKey()*/,no,undetermined,0,9
2584,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Note : success = false, because we don't know the outcome of the transaction",no,undetermined,0,9
2585,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Create SQL_TOKEN nodes for the columns.,no,undetermined,0,9
2586,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// (NOT (LIKE a b) ) => (NOT_LIKE a b),no,undetermined,1,8
2587,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	private ComponentTuplizerFactory componentTuplizerFactory; todo : HHH-3517 and HHH-1907 //	private BytecodeProvider bytecodeProvider;,no,undetermined,9,0
2588,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// loading ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
2589,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// For the case of dynamic-insert=""true"", we need to generate the INSERT SQL",no,undetermined,0,9
2590,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Close extra brackets we opened,no,undetermined,0,9
2591,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// these pieces are needed for usage in select clause,no,undetermined,0,9
2592,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//needed for SOAP libraries, etc",no,undetermined,1,8
2593,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//needed by arrays,no,undetermined,0,9
2594,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// local cache, so we use synchronization",no,undetermined,1,8
2595,hibernate-distribution-3.3.2.GA,DESIGN,//index += getPropertyColumnSpan( i ); //TODO:  this is kinda slow...,yes,undetermined,8,1
2596,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// load()/get() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
2597,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//special case,no,undetermined,0,9
2598,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/**
	 * Build a ResultSetMappingDefinition given a containing element for the ""return-XXX"" elements
	 *
	 * @param resultSetElem The element containing the return definitions.
	 * @param path No clue...
	 * @param mappings The current processing state.
	 * @return The description of the mappings...
	 */",no,undetermined,3,6
2599,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// OptimisticCache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
2600,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
2601,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//stops flush being called multiple times if this method is recursively called,no,undetermined,0,9
2602,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//assign the requested id to the proxy, *before* //reassociating the proxy",no,undetermined,0,9
2603,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
2604,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//String[] keyCols = collPersister.getKeyColumnNames();,no,undetermined,0,9
2605,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The HQL class alias refers to the class name.,no,undetermined,0,9
2606,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// by default we report no support for NOWAIT lock semantics,no,undetermined,2,7
2607,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// this property belongs to the table, and it is not specifically // excluded from optimistic locking by optimistic-lock=""false""",no,undetermined,0,9
2608,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// or bidirectional safety method, setting both sides: aPerson.addToEvent(anEvent);",no,undetermined,0,9
2609,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Code to handle subclasses of topClass,no,undetermined,0,9
2610,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: code duplication with JoinedSubclassEntityPersister,yes,undetermined,8,1
2611,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// select the correct row by either pk or rowid,no,undetermined,0,9
2612,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// a peek ahead showed this as an JPA-positional parameter,no,undetermined,0,9
2613,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// build an array with indices equal to the total number // of actual returns in the result Hibernate will return // for this query (scalars + non-scalars),no,undetermined,0,9
2614,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Dialect method overrides ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
2615,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//should never happen, i think",no,undetermined,0,9
2616,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// otherwise, everything ok.",no,undetermined,1,8
2617,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ID,no,undetermined,0,9
2618,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Configured using the Properties File Configurator,no,undetermined,0,9
2619,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// tree cache in optimistic mode seems to have as very difficult // time with remove calls on non-existent nodes (NPEs)...,no,undetermined,0,9
2620,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the class hierarchy structure,no,undetermined,1,8
2621,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If a where clause was specified in the update/delete query, use it to limit the // returned ids here...",no,undetermined,0,9
2622,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if a ThreadLocalSessionContext-bound session happens to get // serialized, to be completely correct, we need to make sure // that unbinding of that session occurs.",no,undetermined,0,9
2623,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Check the persistence context for an entry relating to this // entity to be merged...,no,undetermined,0,9
2624,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// refresh() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
2625,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we can't batch joined inserts, *especially* not if it is an identity insert; // nor can we batch statements where the expectation is based on an output param",no,undetermined,0,9
2626,hibernate-distribution-3.3.2.GA,DESIGN,//polymorphism comment above,yes,undetermined,1,8
2627,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// EARLY EXIT!!!!,no,undetermined,0,9
2628,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// prepare and execute the insert,no,undetermined,0,9
2629,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// int,no,undetermined,0,9
2630,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Schedule updates to collections:,no,undetermined,0,9
2631,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//insert all the new entries,no,undetermined,0,9
2632,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Class names in the FROM clause result in a JoinSequence (the old FromParser does this).,no,undetermined,0,9
2633,hibernate-distribution-3.3.2.GA,DESIGN,//Must be done here because of side-effect! yuck...,yes,undetermined,2,7
2634,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// detached collections that get found + reattached // during flush shouldn't be ignored,no,undetermined,0,9
2635,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//get 'em in the right order (not that it really matters),no,undetermined,1,8
2636,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Ignore the token class name parameter, and use a specific token class.",no,undetermined,0,9
2637,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Original Dialect.java returns "" for update"";",no,undetermined,0,9
2638,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//    protected RegionRootListener listener;,no,undetermined,0,9
2639,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// A collection of entities...,no,undetermined,0,9
2640,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: Somehow add the newly created foreign keys to the internal collection,yes,undetermined,8,1
2641,hibernate-distribution-3.3.2.GA,DESIGN,"// ugly hack for cases like ""elements(foo.bar.collection)"" // (multi-part path expression ending in elements or indices)",yes,undetermined,9,0
2642,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//decide which ResultSet to get the property value from:,no,undetermined,0,9
2643,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ( (Column) discrim.getColumnIterator().next() ).setType(type);,no,undetermined,0,9
2644,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Otherwise, we have a non-scalar select with defined collection fetch(es). // Make sure that there is only a single root entity in the return (no tuples)",no,undetermined,0,9
2645,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// SORT,no,undetermined,0,9
2646,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// may be final,no,undetermined,2,7
2647,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// check a set of parent/child nodes in the from-clause tree // to determine if a comma is required between them,no,undetermined,0,9
2648,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// See if we had a 2nd invalidation from the same initial // preinvalidation timestamp. If so, only increment // if the new current value is an increase",no,undetermined,0,9
2649,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//NOTE SPECIAL CASE: // default to join and non-lazy for the ""second join"" // of the many-to-many",no,undetermined,0,9
2650,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Start performing the deletes,no,undetermined,0,9
2651,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* | this | bean | args | i | raw bean | exception | */,no,undetermined,0,9
2652,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//ATTRIBUTES MAINTAINED BETWEEN FLUSH CYCLES,no,undetermined,0,9
2653,hibernate-distribution-3.3.2.GA,DESIGN,// todo : should seriously consider not allowing a txn to begin from a child session //      can always route the request to the root session...,yes,undetermined,8,1
2654,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// LIMIT support (ala TOP) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
2655,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Never evict this node,no,undetermined,1,8
2656,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//We do not look for an existing join on the same path, because //it makes sense to join twice on the same collection role",no,undetermined,0,9
2657,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// key is an entity involved with the operation performed by the listener; // value is a flag indicating if the listener explicitly operates on the entity,no,undetermined,0,9
2658,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// --Commented out by Inspection (12/11/04 10:56 AM): int getWarningCount();,no,undetermined,0,9
2659,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
2660,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: assumes all collections disassemble to an array!,yes,undetermined,8,1
2661,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if no batch, use ""foo = ? and bar = ?""",no,undetermined,0,9
2662,hibernate-distribution-3.3.2.GA,DESIGN,// this is done here 'cos we might only know the type here (ugly!) // TODO: improve this a lot:,yes,undetermined,8,1
2663,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Oracle8 and previous define only a ""DATE"" type which //      is used to represent all aspects of date/time",no,undetermined,0,9
2664,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// saves / updates don't cascade to uninitialized collections,no,undetermined,0,9
2665,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Reset the node type, because the rest of the system is expecting FROM_FRAGMENT, all we wanted was // for the factory to create the right sub-class.  This might get reset again later on anyway to make the // SQL generation simpler.",no,undetermined,0,9
2666,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//include the discriminator and class-level where, but not filters",no,undetermined,0,9
2667,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//cannot occur,no,undetermined,0,9
2668,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Tell the dot node about the join type.,no,undetermined,0,9
2669,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//Enable for HHH-440, which we don't like:",no,undetermined,1,8
2670,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//an identifier mapper => getKey will be included in the getNonDuplicatedPropertyIterator() //and checked later, so it needs to be excluded",no,undetermined,0,9
2671,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: get SQL rendering out of this package!,yes,undetermined,8,1
2672,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// unfortunately this stuff can't be cached because // it is per-invocation, not constant for the // QueryTranslator instance",no,undetermined,0,9
2673,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If we are in the process of releasing, no sense // checking for aggressive-release possibility.",no,undetermined,1,8
2674,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// for an any,no,undetermined,0,9
2675,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//JDBC and connection settings:,no,undetermined,2,7
2676,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// cascade-save to collections AFTER the collection owner was saved,no,undetermined,0,9
2677,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// child == parent.getFirstChild(),no,undetermined,0,9
2678,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// only carry on if the method has no parameters,no,undetermined,0,9
2679,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//foo.bars.size (also handles deprecated stuff like foo.bars.maxelement for backwardness),no,undetermined,2,7
2680,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: would it be better to do a refresh from db?,yes,undetermined,8,1
2681,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*package*/,no,undetermined,0,9
2682,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Now write the values of fields onto the prepared statement,no,undetermined,0,9
2683,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_0,no,undetermined,0,9
2684,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// this implementation is supposed to tolerate incorrect unsaved-value // mappings, for the purpose of backward-compatibility",no,undetermined,0,9
2685,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// otherwise, recurse",no,undetermined,1,8
2686,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this object was already loaded,no,undetermined,0,9
2687,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*
        Event anEvent = (Event) session
                .createCriteria(Event.class).setFetchMode(""participants"", FetchMode.JOIN)
                .add( Expression.eq(""id"", eventId) )
                .uniqueResult(); // Eager fetch the colleciton so we can use it detached
        */",no,undetermined,0,9
2688,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Get the caller principals,no,undetermined,0,9
2689,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	public List getCollectionAliases() { //		return collectionAliases; //	} // //	/*public List getCollectionOwners() { //		return collectionOwners; //	}*/ // //	public List getCollectionOwnerAliases() { //		return collectionOwnerAliases; //	} // //	public List getCollectionPersisters() { //		return collectionPersisters; //	} // //	public Map getAlias2Persister() { //		return alias2Persister; //	} // //	/*public boolean isCollectionInitializer() { //		return isCollectionInitializer; //	}*/ // ////	public List getPersisters() { ////		return persisters; ////	} // //	public Map getAlias2OwnerAlias() { //		return alias2OwnerAlias; //	} // //	public List getScalarTypes() { //		return scalarTypes; //	} //	public List getScalarColumnAliases() { //		return scalarColumnAliases; //	} // //	public List getPropertyResults() { //		return propertyResults; //	} // //	public List getCollectionPropertyResults() { //		return collectionResults; //	} // // //	public Map getAlias2Return() { //		return alias2Return; //	},no,undetermined,0,9
2690,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// automatically makes a column with the default name if none is specifed by XML,no,undetermined,0,9
2691,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//root entity comes *last*,no,undetermined,0,9
2692,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ignore this error for now,no,undetermined,2,7
2693,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// the current join represents the join between a many-to-many association table // and its ""target"" table.  Here we need to apply any additional filters // defined specifically on the many-to-many",no,undetermined,0,9
2694,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//			option.setDataVersion( NonLockingDataVersion.INSTANCE );,no,undetermined,0,9
2695,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// don't care about other param types here, just those explicitly user-defined...",no,undetermined,0,9
2696,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// add the current fragment to the FILTERS node,no,undetermined,0,9
2697,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// invokeinterface // enabled.getInterceptFieldCallback(),no,undetermined,0,9
2698,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: this class depends directly upon CriteriaImpl,  //      in the impl package ... add a CriteriaImplementor  //      interface",yes,undetermined,8,1
2699,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Get the first child to be considered.  Sub-classes may do this differently in order to skip nodes that // are not select expressions (e.g. DISTINCT).,no,undetermined,0,9
2700,hibernate-distribution-3.3.2.GA,DESIGN,// we have to set up the table later!! yuck,yes,undetermined,2,7
2701,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: make this a bit nicer,yes,undetermined,8,1
2702,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this should not happen since the DTD prevents it,no,undetermined,1,8
2703,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Set it!,no,undetermined,0,9
2704,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// otherwise, a trim-specification and/or a trim-character // have been specified;  we need to decide which options // are present and ""do the right thing"" // should leading trim-characters be trimmed? // should trailing trim-characters be trimmed? // the trim-character (what is to be trimmed off?) // the trim-source (from where should it be trimmed?)",no,undetermined,0,9
2705,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//assume true, since we don't really know, and it doesn't matter",no,undetermined,0,9
2706,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//not found in inner query , try the outer query",no,undetermined,0,9
2707,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO : this is a bit dodgy, come up with a better way to check this (plus see above comment)",yes,undetermined,8,1
2708,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// We have created the pool ourselves, so shut it down",no,undetermined,0,9
2709,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// this is the root (versioned) table, and we are using version-based // optimistic locking;  if we are not updating the version, also don't // check it (unless this is a ""generated"" version column)!",no,undetermined,1,8
2710,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//postInitialize() will be called after initialization,no,undetermined,0,9
2711,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// delete does cascade to uninitialized collections,no,undetermined,0,9
2712,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// again, null != null here",no,undetermined,0,9
2713,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this function has a template -> redirect output and catch the arguments,no,undetermined,0,9
2714,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// cache the actual id of the object, not the value of the // property-ref, which might not be initialized",no,undetermined,0,9
2715,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"//TODO handle supportsNotNullUnique=false, but such a case does not exist in the wild so far",yes,undetermined,9,0
2716,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Does the collection referenced by this FromElement // specify an order-by attribute?  If so, attach it to // the query's order-by",no,undetermined,1,8
2717,hibernate-distribution-3.3.2.GA,DESIGN,/* trim done to workaround stupid oracle bug that cant handle whitespaces before a { in a sp */,yes,undetermined,7,2
2718,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Make sure the root node for the region exists and  // has a DataVersion that never complains,no,undetermined,0,9
2719,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//"" cascade"";",no,undetermined,0,9
2720,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// A session is considered to contain an entity only if the entity has // an entry in the session's persistence context and the entry reports // that the entity has not been removed,no,undetermined,0,9
2721,hibernate-distribution-3.3.2.GA,DESIGN,// todo : remove this and just have subclasses use Isolater/IsolatedWork directly...,yes,undetermined,8,1
2722,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This 'dot' expression now refers to the resulting from element.,no,undetermined,1,8
2723,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Now, process the returns",no,undetermined,0,9
2724,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"// TODO: bindpropertyresults(alias, returnElem)",yes,undetermined,7,2
2725,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// unfortunately not really safe to normalize this // to 1 as an initial value like we do the others // because we would not be able to control this if // we are using a sequence...,no,undetermined,1,8
2726,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Use the DOT node to emit the first column name. // Create the column names, folled by the column aliases.",no,undetermined,0,9
2727,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//stops flush being called multiple times if this method is recursively called,no,undetermined,0,9
2728,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// the ids are fully resolved, so compare them with isDirty(), not isModified()",no,undetermined,1,8
2729,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//strip leading ','",no,undetermined,0,9
2730,hibernate-distribution-3.3.2.GA,DESIGN,// todo : what else to do here?,yes,undetermined,8,1
2731,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// otherwise a null or brand new collection // this will also (inefficiently) handle arrays, which // have no snapshot, so we can't do any better //processArrayOrNewCollection(collection, type);",no,undetermined,1,8
2732,hibernate-distribution-3.3.2.GA,DESIGN,// hack/workaround as sqlquery impl depend on having a key.,yes,undetermined,9,0
2733,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// (NOT (BETWEEN a b) ) => (NOT_BETWEEN a b),no,undetermined,0,9
2734,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//actually, this last test is probably unnecessary, since  //beforeCompletion() doesn't get called during rollback",no,undetermined,0,9
2735,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Due to the complexity in initializing the SelectClause, do not generate one here. // If it is not found; simply return null... // // Also, do not cache since it gets generated well after we are created.",no,undetermined,0,9
2736,hibernate-distribution-3.3.2.GA,DESIGN,// TODO should we just collect these like with the collections above?,yes,undetermined,9,0
2737,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Here we render the select column list based on the properties defined as being generated. // For partial component generation, we currently just re-select the whole component // rather than trying to handle the individual generated portions.",no,undetermined,0,9
2738,hibernate-distribution-3.3.2.GA,DESIGN,"//for sets, we should end the collection load after resolving //the entities, since we might call hashCode() on the elements //TODO: or we could do this polymorphically, and have two //      different operations implemented differently for arrays",yes,undetermined,9,0
2739,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Clobs are ignored by merge() operation,no,undetermined,1,8
2740,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// check to see if it is in the second-level cache,no,undetermined,0,9
2741,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// EntityNotFoundDelegate,no,undetermined,0,9
2742,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The getEmailAddresses() might trigger a lazy load of the collection,no,undetermined,1,8
2743,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Not a collection? // Return the entity property mapping.,no,undetermined,0,9
2744,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: inefficient,yes,undetermined,5,4
2745,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//end of array, start filling again from start",no,undetermined,0,9
2746,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// The path AST should be a DotNode, and it should have been evaluated already.",no,undetermined,0,9
2747,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// here we do not bother with the discriminator.,no,undetermined,0,9
2748,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Validate that an alias name was provided to determine which pool to use,no,undetermined,0,9
2749,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//stops flush being called multiple times if this method is recursively called,no,undetermined,0,9
2750,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// key is an entity involved with the operation performed by the listener; // value can be either a copy of the entity or the entity itself,no,undetermined,0,9
2751,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//unwrap it,no,undetermined,0,9
2752,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//TODO!!!!!!!,no,undetermined,4,5
2753,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// transfer an explicitly defined entity name // handle the lazy attribute,no,undetermined,0,9
2754,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if an exception occurs during flush, user must call rollback()",no,undetermined,0,9
2755,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// return an empty Type array,no,undetermined,0,9
2756,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// and perform the load,no,undetermined,0,9
2757,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// using local since the inheritedMetas at this point is not the correct map since it is always the empty map,no,undetermined,0,9
2758,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If the uresolved property path isn't set yet, just use the property name.",no,undetermined,0,9
2759,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Chop off the rest of the tree.,no,undetermined,0,9
2760,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// handle empty collection,no,undetermined,0,9
2761,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If there is no data type for this node, and we're at the end of the path (top most dot node), then // this might be a Java constant.",no,undetermined,0,9
2762,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Register the type of the out param - PostgreSQL uses Types.OTHER,no,undetermined,0,9
2763,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This assumes you will want to ignore any update counts ,no,undetermined,0,9
2764,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// FOREIGN KEY VIOLATION,no,undetermined,0,9
2765,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// not so sure this is even valid subtree.  but if it was, it'd // represent two unrelated table references...",no,undetermined,1,8
2766,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//Cope with [,]",no,undetermined,1,8
2767,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Create an OuterJoinGenerator for this dialect.,no,undetermined,0,9
2768,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//strip leading "", """,no,undetermined,0,9
2769,hibernate-distribution-3.3.2.GA,DESIGN,"//put() has nowait semantics, is this really appropriate? //note that it needs to be async replication, never local or sync",yes,undetermined,1,8
2770,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// while constructor is running,no,undetermined,0,9
2771,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: redesign how PropertyAccessors are acquired...,yes,undetermined,9,0
2772,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//disable a join back to this same association,no,undetermined,0,9
2773,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// it might still need to apply a collection ordering based on a // many-to-many defined order-by...,no,undetermined,0,9
2774,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// construct the cache,no,undetermined,0,9
2775,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if either its role changed,",no,undetermined,0,9
2776,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// make sure spinning forward did not put us past the end of the buffer...,no,undetermined,0,9
2777,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//full joins are not supported.. yet!,no,undetermined,0,9
2778,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: unnecessary for databases with ANSI-style joins,yes,undetermined,9,0
2779,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//$NON-NLS-1,no,undetermined,0,9
2780,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// PHASE 3 : Generate the SQL.,no,undetermined,0,9
2781,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The property is a component...,no,undetermined,0,9
2782,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// and this is not a forced initialization during flush,no,undetermined,0,9
2783,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// assume we do *not* refer to a property on the given persister,no,undetermined,0,9
2784,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//element = XMLHelper.generateDom4jElement( persister.getNodeName() );,no,undetermined,0,9
2785,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//to stop the class from being unloaded,no,undetermined,0,9
2786,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*!persister.isCacheInvalidationRequired()*/,no,undetermined,0,9
2787,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// collect EntityIdentifier(s) of the *current* elements - add them into a HashSet for fast access,no,undetermined,0,9
2788,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//the user visible aliases, which are unknown to the superclass, //these are not the actual ""physical"" SQL aliases",no,undetermined,0,9
2789,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// add another (inner) nested select // add the main query // close off the inner nested select,no,undetermined,0,9
2790,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// TODO : why aren't these the same?,yes,undetermined,8,1
2791,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
2792,hibernate-distribution-3.3.2.GA,DESIGN,// todo: this was added to support initializing an entity's EntityEntry snapshot during reattach; // this should be refactored to instead expose a method to assemble a EntityEntry based on this // state for return.,yes,undetermined,7,2
2793,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// persists don't cascade to uninitialized collections,no,undetermined,0,9
2794,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: we should throw an exception if we really *know* for sure   //      that this is a detached instance, rather than just assuming //throw new StaleObjectStateException(entityName, id);",yes,undetermined,9,0
2795,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// We only build caches if *none* were passed in.  Passing in // caches counts as a clear statement of exactly what is wanted,no,undetermined,0,9
2796,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// null sql means that the only lazy properties // are shared PK one-to-one associations which are // handled differently in the Type#nullSafeGet code...,no,undetermined,0,9
2797,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the path expression continues after a ],no,undetermined,0,9
2798,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
2799,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
2800,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// then dom4j tuplizer, if dom4j representation is available",no,undetermined,0,9
2801,hibernate-distribution-3.3.2.GA,DESIGN,//yuck!,yes,undetermined,2,7
2802,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// TODO: RESTRICT VIOLATION,yes,undetermined,7,2
2803,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//this bit is only *really* absolutely necessary for handling //requestedId, but is also good if we merge multiple object //graphs, since it helps ensure uniqueness",no,undetermined,1,8
2804,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// TABLENAME,no,undetermined,0,9
2805,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we need to wrtap the param in a cast(),no,undetermined,0,9
2806,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// PROPERTIES,no,undetermined,0,9
2807,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If there are any scalars (non-entities) selected, render the select column aliases.",no,undetermined,0,9
2808,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//first look for a reference to a projection alias,no,undetermined,0,9
2809,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Use the delegate.,no,undetermined,0,9
2810,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: if object was an uninitialized proxy, this is inefficient, //      resulting in two SQL selects",yes,undetermined,8,1
2811,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Make 100% certain that this is called before any subsequent ScheduledUpdate.afterTransactionCompletion()!!,no,undetermined,0,9
2812,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// mutation depends on the types of nodes invloved...,no,undetermined,1,8
2813,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// if it was dirtied by a collection only,no,undetermined,0,9
2814,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Identity map of CollectionEntry instances, by the collection wrapper",no,undetermined,0,9
2815,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Here we don't want to suspend the tx. If we do: // 1) We might be caching query results that reflect uncommitted // changes. No tx == no WL on cache node, so other threads // can prematurely see those query results // 2) No tx == immediate replication. More overhead, plus we // spread issue #1 above around the cluster",no,undetermined,1,8
2816,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// treat it as a classname,no,undetermined,0,9
2817,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//registerFunction( ""trim"", new StandardSQLFunction( ""trim"", Hibernate.STRING ) );",no,undetermined,0,9
2818,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if we could not register a synchronization, //do the before/after completion callbacks //ourself (but we need to let jdbcContext //know that this is what we are going to //do, so it doesn't keep trying to register //synchronizations)",no,undetermined,0,9
2819,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// compare to cached state (ignoring collections unless versioned),no,undetermined,0,9
2820,hibernate-distribution-3.3.2.GA,DEFECT,"// could happen for custom Criteria impls.  Not likely, but... // 		for long term solution, see HHH-3514",yes,undetermined,0,9
2821,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we don't need to worry about existing version being uninitialized // because this block isn't called by a re-entrant load (re-entrant // loads _always_ have lock mode NONE),no,undetermined,0,9
2822,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//private CacheEntry cacheEntry;,no,undetermined,0,9
2823,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Get the persister for the _subclass_,no,undetermined,0,9
2824,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Detect discriminator values...,no,undetermined,0,9
2825,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//needed for SOAP libraries, etc",no,undetermined,1,8
2826,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// bad type,no,undetermined,0,9
2827,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the map of batch numbers to EntityInsertAction lists,no,undetermined,1,8
2828,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// End of first unit of work,no,undetermined,0,9
2829,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//use the current version,no,undetermined,0,9
2830,hibernate-distribution-3.3.2.GA,DEFECT,"//FIXME we don't have the associated entity table name here, has to be done in a second pass",yes,undetermined,6,3
2831,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// for a null target, or a target which is the same as the original, we // need to put the merged elements in a new collection",no,undetermined,0,9
2832,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// cascade-delete to collections BEFORE the collection owner is deleted,no,undetermined,0,9
2833,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// select topic, syntax from information_schema.help // where section like 'Function%' order by section, topic // // see also ->  http://www.h2database.com/html/functions.html",no,undetermined,2,7
2834,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Default to sharing the entity cache if there is one,no,undetermined,0,9
2835,hibernate-distribution-3.3.2.GA,DESIGN,//TODO possibly relax that,yes,undetermined,9,0
2836,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// add the discriminator,no,undetermined,0,9
2837,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// We ignore minimalPutOverride. JBossCache putForExternalRead is // already about as minimal as we can get; it will promptly return // if it discovers that the node we want to write to already exists,no,undetermined,0,9
2838,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// apend everything up until the next encountered open brace,no,undetermined,0,9
2839,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// add the comment // nest the main query in an outer select // add the rownnumber bit into the outer query select list,no,undetermined,1,8
2840,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// calls executeBatch(),no,undetermined,0,9
2841,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// check if it is already completely loaded, but unowned",no,undetermined,0,9
2842,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: include the rowids!!!!,yes,undetermined,8,1
2843,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//will be ignored, using the existing Entry instead",no,undetermined,0,9
2844,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: implement caching?! proxies?!,yes,undetermined,9,0
2845,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: should orphans really be deleted during lock???,yes,undetermined,9,0
2846,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// remove initial "" and """,no,undetermined,0,9
2847,hibernate-distribution-3.3.2.GA,DEFECT,//TODO: old version did not require hashmap lookup: //keys[collectionOwner].getIdentifier(),yes,undetermined,9,0
2848,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// do a check,no,undetermined,0,9
2849,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Must occur after resolving identifiers!,no,undetermined,0,9
2850,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//cache this,no,undetermined,0,9
2851,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//+ ""_"" + referencedColumnName not used for backward compatibility",no,undetermined,0,9
2852,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// WebSphere, however, is not a sane JEE/JTA container...",no,undetermined,1,8
2853,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//different nullability rules for pk/fk,no,undetermined,0,9
2854,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// starts with the name of a mapped class (new style),no,undetermined,1,8
2855,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// State ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
2856,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// long,no,undetermined,0,9
2857,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Next, try to locate this resource through this class's classloader",no,undetermined,1,8
2858,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	register the type of the out param - an Oracle specific type,no,undetermined,0,9
2859,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Various Expectation instances ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
2860,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If the from element isn't in the same clause, create a new from element.",no,undetermined,0,9
2861,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//for a dynamic-class,no,undetermined,0,9
2862,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we can't cascade to non-embedded elements,no,undetermined,0,9
2863,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Fully resolve the map reference, create implicit joins.",no,undetermined,0,9
2864,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// IDENT might be the name of a class.,no,undetermined,0,9
2865,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//EARLY EXIT!,no,undetermined,0,9
2866,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//<String, String>",no,undetermined,0,9
2867,hibernate-distribution-3.3.2.GA,DEFECT,"// TODO : not sure which (either?) is correct, could not find docs on how to do this. // did find various blogs and forums mentioning that select CURRENT_TIMESTAMP // does not work...",yes,undetermined,9,0
2868,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// determine the id getter and setter methods from the proxy interface (if any) // determine all interfaces needed by the resulting proxy,no,undetermined,0,9
2869,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// return false;,no,undetermined,0,9
2870,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//overriden to avoid System.exit,no,undetermined,0,9
2871,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//EARLY EXIT,no,undetermined,0,9
2872,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//nothing to do,no,undetermined,0,9
2873,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// don't care...,no,undetermined,0,9
2874,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if it is a property of an embedded component, invoke on the ""identifier""",no,undetermined,0,9
2875,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*&& !indexIsFormula*/,no,undetermined,0,9
2876,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If the propertyType is null and there isn't a parent, just // stop now... there was a problem resolving the node anyway.",no,undetermined,1,8
2877,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// don't need to check laziness (dirty checking algorithm handles that),no,undetermined,1,8
2878,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: is this right??,yes,undetermined,9,0
2879,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aaload,no,undetermined,0,9
2880,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//overwrite old proxy,no,undetermined,0,9
2881,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the standard SQL function name is current_timestamp...,no,undetermined,0,9
2882,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* current stack len = 0 */,no,undetermined,0,9
2883,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// aggregate functions shouldn't be registered, right? //registerFunction( ""list"", new StandardSQLFunction(""list"",Hibernate.STRING) ); // stopped on $list",no,undetermined,0,9
2884,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//swallow,no,undetermined,0,9
2885,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// substitutes into values by side-effect,no,undetermined,0,9
2886,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Look through the FromElement's children to find any collections of values that should be fetched...,no,undetermined,0,9
2887,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Following methods we don't delegate since they have so little logic // it's clearer to just implement them here,no,undetermined,1,8
2888,hibernate-distribution-3.3.2.GA,DEFECT,"//TODO: would be nice to use false, but issues with MS SQL",yes,undetermined,8,1
2889,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//NOTICE: no "" or . since they are part of (compound) identifiers",no,undetermined,0,9
2890,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// return the concrete type, or the underlying type if a concrete type // was not specified",no,undetermined,0,9
2891,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we are using ""all"" or ""dirty"" property-based optimistic locking",no,undetermined,0,9
2892,hibernate-distribution-3.3.2.GA,DESIGN,// Does this dialect support check constraints?,yes,undetermined,0,9
2893,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// create our own copy of the user-supplied tuplizer impl map,no,undetermined,0,9
2894,hibernate-distribution-3.3.2.GA,DESIGN,// NOTE VERY HACKISH WORKAROUND!! // TODO: Fix this so it will work for non-POJO entity mode,yes,undetermined,9,0
2895,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// no-op; CCS did not have such a concept,no,undetermined,0,9
2896,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// otherwise immediately materialize it,no,undetermined,1,8
2897,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Multi-param date dialect functions...,no,undetermined,0,9
2898,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// TRUE if the pool is borrowed from the outside, FALSE if we used to create it",no,undetermined,0,9
2899,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : this constructor form is *only* used from constructor directly below us; can it go away?,yes,undetermined,8,1
2900,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : not so sure this is needed...,yes,undetermined,8,1
2901,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// in case we were deserialized in a different JVM, look for an instance with the same name // (alternatively we could do an actual JNDI lookup here....)",no,undetermined,0,9
2902,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The syntax used to add a foreign key constraint to a table.,no,undetermined,0,9
2903,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// release the jdk internal caches everytime to ensure this // plays nicely with destroyable class-loaders,no,undetermined,1,8
2904,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// legacy behavior (with no abstract attribute specified),no,undetermined,0,9
2905,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// found,no,undetermined,0,9
2906,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//handle empty collections,no,undetermined,0,9
2907,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// then dom4j tuplizer, if dom4j representation is available",no,undetermined,0,9
2908,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if the corresponding SQL value is NULL, the reader we got is NULL as well",no,undetermined,0,9
2909,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// First, save off the pertinent ids, as the return value",no,undetermined,0,9
2910,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we do not actually propogate ANTLRExceptions as a cause, so // log it here for diagnostic purposes",no,undetermined,2,7
2911,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the element has changed,no,undetermined,0,9
2912,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// End unit of work,no,undetermined,0,9
2913,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Allows various loaders (ok mainly the QueryLoader :) to check // whether scrolling of their result set should be allowed. // // By default it is allowed.,no,undetermined,0,9
2914,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Use the explicitly declared select expression; determine the // return types indicated by each select token,no,undetermined,0,9
2915,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Append the stem to the proxool pool alias,no,undetermined,0,9
2916,hibernate-distribution-3.3.2.GA,DEFECT,// TODO: does not work for EntityMode.DOM4J yet!,yes,undetermined,9,0
2917,hibernate-distribution-3.3.2.GA,DESIGN,// TODO: encapsulate the protected instance variables!,yes,undetermined,8,1
2918,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// assumes that types are all of span 1,no,undetermined,0,9
2919,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//before cascade!,no,undetermined,0,9
2920,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//keep the behavior consistent even for boundary usages,no,undetermined,0,9
2921,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we are the LHS of the DOT representing a naked comp-prop-ref,no,undetermined,0,9
2922,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// the user specifically supplied update=""true"", // which constitutes an illegal combo",no,undetermined,0,9
2923,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Fetch can't be used with scroll() or iterate().,no,undetermined,0,9
2924,hibernate-distribution-3.3.2.GA,DESIGN,//do we even really need this? the update will fail anyway....,yes,undetermined,0,9
2925,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//maintain correct duplication if loaded in a cartesian product,no,undetermined,0,9
2926,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Private constructor - stops checkstyle from complaining.,no,undetermined,0,9
2927,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// registerColumnType(Types.VARBINARY, ""CHARACTER($l)""); // registerColumnType(Types.BLOB, ""CHARACTER($l)"" );  // For use prior to CP 11.0 // registerColumnType(Types.CLOB, ""CHARACTER($l)"" );",no,undetermined,0,9
2928,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//JNDI + Serialization:,no,undetermined,0,9
2929,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: merge into one method!,yes,undetermined,8,1
2930,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//lazy = !join;,no,undetermined,0,9
2931,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// NOTE : firstRow is zero-based,no,undetermined,0,9
2932,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// todo : add support for READ_WRITE ( + NONSTRICT_READ_WRITE ??? ),yes,undetermined,9,0
2933,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//element //index -> id,no,undetermined,0,9
2934,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Fetch embedded identifiers propertynames from the ""virtual"" identifier component",no,undetermined,0,9
2935,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Finally, read ahead one row to position result set cursor // at the first physical row we are interested in loading",no,undetermined,0,9
2936,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//cannot batch fetch by unique key (property-ref associations),no,undetermined,0,9
2937,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: return new Lock(ts);,yes,undetermined,9,0
2938,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//many-to-many,no,undetermined,0,9
2939,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// again, CCS did not have such a concept; but a reasonable // proximity is to clear the cache after transaction *as long as* // the underlying cache is not JTA aware.",no,undetermined,0,9
2940,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//persistent collections may have components,no,undetermined,1,8
2941,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//lists, arrays //sets, maps, bags",no,undetermined,1,8
2942,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : would be really nice to cache the spec on the query-def so as to not have to re-calc the hash; // currently not doable though because of the resultset-ref stuff...,yes,undetermined,8,1
2943,hibernate-distribution-3.3.2.GA,DESIGN,//note that i parameter is now unused (delete it?),yes,undetermined,1,8
2944,hibernate-distribution-3.3.2.GA,DEFECT,// note that this timestamp is not correct if the connection provider // returns an older JDBC connection that was associated with a // transaction that was already begun before openSession() was called // (don't know any possible solution to this!),yes,undetermined,0,9
2945,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// If the token can tell us if it could be an identifier...,no,undetermined,0,9
2946,hibernate-distribution-3.3.2.GA,DESIGN,"//just to help out during the load (ugly, i know)",yes,undetermined,3,6
2947,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// We ensure ASYNC semantics (JBCACHE-1175),no,undetermined,0,9
2948,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//readResolveObject,no,undetermined,0,9
2949,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: not quite sure about the full implications of this!,yes,undetermined,8,1
2950,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The uber-rule here is that we need to include  subclass joins if // the FromElement is in any way dereferenced by a property from // the subclass table; otherwise we end up with column references // qualified by a non-existent table reference in the resulting SQL...,no,undetermined,1,8
2951,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//refresh() does not pass an entityName,no,undetermined,0,9
2952,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// (NOT (NOT_LIKE a b) ) => (LIKE a b),no,undetermined,1,8
2953,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// return,no,undetermined,0,9
2954,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// function support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
2955,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Render the SQL query,no,undetermined,0,9
2956,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// invokespecial // BulkAccessorException.<init>,no,undetermined,0,9
2957,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// need to treat this as if it where optimistic-lock=""all"" (dirty does *not* make sense); // first we need to locate the ""loaded"" state // // Note, it potentially could be a proxy, so perform the location the safe way...",no,undetermined,1,8
2958,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// basically just an adapted copy of find(CriteriaImpl),no,undetermined,1,8
2959,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// A shallow query is ok (although technically there should be no fetching here...),no,undetermined,0,9
2960,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Don't forget to resolve the argument! // Resolve the collection function now.,no,undetermined,0,9
2961,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//create all the new entries,no,undetermined,0,9
2962,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//		registerColumnType( Types.VARCHAR, 16777215, ""mediumtext"" ); //		registerColumnType( Types.VARCHAR, 65535, ""text"" );",no,undetermined,0,9
2963,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// don't even bother trying to read any further,no,undetermined,0,9
2964,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// evict() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,9
2965,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// if the given name is un-qualified we may neen to qualify it,no,undetermined,1,8
2966,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// DISCRIMINATOR,no,undetermined,0,9
2967,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// unfortunately this stuff can't be cached because // it is per-invocation, not constant for the // QueryTranslator instance",no,undetermined,0,9
