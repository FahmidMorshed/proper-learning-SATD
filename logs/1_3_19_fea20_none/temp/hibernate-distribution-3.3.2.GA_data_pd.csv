,projectname,classification,commenttext,label,code,time,yes_vote,no_vote,svm_pred_0,svm_pred_0_proba,svm_pred_1,svm_pred_1_proba,svm_pred_2,svm_pred_2_proba,svm_pred_3,svm_pred_3_proba,svm_pred_4,svm_pred_4_proba
0,hibernate-distribution-3.3.2.GA,DEFECT,"// this is only needed (afaict) for processing results from the query cache; // however, this cannot possibly work in the case of discovered types...",yes,undetermined,0,0,0,no,0.0814765557507814,yes,0.9909910569906906,yes,0.9915163574526573,yes,0.9926583116038101,yes,0.9932268207103208
1,hibernate-distribution-3.3.2.GA,DEFECT,// note that this timestamp is not correct if the connection provider // returns an older JDBC connection that was associated with a // transaction that was already begun before openSession() was called // (don't know any possible solution to this!),yes,undetermined,0,0,0,no,0.09979164500745878,yes,0.9909850815971211,yes,0.9915194581359724,yes,0.9926609694817201,yes,0.993238930272949
2,hibernate-distribution-3.3.2.GA,DEFECT,"//TODO: This is assertion is disabled because there is a bug that means the //	  original owner of a transient, uninitialized collection is not known //	  if the collection is re-referenced by a different object associated //	  with the current Session //throw new AssertionFailure(""bug loading unowned collection"");",yes,undetermined,0,0,0,yes,0.7632299594523658,yes,0.6799808621860794,yes,0.6739325671346077,yes,0.6900388149573141,yes,0.7006202113290009
3,hibernate-distribution-3.3.2.GA,DEFECT,"// This does not support the Cache SQL 'DISTINCT BY (comma-list)' extensions, // but this extension is not supported through Hibernate anyway.",yes,undetermined,0,0,0,no,0.06470440328715646,yes,0.9909850423122152,yes,0.9915121047893743,yes,0.9926666337338098,yes,0.993234638115998
4,hibernate-distribution-3.3.2.GA,DEFECT,"//TODO: when this is the entry point, we should use an INNER_JOIN for fetching the many-to-many elements!",yes,undetermined,0,0,0,yes,0.994121814314937,yes,0.9910162275078909,yes,0.9915288487101718,yes,0.9926625045933015,yes,0.9932268873681805
5,hibernate-distribution-3.3.2.GA,DEFECT,"// could happen for custom Criteria impls.  Not likely, but... // 		for long term solution, see HHH-3514",yes,undetermined,0,0,0,no,0.013738060949741638,yes,0.9910058665805284,yes,0.9915183684434136,yes,0.9926683937069416,yes,0.9932403092601316
6,hibernate-distribution-3.3.2.GA,DEFECT,//TODO: currently broken for unique-key references (does not detect //      change to unique key property of the associated object) //the owner of the association is not the owner of the id,yes,undetermined,0,0,0,yes,0.7019775325830506,yes,0.7371445263301231,yes,0.7255683675216257,yes,0.7374803707596805,yes,0.7398738845980127
7,hibernate-distribution-3.3.2.GA,DEFECT,//TODO: currently broken for unique-key references (does not detect //      change to unique key property of the associated object),yes,undetermined,0,0,0,yes,0.8223192099824777,yes,0.8017789000075013,yes,0.7981854701070759,yes,0.8105903602806375,yes,0.8155458152705567
8,hibernate-distribution-3.3.2.GA,DEFECT,"//TODO: entities CAN be compared, by PK and entity name, fix this!",yes,undetermined,0,0,0,yes,0.9908516185548161,yes,0.992993249298608,yes,0.9946370579637225,yes,0.9962134038851143,yes,0.996501831942458
9,hibernate-distribution-3.3.2.GA,DEFECT,// TODO: does not work for EntityMode.DOM4J yet!,yes,undetermined,0,0,0,yes,0.9999999994662588,yes,0.9999999983940319,yes,0.99999999894987,yes,0.9999999994086191,yes,0.9999999995697577
10,hibernate-distribution-3.3.2.GA,DEFECT,"// TODO: Deal with the ""optional"" attribute in the <join> mapping; // this code assumes that optional defaults to ""true"" because it // doesn't actually seem to work in the fetch=""join"" code // // Note that actual proper handling of optional-ality here is actually // more involved than this patch assumes.  Remember that we might have // multiple <join/> mappings associated with a single entity.  Really // a couple of things need to happen to properly handle optional here: //  1) First and foremost, when handling multiple <join/>s, we really //      should be using the entity root table as the driving table; //      another option here would be to choose some non-optional joined //      table to use as the driving table.  In all likelihood, just using //      the root table is much simplier //  2) Need to add the FK columns corresponding to each joined table //      to the generated select list; these would then be used when //      iterating the result set to determine whether all non-optional //      data is present // My initial thoughts on the best way to deal with this would be // to introduce a new SequentialSelect abstraction that actually gets // generated in the persisters (ok, SingleTable...) and utilized here. // It would encapsulated all this required optional-ality checking...",yes,undetermined,0,0,0,yes,0.963591718059681,yes,0.9910127455872155,yes,0.9915332376529445,yes,0.9926741855479894,yes,0.9932400488926845
11,hibernate-distribution-3.3.2.GA,DEFECT,"//TODO: would be nice to use false, but issues with MS SQL",yes,undetermined,0,0,0,yes,0.9867895205964451,yes,0.99099689739165,yes,0.9915334672776571,yes,0.9926838070576236,yes,0.9932401391465555
12,hibernate-distribution-3.3.2.GA,DEFECT,"//TODO: not really completely correct, since //      the uoe could occur while resolving //      associations, leaving the PC in an //      inconsistent state",yes,undetermined,0,0,0,yes,0.8270348221091112,yes,0.8088774614222306,yes,0.7995531539333542,yes,0.8069365131777987,yes,0.8309415337301916
13,hibernate-distribution-3.3.2.GA,DEFECT,//TODO: this is kinda inconsistent with CollectionType,yes,undetermined,0,0,0,yes,0.9999999984094904,yes,0.9999999542467358,yes,0.9999998940847673,yes,0.9999999499023947,yes,0.9999999612483571
14,hibernate-distribution-3.3.2.GA,DEFECT,"// For a one-to-many, a <bag> is not really a bag; // it is *really* a set, since it can't contain the // same element twice. It could be considered a bug // in the mapping dtd that <bag> allows <one-to-many>.",yes,undetermined,0,0,0,no,0.16765953687859048,no,0.11079226126832081,no,0.10092253635158213,no,0.09865011899169705,yes,0.9932290920051944
15,hibernate-distribution-3.3.2.GA,DEFECT,"//TODO: entities CAN be compared, by PK, fix this! -> only if/when we can extract the id values....",yes,undetermined,0,0,0,yes,0.9763890567483005,yes,0.9910058934628749,yes,0.9915095926208451,yes,0.9926734647371082,yes,0.9932384996938763
16,hibernate-distribution-3.3.2.GA,DEFECT,//TODO: old version did not require hashmap lookup: //keys[collectionOwner].getIdentifier(),yes,undetermined,0,0,0,no,0.5376037084640223,no,0.4781316902820006,no,0.47777789747502203,no,0.4884379596698407,no,0.4901547091137722
17,hibernate-distribution-3.3.2.GA,DEFECT,// TODO: this disables laziness even in non-pojo entity modes:,yes,undetermined,0,0,0,yes,0.979698084819508,yes,0.9909905194879319,yes,0.9915061924019727,yes,0.9926669220048838,yes,0.9932359379732927
18,hibernate-distribution-3.3.2.GA,DEFECT,"// TODO: at the point where we are resolving collection references, we don't // know if the uk value has been resolved (depends if it was earlier or // later in the mapping document) - now, we could try and use e.getStatus() // to decide to semiResolve(), trouble is that initializeEntity() reuses // the same array for resolved and hydrated values",yes,undetermined,0,0,0,yes,0.6680992974627448,yes,0.6383660054824938,yes,0.640523412967576,yes,0.6627325170917486,yes,0.7071174147943057
19,hibernate-distribution-3.3.2.GA,DEFECT,//TODO: currently we don't know a SessionFactory reference when building the Tuplizer //      THIS IS A BUG (embedded-xml=false on component) // TODO : fix this after HHH-1907 is complete,yes,undetermined,0,0,0,yes,0.9999999871240763,yes,0.9999999689610536,yes,0.9999999692885785,yes,0.9999999812457789,yes,0.9999999866899189
20,hibernate-distribution-3.3.2.GA,DEFECT,//TODO: this requires that the collection is defined after the //      referenced property in the mapping file (ok?),yes,undetermined,0,0,0,yes,0.7416605285090621,yes,0.6988853420144002,yes,0.7384051137087448,yes,0.8201865162292602,yes,0.8504169518353524
21,hibernate-distribution-3.3.2.GA,DEFECT,// TODO : currently we really do not handle ValueInclusion.PARTIAL... // ValueInclusion.PARTIAL would indicate parts of a component need to // be included in the select; currently we then just render the entire // component into the select clause in that case.,yes,undetermined,0,0,0,yes,0.9437639988886312,yes,0.99101308411398,yes,0.9915291307309706,yes,0.9926733947137893,yes,0.9932275337655034
22,hibernate-distribution-3.3.2.GA,DEFECT,//TODO: is this completely correct?,yes,undetermined,0,0,0,yes,0.9999836329497669,yes,0.9968516998394145,yes,0.9963058353228564,yes,0.9969755770190741,yes,0.9972389616719561
23,hibernate-distribution-3.3.2.GA,DEFECT,// TODO: what if batchUpdate is a callablestatement ? // calls executeBatch(),yes,undetermined,0,0,0,yes,0.9919869381736576,yes,0.9910019253605246,yes,0.9915188410736775,yes,0.9926618129574251,yes,0.9932337585725471
24,hibernate-distribution-3.3.2.GA,DEFECT,// This doesn't actually seem to work but it *might* // work on some dbs. Also it doesn't work if there // are multiple columns of results because it // is not accounting for the suffix: // return new String[] { getDiscriminatorColumnName() };,yes,undetermined,0,0,0,yes,0.7517179662531517,yes,0.7706479814900837,yes,0.7716921050797574,yes,0.7837818267506496,yes,0.7897338543606152
25,hibernate-distribution-3.3.2.GA,DEFECT,"// First, validate all the enabled filters... //TODO: this implementation has bad performance",yes,undetermined,0,0,0,yes,0.9324386828328055,yes,0.9909836512348116,yes,0.991510795864705,yes,0.9926733463460283,yes,0.9932406542267179
26,hibernate-distribution-3.3.2.GA,DEFECT,"//TODO: passing null here, because this method is not really used for DOM4J at the moment //      but it is still a bug, if we don't get rid of this!",yes,undetermined,0,0,0,yes,0.9999886866231449,yes,0.9999816843064631,yes,0.9999835976044363,yes,0.9999884679392662,yes,0.9999926456344344
27,hibernate-distribution-3.3.2.GA,DEFECT,// TODO : this really needs to be delayed unitl after we definitively know the operand node type; // where this is currently a problem is parameters for which where we cannot unequivocally // resolve an expected type,yes,undetermined,0,0,0,yes,0.9886538104557712,yes,0.9910054224017657,yes,0.9915227938033154,yes,0.9926761615663661,yes,0.9932388706206216
28,hibernate-distribution-3.3.2.GA,DEFECT,"/*
		  * Algorithm
		  * Check for any level one nullability breaks
		  * Look at non null components to
		  *   recursively check next level of nullability breaks
		  * Look at Collections contraining component to
		  *   recursively check next level of nullability breaks
		  *
		  *
		  * In the previous implementation, not-null stuffs where checked
		  * filtering by level one only updateable
		  * or insertable columns. So setting a sub component as update=""false""
		  * has no effect on not-null check if the main component had good checkeability
		  * In this implementation, we keep this feature.
		  * However, I never see any documentation mentioning that, but it's for
		  * sure a limitation.
		  */",yes,undetermined,0,0,0,no,0.17761261685270957,no,0.1154235754650528,no,0.10981680775251235,no,0.10938122556656885,no,0.11004514560795618
29,hibernate-distribution-3.3.2.GA,DEFECT,"// assume that the row was not there since it previously had only null // values, so do an INSERT instead //TODO: does not respect dynamic-insert",yes,undetermined,0,0,0,no,0.12232796658729968,no,0.2200381998547011,no,0.2316350407205456,no,0.23701576854377565,no,0.25394771381971387
30,hibernate-distribution-3.3.2.GA,DEFECT,// todo : this call will not work for anything other than pojos!,yes,undetermined,0,0,0,yes,0.9999981251515071,yes,0.9999977313333193,yes,0.999997460420468,yes,0.9999983673404116,yes,0.9999987118391618
31,hibernate-distribution-3.3.2.GA,DEFECT,//note that this implementation is kinda broken //for components with many-to-one associations,yes,undetermined,0,0,0,no,0.2476988208404784,no,0.1939975614457085,no,0.1778999182780147,no,0.1810209602153675,no,0.21362452433717843
32,hibernate-distribution-3.3.2.GA,DEFECT,"//no need to take a snapshot - this is a  //performance optimization, but not really //important, except for entities with huge  //mutable property values",yes,undetermined,0,0,0,no,0.08902167336221013,yes,0.9909959089572032,yes,0.991528353454656,yes,0.9926694934274513,yes,0.9932240485346178
33,hibernate-distribution-3.3.2.GA,DEFECT,// TODO : this is broke for subqueries in statements other than selects...,yes,undetermined,0,0,0,yes,0.9745870647908416,yes,0.9910008754827637,yes,0.9915222441093642,yes,0.9926590712681469,yes,0.9932227732362384
34,hibernate-distribution-3.3.2.GA,DEFECT,"/*
         * The following types are not supported in RDMS/JDBC and therefore commented out.
         * However, in some cases, mapping them to CHARACTER columns works
         * for many applications, but does not work for all cases.
         */",yes,undetermined,0,0,0,no,0.33101065837234056,no,0.4034554944688885,no,0.3817138073164494,no,0.38780867537553404,no,0.43940996023083534
35,hibernate-distribution-3.3.2.GA,DEFECT,// TODO : should this be an error?,yes,undetermined,0,0,0,yes,0.9999999735155142,yes,0.999999958335161,yes,0.9999999419142556,yes,0.9999999587508666,yes,0.9999999688604574
36,hibernate-distribution-3.3.2.GA,DEFECT,"// three general cases we check here as to whether to render a physical SQL join: // 1) is our parent a DotNode as well?  If so, our property reference is // 		being further de-referenced... // 2) is this a DML statement // 3) we were asked to generate any needed joins (generateJoins==true) *OR* //		we are currently processing a select or from clause // (an additional check is the REGRESSION_STYLE_JOIN_SUPPRESSION check solely intended for the test suite) // // The REGRESSION_STYLE_JOIN_SUPPRESSION is an additional check // intended solely for use within the test suite.  This forces the // implicit join resolution to behave more like the classic parser. // The underlying issue is that classic translator is simply wrong // about its decisions on whether or not to render an implicit join // into a physical SQL join in a lot of cases.  The piece it generally // tends to miss is that INNER joins effect the results by further // restricting the data set!  A particular manifestation of this is // the fact that the classic translator will skip the physical join // for ToOne implicit joins *if the query is shallow*; the result // being that Query.list() and Query.iterate() could return // different number of results!",yes,undetermined,0,0,0,no,0.159163523864114,no,0.13430312126795002,no,0.14366004133879468,no,0.13662460159812856,no,0.13126355855918992
37,hibernate-distribution-3.3.2.GA,DEFECT,// TODO: figure out how this should be set. /////////////////////////////////////////////////////////////////////////////// // This was the reason for failures regarding INDEX_OP and subclass joins on // theta-join dialects; not sure what behaviour we were trying to emulate ;) //		joinSequence = joinSequence.getFromPart();	// Emulate the old addFromOnly behavior.,yes,undetermined,0,0,0,yes,0.9146248892329498,yes,0.9910023672802265,yes,0.9915267459188771,yes,0.9926560087520188,yes,0.9932365194069182
38,hibernate-distribution-3.3.2.GA,DEFECT,"// The preference here would be //   SQLFunctionTemplate( Hibernate.TIMESTAMP, ""current_timestamp(?1)"", false) // but this appears not to work. // Jay Nance 2006-09-22",yes,undetermined,0,0,0,no,0.32790397666868715,no,0.4226225870899067,no,0.39379250039883334,no,0.403002855307226,no,0.40279500368990834
39,hibernate-distribution-3.3.2.GA,DEFECT,"//TODO: would be nice to use false, but issues with MS SQL",yes,undetermined,0,0,0,yes,0.9867895205964451,yes,0.99099689739165,yes,0.9915334672776571,yes,0.9926838070576236,yes,0.9932401391465555
40,hibernate-distribution-3.3.2.GA,DEFECT,"//TODO: inexact, what we really need to know is: are any outer joins used?",yes,undetermined,0,0,0,yes,0.9959098285571896,yes,0.9943086881907691,yes,0.9952284818147671,yes,0.9958275495314282,yes,0.9962675206504426
41,hibernate-distribution-3.3.2.GA,DEFECT,"//TODO: would be nice to use false, but issues with MS SQL",yes,undetermined,0,0,0,yes,0.9867895205964451,yes,0.99099689739165,yes,0.9915334672776571,yes,0.9926838070576236,yes,0.9932401391465555
42,hibernate-distribution-3.3.2.GA,DEFECT,"// TODO : not sure which (either?) is correct, could not find docs on how to do this. // did find various blogs and forums mentioning that select CURRENT_TIMESTAMP // does not work...",yes,undetermined,0,0,0,yes,0.973365887793917,yes,0.9910150114417298,yes,0.9915375500398305,yes,0.9926608233331298,yes,0.9932297651538005
43,hibernate-distribution-3.3.2.GA,DEFECT,// TODO: cannot use generateSuffixes() - it handles the initial suffix differently.,yes,undetermined,0,0,0,no,0.32950147129544105,no,0.28006062854451746,no,0.28579290549433584,no,0.2840893326555146,no,0.2842171595025019
44,hibernate-distribution-3.3.2.GA,DEFECT,"//Don't need this, because we should never ever be selecting no columns in an insert ... select... //and because it causes a bug on DB2",yes,undetermined,0,0,0,no,0.044823841067669096,yes,0.9909885980583188,yes,0.991514315772199,yes,0.9926574101428841,yes,0.9932296658195853
45,hibernate-distribution-3.3.2.GA,DEFECT,// starts with an alias (old style) // semi-bad thing about this: can't re-alias another alias.....,yes,undetermined,0,0,0,no,0.05971890243829901,yes,0.9909959582173636,yes,0.9915257721331385,yes,0.9926736699004652,yes,0.9932218841450542
46,hibernate-distribution-3.3.2.GA,DEFECT,//TODO: BUG! this currently fails for named queries for non-POJO entities,yes,undetermined,0,0,0,yes,0.9787177010004804,yes,0.9909847234957796,yes,0.9917331052695706,yes,0.9932021497252711,yes,0.9939527727522991
47,hibernate-distribution-3.3.2.GA,DEFECT,"//FIXME we don't have the associated entity table name here, has to be done in a second pass",yes,undetermined,0,0,0,yes,0.8976258342052575,yes,0.9169358615958192,yes,0.9915216206769568,yes,0.9926584638059929,yes,0.9932287886187819
48,hibernate-distribution-3.3.2.GA,DEFECT,// this call is side-effecty,yes,undetermined,0,0,0,no,0.0054731872793487455,yes,0.9909893205130113,yes,0.9915160843347453,yes,0.9926773078983809,yes,0.9932243995231074
49,hibernate-distribution-3.3.2.GA,DEFECT,"// RDMS does not directly support the trim() function, we use rtrim() and ltrim()",yes,undetermined,0,0,0,no,0.0033778525846682316,yes,0.9910148676753685,yes,0.9915209909100956,yes,0.9926615156717282,yes,0.9932453338324739
50,hibernate-distribution-3.3.2.GA,DEFECT,// note: at least my local SQL Server 2005 Express shows this not working...,yes,undetermined,0,0,0,no,0.12791573900685627,yes,0.859019625907689,yes,0.8550403134597858,yes,0.8659095521708011,yes,0.871747414480215
51,hibernate-distribution-3.3.2.GA,DEFECT,// note: at least my local MySQL 5.1 install shows this not working...,yes,undetermined,0,0,0,no,0.08814712779102644,yes,0.9909923522906873,yes,0.9915046911273327,yes,0.992662574344634,yes,0.9932440012454997
52,hibernate-distribution-3.3.2.GA,DESIGN,"// use COUNT as the default.  This mimics the old behavior, although // NONE might be a better option moving forward in the case of callable",yes,undetermined,0,0,0,no,0.09079251872055016,yes,0.9909937703157231,yes,0.9915229208923368,yes,0.9926645129578107,yes,0.9932376795047035
53,hibernate-distribution-3.3.2.GA,DESIGN,//perhaps not really necessary...,yes,undetermined,0,0,0,yes,0.8887691307355979,yes,0.8372141002184129,yes,0.850569541784545,yes,0.8592041482011288,yes,0.8671386630464477
54,hibernate-distribution-3.3.2.GA,DESIGN,// todo : what else to do here?,yes,undetermined,0,0,0,yes,0.9930105091500604,yes,0.9932283940285211,yes,0.9936968796811938,yes,0.9946107811961472,yes,0.9950403921296633
55,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: disable batch loading if lockMode > READ?,yes,undetermined,0,0,0,no,0.5339316728171202,no,0.4902375312421829,no,0.484876134138016,no,0.44476361679246945,no,0.44996765793311266
56,hibernate-distribution-3.3.2.GA,DESIGN,// todo : what else to do here?,yes,undetermined,0,0,0,yes,0.9930105091500604,yes,0.9932283940285211,yes,0.9936968796811938,yes,0.9946107811961472,yes,0.9950403921296633
57,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: to handle concurrent writes correctly, the client should pass in a Lock",yes,undetermined,0,0,0,yes,0.8798979857739724,yes,0.9617027935480843,yes,0.9915100735032288,yes,0.9926745178336193,yes,0.9932420042627972
58,hibernate-distribution-3.3.2.GA,DESIGN,"// turn hibernate.c3p0.* into c3p0.*, so c3p0 // gets a chance to see all hibernate.c3p0.*",yes,undetermined,0,0,0,no,0.01919579631964143,yes,0.9909817047973296,yes,0.9915279344084511,yes,0.9926754678500305,yes,0.9932337451925052
59,hibernate-distribution-3.3.2.GA,DESIGN,//note there is a wierd implementation in the client side,yes,undetermined,0,0,0,no,0.0066179986556436565,yes,0.9909855918541361,yes,0.9915128073066601,yes,0.9926654250498969,yes,0.9932320142116566
60,hibernate-distribution-3.3.2.GA,DESIGN,// todo: this was added to support initializing an entity's EntityEntry snapshot during reattach; // this should be refactored to instead expose a method to assemble a EntityEntry based on this // state for return.,yes,undetermined,0,0,0,yes,0.9785135907390473,yes,0.9910045332352869,yes,0.9915059174709813,yes,0.9926684161171635,yes,0.9932314078573233
61,hibernate-distribution-3.3.2.GA,DESIGN,// Do we need to drop constraints before dropping tables in this dialect?,yes,undetermined,0,0,0,no,0.035213202779413394,yes,0.9910041487352438,yes,0.9915359799600437,yes,0.9926643271997824,yes,0.9932344475127429
62,hibernate-distribution-3.3.2.GA,DESIGN,"/**
     * FIXME Per the RegionFactory class Javadoc, this constructor version
     * should not be necessary.
     * 
     * @param props The configuration properties
     */",yes,undetermined,0,0,0,yes,0.9896909751495556,yes,0.9910130267795478,yes,0.9915178215568361,yes,0.9926777982647668,yes,0.9932412675311232
63,hibernate-distribution-3.3.2.GA,DESIGN,// Does this dialect support check constraints?,yes,undetermined,0,0,0,no,0.001533403535898909,yes,0.9910080178928241,yes,0.9915210673057003,yes,0.9926681141951026,yes,0.9932357512838313
64,hibernate-distribution-3.3.2.GA,DESIGN,// this is called by SessionFactory irregardless; we just disregard here; // could also add a check to SessionFactory to only conditionally call start,yes,undetermined,0,0,0,no,0.21642374046643392,no,0.2235429106557938,no,0.20459438271783217,no,0.2023494857495235,no,0.2040568067573305
65,hibernate-distribution-3.3.2.GA,DESIGN,// Does this dialect support the UNIQUE column syntax?,yes,undetermined,0,0,0,no,0.01915818855861796,yes,0.9909935578915087,yes,0.9915341194960869,yes,0.9926717180390804,yes,0.9932415610820585
66,hibernate-distribution-3.3.2.GA,DESIGN,// this is done here 'cos we might only know the type here (ugly!) // TODO: improve this a lot:,yes,undetermined,0,0,0,yes,0.9999998556016604,yes,0.9999999327197135,yes,0.9999999472363974,yes,0.999999967379662,yes,0.9999999745729747
67,hibernate-distribution-3.3.2.GA,DESIGN,// Does this dialect support the FOR UPDATE syntax?,yes,undetermined,0,0,0,no,0.02007102325299106,yes,0.9953873063778197,yes,0.9956949339749472,yes,0.9963266975943261,yes,0.9966554752236314
68,hibernate-distribution-3.3.2.GA,DESIGN,// todo : what is the implication of this?,yes,undetermined,0,0,0,yes,0.9999859650113281,yes,0.9999897631604586,yes,0.9999849124044057,yes,0.9999907299240057,yes,0.9999922299047326
69,hibernate-distribution-3.3.2.GA,DESIGN,// todo : YUCK!!!,yes,undetermined,0,0,0,no,0.011655632226661484,no,0.01236577759846885,no,0.011721998039486535,no,0.011178854171809327,no,0.010821618193954203
70,hibernate-distribution-3.3.2.GA,DESIGN,"// todo : again, how *should* this work for non-pojo entities?",yes,undetermined,0,0,0,yes,0.9999936313062113,yes,0.9999977042630086,yes,0.9999982538709727,yes,0.9999990291458667,yes,0.9999991905883684
71,hibernate-distribution-3.3.2.GA,DESIGN,"// Does this dialect support FOR UPDATE OF, allowing particular rows to be locked?",yes,undetermined,0,0,0,no,0.028345018388442177,yes,0.9909864658538151,yes,0.9915159546977415,yes,0.9926779351547576,yes,0.9932327921222756
72,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: really bad, evil hack to fix!!!",yes,undetermined,0,0,0,yes,0.9999999999998277,yes,0.999999999999523,yes,0.9999999999996827,yes,0.9999999999998348,yes,0.999999999999902
73,hibernate-distribution-3.3.2.GA,DESIGN,"//aliasRefNode.resolve( false, false, aliasRefNode.getText() ); //TODO: is it kosher to do it here? //TODO: is it kosher to do it here?",yes,undetermined,0,0,0,yes,0.992334517461475,yes,0.9909922091096008,yes,0.991507071638518,yes,0.9926631962720933,yes,0.9932324875328451
74,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: better to degrade to lazy=""false"" if uninstrumented",yes,undetermined,0,0,0,yes,0.9965230629194461,yes,0.9919824114942496,yes,0.9924929056896231,yes,0.993540511403608,yes,0.9939315509712844
75,hibernate-distribution-3.3.2.GA,DESIGN,// Does this dialect support the Oracle-style FOR UPDATE NOWAIT syntax?,yes,undetermined,0,0,0,no,0.006013141671805576,yes,0.9909913776784673,yes,0.9915200751884816,yes,0.9926696393442568,yes,0.9932260292015647
76,hibernate-distribution-3.3.2.GA,DESIGN,"/**
     * FIXME Per the RegionFactory class Javadoc, this constructor version
     * should not be necessary.
     * 
     * @param props The configuration properties
     */",yes,undetermined,0,0,0,yes,0.9896909751495556,yes,0.9910130267795478,yes,0.9915178215568361,yes,0.9926777982647668,yes,0.9932412675311232
77,hibernate-distribution-3.3.2.GA,DESIGN,//Icky workaround for MySQL bug:,yes,undetermined,0,0,0,yes,0.9774359587135524,yes,0.9909968414139472,yes,0.9915228333695458,yes,0.9926730488684424,yes,0.9932257164954275
78,hibernate-distribution-3.3.2.GA,DESIGN,// we have to set up the table later!! yuck,yes,undetermined,0,0,0,no,0.004029437861200203,yes,0.9909886967170515,yes,0.991509507398107,yes,0.9926564529099353,yes,0.9932326587274047
79,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: Somehow add the newly created foreign keys to the internal collection,yes,undetermined,0,0,0,yes,0.957182488284932,yes,0.9910030759368718,yes,0.9915040079169802,yes,0.9926566957470944,yes,0.9932380996464778
80,hibernate-distribution-3.3.2.GA,DESIGN,// This inner class implements a case statement....perhaps im being a bit over-clever here,yes,undetermined,0,0,0,yes,0.7285980346917307,yes,0.7259971093489637,yes,0.7598351897387213,yes,0.7729225923392665,yes,0.7802976803696847
81,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: merge into one method!,yes,undetermined,0,0,0,yes,0.9942560308441567,yes,0.994375693027993,yes,0.9949039173303382,yes,0.9956343530804604,yes,0.9961016447736629
82,hibernate-distribution-3.3.2.GA,DESIGN,// TODO: this is a bit of copy/paste from IndexedCollection.createPrimaryKey(),yes,undetermined,0,0,0,yes,0.9999953083628147,yes,0.999999192151172,yes,0.9999993157097317,yes,0.9999995263677103,yes,0.9999996535100332
83,hibernate-distribution-3.3.2.GA,DESIGN,// TODO: what type?,yes,undetermined,0,0,0,yes,0.8625538703182437,yes,0.8611968719177535,yes,0.8628974462948436,yes,0.8721119401527807,yes,0.8771127836122992
84,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: inefficient,yes,undetermined,0,0,0,yes,0.9783756965590928,yes,0.9909969203783837,yes,0.9915316109402613,yes,0.9926659850034316,yes,0.993233614559221
85,hibernate-distribution-3.3.2.GA,DESIGN,//FIXME: get the PersistentClass,yes,undetermined,0,0,0,yes,0.9529011881949462,yes,0.9910000919258355,yes,0.9915093051275172,yes,0.9926604984144644,yes,0.9932449392586531
86,hibernate-distribution-3.3.2.GA,DESIGN,// todo : we can remove this once the deprecated ctor can be made private...,yes,undetermined,0,0,0,yes,0.9857147047446648,yes,0.9910004260567864,yes,0.9915207937039585,yes,0.9926648406813668,yes,0.993235806326971
87,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: this is too conservative; if all preceding joins were  //      also inner joins, we could use an inner join here",yes,undetermined,0,0,0,yes,0.9646942175512376,yes,0.9910000538034212,yes,0.9915107469414334,yes,0.9926755761452104,yes,0.9932369034742302
88,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: redesign how PropertyAccessors are acquired...,yes,undetermined,0,0,0,yes,0.9999990483986536,yes,0.999998836724943,yes,0.9999991012100399,yes,0.9999994023501723,yes,0.9999995298373603
89,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : not so sure this is needed...,yes,undetermined,0,0,0,yes,0.9999998390356026,yes,0.9999997726986305,yes,0.9999997711371342,yes,0.9999998634575403,yes,0.9999998922574512
90,hibernate-distribution-3.3.2.GA,DESIGN,// todo : we can remove this once the deprecated ctor can be made private...,yes,undetermined,0,0,0,yes,0.9857147047446648,yes,0.9910004260567864,yes,0.9915207937039585,yes,0.9926648406813668,yes,0.993235806326971
91,hibernate-distribution-3.3.2.GA,DESIGN,//create an index on the key columns??,yes,undetermined,0,0,0,no,0.0006513436104841916,yes,0.9909825081931769,yes,0.9915166888780801,yes,0.9926556140714737,yes,0.9932431075239897
92,hibernate-distribution-3.3.2.GA,DESIGN,"/* TODO: joinKeyColumnName & foreignKeyColumnName should be called either here or at a
			 * slightly higer level in the stack (to get all the information we need)
			 * Right now HbmBinder does not support the
			 */",yes,undetermined,0,0,0,yes,0.9627392349353799,yes,0.9910102574902729,yes,0.9915135798340506,yes,0.9926686019756056,yes,0.9932375075894526
93,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: improve this hack!,yes,undetermined,0,0,0,yes,0.9999999999999669,yes,0.99999999999993,yes,0.9999999999999253,yes,0.9999999999999651,yes,0.9999999999999699
94,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: bad implementation, cos it depends upon ordering of mapping doc //      fixing this requires that Collection/PersistentClass gain access //      to the Mappings reference from Configuration (or the filterDefinitions //      map directly) sometime during Configuration.buildSessionFactory //      (after all the types/filter-defs are known and before building //      persisters).",yes,undetermined,0,0,0,yes,0.7077623516644859,yes,0.7500932399102181,yes,0.7490018771868007,yes,0.7760988111413694,yes,0.8334793085934163
95,hibernate-distribution-3.3.2.GA,DESIGN,//use of trim() here is ugly?,yes,undetermined,0,0,0,yes,0.8275355597355699,yes,0.9619778538641249,yes,0.9915333667862422,yes,0.9926547083215362,yes,0.993221606187926
96,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: ideally we need the construction of PropertyAccessor to take the following: //      1) EntityMode //      2) EntityMode-specific data (i.e., the classname for pojo entities) //      3) Property-specific data based on the EntityMode (i.e., property-name or dom4j-node-name) // The easiest way, with the introduction of the new runtime-metamodel classes, would be the // the following predicates: //      1) PropertyAccessorFactory.getPropertyAccessor() takes references to both a //          org.hibernate.metadata.EntityModeMetadata and org.hibernate.metadata.Property //      2) What is now termed a ""PropertyAccessor"" stores any values needed from those two //          pieces of information //      3) Code can then simply call PropertyAccess.getGetter() with no parameters; likewise with //          PropertyAccessor.getSetter()",yes,undetermined,0,0,0,yes,0.7482372047683115,yes,0.7394303628171006,yes,0.7559496230422463,yes,0.7729781718016461,yes,0.773330755201927
97,hibernate-distribution-3.3.2.GA,DESIGN,// can happen because of the multiple ways Cache.remove() // can be invoked :(,yes,undetermined,0,0,0,no,0.002428730090780189,yes,0.9909922071523328,yes,0.9915118775658672,yes,0.9926660299668343,yes,0.9932399722488124
98,hibernate-distribution-3.3.2.GA,DESIGN,//ick!,yes,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
99,hibernate-distribution-3.3.2.GA,DESIGN,// todo : we can remove this once the deprecated ctor can be made private...,yes,undetermined,0,0,0,yes,0.9857147047446648,yes,0.9910004260567864,yes,0.9915207937039585,yes,0.9926648406813668,yes,0.993235806326971
100,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO: this is very suboptimal for some subclasses (namely components), // since it does not take advantage of two-phase-load",yes,undetermined,0,0,0,yes,0.9698705196276279,yes,0.9909897884822509,yes,0.9915101218325922,yes,0.9926677939288567,yes,0.9932296471461514
101,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: should this be Session.instantiate(Persister, ...)?",yes,undetermined,0,0,0,yes,0.9798195733888374,yes,0.9910983332679334,yes,0.9915292983410731,yes,0.9926699524955875,yes,0.9932474057311448
102,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: suck this into initLaziness!,yes,undetermined,0,0,0,yes,0.9999999667167361,yes,0.9999999350178695,yes,0.9999998002061007,yes,0.9999998738665087,yes,0.9999999012229867
103,hibernate-distribution-3.3.2.GA,DESIGN,// todo : we can remove this once the deprecated ctor can be made private...,yes,undetermined,0,0,0,yes,0.9857147047446648,yes,0.9910004260567864,yes,0.9915207937039585,yes,0.9926648406813668,yes,0.993235806326971
104,hibernate-distribution-3.3.2.GA,DESIGN,"// 'hibernate.temp.use_jdbc_metadata_defaults' is a temporary magic value. // The need for it is intended to be alleviated with future developement, thus it is // not defined as an Environment constant... // // it is used to control whether we should consult the JDBC metadata to determine // certain Settings default values; it is useful to *not* do this when the database // may not be available (mainly in tools usage).",yes,undetermined,0,0,0,no,0.1844797834743673,no,0.13692996176387512,no,0.13261532040254737,no,0.13030001532377386,no,0.13214967676450778
105,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: is this right??,yes,undetermined,0,0,0,yes,0.9999999999982373,yes,0.9999999999965151,yes,0.9999999999946313,yes,0.9999999999968725,yes,0.999999999997897
106,hibernate-distribution-3.3.2.GA,DESIGN,//ie. the subquery! yuck!,yes,undetermined,0,0,0,no,0.0012163371935012468,yes,0.9909995460274917,yes,0.9915093746387105,yes,0.9926615059140658,yes,0.9932313728759055
107,hibernate-distribution-3.3.2.GA,DESIGN,//use of a stringbuffer to workaround a JDK bug,yes,undetermined,0,0,0,yes,0.9966830647690501,yes,0.9967226068233476,yes,0.9971811357356526,yes,0.9999829376234154,yes,0.9999867493423752
108,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: copy/paste from recreate(),yes,undetermined,0,0,0,yes,0.9709519696311523,yes,0.9909891121341339,yes,0.9915159472869509,yes,0.9926713491742172,yes,0.9932269730941032
109,hibernate-distribution-3.3.2.GA,DESIGN,"//workaround, for backward compatibility of sets with no //not-null columns, assume all columns are used in the //row locator SQL",yes,undetermined,0,0,0,no,0.07562538432052456,yes,0.9909906329692656,yes,0.991508756289832,yes,0.9926665543626062,yes,0.9932260657538846
110,hibernate-distribution-3.3.2.GA,DESIGN,// todo : this eventually needs to be removed,yes,undetermined,0,0,0,yes,0.9999812380722997,yes,0.9909846629765298,yes,0.9915158085374371,yes,0.9926570048293981,yes,0.9932278200772112
111,hibernate-distribution-3.3.2.GA,DESIGN,// todo : remove,yes,undetermined,0,0,0,yes,0.9999934969368245,yes,0.9999971953149029,yes,0.9999978154777288,yes,0.9999984848622685,yes,0.9999987954253197
112,hibernate-distribution-3.3.2.GA,DESIGN,"//just to help out during the load (ugly, i know)",yes,undetermined,0,0,0,no,0.34876921411698536,no,0.5192913321182071,yes,0.545541800384547,yes,0.585733609696154,yes,0.5908200865054105
113,hibernate-distribution-3.3.2.GA,DESIGN,// hack/workaround as sqlquery impl depend on having a key.,yes,undetermined,0,0,0,yes,0.9961316861433387,yes,0.9961661921308311,yes,0.9964134024512841,yes,0.9969397366633117,yes,0.9974695938671568
114,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: handle the case of a foreign key to something other than the pk,yes,undetermined,0,0,0,yes,0.8308802857743415,yes,0.7358513257340843,yes,0.7346281371588811,yes,0.7445238871730205,yes,0.7488321522874379
115,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: assumes all collections disassemble to an array!,yes,undetermined,0,0,0,yes,0.7120496817808879,yes,0.5398658682407627,yes,0.5461539944506013,yes,0.5536774205030822,no,0.5579088460899448
116,hibernate-distribution-3.3.2.GA,DESIGN,// todo : would love to have this work on a notification basis //    where the successful binding of an entity/subclass would //    emit a notification which the extendsQueue entries could //    react to...,yes,undetermined,0,0,0,yes,0.9262942454042821,yes,0.9909931835447687,yes,0.9915307205588759,yes,0.9926612697083939,yes,0.9932289485066237
117,hibernate-distribution-3.3.2.GA,DESIGN,// TODO: is it really neceassry to provide Configuration to CollectionPersisters ? Should it not be enough with associated class ? // or why does EntityPersister's not get access to configuration ? // // The only reason I could see that Configuration gets passed to collection persisters // is so that they can look up the dom4j node name of the entity element in case // no explicit node name was applied at the collection element level.  Are you kidding me? // Trivial to fix then.  Just store and expose the node name on the entity persister // (which the collection persister looks up anyway via other means...).,yes,undetermined,0,0,0,yes,0.9029290573136034,yes,0.9909932769994921,yes,0.9915076150503283,yes,0.9926663968286062,yes,0.9932416477503228
118,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: deprecated, remove eventually",yes,undetermined,0,0,0,yes,0.9755013874264791,yes,0.9909922667957246,yes,0.9915395979632,yes,0.9926573706320391,yes,0.9932390161074719
119,hibernate-distribution-3.3.2.GA,DESIGN,//TODO possibly relax that,yes,undetermined,0,0,0,yes,0.9801469761301921,yes,0.9909910516972789,yes,0.9915255908730815,yes,0.9926621913242389,yes,0.993236652000637
120,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO : this is a bit dodgy, come up with a better way to check this (plus see above comment)",yes,undetermined,0,0,0,yes,0.996522647130651,yes,0.9999961400678687,yes,0.9999929178705483,yes,0.999995410058771,yes,0.9999963900325178
121,hibernate-distribution-3.3.2.GA,DESIGN,//use a degenerated strategy for backward compatibility,yes,undetermined,0,0,0,no,0.0028518136519422688,yes,0.9909934324929728,yes,0.9915169220346798,yes,0.9926683828541001,yes,0.9932187823858699
122,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: this is temporary in that the end result will probably not take a Property reference per-se.,yes,undetermined,0,0,0,yes,0.9999976796090376,yes,0.9999911248334805,yes,0.9999910930183435,yes,0.9999928099760034,yes,0.9999939108816932
123,hibernate-distribution-3.3.2.GA,DESIGN,// todo : better to handle dynamic filters through implicit DynamicFilterParameterSpecification // see the discussion there in DynamicFilterParameterSpecification's javadocs as to why // it is currently not done that way.,yes,undetermined,0,0,0,yes,0.996696095868693,yes,0.9999860106396296,yes,0.9999892099078785,yes,0.9999920798532481,yes,0.9999934024186776
124,hibernate-distribution-3.3.2.GA,DESIGN,// get the right object from the list ... would it be easier to just call getEntity() ??,yes,undetermined,0,0,0,no,0.015029782446716215,yes,0.9909890271821495,yes,0.9915063417239278,yes,0.9926584423467398,yes,0.9932336088265018
125,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO: should ""record"" how many properties we have reffered to - and if we  //       don't get'em'all we throw an exception! Way better than trial and error ;)",yes,undetermined,0,0,0,yes,0.9753165532306711,yes,0.9910145104457538,yes,0.9915313204122688,yes,0.9926534259607614,yes,0.9932423759832203
126,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: this dependency is kinda Bad,yes,undetermined,0,0,0,yes,0.9999986129380618,yes,0.9999983820977322,yes,0.9999981931461951,yes,0.9999988731586043,yes,0.9999991072706471
127,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: get SQL rendering out of this package!,yes,undetermined,0,0,0,yes,0.99093069360845,yes,0.9927203482967716,yes,0.9919486407971604,yes,0.9930326919045317,yes,0.9938565075105459
128,hibernate-distribution-3.3.2.GA,DESIGN,// why does this matter?,yes,undetermined,0,0,0,no,0.1351826098034769,no,0.15642001594775942,no,0.1632817006473103,no,0.16948393174068924,no,0.16685481164224739
129,hibernate-distribution-3.3.2.GA,DESIGN,"// important, to account for newly saved entities in query // todo : some kind of check for new status...",yes,undetermined,0,0,0,yes,0.957981830240868,yes,0.9910128897104793,yes,0.991516628639625,yes,0.9926587984446168,yes,0.9932374574168237
130,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: get SQL rendering out of this package!,yes,undetermined,0,0,0,yes,0.99093069360845,yes,0.9927203482967716,yes,0.9919486407971604,yes,0.9930326919045317,yes,0.9938565075105459
131,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: can we *always* use the ""null property"" approach for everything?",yes,undetermined,0,0,0,yes,0.9929886810528994,yes,0.9954033368918576,yes,0.9956987225845028,yes,0.9960702198938672,yes,0.9964206505540211
132,hibernate-distribution-3.3.2.GA,DESIGN,"// does this need holdlock also? : return tableName + "" with (updlock, rowlock, holdlock)"";",yes,undetermined,0,0,0,no,0.12136953425100229,no,0.12125896006965145,no,0.11736760603148388,no,0.11772072652506582,no,0.1165281496074607
133,hibernate-distribution-3.3.2.GA,DESIGN,"//for sets, we should end the collection load after resolving //the entities, since we might call hashCode() on the elements //TODO: or we could do this polymorphically, and have two //      different operations implemented differently for arrays",yes,undetermined,0,0,0,yes,0.9861257349334577,yes,0.9934846793234704,yes,0.9938215991886608,yes,0.9954116565713527,yes,0.9958618443084482
134,hibernate-distribution-3.3.2.GA,DESIGN,// todo : remove this and just have subclasses use Isolater/IsolatedWork directly...,yes,undetermined,0,0,0,yes,0.9799868759443489,yes,0.9909885795696338,yes,0.9915213273707899,yes,0.9926785947885163,yes,0.9932261062020303
135,hibernate-distribution-3.3.2.GA,DESIGN,"// sql-server, at least needed this dropped after use; strange!",yes,undetermined,0,0,0,no,0.011883529387357535,yes,0.9909917457135082,yes,0.9915058161032968,yes,0.9926635827643102,yes,0.9932315396322663
136,hibernate-distribution-3.3.2.GA,DESIGN,// is it necessary to register %exact since it can only appear in a where clause?,yes,undetermined,0,0,0,no,0.02245096088087517,yes,0.9909887275006375,yes,0.991518593281122,yes,0.9926689069764072,yes,0.9932347383017157
137,hibernate-distribution-3.3.2.GA,DESIGN,"//for arrays, we should end the collection load before resolving //the entities, since the actual array instances are not instantiated //during loading //TODO: or we could do this polymorphically, and have two //      different operations implemented differently for arrays",yes,undetermined,0,0,0,yes,0.9439159031944655,yes,0.9909883319816122,yes,0.9915269626879597,yes,0.9926819136442095,yes,0.993235613349416
138,hibernate-distribution-3.3.2.GA,DESIGN,// Does this dialect support the ALTER TABLE syntax?,yes,undetermined,0,0,0,no,0.014808390344327217,yes,0.9910141821359585,yes,0.9915174531371098,yes,0.992673033352612,yes,0.9932368795145289
139,hibernate-distribution-3.3.2.GA,DESIGN,"// This next bit is to allow for both unsaved-value=""negative"" // and for ""older"" behavior where version number did not get // seeded if it was already set in the object // TODO: shift it into unsaved-value strategy",yes,undetermined,0,0,0,yes,0.6752492061395786,yes,0.737892799743224,yes,0.7461527996570015,yes,0.751063254325666,yes,0.7619455759589451
140,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: reenable if we also fix the above todo,yes,undetermined,0,0,0,yes,0.9999999909628748,yes,0.999999969409673,yes,0.9999999773593915,yes,0.9999999860366414,yes,0.9999999893727234
141,hibernate-distribution-3.3.2.GA,DESIGN,// orphans should not be deleted during copy??,yes,undetermined,0,0,0,no,0.005493004888225462,yes,0.9910062744429101,yes,0.991530697117742,yes,0.9926611533701053,yes,0.9932337504709783
142,hibernate-distribution-3.3.2.GA,DESIGN,// orphans should not be deleted during merge??,yes,undetermined,0,0,0,no,0.019130972875807825,yes,0.9909874826769741,yes,0.9915252190884827,yes,0.9926778060190153,yes,0.9932267435076366
143,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: suck this logic into the collection!,yes,undetermined,0,0,0,yes,0.996509302569809,yes,0.9957856093820747,yes,0.9931361302757268,yes,0.99538697834928,yes,0.9957586328579575
144,hibernate-distribution-3.3.2.GA,DESIGN,// todo : we can actually just determine this from the incoming EntityEntry-s,yes,undetermined,0,0,0,yes,0.9839876405141047,yes,0.9910164065792378,yes,0.9915275492774023,yes,0.992669208071058,yes,0.9932365955399256
145,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: this bit actually has to be called after all cascades! //      but since identity insert is called *synchronously*, //      instead of asynchronously as other actions, it isn't",yes,undetermined,0,0,0,yes,0.8951170966646077,yes,0.8700714342120005,yes,0.8963427535401981,yes,0.9000911564667129,yes,0.9932461888968173
146,hibernate-distribution-3.3.2.GA,DESIGN,// this class has no proxies (so do a shortcut),yes,undetermined,0,0,0,no,0.00801813923273129,yes,0.9909805116115079,yes,0.9915217230324567,yes,0.9926697560964562,yes,0.9932460980060994
147,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: Should this be an InitializeEntityEventListener??? (watch out for performance!),yes,undetermined,0,0,0,yes,0.9999992015658921,yes,0.999999878661246,yes,0.9999998790115783,yes,0.999999923544467,yes,0.9999999401616159
148,hibernate-distribution-3.3.2.GA,DESIGN,"// todo : need map? the prob is a proper key, right?",yes,undetermined,0,0,0,yes,0.9962167276939541,yes,0.9946830782729139,yes,0.9953056070959945,yes,0.9957915113059577,yes,0.9960470924195973
149,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: better to pass the id in as an argument?,yes,undetermined,0,0,0,yes,0.9929989521293374,yes,0.990989805284581,yes,0.9922660347353605,yes,0.9932153464951169,yes,0.9937662662864469
150,hibernate-distribution-3.3.2.GA,DESIGN,//do we even really need this? the update will fail anyway....,yes,undetermined,0,0,0,no,0.39146339834641003,no,0.3817108607500591,no,0.3728643486138526,no,0.3805736160345492,no,0.3837852561686155
151,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: would it be better to do a refresh from db?,yes,undetermined,0,0,0,yes,0.9935507198112721,yes,0.9938789297696122,yes,0.9949600601561885,yes,0.9957364512845259,yes,0.9960738180420531
152,hibernate-distribution-3.3.2.GA,DESIGN,"/**
	 * This form used from annotations (?).  Essentially the same as the above using a
	 * resultset-mapping reference, but without cacheMode, readOnly, and comment.
	 *
	 * FIXME: annotations do not use it, so it can be remove from my POV
	 * @deprecated
	 *
	 *
	 * @param query The sql query string
	 * @param resultSetRef The result-set-mapping name
	 * @param querySpaces Any specified query spaces (used for auto-flushing)
	 * @param cacheable Whether the query results are cacheable
	 * @param cacheRegion If cacheable, the region into which to store the results
	 * @param timeout A JDBC-level timeout to be applied
	 * @param fetchSize A JDBC-level fetch-size to be applied
	 * @param flushMode The flush mode to use for this query
	 * @param parameterTypes parameter type map
	 * @param callable Does the query string represent a callable object (i.e., proc)
	 */",yes,undetermined,0,0,0,yes,0.8754119665146082,yes,0.8794847100068377,yes,0.8627644990573071,yes,0.8585148291351677,yes,0.8720836205480194
153,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: ugly here:,yes,undetermined,0,0,0,yes,0.9999999998682974,yes,0.9999999999515745,yes,0.999999999984005,yes,0.9999999999907715,yes,0.9999999999937443
154,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: not quite sure about the full implications of this!,yes,undetermined,0,0,0,yes,0.9940795151138001,yes,0.9939474155133192,yes,0.9942749092670897,yes,0.9949741732828015,yes,0.9953565334242784
155,hibernate-distribution-3.3.2.GA,DESIGN,// this only works because collection entries are kept in a sequenced // map by persistence context (maybe we should do like entities and // keep a separate sequences set...) //TODO: calling entrySet on an IdentityMap is SLOW!!,yes,undetermined,0,0,0,yes,0.9724015344228272,yes,0.9910080667367802,yes,0.9915322987085273,yes,0.9926670525524315,yes,0.993229167707798
156,hibernate-distribution-3.3.2.GA,DESIGN,"// todo : i'd much rather have this done from #endLoadingCollection(CollectionPersister,LoadingCollectionEntry)...",yes,undetermined,0,0,0,yes,0.9953918230167156,yes,0.9944735705090416,yes,0.9949329911288206,yes,0.9954332852843774,yes,0.995872792345215
157,hibernate-distribution-3.3.2.GA,DESIGN,"// todo : hack!!! // NOTE : here we cleanup the load context when we have no more local // LCE entries.  This ""works"" for the time being because really // only the collection load contexts are implemented.  Long term, // this cleanup should become part of the ""close result set"" // processing from the (sandbox/jdbc) jdbc-container code.",yes,undetermined,0,0,0,yes,0.9939910868562742,yes,0.9935413204516608,yes,0.9935515022999944,yes,0.9940011815254322,yes,0.9944727875148532
158,hibernate-distribution-3.3.2.GA,DESIGN,// todo : add the notion of enabled filters to the CacheKey to differentiate filtered collections from non-filtered; //      but CacheKey is currently used for both collections and entities; would ideally need to define two seperate ones; //      currently this works in conjuction with the check on //      DefaultInitializeCollectionEventHandler.initializeCollectionFromCache() (which makes sure to not read from //      cache with enabled filters). // EARLY EXIT!!!!!,yes,undetermined,0,0,0,no,0.3956019158278223,no,0.41297829806083663,no,0.40777389331938496,no,0.4155048288946962,no,0.4155627036842356
159,hibernate-distribution-3.3.2.GA,DESIGN,//PostLoad is needed for EJB3 //TODO: reuse the PostLoadEvent...,yes,undetermined,0,0,0,yes,0.9936858936883693,yes,0.9999883660518266,yes,0.9999921432836198,yes,0.9999940370603578,yes,0.999995204052542
160,hibernate-distribution-3.3.2.GA,DESIGN,// todo : should we check the current isolation mode explicitly?,yes,undetermined,0,0,0,yes,0.9959407700323218,yes,0.995292193498106,yes,0.9955839941151775,yes,0.9961668935998446,yes,0.9964857019697336
161,hibernate-distribution-3.3.2.GA,DESIGN,// brand new collection //TODO: or an array!! we can't lock objects with arrays now??,yes,undetermined,0,0,0,yes,0.8931824242440669,yes,0.8702930594021562,yes,0.8715163411086269,yes,0.8947313958769962,yes,0.9043486392019914
162,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO: iteratively get transient entities and retry merge until one of the following conditions: //       1) transientCopyCache.size() == 0 //       2) transientCopyCache.size() is not decreasing and copyCache.size() is not increasing // TODO: find out if retrying can add entities to copyCache (don't think it can...) // For now, just retry once; throw TransientObjectException if there are still any transient entities",yes,undetermined,0,0,0,yes,0.9841478692381253,yes,0.9909900532044621,yes,0.9915239049718926,yes,0.9926812543662126,yes,0.9932320731975168
163,hibernate-distribution-3.3.2.GA,DESIGN,"// null or brand new collection // this will also (inefficiently) handle arrays, which have // no snapshot, so we can't do any better",yes,undetermined,0,0,0,no,0.10082370631319876,no,0.09230167561302416,yes,0.9830827585612046,yes,0.9926731660640367,yes,0.9932341297190027
164,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : perhaps we should additionally require that the incoming entity // version be equivalent to the defined unsaved-value?,yes,undetermined,0,0,0,yes,0.9835817009322704,yes,0.9909992623725791,yes,0.9915306368735834,yes,0.9926536881953923,yes,0.9932389277501796
165,hibernate-distribution-3.3.2.GA,DESIGN,"/**
 * Provides query splitting methods, which were originally in QueryTranslator.
 * <br>
 * TODO: This will need to be refactored at some point.
 *
 * @author josh
 */",yes,undetermined,0,0,0,yes,0.9706228438765999,yes,0.9910010010725819,yes,0.9915219158361354,yes,0.992680487875792,yes,0.9932349894719497
166,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : most of below was taken verbatim from DotNode; should either delegate this logic or super-type it,yes,undetermined,0,0,0,yes,0.9712152479425226,yes,0.9909953201532119,yes,0.9915263765514478,yes,0.9926690286828648,yes,0.9932318459854659
167,hibernate-distribution-3.3.2.GA,DESIGN,"// todo : currently expects that the individual with expressions apply to the same sql table join. //      This may not be the case for joined-subclass where the property values //      might be coming from different tables in the joined hierarchy.  At some //      point we should expand this to support that capability.  However, that has //      some difficulties: //          1) the biggest is how to handle ORs when the individual comparisons are //              linked to different sql joins. //          2) here we would need to track each comparison individually, along with //              the join alias to which it applies and then pass that information //              back to the FromElement so it can pass it along to the JoinSequence",yes,undetermined,0,0,0,yes,0.8926301311303345,yes,0.8672393453234488,yes,0.870249135706324,yes,0.8777862613046272,yes,0.8806521735422053
168,hibernate-distribution-3.3.2.GA,DESIGN,"// No explicit select expression; render the id and properties // projection lists for every persister in the from clause into // a single 'token node'. //TODO: the only reason we need this stuff now is collection filters, //      we should get rid of derived select clause completely!",yes,undetermined,0,0,0,yes,0.8565385441162889,yes,0.8537875620620949,yes,0.8500383456206746,yes,0.8601891109921876,yes,0.8580352944755449
169,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : better way?!?,yes,undetermined,0,0,0,yes,0.9999999987559584,yes,0.9999999985107797,yes,0.9999999989651903,yes,0.999999999400954,yes,0.9999999995536534
170,hibernate-distribution-3.3.2.GA,DESIGN,"/////////////////////////////////////////////////////////////////////// // HACK ALERT !!!!!!!!!!!!!!!!!!!!!!!!!!!! // Attempt to work around ""ghost"" ImpliedFromElements that occasionally // show up between the actual things being joined.  This consistently // occurs from index nodes (at least against many-to-many).  Not sure // if there are other conditions // // Essentially, look-ahead to the next FromElement that actually // writes something to the SQL",yes,undetermined,0,0,0,yes,0.8306145905166182,yes,0.8150975716385532,yes,0.8032527177307163,yes,0.8152076591307581,yes,0.833414853026627
171,hibernate-distribution-3.3.2.GA,DESIGN,// Not possible to simply re-use the versionPropertyNode here as it causes // OOM errors due to circularity :(,yes,undetermined,0,0,0,no,0.054033213316661124,yes,0.9909910242628035,yes,0.9915328800736041,yes,0.9926597494530826,yes,0.9932246752982944
172,hibernate-distribution-3.3.2.GA,DESIGN,"// this function has a template -> restore output, apply the template and write the result out // TODO: Downcast to avoid using an interface?  Yuck.",yes,undetermined,0,0,0,no,0.4104153648615953,no,0.4727990703629046,no,0.48378147022825313,no,0.48850672140996815,no,0.5
173,hibernate-distribution-3.3.2.GA,DESIGN,"// at some point the generate phase needs to be moved out of here, // because a single object-level DML might spawn multiple SQL DML // command executions. // // Possible to just move the sql generation for dml stuff, but for // consistency-sake probably best to just move responsiblity for // the generation phase completely into the delegates // (QueryLoader/StatementExecutor) themselves.  Also, not sure why // QueryLoader currently even has a dependency on this at all; does // it need it?  Ideally like to see the walker itself given to the delegates directly...",yes,undetermined,0,0,0,yes,0.9698969503043781,yes,0.9910043836743292,yes,0.9915257426117026,yes,0.9926741260051107,yes,0.9932358377035687
174,hibernate-distribution-3.3.2.GA,DESIGN,//TODO:this is only needed during compilation .. can we eliminate the instvar?,yes,undetermined,0,0,0,yes,0.9948751670399033,yes,0.9947147187974279,yes,0.99515065090088,yes,0.9965255251162641,yes,0.9967678440767554
175,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : absolutely no usages of this constructor form; can it go away?,yes,undetermined,0,0,0,yes,0.9429292526086692,yes,0.9910022831581593,yes,0.991507686218348,yes,0.9926636139072977,yes,0.9932232246508084
176,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: is this a bit ugly?,yes,undetermined,0,0,0,yes,0.9999999999257579,yes,0.9999999999643574,yes,0.9999999999758947,yes,0.9999999999872976,yes,0.9999999999921481
177,hibernate-distribution-3.3.2.GA,DESIGN,"// even here, if only properties mapped to the ""base table"" are referenced // in the set and where clauses, this could be handled by the BasicDelegate. // TODO : decide if it is better performance-wise to perform that check, or to simply use the MultiTableUpdateDelegate",yes,undetermined,0,0,0,yes,0.9721186997437465,yes,0.9909794314293913,yes,0.9915353831554091,yes,0.9926753876610838,yes,0.9932444384388098
178,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : remove these last two as batcher is no longer managing connections,yes,undetermined,0,0,0,yes,0.951282117417176,yes,0.9910124424351326,yes,0.9915220163107508,yes,0.9926572148323679,yes,0.9932471079100236
179,hibernate-distribution-3.3.2.GA,DESIGN,"// VERY IMPORTANT!!!! - This class needs to be free of any static references // to any CGLIB or Javassist classes.  Otherwise, users will always need both // on their classpaths no matter which (if either) they use. // // Another option here would be to remove the Hibernate.isPropertyInitialized() // method and have the users go through the SessionFactory to get this information.",yes,undetermined,0,0,0,no,0.33544917208425246,no,0.3644790023273519,no,0.35752104735718576,no,0.35658753673031973,no,0.3496029810259066
180,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO : we really need to be able to deal with component paths here also; // this is difficult because the hql-sql grammar expects all those node types // to be FromReferenceNodes.  One potential fix here would be to convert the // IntoClause to just use a FromClause/FromElement combo (as a child of the // InsertStatement) and move all this logic into the InsertStatement.  That's // probably the easiest approach (read: least amount of changes to the grammar // and code), but just doesn't feel right as then an insert would contain // 2 from-clauses",yes,undetermined,0,0,0,yes,0.9445958417507806,yes,0.9910061014280692,yes,0.9915307237856444,yes,0.9926743348825335,yes,0.9932490269005962
181,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO : an optimization here would be to consider cascade deletes and not gen those delete statements; //      the difficulty is the ordering of the tables here vs the cascade attributes on the persisters -> //          the table info gotten here should really be self-contained (i.e., a class representation //          defining all the needed attributes), then we could then get an array of those",yes,undetermined,0,0,0,yes,0.8969694714962325,yes,0.9016705138861736,yes,0.9915315888870745,yes,0.9926720472777529,yes,0.9932412005215159
182,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: switch statements are always evil! We already had bugs because  //      of forgotten token types. Use polymorphism for this!,yes,undetermined,0,0,0,yes,0.9148649029611661,yes,0.9910078336736964,yes,0.9915204766700421,yes,0.9926583322469084,yes,0.9932366540755196
183,hibernate-distribution-3.3.2.GA,DESIGN,// really there are two situations where it should be ok to allow the insertion // into properties defined on a superclass: //      1) union-subclass with an abstract root entity //      2) discrim-subclass // // #1 is handled already because of the fact that // UnionSubclassPersister alreay always returns 0 // for this call... // // we may want to disallow it for discrim-subclass just for // consistency-sake (currently does not work anyway)...,yes,undetermined,0,0,0,yes,0.805693681708208,yes,0.7558952714052629,yes,0.7677090973375923,yes,0.7836032965900476,yes,0.7937658491888135
184,hibernate-distribution-3.3.2.GA,DESIGN,// implicit joins are always(?) ok to reuse,yes,undetermined,0,0,0,no,0.007486768018642473,yes,0.9909873106201043,yes,0.9915117721249568,yes,0.9926636584582011,yes,0.9932321015538303
185,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: used to be exprNoParens! was this needed?,yes,undetermined,0,0,0,yes,0.9999960279541483,yes,0.9999989010720336,yes,0.9999987866588972,yes,0.9999991562010703,yes,0.999999350722531
186,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : we may also want to check that the types here map to exactly one column/JDBC-type //      can't think of a situation where arithmetic expression between multi-column mappings //      makes any sense.,yes,undetermined,0,0,0,yes,0.9757452698429341,yes,0.9910064916361013,yes,0.9915241271298632,yes,0.9926786247623374,yes,0.993234221915816
187,hibernate-distribution-3.3.2.GA,DESIGN,// we do not know either type //BLIND GUESS!,yes,undetermined,0,0,0,no,0.04787069840439552,yes,0.9909947740215845,yes,0.991514681926332,yes,0.9926661372854239,yes,0.9932312407799012
188,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO: get SQL rendering out of here, create an AST for the join expressions. // Use the SQL generator grammar to generate the SQL text for the index expression.",yes,undetermined,0,0,0,no,0.45585780268121356,no,0.49469992128690976,no,0.5110845930455736,no,0.5290966422787734,no,0.5254370804180327
189,hibernate-distribution-3.3.2.GA,DESIGN,"// We would probably refactor to have LogicParser (builds a tree of simple // expressions connected by and, or, not), ExpressionParser (translates // from OO terms like foo, foo.Bar, foo.Bar.Baz to SQL terms like // FOOS.ID, FOOS.BAR_ID, etc) and PathExpressionParser (which does much // the same thing it does now)",yes,undetermined,0,0,0,no,0.11841715307407263,no,0.14118099808549245,no,0.16617461908040715,no,0.16649359143706047,no,0.1666374734866886
190,hibernate-distribution-3.3.2.GA,DESIGN,// short-circuit for performance...,yes,undetermined,0,0,0,no,0.004847760056546088,yes,0.9910069694000574,yes,0.991516904532107,yes,0.9926690762404854,yes,0.9932351039504901
191,hibernate-distribution-3.3.2.GA,DESIGN,"// not absolutely necessary, but does help with aggressive release",yes,undetermined,0,0,0,no,0.012353869973422997,yes,0.9909907281683816,yes,0.9915205044492766,yes,0.9926620458815834,yes,0.9932314611148014
192,hibernate-distribution-3.3.2.GA,DESIGN,// try block is a hack around fact that currently tuplizers are not // given the opportunity to resolve a subclass entity name.  this // allows the (we assume custom) interceptor the ability to // influence this decision if we were not able to based on the // given entityName,yes,undetermined,0,0,0,yes,0.9061523696178538,yes,0.9910075105459099,yes,0.991531208797083,yes,0.9926760075914346,yes,0.9932357771233178
193,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: this is one of the ugliest and most fragile pieces of code in Hibernate....,yes,undetermined,0,0,0,yes,0.988260010617134,yes,0.9909856371524682,yes,0.9915113501565164,yes,0.992657186554395,yes,0.9932279733969476
194,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: implement functionality //  this might be painful to do here, as the ""join post processing"" for //  the subquery has already been performed (meaning that for //  theta-join dialects, the join conditions have already been moved //  over to the where clause).  A ""simple"" solution here might to //  perform ""join post processing"" once for the entire query (including //  any subqueries) at one fell swoop",yes,undetermined,0,0,0,yes,0.7399388963321398,yes,0.6959230292799042,yes,0.7254529988667879,yes,0.7291940888577395,yes,0.729153018015976
195,hibernate-distribution-3.3.2.GA,DESIGN,//yuck!,yes,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
196,hibernate-distribution-3.3.2.GA,DESIGN,"// ignore it; the incoming property could not be found so we // cannot be sure what to do here.  At the very least, the // safest is to simply not apply any dereference toggling...",yes,undetermined,0,0,0,no,0.3000940023521279,no,0.3489825144180528,no,0.35862139026633194,no,0.35926175237804364,no,0.365162821304656
197,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: make this a bit nicer,yes,undetermined,0,0,0,yes,0.9912384551416541,yes,0.9910290058407549,yes,0.9915262450181158,yes,0.9926529930519473,yes,0.9932282068334842
198,hibernate-distribution-3.3.2.GA,DESIGN,// yuck!,yes,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
199,hibernate-distribution-3.3.2.GA,DESIGN,// todo : potentially look at optimizing these two arrays,yes,undetermined,0,0,0,yes,0.8994966705203999,yes,0.8884602370388275,yes,0.8944294047926187,yes,0.9017675346785196,yes,0.9932324090439465
200,hibernate-distribution-3.3.2.GA,DESIGN,//note that i parameter is now unused (delete it?),yes,undetermined,0,0,0,no,0.17787421739606774,no,0.15036981447096687,no,0.14438084515264735,no,0.1413651891228909,no,0.14264430542495002
201,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO: Figure out a better way to get the FROM elements in a proper tree structure. // If this is not the destination of a many-to-many, add it as a child of the origin.",yes,undetermined,0,0,0,yes,0.9927749931339453,yes,0.9909904149274674,yes,0.9915289192428403,yes,0.9926633092245208,yes,0.9932290294608429
202,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : this constructor form is *only* used from constructor directly below us; can it go away?,yes,undetermined,0,0,0,yes,0.88418958683272,yes,0.9528815834008931,yes,0.9915274134373797,yes,0.9926690984024832,yes,0.9932391852801138
203,hibernate-distribution-3.3.2.GA,DESIGN,// todo : remove,yes,undetermined,0,0,0,yes,0.9999934969368245,yes,0.9999971953149029,yes,0.9999978154777288,yes,0.9999984848622685,yes,0.9999987954253197
204,hibernate-distribution-3.3.2.GA,DESIGN,"// We should reengineer this class so that, rather than the current ad - // hoc linear approach to processing a stream of tokens, we instead // build up a tree of expressions.",yes,undetermined,0,0,0,no,0.09668259715477902,yes,0.9909959512936999,yes,0.9915220603245612,yes,0.9926651411715675,yes,0.9932323499939051
205,hibernate-distribution-3.3.2.GA,DESIGN,"// todo : should this get moved to PersistentContext? // logically, is PersistentContext the ""thing"" to which an interceptor gets attached?",yes,undetermined,0,0,0,yes,0.9999952085558408,yes,0.9999964014723953,yes,0.9999970408154026,yes,0.9999978544922122,yes,0.9999982046883913
206,hibernate-distribution-3.3.2.GA,DESIGN,// TODO: something much better - look at the type of the other expression! // TODO: Have comparisonExpression and/or arithmeticExpression rules complete the resolution of boolean nodes.,yes,undetermined,0,0,0,yes,0.9999922378442443,yes,0.9967963848855503,yes,0.9969535955441896,yes,0.9972564307165968,yes,0.9999835937850751
207,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: this class does too many things! we need a different //kind of path expression parser for each of the diffferent //ways in which path expressions can occur,yes,undetermined,0,0,0,yes,0.9633780570108884,yes,0.9909937919489812,yes,0.991526290460737,yes,0.9926736546670519,yes,0.9932442206709633
208,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: optimize this better!,yes,undetermined,0,0,0,yes,0.9999982873704287,yes,0.9999970667000986,yes,0.9999966953832053,yes,0.9999978982608928,yes,0.9999983841052518
209,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: should we allow suffixes on these ?,yes,undetermined,0,0,0,yes,0.9999998908845866,yes,0.9999998259129118,yes,0.999999861948979,yes,0.9999999131994647,yes,0.9999999378753643
210,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: is this really necessary????,yes,undetermined,0,0,0,yes,0.9999993930354742,yes,0.9999987107454295,yes,0.9999983431872107,yes,0.9999989217885515,yes,0.9999991727253538
211,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : not sure the best way to handle this. // The non-performant way :,yes,undetermined,0,0,0,yes,0.9999985188299142,yes,0.9999990844462355,yes,0.9999991596903299,yes,0.9999994222854455,yes,0.9999995319545676
212,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: is there a better way?,yes,undetermined,0,0,0,yes,0.9999999794518143,yes,0.9999999848388771,yes,0.9999999894266487,yes,0.9999999934267281,yes,0.9999999946947516
213,hibernate-distribution-3.3.2.GA,DESIGN,//The class is now way to complex!,yes,undetermined,0,0,0,no,0.03331021247458103,yes,0.9910167912362812,yes,0.9915166307839275,yes,0.9926665583367763,yes,0.9932305238298718
214,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : would be really nice to cache the spec on the query-def so as to not have to re-calc the hash; // currently not doable though because of the resultset-ref stuff...,yes,undetermined,0,0,0,yes,0.7524547443361123,yes,0.7783679607648494,yes,0.7517081461993081,yes,0.7619809451631856,yes,0.7740946095364489
215,hibernate-distribution-3.3.2.GA,DESIGN,//name from a super query (a bit inelegant that it shows up here),yes,undetermined,0,0,0,no,0.0627715497840627,yes,0.9910086047835145,yes,0.9915088350030736,yes,0.9926726241534866,yes,0.9932476422918253
216,hibernate-distribution-3.3.2.GA,DESIGN,//real hacky... // used to count the nesting of parentheses,yes,undetermined,0,0,0,no,0.011891149818808991,yes,0.9909845014181198,yes,0.9915122126713661,yes,0.992665349848877,yes,0.9932357225170971
217,hibernate-distribution-3.3.2.GA,DESIGN,// todo : we can remove this once the deprecated ctor can be made private...,yes,undetermined,0,0,0,yes,0.9857147047446648,yes,0.9910004260567864,yes,0.9915207937039585,yes,0.9926648406813668,yes,0.993235806326971
218,hibernate-distribution-3.3.2.GA,DESIGN,"//put() has nowait semantics, is this really appropriate? //note that it needs to be async replication, never local or sync",yes,undetermined,0,0,0,no,0.47048841308573386,no,0.43811485782038034,no,0.445410220102878,no,0.45630338356960554,no,0.4849607052605248
219,hibernate-distribution-3.3.2.GA,DESIGN,"// ugly hack for cases like ""elements(foo.bar.collection)"" // (multi-part path expression ending in elements or indices)",yes,undetermined,0,0,0,yes,0.9709634157966852,yes,0.9910059315730594,yes,0.991513298680332,yes,0.9926746466861311,yes,0.9932403403196834
220,hibernate-distribution-3.3.2.GA,DESIGN,// FIXME Hacky workaround to JBCACHE-1202,yes,undetermined,0,0,0,yes,0.9999999999932982,yes,0.9999999999917848,yes,0.9999999999949769,yes,0.9999999999974003,yes,0.9999999999981835
221,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: COPY/PASTE FROM SessionImpl, pull up!",yes,undetermined,0,0,0,yes,0.9475577193952869,yes,0.990980669118015,yes,0.9915069571918621,yes,0.9926614000826809,yes,0.9932217559808066
222,hibernate-distribution-3.3.2.GA,DESIGN,"// todo : need to find a clean way to handle the ""event source"" role // a seperate classs responsible for generating/dispatching events just duplicates most of the Session methods... // passing around seperate reto interceptor, factory, actionQueue, and persistentContext is not manageable...",yes,undetermined,0,0,0,yes,0.9907814708218601,yes,0.9910068970172267,yes,0.9915151971963925,yes,0.9926780075348545,yes,0.9932409394269666
223,hibernate-distribution-3.3.2.GA,DESIGN,//Must be done here because of side-effect! yuck...,yes,undetermined,0,0,0,no,0.013619525481118484,yes,0.9910017652857557,yes,0.9915250823436195,yes,0.9926629129606241,yes,0.9932404262042551
224,hibernate-distribution-3.3.2.GA,DESIGN,//We should actually rework this class to not implement Parser //and just process path expressions in the most convenient way.,yes,undetermined,0,0,0,yes,0.6472716802862165,yes,0.6979757771019566,yes,0.7204255217689589,yes,0.736819960992255,yes,0.7376207184565045
225,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : should remove this exposure //  and have all references to the session's batcher use the ConnectionManager.,yes,undetermined,0,0,0,yes,0.9999962041956884,yes,0.9999891285551694,yes,0.9999898530918657,yes,0.9999928641558283,yes,0.9999940210393677
226,hibernate-distribution-3.3.2.GA,DESIGN,// we may be screwed here since the collection action is about to execute // and we do not know the final owner key value,yes,undetermined,0,0,0,no,0.010271906673076843,yes,0.9909932088749533,yes,0.9915109441111326,yes,0.992659656592096,yes,0.993231409352804
227,hibernate-distribution-3.3.2.GA,DESIGN,"// Needed the ""clazz_"" check to work around union-subclasses // TODO : is there a way to tell whether a persister is truly discrim-column based inheritence?",yes,undetermined,0,0,0,yes,0.9838853574932848,yes,0.9909870469386314,yes,0.9915116777278686,yes,0.9926610028208462,yes,0.993240706515887
228,hibernate-distribution-3.3.2.GA,DESIGN,//work around a bug in all known connection pools....,yes,undetermined,0,0,0,yes,0.7206616425743504,yes,0.6423753524275323,yes,0.6412095193576527,yes,0.6487235618468374,yes,0.6606338458041626
229,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: reuse the PreLoadEvent,yes,undetermined,0,0,0,yes,0.9916757440794816,yes,0.9999815265842281,yes,0.99998473019506,yes,0.9999886157557053,yes,0.9999907586698605
230,hibernate-distribution-3.3.2.GA,DESIGN,// Need a better way to define the suffixes here...,yes,undetermined,0,0,0,yes,0.8607550315751112,yes,0.8774029175901299,yes,0.8877582942897002,yes,0.8952586087769584,yes,0.8971770502363139
231,hibernate-distribution-3.3.2.GA,DESIGN,//workaround for WebLogic,yes,undetermined,0,0,0,yes,0.8805123577742825,yes,0.8879304193708963,yes,0.8914253802638233,yes,0.8998078653165527,yes,0.9032330489287176
232,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: temporary,yes,undetermined,0,0,0,yes,0.999999646978959,yes,0.9999989453470097,yes,0.9999864533150076,yes,0.9999901463182573,yes,0.9999920635194051
233,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : YUCK!!!  fix after HHH-1907 is complete,yes,undetermined,0,0,0,yes,0.9957038459449672,yes,0.9955248734872125,yes,0.9961245701645196,yes,0.9966103954970579,yes,0.9970205413238715
234,hibernate-distribution-3.3.2.GA,DESIGN,// would be great to move all this below here into another method that could also be used // from the new scrolling stuff. // // Would need to change the way the max-row stuff is handled (i.e. behind an interface) so // that I could do the control breaking at the means to know when to stop,yes,undetermined,0,0,0,yes,0.8031903008373985,yes,0.8238313202124368,yes,0.854976288200881,yes,0.8704185143542457,yes,0.8754669532900599
235,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: the i==entitySpan-1 bit depends upon subclass implementation (very bad),yes,undetermined,0,0,0,yes,0.9916686560730614,yes,0.9914659916138145,yes,0.9920728486664034,yes,0.9928511059766062,yes,0.9959348970526253
236,hibernate-distribution-3.3.2.GA,DESIGN,"// some messy, complex stuff here, since createCriteria() can take an // aliased path, or a path rooted at the creating criteria instance",yes,undetermined,0,0,0,no,0.007411861889422633,yes,0.9909909239504965,yes,0.9915064546025969,yes,0.992668325041522,yes,0.9932444346194684
237,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: add a CriteriaImplementor interface //      this class depends directly upon CriteriaImpl in the impl package...,yes,undetermined,0,0,0,yes,0.881412964170723,yes,0.8976793698064702,yes,0.8988035281341896,yes,0.9075016009565807,yes,0.9932409497464953
238,hibernate-distribution-3.3.2.GA,DESIGN,"// polymorphism not really handled completely correctly, // perhaps...well, actually its ok, assuming that the // entity name used in the lookup is the same as the // the one used here, which it will be",yes,undetermined,0,0,0,yes,0.5593253303470155,no,0.3697244258807892,no,0.40162193871018065,no,0.4165055581793727,no,0.4626648094603422
239,hibernate-distribution-3.3.2.GA,DESIGN,//This is not very nice (and quite slow):,yes,undetermined,0,0,0,no,0.44284506815631597,no,0.46528880707333264,no,0.47853803896671604,no,0.48473458487642274,no,0.4860590312606911
240,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: get SQL rendering out of here,yes,undetermined,0,0,0,yes,0.9884518297238957,yes,0.9909819230861907,yes,0.9915246261211211,yes,0.9926795696841524,yes,0.9932236719734013
241,hibernate-distribution-3.3.2.GA,DESIGN,// meant to handle dynamic instantiation queries...(Copy from QueryLoader),yes,undetermined,0,0,0,no,0.0012658687349353715,yes,0.9909803236095479,yes,0.991519965493669,yes,0.9926558755544501,yes,0.9932352874600383
242,hibernate-distribution-3.3.2.GA,DESIGN,// Make sure this is a defined parameter and check the incoming value type // TODO: what should be the actual exception type here?,yes,undetermined,0,0,0,yes,0.9721081198495982,yes,0.9909861436904919,yes,0.9915361895047902,yes,0.9926775428452445,yes,0.9932378084208531
243,hibernate-distribution-3.3.2.GA,DESIGN,// worrying about proxies is perhaps a little bit of overkill here...,yes,undetermined,0,0,0,yes,0.7841285437746651,yes,0.9279535275883107,yes,0.9915362009776488,yes,0.9926732261811246,yes,0.9932399299707869
244,hibernate-distribution-3.3.2.GA,DESIGN,// todo : throw exception?  maybe warn if not the same?,yes,undetermined,0,0,0,yes,0.9793184480711521,yes,0.9909969998235358,yes,0.9915178804388014,yes,0.9926577975199351,yes,0.9932312414909529
245,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: make EntityPersister *not* depend on SessionFactoryImplementor //interface, if possible",yes,undetermined,0,0,0,yes,0.994831863786715,yes,0.9949070320260854,yes,0.9951340907983545,yes,0.9957187176184844,yes,0.9962211913627147
246,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : what amount of significant digits need to be supported here? //      - from the DecimalFormat docs: //          [significant digits] = [minimum integer digits] + [maximum fraction digits],yes,undetermined,0,0,0,no,0.16064914206102773,no,0.1661525920002889,no,0.16812626597161456,no,0.16992581523694847,no,0.1705505864793486
247,hibernate-distribution-3.3.2.GA,DESIGN,"//for backward compatibility, allow a set with no not-null  //element columns, using all columns in the row locater SQL //TODO: create an implicit not null constraint on all cols?",yes,undetermined,0,0,0,no,0.2301813392631358,yes,0.8135957657563058,yes,0.8140175966726729,yes,0.8251199188249468,yes,0.8339398961629616
248,hibernate-distribution-3.3.2.GA,DESIGN,// todo : we can remove this once the deprecated ctor can be made private...,yes,undetermined,0,0,0,yes,0.9857147047446648,yes,0.9910004260567864,yes,0.9915207937039585,yes,0.9926648406813668,yes,0.993235806326971
249,hibernate-distribution-3.3.2.GA,DESIGN,// TODO: copy/paste from ManyToOneType,yes,undetermined,0,0,0,yes,0.999985660605997,yes,0.9999986148327195,yes,0.9999988671861962,yes,0.9999992149167314,yes,0.9999993714911734
250,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: code duplication with SingleTableEntityPersister,yes,undetermined,0,0,0,yes,0.999999102955854,yes,0.9967420585861209,yes,0.9971053767235796,yes,0.9999812268119109,yes,0.9999846024539574
251,hibernate-distribution-3.3.2.GA,DESIGN,// todo : throw exception?,yes,undetermined,0,0,0,yes,0.9334773393617729,yes,0.9910090338630025,yes,0.9915245486234514,yes,0.9926748948862671,yes,0.9932427365725706
252,hibernate-distribution-3.3.2.GA,DESIGN,//should this interface extend PropertyMapping?,yes,undetermined,0,0,0,no,0.192317085659271,no,0.1947448474177022,no,0.1943842424042509,no,0.2007380726691377,no,0.2103551006571783
253,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO: here is why we need to make bytecode provider global :( // TODO : again, fix this after HHH-1907 is complete",yes,undetermined,0,0,0,yes,0.9999999716827896,yes,0.9999999761518071,yes,0.9999999820013664,yes,0.9999999886516722,yes,0.9999999914490618
254,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: currently keeps Getters and Setters (instead of PropertyAccessors) because of the way getGetter() and getSetter() are implemented currently; yuck!,yes,undetermined,0,0,0,yes,0.9810984628525367,yes,0.9909914696481678,yes,0.9915203728178167,yes,0.9926646899789887,yes,0.9932343744803245
255,hibernate-distribution-3.3.2.GA,DESIGN,// todo : we can remove this once the deprecated ctor can be made private...,yes,undetermined,0,0,0,yes,0.9857147047446648,yes,0.9910004260567864,yes,0.9915207937039585,yes,0.9926648406813668,yes,0.993235806326971
256,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: Yuck! This is not quite good enough, it's a quick //hack around the problem of having a to-one association //that refers to an embedded component:",yes,undetermined,0,0,0,yes,0.999999447852253,yes,0.9999984945736207,yes,0.9999987777508069,yes,0.9999991641759536,yes,0.9999993499317629
257,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: implement caching?! proxies?!,yes,undetermined,0,0,0,yes,0.977829666468023,yes,0.9917622221946802,yes,0.9935959273441175,yes,0.9943932889636637,yes,0.9948718514624066
258,hibernate-distribution-3.3.2.GA,DESIGN,// is this really necessary?,yes,undetermined,0,0,0,no,0.21047298411662532,no,0.16352500220740343,no,0.1570552563917714,no,0.16860276448213202,no,0.17578231433526448
259,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: this is a little inefficient, don't need to do a whole //      deep replaceElements() call",yes,undetermined,0,0,0,yes,0.9893061777652645,yes,0.9909882304547906,yes,0.9915194259307112,yes,0.9926738864433937,yes,0.993223974149825
260,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: this is a bit arbitrary, expose a switch to the user?",yes,undetermined,0,0,0,yes,0.9760865479532937,yes,0.990982940032923,yes,0.9915175494611931,yes,0.9926703510838746,yes,0.9932260777600476
261,hibernate-distribution-3.3.2.GA,DESIGN,"/**
	 * @return collection removal
	 * FIXME: even if isInverse=""true""?
	 */",yes,undetermined,0,0,0,yes,0.9156284286430056,yes,0.9910068909907709,yes,0.9915149168257549,yes,0.992678209028951,yes,0.993240007104722
262,hibernate-distribution-3.3.2.GA,DESIGN,// TODO: Fix this so it will work for non-POJO entity mode,yes,undetermined,0,0,0,yes,0.9999989822241379,yes,0.9999974438451563,yes,0.99999806844427,yes,0.9999990951502267,yes,0.9999992711298108
263,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: move these to a new JoinableType abstract class, //extended by EntityType and PersistentCollectionType:",yes,undetermined,0,0,0,yes,0.9959067365755924,yes,0.9909969069107626,yes,0.9915221404276388,yes,0.9929997619717446,yes,0.9936205502769527
264,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: would be nice to handle proxy classes elegantly!,yes,undetermined,0,0,0,yes,0.9884844805499559,yes,0.9909813002830513,yes,0.9915127015765635,yes,0.99266338117579,yes,0.9932330148082236
265,hibernate-distribution-3.3.2.GA,DESIGN,"//SPACES //TODO: i'm not sure, but perhaps we should exclude //      abstract denormalized tables?",yes,undetermined,0,0,0,yes,0.9946822301209598,yes,0.9946695668040653,yes,0.9955622166648542,yes,0.9962427040558041,yes,0.996498953841898
266,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: is there a more elegant way than downcasting?,yes,undetermined,0,0,0,yes,0.9999921596940587,yes,0.9999950486256585,yes,0.9999963483147978,yes,0.9999974003251796,yes,0.9999977800461639
267,hibernate-distribution-3.3.2.GA,DESIGN,// todo : remove,yes,undetermined,0,0,0,yes,0.9999934969368245,yes,0.9999971953149029,yes,0.9999978154777288,yes,0.9999984848622685,yes,0.9999987954253197
268,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: remove use of instanceof!,yes,undetermined,0,0,0,yes,0.9999882729669324,yes,0.999990942375528,yes,0.999992815820159,yes,0.9999948828956633,yes,0.9999958617874373
269,hibernate-distribution-3.3.2.GA,DESIGN,//create an index on the key columns??,yes,undetermined,0,0,0,no,0.0006513436104841916,yes,0.9909825081931769,yes,0.9915166888780801,yes,0.9926556140714737,yes,0.9932431075239897
270,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: make this a bit nicer,yes,undetermined,0,0,0,yes,0.9912384551416541,yes,0.9910290058407549,yes,0.9915262450181158,yes,0.9926529930519473,yes,0.9932282068334842
271,hibernate-distribution-3.3.2.GA,DESIGN,// todo : we can remove this once the deprecated ctor can be made private...,yes,undetermined,0,0,0,yes,0.9857147047446648,yes,0.9910004260567864,yes,0.9915207937039585,yes,0.9926648406813668,yes,0.993235806326971
272,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: perhaps this should be some other RuntimeException...,yes,undetermined,0,0,0,yes,0.9999999999654401,yes,0.9999999999409457,yes,0.9999999999464824,yes,0.9999999999711008,yes,0.9999999999805087
273,hibernate-distribution-3.3.2.GA,DESIGN,//Yuck:,yes,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
274,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: need some caching scheme? really comes down to decision  //      regarding amount of state (if any) kept on PropertyAccessors,yes,undetermined,0,0,0,yes,0.8232845190766308,yes,0.7979641421060217,yes,0.7983117271907894,yes,0.8085807539422671,yes,0.8155381187719877
275,hibernate-distribution-3.3.2.GA,DESIGN,// todo : this eventually needs to be removed,yes,undetermined,0,0,0,yes,0.9999812380722997,yes,0.9909846629765298,yes,0.9915158085374371,yes,0.9926570048293981,yes,0.9932278200772112
276,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: design new lifecycle for ProxyFactory,yes,undetermined,0,0,0,yes,0.982628274016449,yes,0.9910044379555445,yes,0.9915228608866131,yes,0.9926721344808083,yes,0.9932295291450942
277,hibernate-distribution-3.3.2.GA,DESIGN,"// todo: we should really just collect these from the various SelectExpressions, rather than regenerating here",yes,undetermined,0,0,0,yes,0.9926230100025666,yes,0.992772999513748,yes,0.9940959146377369,yes,0.9949681489725535,yes,0.9953888471609165
278,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO: Should this really return null?  If not, figure out something better to do here.",yes,undetermined,0,0,0,yes,0.999999082192253,yes,0.9999972816529539,yes,0.9999978843504376,yes,0.9999985770670586,yes,0.9999988311509287
279,hibernate-distribution-3.3.2.GA,DESIGN,// todo : should seriously consider not allowing a txn to begin from a child session //      can always route the request to the root session...,yes,undetermined,0,0,0,yes,0.7613070151336429,yes,0.7937400001509388,yes,0.8080069941160553,yes,0.8232799518339426,yes,0.8272788362573936
280,hibernate-distribution-3.3.2.GA,DESIGN,"// should indicate that we are processing an INSERT/UPDATE/DELETE // query with a subquery implied via a collection property // function. Here, we need to use the table name itself as the // qualification alias. // TODO : verify this works for all databases... // TODO : is this also the case in non-""indexed"" scenarios?",yes,undetermined,0,0,0,yes,0.9999946882791523,yes,0.9999927014158236,yes,0.9999941672080119,yes,0.999995701360036,yes,0.9999964196667148
281,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : this really needs to be delayed unitl after we definitively know all node types // where this is currently a problem is parameters for which where we cannot unequivocally // resolve an expected type,yes,undetermined,0,0,0,yes,0.9921652486571001,yes,0.9923943049059726,yes,0.9929395003088703,yes,0.9939908212693442,yes,0.9944930031776759
282,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO : make this the factory for ""entity mode related"" sessions; // also means making this the target of transaction-synch and the // thing that knows how to cascade things between related sessions // // At that point, perhaps this thing is a ""SessionContext"", and // ConnectionManager is a ""JDBCContext""?  A ""SessionContext"" should // live in the impl package...",yes,undetermined,0,0,0,yes,0.96460505288097,yes,0.9910126349621123,yes,0.9915355884349968,yes,0.9926828214988588,yes,0.993244438138799
283,hibernate-distribution-3.3.2.GA,DESIGN,// create an index on the key columns??,yes,undetermined,0,0,0,no,0.0006513436104841916,yes,0.9909825081931769,yes,0.9915166888780801,yes,0.9926556140714737,yes,0.9932431075239897
284,hibernate-distribution-3.3.2.GA,DESIGN,//is this ok?,yes,undetermined,0,0,0,no,0.00626201221192247,no,0.01237780611177661,no,0.011741302049483942,yes,0.9926603195484227,yes,0.9932422753709129
285,hibernate-distribution-3.3.2.GA,DESIGN,"//init the table here instead of earlier, so that we can get a quoted table name //TODO: would it be better to simply pass the qualified table name, instead of //      splitting it up into schema/catalog/table names",yes,undetermined,0,0,0,yes,0.8180840896362594,yes,0.9110219465327737,yes,0.9915262211311529,yes,0.9926696358897885,yes,0.9932463321077827
286,hibernate-distribution-3.3.2.GA,DESIGN,// perhaps this should be an exception since it is only ever used // in the above method?,yes,undetermined,0,0,0,no,0.3185248209494082,no,0.4679759771027611,no,0.4876802003204024,no,0.5,no,0.5079704917585419
287,hibernate-distribution-3.3.2.GA,DESIGN,// NOTE: this assumes something about how propertySelectFragment is implemented by the subclass! // was toUnqotedAliasStrings( getdiscriminatorColumnName() ) before - now tried // to remove that unqoting and missing aliases..,yes,undetermined,0,0,0,no,0.23435248280360585,no,0.26579358077130877,no,0.2615269353203737,no,0.2677530057946153,no,0.26825076392296143
288,hibernate-distribution-3.3.2.GA,DESIGN,"// Put a placeholder in entries, so we don't recurse back and try to save() the // same object again. QUESTION: should this be done before onSave() is called? // likewise, should it be done before onUpdate()?",yes,undetermined,0,0,0,no,0.1304846795167809,no,0.11900832477485794,no,0.1267764246287294,no,0.12433065798188196,no,0.12404208937972208
289,hibernate-distribution-3.3.2.GA,DESIGN,"//before cascade! //TODO: should this be Session.instantiate(Persister, ...)?",yes,undetermined,0,0,0,yes,0.9412930150304122,yes,0.9909992445961059,yes,0.9915264926942154,yes,0.9926737554637329,yes,0.9932352162984216
290,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: we should throw an exception if we really *know* for sure   //      that this is a detached instance, rather than just assuming //throw new StaleObjectStateException(entityName, id);",yes,undetermined,0,0,0,yes,0.9886299601291557,yes,0.9909878242922907,yes,0.9915298690620994,yes,0.9926742422365153,yes,0.9932392894737209
291,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO: The order in which entities are saved may matter (e.g., a particular transient entity //       may need to be saved before other transient entities can be saved; //       Keep retrying the batch of transient entities until either: //       1) there are no transient entities left in transientCopyCache //       or 2) no transient entities were saved in the last batch // For now, just run through the transient entities and retry the merge",yes,undetermined,0,0,0,no,0.24203477929730224,no,0.3031093302353143,no,0.3554131194326583,no,0.3703659841969671,no,0.3692258709205789
292,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: if object was an uninitialized proxy, this is inefficient, //      resulting in two SQL selects",yes,undetermined,0,0,0,yes,0.8566898920297354,yes,0.8836245293974139,yes,0.8795848030932609,yes,0.8904930498864351,yes,0.8970453064096898
293,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: put this stuff back in to read snapshot from //      the second-level cache (needs some extra work),yes,undetermined,0,0,0,yes,0.9734561769739086,yes,0.9909946511099792,yes,0.9915295859535804,yes,0.9926745680429724,yes,0.9932408104158811
294,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: not quite sure about the full implications of this!,yes,undetermined,0,0,0,yes,0.9940795151138001,yes,0.9939474155133192,yes,0.9942749092670897,yes,0.9949741732828015,yes,0.9953565334242784
295,hibernate-distribution-3.3.2.GA,DESIGN,//this is kinda the best we can do...,yes,undetermined,0,0,0,no,0.5503524957325504,no,0.5061298376139791,no,0.5260328244624543,yes,0.5561237918801357,yes,0.5599528659732262
296,hibernate-distribution-3.3.2.GA,DESIGN,/* trim done to workaround stupid oracle bug that cant handle whitespaces before a { in a sp */,yes,undetermined,0,0,0,yes,0.8960325124735091,yes,0.9486021869006013,yes,0.991538261464376,yes,0.9926746177009003,yes,0.9932321061577316
297,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: this needn't exclude subclasses...,yes,undetermined,0,0,0,yes,0.9416058720989039,yes,0.9910024409527263,yes,0.991525198037097,yes,0.9926590067286516,yes,0.9932452512619676
298,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: we use two visitors here, inefficient!",yes,undetermined,0,0,0,yes,0.990876919316218,yes,0.994903718985594,yes,0.9952884953766669,yes,0.99600666291537,yes,0.996619111195495
299,hibernate-distribution-3.3.2.GA,DESIGN,/* trim done to workaround stupid oracle bug that cant handle whitespaces before a { in a sp */,yes,undetermined,0,0,0,yes,0.8960325124735091,yes,0.9486021869006013,yes,0.991538261464376,yes,0.9926746177009003,yes,0.9932321061577316
300,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: does this really need to be here? //      does the collection already have //      it's own up-to-date snapshot?,yes,undetermined,0,0,0,yes,0.9886721051540858,yes,0.9930685950876145,yes,0.9943263562213183,yes,0.9954497750711468,yes,0.9960058261621448
301,hibernate-distribution-3.3.2.GA,DESIGN,"// otherwise, a trim-specification and/or a trim-character // have been specified;  we need to decide which options // are present and ""do the right thing"" // should leading trim-characters be trimmed? // should trailing trim-characters be trimmed? // the trim-character // the trim-source",yes,undetermined,0,0,0,no,0.012750954467523992,no,0.15670887088789728,no,0.1260706249444207,no,0.12694587461940465,no,0.12684333664837125
302,hibernate-distribution-3.3.2.GA,DESIGN,"//it is possible that the tree-walking in OuterJoinLoader can get to //an association defined by a subclass, in which case the property-ref //might refer to a property defined on a subclass of the current class //in this case, the table name is not known - this temporary solution  //assumes that the property-ref refers to a property of the subclass //table that the association belongs to (a reasonable guess) //TODO: fix this, add: OuterJoinLoadable.getSubclassPropertyTableName(String propertyName)",yes,undetermined,0,0,0,yes,0.8846765613592775,yes,0.7795662054360634,yes,0.7571809688045322,yes,0.769562965151993,yes,0.7761400390254953
303,hibernate-distribution-3.3.2.GA,DESIGN,// TODO: an alternative is to check if the owner has changed; if it hasn't then // return collection.getOwner(),yes,undetermined,0,0,0,yes,0.7999608067819869,yes,0.8125934052013181,yes,0.8135361027656014,yes,0.8365901118089166,yes,0.8427197966898803
304,hibernate-distribution-3.3.2.GA,DESIGN,//I suppose?,yes,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
305,hibernate-distribution-3.3.2.GA,DESIGN,"// TBD should this be varbinary($1)? //		registerColumnType(Types.VARBINARY,     ""binary($1)"");",yes,undetermined,0,0,0,no,0.06121199119873382,yes,0.9910017300846584,yes,0.9915148706818756,yes,0.9926602260610344,yes,0.9932439501169779
306,hibernate-distribution-3.3.2.GA,DESIGN,//shortcut,yes,undetermined,0,0,0,no,0.003065307470705328,yes,0.9909836789873175,yes,0.9915132129047529,yes,0.9926768504129524,yes,0.9932277740117957
307,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: we should provide some way to get keys of collection of statistics to make it easier to retrieve from a GUI perspective,yes,undetermined,0,0,0,yes,0.9850516677529111,yes,0.9921981255039375,yes,0.9926408460447185,yes,0.9942943414985013,yes,0.9946586748973297
308,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO : probably better to calculate these and pass them in, as it'll be more performant",yes,undetermined,0,0,0,yes,0.9999964405003449,yes,0.9999882484859208,yes,0.9999914316809514,yes,0.9999941361743043,yes,0.999995479709101
309,hibernate-distribution-3.3.2.GA,DESIGN,// todo : should we additionally check the current isolation mode explicitly?,yes,undetermined,0,0,0,yes,0.9959407700323218,yes,0.995292193498106,yes,0.9955839941151775,yes,0.9961668935998446,yes,0.9964857019697336
310,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: simply remove this override //      if we fix the above todos,yes,undetermined,0,0,0,yes,0.9999865610420298,yes,0.9999904161812608,yes,0.99999148775353,yes,0.9999938576196722,yes,0.9999949741425018
311,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: get SQL rendering out of this package!,yes,undetermined,0,0,0,yes,0.99093069360845,yes,0.9927203482967716,yes,0.9919486407971604,yes,0.9930326919045317,yes,0.9938565075105459
312,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: get SQL rendering out of this package!,yes,undetermined,0,0,0,yes,0.99093069360845,yes,0.9927203482967716,yes,0.9919486407971604,yes,0.9930326919045317,yes,0.9938565075105459
313,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: get SQL rendering out of this package!,yes,undetermined,0,0,0,yes,0.99093069360845,yes,0.9927203482967716,yes,0.9919486407971604,yes,0.9930326919045317,yes,0.9938565075105459
314,hibernate-distribution-3.3.2.GA,DESIGN,// todo : is there really any reason to kkeep trying if this fails once?,yes,undetermined,0,0,0,yes,0.9459630827982592,yes,0.9910031033388484,yes,0.991526293492463,yes,0.9926826312692338,yes,0.9932353075823237
315,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO : not sure this is correct, could not find docs on how to do this.",yes,undetermined,0,0,0,yes,0.999985073979804,yes,0.9999937554719395,yes,0.999993647875275,yes,0.9999959999490742,yes,0.9999968138935409
316,hibernate-distribution-3.3.2.GA,DESIGN,//HSQL has no Blob/Clob support .... but just put these here for now!,yes,undetermined,0,0,0,no,0.035465376556478224,yes,0.991001740624553,yes,0.9915274131231989,yes,0.9926601513029489,yes,0.9932311954536848
317,hibernate-distribution-3.3.2.GA,DESIGN,// merges don't cascade to uninitialized collections //			//TODO: perhaps this does need to cascade after all....,yes,undetermined,0,0,0,yes,0.9814597682580137,yes,0.9909939270112276,yes,0.9915221048301632,yes,0.9926662830455252,yes,0.9932253938727076
318,hibernate-distribution-3.3.2.GA,DESIGN,// yick!  need this for proper serialization/deserialization handling...,yes,undetermined,0,0,0,no,0.21480378275025314,no,0.14452793647812703,no,0.13525347739847296,no,0.13446829911319141,no,0.13405167879148447
319,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: should orphans really be deleted during lock???,yes,undetermined,0,0,0,yes,0.8865642068212112,yes,0.9837011677346055,yes,0.9915167235342227,yes,0.9926787652010788,yes,0.9932281415771095
320,hibernate-distribution-3.3.2.GA,DESIGN,// todo : move to StringHelper?,yes,undetermined,0,0,0,yes,0.9999998168839769,yes,0.9999949572195049,yes,0.9999962115426337,yes,0.9999974428119357,yes,0.9999978945722003
321,hibernate-distribution-3.3.2.GA,DESIGN,// Sets can be just a view of a part of another collection. // do we need to copy it to be sure it won't be changing // underneath us? // ie. this.set.addAll(set);,yes,undetermined,0,0,0,no,0.2260276038540118,no,0.4666800200902516,no,0.4498924251964489,no,0.47155192319556705,no,0.47902288900314777
322,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO: It would be really, really nice to use this to also model components!",yes,undetermined,0,0,0,yes,0.996484923279026,yes,0.9949226512958429,yes,0.9951813303143414,yes,0.9958903229851105,yes,0.9967794785492354
323,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: move to .sql package!!,yes,undetermined,0,0,0,yes,0.9935747250204162,yes,0.9919072439395203,yes,0.9924461731680028,yes,0.9937392563146465,yes,0.9944525807741252
324,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: look at the owning property and check that it  //      isn't lazy (by instrumentation),yes,undetermined,0,0,0,yes,0.9659986237404365,yes,0.9910032876296417,yes,0.9915106890569392,yes,0.9926653253208658,yes,0.9932342902456632
325,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : add this info to the translator and aggregate it here...,yes,undetermined,0,0,0,yes,0.995524947846003,yes,0.991698925410489,yes,0.9919919396592699,yes,0.9929963892296332,yes,0.9936052768563925
326,hibernate-distribution-3.3.2.GA,DESIGN,//TODO possibly relax that,yes,undetermined,0,0,0,yes,0.9801469761301921,yes,0.9909910516972789,yes,0.9915255908730815,yes,0.9926621913242389,yes,0.993236652000637
327,hibernate-distribution-3.3.2.GA,DESIGN,//TODO possibly relax that,yes,undetermined,0,0,0,yes,0.9801469761301921,yes,0.9909910516972789,yes,0.9915255908730815,yes,0.9926621913242389,yes,0.993236652000637
328,hibernate-distribution-3.3.2.GA,DESIGN,// would be better to use the element-type to determine // whether the old and the new are equal here; the problem being // we do not necessarily have access to the element type in all // cases,yes,undetermined,0,0,0,no,0.39609790422708346,no,0.3748852114384656,no,0.3749734251428143,no,0.37991787858103887,no,0.37446136764698507
329,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: code duplication with JoinedSubclassEntityPersister,yes,undetermined,0,0,0,yes,0.999999102955854,yes,0.9967420585861209,yes,0.9971053767235796,yes,0.9999812268119109,yes,0.9999846024539574
330,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: refactor to .sql package,yes,undetermined,0,0,0,yes,0.9943287926852636,yes,0.9955186701089438,yes,0.9957637748860524,yes,0.9963302049216097,yes,0.9968385092586598
331,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: *two* hashmap lookups here is one too many...,yes,undetermined,0,0,0,yes,0.8389316083018424,yes,0.812511618813383,yes,0.8179984130003423,yes,0.8270584672448755,yes,0.8681075225192142
332,hibernate-distribution-3.3.2.GA,DESIGN,"//note that this method could easily be moved up to BasicEntityPersister, //if we ever needed to reuse it from other subclasses",yes,undetermined,0,0,0,no,0.050139515374644124,yes,0.9909958653628,yes,0.9915228921448512,yes,0.992662426134443,yes,0.9932271884745603
333,hibernate-distribution-3.3.2.GA,DESIGN,"// from the collection of associations, locate OJA for the // ManyToOne corresponding to this persister to fully // define the many-to-many; we need that OJA so that we can // use its alias here // TODO : is there a better way here?",yes,undetermined,0,0,0,yes,0.9865340730133126,yes,0.991007527429743,yes,0.9915228745047153,yes,0.992669212612735,yes,0.9932399858732038
334,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: this class depends directly upon CriteriaImpl,  //      in the impl package ... add a CriteriaImplementor  //      interface",yes,undetermined,0,0,0,yes,0.881412964170723,yes,0.8976793698064702,yes,0.8988035281341896,yes,0.9075016009565807,yes,0.9932409497464953
335,hibernate-distribution-3.3.2.GA,DESIGN,// Do we need to qualify index names with the schema name?,yes,undetermined,0,0,0,no,0.03659703184117105,yes,0.9909908044104863,yes,0.991523305339854,yes,0.9926677750849704,yes,0.993239624143746
336,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: We probably should have a StatisticsNotPublishedException, to make it clean",yes,undetermined,0,0,0,yes,0.9999999939969778,yes,0.9999999888734517,yes,0.9999999914618724,yes,0.9999999948614,yes,0.999999996019299
337,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: get SQL rendering out of this package!,yes,undetermined,0,0,0,yes,0.99093069360845,yes,0.9927203482967716,yes,0.9919486407971604,yes,0.9930326919045317,yes,0.9938565075105459
338,hibernate-distribution-3.3.2.GA,DESIGN,//yukky! Don't you have subclasses for that! //TODO race conditions can happen here,yes,undetermined,0,0,0,yes,0.9763565861451571,yes,0.9909898560949233,yes,0.9915217427538235,yes,0.9926603505879948,yes,0.9932362581806631
339,hibernate-distribution-3.3.2.GA,DESIGN,// NOTE VERY HACKISH WORKAROUND!! // TODO: Fix this so it will work for non-POJO entity mode,yes,undetermined,0,0,0,yes,0.9999999999059178,yes,0.9999999997148902,yes,0.9999999998099585,yes,0.9999999999066508,yes,0.9999999999303781
340,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: need to make the majority of this functionality into a top-level support class for custom impl support,yes,undetermined,0,0,0,yes,0.9886391282492493,yes,0.9916518194634631,yes,0.9920425325159363,yes,0.9930415504300436,yes,0.9942636401490683
341,hibernate-distribution-3.3.2.GA,DESIGN,"// for DOM4J ""collections"" only // TODO: it would be better if this was done at the higher level by Printer",yes,undetermined,0,0,0,yes,0.9918527695826235,yes,0.9910021542576405,yes,0.99152678418084,yes,0.9926668580974433,yes,0.9932410764147228
342,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: inefficient if that cache is just going to ignore the updated state!,yes,undetermined,0,0,0,yes,0.7061345751133331,yes,0.7604568519377581,yes,0.7569470465977666,yes,0.7677109286185012,yes,0.7730007210806624
343,hibernate-distribution-3.3.2.GA,DESIGN,// TODO: an alternative is to check if the owner has changed; if it hasn't then // get the ID from collection.getOwner(),yes,undetermined,0,0,0,yes,0.8008429788357643,yes,0.8017910889096647,yes,0.8123127110438153,yes,0.8300489103802612,yes,0.8353184129587184
344,hibernate-distribution-3.3.2.GA,DESIGN,//TODO:refactor + make this method private,yes,undetermined,0,0,0,yes,0.9965109347191147,yes,0.9909852130227621,yes,0.991524390859838,yes,0.9926610898659243,yes,0.9932223183137929
345,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : keep seperate notions of QT[] here for shallow/non-shallow queries...,yes,undetermined,0,0,0,yes,0.8690938439673891,yes,0.9424353769361885,yes,0.9915079507339716,yes,0.992656331914806,yes,0.9932252448717038
346,hibernate-distribution-3.3.2.GA,DESIGN,// todo : temporary //      needed because currently persister is the one that //      creates and renders the join fragments for inheritence //      hierarchies...,yes,undetermined,0,0,0,yes,0.9758166580730023,yes,0.9910040286503736,yes,0.9915156400358803,yes,0.9926733569310132,yes,0.9932363673203903
347,hibernate-distribution-3.3.2.GA,DESIGN,// this is called by SessionFactory irregardless; we just disregard here; // could also add a check to SessionFactory to only conditionally call stop,yes,undetermined,0,0,0,no,0.16850837690337783,no,0.1878529143311644,no,0.17092615867980138,no,0.17338516350722252,no,0.17537091627198018
348,hibernate-distribution-3.3.2.GA,DESIGN,//swaldman 2004-02-07: modify to allow null values to signify fall through to c3p0 PoolConfig defaults,yes,undetermined,0,0,0,no,0.00879053078347246,yes,0.9910009870114962,yes,0.9915181783333187,yes,0.9926759589647354,yes,0.9932469437366048
349,hibernate-distribution-3.3.2.GA,DESIGN,"// work around that crazy issue where the tree contains // ""empty"" FromElements (no text); afaict, this is caused // by FromElementFactory.createCollectionJoin()",yes,undetermined,0,0,0,no,0.41434728852971625,no,0.39595968960826644,no,0.3951243265524569,no,0.39823811046444074,no,0.3976936220351299
350,hibernate-distribution-3.3.2.GA,DESIGN,"//kinda ugly, but needed for collections with a ""."" node mapping",yes,undetermined,0,0,0,no,0.30675005047002224,no,0.343774665699626,no,0.3460269536542582,no,0.34215025399823795,no,0.3861733946762412
351,hibernate-distribution-3.3.2.GA,DESIGN,//FIXME: get the PersistentClass,yes,undetermined,0,0,0,yes,0.9529011881949462,yes,0.9910000919258355,yes,0.9915093051275172,yes,0.9926604984144644,yes,0.9932449392586531
352,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO : would be great to have a Mapping#hasNonIdentifierPropertyNamedId method // I don't believe that Mapping#getReferencedPropertyType accounts for the identifier property; so // if it returns for a property named 'id', then we should have a non-id field named id",yes,undetermined,0,0,0,yes,0.8242270950010607,yes,0.7149104075147318,yes,0.7188549129299578,yes,0.7315411796599505,yes,0.7743288956270672
353,hibernate-distribution-3.3.2.GA,DESIGN,// entity name will not be available for non-POJO entities // TODO: cache the entity name somewhere so that it is available to this exception,yes,undetermined,0,0,0,yes,0.8788691767705131,yes,0.8911284693188822,yes,0.9328341975808238,yes,0.9926769312826497,yes,0.9932231708039078
354,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: is this really necessary????,yes,undetermined,0,0,0,yes,0.9999993930354742,yes,0.9999987107454295,yes,0.9999983431872107,yes,0.9999989217885515,yes,0.9999991727253538
355,hibernate-distribution-3.3.2.GA,DESIGN,//index += getPropertyColumnSpan( i ); //TODO:  this is kinda slow...,yes,undetermined,0,0,0,yes,0.9741401983025325,yes,0.9910082517305462,yes,0.9915212098392348,yes,0.9926724513867236,yes,0.9932378189486093
356,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: move to .sql package, and refactor with similar things!",yes,undetermined,0,0,0,yes,0.9905225100164811,yes,0.9910020655046837,yes,0.9915155463017981,yes,0.9926704265362312,yes,0.9932382827548577
357,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: I am not so sure about the exception handling in this bit!,yes,undetermined,0,0,0,yes,0.993020581426308,yes,0.9930234155285521,yes,0.9937031124105484,yes,0.9945813819685798,yes,0.9951919704126432
358,hibernate-distribution-3.3.2.GA,DESIGN,//ugly little workaround for fact that createUniqueKeyLoaders() does not handle component properties,yes,undetermined,0,0,0,yes,0.9935118162177051,yes,0.9936343401562198,yes,0.9947011090279213,yes,0.9954296013482269,yes,0.9957692094767244
359,hibernate-distribution-3.3.2.GA,DESIGN,// append the SQL to return the generated identifier //TODO: suck into Insert,yes,undetermined,0,0,0,yes,0.9202655199056184,yes,0.9910018902401425,yes,0.991533577888983,yes,0.9926752689738951,yes,0.9932375598673722
360,hibernate-distribution-3.3.2.GA,DESIGN,"//This is really ugly, but necessary:",yes,undetermined,0,0,0,yes,0.9770943743484144,yes,0.9910025364556947,yes,0.9915314542502345,yes,0.9926735953643687,yes,0.9932323940197109
361,hibernate-distribution-3.3.2.GA,DESIGN,// todo : modify the class definition if not already transformed...,yes,undetermined,0,0,0,yes,0.9667551181248317,yes,0.9909910492123924,yes,0.991526384098863,yes,0.9926570785849473,yes,0.9932430366740578
362,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: should we use SELECT .. FOR UPDATE?,yes,undetermined,0,0,0,yes,0.9969145945318677,yes,0.9964366892877278,yes,0.996643872617616,yes,0.9971426615056889,yes,0.997352973507007
363,hibernate-distribution-3.3.2.GA,DESIGN,"/** Create an action that will evict collection and entity regions based on queryspaces (table names).
	 *  TODO: cache the autodetected information and pass it in instead.
	 **/",yes,undetermined,0,0,0,yes,0.9021430349485902,yes,0.9909944328060769,yes,0.9915055868197002,yes,0.9926665846032844,yes,0.993246966977817
364,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: is this 100% correct?,yes,undetermined,0,0,0,yes,0.9999929979545954,yes,0.9999912044181843,yes,0.9999895020164912,yes,0.9999932938401075,yes,0.9999946945193001
365,hibernate-distribution-3.3.2.GA,DESIGN,/////////////////////////////////////////////////////////////////////////// // USED ONLY FOR REGRESSION TESTING!!!! // // todo : obviously get rid of all this junk ;) ///////////////////////////////////////////////////////////////////////////,yes,undetermined,0,0,0,yes,0.9480794939370201,yes,0.9909961029047484,yes,0.991516941085254,yes,0.9926746570113262,yes,0.9932409149628199
366,hibernate-distribution-3.3.2.GA,DESIGN,// NOTE: this assumes something about how propertySelectFragment is implemented by the subclass! // was toUnqotedAliasStrings( getIdentiferColumnNames() ) before - now tried // to remove that unqoting and missing aliases..,yes,undetermined,0,0,0,no,0.23435248280360585,no,0.26579358077130877,no,0.2615269353203737,no,0.2677530057946153,no,0.26825076392296143
367,hibernate-distribution-3.3.2.GA,DESIGN,//use of a stringbuffer to workaround a JDK bug,yes,undetermined,0,0,0,yes,0.9966830647690501,yes,0.9967226068233476,yes,0.9971811357356526,yes,0.9999829376234154,yes,0.9999867493423752
368,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: move into collection type, so we can use polymorphism!",yes,undetermined,0,0,0,yes,0.9999932558292913,yes,0.9999853745837743,yes,0.9943609075726886,yes,0.9973951003157786,yes,0.9999824756537808
369,hibernate-distribution-3.3.2.GA,DESIGN,// TODO should we just collect these like with the collections above?,yes,undetermined,0,0,0,yes,0.9901954167689337,yes,0.9910049825480396,yes,0.9915224379850386,yes,0.9926798583671164,yes,0.9932364269064505
370,hibernate-distribution-3.3.2.GA,DESIGN,"// todo : should really move this log statement to CollectionType, where this is used from...",yes,undetermined,0,0,0,yes,0.9999966991928707,yes,0.9999828805715626,yes,0.9999831394572081,yes,0.999989877276578,yes,0.9999918038850636
371,hibernate-distribution-3.3.2.GA,DESIGN,// FIXME Hacky workaround to JBCACHE-1202,yes,undetermined,0,0,0,yes,0.9999999999932982,yes,0.9999999999917848,yes,0.9999999999949769,yes,0.9999999999974003,yes,0.9999999999981835
372,hibernate-distribution-3.3.2.GA,DESIGN,//hum ... should we cascade anyway? throw an exception? fine like it is?,yes,undetermined,0,0,0,no,0.20408468774612537,no,0.239924421080833,no,0.2547397714061012,no,0.26604988506569005,no,0.2606641162881755
373,hibernate-distribution-3.3.2.GA,DESIGN,// todo: this might really even be moved into the cfg package and used as the basis for all things which are configurable.,yes,undetermined,0,0,0,yes,0.9912324302406389,yes,0.9910174270611394,yes,0.9915184203706725,yes,0.9926747294099285,yes,0.9932429014498105
374,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: copy/paste from insertRows(),yes,undetermined,0,0,0,yes,0.999985660605997,yes,0.9999986148327195,yes,0.9999988671861962,yes,0.9999992149167314,yes,0.9999993714911734
375,hibernate-distribution-3.3.2.GA,DESIGN,//TODO: suck into event class,yes,undetermined,0,0,0,yes,0.9999972277469507,yes,0.9999956388969616,yes,0.9999966228701582,yes,0.9999976980856802,yes,0.9999981562846343
376,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: never reached, since getTypeName() actually throws an exception!",yes,undetermined,0,0,0,yes,0.8486052009094932,yes,0.832105860159641,yes,0.8417152986829367,yes,0.850934066987886,yes,0.8640542853184335
377,hibernate-distribution-3.3.2.GA,DESIGN,"// This, is used by SessionFactoryImpl to hand to the generated SessionImpl; // was the only reason I could see that we cannot just use null as // Settings.cacheProvider",yes,undetermined,0,0,0,no,0.014142921467507527,yes,0.9909833241822416,yes,0.9915224522194291,yes,0.9926616377516156,yes,0.9932254988162611
378,hibernate-distribution-3.3.2.GA,DESIGN,// xmlforest requires a new kind of function constructor,yes,undetermined,0,0,0,no,0.02255208468065205,yes,0.9909950693122557,yes,0.9915292536725553,yes,0.9926651726055084,yes,0.9932275078506169
379,hibernate-distribution-3.3.2.GA,DESIGN,// TODO Is this a valid operation on a timestamps cache?,yes,undetermined,0,0,0,yes,0.9522582867719059,yes,0.9909845954692534,yes,0.9915357571784204,yes,0.9926724753736342,yes,0.9932485127909173
380,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO: I considered validating the presence of the TS cache here, // but decided to defer unti getQueryCacheInstance() in case the  // cache is never actually used",yes,undetermined,0,0,0,yes,0.7085979098352262,yes,0.7746456940578884,yes,0.7814580037578099,yes,0.7922857507370541,yes,0.8300361295278207
381,hibernate-distribution-3.3.2.GA,DESIGN,// TODO Why not use the timestamp in a DataVersion?,yes,undetermined,0,0,0,yes,0.9999812096611864,yes,0.9999885358057345,yes,0.9999914955524243,yes,0.9999942899916671,yes,0.9999953243401735
382,hibernate-distribution-3.3.2.GA,DESIGN,// todo : eventually merge this with TreeCache and just add optional opt-lock support there.,yes,undetermined,0,0,0,yes,0.844919036185949,yes,0.6837051039809197,yes,0.6700586291255837,yes,0.6836556912615983,yes,0.6875867419901711
383,hibernate-distribution-3.3.2.GA,DESIGN,"/**
     * FIXME Per the RegionFactory class Javadoc, this constructor version
     * should not be necessary.
     * 
     * @param props The configuration properties
     */",yes,undetermined,0,0,0,yes,0.9896909751495556,yes,0.9910130267795478,yes,0.9915178215568361,yes,0.9926777982647668,yes,0.9932412675311232
384,hibernate-distribution-3.3.2.GA,DESIGN,"/**
     * FIXME Per the RegionFactory class Javadoc, this constructor version
     * should not be necessary.
     * 
     * @param props The configuration properties
     */",yes,undetermined,0,0,0,yes,0.9896909751495556,yes,0.9910130267795478,yes,0.9915178215568361,yes,0.9926777982647668,yes,0.9932412675311232
385,hibernate-distribution-3.3.2.GA,DESIGN,"// work around the ""feature"" where tree cache is validating the // inserted node during the next transaction.  no idea...",yes,undetermined,0,0,0,no,0.11272900748623751,no,0.1246451099913651,no,0.11827503619096744,no,0.11513128032557936,no,0.11147414368208458
386,hibernate-distribution-3.3.2.GA,DESIGN,"/**
     * FIXME Per the RegionFactory class Javadoc, this constructor version
     * should not be necessary.
     * 
     * @param props The configuration properties
     */",yes,undetermined,0,0,0,yes,0.9896909751495556,yes,0.9910130267795478,yes,0.9915178215568361,yes,0.9926777982647668,yes,0.9932412675311232
387,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO: I considered validating TS cache config here, // but decided to defer unti getTimestampsCacheInstance() in case the  // cache is never actually used",yes,undetermined,0,0,0,yes,0.7517029766461006,yes,0.792123148317041,yes,0.798551632794213,yes,0.8072051565467193,yes,0.8450600211021995
388,hibernate-distribution-3.3.2.GA,DESIGN,// can happen because of the multiple ways Cache.remove() // can be invoked :(,yes,undetermined,0,0,0,no,0.002428730090780189,yes,0.9909922071523328,yes,0.9915118775658672,yes,0.9926660299668343,yes,0.9932399722488124
389,hibernate-distribution-3.3.2.GA,DESIGN,//need to do that here rather than in the save event listener to let //the post insert events to have a id-filled entity when IDENTITY is used (EJB3),yes,undetermined,0,0,0,no,0.13736468336686403,no,0.09672003006634487,yes,0.9915343276070154,yes,0.9926829938077888,yes,0.9932212114986206
390,hibernate-distribution-3.3.2.GA,DESIGN,// unhappy about this being public ... is there a better way?,yes,undetermined,0,0,0,yes,0.7731122183722595,yes,0.8019337053983685,yes,0.8169458825466063,yes,0.8369008677478988,yes,0.8388623245122058
391,hibernate-distribution-3.3.2.GA,DESIGN,"// TODO : safe to interpret ""map.remove(key) == null"" as non-dirty?",yes,undetermined,0,0,0,yes,0.8625295968562572,yes,0.7912693464296402,yes,0.7700502539186987,yes,0.8005391883637827,yes,0.8023193291207702
392,hibernate-distribution-3.3.2.GA,DESIGN,// FIXME hack to work around fact that calling // Node added = root.addChild( fqn ); doesn't  // properly set the version on the node,yes,undetermined,0,0,0,yes,0.9999977796626213,yes,0.9999959916543804,yes,0.9999964603423358,yes,0.9999976076761526,yes,0.9999980278162548
393,hibernate-distribution-3.3.2.GA,DESIGN,"// work around the ""feature"" where tree cache is validating the // inserted node during the next transaction. no idea...",yes,undetermined,0,0,0,no,0.11272900748623751,no,0.1246451099913651,no,0.11827503619096744,no,0.11513128032557936,no,0.11147414368208458
394,hibernate-distribution-3.3.2.GA,DESIGN,// TODO Is this a valid operation on a timestamps cache?,yes,undetermined,0,0,0,yes,0.9522582867719059,yes,0.9909845954692534,yes,0.9915357571784204,yes,0.9926724753736342,yes,0.9932485127909173
395,hibernate-distribution-3.3.2.GA,DESIGN,// todo : what else to do here?,yes,undetermined,0,0,0,yes,0.9930105091500604,yes,0.9932283940285211,yes,0.9936968796811938,yes,0.9946107811961472,yes,0.9950403921296633
396,hibernate-distribution-3.3.2.GA,DESIGN,// TODO: Replace this with a more elegant solution.,yes,undetermined,0,0,0,yes,0.9999996441002185,yes,0.9999996848087658,yes,0.9999996566306033,yes,0.9999997763919136,yes,0.9999998267328667
397,hibernate-distribution-3.3.2.GA,DESIGN,// short cut check...,yes,undetermined,0,0,0,no,0.0042771542605025345,yes,0.9909957526015553,yes,0.9915134306494034,yes,0.9926594570896365,yes,0.9932375457329818
398,hibernate-distribution-3.3.2.GA,DESIGN,"//TODO: to handle concurrent writes correctly, this should return a Lock to the client",yes,undetermined,0,0,0,yes,0.9580973036848395,yes,0.9910061320124948,yes,0.9941400956029645,yes,0.9949775377152011,yes,0.99535228160012
399,hibernate-distribution-3.3.2.GA,DESIGN,"//put() has nowait semantics, is this really appropriate? //note that it needs to be async replication, never local or sync",yes,undetermined,0,0,0,no,0.47048841308573386,no,0.43811485782038034,no,0.445410220102878,no,0.45630338356960554,no,0.4849607052605248
400,hibernate-distribution-3.3.2.GA,DESIGN,"// this is ugly here, but needed because its a subquery",yes,undetermined,0,0,0,yes,0.9273586235348492,yes,0.9910028000143054,yes,0.9915244829733019,yes,0.9926785071333355,yes,0.9932428304183454
401,hibernate-distribution-3.3.2.GA,DESIGN,// TODO : will need reference to session factory to fully complete HHH-1907,yes,undetermined,0,0,0,yes,0.9621955000759004,yes,0.9909898197379634,yes,0.9915177085995134,yes,0.9926537337793521,yes,0.9932436524097362
402,hibernate-distribution-3.3.2.GA,DESIGN,//yuck!,yes,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
403,hibernate-distribution-3.3.2.GA,DESIGN,// inheritance cycle detection (paranoid check),yes,undetermined,0,0,0,no,0.00271221635271672,yes,0.9909931099124186,yes,0.991516479514603,yes,0.9926583796230447,yes,0.9932349771358477
404,hibernate-distribution-3.3.2.GA,DESIGN,// todo : remove,yes,undetermined,0,0,0,yes,0.9999934969368245,yes,0.9999971953149029,yes,0.9999978154777288,yes,0.9999984848622685,yes,0.9999987954253197
405,hibernate-distribution-3.3.2.GA,DESIGN,// TODO: encapsulate the protected instance variables!,yes,undetermined,0,0,0,yes,0.9410094322042237,yes,0.991002134060569,yes,0.9915121313978928,yes,0.992670463304786,yes,0.9932367120364564
406,hibernate-distribution-3.3.2.GA,DESIGN,//polymorphism comment above,yes,undetermined,0,0,0,no,0.0036229665845020726,yes,0.9910019354102793,yes,0.9915338246236906,yes,0.9926732274156115,yes,0.9932277157833111
407,hibernate-distribution-3.3.2.GA,DOCUMENTATION,//TODO find a decent name before documenting,yes,undetermined,0,0,0,yes,0.9769425763759383,yes,0.9909839010675748,yes,0.991507106088371,yes,0.9926702504412155,yes,0.9932412476574988
408,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"// add an entry for this type of entity. // we can be assured that all referenced entities have already // been processed, // so specify that this entity is with the latest batch. // doing the batch number before adding the name to the list is // a faster way to get an accurate number.",yes,undetermined,0,0,0,no,0.11368461196818365,no,0.08033810070400063,yes,0.9915126653764464,yes,0.9926702783187379,yes,0.9932281355508852
409,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// TODO: handle TypeDefs,yes,undetermined,0,0,0,yes,0.9872373033599882,yes,0.9910124710079931,yes,0.9915268693642085,yes,0.9926811624426095,yes,0.9932447481279532
410,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"//TODO: get all properties, not just the fetched ones!",yes,undetermined,0,0,0,yes,0.9398723565667874,yes,0.9909988289483052,yes,0.9915186443386675,yes,0.9926575267017436,yes,0.9932290509677113
411,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: native ids,yes,undetermined,0,0,0,yes,0.8684714135805561,yes,0.771240725254457,yes,0.7068311808911378,yes,0.720611820239562,yes,0.729014279341094
412,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"// TODO: bindpropertyresults(alias, returnElem)",yes,undetermined,0,0,0,yes,0.9941513257318502,yes,0.9942227175134734,yes,0.9947379946007815,yes,0.9954152326831801,yes,0.9958412286816655
413,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: handle property-ref,yes,undetermined,0,0,0,yes,0.7909588531423144,yes,0.6207775059647882,yes,0.5623650504922147,yes,0.5751765222820566,yes,0.5861767892863559
414,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: validate existing of property with the chosen name. (secondpass ),yes,undetermined,0,0,0,yes,0.9279841821944047,yes,0.9909878690026569,yes,0.9915368691606543,yes,0.9926560356839634,yes,0.9932325128638467
415,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"//TODO: get all properties, not just the fetched ones!",yes,undetermined,0,0,0,yes,0.9398723565667874,yes,0.9909988289483052,yes,0.9915186443386675,yes,0.9926575267017436,yes,0.9932290509677113
416,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: check that entry.getIdentifier().equals(requestedId),yes,undetermined,0,0,0,yes,0.6313555493539906,yes,0.5762155157795072,yes,0.5927389420662238,yes,0.6054917845535321,yes,0.6104254772561761
417,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// TODO: RESTRICT VIOLATION,yes,undetermined,0,0,0,yes,0.6523363213906538,yes,0.6121859931544065,yes,0.626572175416165,yes,0.6352107155687632,yes,0.6453647676556048
418,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"//TODO: assertion only, could be optimized away",yes,undetermined,0,0,0,yes,0.9552769243408186,yes,0.990996805244327,yes,0.9915076737074522,yes,0.9926622676605227,yes,0.9932437910538142
419,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"// TODO: lowercasing done here. Was done ""at random"" before; maybe not needed at all ?",yes,undetermined,0,0,0,yes,0.9836671884503945,yes,0.9910757382348696,yes,0.9921801857687745,yes,0.9932179030680989,yes,0.9939439848583611
420,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"//TODO: optimize away this lookup for entities w/o unsaved-value=""undefined""",yes,undetermined,0,0,0,yes,0.5996032432965159,yes,0.6056503856890121,yes,0.6159779672487152,yes,0.6424181653541433,yes,0.6463992662431977
421,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// TODO: toLowerCase was not done before. Only used in Template.,yes,undetermined,0,0,0,yes,0.9347241916176311,yes,0.9909883452249705,yes,0.9915132429459669,yes,0.9926585658785062,yes,0.9932327264111814
422,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"//TODO: arithmetic expressions, multiple new Foo(...)",yes,undetermined,0,0,0,yes,0.8887631585462328,yes,0.9179689665687276,yes,0.991512248526352,yes,0.992671330718763,yes,0.9932289531468399
423,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: check that entry.getIdentifier().equals(requestedId),yes,undetermined,0,0,0,yes,0.6313555493539906,yes,0.5762155157795072,yes,0.5927389420662238,yes,0.6054917845535321,yes,0.6104254772561761
424,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// TODO: not visible to the user!,yes,undetermined,0,0,0,yes,0.9999896942100529,yes,0.9999862581197447,yes,0.9999874553004192,yes,0.9999911667439665,yes,0.9999925573280047
425,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: proxies!,yes,undetermined,0,0,0,yes,0.9580320472495278,yes,0.9951794874247856,yes,0.9966479589397367,yes,0.9970718191643017,yes,0.9973498584596724
426,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: can we limit stored procedures ?!,yes,undetermined,0,0,0,yes,0.9189495766939724,yes,0.9909792627068787,yes,0.9915231028985209,yes,0.9926796196536755,yes,0.9932402526588675
427,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: formulas ?,yes,undetermined,0,0,0,no,0.011655632226661484,no,0.01236577759846885,no,0.011721998039486535,no,0.011178854171809327,no,0.010821618193954203
428,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// TODO: better error message since we actually support composites if names are explicitly listed.,yes,undetermined,0,0,0,yes,0.939387546810889,yes,0.990981885800526,yes,0.9915347635479019,yes,0.9926741251233596,yes,0.9932340586114807
429,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: use these in methods above,yes,undetermined,0,0,0,yes,0.9999923114580185,yes,0.9999962225024784,yes,0.99999661565921,yes,0.9999976988227588,yes,0.9999982769150885
430,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"//TODO: cache the persister, this shows up in yourkit",yes,undetermined,0,0,0,yes,0.9693251965102732,yes,0.9926261944827338,yes,0.9922283004404134,yes,0.9930291984688278,yes,0.9935062350607194
431,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"//TODO: add referencedClass to disambiguate to FKs on the same //      columns, pointing to different tables",yes,undetermined,0,0,0,yes,0.6030810610931615,yes,0.6739999883014918,yes,0.6798159162564524,yes,0.6918054021842492,yes,0.6997452816178616
432,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: create uk loaders for component properties,yes,undetermined,0,0,0,yes,0.9923805790884842,yes,0.9910126746085448,yes,0.9915199168308654,yes,0.9926690674075924,yes,0.9932316690463854
433,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// TODO : still need to make CollectionPersisters EntityMode-aware,yes,undetermined,0,0,0,yes,0.9962969100460681,yes,0.9948347975745434,yes,0.9952861313168629,yes,0.9958622232624539,yes,0.9961425554585417
434,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: terrible implementation!,yes,undetermined,0,0,0,yes,0.9999889161819691,yes,0.9999823649303222,yes,0.9999853149376464,yes,0.999989303371973,yes,0.9999913245213011
435,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"//TODO: eventually put this back in, once we think all is fixed //Object otherAlias = columnsUnique.put(qualifiedColumn, columnAlias);",yes,undetermined,0,0,0,yes,0.989457790783985,yes,0.9909937568675019,yes,0.9915207142274689,yes,0.9926820015467168,yes,0.9932420327908582
436,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// TODO: I don't really like this implementation; it would be better if // this was handled by searchForDirtyCollections(),yes,undetermined,0,0,0,yes,0.9999982917317665,yes,0.9999968633036501,yes,0.999997003414777,yes,0.9999977778386975,yes,0.9999983426262847
437,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// TODO: check if key contains the owner ID,yes,undetermined,0,0,0,yes,0.748067954720217,yes,0.7682400666026985,yes,0.7693331586241747,yes,0.7765897620303476,yes,0.779816782134906
438,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: cache this in an instvar,yes,undetermined,0,0,0,yes,0.999995303896478,yes,0.999996744040877,yes,0.9999940838836718,yes,0.9999954660903737,yes,0.999996410955373
439,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// TODO : temporary initial step towards HHH-1907,yes,undetermined,0,0,0,yes,0.6446921862899552,yes,0.6048294352012054,yes,0.5588020315799958,yes,0.5737759749399817,yes,0.5829566313535516
440,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// todo : remove this once ComponentMetamodel is complete and merged,yes,undetermined,0,0,0,yes,0.9877545091842573,yes,0.9910048864404492,yes,0.9915312561348099,yes,0.9926746608344091,yes,0.9932290283749133
441,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: add owner argument!!,yes,undetermined,0,0,0,yes,0.7818233793518875,yes,0.7993772370058713,yes,0.8033125811578269,yes,0.80979929171529,yes,0.8181951243779632
442,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"//TODO handle supportsNotNullUnique=false, but such a case does not exist in the wild so far",yes,undetermined,0,0,0,yes,0.7567451850075769,yes,0.6879254418519141,yes,0.7000573635552101,yes,0.7158442385190533,yes,0.7209633437972627
443,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// TODO: better error message since we actually support composites if names are explicitly listed.,yes,undetermined,0,0,0,yes,0.939387546810889,yes,0.990981885800526,yes,0.9915347635479019,yes,0.9926741251233596,yes,0.9932340586114807
444,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: for some dialects it would be appropriate to add the renderOrderByPropertiesSelect() to other select strings,yes,undetermined,0,0,0,yes,0.9940737328158412,yes,0.991533530936862,yes,0.9921832473750221,yes,0.9934159062186401,yes,0.9940029501932394
445,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: unnecessary for databases with ANSI-style joins,yes,undetermined,0,0,0,yes,0.8837026493199771,yes,0.791167258522826,yes,0.8021053985837416,yes,0.8040550727528631,yes,0.808364311741238
446,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: maybe call it getRowSelection() ?,yes,undetermined,0,0,0,yes,0.9999968838692178,yes,0.9999965176130882,yes,0.999997311557957,yes,0.9999974367318496,yes,0.9999979248256754
447,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: make this handle multiple collection roles!,yes,undetermined,0,0,0,yes,0.9973803034924578,yes,0.9965228053367768,yes,0.9943481457186213,yes,0.9956126291686547,yes,0.9959269549825385
448,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: include the rowids!!!!,yes,undetermined,0,0,0,yes,0.9914099976151453,yes,0.9909840055917972,yes,0.9915200837898352,yes,0.9926659589848013,yes,0.993232429681336
449,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"// if we are still not resolved, we might represent a constant. //      needed to add this here because the allowance of //      naked-prop-refs in the grammar collides with the //      definition of literals/constants (""nondeterminism""). //      TODO: cleanup the grammar so that ""processConstants"" is always just handled from here",yes,undetermined,0,0,0,yes,0.5585834275501254,no,0.5,no,0.5158085114103084,no,0.5090968372149933,no,0.511284110478145
450,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// TODO : or should we return 'containsTableAlias'??,yes,undetermined,0,0,0,yes,0.9999999228120892,yes,0.9999998124925594,yes,0.9999998640679303,yes,0.9999999145170448,yes,0.999999935355834
451,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,/////////////////////////////////////////////////////////////////////// // TODO : look at perhaps caching this...,yes,undetermined,0,0,0,yes,0.9999995416557333,yes,0.9999992462209115,yes,0.9999992866563313,yes,0.9999995173692308,yes,0.9999997320389724
452,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: avoid this for non-new instances where mightBeDirty==false,yes,undetermined,0,0,0,yes,0.9698143259775008,yes,0.991012780573929,yes,0.9915125885270105,yes,0.9926563321198866,yes,0.9932380004956566
453,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: theoretically non-threadsafe...,yes,undetermined,0,0,0,yes,0.9332482941300487,yes,0.9909973356755923,yes,0.9915207051255644,yes,0.9926713023305738,yes,0.9932384505157887
454,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// todo : look at optimizing these...,yes,undetermined,0,0,0,yes,0.9944507239465179,yes,0.9938326183215528,yes,0.9941950139352693,yes,0.9949133190986718,yes,0.9999838783502024
455,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// todo : cache this sql...,yes,undetermined,0,0,0,yes,0.9924205364441625,yes,0.995882578350001,yes,0.9944817747815896,yes,0.9953120171315344,yes,0.9957478639909706
456,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"/**
	 * TODO: Check if Mimer SQL cannot handle the way DB2 does
	 */",yes,undetermined,0,0,0,yes,0.7612530402455784,yes,0.8789776917213917,yes,0.8854439290464476,yes,0.8942253908008052,yes,0.8984004426366793
457,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"//TODO: if we are using identity columns, fetch the identifier",yes,undetermined,0,0,0,no,0.47086058317136054,no,0.532015192289655,yes,0.6265456173011781,yes,0.6417388515158039,yes,0.676635494383252
458,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO check there is no actual definition elemnents when a ref is defined,yes,undetermined,0,0,0,no,0.36220870387851783,no,0.27880497071391996,no,0.2524599146770268,no,0.25191032365442245,no,0.2517478252158828
459,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// table=null -> an association // - fill it in later //TODO fill in the mappings for table == null,yes,undetermined,0,0,0,no,0.2007072728621757,no,0.31027780671408794,no,0.3312750645183604,no,0.33687217951638315,no,0.334466398682792
460,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// table=null -> an association - fill // it in later //TODO fill in the mappings for table == null,yes,undetermined,0,0,0,no,0.2007072728621757,no,0.31027780671408794,no,0.3312750645183604,no,0.33687217951638315,no,0.334466398682792
461,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// todo : add support for READ_WRITE ( + NONSTRICT_READ_WRITE ??? ),yes,undetermined,0,0,0,yes,0.9999989581531277,yes,0.999999160983446,yes,0.9999993724156179,yes,0.9999995778065702,yes,0.9999996819372367
462,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: return new Lock(ts);,yes,undetermined,0,0,0,yes,0.9578146108324408,yes,0.9909965260929622,yes,0.9915349420794358,yes,0.9926567580050019,yes,0.9932265679699652
463,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// todo : add support for READ_WRITE ( + NONSTRICT_READ_WRITE ??? ),yes,undetermined,0,0,0,yes,0.9999989581531277,yes,0.999999160983446,yes,0.9999993724156179,yes,0.9999995778065702,yes,0.9999996819372367
464,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// TODO : why aren't these the same?,yes,undetermined,0,0,0,yes,0.9999998524660756,yes,0.9999997513044406,yes,0.9999998135506365,yes,0.9999998742738743,yes,0.9999999092502971
465,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: proxies!,yes,undetermined,0,0,0,yes,0.9580320472495278,yes,0.9951794874247856,yes,0.9966479589397367,yes,0.9970718191643017,yes,0.9973498584596724
466,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: proxies!,yes,undetermined,0,0,0,yes,0.9580320472495278,yes,0.9951794874247856,yes,0.9966479589397367,yes,0.9970718191643017,yes,0.9973498584596724
467,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"//TODO: if we support multiple fetch groups, we would need //      to clone the set of lazy properties!",yes,undetermined,0,0,0,yes,0.8398649042517808,yes,0.8180040295072152,yes,0.8230695404118348,yes,0.8345122714232031,yes,0.8402795455745046
468,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO mappings.getLogicalTableName(ownerTable),yes,undetermined,0,0,0,yes,0.9063310525770278,yes,0.9910077439551895,yes,0.9915299817172444,yes,0.9926614099044747,yes,0.9932389467754515
469,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,//TODO: if lock.getTimestamp().equals(ts),yes,undetermined,0,0,0,yes,0.7396059130161702,yes,0.7185294980967531,yes,0.7338287264098813,yes,0.748002415921641,yes,0.752997233629122
470,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,"//TODO: always true for now, but not if we later decide to support elements() in the from clause",yes,undetermined,0,0,0,yes,0.95347281969247,yes,0.9909976010221132,yes,0.9915335168504378,yes,0.9926761063739782,yes,0.9932414146082732
471,hibernate-distribution-3.3.2.GA,IMPLEMENTATION,// we could move this inside if we wanted to // tolerate collection initializations during // collection dirty checking:,yes,undetermined,0,0,0,no,0.26824308188058005,no,0.14953936238643153,no,0.08592386429139232,yes,0.9926651524471098,yes,0.9932251785189031
472,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// See if the user configured a multiplexer stack,no,undetermined,0,0,0,no,0.001399483872991427,no,0.001271140707420161,no,0.001108187694940008,no,0.00102685936729262,no,0.0009427394248381916
473,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//root entity comes *last*,no,undetermined,0,0,0,no,0.001471987657597653,no,0.0009928583556514138,no,0.0009431013553697483,no,0.0008852932500223409,no,0.0008225705519588924
474,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//==elementType ??,no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
475,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//scan the query string for class names appearing in the from clause and replace //with all persistent implementors of the class/interface, returning multiple //query strings (make sure we don't pick up a class in the select clause!)",no,undetermined,0,0,0,no,0.021656210710061876,no,0.012376474631176736,no,0.011714182560379718,no,0.011199314189538684,no,0.010831483481102308
476,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//identifier collections not supported for 1-to-many,no,undetermined,0,0,0,no,0.01800366679766142,no,0.007690998748908736,no,0.006325172040012985,no,0.00581708398435195,no,0.00623012711528262
477,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// potentialTrimCharacterArgIndex = 1 assumes that a // trim-specification has been specified.  we handle the // exception to that explicitly,no,undetermined,0,0,0,no,0.004473220762408043,no,0.008255407418639879,no,0.008766731866318274,no,0.008493942379013361,no,0.008138586440479968
478,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0008158380563990274,no,0.0004622220704414844,no,0.0003947093598227315,no,0.00035164830917738625,no,0.00031812294261152036
479,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if the current depth is 0, the root thing being loaded is the // many-to-many collection itself.  Here, it is alright to use // an inner join...",no,undetermined,0,0,0,no,0.08171837286563907,no,0.012406920348381248,no,0.011724618379196082,no,0.01119899564162278,no,0.010828979501069305
480,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// update removed rows fks to null,no,undetermined,0,0,0,no,0.0050912440771751525,no,0.006788316275212313,no,0.006071860783455695,no,0.0056956133935009805,no,0.005460397084471974
481,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//registerFunction( ""trim"", new StandardSQLFunction( ""trim"", Hibernate.STRING ) );",no,undetermined,0,0,0,no,0.002138471436551264,no,0.012367097835314641,no,0.011728377796385924,no,0.011178467438467028,no,0.010818649522435057
482,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//			buf.append( selectFragment( lhsAlias, """" ) )//ignore suffix for collection columns!",no,undetermined,0,0,0,no,0.0013213807695773583,no,0.0029205476835076813,no,0.0020150409134319864,no,0.002196241747822777,no,0.002074159833173977
483,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// initialize the Set of queried identifier spaces (ie. tables),no,undetermined,0,0,0,no,0.002134354634470362,no,0.012251339441765626,no,0.011746305980421019,no,0.011152238905887351,no,0.010711410239871788
484,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//use suffix for the entity columns,no,undetermined,0,0,0,no,0.0018238969683211652,no,0.004016849642669714,no,0.004184087348962296,no,0.004199752987737015,no,0.0040129424212838076
485,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we got here because we assumed that an instance // with an assigned id was detached, when it was // really persistent",no,undetermined,0,0,0,no,0.016455177269113032,no,0.012390354050957382,no,0.011733425428532968,no,0.011208932597531609,no,0.010847786570270825
486,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the class hierarchy structure,no,undetermined,0,0,0,no,0.009133913811479355,no,0.009682094271385631,no,0.009080821981668031,no,0.008678794895825478,no,0.008327377102718898
487,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// remove the current element from insertions. It will be added back later.,no,undetermined,0,0,0,no,0.01531845900775496,no,0.01240372412304654,no,0.01172783758575068,no,0.011214552531440127,no,0.010833274755946259
488,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//private final String rootTableName;,no,undetermined,0,0,0,no,0.0025620453862538833,no,0.0018898079706587603,no,0.0017281686900497719,no,0.0015987719990316713,no,0.0015018090534128774
489,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// NOTE : this is being used from the process of shutting down a // SessionFactory. Specific things to consider: // (1) this clearing of the region should not propagate to // other nodes on the cluster (if any); this is the // cache-mode-local option bit... // (2) really just trying a best effort to cleanup after // ourselves; lock failures, etc are not critical here; // this is the fail-silently option bit...",no,undetermined,0,0,0,yes,0.7951165890767738,yes,0.7772193078295742,yes,0.7837767928960243,yes,0.7928760824604374,yes,0.8042663195272268
490,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//INITIALIZATION:,no,undetermined,0,0,0,no,0.000636174978058685,no,0.0009691962052817066,no,0.0008801914009468559,no,0.0007880901465234791,no,0.0007131963633347464
491,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is persister-centric and/or EntityInfo-centric ~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.018282380290023482,no,0.012366857640578125,no,0.011732658623545243,no,0.011212768405695154,no,0.01085412582294386
492,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//not null ... (start with 1) is implicit,no,undetermined,0,0,0,no,0.026073313196232135,no,0.012032847722502935,no,0.01133198852529371,no,0.01037385350706483,no,0.009972708849377595
493,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// continue loop,no,undetermined,0,0,0,no,0.0005165048690226417,no,0.00043997761271438154,no,0.0003563431090314709,no,0.0003068884508962531,no,0.0002851315575002224
494,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// return existing object or initialized proxy (unless deleted),no,undetermined,0,0,0,no,0.0023653445328809864,no,0.002559104488184201,no,0.00226443640627933,no,0.0020254005841258056,no,0.0018958278383633656
495,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the list of entity names that indicate the batch number,no,undetermined,0,0,0,no,0.00670259941713454,no,0.005234109170530013,no,0.011755502924664998,no,0.01117227737037559,no,0.010810845231006855
496,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//disassembled state gets put in a new array (we write to cache by value!),no,undetermined,0,0,0,no,0.006082299971642198,no,0.008898095312953436,no,0.008251111232878115,no,0.007514521266288482,no,0.007161173259575778
497,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Add these directly to the executions queue,no,undetermined,0,0,0,no,0.017705784844748686,no,0.012383064068716032,no,0.01173534104380268,no,0.01118129236686971,no,0.010826797065806464
498,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Execute the SQL:,no,undetermined,0,0,0,no,0.0006342781449158273,no,0.0016712837347633356,no,0.0014655135291938724,no,0.0013473796685957184,no,0.001257981674777947
499,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//sort the updates by fk,no,undetermined,0,0,0,no,0.011173623334274855,no,0.005844687984576076,no,0.005349676513618904,no,0.004890977169078055,no,0.004622079706858467
500,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This could also just be true all the time...,no,undetermined,0,0,0,no,0.045102069668057236,no,0.01238770709046346,no,0.011722233659988314,no,0.01120605237670589,no,0.010821602052567747
501,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the mapping of entity names to their latest batch numbers.,no,undetermined,0,0,0,no,0.007557622768408765,no,0.0061128273796681645,no,0.00783298577395424,no,0.007325969371665475,no,0.008510864955742208
502,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//chop the last union (all),no,undetermined,0,0,0,no,0.0017435869016635306,no,0.0011426290311659234,no,0.0010541570125602799,no,0.0009498102235832405,no,0.0008909628298633361
503,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// note that for sequential scrolling, we make the assumption that // the first persister element is the ""root entity""",no,undetermined,0,0,0,no,0.030372423702417446,no,0.012398371661754974,no,0.011742006733182932,no,0.011196806674244168,no,0.01085453145832858
504,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//TODO: check this....,no,undetermined,0,0,0,yes,0.9923144307888954,yes,0.9910005232326873,yes,0.6038397117434805,yes,0.6112342012042756,yes,0.6211787945837859
505,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// for deprecated saveOrUpdateCopy(),no,undetermined,0,0,0,no,0.006915152823682197,no,0.00664205156039749,no,0.006153291436928057,no,0.005743388447645968,no,0.005476596621324724
506,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//INITIALIZATION:,no,undetermined,0,0,0,no,0.000636174978058685,no,0.0009691962052817066,no,0.0008801914009468559,no,0.0007880901465234791,no,0.0007131963633347464
507,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// 23000: Check constraint violation: {0} // 23001: Unique index or primary key violation: {0},no,undetermined,0,0,0,no,0.0031490439723813103,no,0.004316577537732526,no,0.004000955615871142,no,0.0037034040895068737,no,0.003538111873714994
508,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the closure of all properties in the entire hierarchy including // subclasses and superclasses of this class,no,undetermined,0,0,0,no,0.01327055952881842,no,0.010408430536629947,no,0.00979381971628293,no,0.009277108039151594,no,0.008932670234236835
509,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//expressionTerminators.add("",""); // deliberately excluded",no,undetermined,0,0,0,no,0.0013184726244339835,no,0.0014140555969133668,no,0.001310107470228101,no,0.001203252388862424,no,0.0011455490018935192
510,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// subclass discrimination works by assigning particular // values to certain combinations of null primary key // values in the outer join using an SQL CASE,no,undetermined,0,0,0,no,0.0064063505445669765,no,0.008882382790261531,no,0.00786550336788756,no,0.007386502345912261,no,0.006933031907489008
511,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//tokens that close a sub expression //tokens that open a sub expression //tokens that would indicate a sub expression is a boolean expression,no,undetermined,0,0,0,no,0.0032446359693459595,no,0.003526897364462072,no,0.0033780419572119642,no,0.003188537383993526,no,0.0030161478352388215
512,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Multi-param numeric dialect functions...,no,undetermined,0,0,0,no,0.0391433866734119,no,0.011510618779952355,no,0.010035839168545474,no,0.009556228710204583,no,0.009169270761334664
513,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Use theta style (for regression) // Move the node up, after the origin node.",no,undetermined,0,0,0,no,0.00491870888706312,no,0.007164510428659124,no,0.006400930366264245,no,0.0062613753327339546,no,0.006005378551792544
514,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Multi-param date dialect functions...,no,undetermined,0,0,0,no,0.0637239640882115,no,0.012409607284043486,no,0.011741552693559896,no,0.011185997638394628,no,0.010833371624277248
515,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0008158380563990274,no,0.0004622220704414844,no,0.0003947093598227315,no,0.00035164830917738625,no,0.00031812294261152036
516,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// add the main query,no,undetermined,0,0,0,no,0.0021380864756749543,no,0.003711804769780452,no,0.0032260612642561657,no,0.002696280706687652,no,0.0025787970592893654
517,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// SQLException support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0015058896033013794,no,0.002187770922731911,no,0.002087935685151709,no,0.0019217498536498892,no,0.0018246503272876873
518,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//add the restriction to the outer select,no,undetermined,0,0,0,no,0.0006420494443384606,no,0.0006477477931353763,no,0.0005929499384197805,no,0.0005294212817884003,no,0.0004887271828656172
519,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// bit_length feels a bit broken to me. We have to cast to char in order to // pass when a numeric value is supplied. But of course the answers given will // be wildly different for these two datatypes. 1234.5678 will be 9 bytes as // a char string but will be 8 or 16 bytes as a true numeric. // Jay Nance 2006-09-22,no,undetermined,0,0,0,no,0.10956992835218886,no,0.066444144029826,no,0.01171842786741957,no,0.011212058363586977,no,0.01082867133347003
520,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This assumes you will want to ignore any update counts ,no,undetermined,0,0,0,no,0.005583811641669572,no,0.004652785376407015,no,0.004210941488734872,no,0.004007746867795804,no,0.0038084720264213983
521,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//skip the FROM keyword in params,no,undetermined,0,0,0,no,0.0020447232517305392,no,0.0007354212498700659,no,0.0006832450368689771,no,0.0006246218187717984,no,0.0005660516681707093
522,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Custom sql,no,undetermined,0,0,0,no,0.0014378860619458742,no,0.001103956897338759,no,0.000977419833098711,no,0.0008804344508510066,no,0.0008249138854628948
523,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// return a newly loaded object,no,undetermined,0,0,0,no,0.01486148669416702,no,0.012413572002194697,no,0.011743187658576317,no,0.011181069404301063,no,0.010854118062692415
524,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// make it circular-reference safe,no,undetermined,0,0,0,no,0.011076750523390026,no,0.0072470654768609045,no,0.006164108286614637,no,0.005780942841895188,no,0.005412431619035161
525,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//Cope with special cases of AND, NOT, ()",no,undetermined,0,0,0,no,0.011741444271450503,no,0.011678527029262817,no,0.010950942268417306,no,0.010246867751162451,no,0.00977452325871965
526,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// subclass closure properties,no,undetermined,0,0,0,no,0.004842631019409211,no,0.004378218445237236,no,0.004026096099402936,no,0.003782531617264439,no,0.0036657052817558418
527,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// for dialects which are known to not support ANSI-SQL row-value-constructor syntax, // we should mutate the tree.",no,undetermined,0,0,0,no,0.02326890474337272,no,0.012384081186063382,no,0.011726733911586285,no,0.011199416096321503,no,0.01083794958210315
528,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0008158380563990274,no,0.0004622220704414844,no,0.0003947093598227315,no,0.00035164830917738625,no,0.00031812294261152036
529,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we have the form: trim(from trimSource). //      This is functionally equivalent to trim(trimSource) // EARLY EXIT!!!!,no,undetermined,0,0,0,no,0.00397825485939041,no,0.007226495224779841,no,0.0070274555895740035,no,0.006677173973348132,no,0.006413587654648495
530,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// SUBCLASSES,no,undetermined,0,0,0,no,0.00036711223931474473,no,0.0009197377428884206,no,0.0008693654544301822,no,0.0007776411144452777,no,0.0007197862972447588
531,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//need to hydrate it.,no,undetermined,0,0,0,no,0.22408481508995792,no,0.23073853840279962,no,0.21622675554578194,no,0.21168039276643602,no,0.21645952956344885
532,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//starts with 1, implicitly",no,undetermined,0,0,0,no,0.004935554892289586,no,0.006732175746991517,no,0.00650129729791484,no,0.006139882055615268,no,0.005914949271063858
533,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// instantiate a new instance,no,undetermined,0,0,0,no,0.0013900813998842104,no,0.002012346505661909,no,0.0019010602268620582,no,0.0017209570452733842,no,0.0016338766332352399
534,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// simple nullability constraint,no,undetermined,0,0,0,no,0.0006244274966099525,no,0.0005556850843330406,no,0.0004806970828612187,no,0.0004426817042922193,no,0.00041479656767545785
535,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//we need to upgrade the lock mode to the mode requested,no,undetermined,0,0,0,no,0.0096088359221084,no,0.008877687385441112,no,0.008251827928213556,no,0.0077123754878895895,no,0.007327770937342739
536,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	register the type of the out param - an Oracle specific type,no,undetermined,0,0,0,no,0.019479240180438298,no,0.012391854101845446,no,0.011756020651644055,no,0.011205599130872603,no,0.010836143784889826
537,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// look for a proxy,no,undetermined,0,0,0,no,0.0008962442887659899,no,0.0007703394677978388,no,0.000673962285797124,no,0.0005972356780120621,no,0.0006015057926689583
538,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// features which change between 8i, 9i, and 10g ~~~~~~~~~~~~~~~~~~~~~~~~~~",no,undetermined,0,0,0,no,0.0018171731282643738,no,0.001904606629791047,no,0.0017224316013093484,no,0.0016160508573292926,no,0.0015305475134737335
539,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// evicts don't cascade to uninitialized collections,no,undetermined,0,0,0,no,0.006396708155547006,no,0.007002471406881795,no,0.006876509414948579,no,0.006404213032647537,no,0.0060070476625594185
540,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// features which remain constant across 8i, 9i, and 10g ~~~~~~~~~~~~~~~~~~",no,undetermined,0,0,0,no,0.0033130315073748675,no,0.003090659111042063,no,0.002811978078154179,no,0.0026370559580481197,no,0.0025108986277009963
541,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// need to treat this as if it where optimistic-lock=""all"" (dirty does *not* make sense); // first we need to locate the ""loaded"" state // // Note, it potentially could be a proxy, so perform the location the safe way...",no,undetermined,0,0,0,no,0.14279616230972483,no,0.08803271814738954,no,0.01173568746256085,no,0.011212860613403167,no,0.01084755946705402
542,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//( (Column) sc.getTable().getPrimaryKey().getColumnIterator().next() ).getName();,no,undetermined,0,0,0,no,0.014739340390378915,no,0.01153607380064055,no,0.010899176346434168,no,0.010101683010106006,no,0.009794358846219584
543,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// might happen with a managed connection,no,undetermined,0,0,0,no,0.023638372919136997,no,0.01236290086459826,no,0.011737484730908167,no,0.011203331230782196,no,0.010814869260618266
544,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// don't need subclass tables, because they can't appear in conditions",no,undetermined,0,0,0,no,0.08319468267105598,no,0.012376115047376462,no,0.011741513684070741,no,0.011193363654692728,no,0.010840158411896263
545,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// not final-static to avoid possible classcast exceptions if using different oracle drivers.,no,undetermined,0,0,0,no,0.021962809864730936,no,0.012367627226726892,no,0.011713500425888614,no,0.011206204379859138,no,0.010834156470899066
546,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Make 100% certain that this is called before any subsequent ScheduledUpdate.afterTransactionCompletion()!!,no,undetermined,0,0,0,no,0.020691256355343465,no,0.012398226432501408,no,0.01174464618222323,no,0.0111791399357245,no,0.010836599422632731
547,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//private List aliases = new ArrayList();,no,undetermined,0,0,0,no,0.0023181131824113635,no,0.0018163875412992364,no,0.0017157628623884478,no,0.0015835717866634,no,0.0014943950974238753
548,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The reason for this is SQL doesn't let you sort by an expression you are // not returning in the result set.,no,undetermined,0,0,0,no,0.1193091505225926,no,0.11472436660793,no,0.11822209002020599,no,0.11457298777857856,no,0.11497484454407417
549,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// register resolvers set via Environment property,no,undetermined,0,0,0,no,0.0007250931740749326,no,0.0008617354862431483,no,0.000767516338073133,no,0.0006814984052592516,no,0.0006456558632875931
550,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// an existing collection that was either non-empty or uninitialized // is replaced by null or a different collection // (if the collection is uninitialized, hibernate has no way of // knowing if the collection is actually empty without querying the db)",no,undetermined,0,0,0,no,0.05717610717139238,no,0.012376457085419111,no,0.011739912835612737,no,0.011188222034999758,no,0.010815795878602635
551,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//update all the modified entries,no,undetermined,0,0,0,no,0.000475985700240279,no,0.0004785292236939049,no,0.00043691156179194256,no,0.00039163110222862143,no,0.0003651731416255132
552,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// special case where we need to force incloude all subclass joins,no,undetermined,0,0,0,no,0.014340129693219524,no,0.009963925494947285,no,0.008678107537134832,no,0.007929249875349221,no,0.007652858120537381
553,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we did not find a collection element in the result set, so we // ensure that a collection is created with the owner's identifier, // since what we have is an empty collection",no,undetermined,0,0,0,no,0.005674672267373171,no,0.005889555386468619,no,0.003599271587603433,no,0.004498972953023524,no,0.004404812893360145
554,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// binary %Stream // character %Stream,no,undetermined,0,0,0,no,6.894937255963582e-05,no,0.00016887227567524587,no,0.0001484865084418658,no,0.00012816645009837194,no,0.0001189486533658168
555,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ignore it,no,undetermined,0,0,0,no,0.0004577003960435737,no,0.00048819379544075563,no,0.0004320653359911463,no,0.0003685236398288353,no,0.00034548202714878586
556,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//getDefaultProperties().setProperty(Environment.STATEMENT_BATCH_SIZE, NO_BATCH);",no,undetermined,0,0,0,no,0.0010483901421479021,no,0.0011722945734351726,no,0.0010563389172252046,no,0.0009511545166484379,no,0.0008975445472715918
557,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// assumes that types are all of span 1,no,undetermined,0,0,0,no,0.0021148559091931428,no,0.002065883718090638,no,0.0019492166182948285,no,0.0017837580550407483,no,0.0016742421926919534
558,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// hibernate impelemnts cast in Dialect.java,no,undetermined,0,0,0,no,0.021866014335981773,no,0.012364671576420407,no,0.011722993063751566,no,0.011179382625107983,no,0.01082737379481457
559,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// this is the root (versioned) table, and we are using version-based // optimistic locking;  if we are not updating the version, also don't // check it (unless this is a ""generated"" version column)!",no,undetermined,0,0,0,no,0.03591818037737871,no,0.012392843103285379,no,0.011728354125258232,no,0.011186435806681123,no,0.01081598151779256
560,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// aggregate functions shouldn't be registered, right? //registerFunction( ""list"", new StandardSQLFunction(""list"",Hibernate.STRING) ); // stopped on $list",no,undetermined,0,0,0,no,0.004305922661097972,no,0.006241360264870295,no,0.005882317360365593,no,0.0054131110021353795,no,0.005084018773518842
561,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//its the given optional object,no,undetermined,0,0,0,no,0.005302496178131498,no,0.0060291166692784766,no,0.005232517026818965,no,0.004879879076359687,no,0.004608171194733824
562,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the class hierarchy structure,no,undetermined,0,0,0,no,0.009133913811479355,no,0.009682094271385631,no,0.009080821981668031,no,0.008678794895825478,no,0.008327377102718898
563,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//decide which ResultSet to get the property value from:,no,undetermined,0,0,0,no,0.00415968046785424,no,0.004830545710086972,no,0.00424975091632246,no,0.003982055316771855,no,0.003801451787906218
564,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// properties of this class, including inherited properties",no,undetermined,0,0,0,no,0.00878493286238595,no,0.006489152310275351,no,0.005925775150985532,no,0.00557268638513076,no,0.005356002717373406
565,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// otherwise assume the parent is the the criteria that created us,no,undetermined,0,0,0,no,0.005807016388181741,no,0.008058222294313916,no,0.006823998205232995,no,0.0061145330229477,no,0.005767523747917157
566,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the closure of all columns used by the entire hierarchy including // subclasses and superclasses of this class,no,undetermined,0,0,0,no,0.009604503906282553,no,0.012407348927892078,no,0.011717809607490864,no,0.011193809535402768,no,0.010822694128981255
567,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we can go straight to the first required row,no,undetermined,0,0,0,no,0.0009411290296849449,no,0.0011540135820315453,no,0.001053913905772872,no,0.0009595423241490346,no,0.0008853649160546679
568,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// now look up the object we are really interested in! // (this lets us correctly handle proxies and multi-row // or multi-column queries),no,undetermined,0,0,0,no,0.03317130238224115,no,0.012390094453041026,no,0.011714809527486155,no,0.01120252814961879,no,0.0108355088707076
569,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//before adding to collection!,no,undetermined,0,0,0,no,0.008454279711745725,no,0.00786489320914554,no,0.006227144078040202,no,0.008141575127129567,no,0.007627163445344724
570,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// discriminator column,no,undetermined,0,0,0,no,0.002071145599192847,no,0.002357852389478916,no,0.002056857709792891,no,0.001811403990242998,no,0.0017147658170537207
571,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Code to handle subclasses of topClass,no,undetermined,0,0,0,no,0.008279089297157045,no,0.012403966190422612,no,0.011742286082722948,no,0.011190749697630896,no,0.010828518011638612
572,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//INITIALIZATION:,no,undetermined,0,0,0,no,0.000636174978058685,no,0.0009691962052817066,no,0.0008801914009468559,no,0.0007880901465234791,no,0.0007131963633347464
573,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//NONE, because its the requested lock mode, not the actual! ",no,undetermined,0,0,0,no,0.001853870683806994,no,0.002210453191829561,no,0.0018714165482560886,no,0.0017151909086481547,no,0.0015828106379193161
574,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//private final Map propertyTableNumbersByName = new HashMap();,no,undetermined,0,0,0,no,0.003001282837691126,no,0.002920992105015319,no,0.0028600108956785093,no,0.0026471568734928,no,0.0024809256817478983
575,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// conceivable that the dialect ctor could throw HibernateExceptions, so don't re-wrap",no,undetermined,0,0,0,no,0.013075377491965962,no,0.012415781620894238,no,0.011745802475199857,no,0.01118887378953882,no,0.010848761647139752
576,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// CLASS + TABLE,no,undetermined,0,0,0,no,0.0005848354921195678,no,0.0007198195814095756,no,0.0007966162389607079,no,0.0007258496977826272,no,0.0006502683025583057
577,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// synchronized to avoid multi-thread access issues; defined as method synch to avoid // potential deadlock issues due to nature of code.,no,undetermined,0,0,0,no,0.025545269995804965,no,0.012388189653935405,no,0.01171911241333745,no,0.011193129816574759,no,0.01082388275989743
578,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// required to exception table // iconst_0 // i,no,undetermined,0,0,0,no,0.0016236068411422048,no,0.002320148663800134,no,0.0024324970768283974,no,0.002340517952827489,no,0.0021867986857192385
579,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// for now, just ""re-flatten"" the metamodel since this is temporary stuff anyway (HHH-1907)",no,undetermined,0,0,0,no,0.3670490843157148,no,0.417050237931646,no,0.38486522325846556,no,0.3955660566971698,no,0.4022850646913597
580,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// checkcast // cast the bean into a raw bean,no,undetermined,0,0,0,no,0.010139625993172889,no,0.00852481166428904,no,0.007748145067271541,no,0.007214827761205512,no,0.007000060200456142
581,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// this one only really needed for badly-behaved applications! // (if the TransactionManager has a Sychronization registered, // its a noop) // (actually we do need it for downgrading locks)",no,undetermined,0,0,0,no,0.033242524530924696,no,0.012373348753200796,no,0.011754312250315088,no,0.011185869393613143,no,0.010827927353677137
582,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// checkcast (case of primitive type) // invokevirtual (case of primitive type),no,undetermined,0,0,0,no,0.0018090457022434368,no,0.0021391147513364207,no,0.0018905727850662885,no,0.001751617577308354,no,0.0016623594438827719
583,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// at this point we have (drivingSqlAlias) the SQL alias of the driving table // corresponding to the given user alias.  However, the driving table is not // (necessarily) the table against which we want to apply locks.  Mainly, // the exception case here is joined-subclass hierarchies where we instead // want to apply the lock against the root table (for all other strategies, // it just happens that driving and root are the same).",no,undetermined,0,0,0,no,0.05939540353280737,no,0.012369584542363692,no,0.011729040778104213,no,0.011182640226526559,no,0.010824684129183986
584,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* | this | bean | args | i | raw bean | exception | */,no,undetermined,0,0,0,no,0.0068898220381554,no,0.006799036748380103,no,0.006322800099044009,no,0.006132375275671794,no,0.005964326322753329
585,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Get the first child to be considered.  Sub-classes may do this differently in order to skip nodes that // are not select expressions (e.g. DISTINCT).,no,undetermined,0,0,0,no,0.008132676860345644,no,0.007673369645448424,no,0.007579712107789293,no,0.007067734362971408,no,0.007652177512750463
586,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// new // BulkAccessorException,no,undetermined,0,0,0,no,0.0007331217137823508,no,0.000981836705468619,no,0.0009672985146750711,no,0.0008501913685675985,no,0.0007968272559977449
587,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//""as"" is not in KEYWORDS",no,undetermined,0,0,0,no,0.0005206928159960136,no,0.0005341519740275459,no,0.0004917888695940045,no,0.00043170452434054677,no,0.0004025850298153502
588,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// getfield // get field ""$JAVASSIST_CALLBACK"" defined already",no,undetermined,0,0,0,no,0.001819753834761802,no,0.0015641231240362868,no,0.0015488777170680516,no,0.0014029423491608627,no,0.001307372578614409
589,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// all DistinctRootEntityResultTransformer are considered equal ~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0003472972204062044,no,0.000307707597204221,no,0.00026908173497001346,no,0.00023474084900377778,no,0.00031808111892288766
590,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// dup,no,undetermined,0,0,0,no,0.00199580217869232,no,0.0022201631194370504,no,0.0020526429513180195,no,0.0018854055309910408,no,0.0017863422171816702
591,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// todo : move this to SF per HHH-3517; also see HHH-1907 and ComponentMetamodel,no,undetermined,0,0,0,yes,0.9999998055928112,no,0.012371688065086345,no,0.011750853809063969,no,0.011211798026782802,no,0.010835805264990155
592,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// putfield // put field ""$JAVASSIST_CALLBACK"" defined already",no,undetermined,0,0,0,no,0.003256516880523414,no,0.003109725700992147,no,0.002946709811078242,no,0.002728786174265505,no,0.0025941314271807287
593,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Configure the cache to use our TM,no,undetermined,0,0,0,no,0.006200384866044899,no,0.008700431904506718,no,0.0078466967975449,no,0.007447639637579442,no,0.007226431029164874
594,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* local variables | this | callback | */,no,undetermined,0,0,0,no,0.004403730806637012,no,0.00529640209022721,no,0.00483946773673438,no,0.00477380892272466,no,0.004532989719963228
595,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// find the batch number associated with the current association, if any.",no,undetermined,0,0,0,no,0.0028593080215678227,no,0.0025078157174174645,no,0.002440460934328003,no,0.0022420953873137912,no,0.0020768053381044053
596,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// invokeinterface,no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
597,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we *always* assume an instance with a null // identifier or no identifier property is unsaved!,no,undetermined,0,0,0,no,0.0037300762111733133,no,0.0037843461317254566,no,0.003430005126097111,no,0.003023052647376216,no,0.0028358669227958253
598,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// DDL support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.003238682494816171,no,0.004528136907812,no,0.0044782607017309324,no,0.004152415733411792,no,0.004003805148058978
599,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// seems to not really... //	public boolean supportsRowValueConstructorSyntax() { //		return true; //	},no,undetermined,0,0,0,no,0.035417388249438735,no,0.012390655071746534,no,0.011726068726999604,no,0.01118079313581619,no,0.010819802486210672
600,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// below is for Cache' that don't have str in 2007.1 there is str and we register str directly,no,undetermined,0,0,0,no,0.0016078630833534305,no,0.0028427781928012275,no,0.0027584223509468124,no,0.002544965669442891,no,0.0024660198502073852
601,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.12765942815766487,no,0.09244265427783606,no,0.011756867153675004,no,0.011218035984311068,no,0.010846067512935315
602,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// byte,no,undetermined,0,0,0,no,0.007867278108957909,no,0.008345385445514601,no,0.0077266656463569,no,0.007399421371930896,no,0.007179983421061852
603,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the column doesnt exist at all.,no,undetermined,0,0,0,no,0.00468072465769121,no,0.00442388252723002,no,0.0040415055778435975,no,0.003738490208687252,no,0.003598316454123529
604,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// note that %string is deprecated,no,undetermined,0,0,0,no,0.06056616919310812,no,0.012380475614187316,no,0.011718401271650794,no,0.011201992326677832,no,0.010843996236827295
605,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//If the object is already loaded, return the loaded one",no,undetermined,0,0,0,no,0.005471591168861166,no,0.004039920502802249,no,0.0036715319325069115,no,0.0034216534064559065,no,0.0033540370716313786
606,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// create new lock that times out immediately,no,undetermined,0,0,0,no,0.004896727112945395,no,0.004386098114780371,no,0.003939881506352805,no,0.0037140673226863084,no,0.0034993156760871687
607,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// convenience methods relating to operations across arrays of types...,no,undetermined,0,0,0,no,0.011578385822385948,no,0.010915351728759702,no,0.01120787368378114,no,0.01076923090589115,no,0.010831683951144897
608,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we really could refresh the item if it // is not a lock, but it might be slower //return freshTimestamp < txTimestamp",no,undetermined,0,0,0,no,0.04412614163791185,no,0.012381955905885027,no,0.011728963360575521,no,0.011172258821217855,no,0.010846232508127733
609,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Due to the complexity in initializing the SelectClause, do not generate one here. // If it is not found; simply return null... // // Also, do not cache since it gets generated well after we are created.",no,undetermined,0,0,0,no,0.15354943523266731,no,0.2312546139680473,no,0.2144879514066125,no,0.2117435271250084,no,0.22723002715956078
610,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// DISCRIMINATOR,no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
611,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// VersionType impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //      Note : simply returns null for seed() and next() as the only known //      application of binary types for versioning is for use with the //      TIMESTAMP datatype supported by Sybase and SQL Server, which //      are completely db-generated values...",no,undetermined,0,0,0,no,0.08254757412150103,no,0.012370816298503135,no,0.011724723593487273,no,0.011193436013597938,no,0.010819959070561786
612,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // Pre-flushing section // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.002671879107218676,no,0.0026310393236268132,no,0.0024157173280939304,no,0.0022498090307272174,no,0.0021499327661512815
613,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Use the lower case function name. // Remember whether we're in a SELECT clause or not.,no,undetermined,0,0,0,no,0.0051208265357012015,no,0.009236706104991254,no,0.008508978839145967,no,0.008298683903124411,no,0.007883720811721463
614,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// %upper is deprecated,no,undetermined,0,0,0,no,0.04069247196471026,no,0.01239852182763736,no,0.011729448432732452,no,0.01120357575688678,no,0.010855596205463437
615,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// let this take precedence if defined, since it works for // assigned identifiers",no,undetermined,0,0,0,no,0.00803598343370835,no,0.00660870229382923,no,0.005728147906340892,no,0.005312866741496913,no,0.00518206002627545
616,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//throw new UnsupportedOperationException(""Can't write to a readonly object"");",no,undetermined,0,0,0,no,0.008557857563015378,no,0.010102854872847823,no,0.010106722527103457,no,0.009421534080450334,no,0.009185722924940997
617,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the contract of EntityTuplizer.determineConcreteSubclassEntityName says that returning null // is an indication that the specified entity-name (this.getEntityName) should be used.,no,undetermined,0,0,0,no,0.09795982988100317,no,0.012364989291465983,no,0.011745583299044992,no,0.011196242227340544,no,0.010822710736049618
618,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// SUBCLASSES,no,undetermined,0,0,0,no,0.00036711223931474473,no,0.0009197377428884206,no,0.0008693654544301822,no,0.0007776411144452777,no,0.0007197862972447588
619,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// according to both the ANSI-SQL and EJB3 specs, trim can either take // exactly one parameter or a variable number of parameters between 1 and 4. // from the SQL spec: // // <trim function> ::= //      TRIM <left paren> <trim operands> <right paren> // // <trim operands> ::= //      [ [ <trim specification> ] [ <trim character> ] FROM ] <trim source> // // <trim specification> ::= //      LEADING //      | TRAILING //      | BOTH // // If only <trim specification> is omitted, BOTH is assumed; // if <trim character> is omitted, space is assumed",no,undetermined,0,0,0,no,0.002042164426710541,no,0.012392717394581827,no,0.011727588528028026,no,0.011205786213340094,no,0.010826886804175899
620,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The syntax used to add a foreign key constraint to a table.,no,undetermined,0,0,0,no,0.0029523658301237867,no,0.007217138746364921,no,0.007165355427026715,no,0.006684177505327291,no,0.006258759147389289
621,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//note: it is conceptually possible that a UserType could map null to //	  a non-null value, so the following is arguable:",no,undetermined,0,0,0,no,0.036291330136518654,no,0.012369812207206315,no,0.01174587216892922,no,0.01119154870303332,no,0.010850684759475199
622,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Execute the SQL:,no,undetermined,0,0,0,no,0.0006342781449158273,no,0.0016712837347633356,no,0.0014655135291938724,no,0.0013473796685957184,no,0.001257981674777947
623,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// note: interfaces is assumed to already contain HibernateProxy.class,no,undetermined,0,0,0,no,0.003168795652064845,no,0.003395570299365053,no,0.003188028495784238,no,0.00291828986058904,no,0.003048590834061484
624,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// identifier-commalist,no,undetermined,0,0,0,no,0.0009591505665858879,no,0.0012585126698252925,no,0.0011181438902768681,no,0.0009964704109497761,no,0.000923697832125954
625,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// note: interfaces is assumed to already contain HibernateProxy.class,no,undetermined,0,0,0,no,0.003168795652064845,no,0.003395570299365053,no,0.003188028495784238,no,0.00291828986058904,no,0.003048590834061484
626,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//assembled state gets put in a new array (we read from cache by value!),no,undetermined,0,0,0,no,0.003758277807721101,no,0.005635060651606196,no,0.005140362234296122,no,0.004685162640402516,no,0.004416129270256486
627,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we do not have to worry about queued additions to uninitialized // collections, since they can only occur for inverse collections!",no,undetermined,0,0,0,no,0.016561436724723166,no,0.01017217287268763,no,0.008942608882978981,no,0.008192194545148032,no,0.008043381308726697
628,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// disassemble named parameters,no,undetermined,0,0,0,no,0.004392834050162074,no,0.0032741627097635875,no,0.0028334565015289345,no,0.002601678635188137,no,0.0024807065529056224
629,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if not wrappered yet, its dirty (this can't occur, because // we now always call wrap() before getting to here) // return ( ! (obj instanceof PersistentCollection) ) ? //true : searchForDirtyCollections( (PersistentCollection) obj, type );",no,undetermined,0,0,0,no,0.23716955441834056,no,0.23551987347572959,no,0.18176794300051136,no,0.19839135552646547,no,0.19803456375788842
630,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// again, CCS did not have such a concept; but a reasonable // proximity is to clear the cache after transaction *as long as* // the underlying cache is not JTA aware.",no,undetermined,0,0,0,no,0.00864409537315117,no,0.007420302321607255,no,0.006410051537546095,no,0.005850312477878857,no,0.005672299272246428
631,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Oracle driver reports to support getGeneratedKeys(), but they only // support the version taking an array of the names of the columns to // be returned (via its RETURNING clause).  No other driver seems to // support this overloaded version.",no,undetermined,0,0,0,no,0.008952970810116739,no,0.012413213322649927,no,0.011741651047475894,no,0.011190450235159577,no,0.010831355051849048
632,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// again, CCS did not have such a concept; however a reasonable // proximity is to clear the cache.  For non-transaction aware // caches, we will also do a clear at the end of the transaction",no,undetermined,0,0,0,no,0.026633438565937657,no,0.012378345367131408,no,0.011729246519828748,no,0.011191452617513531,no,0.010812710170496096
633,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// remove all collections for the entity from the session-level cache,no,undetermined,0,0,0,no,0.010273977117502803,no,0.005027145115581859,no,0.004989418899787284,no,0.004886846912259724,no,0.0046869557278147
634,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// invokeinterface // callback.write*(..),no,undetermined,0,0,0,no,0.00048639219493130763,no,0.00048611145142288807,no,0.00045376118586131707,no,0.000413688248599488,no,0.0003808448702161316
635,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// moved up from AbstractEntityPersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.006878624921467369,no,0.012383649065961795,no,0.011725163971222604,no,0.011180610124964708,no,0.010848166361905281
636,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// JOINS,no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
637,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If this is an entity and the property is the identifier property, then use getIdentifierType(). //      Note that the propertyName.equals( propertyPath ) checks whether we have a component //      key reference, where the component class property name is the same as the //      entity id property name; if the two are not equal, this is the case and //      we'd need to ""fall through"" to using the property mapping.",no,undetermined,0,0,0,no,0.05384258970840612,no,0.012381289934198344,no,0.01175991277748545,no,0.011183651279930687,no,0.010818954648619745
638,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// classes mentioned in extends not available - so put it in queue,no,undetermined,0,0,0,no,0.00929796654894548,no,0.009857284490787118,no,0.00912872887416601,no,0.009432298075019458,no,0.009025805409117946
639,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is Tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.002327450559498137,no,0.0021035416116717207,no,0.0019607469787302914,no,0.0017841068123798476,no,0.0016789153676578634
640,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//propertyTableNumbersByName.put( prop.getName(), join );",no,undetermined,0,0,0,no,0.006310419176689888,no,0.006180150207551457,no,0.005836992331716159,no,0.00520392005223887,no,0.004887623574122749
641,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Needed to bump this up to DotNode, because that is the only thing which currently // knows about the property-ref path in the correct format; it is either this, or // recurse over the DotNodes constructing the property path just like DotNode does // internally",no,undetermined,0,0,0,no,0.11850259412118176,no,0.13925728915983276,no,0.1270025983311441,no,0.13008767921647588,no,0.1286929435430396
642,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Access cached SQL,no,undetermined,0,0,0,no,0.0017537493962609264,no,0.0015709414215402423,no,0.0013842861108044901,no,0.0012778922690199152,no,0.0012007803631977098
643,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is tuplizer-centric, but is passed a session ~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",no,undetermined,0,0,0,no,0.0022616133971905174,no,0.002127937211177233,no,0.001993043937611006,no,0.001856826545590949,no,0.0017618476684579875
644,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//figure out which tables need to be fetched,no,undetermined,0,0,0,no,0.0767768177460632,no,0.012390510144219298,no,0.011735987554452751,no,0.011196389150883303,no,0.010823948727279369
645,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	private final List persisters = new ArrayList();,no,undetermined,0,0,0,no,0.002894288044807872,no,0.002950035757717071,no,0.0028033542333741925,no,0.002609968061507029,no,0.0024686564681578363
646,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//figure out which columns are needed,no,undetermined,0,0,0,no,0.013112818549513064,no,0.012400221215258724,no,0.011737532090377142,no,0.011199870340456913,no,0.010841730136512419
647,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// it is possible for this method to be called during flush processing, // so make certain that we do not accidently initialize an uninitialized proxy",no,undetermined,0,0,0,no,0.039231171899975825,no,0.012369834794746242,no,0.011720118822527652,no,0.011208907341748234,no,0.010833874735154151
648,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//figure out which formulas are needed,no,undetermined,0,0,0,no,0.04165558870212435,no,0.012392441452361926,no,0.011714858426611564,no,0.011199902869993759,no,0.010819220131577073
649,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//get em on the second pass!,no,undetermined,0,0,0,no,0.0020197497442356435,no,0.0024657944489631634,no,0.0028684857371865484,no,0.0026025247553140675,no,0.0023425068545998985
650,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//render the SQL,no,undetermined,0,0,0,no,0.001634999884052927,no,0.00227652429948656,no,0.002003076953404738,no,0.001834128914564718,no,0.0017472509386225207
651,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// local cache, so we use synchronization",no,undetermined,0,0,0,no,0.002450090770975744,no,0.0030517440110035413,no,0.002777042242261489,no,0.0023316937186133365,no,0.0021605593252473107
652,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// SQL strings,no,undetermined,0,0,0,no,0.004579650244609826,no,0.0061457842099761715,no,0.005589056259327025,no,0.005337372194871841,no,0.005088932860441522
653,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*public static Object[] clone(Class elementClass, Object[] array) {
		Object[] result = (Object[]) Array.newInstance( elementClass, array.length );
		System.arraycopy(array, 0, result, 0, array.length);
		return result;
	}*/",no,undetermined,0,0,0,no,0.0024278627617688535,no,0.002232877526517649,no,0.0022848253339977443,no,0.0020551453037525335,no,0.0018995982587089277
654,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// IDENTITY support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0018815456089426236,no,0.0027041480940545033,no,0.005132384717751349,no,0.004834533896808129,no,0.005902415188248762
655,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if there is no resulting row, return null",no,undetermined,0,0,0,no,0.0004726729662412099,no,0.00048025507519933023,no,0.0004474274063887222,no,0.0004081462294159263,no,0.00036196088112545313
656,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// *load_1 // each type,no,undetermined,0,0,0,no,0.0032041574343914777,no,0.0028346944147059354,no,0.002447356632933681,no,0.0021081447578745363,no,0.0019629135819527266
657,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// unfortunately not really safe to normalize this // to 1 as an initial value like we do the others // because we would not be able to control this if // we are using a sequence...,no,undetermined,0,0,0,no,0.06328582252584201,no,0.01240593311678274,no,0.01174622701702102,no,0.011201545995145827,no,0.010850230986662913
658,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
659,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// select topic, syntax from information_schema.help // where section like 'Function%' order by section, topic // // see also ->  http://www.h2database.com/html/functions.html",no,undetermined,0,0,0,no,0.001696426745943645,no,0.0027742841413133717,no,0.002567417060944507,no,0.00234675581336833,no,0.002196968759135402
660,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The optional SQL string defined in the where attribute,no,undetermined,0,0,0,no,0.0013778700875056633,no,0.0014278996149710997,no,0.0012296530697240556,no,0.0010827251355777824,no,0.001006101814792077
661,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//pass this as an argument only to avoid double looking,no,undetermined,0,0,0,no,0.00248105313629839,no,0.002493446121355671,no,0.002406044754279983,no,0.002229448910169639,no,0.0020878235711409635
662,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// for version properties marked as being generated, make sure they are ""always"" // generated; aka, ""insert"" is invalid; this is dis-allowed by the DTD, // but just to make sure...",no,undetermined,0,0,0,no,0.045051636844243195,no,0.012368676107421267,no,0.011713449834836671,no,0.011215321915550193,no,0.010816810505525775
663,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// added this caching as I noticed that getType() is being called multiple times...,no,undetermined,0,0,0,no,0.044533602985645335,no,0.012411578575785166,no,0.01175258713525349,no,0.011205593373827628,no,0.010839274543237767
664,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//information about lazy properties of this class,no,undetermined,0,0,0,no,0.0742111593059704,no,0.012363127875416215,no,0.011728625150866645,no,0.011199182727053354,no,0.010851255127107284
665,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If there are any scalars (non-entities) selected, render the select column aliases.",no,undetermined,0,0,0,no,0.0015355497709697284,no,0.0020423602295450123,no,0.001959804921318862,no,0.0018822656595364165,no,0.001755496653100804
666,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//information about all columns/formulas in class hierarchy,no,undetermined,0,0,0,no,0.007396212875746792,no,0.01239479991994699,no,0.011749636070432987,no,0.011181065608009595,no,0.010841370792924953
667,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Inner classes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0017298184906536652,no,0.0018475808430775363,no,0.0016730057290028188,no,0.0015381563795254533,no,0.0014422237144801088
668,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ( (Column) discrim.getColumnIterator().next() ).setType(type);,no,undetermined,0,0,0,no,0.007855135838421538,no,0.007475822240837622,no,0.006355296962373904,no,0.005970224513195895,no,0.005722039555019354
669,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// saveOrUpdateCopy() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.003041302687396098,no,0.003448047261273936,no,0.003158255469903013,no,0.0028388711784548366,no,0.0026753604335622897
670,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// dynamic filters attached to the class-level,no,undetermined,0,0,0,no,0.010665423910203944,no,0.01236442898928898,no,0.011745998586744133,no,0.011198653090824809,no,0.010835684544459252
671,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// the loaded owner will be set to null after the collection is removed, // so capture its value as the affected owner so it is accessible to // both pre- and post- events",no,undetermined,0,0,0,no,0.004870045576205972,no,0.006523643526629208,no,0.006541961057549697,no,0.006085009962855428,no,0.005768435712460828
672,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.03866403830668925,no,0.012393945739222971,no,0.011725497922203381,no,0.011170124990491307,no,0.01082199434039412
673,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// assume we are in an auto-commit state,no,undetermined,0,0,0,no,0.001833719591595923,no,0.0017328020226988258,no,0.001563550696876561,no,0.001435922927184145,no,0.001363996601273858
674,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// CUSTOM SQL,no,undetermined,0,0,0,no,0.0014378860619458742,no,0.001103956897338759,no,0.000977419833098711,no,0.0008804344508510066,no,0.0008249138854628948
675,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// cascade first, so that all unsaved objects get their // copy created before we actually copy //cascadeOnMerge(event, persister, entity, copyCache, Cascades.CASCADE_BEFORE_MERGE);",no,undetermined,0,0,0,no,0.002324277781043323,no,0.004595349305910639,no,0.005184039098270839,no,0.004827576676179292,no,0.004531798319658459
676,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// model.getKey().setType( new Type( model.getIdentifier() ) );,no,undetermined,0,0,0,no,0.011395673636833368,no,0.012324005736284931,no,0.010011728077514322,no,0.0093125790065724,no,0.00893395238970751
677,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is Tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.002327450559498137,no,0.0021035416116717207,no,0.0019607469787302914,no,0.0017841068123798476,no,0.0016789153676578634
678,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The syntax used to add a column to a table,no,undetermined,0,0,0,no,0.003220053445741053,no,0.01240654034240648,no,0.011727912560700994,no,0.011192285000027682,no,0.010828966478901416
679,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// simple, because we can't have a one-to-one or a collection  // (or even a property-ref) in a composite-element:",no,undetermined,0,0,0,no,0.007072365746111095,no,0.004368280252376703,no,0.002992277617490145,no,0.003051177176591931,no,0.0032571892754552903
680,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Completely optional cascading drop clause.,no,undetermined,0,0,0,no,0.004451645979321656,no,0.004644218123128214,no,0.00391911609223014,no,0.003642810718701194,no,0.0033668981658138875
681,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// during deserialization, we need to reconnect all proxies and // collections to this session, as well as the EntityEntry and // CollectionEntry instances; these associations are transient // because serialization is used for different things.",no,undetermined,0,0,0,no,0.08153634508000003,no,0.01236967650887977,no,0.01172977982678345,no,0.01118994574973904,no,0.010844427488372178
682,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// PROPERTIES,no,undetermined,0,0,0,no,0.002769086247947564,no,0.0027472130994571136,no,0.0024584517939946096,no,0.0022565050745577166,no,0.002155903587709979
683,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//sqlResultTypes = ( Type[] ) sqlResultTypeList.toArray( new Type[sqlResultTypeList.size()] );,no,undetermined,0,0,0,no,0.02661081032954987,no,0.012381194483362747,no,0.011752976881204781,no,0.011204632626029472,no,0.010843963149892005
684,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
685,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// potentialTrimCharacterArgIndex = 1 assumes that a // trim-specification has been specified.  we handle the // exception to that explicitly,no,undetermined,0,0,0,no,0.004473220762408043,no,0.008255407418639879,no,0.008766731866318274,no,0.008493942379013361,no,0.008138586440479968
686,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// IDENTIFIER,no,undetermined,0,0,0,no,0.0009591505665858879,no,0.0012585126698252925,no,0.0011181438902768681,no,0.0009964704109497761,no,0.000923697832125954
687,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// We call getKeyFromResultSet() here so that we can know the // key value upon which to perform the breaking logic.  However, // it is also then called from getRowFromResultSet() which is certainly // not the most efficient.  But the call here is needed, and there // currently is no other way without refactoring of the doQuery()/getRowFromResultSet() // methods",no,undetermined,0,0,0,no,0.2997299459332696,no,0.3823926700421181,no,0.3924291977721203,no,0.38815836828024763,no,0.4121453502489885
688,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// VERSION,no,undetermined,0,0,0,no,0.005153262001904782,no,0.005080811035997915,no,0.004942956313962779,no,0.00460291002726194,no,0.004379295106392251
689,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//operations which cascade as far as the collection also cascade to collection elements,no,undetermined,0,0,0,no,0.0031269313239968405,no,0.0041334898486797955,no,0.002826678891928922,no,0.0031558522656393675,no,0.0028540525145116817
690,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//WHERE STRING,no,undetermined,0,0,0,no,0.009353575051449686,no,0.008657867843856363,no,0.008138577931087115,no,0.007408238412212114,no,0.007123434559996782
691,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The loop ensures atomicity of the // select + update even for no transaction // or read committed isolation level,no,undetermined,0,0,0,no,0.00111911854025745,no,0.0009490073882210219,no,0.0008123269519307327,no,0.0006636810571476089,no,0.0006066825456150009
692,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// SUBCLASS PROPERTY CLOSURE,no,undetermined,0,0,0,no,0.006303779130854943,no,0.005176440399885668,no,0.004784315540494001,no,0.004510795079278638,no,0.004379576400333204
693,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// in an effort to avoid concurrent-modification-exceptions (from // potential recursive calls back through here as a result of the // eventual call to PersistentCollection#endRead), we scan the // internal loadingCollections map for matches and store those matches // in a temp collection.  the temp collection is then used to ""drive"" // the #endRead processing.",no,undetermined,0,0,0,no,0.02929390766325325,no,0.012375975038486605,no,0.011725556129704232,no,0.01117453842710044,no,0.010845061086247798
694,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//before add :-),no,undetermined,0,0,0,no,0.001916967745154048,no,0.0026657112071515475,no,0.0026797702222210195,no,0.00246859971855305,no,0.0023317255031670885
695,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// the configured transaction-factory says it only supports // local callback mode, so no sense attempting to register a // JTA Synchronization",no,undetermined,0,0,0,no,0.010393770023466404,no,0.009756561211112937,no,0.008722857679291146,no,0.006984806157510345,no,0.006450824196166523
696,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Handle any filters applied to the class level,no,undetermined,0,0,0,no,0.007977421874288699,no,0.0060475484142624705,no,0.006773514566976483,no,0.006066983567954655,no,0.005573538378038975
697,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// sybase driver (jConnect) throwing NPE here in certain // cases, but we'll just handle the general ""unexpected"" case",no,undetermined,0,0,0,no,0.045492229313851267,no,0.012412093133467915,no,0.011723523793080457,no,0.011190124581537215,no,0.010840172725086404
698,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// only one-to-one is lazy fetched,no,undetermined,0,0,0,no,0.0057817705792760415,no,0.0044352015473971195,no,0.004180211139321684,no,0.0038265703441559763,no,0.004077449390878296
699,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// replicate does cascade to uninitialized collections,no,undetermined,0,0,0,no,0.007210715411620671,no,0.010829868430062454,no,0.010740952552650111,no,0.01019133613748613,no,0.009597553273647787
700,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//note early exit here:,no,undetermined,0,0,0,no,0.009583751333997352,no,0.009232312632846738,no,0.008604782197320887,no,0.008202654180720515,no,0.007856501591500697
701,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/**
	 * Translates an AST join type (i.e., the token type) into a JoinFragment.XXX join type.
	 *
	 * @param astJoinType The AST join type (from HqlSqlTokenTypes or SqlTokenTypes)
	 * @return a JoinFragment.XXX join type.
	 * @see JoinFragment
	 * @see SqlTokenTypes
	 */",no,undetermined,0,0,0,no,0.2897805276317933,no,0.16719226587760466,no,0.15260527832729354,no,0.15162714581114148,no,0.1460233640526803
702,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// NOTE: this assumes something about how propertySelectFragment is implemented by the subclass!,no,undetermined,0,0,0,no,0.22671004655654192,no,0.18178486421295,no,0.17688634391463987,no,0.1840405921457822,no,0.18336694121247157
703,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//deliberately ignore return value!,no,undetermined,0,0,0,no,0.0005280102569303327,no,0.0005769511095923907,no,0.0005215570915854668,no,0.00046631310971130823,no,0.00043411240427069717
704,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//strip leading "", """,no,undetermined,0,0,0,no,0.001067769729634927,no,0.000977910459836626,no,0.0008676117080337794,no,0.0007950895473081625,no,0.00075019868560295
705,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if the metadata allowed proxy creation and caller did not request forceful eager loading, // generate a proxy",no,undetermined,0,0,0,no,0.001067339553771648,no,0.0006490835928963854,no,0.0005240705580406309,no,0.00042756876246485105,no,0.00039565440247225973
706,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if there is no resulting row, return null",no,undetermined,0,0,0,no,0.0004726729662412099,no,0.00048025507519933023,no,0.0004474274063887222,no,0.0004081462294159263,no,0.00036196088112545313
707,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If this from element is a collection and the path is a collection property (maxIndex, etc.) then // generate a sub-query.",no,undetermined,0,0,0,no,0.02002223760397066,no,0.012382315254131953,no,0.009261734734254122,no,0.009762758206873086,no,0.00950285269565673
708,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//otherwise return the ""hydrated"" state (ie. associations are not resolved)",no,undetermined,0,0,0,no,0.0034115954439908965,no,0.012395377121456459,no,0.010692919581458748,no,0.009662961033122294,no,0.009373636082733821
709,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The name of the SQL function that transforms a string to lowercase,no,undetermined,0,0,0,no,0.0019050802496378512,no,0.00406577670758415,no,0.004040652334170735,no,0.0038821372262927254,no,0.0036887432286003266
710,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//null owner ok??,no,undetermined,0,0,0,no,0.00014455910490717414,no,0.0002676222761017534,no,0.00024206355579985754,no,0.00041317701092103033,no,0.0003771172481607263
711,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// essentially, if the real session is closed allow any // method call to pass through since the real session // will complain by throwing an appropriate exception; // NOTE that allowing close() above has the same basic effect, //   but we capture that there simply to perform the unbind...",no,undetermined,0,0,0,no,0.0052205205671334,no,0.007914133202678201,no,0.007357823096014199,no,0.007016355166114892,no,0.006817019954242416
712,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// automatically makes a column with the default name if none is specifed by XML,no,undetermined,0,0,0,no,0.004587433641401313,no,0.005138225029295623,no,0.004806901277456135,no,0.00454771030773049,no,0.004333701559881533
713,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// just ignore,no,undetermined,0,0,0,no,0.0004033901909793608,no,0.0003817573346825153,no,0.0003304084591913912,no,0.00028826519225385325,no,0.00026406652252680256
714,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this is the exception returned by ReflectHelper.getConstructor() if it cannot // locate an appropriate constructor,no,undetermined,0,0,0,no,0.013365715687592986,no,0.01238797419966654,no,0.011719086058181167,no,0.01120905271241712,no,0.010836540857181814
715,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// ok in normal Hibernate usage to delete a detached entity; JPA however // forbids it, thus this is a hook for HEM to affect this behavior",no,undetermined,0,0,0,no,0.07111296919244627,no,0.012406305255355412,no,0.01174819884561484,no,0.011215096384033214,no,0.010814583614519589
716,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// null sql means that the only lazy properties // are shared PK one-to-one associations which are // handled differently in the Type#nullSafeGet code...,no,undetermined,0,0,0,no,0.019798082117678743,no,0.012385109397760849,no,0.011727648062944416,no,0.011198954892228458,no,0.010856569921979578
717,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if the property mapping consists of all formulas,  // make it non-updateable",no,undetermined,0,0,0,no,0.005597494676413873,no,0.004647034435460405,no,0.004159021427753311,no,0.003928697402948643,no,0.005165103113050502
718,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// the user specifically supplied insert=""true"", // which constitutes an illegal combo",no,undetermined,0,0,0,no,0.0021563875055296256,no,0.001958483081151452,no,0.0017282220732372348,no,0.0015168880208053122,no,0.001470183389892307
719,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if the property mapping consists of all formulas,  // make it insertable",no,undetermined,0,0,0,no,0.007440993862554953,no,0.00596583615682566,no,0.005216347689723866,no,0.004918150785388251,no,0.006573052705579191
720,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//it might be an unwrapped collection reference! //try to find a wrapper (slowish),no,undetermined,0,0,0,no,0.02241702645110254,no,0.012412033886151497,no,0.01111945610701739,no,0.01120520847717305,no,0.010848747222377463
721,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Custom SQL,no,undetermined,0,0,0,no,0.0014378860619458742,no,0.001103956897338759,no,0.000977419833098711,no,0.0008804344508510066,no,0.0008249138854628948
722,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//tableName = mappings.getNamingStrategy().propertyToTableName( className, path );",no,undetermined,0,0,0,no,0.0008671635224772057,no,0.002166716511435544,no,0.001961646683275242,no,0.0018209702964964347,no,0.0017080048231182352
723,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*package*/,no,undetermined,0,0,0,no,0.0034329566677213947,no,0.003569072397892384,no,0.0033560416804782572,no,0.003095855193458484,no,0.0030481677094872563
724,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// return,no,undetermined,0,0,0,no,0.0006289585196806323,no,0.0005663290584469739,no,0.0005106554160617964,no,0.0004696337633428153,no,0.00043772048256313556
725,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// the entry will be removed after the flush, and will no longer // override the stale snapshot // This is now handled by removeEntity() in EntityDeleteAction //persistenceContext.removeDatabaseSnapshot(key);",no,undetermined,0,0,0,no,0.008055473716969215,no,0.006767838613586742,no,0.008388019011024735,no,0.007698765381244825,no,0.007268355193978452
726,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//bad cast,no,undetermined,0,0,0,no,0.035202516850854695,no,0.01239468167869537,no,0.01174051095035035,no,0.011180160822869314,no,0.010847468885043884
727,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*ArrayList list = new ArrayList();
			list.addAll( getKey().getConstraintColumns() );
			list.addAll( getIndex().getConstraintColumns() );
			getCollectionTable().createUniqueKey(list);*/",no,undetermined,0,0,0,no,0.004242424812394772,no,0.004814625712099054,no,0.004383858466967407,no,0.0041189644342915855,no,0.003885014919073756
728,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//property-refs for associations defined on a //component are not supported, so no need to slice",no,undetermined,0,0,0,no,0.013750508227073958,no,0.008155119438740208,no,0.0070243049333217926,no,0.006563928757368243,no,0.00624455040766721
729,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we have an embedded composite identifier,no,undetermined,0,0,0,no,0.005640628446273431,no,0.004051413084251371,no,0.00370040232281371,no,0.003432641302619446,no,0.0032302396476925127
730,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if there is no property-ref, assume the join //is to the subclass table (ie. the table of the //subclass that the association belongs to)",no,undetermined,0,0,0,no,0.007904120853879384,no,0.012398416305450221,no,0.011755536296170224,no,0.011204698474059083,no,0.010839771505086382
731,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//stops flush being called multiple times if this method is recursively called,no,undetermined,0,0,0,no,0.025286558196446575,no,0.011010795889160567,no,0.007801123199684817,no,0.007062904839100952,no,0.006923467844488369
732,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Create a new FROM node for the referenced class.,no,undetermined,0,0,0,no,0.004423946695839446,no,0.003376308903393939,no,0.00490050081903182,no,0.004668999284972809,no,0.00446701702909109
733,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Custom sql,no,undetermined,0,0,0,no,0.0014378860619458742,no,0.001103956897338759,no,0.000977419833098711,no,0.0008804344508510066,no,0.0008249138854628948
734,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// performance op to avoid the array search,no,undetermined,0,0,0,no,0.0018031276914615582,no,0.0027141925008062687,no,0.0023684256037722964,no,0.002208458149369542,no,0.0020631437599315018
735,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// now get an existing proxy for each row element (if there is one),no,undetermined,0,0,0,no,0.0005088993537193026,no,0.0004390864157054957,no,0.000373777375394414,no,0.0003190292433959697,no,0.00030853649441207924
736,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ORPHAN DELETE (used for programmer error detection),no,undetermined,0,0,0,no,0.005105085953301759,no,0.0038368709972537727,no,0.0035625879748337193,no,0.003252227427399726,no,0.003106202813038886
737,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// empty means no scoping,no,undetermined,0,0,0,no,0.0005669442241606814,no,0.0007338494741415826,no,0.0006597038489761244,no,0.000587580602478273,no,0.0005417799372553648
738,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//Enable for HHH-440, which we don't like:",no,undetermined,0,0,0,no,0.012782984688505894,no,0.010838267086073328,no,0.010324776535151715,no,0.009964798473738625,no,0.009566026769976954
739,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*(LockMode) anything*/,no,undetermined,0,0,0,no,0.0031382894851599077,no,0.0031941358178976726,no,0.0028058835450158796,no,0.002607742286814884,no,0.002469966855293635
740,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//this.forceCacheRefresh = forceCacheRefresh;,no,undetermined,0,0,0,no,0.00750941026105933,no,0.005773673692943488,no,0.003519514791930466,no,0.004331663216316976,no,0.004181650102589923
741,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// this is a collection initializer, so we must create a collection // for each of the passed-in keys, to account for the possibility // that the collection is empty and has no rows in the result set",no,undetermined,0,0,0,no,0.019656332891172888,no,0.012401587860037052,no,0.010411997490086205,no,0.011208911441844525,no,0.010780759711404476
742,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// an ""embedded"" component (composite ids and unique) // note that this does not handle nested components",no,undetermined,0,0,0,no,0.07965454669378631,no,0.012361505995899497,no,0.011736241818503931,no,0.011199849585744132,no,0.010821203667236648
743,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// and perform the load,no,undetermined,0,0,0,no,0.0031421452448429396,no,0.002536133726482037,no,0.0022456009303995876,no,0.002047956475236821,no,0.001948750248574342
744,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ALIASES,no,undetermined,0,0,0,no,0.001212623403760715,no,0.0013292628934210246,no,0.0012043052975905786,no,0.0010988944875706286,no,0.0010354384151133771
745,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// cache these since they are stateless // this one could even be static...,no,undetermined,0,0,0,no,0.38710179962602687,no,0.435776685151864,no,0.4151236104964611,no,0.4249444590753256,no,0.4579170315997598
746,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// a nested composite element,no,undetermined,0,0,0,no,0.0067461563713640555,no,0.003991717425667874,no,0.0035753484730537757,no,0.003237521950683278,no,0.003168141622353714
747,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is tuplizer-centric, but is passed a session ~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",no,undetermined,0,0,0,no,0.0022616133971905174,no,0.002127937211177233,no,0.001993043937611006,no,0.001856826545590949,no,0.0017618476684579875
748,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Must occur after resolving identifiers!,no,undetermined,0,0,0,no,0.004390534987286805,no,0.005423833112920854,no,0.004825633430929124,no,0.004359293810797977,no,0.0042630321101943
749,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Get the persister for the _subclass_,no,undetermined,0,0,0,no,0.011660675746457695,no,0.011478884895561212,no,0.011755920916385686,no,0.010622316717257212,no,0.009956987644868914
750,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aliases for composite-id's,no,undetermined,0,0,0,no,0.009234971515728559,no,0.0068749035741124415,no,0.006353667752069272,no,0.005889355487406272,no,0.005661373697531189
751,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//		SQLQueryParser parser = new SQLQueryParser( //				sqlQuery, //				processor.getAlias2Persister(), //				processor.getAlias2Return(), //				aliases, //				collAliases, //				collPersisters, //				suffixes, //				collSuffixes //		); // //		sql = parser.process(); // //		namedParameterBindPoints = parser.getNamedParameters();",no,undetermined,0,0,0,no,0.004440556145084868,no,0.0042996561901319395,no,0.003960478794509029,no,0.003749833311716775,no,0.003563394528638501
752,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Fetch embedded identifiers propertynames from the ""virtual"" identifier component",no,undetermined,0,0,0,no,0.0042102027260146535,no,0.002609156854944652,no,0.0023414676769167478,no,0.0021599242550154997,no,0.0020352510996563566
753,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we need to grab the version value from the entity, otherwise // we have issues with generated-version entities that may have // multiple actions queued during the same flush",no,undetermined,0,0,0,no,0.03758726850406895,no,0.0124014149602876,no,0.011744562597115966,no,0.011187404676625733,no,0.010834754110599266
754,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// embedded composite ids ( alias.idname1, alias.idname2 )",no,undetermined,0,0,0,no,0.010858652170787571,no,0.0074373114725460225,no,0.006886552549013125,no,0.006522264086970504,no,0.006273413001596996
755,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// NOTE: we need to do the wrap here even if its not ""dirty"", // because collections need wrapping but changes to _them_ // don't dirty the container. Also, for versioned data, we // need to wrap before calling searchForDirtyCollections",no,undetermined,0,0,0,no,0.12602709168565593,no,0.06654604800193192,no,0.01171895217505237,no,0.011187521169743886,no,0.010829516359692428
756,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// TODO: skip formulas?,no,undetermined,0,0,0,yes,0.9515657825373939,no,0.012393384158156471,no,0.01173405987643999,no,0.011194509686483807,no,0.010847562614664102
757,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// GUID support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.003238682494816171,no,0.004528136907812,no,0.0044782607017309324,no,0.004152415733411792,no,0.004003805148058978
758,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// invokeinterface // invoke Enabled.getInterceptFieldCallback(),no,undetermined,0,0,0,no,0.0009697550322812637,no,0.001018720557012518,no,0.0009647771213743416,no,0.0008606364265607556,no,0.0007983537703813803
759,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// hibernate seems to ignore this type...,no,undetermined,0,0,0,no,0.016681884996011302,no,0.012400644304653357,no,0.011742287437813883,no,0.011179676690857418,no,0.010833623173181203
760,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//don't need filters for the static loaders,no,undetermined,0,0,0,no,0.012218569588527121,no,0.01100270382485965,no,0.010740966660130136,no,0.009945153038542442,no,0.009472287516491026
761,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// The user requested a ""greater"" (i.e. more restrictive) form of // pessimistic lock",no,undetermined,0,0,0,no,0.00236938053033412,no,0.0022626437609612068,no,0.0021256263881366385,no,0.0019231371311247568,no,0.0017962167388553378
762,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//do two passes, for collection property-ref!",no,undetermined,0,0,0,no,0.028934618251512792,no,0.012409213349749083,no,0.00925578750671991,no,0.010087859217503615,no,0.009910010764739567
763,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*public boolean dropTemporaryTableAfterUse() {
		//we have to, because postgres sets current tx
		//to rollback only after a failed create table
		return true;
	}*/",no,undetermined,0,0,0,no,0.0037818805920245995,no,0.0061197141893353,no,0.005475839334509972,no,0.005248440528366172,no,0.004963199014012177
764,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// select the correct row by either pk or rowid,no,undetermined,0,0,0,no,0.0068335369519012005,no,0.00799480934826932,no,0.007296366806040241,no,0.006777416366630122,no,0.006381447910676868
765,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//			optimizer = getFactory().getSettings().getBytecodeProvider().getReflectionOptimizer( //					mappedClass, getterNames, setterNames, propTypes //			);",no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
766,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//TODO: eventually, rowIdName[j]",no,undetermined,0,0,0,yes,0.9533187894792847,no,0.012396297599598673,no,0.011751748559088332,no,0.01120230709968133,no,0.010834993715014712
767,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//include the discriminator and class-level where, but not filters",no,undetermined,0,0,0,no,0.011508159606851932,no,0.010013316026867645,no,0.009358618336369667,no,0.008607009287127874,no,0.008079622823926685
768,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//lazy = !join;,no,undetermined,0,0,0,no,0.005876491443646604,no,0.0034024515756854784,no,0.003149960381460294,no,0.0028354541384910024,no,0.002585232246412081
769,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//not absolutely necessary, but helps for some //equals()/hashCode() implementations",no,undetermined,0,0,0,no,0.034825577716835726,no,0.012406734396591432,no,0.011727599873742988,no,0.011217159716297682,no,0.01082852452032109
770,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// this is a property of the table, which we are updating",no,undetermined,0,0,0,no,0.01364125342131361,no,0.00930352965465085,no,0.009071457697292139,no,0.008943285547016004,no,0.008602680907002828
771,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if the hibernate-mapping did not specify a schema/catalog, use the defaults //specified by properties - but note that if the schema/catalog were specified //in hibernate-mapping, or as params, they will already be initialized and //will override the values set here (they are in identifierGeneratorProperties)",no,undetermined,0,0,0,no,0.013643306880274514,no,0.012384775532338386,no,0.011732632402003689,no,0.011195758158430597,no,0.010835197439105326
772,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This should only be possible if the caches are constructor injected ,no,undetermined,0,0,0,no,0.07371520960411249,no,0.012401905582602665,no,0.011736775443680241,no,0.011192467967221452,no,0.010848187287947463
773,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// transactions marked for rollback-only cause some TM impls to throw exceptions,no,undetermined,0,0,0,no,0.016951669085087172,no,0.012383790312202174,no,0.011740165146628836,no,0.011185087107060876,no,0.010854414513435032
774,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// special shortcut for id properties, skip the join! // this must only occur at the _end_ of a path expression",no,undetermined,0,0,0,no,0.026333013525931325,no,0.012372864502960977,no,0.011730236885098045,no,0.011180820585133729,no,0.010832693583317963
775,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// IMPL NOTE : due to the delayed population of setters (setters cached // 		for performance), we really cannot pro0perly define equality for // 		this transformer",no,undetermined,0,0,0,no,0.02878921921663139,no,0.01238540440468968,no,0.01173586375670896,no,0.011172590624101192,no,0.010812925891759594
776,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ( (Column) ( (SimpleValue) ic.getIndex() ).getColumnIterator().next() // ).setNullable(false);,no,undetermined,0,0,0,no,0.003380831937568682,no,0.0020560845061603,no,0.0018497825175740079,no,0.0017055445430929684,no,0.0016155834027089934
777,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we have a mapped identifier property and the root of // the incoming property path matched that identifier // property,no,undetermined,0,0,0,no,0.007225181544153708,no,0.005917290168759003,no,0.005329000495954493,no,0.004892914394062407,no,0.004581959743877686
778,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// contained elements:,no,undetermined,0,0,0,no,0.001582699747437912,no,0.0020029790913843465,no,0.0020690785058534865,no,0.001897989892366544,no,0.0016794123522774966
779,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//        },no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
780,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// for non-inverse one-to-many, with a not-null fk, add a backref!",no,undetermined,0,0,0,no,0.03922272261565652,no,0.012376179566646836,no,0.01173560573783399,no,0.011194937387972498,no,0.01082456430710392
781,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//to stop the class from being unloaded,no,undetermined,0,0,0,no,0.004878514637572234,no,0.005677799074448545,no,0.005314703814206765,no,0.005148707845853684,no,0.004912796038012091
782,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// mappings might contain either the ""raw"" extends name (in the case of // an entity-name mapping) or a FQN (in the case of a POJO mapping).",no,undetermined,0,0,0,no,0.0050010379702873095,no,0.006567167547711969,no,0.0064987440874339384,no,0.006343632961856579,no,0.008253509321526568
783,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// for objects that came in via update(),no,undetermined,0,0,0,no,0.0008129422632393747,no,0.0007309863924723193,no,0.0006351726329616807,no,0.000558106593146682,no,0.0005268425931279769
784,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//use dialect default properties,no,undetermined,0,0,0,no,0.0040421115063353375,no,0.008546999909948522,no,0.007940414358470484,no,0.0074677239885301405,no,0.007214705908735883
785,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// increment the version number (if necessary),no,undetermined,0,0,0,no,0.005024684686029062,no,0.0048931126285793715,no,0.005009287286913606,no,0.00460732124822285,no,0.004392865510422536
786,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The cache provider is needed when we either have second-level cache enabled // or query cache enabled.  Note that useSecondLevelCache is enabled by default,no,undetermined,0,0,0,no,0.005494334947879627,no,0.01188706505070204,no,0.011739626735333531,no,0.01065310914719106,no,0.010183136859380557
787,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//information about all properties in class hierarchy,no,undetermined,0,0,0,no,0.013964233435315465,no,0.00870807065697331,no,0.008123923853158029,no,0.007696044202179279,no,0.007402858058062801
788,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//		String provider = properties.getProperty( Environment.BYTECODE_PROVIDER ); //		log.info( ""Bytecode provider name : "" + provider ); //		BytecodeProvider bytecodeProvider = buildBytecodeProvider( provider ); //		settings.setBytecodeProvider( bytecodeProvider );",no,undetermined,0,0,0,no,0.002065609601624327,no,0.003992204125731405,no,0.003659675151571189,no,0.0032477742260309354,no,0.0031079523650664014
789,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.002993604120050292,no,0.0010961395581427138,no,0.0009344920062327941,no,0.0008459936032981651,no,0.0007936996274412778
790,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we are using ""all"" or ""dirty"" property-based optimistic locking",no,undetermined,0,0,0,no,0.04791376213474108,no,0.012375799459562567,no,0.01174704677445701,no,0.011196808704638446,no,0.010826361409734154
791,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// orphans should be deleted during save/update,no,undetermined,0,0,0,no,0.0034053667565937776,no,0.012366399395387816,no,0.011730480988905062,no,0.011212296020169064,no,0.010847482638350435
792,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// maybe a concrete SQLpropertyresult type, but Map is exactly what is required at the moment",no,undetermined,0,0,0,no,0.1414848868610234,no,0.10435930558727026,no,0.10005525484276907,no,0.10006152293622432,no,0.0983824216432016
793,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// for some reason the antlr.CommonAST initialization routines force // this method to get called twice.  The first time with an empty string,no,undetermined,0,0,0,no,0.005211131651120464,no,0.006335911708637734,no,0.006063164098136427,no,0.005460635340348025,no,0.0067354715616744065
794,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// do a check,no,undetermined,0,0,0,no,0.0035545922926994173,no,0.005418489563515824,no,0.005573758752052223,no,0.005198495617277262,no,0.004983518198969781
795,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//			sqlAliasSuffixes[i] = element.getColumnAliasSuffix();,no,undetermined,0,0,0,no,0.0009757160683088469,no,0.0007172033295747296,no,0.0006709108468161723,no,0.0005705871176665449,no,0.0005397091862436496
796,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	void setShowSqlEnabled(boolean b) { //		showSql = b; //	} // //	void setFormatSqlEnabled(boolean b) { //		formatSql = b; //	},no,undetermined,0,0,0,no,5.4728660325243624e-05,no,9.924618851416328e-05,no,9.042509647701398e-05,no,7.757086802035621e-05,no,7.030725330241159e-05
797,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//materialize associations (and initialize the object) later,no,undetermined,0,0,0,no,0.0035665691769314295,no,0.004558437662775797,no,0.003948632339776355,no,0.003606191243503302,no,0.0034122302756002245
798,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	private ComponentTuplizerFactory componentTuplizerFactory; todo : HHH-3517 and HHH-1907,no,undetermined,0,0,0,yes,0.9955551924601792,no,0.012375466303302999,no,0.011743859868640938,no,0.011198623437576691,no,0.010847257556510021
799,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//fetch=""join"" overrides default laziness //fetch=""join"" overrides default laziness",no,undetermined,0,0,0,no,0.0008263119231587318,no,0.0005087246762826039,no,0.0004650314832886761,no,0.000414672594970924,no,0.00037683391984932494
800,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// drop them in reverse order in case db needs it done that way...,no,undetermined,0,0,0,no,0.027959214831139858,no,0.012388661616377234,no,0.01173894543343934,no,0.011200522885055287,no,0.010836774265998902
801,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// This check is needed since processing leaves the cursor // after the last physical row for the current logical row; // thus if we are after the last physical row, this might be // caused by either: //      1) scrolling to the last logical row //      2) scrolling past the last logical row // In the latter scenario, the previous logical row // really is the last logical row. // // In all other cases, we should process back two // logical records (the current logic row, plus the // previous logical row).",no,undetermined,0,0,0,no,0.007867020769452043,no,0.006844305165962371,no,0.005897345807683519,no,0.0054146555622651684,no,0.005247124672873051
802,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// the owning entity may have been deleted and its identifier unset due to // identifier-rollback; in which case, try to look up its identifier from // the persistence context",no,undetermined,0,0,0,no,0.003318571307682087,no,0.003678505319705794,no,0.0033390419521009043,no,0.0030400637331422613,no,0.0028599260143215097
803,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// build an array with indices equal to the total number // of actual returns in the result Hibernate will return // for this query (scalars + non-scalars),no,undetermined,0,0,0,no,0.018141429415917832,no,0.012378924017923855,no,0.011721394109494344,no,0.011207575249784807,no,0.010834552691040172
804,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	public ComponentTuplizerFactory getComponentTuplizerFactory() { //		return componentTuplizerFactory; //	},no,undetermined,0,0,0,no,0.0035678582559717804,no,0.0034211268758833654,no,0.0032313355406007535,no,0.003001633999782208,no,0.002848229696073279
805,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Mckoi has no known variation of a ""SELECT ... FOR UPDATE"" syntax...",no,undetermined,0,0,0,no,0.00167061980358711,no,0.0030313094246172197,no,0.0027781535637729504,no,0.0025890363046815103,no,0.0024599727304086207
806,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// it is or was referenced _somewhere_,no,undetermined,0,0,0,no,0.003041150594982025,no,0.002431163040693925,no,0.0038934233984049783,no,0.003471655026057534,no,0.0033598527781942182
807,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// should be ok performance-wise to generate new delegate instances for each // request since these are locally stack-scoped.  Besides, it makes the code // much easier to read than the old TransactionHelper stuff...",no,undetermined,0,0,0,no,0.08673968602075832,no,0.012387441071753878,no,0.011728143821750872,no,0.011173382797601912,no,0.01084751035030966
808,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// nothing to do; even if the operand is a parameter, no way we could // infer an appropriate expected type here",no,undetermined,0,0,0,no,0.24361570004270977,no,0.24661491790473983,no,0.2505688684582463,no,0.2609033275946885,no,0.2624013563735327
809,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the root of the incoming property path matched one // of the embedded composite identifier properties,no,undetermined,0,0,0,no,0.004704712916246711,no,0.0034997293562505217,no,0.0031004935989396186,no,0.0028782773063547617,no,0.0027350987262900125
810,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// add normal properties,no,undetermined,0,0,0,no,0.0013728537829348281,no,0.0011778169226993574,no,0.0010701500115902075,no,0.0009516692666552303,no,0.0009010905162452023
811,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.006100719370723909,no,0.003508446153325056,no,0.0031329946327249103,no,0.002938340317943302,no,0.00278336171002799
812,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// add the discriminator,no,undetermined,0,0,0,no,0.0008735985851800815,no,0.0009293403206287544,no,0.0008610324096232754,no,0.0007839547814707545,no,0.0007476337222103246
813,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// handles arrays and newly instantiated collections,no,undetermined,0,0,0,no,0.004142880238566579,no,0.001389709149122077,no,0.001257570850587446,no,0.0010794900622826849,no,0.001062391057891381
814,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if either its role changed,",no,undetermined,0,0,0,no,0.0019367912281609216,no,0.002608029396679274,no,0.002074136976914093,no,0.0016399772418932228,no,0.0015264954361675878
815,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//noncritical, swallow and let the other propagate!",no,undetermined,0,0,0,no,0.003135482251378426,no,0.002271057217572304,no,0.002262387673022276,no,0.0021052922190595144,no,0.0020134954773552783
816,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we will need to create new entries,no,undetermined,0,0,0,no,0.01608348800035794,no,0.012394725299222663,no,0.011737029775854002,no,0.011185397041389456,no,0.010825581581383772
817,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this piece is needed for usage in select clause,no,undetermined,0,0,0,no,0.00993202818964519,no,0.007776040637414875,no,0.0074081270516303255,no,0.007140926026098509,no,0.006792618053598082
818,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// no-op. We don't own the cache so we shouldn't stop it.,no,undetermined,0,0,0,no,0.0017263640438959602,no,0.0013196544801469443,no,0.0011916356833012252,no,0.001086573763037395,no,0.0010108257518722668
819,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// key is an entity involved with the operation performed by the listener; // value can be either a copy of the entity or the entity itself,no,undetermined,0,0,0,no,0.002915468188599716,no,0.0026412168790093714,no,0.003926697847353112,no,0.003937623864932142,no,0.00366625998689168
820,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Get the names of the columns used to link between the collection // owner and the collection elements.,no,undetermined,0,0,0,no,0.003353233702376856,no,0.008325062609715111,no,0.0065432115934563415,no,0.00718017992713892,no,0.0067197390546218354
821,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//let's assume that there is only one lazy fetch group, for now!",no,undetermined,0,0,0,no,0.004656592112791529,no,0.0035436538419559914,no,0.0034615504962522514,no,0.003255150626364379,no,0.0031662976950270583
822,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// more specifically : ""? [op] datetime"" //      1) if the operator is MINUS, the param needs to be of //          some datetime type //      2) if the operator is PLUS, the param needs to be of //          some numeric type",no,undetermined,0,0,0,no,0.2208382004567001,no,0.055398454696188815,no,0.01172576462232608,no,0.011176647856688884,no,0.0108340766221361
823,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// don't even bother trying to read any further,no,undetermined,0,0,0,no,0.007096167710603383,no,0.00609104726228123,no,0.005707586847203406,no,0.005340942733734864,no,0.005037649533155985
824,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// add normal properties,no,undetermined,0,0,0,no,0.0013728537829348281,no,0.0011778169226993574,no,0.0010701500115902075,no,0.0009516692666552303,no,0.0009010905162452023
825,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// prepend value and type list with null for any positions before the wanted position.,no,undetermined,0,0,0,no,0.009250916573169326,no,0.0091014831639992,no,0.007951702393615132,no,0.007422051358965644,no,0.0069859835252586286
826,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//+ ""_"" + referencedColumnName not used for backward compatibility",no,undetermined,0,0,0,no,0.007702811379867821,no,0.012407413890751812,no,0.011749699317290235,no,0.011200180503824935,no,0.010832716845917122
827,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// static helper methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.003202908990660115,no,0.003662259936908279,no,0.0033618170973534417,no,0.0031335568633881097,no,0.00300162098459217
828,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// add the discriminator,no,undetermined,0,0,0,no,0.0008735985851800815,no,0.0009293403206287544,no,0.0008610324096232754,no,0.0007839547814707545,no,0.0007476337222103246
829,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Base Expectation impls ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0004627309114753858,no,0.0021647544171228554,no,0.001964113335603478,no,0.001794421038980707,no,0.0017029870166388882
830,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this property belongs on the table and is to be inserted,no,undetermined,0,0,0,no,0.1299496751104242,no,0.10255514886211699,no,0.10756864526137554,no,0.11085020769451592,no,0.10764111280513906
831,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// need to extract the component values and check for subtype replacements...,no,undetermined,0,0,0,no,0.05144321928160325,no,0.012381288347317363,no,0.011716631641720794,no,0.01120505054593585,no,0.010829660820331804
832,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// add the primary key,no,undetermined,0,0,0,no,0.001072751121342998,no,0.0009718781272691393,no,0.0008872212437572038,no,0.0008023685961013812,no,0.0007466556388403906
833,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// note that for sequential scrolling, we make the assumption that // the first persister element is the ""root entity""",no,undetermined,0,0,0,no,0.030372423702417446,no,0.012398371661754974,no,0.011742006733182932,no,0.011196806674244168,no,0.01085453145832858
834,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Impl Note: allows multiple collection fetches as long as the // entire fecthed graph still ""points back"" to a single // root entity for return",no,undetermined,0,0,0,no,0.032918932560882824,no,0.012389926253357214,no,0.011726527643473999,no,0.01117495197044975,no,0.010827869836775132
835,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//		registerColumnType( Types.BLOB, 16777215, ""mediumblob"" ); //		registerColumnType( Types.BLOB, 65535, ""blob"" );",no,undetermined,0,0,0,no,0.002199881586376038,no,0.010166314816932167,no,0.009938290841631786,no,0.009528747756062937,no,0.009149816254192943
836,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// delegate already handles PK columns,no,undetermined,0,0,0,no,0.0008445949847521549,no,0.0008303227363568126,no,0.0007402774024052177,no,0.0006455295551600019,no,0.0006060574266641113
837,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// properties of this class, including inherited properties",no,undetermined,0,0,0,no,0.00878493286238595,no,0.006489152310275351,no,0.005925775150985532,no,0.00557268638513076,no,0.005356002717373406
838,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//ie. e.status==DELETED,no,undetermined,0,0,0,no,0.0017471653113814427,no,0.01238525348024554,no,0.011745652107824437,no,0.01119232926607315,no,0.01084971538893384
839,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// kept for backward compatibility until after the 3.1beta5 release of HA,no,undetermined,0,0,0,no,0.0037202272832542473,no,0.01238559647963307,no,0.011719101006679005,no,0.011169465232628314,no,0.010820237007005792
840,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// legacy behavior, apply the bridge...",no,undetermined,0,0,0,no,0.0038647346061785825,no,0.004491252947744574,no,0.004191655943285959,no,0.003819205500044168,no,0.0036233129655755636
841,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if an exception occurs during flush, user must call rollback()",no,undetermined,0,0,0,no,0.003224343755210936,no,0.0026673835479808787,no,0.0023077715775912996,no,0.002409647418980682,no,0.002258274371814737
842,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Turn off includeSubclasses on all FromElements.,no,undetermined,0,0,0,no,0.008748057039324195,no,0.012374539466004133,no,0.011753386441423742,no,0.011198885705057747,no,0.010836787727885383
843,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// can't just return null here, since that would // cause an owning component to become null",no,undetermined,0,0,0,no,0.06667059566013366,no,0.012379629584273045,no,0.01174450953907368,no,0.011203792578690535,no,0.010842642135680817
844,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the object is transient or detached,no,undetermined,0,0,0,no,0.020902871805964434,no,0.012406033338087541,no,0.011737173770640005,no,0.011196498005897915,no,0.010821992345152747
845,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Now update only the tables with dirty properties (and the table with the version number),no,undetermined,0,0,0,no,0.010218311918987722,no,0.004996548713247682,no,0.004481294066976524,no,0.0044942260034639275,no,0.004224426733540956
846,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Render the SQL query,no,undetermined,0,0,0,no,0.001722316887532122,no,0.0030782472178058893,no,0.002479260189733757,no,0.0021277336999475237,no,0.0020367301416826145
847,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// We must return a valid RDMS/RSA command from this method to // prevent RDMS/RSA from issuing *ERROR 400,no,undetermined,0,0,0,no,0.06548264758529251,no,0.012396639690235309,no,0.01176167842166316,no,0.011196063533457267,no,0.010845645442569728
848,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Write the values of fields onto the prepared statement - we MUST use the state at the time the // insert was issued (cos of foreign key constraints). Not necessarily the object's current state,no,undetermined,0,0,0,no,0.0009555422137939166,no,0.001577382925682743,no,0.0014438862901698954,no,0.0012800167146995425,no,0.0011891189100223503
849,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// registerColumnType(Types.VARBINARY, ""CHARACTER($l)""); // registerColumnType(Types.BLOB, ""CHARACTER($l)"" );  // For use prior to CP 11.0 // registerColumnType(Types.CLOB, ""CHARACTER($l)"" );",no,undetermined,0,0,0,no,0.0019513990148693643,no,0.010241471137413333,no,0.009759004996161266,no,0.009463391929654185,no,0.009117663553204829
850,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// TODO : shouldnt inserts be Expectations.NONE?,no,undetermined,0,0,0,yes,0.706631441462714,yes,0.7301232164956649,yes,0.7302523110142971,yes,0.7440138954848835,yes,0.7509312901176756
851,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//a proxy cannot be transient and it breaks ForeignKeys.isTransient,no,undetermined,0,0,0,no,0.012304219055746822,no,0.009763070338991382,no,0.009021467654681179,no,0.008698315026714091,no,0.008367300949140167
852,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//don't bother trying to update, we know there is no row there yet",no,undetermined,0,0,0,no,0.015117325515934369,no,0.012396487079854095,no,0.011732737121003993,no,0.011192685241212953,no,0.010843077312260108
853,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This is the root level node. // Generate an explicit from clause at the root.,no,undetermined,0,0,0,no,0.010663241614548584,no,0.006406407829673123,no,0.0059858280698465195,no,0.005658959661861734,no,0.005176833725325057
854,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// CHECK,no,undetermined,0,0,0,no,0.000125453080546129,no,0.00036918862083880225,no,0.0004019855623738632,no,0.0003587122530445089,no,0.000335550120193971
855,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// actual cache of the entries.  soft references are used for both the keys and the // values here since the values pertaining to the MRU entries are kept in a // seperate hard reference cache (to avoid their enqueuement/garbage-collection).,no,undetermined,0,0,0,no,0.006539185163330526,no,0.00662768738340305,no,0.005671376194962647,no,0.005412578704371672,no,0.005199197787247014
856,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if all fields are null, we might need to delete existing row",no,undetermined,0,0,0,no,0.02167492577788513,no,0.012392825367693304,no,0.01159455412549405,no,0.01103760543037447,no,0.010422289535627578
857,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//stops flush being called multiple times if this method is recursively called,no,undetermined,0,0,0,no,0.025286558196446575,no,0.011010795889160567,no,0.007801123199684817,no,0.007062904839100952,no,0.006923467844488369
858,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//note: updates to joined tables can't be batched...,no,undetermined,0,0,0,no,0.027525797607004236,no,0.012386849161825916,no,0.01174867061491358,no,0.0111950419777596,no,0.010834459409895225
859,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// String Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0014118328786464891,no,0.0009385218356699794,no,0.000851756465149285,no,0.0007735641777726237,no,0.0007270398932629537
860,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// starting index,no,undetermined,0,0,0,no,0.003223822841102051,no,0.005899840591462368,no,0.00546265496095193,no,0.0051893692278751225,no,0.00501348345394516
861,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// object have been loaded with setReadOnly(true); HHH-2236,no,undetermined,0,0,0,no,0.013940438151089455,no,0.011058182777592464,no,0.010635295462170393,no,0.009831762011757308,no,0.009506962280073193
862,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/**
	 * Build a ResultSetMappingDefinition given a containing element for the ""return-XXX"" elements
	 *
	 * @param resultSetElem The element containing the return definitions.
	 * @param path No clue...
	 * @param mappings The current processing state.
	 * @return The description of the mappings...
	 */",no,undetermined,0,0,0,no,0.2620176550316451,no,0.31198175209550766,no,0.3001014232264175,no,0.30010525128421145,no,0.3053987388365939
863,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	private List collectionOwnerAliases = new ArrayList(); //	private List collectionAliases = new ArrayList(); //	private List collectionPersisters = new ArrayList(); //	private List collectionResults = new ArrayList();,no,undetermined,0,0,0,no,0.0031996812359504287,no,0.0021857099447103005,no,0.002089381385460942,no,0.0019332464896956783,no,0.00182782860282186
864,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Write any appropriate versioning conditional parameters,no,undetermined,0,0,0,no,0.01091245828095479,no,0.009789033613057318,no,0.009935261709216199,no,0.009460600059533879,no,0.009114311371870736
865,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//check if the detached object being merged is the parent,no,undetermined,0,0,0,no,0.002593809897813509,no,0.0028809691649754193,no,0.002606032483845267,no,0.00234138596743318,no,0.00217361695512728
866,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Render the SQL query,no,undetermined,0,0,0,no,0.001722316887532122,no,0.0030782472178058893,no,0.002479260189733757,no,0.0021277336999475237,no,0.0020367301416826145
867,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// determine if the collection elements are entities...,no,undetermined,0,0,0,no,0.004090636674687714,no,0.006080145345020024,no,0.00554418101422568,no,0.006291974150993931,no,0.00575688070206796
868,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Do the key. The key is immutable so we can use the _current_ object state - not necessarily // the state at the time the delete was issued,no,undetermined,0,0,0,no,0.0023782700171671675,no,0.002884798351846602,no,0.0026689131502613595,no,0.00234491951802741,no,0.002126012528317835
869,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Let return-propertys override whatever the persister has for aliases.,no,undetermined,0,0,0,no,0.0033472621451709128,no,0.0029603566000497156,no,0.002916514015145602,no,0.002682962941525168,no,0.0025268869494551637
870,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// We should use the _current_ object state (ie. after any updates that occurred during flush),no,undetermined,0,0,0,no,0.017186087349043117,no,0.012369600583076552,no,0.01172808583962542,no,0.011188450809569676,no,0.010832478089749107
871,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// might need to run a different filter entirely after the flush // because the collection role may have changed,no,undetermined,0,0,0,no,0.1182768178029417,no,0.06279514861927794,no,0.01172392229486181,no,0.011204963928730884,no,0.010827165122572268
872,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// amazingly, these two will work because AbstractCollection // uses iterator() to fill the array",no,undetermined,0,0,0,no,0.06916569994752632,no,0.012371600774204834,no,0.011736658879958218,no,0.011198721667339803,no,0.010844864067686746
873,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// can't cache this stuff either (per-invocation) // we are given a map of user-alias -> lock mode // create a new map of sql-alias -> lock mode,no,undetermined,0,0,0,no,0.048312607497020016,no,0.012386875118382986,no,0.01173707556331629,no,0.01117031681915774,no,0.01082619956876454
874,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//note: dirtyFields==null means we had no snapshot, and we couldn't get one using select-before-update //	  oldFields==null just means we had no snapshot to begin with (we might have used select-before-update to get the dirtyFields)",no,undetermined,0,0,0,no,0.0052182935368986,no,0.007056668703837555,no,0.011607178357970208,no,0.011179498241691788,no,0.010825268320823917
875,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// loop through all the associations of the current entity and make sure that they are processed // before the current batch number,no,undetermined,0,0,0,no,0.0049104694338109045,no,0.003198221589941498,no,0.0043149911312076305,no,0.003757809150042486,no,0.0035368965434301
876,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ParameterContainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.006140888174090093,no,0.004901065980396148,no,0.004578600266881531,no,0.004352388675445458,no,0.006026218188316145
877,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.12765942815766487,no,0.09244265427783606,no,0.011756867153675004,no,0.011218035984311068,no,0.010846067512935315
878,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// note that if we load this collection from a cartesian product // the multiplicity would be broken ... so use an idbag instead,no,undetermined,0,0,0,no,0.13586342045723368,no,0.13963434901325938,no,0.12834808928008315,no,0.15025015977933087,no,0.14679595863626638
879,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* COLUMN and TABLE should be renamed but it would break the public API */,no,undetermined,0,0,0,no,0.19068828705076218,no,0.18287984700350896,no,0.19109730339892797,no,0.18979565947424354,no,0.18717624322412443
880,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// For many-to-many joins, use the tablename from the queryable collection for the default text.",no,undetermined,0,0,0,no,0.009098110129366024,no,0.003937485448134595,no,0.003276628327825065,no,0.00325094646742859,no,0.0035434693857893922
881,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//int result = 17; //result = 37 * result + type.hashCode(); //result = 37 * result + ( value==null ? 0 : value.hashCode() ); //return result;,no,undetermined,0,0,0,no,0.0015123553024965126,no,0.0015563524297119854,no,0.0018407357757070802,no,0.0016222401342684387,no,0.001533405586043756
882,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// For the case of dynamic-update=""true"", we need to generate the UPDATE SQL",no,undetermined,0,0,0,no,0.008193357682482713,no,0.009943463349911105,no,0.008179939904616783,no,0.00782770243674114,no,0.007533341821147708
883,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// merge() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.007177577630610815,no,0.012409826735385692,no,0.011743556534853743,no,0.011207147531341399,no,0.010816889047835813
884,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Default to collections sharing entity cache if there is one,no,undetermined,0,0,0,no,0.0016792899249386524,no,0.0010373592081793647,no,0.0009823260506474812,no,0.0009629306773011741,no,0.000932406558612296
885,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// --Commented out by Inspection (12/4/04 9:10 AM): public abstract void addCondition(String alias, String[] columns, String condition);",no,undetermined,0,0,0,no,0.007090186495816218,no,0.00846829164682523,no,0.00806329285923801,no,0.007699557434817954,no,0.007416819567456771
886,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// don't need to check laziness (dirty checking algorithm handles that),no,undetermined,0,0,0,no,0.08441273180605269,no,0.012368312192745387,no,0.011722727064513381,no,0.011207291126456829,no,0.010849154643014312
887,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*rootTableName = persistentClass.getRootTable().getQualifiedName( 
				factory.getDialect(), 
				factory.getDefaultCatalog(), 
				factory.getDefaultSchema() 
		);*/",no,undetermined,0,0,0,no,0.006842300435059268,no,0.008428013005791714,no,0.00826786154879719,no,0.007805383461721245,no,0.007561685584622937
888,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// For the case of dynamic-update=""false"", or no snapshot, we use the static SQL",no,undetermined,0,0,0,no,0.0023089481609488063,no,0.004124799299322412,no,0.006263581482003707,no,0.006152427441750502,no,0.005918314822573187
889,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//abort the save (the object is already saved by a circular cascade),no,undetermined,0,0,0,no,0.005581996028007049,no,0.00618114640552101,no,0.006686168371351006,no,0.006316943383782596,no,0.0057852961276863785
890,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if not ""get"", then try ""is""",no,undetermined,0,0,0,no,0.002563681026665662,no,0.0025680122813004384,no,0.0025484128861583064,no,0.0022022769311551846,no,0.0020475438353358888
891,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// remove initial "" and """,no,undetermined,0,0,0,no,0.0005700133620320908,no,0.0005470743418510808,no,0.0004780142534787503,no,0.0004235419974334904,no,0.000392690998771421
892,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Default to sharing the entity cache if there is one,no,undetermined,0,0,0,no,0.0008782744908790139,no,0.0008350702652560527,no,0.0008506421555451716,no,0.000875501576556857,no,0.0008537296719517683
893,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we have the form: trim(trimSource) //      so we trim leading and trailing spaces,no,undetermined,0,0,0,no,0.005101354988079332,no,0.012367808509926444,no,0.01171226114597316,no,0.011189142991851262,no,0.010818027235604103
894,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// For the case of dynamic-insert=""true"", we need to generate the INSERT SQL",no,undetermined,0,0,0,no,0.004568125695727572,no,0.005487551562939071,no,0.005623619422086614,no,0.005312395619624085,no,0.005271355871561724
895,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if it was a reference to self, don't need to nullify // unless we are using native id generation, in which // case we definitely need to nullify",no,undetermined,0,0,0,no,0.015439042220365183,no,0.010275742765927976,no,0.007319227687506271,no,0.0069805477432443724,no,0.006579679789203812
896,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// For the case of dynamic-insert=""true"", we need to generate the INSERT SQL",no,undetermined,0,0,0,no,0.004568125695727572,no,0.005487551562939071,no,0.005623619422086614,no,0.005312395619624085,no,0.005271355871561724
897,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//the user visible aliases, which are unknown to the superclass, //these are not the actual ""physical"" SQL aliases",no,undetermined,0,0,0,no,0.002850658003239997,no,0.00259769250393079,no,0.0021885035946547253,no,0.002010855409562691,no,0.0019053751786630585
898,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// For the case of dynamic-insert=""false"", use the static SQL",no,undetermined,0,0,0,no,0.0027769289566962753,no,0.004246624262704611,no,0.004138369005022546,no,0.003907397520009087,no,0.00386102767622318
899,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if a composite key, use ""( (foo = ? and bar = ?) or (foo = ? and bar = ?) )"" for batching //TODO: unnecessary for databases with ANSI-style joins",no,undetermined,0,0,0,no,0.4243712904042656,no,0.3186177602817431,no,0.34880554730251745,no,0.3482218894534689,no,0.3487118698822013
900,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// For the case of dynamic-insert=""false"", use the static SQL",no,undetermined,0,0,0,no,0.0027769289566962753,no,0.004246624262704611,no,0.004138369005022546,no,0.003907397520009087,no,0.00386102767622318
901,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the class hierarchy structure,no,undetermined,0,0,0,no,0.009133913811479355,no,0.009682094271385631,no,0.009080821981668031,no,0.008678794895825478,no,0.008327377102718898
902,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//a shortcut if its location didn't change!,no,undetermined,0,0,0,no,0.007077468650304328,no,0.012380993785589788,no,0.01172103565244388,no,0.011178485651086326,no,0.010824491700581628
903,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//swaldman 2006-08-28: define c3p0-style configuration parameters for properties with //                     hibernate-specific overrides to detect and warn about conflicting //                     declarations,no,undetermined,0,0,0,no,0.010134671846551244,no,0.012404510247303538,no,0.011716947526972136,no,0.011189871858252317,no,0.010838556783074752
904,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// not supported,no,undetermined,0,0,0,no,0.009355378041469796,no,0.009811335440835867,no,0.00903538684964726,no,0.008652997202255095,no,0.008404405950703889
905,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Need to use the identifier type of the collection owner // since the incoming is value is actually the owner's id. // Using the collection's key type causes problems with // property-ref keys...,no,undetermined,0,0,0,no,0.03511574287384977,no,0.012375845605897119,no,0.01174997817412355,no,0.011206172520751843,no,0.010855626196504644
906,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if we instantiate a collection during the flush() process, // we must ignore it for the rest of the flush()",no,undetermined,0,0,0,no,0.0063586296910694805,no,0.0029488550533908592,no,0.0022818124361293434,no,0.0028994221906218803,no,0.0027484106153730595
907,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// moved up from AbstractEntityPersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.006878624921467369,no,0.012383649065961795,no,0.011725163971222604,no,0.011180610124964708,no,0.010848166361905281
908,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// new collections that get found + wrapped // during flush shouldn't be ignored,no,undetermined,0,0,0,no,0.01184759859216043,no,0.005082368664431573,no,0.004680511764226671,no,0.0045630810812369235,no,0.004322190702664483
909,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// meant to handle dynamic instantiation queries...,no,undetermined,0,0,0,no,0.0009539380709609714,no,0.012383536449769365,no,0.011738440094500074,no,0.011201478608221467,no,0.010849969068234475
910,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//a newly wrapped collection is NOT dirty (or we get unnecessary version updates),no,undetermined,0,0,0,no,0.07498685788094425,no,0.012386570693510427,no,0.011710627239958754,no,0.011194841709855085,no,0.010835111955359014
911,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// local cache, so we use synchronization",no,undetermined,0,0,0,no,0.002450090770975744,no,0.0030517440110035413,no,0.002777042242261489,no,0.0023316937186133365,no,0.0021605593252473107
912,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Always add the collection's query spaces.,no,undetermined,0,0,0,no,0.00920208543537171,no,0.011325244200559028,no,0.008231213663033213,no,0.007846967580843574,no,0.007554398917071109
913,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//the BLOB type requires a size arguement - this defaults to //bytes - no arg defaults to 1 whole byte! //other argument mods include K - kilobyte, M - megabyte, G - gigabyte. //refer to the PBdevelopers guide for more info.",no,undetermined,0,0,0,no,0.05658106979193236,no,0.012389244927451014,no,0.011728186495153262,no,0.011183098410494596,no,0.010825988818522573
914,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// detached collections that get found + reattached // during flush shouldn't be ignored,no,undetermined,0,0,0,no,0.005191943603345567,no,0.002615943879893209,no,0.00234886914803944,no,0.002304680561350482,no,0.0021621502687839108
915,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// revert to traditional hibernate behavior of setting initialPoolSize to minPoolSize // unless otherwise specified with a c3p0.*-style parameter.,no,undetermined,0,0,0,no,0.004322132059264397,no,0.007332357465206389,no,0.005658557722828455,no,0.00500829785273598,no,0.004696313008423084
916,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we need to utilize dynamic delete statements,no,undetermined,0,0,0,no,0.004773225376308521,no,0.007583644316910873,no,0.0071469990951981794,no,0.006870801072717566,no,0.0065460174609207125
917,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//columns.add(columnName); //aliases.add(tableAlias);,no,undetermined,0,0,0,no,0.000974726620283866,no,0.0022789984047471203,no,0.002076884957106759,no,0.0019239505684906344,no,0.0018389255172269238
918,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// otherwise, utilize the static delete statements",no,undetermined,0,0,0,no,0.0017277898019850391,no,0.0020634065763508553,no,0.001566329402634586,no,0.001375603468415635,no,0.0012869875627706349
919,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// intentionally empty,no,undetermined,0,0,0,no,0.0037763070001841895,no,0.004249508276831321,no,0.003857183339794085,no,0.003525943555307979,no,0.0033151150666807525
920,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*public boolean equals(Object other) {
		read();
		return bag.equals(other);
	}

	public int hashCode(Object other) {
		read();
		return bag.hashCode();
	}*/",no,undetermined,0,0,0,no,0.004548198575388917,no,0.0034101232859101304,no,0.003084677029090649,no,0.002912480717795499,no,0.0027872306301633685
921,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//final boolean forceCacheRefresh,",no,undetermined,0,0,0,no,4.831321800315259e-05,no,0.00011866707450128473,no,0.00010480601569777407,no,9.045731615516229e-05,no,8.140465500433203e-05
922,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//just a performance opt!,no,undetermined,0,0,0,no,0.011767384336032766,no,0.01235373355929799,no,0.011677247619803646,no,0.011118971971491866,no,0.01069035020969194
923,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Essentially: // 1) If we have a local (Hibernate) transaction in progress //      and it already has the UserTransaction cached, use that //      UserTransaction to determine the status. // 2) If a transaction manager has been located, use //      that transaction manager to determine the status. // 3) Finally, as the last resort, try to lookup the //      UserTransaction via JNDI and use that to determine the //      status.",no,undetermined,0,0,0,no,0.005649203291927808,no,0.004823527818938802,no,0.004559768484183004,no,0.0036821351162871093,no,0.0034485085394248276
924,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//just a performance opt!,no,undetermined,0,0,0,no,0.011767384336032766,no,0.01235373355929799,no,0.011677247619803646,no,0.011118971971491866,no,0.01069035020969194
925,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// used to set the type of the parent dot node,no,undetermined,0,0,0,no,0.006630250213849103,no,0.004939713053067428,no,0.004614223703557158,no,0.004367061127897238,no,0.004194373026496421
926,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//all joins join to the pk of the driving table,no,undetermined,0,0,0,no,0.0018584358310136011,no,0.0013944240437069406,no,0.0013431875697508507,no,0.0012271057085666537,no,0.0011163874356004129
927,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// more specifically : ""datetime [op] ?"" //      1) if the operator is MINUS, we really cannot determine //          the expected type as either another datetime or //          numeric would be valid //      2) if the operator is PLUS, the param needs to be of //          some numeric type",no,undetermined,0,0,0,no,0.08775370578123372,no,0.012384372305702513,no,0.011753165663918631,no,0.011193275797036713,no,0.010857693610287279
928,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//notice that we skip the first table; it is the driving table!,no,undetermined,0,0,0,no,0.001315278483371242,no,0.0008016333554382854,no,0.0008607619762069225,no,0.0007342188654204193,no,0.0006599374945054356
929,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aliases named identifier ( alias.idname ),no,undetermined,0,0,0,no,0.002917810459125222,no,0.0029959255585638236,no,0.0025996249746592956,no,0.002387013120019385,no,0.0022630826483357037
930,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//skip the driving table,no,undetermined,0,0,0,no,0.0005393547635372247,no,5.614557430332674e-05,no,5.660902201766365e-05,no,4.905783475595856e-05,no,4.2042060017994265e-05
931,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// inserts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0017703459278924686,no,0.001653860867266872,no,0.0013738474853988575,no,0.0012701068087683832,no,0.0011856462521953157
932,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//get 'em in the right order (not that it really matters),no,undetermined,0,0,0,no,0.015089663399685583,no,0.012389668170624339,no,0.011748055751658779,no,0.011186807686886265,no,0.010824928491977472
933,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*package*/,no,undetermined,0,0,0,no,0.0034329566677213947,no,0.003569072397892384,no,0.0033560416804782572,no,0.003095855193458484,no,0.0030481677094872563
934,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//NOTE EARLY EXIT!,no,undetermined,0,0,0,no,0.0021531618463119678,no,0.0020327342500316434,no,0.0018253944961150069,no,0.0016843563046879404,no,0.0015823869429030268
935,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
936,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// trying via forName() first to be as close to DriverManager's semantics,no,undetermined,0,0,0,no,0.002152159279262626,no,0.001765963048334051,no,0.001539173618737566,no,0.0013748100270662218,no,0.001292983327562204
937,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//this bit is only *really* absolutely necessary for handling //requestedId, but is also good if we merge multiple object //graphs, since it helps ensure uniqueness",no,undetermined,0,0,0,no,0.36826332781681503,no,0.3754354934317756,no,0.37841682006495797,no,0.37250656121782705,no,0.4076463034953102
938,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	private boolean showSql; //	private boolean formatSql;,no,undetermined,0,0,0,no,5.430760534065619e-06,no,5.309154780359562e-06,no,4.525510962158798e-06,no,3.683328760902595e-06,no,3.190744766424612e-06
939,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// in case we were deserialized in a different JVM, look for an instance with the same name // (alternatively we could do an actual JNDI lookup here....)",no,undetermined,0,0,0,no,0.09631213149112758,no,0.012393920667153696,no,0.011745731555676889,no,0.011202053233345544,no,0.010841662334534694
940,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// try to make sure we don't wrap and already wrapped session,no,undetermined,0,0,0,no,0.008317357088219374,no,0.005225700004833187,no,0.004493409749398887,no,0.003942445104332604,no,0.0037113389317375463
941,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If this is an implied join in a FROM clause, then use ANSI-style joining, and set the // flag on the FromElement that indicates that it was implied in the FROM clause itself.",no,undetermined,0,0,0,no,0.016453544147924302,no,0.012397478784893287,no,0.01174193517901648,no,0.011171928872457807,no,0.01083443269970122
942,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//render the where and from parts,no,undetermined,0,0,0,no,0.0032423092700424937,no,0.0033678659258579587,no,0.0030137740272025942,no,0.0026961465529980553,no,0.002557444302990098
943,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// There is already an existing batch for this type of entity. // Check to see if the latest batch is acceptable.,no,undetermined,0,0,0,no,0.015963476396277338,no,0.010958285043346349,no,0.011735659639700307,no,0.01119989823127797,no,0.010845546520998433
944,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// allow these to go through the the real session no matter what,no,undetermined,0,0,0,no,0.010555395561890463,no,0.012388925682434214,no,0.011743630854681737,no,0.011214031863278916,no,0.010846585521214458
945,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Don't really know all the codes required to adequately decipher returned jdbc exceptions here. // simply allow the failure to be eaten and the subsequent insert-selects/deletes should fail,no,undetermined,0,0,0,no,0.08598596215293836,no,0.012369214251390348,no,0.011733852820967828,no,0.01117856001399368,no,0.010824730094998736
946,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//we *could* regerate this inside each called method!,no,undetermined,0,0,0,no,0.02384099616977282,no,0.012400872172384354,no,0.011762601716645383,no,0.011199826081465076,no,0.010854173646939275
947,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the CascadingAction implementations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.001921010399536623,no,0.0017575166304276038,no,0.0016525815042675947,no,0.0015040461396053754,no,0.0013921268641347616
948,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//now render the joins,no,undetermined,0,0,0,no,0.001208502495742344,no,0.001538753785776223,no,0.001357098135561404,no,0.0012157892265124768,no,0.001153294217867609
949,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If you're closing down the ConnectionProvider chances are an // is not a real big deal, just warn",no,undetermined,0,0,0,no,0.0061992887386348,no,0.0096295106356919,no,0.00903531870429389,no,0.008454244282670626,no,0.0080520051685432
950,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// create a new batch for this type. The batch number is the number of current batches.,no,undetermined,0,0,0,no,0.01657102416163437,no,0.01240459911511024,no,0.01174482675826039,no,0.011197600924711828,no,0.01085707678978399
951,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// keyword support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0015996865464838596,no,0.0024916459567127527,no,0.0023688096332994645,no,0.002194776826127552,no,0.0021082999299201757
952,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This will add the new from element to the origin.,no,undetermined,0,0,0,no,0.009969857508267357,no,0.008684844760422427,no,0.008600126077211867,no,0.008130255742152526,no,0.00781256444503342
953,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the closure of all columns used by the entire hierarchy including // subclasses and superclasses of this class,no,undetermined,0,0,0,no,0.009604503906282553,no,0.012407348927892078,no,0.011717809607490864,no,0.011193809535402768,no,0.010822694128981255
954,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//now render the select clause,no,undetermined,0,0,0,no,0.0019431985412500506,no,0.002130558877250312,no,0.0018552646521652072,no,0.0017109657623285259,no,0.001601288396665248
955,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The keyword used to insert a row without specifying // any column values,no,undetermined,0,0,0,no,0.0014951273839770446,no,0.0018091372134147663,no,0.001920311463211775,no,0.0017593405935396765,no,0.001690976159581256
956,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//now tie it all together,no,undetermined,0,0,0,no,0.001331378029635831,no,0.0014025285783930688,no,0.0012317331768603233,no,0.0010951419052619852,no,0.0010370126044856852
957,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Does the LIMIT clause take a ""maximum"" row number instead of a total number of returned rows?",no,undetermined,0,0,0,no,0.006806959799441664,no,0.011983184078277991,no,0.011458469355770537,no,0.01106655346784842,no,0.010593266476079983
958,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//insert/update/delete SQL,no,undetermined,0,0,0,no,0.0008259708536535238,no,0.0009218805779571872,no,0.0008851178140499081,no,0.0007853350189241966,no,0.0007737683020159104
959,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The keyword used to specify a nullable column.,no,undetermined,0,0,0,no,0.003145223075136515,no,0.0035763987783479774,no,0.004153525824626971,no,0.0038618459782597428,no,0.0037241204669434666
960,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//select SQL,no,undetermined,0,0,0,no,0.0015871012829871297,no,0.001918983808989041,no,0.001634870631559392,no,0.0015006915994627142,no,0.0013894572422900515
961,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//overriden to avoid System.exit,no,undetermined,0,0,0,no,0.0035681875308595317,no,0.0037224853104907314,no,0.003434371546491781,no,0.0032493957420689254,no,0.003083834904244918
962,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//no need to check laziness, dirty checking handles that",no,undetermined,0,0,0,no,0.04771873009061076,no,0.011488268776066771,no,0.010022508398390329,no,0.011202383947363085,no,0.01084661168360255
963,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.005382821827658146,no,0.007013573213432863,no,0.006749682905747068,no,0.00641014760514175,no,0.006221149531485857
964,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Fully resolve the map reference, create implicit joins.",no,undetermined,0,0,0,no,0.016922994068928915,no,0.012392769678883586,no,0.011742426977542561,no,0.011199630045575316,no,0.01083642056123394
965,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// break the outer loop !!!,no,undetermined,0,0,0,no,0.0004494606128504566,no,0.00045324700616459975,no,0.0003983872302801071,no,0.00033909245371068175,no,0.00031558889051748674
966,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// since this entity will now be processed in the latest possible batch, // we can be assured that it will come after all other associations, // there's not need to continue checking.",no,undetermined,0,0,0,no,0.10365337592431613,no,0.07068237657442154,no,0.011714355025126794,no,0.011193934411914071,no,0.010849831048790002
967,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// remove any snapshot, not really for memory management purposes, but // rather because it might now be stale, and there is no longer any  // EntityEntry to take precedence // This is now handled by removeEntity() //session.getPersistenceContext().removeDatabaseSnapshot(key);",no,undetermined,0,0,0,no,0.06689970042246654,no,0.01237524192059153,no,0.011744634464595876,no,0.011213314719542478,no,0.01083763804973583
968,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The basic implementation is to simply use the node's text,no,undetermined,0,0,0,no,0.010292983567167511,no,0.012391949404505088,no,0.011750426001743504,no,0.011185254307216601,no,0.010846387653240235
969,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// InterSystems Cache' does not current support ""SELECT ... FOR UPDATE"" syntax... // Set your transaction mode to READ_COMMITTED before using",no,undetermined,0,0,0,no,0.01912159810386435,no,0.012386795547780136,no,0.011725570788780245,no,0.011190446902849443,no,0.010842067211218298
970,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//cascade to current collection elements,no,undetermined,0,0,0,no,0.003426227176664488,no,0.004990920472603346,no,0.004030533960440216,no,0.0048419470450188394,no,0.004395243548766151
971,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0046777133187897125,no,0.0052426624707914305,no,0.004986222923762625,no,0.004599686869222083,no,0.004395724760355171
972,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//not really necessary, but good for consistency...",no,undetermined,0,0,0,no,0.06998301484985023,no,0.012391681643305095,no,0.011742462281405774,no,0.011191303852093956,no,0.010822122761636029
973,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Try to find out the name of the primary key to create it as identity if the IdentityGenerator is used,no,undetermined,0,0,0,no,0.0027662116944995197,no,0.003459692816495495,no,0.005065252833497377,no,0.004657155651208891,no,0.005062081180024859
974,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we can't cascade to non-embedded elements,no,undetermined,0,0,0,no,0.00734300194055842,no,0.01041990876844723,no,0.011139601527588415,no,0.010913339513375638,no,0.010122102852049161
975,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//postDelete: // After actually deleting a row, record the fact that the instance no longer  // exists on the database (needed for identity-column key generation), and // remove it from the session cache",no,undetermined,0,0,0,no,0.0019734756384076598,no,0.0026399640346924463,no,0.0029006898862956915,no,0.0026522013548825347,no,0.002795317523655175
976,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//a newly instantiated collection can't have orphans,no,undetermined,0,0,0,no,0.008289912002257087,no,0.006802343146026631,no,0.003928915728029676,no,0.00403362687430547,no,0.003769957064228573
977,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Don't hold the JBC node lock throughout the tx, as that // prevents reads and other updates",no,undetermined,0,0,0,no,0.007535391165715553,no,0.004910197487766125,no,0.004555247055163081,no,0.004222328130222756,no,0.00390585333160269
978,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// check the version unsaved-value, if appropriate",no,undetermined,0,0,0,no,0.002849372635005064,no,0.0022754293688300366,no,0.0021640506735731606,no,0.0019503254743857802,no,0.0018469651644362165
979,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Create the SessionFactory from hibernate.cfg.xml,no,undetermined,0,0,0,no,0.0021285045748925297,no,0.004699867013575722,no,0.004490666537229369,no,0.004103637620152578,no,0.0038800830417397704
980,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// handle orphaned entities!!,no,undetermined,0,0,0,no,0.00581320936971871,no,0.010715207753372851,no,0.01172720147309665,no,0.011194572929906608,no,0.010819623056121629
981,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ignore,no,undetermined,0,0,0,no,0.00014335230378915544,no,0.00013958636484248836,no,0.00012005421643621465,no,0.00010252236131852231,no,9.386482826389979e-05
982,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// check the id unsaved-value,no,undetermined,0,0,0,no,0.003335030209294765,no,0.002420121577048121,no,0.0022419591537698944,no,0.001976713367800509,no,0.0018906478184235697
983,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if we get here, it is possible that we have a proxy 'in the way' of the merge map resolution... // 		NOTE: decided to put this here rather than in the above loop as I was nervous about the performance //		of the loop-in-loop especially considering this is far more likely the 'edge case'",no,undetermined,0,0,0,no,0.2085543943782554,no,0.29449576501231084,no,0.31516933764311067,no,0.3170771687680031,no,0.3145752369039478
984,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// check to see if it is in the second-level cache,no,undetermined,0,0,0,no,0.016168035205102824,no,0.012387268890491689,no,0.01172931186268056,no,0.01120111072840938,no,0.010853115056870869
985,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Custom SQL (would be better if these were private),no,undetermined,0,0,0,no,0.07342400991705028,no,0.012372462867387978,no,0.011746940510113237,no,0.011198250753062617,no,0.01084809151165541
986,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,///////////////////////////////////////////////////////////////////////,no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
987,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// our column span is the number of columns in the PK,no,undetermined,0,0,0,no,0.0017214807798260603,no,0.002640479580550591,no,0.002536472142140224,no,0.0023462518532162595,no,0.002267739072191554
988,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// For property references generate <tablealias>.<columnname> as <projectionalias>,no,undetermined,0,0,0,no,0.003482299413976497,no,0.0024238267060226115,no,0.0021566064770203574,no,0.0019868449472853706,no,0.0018568457193463249
989,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// in case we were deserialized in a different JVM, look for an instance with the same name // (alternatively we could do an actual JNDI lookup here....)",no,undetermined,0,0,0,no,0.09631213149112758,no,0.012393920667153696,no,0.011745731555676889,no,0.011202053233345544,no,0.010841662334534694
990,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
991,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// KEY,no,undetermined,0,0,0,no,0.000286828744266094,no,0.00015095523696608606,no,0.00013257455750651122,no,0.0001136598335623921,no,0.00010223686598934938
992,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//force immediate execution of the insert,no,undetermined,0,0,0,no,0.001234592183237338,no,0.0012826508742883917,no,0.0012919043793918651,no,0.0011450505808148,no,0.0011229458677209595
993,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// general purpose parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0014864192836902652,no,0.0011693936772281,no,0.00107560897087334,no,0.0009868750938897583,no,0.0009195687260030206
994,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// entities ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0055055052685345955,no,0.011380597678187807,no,0.011740345821402402,no,0.011209905750451733,no,0.010843791123913493
995,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0046777133187897125,no,0.0052426624707914305,no,0.004986222923762625,no,0.004599686869222083,no,0.004395724760355171
996,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Loaded entity instances, by EntityUniqueKey",no,undetermined,0,0,0,no,0.009269237502786487,no,0.004698355611330185,no,0.004598696473528981,no,0.004114167726044776,no,0.003878430615300807
997,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//allow any identifier quoted with backtick //only recognizes identifiers beginning with a letter,no,undetermined,0,0,0,no,0.008358751731543854,no,0.007137423329721284,no,0.007064277823091963,no,0.006568240221644312,no,0.006243058644535023
998,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// collections ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0057196467871359355,no,0.002733270964441542,no,0.0024410257245707253,no,0.0021850070053143545,no,0.002084144186962466
999,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Configurable implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.07005410624159279,no,0.012398347193739707,no,0.011751518488626465,no,0.011209896817655053,no,0.010833335458973678
1000,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Identity map of EntityEntry instances, by the entity instance",no,undetermined,0,0,0,no,0.004180807807214513,no,0.0025592590596868253,no,0.004541340732842526,no,0.004002602651013216,no,0.004356104175566165
1001,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Write HTML footer,no,undetermined,0,0,0,no,0.0007581446046442399,no,0.0009192856683919416,no,0.0008636379662214217,no,0.0007680086223876055,no,0.000726335985097156
1002,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Entity proxies, by EntityKey",no,undetermined,0,0,0,no,0.003716439685901834,no,0.012410251723738847,no,0.011730265771513093,no,0.011188446740108446,no,0.010825945507802066
1003,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// delete does cascade to uninitialized collections,no,undetermined,0,0,0,no,0.007289448979738732,no,0.00828863102678118,no,0.008374776636023516,no,0.00785308904170433,no,0.0073703799707458195
1004,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Snapshots of current database state for entities // that have *not* been loaded,no,undetermined,0,0,0,no,0.008751037306551936,no,0.008262310909624275,no,0.008536441629356122,no,0.008406393557148227,no,0.008002690453703346
1005,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// NativeSQL: collect key column and auto-aliases,no,undetermined,0,0,0,no,0.0008873366862484324,no,0.0007959324123682393,no,0.0006926456219087348,no,0.0006252340536437086,no,0.0005712640271277939
1006,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Identity map of array holder ArrayHolder instances, by the array instance",no,undetermined,0,0,0,no,0.0013729086101345244,no,0.0012038920217255127,no,0.0015905110797296573,no,0.0013558267318657205,no,0.0013969475237953714
1007,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//unquotedKeyColumnNames = StringHelper.unQuote(keyColumnAliases);,no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
1008,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//cannot occur,no,undetermined,0,0,0,no,0.0010773201723064106,no,0.0014433891546509461,no,0.0013764189786304166,no,0.0012144599243784347,no,0.0011481752272429636
1009,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Don't need to lock the cache here, since if someone // else inserted the same pk first, the insert would fail",no,undetermined,0,0,0,no,0.00786678670805549,no,0.00624381078813995,no,0.00608082206742474,no,0.005645090032276584,no,0.005629446084487056
1010,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//cannot occur,no,undetermined,0,0,0,no,0.0010773201723064106,no,0.0014433891546509461,no,0.0013764189786304166,no,0.0012144599243784347,no,0.0011481752272429636
1011,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This is not strictly true.  We actually just need to make sure that // it is ordered by root-entity PK and that that order-by comes before // any non-root-entity ordering...,no,undetermined,0,0,0,no,0.035266680369120326,no,0.012394257255503258,no,0.011733876779544876,no,0.011210697415406236,no,0.0108471867768914
1012,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// try ""get""",no,undetermined,0,0,0,no,0.0005098023282910339,no,0.0006022360598512734,no,0.0005682269276179382,no,0.0004904209319361502,no,0.00045246349128373457
1013,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// pass control along to the rest of the processing chain,no,undetermined,0,0,0,no,0.002442561672806741,no,0.003075908020261041,no,0.0030680690905460144,no,0.0026813509076020867,no,0.0025721277672542155
1014,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Set of EntityKeys of deleted objects,no,undetermined,0,0,0,no,0.0009832541971894974,no,0.0020139022405596635,no,0.0018381765801386502,no,0.0016471432818307974,no,0.0015713806232388423
1015,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// all this only really needs to consider properties // of this class, not its subclasses, but since we // are reusing code used for sequential selects, we // use the subclass closure",no,undetermined,0,0,0,no,0.2934195054287693,no,0.3012529108954595,no,0.2937727929869407,no,0.3005793324664059,no,0.30515369864741104
1016,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// A list of collection wrappers that were instantiating during result set // processing, that we will need to initialize at the end of the query",no,undetermined,0,0,0,no,0.019813206213849497,no,0.01237174911906884,no,0.011745645378634123,no,0.011194895433154108,no,0.010827751976943736
1017,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*protected void initPropertyPaths(
			final String path,
			final Type type,
			final String[] columns,
			final String[] formulaTemplates,
			final Mapping factory)
	throws MappingException {
		//addFormulaPropertyPath(path, type, formulaTemplates);
		initPropertyPaths(path, type, columns, formulaTemplates, factory);
	}*/",no,undetermined,0,0,0,no,0.0026369749986004444,no,0.006397124671002107,no,0.005554083673069137,no,0.005212296949271855,no,0.0053091033954882575
1018,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Downgrade locks,no,undetermined,0,0,0,no,0.0017665538477197778,no,0.0015266385729560234,no,0.0013801007605692606,no,0.0012752651601394013,no,0.0011736830573918912
1019,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//( (Column) model.getTable().getPrimaryKey().getColumnIterator().next() ).getName();,no,undetermined,0,0,0,no,0.01738423711619932,no,0.01236116598478554,no,0.011756640040056186,no,0.011203630295004348,no,0.010825840302127625
1020,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// do nothing...,no,undetermined,0,0,0,no,0.003567039198701599,no,0.0035809063232813327,no,0.0032638962675140735,no,0.0029708308193493326,no,0.0028174548825522466
1021,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Deserialize //-----------------------------------------------------------------------,no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
1022,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// do nothing...,no,undetermined,0,0,0,no,0.003567039198701599,no,0.0035809063232813327,no,0.0032638962675140735,no,0.0029708308193493326,no,0.0028174548825522466
1023,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Actually the semantics of the next three are really ""Bag"" // Note that, unlike objects, collection insertions, updates, // deletions are not really remembered between flushes. We // just re-use the same Lists for convenience.",no,undetermined,0,0,0,no,0.20538893559238913,no,0.1417014028856156,no,0.13538129043870006,no,0.1367579771726367,no,0.14833265539510934
1024,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	public boolean isShowSqlEnabled() { //		return showSql; //	} // //	public boolean isFormatSqlEnabled() { //		return formatSql; //	},no,undetermined,0,0,0,no,0.00023685684723920365,no,0.0002719040167310482,no,0.0002468888721890644,no,0.00021929462284429386,no,0.0001983317895798977
1025,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//with two-deep subqueries, the same alias would get generated for //both using the old method (criteriaQuery.generateSQLAlias()), so //that is now used as a fallback if the main criteria alias isn't set",no,undetermined,0,0,0,no,0.03267224861879061,no,0.01238291118272337,no,0.011716821292215362,no,0.01118149841676271,no,0.010816232114237292
1026,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*(array==null) ? tempList.size() :*/,no,undetermined,0,0,0,no,0.0017508591235122085,no,0.0014752541028131597,no,0.0014179004311870094,no,0.001288571111645824,no,0.001192326332912385
1027,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//sort the updates by pk,no,undetermined,0,0,0,no,0.001738970232045847,no,0.0012795741666007938,no,0.0011386827022400688,no,0.0010025821200468174,no,0.0009432898929853874
1028,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// should be safe to only ever expect EntityPersister references here,no,undetermined,0,0,0,no,0.011394958108324204,no,0.012368949764056386,no,0.011745513020993168,no,0.01120588162867348,no,0.0108488301454083
1029,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//optimize the hash size to eliminate a rehash.,no,undetermined,0,0,0,no,0.04389294872069465,no,0.012394428009480698,no,0.011713108526992245,no,0.011189262829207562,no,0.010817476215308864
1030,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//unwrap the object,no,undetermined,0,0,0,no,0.001331226139772193,no,0.0016727160957889695,no,0.0014405914366579873,no,0.001318364208286143,no,0.0012245788325488279
1031,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Impl note: takes advantage of the fact that an escpaed single quote // embedded within a quote-block can really be handled as two seperate // quote-blocks for the purposes of this method...,no,undetermined,0,0,0,no,0.0528824257947525,no,0.012381315586167285,no,0.011742563214738004,no,0.011191033291341823,no,0.01083575607512103
1032,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// again, CCS did not have such a concept; but a reasonable // proximity is to clear the cache after transaction *as long as* // the underlying cache is not JTA aware.",no,undetermined,0,0,0,no,0.00864409537315117,no,0.007420302321607255,no,0.006410051537546095,no,0.005850312477878857,no,0.005672299272246428
1033,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the entity associated with the current action.,no,undetermined,0,0,0,no,0.0034532249591995635,no,0.003095958237455998,no,0.003274344519509494,no,0.003223288700159578,no,0.0030570053857435385
1034,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this page intentionally left blank :),no,undetermined,0,0,0,no,0.006987414690471917,no,0.006622303216059846,no,0.006060409948688655,no,0.005801465676345023,no,0.005478696948570854
1035,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// unfortunately this stuff can't be cached because // it is per-invocation, not constant for the // QueryTranslator instance",no,undetermined,0,0,0,no,0.07670936703226966,no,0.01238955574738429,no,0.011738828667698256,no,0.011206905330066864,no,0.010854655928906108
1036,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//initialize + unwrap the object,no,undetermined,0,0,0,no,0.0009319711309482642,no,0.0010928969033526703,no,0.0009654586930888542,no,0.0008747181661649011,no,0.0008081982520548654
1037,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// SEQUENCE support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0039548795762178075,no,0.003972531411437183,no,0.0036820479027355195,no,0.003416146156083729,no,0.0032662128153709306
1038,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// do not do anything,no,undetermined,0,0,0,no,0.0031515158929543,no,0.0025528443290201235,no,0.002250043119013323,no,0.0020644003434532013,no,0.0019496735421647012
1039,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we can't batch joined inserts, *especially* not if it is an identity insert; // nor can we batch statements where the expectation is based on an output param",no,undetermined,0,0,0,no,0.025554162953506043,no,0.012387377529838301,no,0.011721178027290337,no,0.011207829055986331,no,0.010824506203132698
1040,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//,no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
1041,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// unfortunately this stuff can't be cached because // it is per-invocation, not constant for the // QueryTranslator instance",no,undetermined,0,0,0,no,0.07670936703226966,no,0.01238955574738429,no,0.011738828667698256,no,0.011206905330066864,no,0.010854655928906108
1042,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//return the proxied object,no,undetermined,0,0,0,no,0.0034307419481675776,no,0.0030746140590105302,no,0.002694100722813015,no,0.0025297699126782926,no,0.0024148942133190012
1043,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// else no collection element, but also no owner",no,undetermined,0,0,0,no,0.0016119153818142066,no,0.0015955452305521569,no,0.0010577218508957286,no,0.0010426918259561879,no,0.0009825231777507285
1044,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ignore,no,undetermined,0,0,0,no,0.00014335230378915544,no,0.00013958636484248836,no,0.00012005421643621465,no,0.00010252236131852231,no,9.386482826389979e-05
1045,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we have the form: trim(trimSource) //      so we trim leading and trailing spaces // EARLY EXIT!!!!,no,undetermined,0,0,0,no,0.0031737077627501257,no,0.007072870948504154,no,0.006736398759270806,no,0.006413230456513353,no,0.006150561174637968
1046,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//overwrite old proxy,no,undetermined,0,0,0,no,0.00040627811901457943,no,0.00039841468138852496,no,0.0003518438446601687,no,0.0003106601724400857,no,0.00028574557593417503
1047,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// the MRU cache used to keep hard references to the most recently used query plans; // note : LRU here is a bit of a misnomer, it indicates that LRU entries are removed, the // actual kept entries are the MRU entries",no,undetermined,0,0,0,no,0.020308598948205095,no,0.012382263600667145,no,0.011711096491103022,no,0.011203668024108602,no,0.010845925938971742
1048,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// early exit...,no,undetermined,0,0,0,no,0.0005905483870258867,no,0.0006314912289696719,no,0.0005659715806632397,no,0.0005143622300302791,no,0.0004802970847279881
1049,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Handles things like: // a and b or c // a and ( b or c ) // not a and not b // not ( a and b ) // x between y and z            (overloaded ""and"") // x in ( a, b, c )             (overloaded brackets) // not not a // a is not null                (overloaded ""not"") // etc...... // and expressions like // foo = bar                    (maps to: foo.id = bar.id) // foo.Bar = 'foo'              (maps to: foo.bar = 'foo') // foo.Bar.Baz = 1.0            (maps to: foo.bar = bar.id and bar.baz = 1.0) // 1.0 = foo.Bar.Baz            (maps to: bar.baz = 1.0 and foo.Bar = bar.id) // foo.Bar.Baz = a.B.C          (maps to: bar.Baz = b.C and foo.Bar = bar.id and a.B = b.id) // foo.Bar.Baz + a.B.C          (maps to: bar.Baz + b.C and foo.Bar = bar.id and a.B = b.id) // ( foo.Bar.Baz + 1.0 ) < 2.0  (maps to: ( bar.Baz + 1.0 ) < 2.0 and foo.Bar = bar.id)",no,undetermined,0,0,0,no,0.013830771397042653,no,0.012392423592736866,no,0.011742176217302551,no,0.01120934022441685,no,0.01083791307700421
1050,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// or should it actually throw an exception?,no,undetermined,0,0,0,no,0.06867312452831048,no,0.012368631740737027,no,0.01175530390190097,no,0.011172951923194296,no,0.01082696498049054
1051,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// both many-to-one and one-to-one are represented as a // Property.  EntityPersister is relying on this value to // determine ""lazy fetch groups"" in terms of field-level // interception.  So we need to make sure that we return // true here for the case of many-to-one and one-to-one // with lazy=""no-proxy"" // // * impl note - lazy=""no-proxy"" currently forces both // lazy and unwrap to be set to true.  The other case we // are extremely interested in here is that of lazy=""proxy"" // where lazy is set to true, but unwrap is set to false. // thus we use both here under the assumption that this // return is really only ever used during persister // construction to determine the lazy property/field fetch // groupings.  If that assertion changes then this check // needs to change as well.  Partially, this is an issue with // the overloading of the term ""lazy"" here...",no,undetermined,0,0,0,no,0.3401073053274159,no,0.2372329740728135,no,0.2293138078276569,no,0.2306199047654608,no,0.25543364024199683
1052,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The property is a component...,no,undetermined,0,0,0,no,0.02290286076400993,no,0.010470738134535038,no,0.009636712320580434,no,0.009152699646438264,no,0.008726283765504253
1053,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// the ids are fully resolved, so compare them with isDirty(), not isModified()",no,undetermined,0,0,0,no,0.026662324535053298,no,0.01239599377042197,no,0.011746998853184847,no,0.011195910026767116,no,0.01084031167490538
1054,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//cant instantiate,no,undetermined,0,0,0,no,0.0008937637327832024,no,0.0011762566210731895,no,0.0010799624103309637,no,0.0009832439120578164,no,0.0009273829829301243
1055,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//QueryJoinFragment join = q.createJoinFragment(useThetaStyleJoin);,no,undetermined,0,0,0,no,0.0020949686365327558,no,0.0014499790146454185,no,0.0013523889456682544,no,0.0012039679113603435,no,0.0010680803887685812
1056,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if it is a property of an embedded component, invoke on the ""identifier""",no,undetermined,0,0,0,no,0.013537494386766913,no,0.007681222394156669,no,0.007086949119508501,no,0.006537353241955537,no,0.006096740042818701
1057,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// SUBCLASSES,no,undetermined,0,0,0,no,0.00036711223931474473,no,0.0009197377428884206,no,0.0008693654544301822,no,0.0007776411144452777,no,0.0007197862972447588
1058,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// otherwise:,no,undetermined,0,0,0,no,0.0036483121893574207,no,0.004151643125766062,no,0.002060304018365092,no,0.001725480114648468,no,0.0016262295650988695
1059,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// starts with the name of a mapped class (new style),no,undetermined,0,0,0,no,0.006956240078380642,no,0.012391198753405578,no,0.011717007023842079,no,0.011203289997688494,no,0.010810737702834099
1060,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//treat it just like a new collection,no,undetermined,0,0,0,no,0.024007744825758588,no,0.01239043263786881,no,0.011733900292114964,no,0.011200786802440852,no,0.010815859006687651
1061,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// We must return a valid RDMS/RSA command from this method to // prevent RDMS/RSA from issuing *ERROR 400,no,undetermined,0,0,0,no,0.06548264758529251,no,0.012396639690235309,no,0.01176167842166316,no,0.011196063533457267,no,0.010845645442569728
1062,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// skip finalize methods,no,undetermined,0,0,0,no,0.0014391549220024369,no,0.00044484871531037215,no,0.00039044086286634124,no,0.00035078289882958867,no,0.000317707607677337
1063,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// return the (fully resolved) identifier value, but do not resolve // to the actual referenced entity instance // NOTE: the owner of the association is not really the owner of the id!",no,undetermined,0,0,0,no,0.030927917268196645,no,0.012370758119975627,no,0.011721784032712151,no,0.011191540573353916,no,0.010818235975346929
1064,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//do this work only at the very highest level of the load //don't let this method be called recursively,no,undetermined,0,0,0,no,0.19332518597405998,no,0.12468953736018107,no,0.12742199744485616,no,0.12469226142758497,no,0.1238830733941062
1065,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//	public static JDBCException newJDBCException(String string, SQLException root, String sql) { //		string = string + "" ["" + sql + ']'; //		log.error(string, root); //		logExceptions(root); //		return new JDBCException(string, root, sql); //	} // //	public static JDBCException newJDBCException(String string, SQLException root) { //		log.error(string, root); //		logExceptions(root); //		return new JDBCException(string, root); //	}",no,undetermined,0,0,0,no,0.003146913854410182,no,0.0027306164975171225,no,0.002505468332905269,no,0.0023189621884324363,no,0.002167342351692448
1066,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//note that each iteration of the loop may add new elements,no,undetermined,0,0,0,no,0.004795010448423407,no,0.0047506770340842415,no,0.004347731542773797,no,0.003997241504390914,no,0.003725995618240369
1067,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if we know there is exactly 1 row, we can skip. // it would be great if we could _always_ skip this; // it is a problem for <key-many-to-one>",no,undetermined,0,0,0,no,0.0913733860671657,no,0.012380740259545516,no,0.011720224435351721,no,0.0112006188306501,no,0.010843124076621857
1068,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/* This can never happen because this rule will always eliminate the child NOT.
			case NOT:
				return x.getFirstChild();			// (NOT (NOT x) ) => (x)
*/",no,undetermined,0,0,0,no,0.04144233544753056,no,0.012397708644755576,no,0.011750868933073255,no,0.011206657933609001,no,0.01084364527047028
1069,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we need to obtain the lock before any actions are // executed, since this may be an inverse=""true"" // bidirectional association and it is one of the // earlier entity actions which actually updates // the database (this action is resposible for // second-level cache invalidation only)",no,undetermined,0,0,0,no,0.08019859527690544,no,0.012378084540533334,no,0.011722977510861389,no,0.011189437881383244,no,0.01082362880670843
1070,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// HHH-2481 make sure the callback gets cleared, otherwise the instance stays in a static thread local.",no,undetermined,0,0,0,no,0.006133924400275715,no,0.007982294467229591,no,0.0063160640572988294,no,0.005459632259689128,no,0.0051794186917992514
1071,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//no point doing this if NONE was requested,no,undetermined,0,0,0,no,0.0005071076921465515,no,0.0008319050525187246,no,0.0009090352400002761,no,0.0008236357224263782,no,0.0007739904179912651
1072,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// while constructor is running,no,undetermined,0,0,0,no,0.011623648049526605,no,0.012308172272640604,no,0.01173864805721277,no,0.01119891243992195,no,0.010847216901396334
1073,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The keyword used to specify a nullable column.,no,undetermined,0,0,0,no,0.003145223075136515,no,0.0035763987783479774,no,0.004153525824626971,no,0.0038618459782597428,no,0.0037241204669434666
1074,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// while constructor is running,no,undetermined,0,0,0,no,0.011623648049526605,no,0.012308172272640604,no,0.01173864805721277,no,0.01119891243992195,no,0.010847216901396334
1075,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//there is probably a row there, so try to update //if no rows were updated, we will find out",no,undetermined,0,0,0,no,0.003784145205588691,no,0.004312021855223792,no,0.0038918378139379886,no,0.003617541938030557,no,0.0033452153282806413
1076,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// note: interface is assumed to already contain HibernateProxy.class,no,undetermined,0,0,0,no,0.006585731082251975,no,0.006489070556411903,no,0.006133696003518537,no,0.005732644644918321,no,0.006316746698638501
1077,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//do nothing to avoid a lazy property initialization,no,undetermined,0,0,0,no,0.00799034730180982,no,0.007508585553971475,no,0.006855282593381772,no,0.006417535158695466,no,0.006001272616596585
1078,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// interfaces // arguments,no,undetermined,0,0,0,no,0.0007323555137631195,no,0.0008589878989883459,no,0.0007761605418196113,no,0.0006864409512366134,no,0.0006411359780823502
1079,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Not called at runtime so doesn't matter if its slow :),no,undetermined,0,0,0,no,0.00975011326529082,no,0.009322533594916388,no,0.008340651960037557,no,0.007780379192150813,no,0.007573958951908832
1080,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//TODO!,no,undetermined,0,0,0,no,0.011655632226661484,no,0.01236577759846885,no,0.011721998039486535,no,0.011178854171809327,no,0.010821618193954203
1081,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Chop off the rest of the tree.,no,undetermined,0,0,0,no,0.005484120235191848,no,0.004924480445461695,no,0.004592329103611972,no,0.004122818585717901,no,0.003964016150156745
1082,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Get the caller,no,undetermined,0,0,0,no,0.001525450114600567,no,0.0017877707137653358,no,0.001793923988386415,no,0.001618681416097331,no,0.0015273660827857078
1083,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// prefer re-generation of identity!,no,undetermined,0,0,0,no,0.0009867328854458496,no,0.0010189540640811675,no,0.0014699447813363016,no,0.0013453537256600228,no,0.0015053427334332033
1084,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Get the caller principals,no,undetermined,0,0,0,no,0.001525450114600567,no,0.0017877707137653358,no,0.001793923988386415,no,0.001618681416097331,no,0.0015273660827857078
1085,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// refresh doesn't cascade to uninitialized collections,no,undetermined,0,0,0,no,0.0066298516301381005,no,0.006752625946603123,no,0.00670033006948436,no,0.006315683602162126,no,0.005902396690917427
1086,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//private static final Alias DEFAULT_ALIAS = new Alias(10, null);",no,undetermined,0,0,0,no,0.0036998226275714295,no,0.004300413778674837,no,0.0041878560376578935,no,0.003947588478985682,no,0.0037625417758493864
1087,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//do nothing,no,undetermined,0,0,0,no,0.003567039198701599,no,0.0035809063232813327,no,0.0032638962675140735,no,0.0029708308193493326,no,0.0028174548825522466
1088,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*public boolean isNonExistant(EntityKey key) {
		return nonExistantEntityKeys.contains(key);
	}*/",no,undetermined,0,0,0,no,0.0004105852896867492,no,0.00033684755964938937,no,0.0002990868447752988,no,0.0002638020007103277,no,0.00023724553851389352
1089,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// generate id select fragment and then property select fragment for // each expression, just like generateSelectFragments().",no,undetermined,0,0,0,no,0.05031694370639829,no,0.012390793313105391,no,0.011721736330300356,no,0.011182868250678473,no,0.010843693493747215
1090,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*public boolean isNonExistant(EntityUniqueKey key) {
		return nonExistentEntityUniqueKeys.contains(key);
	}*/",no,undetermined,0,0,0,no,0.0004105852896867492,no,0.00033684755964938937,no,0.0002990868447752988,no,0.0002638020007103277,no,0.00023724553851389352
1091,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//special case ... this is the leaf of the containment graph, even though not immutable",no,undetermined,0,0,0,no,0.015608372498667589,no,0.012407613611032207,no,0.011751906950943872,no,0.011206829498596672,no,0.010844562044892694
1092,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// iterate all the entities currently associated with the persistence context.,no,undetermined,0,0,0,no,0.01026893577205925,no,0.012344039366320112,no,0.011727061884944316,no,0.011204828497412549,no,0.010840275824120232
1093,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// According to both the ANSI-SQL and JPA specs, trim takes a variable number of parameters between 1 and 4. // at least one paramer (trimSource) is required.  From the SQL spec: // // <trim function> ::= //      TRIM <left paren> <trim operands> <right paren> // // <trim operands> ::= //      [ [ <trim specification> ] [ <trim character> ] FROM ] <trim source> // // <trim specification> ::= //      LEADING //      | TRAILING //      | BOTH // // If <trim specification> is omitted, BOTH is assumed. // If <trim character> is omitted, space is assumed",no,undetermined,0,0,0,no,0.001813787660636531,no,0.01037388985491815,no,0.009888133916620617,no,0.009432125289439623,no,0.009137087723730414
1094,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// does this entity entry pertain to the entity persister in which we are interested (owner)?,no,undetermined,0,0,0,no,0.013751430812107146,no,0.012327923456567538,no,0.011748485968977276,no,0.01119658781718359,no,0.010833833388860703
1095,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/////////////////////////////////////////////////////////////////////// // Prepare persisters and link them up with their cache // region/access-strategy,no,undetermined,0,0,0,no,0.009337307881120452,no,0.012371642802180387,no,0.011739600292087059,no,0.011199361688533754,no,0.010841995884766911
1096,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//check if the managed object is the parent,no,undetermined,0,0,0,no,0.005437969522221229,no,0.006102147556808583,no,0.005915094657363804,no,0.005389393070573306,no,0.005117666665473793
1097,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Allows various loaders (ok mainly the QueryLoader :) to check // whether scrolling of their result set should be allowed. // // By default it is allowed.,no,undetermined,0,0,0,no,0.009181493864163868,no,0.009431864794774035,no,0.009364919086131613,no,0.008766088177114035,no,0.00953901512221042
1098,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// otherwise, the proxy was pruned during the serialization process",no,undetermined,0,0,0,no,0.0008913502150865601,no,0.000806090946632654,no,0.0005888010697587659,no,0.0005611746344409259,no,0.000519352103928551
1099,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// does not handle arrays (thats ok, cos they can't be lazy) // or newly instantiated collections, so we can do the cast",no,undetermined,0,0,0,no,0.06388112322470071,no,0.01237131894248869,no,0.011731375711026913,no,0.01120518865750921,no,0.010853994373383491
1100,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// adds remove as a sort-of alias for delete...,no,undetermined,0,0,0,no,0.009972171508785502,no,0.009559351749832766,no,0.008633317539698487,no,0.008023146207217936,no,0.0077051672792635105
1101,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//unquotedIdentifierColumnName = identifierColumnAlias;,no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
1102,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//return lhsPersister.getSubclassPropertyColumnNames(property);,no,undetermined,0,0,0,no,0.0005366879860548516,no,0.00042593522862289124,no,0.0003723172619959361,no,0.00033789305993217665,no,0.0003126176470840074
1103,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// saves / updates don't cascade to uninitialized collections,no,undetermined,0,0,0,no,0.0040951189592291,no,0.003323783124695008,no,0.00316298581718917,no,0.0028604316118105793,no,0.002672579443281728
1104,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//EARLY EXIT,no,undetermined,0,0,0,no,0.0005905483870258867,no,0.0006314912289696719,no,0.0005659715806632397,no,0.0005143622300302791,no,0.0004802970847279881
1105,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// create our own copy of the user-supplied tuplizer impl map,no,undetermined,0,0,0,no,0.0025908913954712717,no,0.0027428017463238382,no,0.0024452710881386177,no,0.0022569170996783743,no,0.002379969664820163
1106,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if the identifier is quoted, remove the quotes",no,undetermined,0,0,0,no,0.005101853963527457,no,0.005388370249770632,no,0.005223119999821655,no,0.0047809489052428366,no,0.0045085037356442665
1107,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we can do the cast since orphan-delete does not apply to: // 1. newly instantiated collections // 2. arrays (we can't track orphans for detached arrays),no,undetermined,0,0,0,no,0.029090113899694663,no,0.012396324502890832,no,0.011760143805161227,no,0.011199829264423459,no,0.010841866495114526
1108,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//truncate the identifier to the max alias length, less the suffix length",no,undetermined,0,0,0,no,0.003361278042724173,no,0.0036564806959499545,no,0.003307327865298645,no,0.0030151413240097043,no,0.002864759552300622
1109,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
1110,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//full joins are not supported.. yet!,no,undetermined,0,0,0,no,0.043171700480542835,no,0.012368924391088384,no,0.011711303093176691,no,0.011206680339913884,no,0.010820661225744186
1111,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		 You may still have other ResultSets or update counts left to process here //		 but you can't do it now or the ResultSet you just got will be closed,no,undetermined,0,0,0,no,0.02223116792487464,no,0.012378896862354332,no,0.011741295230194208,no,0.011200999159889632,no,0.01084007557118338
1112,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// null is not considered the same type as Integer. //$NON-NLS-1 //$NON-NLS-1,no,undetermined,0,0,0,no,0.004514337326286164,no,0.003291818839064495,no,0.002822904017142717,no,0.002578885067411343,no,0.0034837250547426553
1113,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// properly handle property-ref-based associations,no,undetermined,0,0,0,no,0.004440996789481952,no,0.0022808931002983356,no,0.001735007894895061,no,0.0015737317003580759,no,0.001491923162052131
1114,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the outerJoinsAfterWhere needs to come before where clause to properly // handle dynamic filters,no,undetermined,0,0,0,no,0.014582675818350826,no,0.012376962532835599,no,0.011718341148205122,no,0.01120568952877388,no,0.010826993719600669
1115,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// determine the id getter and setter methods from the proxy interface (if any) // determine all interfaces needed by the resulting proxy,no,undetermined,0,0,0,no,0.004328551153022846,no,0.0035071426538539866,no,0.0032227288410098744,no,0.0030189851722973006,no,0.002800995579100265
1116,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//$NON-NLS-1,no,undetermined,0,0,0,no,0.0016091351235899116,no,0.0016956585586789513,no,0.0015395419759010338,no,0.0014137379987611187,no,0.0013435304587366133
1117,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// add another (inner) nested select // add the main query // close off the inner nested select,no,undetermined,0,0,0,no,0.002278694492027934,no,0.0022352477347743864,no,0.0019522677109214991,no,0.0017193666623723082,no,0.0016094652237552472
1118,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//$NON-NLS-1,no,undetermined,0,0,0,no,0.0016091351235899116,no,0.0016956585586789513,no,0.0015395419759010338,no,0.0014137379987611187,no,0.0013435304587366133
1119,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		origin.addDestination( destination ); // This was the cause of HHH-242 //		origin.setType( FROM_FRAGMENT );			// Set the parent node type so that the AST is properly formed. // The destination node will have all the FROM text. // The parent node is a collection join too (voodoo - see JoinProcessor),no,undetermined,0,0,0,no,0.007753816192554202,no,0.005126846201784422,no,0.004483366549288153,no,0.004163828035546973,no,0.0038163865228393917
1120,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//$NON-NLS-1,no,undetermined,0,0,0,no,0.0016091351235899116,no,0.0016956585586789513,no,0.0015395419759010338,no,0.0014137379987611187,no,0.0013435304587366133
1121,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// then handle any user-defined entity modes...,no,undetermined,0,0,0,no,0.005040524265102494,no,0.0038424443950850185,no,0.004318995609626167,no,0.0041244174958642065,no,0.0038968374413825262
1122,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//$NON-NLS-1,no,undetermined,0,0,0,no,0.0016091351235899116,no,0.0016956585586789513,no,0.0015395419759010338,no,0.0014137379987611187,no,0.0013435304587366133
1123,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0008158380563990274,no,0.0004622220704414844,no,0.0003947093598227315,no,0.00035164830917738625,no,0.00031812294261152036
1124,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// strip off any leading 'and' token,no,undetermined,0,0,0,no,0.0030083744403220486,no,0.0016424671599444887,no,0.00148275122032675,no,0.0013642912036874089,no,0.001275716576583418
1125,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// then the pojo tuplizer, using the dynamic-map tuplizer if no pojo representation is available",no,undetermined,0,0,0,no,0.001515541532498562,no,0.0017442954533989348,no,0.0017780732544741456,no,0.0017086406389142993,no,0.0015863720406097035
1126,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// if the condition is not already there...,no,undetermined,0,0,0,no,0.00544746951060209,no,0.003928567484179079,no,0.0036708158505516847,no,0.0033966992418342974,no,0.003208790700772838
1127,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// this has been shown to happen occasionally in rare cases // when using a transaction manager + transaction-timeout // where the timeout calls back through Hibernate's // registered transaction synchronization on a separate // ""reaping"" thread.  In cases where that reaping thread // executes through this block at the same time the main // application thread does we can get into situations where // these CMEs occur.  And though it is not ""allowed"" per-se, // the end result without handling it specifically is infinite // looping.  So here, we simply break the loop",no,undetermined,0,0,0,no,0.12053154170521828,no,0.10332316430126286,no,0.09801063000164148,no,0.011188191644593165,no,0.010821072501025734
1128,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//dontSpace.add(""'"");",no,undetermined,0,0,0,no,0.0018028323737446217,no,0.001823166990705323,no,0.0016184853580926925,no,0.0015035043781657673,no,0.0014228872698990747
1129,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//	public ComponentMetamodel(Component component, SessionFactoryImplementor sessionFactory) {",no,undetermined,0,0,0,no,0.015340087405251016,no,0.012404756391471582,no,0.01175387078905754,no,0.011209628570541407,no,0.01083936833430422
1130,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//for MySQL,no,undetermined,0,0,0,no,0.0005246332497998536,no,0.0018481344547403992,no,0.0016251268556031837,no,0.0014878676094625656,no,0.001374550947826662
1131,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Detect discriminator values...,no,undetermined,0,0,0,no,0.0013809348013297822,no,0.0015767203457579277,no,0.0014051605550279105,no,0.001269452320850049,no,0.0011987688938270764
1132,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/**
	 * Set a custom entity resolver. This entity resolver must be
	 * set before addXXX(misc) call.
	 * Default value is {@link org.hibernate.util.DTDEntityResolver}
	 *
	 * @param entityResolver entity resolver to use
	 */",no,undetermined,0,0,0,no,0.015300620197054986,no,0.012390091136506088,no,0.011732766717543714,no,0.011196429736145458,no,0.010837919228362055
1133,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Handle any filters applied to this collection,no,undetermined,0,0,0,no,0.01423430400095584,no,0.008763822601382086,no,0.006822115381062879,no,0.007355737495720166,no,0.00661192572130146
1134,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//handle a property-ref,no,undetermined,0,0,0,no,0.0012664137161409947,no,0.0005396519559129418,no,0.00037855984099454494,no,0.00033776719334674177,no,0.00031763698920071623
1135,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if we could not register a synchronization, //do the before/after completion callbacks //ourself (but we need to let jdbcContext //know that this is what we are going to //do, so it doesn't keep trying to register //synchronizations)",no,undetermined,0,0,0,no,0.08519007649429855,no,0.01239793131095965,no,0.011733790506155618,no,0.011183007447306088,no,0.010846226809021326
1136,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//HashMap columnsUnique = new HashMap();,no,undetermined,0,0,0,no,0.0012250978656954338,no,0.0016858716644635025,no,0.00157468290653214,no,0.0014350036279289812,no,0.001361108819505289
1137,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// then the pojo tuplizer, using the dynamic-map tuplizer if no pojo representation is available",no,undetermined,0,0,0,no,0.001515541532498562,no,0.0017442954533989348,no,0.0017780732544741456,no,0.0017086406389142993,no,0.0015863720406097035
1138,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//null caused some problems,no,undetermined,0,0,0,no,0.02683918979232092,no,0.01238192884816414,no,0.011741226943548094,no,0.011192878373574614,no,0.010826356383188419
1139,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// two conditions where we need to transform this to a theta-join syntax: //      1) 'elem' is the ""root from-element"" in correlated subqueries //      2) The DotNode.useThetaStyleImplicitJoins has been set to true //          and 'elem' represents an implicit join",no,undetermined,0,0,0,no,0.029282900014816343,no,0.012381063354796346,no,0.011732420772559152,no,0.011216313929508975,no,0.010831717222010099
1140,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*package*/,no,undetermined,0,0,0,no,0.0034329566677213947,no,0.003569072397892384,no,0.0033560416804782572,no,0.003095855193458484,no,0.0030481677094872563
1141,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// cascade the refresh prior to refreshing this entity,no,undetermined,0,0,0,no,0.0066604225706919365,no,0.006919519853710161,no,0.00844071316000885,no,0.008796077784229046,no,0.00824925948794364
1142,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//not sure if this would ever be null but wanted to be careful,no,undetermined,0,0,0,no,0.005802941756608714,no,0.006757820622972,no,0.006329019992650748,no,0.0058102453506962415,no,0.005499563498034982
1143,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Impl note: takes advantage of the fact that an escpaed single quote // embedded within a quote-block can really be handled as two seperate // quote-blocks for the purposes of this method...,no,undetermined,0,0,0,no,0.0528824257947525,no,0.012381315586167285,no,0.011742563214738004,no,0.011191033291341823,no,0.01083575607512103
1144,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//even on inverse=""true""",no,undetermined,0,0,0,no,0.009117040901943634,no,0.012399724671526098,no,0.011753818501530027,no,0.011206109323946304,no,0.010843035976492658
1145,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// PROPERTIES,no,undetermined,0,0,0,no,0.002769086247947564,no,0.0027472130994571136,no,0.0024584517939946096,no,0.0022565050745577166,no,0.002155903587709979
1146,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*package*/,no,undetermined,0,0,0,no,0.0034329566677213947,no,0.003569072397892384,no,0.0033560416804782572,no,0.003095855193458484,no,0.0030481677094872563
1147,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we need to dirty check many-to-ones with not-found=""ignore"" in order  // to update the cache (not the database), since in this case a null // entity reference can lose information",no,undetermined,0,0,0,no,0.13368653605113764,no,0.08709642416580994,no,0.011721884520945974,no,0.011211643912121433,no,0.010837020793529209
1148,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*package*/,no,undetermined,0,0,0,no,0.0034329566677213947,no,0.003569072397892384,no,0.0033560416804782572,no,0.003095855193458484,no,0.0030481677094872563
1149,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// register hibernate types for default use in scalar sqlquery type auto detection,no,undetermined,0,0,0,no,0.007998928201127917,no,0.01239365383698329,no,0.01171684849094349,no,0.011194320163381129,no,0.010819154652100968
1150,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If true then execute db updates, otherwise just generate and display updates",no,undetermined,0,0,0,no,0.00355846132877875,no,0.0028133503644815617,no,0.002173762887403142,no,0.001886289417773682,no,0.0017673645212660702
1151,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// SQLFunction implementation,no,undetermined,0,0,0,no,0.011654097931266767,no,0.012362946118485506,no,0.011729176290080516,no,0.011187856792255672,no,0.010825633769515314
1152,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we only release the connection,no,undetermined,0,0,0,no,0.015153016218504874,no,0.01238520355134916,no,0.011739861793192927,no,0.011204282002857415,no,0.010814182942142741
1153,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//we only check the version when _upgrading_ lock modes,no,undetermined,0,0,0,no,0.003191316505788511,no,0.0034686610640632595,no,0.003439193520703824,no,0.003164961338433473,no,0.002954154174693915
1154,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// deprecated option...,no,undetermined,0,0,0,no,0.007863816553860594,no,0.009049635293604488,no,0.009026486402895832,no,0.008652061978469912,no,0.008305451854981528
1155,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// only carry on if the method has no parameters,no,undetermined,0,0,0,no,0.001144951647895882,no,0.0014241834192548046,no,0.0013029204847088349,no,0.0012075599335160162,no,0.0011142242852350004
1156,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*NativeSQLQueryReturn*/,no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
1157,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//woops we got an instance of another class hierarchy branch,no,undetermined,0,0,0,no,0.004194864013552488,no,0.005354815592439983,no,0.005025241954285269,no,0.0047168749519810715,no,0.004497711028208455
1158,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// COMPOSITE-ID,no,undetermined,0,0,0,no,0.011229063345172107,no,0.007453030319367326,no,0.0069144633099179524,no,0.006359687188983733,no,0.006109666384304523
1159,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Create an OuterJoinGenerator for this dialect.,no,undetermined,0,0,0,no,0.053479872434663865,no,0.012394440717967532,no,0.011759565904010493,no,0.011215875088768864,no,0.010849991764478631
1160,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if an exception occurs during flush, user must call rollback()",no,undetermined,0,0,0,no,0.003224343755210936,no,0.0026673835479808787,no,0.0023077715775912996,no,0.002409647418980682,no,0.002258274371814737
1161,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*<String>*/,no,undetermined,0,0,0,no,0.003436374555191641,no,0.0032975115234361225,no,0.003080286446453743,no,0.002876729413996237,no,0.0027554602814707815
1162,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//actually, this last test is probably unnecessary, since  //beforeCompletion() doesn't get called during rollback",no,undetermined,0,0,0,no,0.023957735681511598,no,0.012409844319581084,no,0.011753471702621298,no,0.011187473762917548,no,0.010835598315264131
1163,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we need to step through the rows one row at a time (slow),no,undetermined,0,0,0,no,0.003508404522279806,no,0.004807156141453084,no,0.004257197743904062,no,0.003691631427762527,no,0.003592536546433082
1164,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//final boolean forceCacheRefresh,",no,undetermined,0,0,0,no,4.831321800315259e-05,no,0.00011866707450128473,no,0.00010480601569777407,no,9.045731615516229e-05,no,8.140465500433203e-05
1165,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0020829320059605493,no,0.0029240203399885025,no,0.002940671970198513,no,0.0027184969999099794,no,0.0025559954639326073
1166,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Create an DotNode AST for the path and resolve it.,no,undetermined,0,0,0,no,0.0189509036640687,no,0.009020366843059865,no,0.008293032916236908,no,0.007919963161413029,no,0.007641618905502832
1167,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//its already loaded so don't need to hydrate it,no,undetermined,0,0,0,no,0.007085941379061629,no,0.005165225528181911,no,0.004207233194794754,no,0.003748645797011153,no,0.003497852154757525
1168,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if an exception occurs during flush, user must call rollback()",no,undetermined,0,0,0,no,0.003224343755210936,no,0.0026673835479808787,no,0.0023077715775912996,no,0.002409647418980682,no,0.002258274371814737
1169,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// orphans should be deleted during delete,no,undetermined,0,0,0,no,0.006982401813112344,no,0.01237298208112971,no,0.011712704645783202,no,0.011185109571108747,no,0.010826755489085765
1170,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// swallow it, and continue to roll back JTA transaction",no,undetermined,0,0,0,no,0.006225970851354686,no,0.004923707069697858,no,0.004256001359693403,no,0.0035849491375453584,no,0.0034049574692175543
1171,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// here, we have two possibilities: // 		1) the property-name matches the explicitly identifier property name //		2) the property-name matches the implicit 'id' property name",no,undetermined,0,0,0,no,0.011251367035499749,no,0.010481430294426743,no,0.009955713165438935,no,0.009310293499103514,no,0.008983460734328992
1172,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// so the transaction is already rolled back, by JTA spec",no,undetermined,0,0,0,no,0.004948821092935725,no,0.003617394212812631,no,0.003409418971341573,no,0.002822140618788386,no,0.0026278880513245727
1173,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we found a collection element in the result set,no,undetermined,0,0,0,no,0.0023908256589949667,no,0.0021157182639874868,no,0.0015477454411093104,no,0.0016265358932245064,no,0.0016002125338086548
1174,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this method is a noop if there is a Synchronization!,no,undetermined,0,0,0,no,0.00477810843580832,no,0.004332423430855435,no,0.00401370086050617,no,0.003706339190630934,no,0.0033210763842255325
1175,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// register the standard dialect resolver,no,undetermined,0,0,0,no,0.0016499241311526609,no,0.0035730429058616433,no,0.003146531750242137,no,0.002912744901162804,no,0.0027802176197122296
1176,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// why is all others non final ?,no,undetermined,0,0,0,no,0.1694662773711141,no,0.20608382082881227,no,0.20834729359175908,no,0.21173835632998522,no,0.21242585467836986
1177,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// even though we might find a pre-existing element by join path, we may not be able to reuse it...",no,undetermined,0,0,0,no,0.020298268558902023,no,0.012379590180937709,no,0.011735172135814747,no,0.01119374076123846,no,0.010812820671122388
1178,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// HELLA IMPORTANT OPTIMIZATION!!!,no,undetermined,0,0,0,no,0.002054100624274471,no,0.0055945146877059435,no,0.005590445534805531,no,0.005134233034937132,no,0.0049439536646474335
1179,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//include the discriminator and class-level where, but not filters",no,undetermined,0,0,0,no,0.011508159606851932,no,0.010013316026867645,no,0.009358618336369667,no,0.008607009287127874,no,0.008079622823926685
1180,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*return that.type.equals(type) && 
			EqualsHelper.equals(that.value, value);*/",no,undetermined,0,0,0,no,0.0018882477112401677,no,0.0014308856443861835,no,0.0012932821432077215,no,0.0011987621704606542,no,0.001119168477724804
1181,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//null child could occur for no from clause in a filter,no,undetermined,0,0,0,no,0.011440989377372665,no,0.009977652968850845,no,0.009262988032104678,no,0.009033549949555492,no,0.008801647794591768
1182,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The 'from element' that the property is in.,no,undetermined,0,0,0,no,0.011188286538892785,no,0.005942677881965551,no,0.0054813150824804275,no,0.0048817462668601826,no,0.004947169836852676
1183,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Since the result set cursor is always left at the first // physical row after the ""last processed"", we need to jump // back one position to get the key value we are interested // in skipping",no,undetermined,0,0,0,no,0.0008955458110074668,no,0.0010009199883576352,no,0.0009269595572606915,no,0.0007672330341924842,no,0.0007451682600786779
1184,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// WebSphere, however, is not a sane JEE/JTA container...",no,undetermined,0,0,0,no,0.03572659741807709,no,0.012396492063700876,no,0.011753202705981087,no,0.011184723114588438,no,0.010848076732961008
1185,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// loop through all the associated entities and make sure they have been // processed before the latest // batch associated with this entity type.,no,undetermined,0,0,0,no,0.011027394173266635,no,0.012407208791564907,no,0.011742360159982186,no,0.011203648857427627,no,0.010838337502632255
1186,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// for sane JEE/JTA containers, the transaction itself functions as its identifier...",no,undetermined,0,0,0,no,0.0017552787216999599,no,0.0013163256330994612,no,0.001104714050444046,no,0.0009389059315178307,no,0.000857138341448254
1187,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// First, try to find a matching constructor accepting a ViolatedConstraintNameExtracter param...",no,undetermined,0,0,0,no,0.0165148301940241,no,0.012377185234525377,no,0.01171954625117914,no,0.011183712129024534,no,0.010812598826296791
1188,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//swallow, the transaction was finished",no,undetermined,0,0,0,no,0.001262155204979594,no,0.0016378004276474199,no,0.001485475872086925,no,0.0012778056469477184,no,0.001201113979356757
1189,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//will be ignored, using the existing Entry instead",no,undetermined,0,0,0,no,0.0021264448414261452,no,0.0020995262970421227,no,0.001966767714505744,no,0.0017957185944610773,no,0.0017074293375770034
1190,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// 60 seconds,no,undetermined,0,0,0,no,0.005668261617847649,no,0.0010884151823004873,no,0.0010043857154733806,no,0.0009125922672012871,no,0.0008595328877158856
1191,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// this property belongs to the table and it is not specifically // excluded from optimistic locking by optimistic-lock=""false""",no,undetermined,0,0,0,no,0.027547887430546213,no,0.012389690006672562,no,0.011725001275109358,no,0.011188186584364088,no,0.010836079620822926
1192,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Don't hold a transactional lock for this ,no,undetermined,0,0,0,no,0.015837064190405255,no,0.01239870263424935,no,0.011745650479885305,no,0.011200493987996614,no,0.010842366398779904
1193,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// some collections are not lazy:,no,undetermined,0,0,0,no,0.03316272773038202,no,0.012387830784934916,no,0.011465314622877178,no,0.010560431439065699,no,0.010196870843446476
1194,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Fix up the resident flag,no,undetermined,0,0,0,no,0.024618625112006323,no,0.012381349959380212,no,0.011726691657717845,no,0.01118130085894363,no,0.010841455741316754
1195,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Does the LIMIT clause come at the start of the SELECT statement, rather than at the end?",no,undetermined,0,0,0,no,0.014798951601198526,no,0.01238869596863205,no,0.011753643064039783,no,0.011189475294733697,no,0.010827061383300848
1196,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// all AliasToEntityMapResultTransformer are considered equal ~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0003472972204062044,no,0.000307707597204221,no,0.00026908173497001346,no,0.00023474084900377778,no,0.00031808111892288766
1197,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//the following two lines were added to ensure that this.params is not null, which //can happen with two-deep nested subqueries",no,undetermined,0,0,0,no,0.038007808955303,no,0.012401970412787275,no,0.011761138297895553,no,0.011209554261949046,no,0.010843842732009548
1198,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Set the attributes of the property reference expression.,no,undetermined,0,0,0,no,0.010816832600901443,no,0.0077685561924738696,no,0.0071905607061349235,no,0.006817870676143765,no,0.006548810789637287
1199,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the current batch number is the latest batch for this entity type.,no,undetermined,0,0,0,no,0.016621015812565296,no,0.009605005075381971,no,0.011734342990486906,no,0.011187789964754566,no,0.010826409467769409
1200,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//take a snapshot,no,undetermined,0,0,0,no,0.001039068053112758,no,0.004272286463007222,no,0.007701389748677966,no,0.007583062441127938,no,0.007195919340124571
1201,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//we can inner join to superclass tables (the row MUST be there) //we can never inner join to subclass tables,no,undetermined,0,0,0,no,0.00954718227288056,no,0.007468096462368163,no,0.007068008138465791,no,0.006721435368875406,no,0.00624068176248566
1202,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Never evict this node,no,undetermined,0,0,0,no,0.011574811663189875,no,0.010274841681118104,no,0.009613848266213563,no,0.008675245054938352,no,0.008331491161257908
1203,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Does the collection referenced by this FromElement // specify an order-by attribute?  If so, attach it to // the query's order-by",no,undetermined,0,0,0,no,0.00594922032819717,no,0.005798204655874813,no,0.006898299882484446,no,0.006563025282233457,no,0.006005286036306889
1204,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Create the join element under the from element.,no,undetermined,0,0,0,no,0.005570969939958077,no,0.003467218231025944,no,0.003257987255882278,no,0.002969557668371523,no,0.00280001491089451
1205,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// for merging of versioned entities, we consider the version having // been changed only when: // 1) the two version values are different; //      *AND* // 2) The target actually represents database state! // // This second condition is a special case which allows // an entity to be merged during the same transaction // (though during a seperate operation) in which it was // originally persisted/saved",no,undetermined,0,0,0,no,0.008021709286602861,no,0.006592098281055593,no,0.0069480393733537095,no,0.007116628611036401,no,0.007233846665553696
1206,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Moved here from SelectClause [jsd],no,undetermined,0,0,0,no,0.17481111831342017,no,0.17970721859747635,no,0.17842511254260568,no,0.17789106975016472,no,0.17923249858576012
1207,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// pre-determine and cache the hashcode,no,undetermined,0,0,0,no,0.007923958805830683,no,0.00944700075135501,no,0.008853125415643958,no,0.008317414888992672,no,0.007993436637921788
1208,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,///////////////////////////////////////////////////////////////////////////,no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
1209,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// (NOT (BETWEEN a b) ) => (NOT_BETWEEN a b),no,undetermined,0,0,0,no,0.01273856196090466,no,0.007592660547669072,no,0.007134543804319075,no,0.006994236600285009,no,0.006666712014746609
1210,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Make sure the root node for the region exists and  // has a DataVersion that never complains,no,undetermined,0,0,0,no,0.004485611884874024,no,0.003721704888816079,no,0.003415869900829418,no,0.003139099931454416,no,0.0029332767911969026
1211,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//			ps.close(); //just close it; do NOT try to return it to the pool! //NOTE: early exit!,no,undetermined,0,0,0,no,0.00042833659486055803,no,0.0004512091059158795,no,0.0003882258629796821,no,0.00034465089939958465,no,0.00031774796361568215
1212,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// map of EntityMode -> Tuplizer,no,undetermined,0,0,0,no,0.0017036573352664887,no,0.0015702395462909005,no,0.0015738753858241692,no,0.0014368437610079209,no,0.0013259543426284565
1213,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Now write the values of fields onto the prepared statement,no,undetermined,0,0,0,no,0.0014706685604463194,no,0.00164456406031457,no,0.0014845745056922299,no,0.0013444273588938056,no,0.001285716551663589
1214,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this is a virtual id property...,no,undetermined,0,0,0,no,0.04685585490365957,no,0.012402686541312257,no,0.011716530459233125,no,0.011188621350167542,no,0.010814772229342868
1215,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Need to use the identifier type of the collection owner // since the incoming is value is actually the owner's id. // Using the collection's key type causes problems with // property-ref keys...,no,undetermined,0,0,0,no,0.03511574287384977,no,0.012375845605897119,no,0.01174997817412355,no,0.011206172520751843,no,0.010855626196504644
1216,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// create our own copy of the user-supplied tuplizer impl map,no,undetermined,0,0,0,no,0.0025908913954712717,no,0.0027428017463238382,no,0.0024452710881386177,no,0.0022569170996783743,no,0.002379969664820163
1217,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// The current_timestamp is more accurate, but only known to be supported // in SQL Server 7.0 and later (i.e., Sybase not known to support it at all)",no,undetermined,0,0,0,no,0.06101390814965151,no,0.012406882163570224,no,0.011737912278043938,no,0.01119440781321275,no,0.010835727629612912
1218,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//this one needed only for guessEntityMode(),no,undetermined,0,0,0,no,0.006286800034121658,no,0.006506817486250328,no,0.0060775332148370245,no,0.00567299250862006,no,0.005515044340313756
1219,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/* will check current level if some of them are not null
		 * or sublevels if they exist
		 */",no,undetermined,0,0,0,no,0.02569039572736624,no,0.012394802490541052,no,0.011751395704689513,no,0.011216606520407525,no,0.010838644332563268
1220,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Build the dynamic-map tuplizer...,no,undetermined,0,0,0,no,0.0005823646955344009,no,0.0010337048694534518,no,0.0009515220936423374,no,0.0008696930297714665,no,0.0008057880787089285
1221,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Pointbase has no known variation of a ""SELECT ... FOR UPDATE"" syntax...",no,undetermined,0,0,0,no,0.00167061980358711,no,0.0030313094246172197,no,0.0027781535637729504,no,0.0025890363046815103,no,0.0024599727304086207
1222,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// then dom4j tuplizer, if dom4j representation is available",no,undetermined,0,0,0,no,0.004292062627616075,no,0.004491540969952235,no,0.004685144252284122,no,0.004771769090727985,no,0.004536171358666318
1223,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// See if the entity is already bound to this session, if not look at the // entity identifier and assume that the entity is persistent if the // id is not ""unsaved"" (that is, we rely on foreign keys to keep // database integrity)",no,undetermined,0,0,0,no,0.03469507468102399,no,0.012394806609240661,no,0.011754368445690408,no,0.011211268557472025,no,0.010836446632342797
1224,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// do the work,no,undetermined,0,0,0,no,0.04385129993487352,no,0.012404414392825965,no,0.01175788050486877,no,0.011205497712077435,no,0.010853376651150728
1225,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// if its an uninitialized proxy it can't be transient,no,undetermined,0,0,0,no,0.0072185138097558155,no,0.005162452214980317,no,0.004416224034124745,no,0.004126941595675336,no,0.003949574452690711
1226,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// We've been here before,no,undetermined,0,0,0,no,0.0068566903435282964,no,0.007554135066286244,no,0.007621546536404054,no,0.007106079896932899,no,0.006758461026987706
1227,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//return the id, so we can use it to reset the proxy id //return result;",no,undetermined,0,0,0,no,0.014063503521164282,no,0.007466319290017869,no,0.006322879325470368,no,0.005692903506515655,no,0.005515907008262894
1228,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Build the dynamic-map tuplizer...,no,undetermined,0,0,0,no,0.0005823646955344009,no,0.0010337048694534518,no,0.0009515220936423374,no,0.0008696930297714665,no,0.0008057880787089285
1229,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// return false here, as most databases do not properly support this construct...",no,undetermined,0,0,0,no,0.061475770506519735,no,0.012381893732644816,no,0.011730055201609482,no,0.011183749573690858,no,0.010841096334453943
1230,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// do the work,no,undetermined,0,0,0,no,0.04385129993487352,no,0.012404414392825965,no,0.01175788050486877,no,0.011205497712077435,no,0.010853376651150728
1231,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is persister-centric and/or EntityInfo-centric ~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.018282380290023482,no,0.012366857640578125,no,0.011732658623545243,no,0.011212768405695154,no,0.01085412582294386
1232,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// put the ""standard"" tuplizers into the tuplizer map first",no,undetermined,0,0,0,no,0.001427418462001453,no,0.001391900932089075,no,0.0012785841512845343,no,0.0011763689076425036,no,0.00109325426096408
1233,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// hit the database, after checking the session cache for a snapshot",no,undetermined,0,0,0,no,0.007516554745291376,no,0.009571411472457419,no,0.010740875469643417,no,0.010861827609955476,no,0.010672550015324689
1234,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// found a ctor, but it was not publicly accessible so try to request accessibility",no,undetermined,0,0,0,no,0.0026879407478182103,no,0.0025607852788750176,no,0.0023497489366511607,no,0.002092979263932732,no,0.0019614566037150847
1235,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// our parent is another dot node, meaning we are being further dereferenced. // thus we need to generate a join unless the parent refers to the associated // entity's PK (because 'our' table would know the FK).",no,undetermined,0,0,0,no,0.03321438617845456,no,0.012387644127189972,no,0.011730146085612974,no,0.011187260756823487,no,0.010830419107515364
1236,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	private final SessionFactoryImplementor sessionFactory;,no,undetermined,0,0,0,no,0.0018361467968223788,no,0.0011242945256274323,no,0.0010307957372809634,no,0.0009412956367210834,no,0.0008771840534237128
1237,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Search for collections by reachability, updating their role. // We don't want to touch collections reachable from a deleted object",no,undetermined,0,0,0,no,0.006603323922093484,no,0.0039918314487398954,no,0.003418327504055081,no,0.0028474942199509614,no,0.002709040565609515
1238,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// cached for efficiency...,no,undetermined,0,0,0,no,0.00142674170670977,no,0.0011270865953418273,no,0.001022229481056602,no,0.0009297391261673631,no,0.0008714643354307446
1239,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// sql server just returns automatically,no,undetermined,0,0,0,no,0.008147470122001003,no,0.010872982662206767,no,0.009906724979466219,no,0.009580250164825525,no,0.009222317286619942
1240,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		this.sessionFactory = sessionFactory;,no,undetermined,0,0,0,no,0.00750941026105933,no,0.005773673692943488,no,0.003519514791930466,no,0.004331663216316976,no,0.004181650102589923
1241,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0016890513947217846,no,0.0022085496336859615,no,0.00290620522495488,no,0.0026987557040003846,no,0.0025405530545446584
1242,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//it was not embedded, so the argument is just an id",no,undetermined,0,0,0,no,0.01024432025674661,no,0.007918053910830497,no,0.007189712206712698,no,0.006654018921876819,no,0.00641215337938855
1243,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we have specialized case of a detached entity from the // perspective of the merge operation.  Specifically, we // have an incoming entity instance which has a corresponding // entry in the current persistence context, but registered // under a different entity instance",no,undetermined,0,0,0,no,0.010228946459850827,no,0.007531830139580977,no,0.009025685989947282,no,0.008487565476619618,no,0.008165107156902477
1244,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// then dom4j tuplizer, if dom4j representation is available",no,undetermined,0,0,0,no,0.004292062627616075,no,0.004491540969952235,no,0.004685144252284122,no,0.004771769090727985,no,0.004536171358666318
1245,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//where fragment must be empty!,no,undetermined,0,0,0,no,0.051581782153901974,no,0.012389748378694615,no,0.011718017173621557,no,0.011183066143743727,no,0.010830149759212468
1246,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// or its key changed,no,undetermined,0,0,0,no,0.00037200069398858626,no,0.00024198870635896774,no,0.00020444918638987092,no,0.00017845616721408455,no,0.00016113593870282654
1247,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//					int parameterStart = getWalker().getNumberOfParametersInSetClause(); //					List allParams = getIdSelectParameterSpecifications(); //					Iterator whereParams = allParams.subList( parameterStart, allParams.size() ).iterator();",no,undetermined,0,0,0,no,0.00593070381640742,no,0.004193869949656091,no,0.0036833967653238544,no,0.0034647471869698222,no,0.0032339527935578115
1248,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// put the ""standard"" tuplizers into the tuplizer map first",no,undetermined,0,0,0,no,0.001427418462001453,no,0.001391900932089075,no,0.0012785841512845343,no,0.0011763689076425036,no,0.00109325426096408
1249,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.003238682494816171,no,0.004528136907812,no,0.0044782607017309324,no,0.004152415733411792,no,0.004003805148058978
1250,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we will need to remove ye olde entries,no,undetermined,0,0,0,no,0.010497228701441956,no,0.009648747409155957,no,0.008430444141811214,no,0.007949195885303375,no,0.0076093113078865415
1251,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// add the current fragment to the THETA_JOINS node,no,undetermined,0,0,0,no,0.004562592396329709,no,0.0032913488842811617,no,0.003153649860878088,no,0.0029646233606532226,no,0.0028361748121186296
1252,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// force initialize!,no,undetermined,0,0,0,no,0.0007052433870746105,no,0.0006658381566669233,no,0.0006299804806859088,no,0.0005480539635858953,no,0.0005126825477445089
1253,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// lock doesn't cascade to uninitialized collections,no,undetermined,0,0,0,no,0.004591525571471802,no,0.004699581844966998,no,0.004768404814703519,no,0.004442785307996281,no,0.0041197043884360985
1254,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//return currentId;,no,undetermined,0,0,0,no,0.0006289585196806323,no,0.0005663290584469739,no,0.0005106554160617964,no,0.0004696337633428153,no,0.00043772048256313556
1255,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//unquotedIdentifierColumnName = null;,no,undetermined,0,0,0,no,0.000383803063198239,no,0.00025014428549086857,no,0.00022739031463802565,no,0.00020029935476155122,no,0.00018476817726937773
1256,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//reset the id,no,undetermined,0,0,0,no,0.005859192249269601,no,0.003322287586527711,no,0.00305718725410755,no,0.0027320995492908715,no,0.002617153170691481
1257,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//addInitializedCollection(collection, persister, id);",no,undetermined,0,0,0,no,0.02665392597796796,no,0.012369164050930978,no,0.011722107265200192,no,0.01119313872470979,no,0.010847338138628999
1258,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// CollectionPropertyMapping processes everything except 'index'.,no,undetermined,0,0,0,no,0.00277029449514427,no,0.005309681227523895,no,0.005011159586679933,no,0.004289827574486621,no,0.004085854655067479
1259,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if it is an uninitialized proxy, pointing //with this session, then when it is accessed, //the underlying instance will be ""contained""",no,undetermined,0,0,0,no,0.009413391987929223,no,0.007846797723818542,no,0.007816417451248862,no,0.0074132165945875505,no,0.006984600429846475
1260,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//reset the version,no,undetermined,0,0,0,no,0.001923972540037723,no,0.0013733598515979755,no,0.001300268855317947,no,0.0011601517989724048,no,0.001087574006870351
1261,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Note: this simply constructs a ""raw"" SQL_TOKEN representing the // where fragment and injects this into the tree.  This ""works""; // however it is probably not the best long-term solution. // // At some point we probably want to apply an additional grammar to // properly tokenize this where fragment into constituent parts // focused on the operators embedded within the fragment.",no,undetermined,0,0,0,yes,0.8353274487829863,yes,0.8247567126774396,yes,0.827425379154138,yes,0.8307176902816554,yes,0.8334484312498428
1262,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the default is to simply not lazy fetch properties for now...,no,undetermined,0,0,0,no,0.011657020449355397,no,0.007729978491176989,no,0.007264648320792648,no,0.006609474358275541,no,0.006404477062739273
1263,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aliases for identifier ( alias.id ); skip if the entity defines a non-id property named 'id',no,undetermined,0,0,0,no,0.023291405435990797,no,0.008022349706710024,no,0.007799136501560566,no,0.007460734223285981,no,0.007062169558141325
1264,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// else if it's elements changed,no,undetermined,0,0,0,no,0.0004228245631030228,no,0.0004140705293253185,no,0.000357612899585609,no,0.0003206667414783278,no,0.0002912714090531873
1265,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		 This assumes you will want to ignore any update counts ,no,undetermined,0,0,0,no,0.005583811641669572,no,0.004652785376407015,no,0.004210941488734872,no,0.004007746867795804,no,0.0038084720264213983
1266,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//ATTRIBUTES MAINTAINED BETWEEN FLUSH CYCLES,no,undetermined,0,0,0,no,0.009973499885565737,no,0.006533457698570401,no,0.005945580392976647,no,0.005640096353344843,no,0.005419464241409836
1267,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// now rebuild the insertions list. There is a batch for each entry in the name list.,no,undetermined,0,0,0,no,0.002360075148916133,no,0.0026985036272571773,no,0.0035930099492523355,no,0.003208258259140169,no,0.0029984205989328
1268,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// should be safe to only ever expect EntityPersister references here,no,undetermined,0,0,0,no,0.011394958108324204,no,0.012368949764056386,no,0.011745513020993168,no,0.01120588162867348,no,0.0108488301454083
1269,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if the original is a PersistentCollection, and that original // was not flagged as dirty, then reset the target's dirty flag // here after the copy operation. // </p> // One thing to be careful of here is a ""bare"" original collection // in which case we should never ever ever reset the dirty flag // on the target because we simply do not know...",no,undetermined,0,0,0,no,0.017282131597313437,no,0.012392576235791285,no,0.01172109372064518,no,0.01120060009488729,no,0.010843408075599869
1270,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// session-start/post-flush persistent state,no,undetermined,0,0,0,no,0.001339760278044351,no,0.0005789428398422671,no,0.0005713840210511454,no,0.0004946834834543198,no,0.0004630123424018233
1271,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.12765942815766487,no,0.09244265427783606,no,0.011756867153675004,no,0.011218035984311068,no,0.010846067512935315
1272,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// allow the CollectionSnapshot to be serialized,no,undetermined,0,0,0,no,0.009655763824302069,no,0.009059378556961487,no,0.008698698362001179,no,0.008362798521097267,no,0.008091934583032612
1273,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// first, break down the returns into maps keyed by alias // so that role returns can be more easily resolved to their owners",no,undetermined,0,0,0,no,0.04354572838753789,no,0.012367394465616495,no,0.011720962380886145,no,0.011186017844853445,no,0.010851119112539543
1274,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Add the second join, the one that ends in the destination table.",no,undetermined,0,0,0,no,0.004105993496769755,no,0.0032276380650590446,no,0.0033673020191967704,no,0.003126877020164319,no,0.002917171391915938
1275,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Generate an 2d array of column names, the first dimension is parallel with the // return types array.  The second dimension is the list of column names for each // type.",no,undetermined,0,0,0,no,0.010252309735403383,no,0.00972628629033789,no,0.009378418783724599,no,0.008880799744159857,no,0.008202026832356503
1276,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ATTRIBUTES USED ONLY DURING FLUSH CYCLE,no,undetermined,0,0,0,no,0.005020360804421108,no,0.007765588316911882,no,0.007460768298839868,no,0.0076697045653757795,no,0.007379145975780981
1277,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Create SQL_TOKEN nodes for the columns.,no,undetermined,0,0,0,no,0.0010417368324762881,no,0.008035198282377039,no,0.007298437650236762,no,0.006594538485261849,no,0.006333216958363716
1278,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// ""current"" means the reference that was found during flush() ",no,undetermined,0,0,0,no,0.002732711439828711,no,0.0022880477635569296,no,0.0019023480778069314,no,0.0018892301808154193,no,0.0017604271635093991
1279,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// RDMS has no known variation of a ""SELECT ... FOR UPDATE"" syntax...",no,undetermined,0,0,0,no,0.00167061980358711,no,0.0030313094246172197,no,0.0027781535637729504,no,0.0025890363046815103,no,0.0024599727304086207
1280,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ignore this row of results! Note the early exit,no,undetermined,0,0,0,no,0.002070382074165981,no,0.0027144746799447473,no,0.0023434696322038743,no,0.0021869088140514252,no,0.0020382823863647538
1281,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// not final-static to avoid possible classcast exceptions if using different oracle drivers.,no,undetermined,0,0,0,no,0.021962809864730936,no,0.012367627226726892,no,0.011713500425888614,no,0.011206204379859138,no,0.010834156470899066
1282,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// found a ctor, but it was not publicly accessible so try to request accessibility",no,undetermined,0,0,0,no,0.0026879407478182103,no,0.0025607852788750176,no,0.0023497489366511607,no,0.002092979263932732,no,0.0019614566037150847
1283,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Add the new node to the map so that we don't create it twice.,no,undetermined,0,0,0,no,0.004873905335867804,no,0.003722226982557375,no,0.003749386836546656,no,0.003527257859883318,no,0.0052027398190976435
1284,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		return getFactory().getSettings().getBytecodeProvider().getProxyFactoryFactory().buildProxyFactory();,no,undetermined,0,0,0,no,0.0006289585196806323,no,0.0005663290584469739,no,0.0005106554160617964,no,0.0004696337633428153,no,0.00043772048256313556
1285,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Oracle driver reports to support getGeneratedKeys(), but they only // support the version taking an array of the names of the columns to // be returned (via its RETURNING clause).  No other driver seems to // support this overloaded version.",no,undetermined,0,0,0,no,0.008952970810116739,no,0.012413213322649927,no,0.011741651047475894,no,0.011190450235159577,no,0.010831355051849048
1286,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//not final because proxy factory creation can fail,no,undetermined,0,0,0,no,0.0015292144778192864,no,0.002399183630495846,no,0.002036312568082739,no,0.001867007594215053,no,0.0017780319814046628
1287,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Register the FromElement with the FROM clause, now that we have the names and aliases.",no,undetermined,0,0,0,no,0.0024626027033963762,no,0.0033582724742497625,no,0.0030261396296734984,no,0.002857306709784631,no,0.0026873113468650236
1288,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// superclass entity-name,no,undetermined,0,0,0,no,0.0025587786923796556,no,0.001722126944165352,no,0.0020404019160337127,no,0.002350927883914909,no,0.0022461093360022976
1289,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// First allow the actual type to control the return value. (the actual underlying sqltype could actually be different),no,undetermined,0,0,0,no,0.04737991422314833,no,0.012378491731944719,no,0.011734415015829119,no,0.011183084821675567,no,0.01081048314002506
1290,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.12765942815766487,no,0.09244265427783606,no,0.011756867153675004,no,0.011218035984311068,no,0.010846067512935315
1291,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// cascade-save to collections AFTER the collection owner was saved,no,undetermined,0,0,0,no,0.0022474126469634982,no,0.003015857048096383,no,0.002683231553866883,no,0.002735191781964315,no,0.0024850885800815296
1292,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
1293,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// ""pass along"" our initial embedded parameter node(s) to the first generated // sql fragment so that it can be handled later for parameter binding...",no,undetermined,0,0,0,no,0.014021053176468961,no,0.010972022349263682,no,0.010657237182912576,no,0.010025087722077842,no,0.009802664388155006
1294,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// ""loaded"" means the reference that is consistent  // with the current database state",no,undetermined,0,0,0,no,0.002963262510139494,no,0.002226033470375312,no,0.0017978454582389762,no,0.0016066333594642662,no,0.0014858798801403784
1295,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// cache the actual id of the object, not the value of the // property-ref, which might not be initialized",no,undetermined,0,0,0,no,0.1000697160124973,no,0.05423616082166647,no,0.011725435497257993,no,0.011181860979065355,no,0.010819399895668698
1296,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//init the aliases, after initing the constructornode",no,undetermined,0,0,0,no,0.0009198827369009949,no,0.0009840656086744855,no,0.0009046363726378169,no,0.0008057795871826514,no,0.0007675416297910949
1297,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// You may still have other ResultSets or update counts left to process here  // but you can't do it now or the ResultSet you just got will be closed ,no,undetermined,0,0,0,no,0.02223116792487464,no,0.012378896862354332,no,0.011741295230194208,no,0.011200999159889632,no,0.01084007557118338
1298,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.12765942815766487,no,0.09244265427783606,no,0.011756867153675004,no,0.011218035984311068,no,0.010846067512935315
1299,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Multi-param string dialect functions...,no,undetermined,0,0,0,no,0.06368130080645681,no,0.012398382907445816,no,0.011712952182035104,no,0.011209956396902544,no,0.010848669278736352
1300,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// during flush, we navigate the object graph to // collections and decide what to do with them",no,undetermined,0,0,0,no,0.06054621184027586,no,0.012378867599894894,no,0.011738906660588792,no,0.011172483532860692,no,0.010809779235059163
1301,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// save() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0027541206416354064,no,0.0027332908471747646,no,0.002624391648055683,no,0.002378809589688473,no,0.002222438898780378
1302,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//collection.clearDirty(),no,undetermined,0,0,0,no,0.0035513000926513925,no,0.0018544164267232921,no,0.000403985511046133,no,0.0008268480676094154,no,0.00077831513293289
1303,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The 'from element' that represents the elements of the collection.,no,undetermined,0,0,0,no,0.0005795896212239787,no,0.00043803230013072223,no,0.000387054656141819,no,0.0003590329304735555,no,0.0003306202881256246
1304,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// legacy behavior (with no abstract attribute specified),no,undetermined,0,0,0,no,0.005250904412331272,no,0.0065377755707207216,no,0.00602374472040902,no,0.005590565458425837,no,0.005309319052871114
1305,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Constructors are always considered scalar results.,no,undetermined,0,0,0,no,0.003769602907479974,no,0.005783867737463834,no,0.005232946634569743,no,0.004864861407421958,no,0.006342126816214419
1306,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Get ready to start adding nodes.,no,undetermined,0,0,0,no,0.00904919547224853,no,0.007989403927114303,no,0.008412838867688411,no,0.007418821047998083,no,0.007094048214319435
1307,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//use the id column alias,no,undetermined,0,0,0,no,0.015099492914001903,no,0.012385794031753935,no,0.011755682946928683,no,0.011173199857447441,no,0.010820422629824768
1308,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Collection Types:,no,undetermined,0,0,0,no,0.007636276992548131,no,0.0053090368674953425,no,0.002431384266754828,no,0.003528145147870899,no,0.0033365526321085487
1309,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// #3 - note that this is also true of ""datetime - :param""...",no,undetermined,0,0,0,no,0.3221890461409099,no,0.1868286300712032,no,0.188792281696837,no,0.19423179855859055,no,0.19122441372332166
1310,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//collection.clearDirty(),no,undetermined,0,0,0,no,0.0035513000926513925,no,0.0018544164267232921,no,0.000403985511046133,no,0.0008268480676094154,no,0.00077831513293289
1311,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we don't need to worry about existing version being uninitialized // because this block isn't called by a re-entrant load (re-entrant // loads _always_ have lock mode NONE),no,undetermined,0,0,0,no,0.029515592133649772,no,0.012392750096265441,no,0.011734846684691446,no,0.011181933422789272,no,0.010833459193409431
1312,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//note: this affects the return value!,no,undetermined,0,0,0,no,0.01424002409475611,no,0.010868697580284609,no,0.010367447460086844,no,0.009929199977959217,no,0.009464904648472263
1313,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// isTransactionCallbackRegistered denotes whether any Hibernate // Transaction has registered as a callback against this // JDBCContext; only one such callback is allowed.  Directly // serializing this value causes problems with JDBCTransaction, // or really any Transaction impl where the callback is local // to the Transaction instance itself, since that Transaction // is not serialized along with the JDBCContext.  Thus we // handle that fact here explicitly...",no,undetermined,0,0,0,no,0.03404663622387395,no,0.012388174952749373,no,0.011735642756910329,no,0.011216701164427795,no,0.010828867699778078
1314,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// NOTE : evict() operates locally only (i.e., does not propogate // to any other nodes in the potential cluster).  This is // exactly what is needed when we destroy() here; destroy() is used // as part of the process of shutting down a SessionFactory; thus // these removals should not be propogated",no,undetermined,0,0,0,yes,0.7725844953968878,yes,0.7229324141808096,yes,0.7336054342858285,yes,0.7454672149922609,yes,0.7481966028901833
1315,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Generate the inner join -- The elements need to be joined to the collection they are in.,no,undetermined,0,0,0,no,0.01454035914893684,no,0.01064806673254603,no,0.00935795454749796,no,0.00960717721726484,no,0.008740062634104711
1316,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// otherwise, perform a ""deep equivalence"" check...",no,undetermined,0,0,0,no,0.0018772138639371453,no,0.0020015019616611233,no,0.0013698266735490611,no,0.001196315888856297,no,0.0011248554931882991
1317,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// might happen with a managed connection,no,undetermined,0,0,0,no,0.023638372919136997,no,0.01236290086459826,no,0.011737484730908167,no,0.011203331230782196,no,0.010814869260618266
1318,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Need to account for allowable '_' within the variant,no,undetermined,0,0,0,no,0.017188482560543183,no,0.012393916598763896,no,0.01172489177111753,no,0.01120151426922655,no,0.010819428222273482
1319,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// for expected parameter type injection, we expect that the lhs represents // some form of property ref and that the children of the in-list represent // one-or-more params.",no,undetermined,0,0,0,no,0.033446966032718954,no,0.012384952604344576,no,0.011749880288647168,no,0.01120628232401026,no,0.01085301376590353
1320,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If there is no WHERE node, make one.",no,undetermined,0,0,0,no,0.0016131003074403877,no,0.001516550481991774,no,0.0013715882015321935,no,0.001227833713610883,no,0.0011616277899540014
1321,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we found it in the temp PC.  Should indicate we are in the midst of processing a result set // containing eager fetches via join fetch,no,undetermined,0,0,0,no,0.022740832707140238,no,0.012389646376810136,no,0.011729174680124922,no,0.011206275610857339,no,0.010844521585017215
1322,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Add the type to the list of returned sqlResultTypes.,no,undetermined,0,0,0,no,0.002646246484934006,no,0.0024881384335168964,no,0.0024597740480558415,no,0.0022941269575282902,no,0.0021595914600542774
1323,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0008158380563990274,no,0.0004622220704414844,no,0.0003947093598227315,no,0.00035164830917738625,no,0.00031812294261152036
1324,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// create one,no,undetermined,0,0,0,no,0.0006598956698740488,no,0.0007723225531993808,no,0.0006997679006510861,no,0.0006304675779068464,no,0.0006293842349056948
1325,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// persists don't cascade to uninitialized collections,no,undetermined,0,0,0,no,0.006396708155547006,no,0.007002471406881795,no,0.006876509414948579,no,0.006404213032647537,no,0.0060070476625594185
1326,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//lobs cannot be compared,no,undetermined,0,0,0,no,0.003731571506587949,no,0.0057477532003658545,no,0.005359047034646947,no,0.0050011035931382545,no,0.004722698173349311
1327,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// this property belongs to the table and it is not specifically // excluded from optimistic locking by optimistic-lock=""false""",no,undetermined,0,0,0,no,0.027547887430546213,no,0.012389690006672562,no,0.011725001275109358,no,0.011188186584364088,no,0.010836079620822926
1328,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Blobs are ignored by merge(),no,undetermined,0,0,0,no,0.0016231794572773438,no,0.002580341013953546,no,0.002323007050435269,no,0.0021244008565321102,no,0.002015994955539893
1329,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// HHH-276 : implied joins in a subselect where clause - The destination needs to be added // to the destination's from clause. // Not sure if this is will fix everything, but it works.",no,undetermined,0,0,0,no,0.3945128316917125,no,0.3513396625334105,no,0.3407433797075895,no,0.33733481956378014,no,0.3311997830408581
1330,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//value is the entity name,no,undetermined,0,0,0,no,0.004665563001881408,no,0.00281426316471289,no,0.004157232242390665,no,0.005182802895545326,no,0.004967730950128908
1331,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// handle the (assumed) valid cases: // #1 - the only valid datetime addition synatx is one or the other is a datetime (but not both),no,undetermined,0,0,0,no,0.019450853029277952,no,0.012409435813964587,no,0.01174075985293428,no,0.011212204061822488,no,0.010836474039056495
1332,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//optimization,no,undetermined,0,0,0,no,0.0007327504976694868,no,0.0015177500024918093,no,0.0015676147851309318,no,0.001379058350495263,no,0.0013112650593170377
1333,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the map of batch numbers to EntityInsertAction lists,no,undetermined,0,0,0,no,0.013070148329627052,no,0.011185046121951259,no,0.011550949087833773,no,0.010437923612198991,no,0.009924333040171759
1334,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//optimization //optimization,no,undetermined,0,0,0,no,0.0007327504976694868,no,0.0015177500024918093,no,0.0015676147851309318,no,0.001379058350495263,no,0.0013112650593170377
1335,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we don't need to worry about any condition in the ON clause // here (toFromFragmentString), since anything in the ON condition // is already applied to the whole query",no,undetermined,0,0,0,no,0.056393185010204426,no,0.012399964825024914,no,0.011743943938572775,no,0.011184798754626999,no,0.010834263920846987
1336,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//re-snapshot,no,undetermined,0,0,0,no,0.0017905806340215522,no,0.004681102259362315,no,0.009835309057456427,no,0.009722703402286032,no,0.009355212117223134
1337,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the difficulty here is exactly what do we update in order to // force the version to be incremented in the db...,no,undetermined,0,0,0,no,0.0597296935164014,no,0.012394034471483796,no,0.011744135908930553,no,0.011205129929540321,no,0.010817966940390207
1338,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// for convenience to save some lookups,no,undetermined,0,0,0,no,0.007925477392214244,no,0.006412778036271191,no,0.006314456650627387,no,0.0059080195338325455,no,0.00560653104492547
1339,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Regions can get instantiated in the course of normal work (e.g. // a named query region will be created the first time the query is // executed), so suspend any ongoing tx",no,undetermined,0,0,0,no,0.04127045569175189,no,0.012400535086323014,no,0.01173554103451752,no,0.011194930112684569,no,0.0108134376723757
1340,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//NOTE: this is not updated when properties are fetched lazily!,no,undetermined,0,0,0,no,0.0820321412618034,no,0.012376224666571078,no,0.011732382741390405,no,0.011205011582691427,no,0.010842502912783993
1341,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// An ident node can represent an index expression if the ident // represents a naked property ref //      *Note: this makes the assumption (which is currently the case //      in the hql-sql grammar) that the ident is first resolved //      itself (addrExpr -> resolve()).  The other option, if that //      changes, is to call resolve from here; but it is //      currently un-needed overhead.",no,undetermined,0,0,0,no,0.059239539910421385,no,0.012380561688916627,no,0.011749134081866027,no,0.011193407504199547,no,0.010814519536156296
1342,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//EARLY EXIT!,no,undetermined,0,0,0,no,0.0005905483870258867,no,0.0006314912289696719,no,0.0005659715806632397,no,0.0005143622300302791,no,0.0004802970847279881
1343,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	public List getCollectionAliases() { //		return collectionAliases; //	} // //	/*public List getCollectionOwners() { //		return collectionOwners; //	}*/ // //	public List getCollectionOwnerAliases() { //		return collectionOwnerAliases; //	} // //	public List getCollectionPersisters() { //		return collectionPersisters; //	} // //	public Map getAlias2Persister() { //		return alias2Persister; //	} // //	/*public boolean isCollectionInitializer() { //		return isCollectionInitializer; //	}*/ // ////	public List getPersisters() { ////		return persisters; ////	} // //	public Map getAlias2OwnerAlias() { //		return alias2OwnerAlias; //	} // //	public List getScalarTypes() { //		return scalarTypes; //	} //	public List getScalarColumnAliases() { //		return scalarColumnAliases; //	} // //	public List getPropertyResults() { //		return propertyResults; //	} // //	public List getCollectionPropertyResults() { //		return collectionResults; //	} // // //	public Map getAlias2Return() { //		return alias2Return; //	},no,undetermined,0,0,0,no,0.00271154772276675,no,0.002631816927559548,no,0.002485265307839858,no,0.002303341139596713,no,0.0021643871494138383
1344,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//TODO!,no,undetermined,0,0,0,no,0.011655632226661484,no,0.01236577759846885,no,0.011721998039486535,no,0.011178854171809327,no,0.010821618193954203
1345,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//This solution would allow us to eliminate the owner arg to disassemble(), but //what if the collection was null, and then later had elements added? seems unsafe //session.getPersistenceContext().getCollectionEntry( (PersistentCollection) value ).getKey();",no,undetermined,0,0,0,no,0.41013611983137394,no,0.5,no,0.5,no,0.5231578590914607,no,0.5190798838591412
1346,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//xml is the entity name,no,undetermined,0,0,0,no,0.005168343121044632,no,0.0031938931638643983,no,0.0043815904558944605,no,0.005285435282403971,no,0.005068377513847019
1347,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//named query parameter,no,undetermined,0,0,0,no,0.007380292858184892,no,0.007903807570883511,no,0.006713417083998138,no,0.005880360929620854,no,0.005702727639496364
1348,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//tolerates nulls,no,undetermined,0,0,0,no,0.0012906518730404814,no,0.0015801496212466556,no,0.0014609137099350004,no,0.0013668550635663969,no,0.0012899870097561699
1349,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// check to see if our ""propPath"" actually // represents a property on the persister",no,undetermined,0,0,0,no,0.008216779527634239,no,0.006298570668136116,no,0.006182983710440368,no,0.005758066358187867,no,0.005468702989416794
1350,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Add the token to the AST.,no,undetermined,0,0,0,no,0.0035210108974572177,no,0.0019701146706165716,no,0.0018295998514039993,no,0.001665441717320121,no,0.001584898097298292
1351,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Use the table fromElement and the property name to get the array of column names.,no,undetermined,0,0,0,no,0.004565814326964568,no,0.005875736565916633,no,0.006476595885532563,no,0.0061679852418313,no,0.005777030045431825
1352,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Set up the cache factory,no,undetermined,0,0,0,no,0.0020026979709911394,no,0.005070121772766364,no,0.004649712832833029,no,0.004302037300381469,no,0.004160469000566795
1353,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we need to strip off the embedded parens so that sql-gen does not double these up,no,undetermined,0,0,0,no,0.04436098241694356,no,0.012404440092289531,no,0.011733560856645798,no,0.011191068801628519,no,0.010819135689078118
1354,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//memory optimization,no,undetermined,0,0,0,no,0.005479822379228678,no,0.008867153584673083,no,0.009092504127515836,no,0.008521518982616218,no,0.008305640129147073
1355,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// then handle any user-defined entity modes...,no,undetermined,0,0,0,no,0.005040524265102494,no,0.0038424443950850185,no,0.004318995609626167,no,0.0041244174958642065,no,0.0038968374413825262
1356,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*sqlResultTypeList,*/",no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
1357,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If this is an implied join in a from element, then use the impled join type which is part of the // tree parser's state (set by the gramamar actions).",no,undetermined,0,0,0,no,0.024287580373419052,no,0.012342112203375086,no,0.011052661371484867,no,0.010241828998249792,no,0.009921983325186474
1358,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// metaType is assumed to be single-column type,no,undetermined,0,0,0,no,0.002811884021413292,no,0.0025136819244592234,no,0.0022080779028279683,no,0.0019843781247456727,no,0.0018841887276106759
1359,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// End unit of work,no,undetermined,0,0,0,no,0.024894465958653918,no,0.012368804088152328,no,0.01172744890993097,no,0.011181524491434105,no,0.010850568930518549
1360,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ROW ID,no,undetermined,0,0,0,no,0.0014705452635149568,no,0.0014302953731304025,no,0.0012769185964447037,no,0.0011245818238280775,no,0.0010406035995486618
1361,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//MULTITABLES,no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
1362,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//			final List extendsQueue,",no,undetermined,0,0,0,no,0.0015119739195124584,no,0.002671251899633269,no,0.0024271691006597165,no,0.0022525751078727807,no,0.0021142782211063874
1363,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Make sure JBC doesn't look one up,no,undetermined,0,0,0,no,0.0011803734162255484,no,0.001170760540921556,no,0.0010427824982978025,no,0.0009283717276397447,no,0.0009223878211416408
1364,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Get all the select expressions (that we just generated) and render the select.,no,undetermined,0,0,0,no,0.0038067110980974706,no,0.004724388331971049,no,0.0049430529325412845,no,0.004598016871429849,no,0.00415613473286517
1365,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
1366,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// visit width-first, then depth",no,undetermined,0,0,0,no,0.00043902492257854095,no,0.00045212866794535115,no,0.0004119098673321316,no,0.00036477813347594645,no,0.00033348515380449996
1367,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If the uresolved property path isn't set yet, just use the property name.",no,undetermined,0,0,0,no,0.01665359564252845,no,0.012378977177823351,no,0.011752603941485432,no,0.011187608273222172,no,0.010829331225059007
1368,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Look through the FromElement's children to find any collections of values that should be fetched...,no,undetermined,0,0,0,no,0.02029037439292344,no,0.012385394540943437,no,0.011740753223816054,no,0.011216596667584415,no,0.010822492210480381
1369,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// identifier-commalist,no,undetermined,0,0,0,no,0.0009591505665858879,no,0.0012585126698252925,no,0.0011181438902768681,no,0.0009964704109497761,no,0.000923697832125954
1370,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//return AssociationType.FOREIGN_KEY_TO_PARENT; //this is better but causes a transient object exception...,no,undetermined,0,0,0,no,0.29319488171768165,no,0.2952163593071802,no,0.3019153213259009,no,0.3230052324290368,no,0.3297744161703121
1371,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// collections of values,no,undetermined,0,0,0,no,0.001773003225808268,no,0.0011365237185988173,no,0.0009956606234091006,no,0.0008885083187721775,no,0.0008333860225688566
1372,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// copied from Session:,no,undetermined,0,0,0,no,0.27362940633428867,no,0.24572387390113448,no,0.24201224566256693,no,0.24877230760900676,no,0.25178755098158784
1373,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// For an explicit many-to-many relationship, add a second join from the intermediate  // (many-to-many) table to the destination table.  Also, make sure that the from element's  // idea of the destination is the destination table.",no,undetermined,0,0,0,no,0.033511963454365405,no,0.012374123429398544,no,0.01173758207401569,no,0.011215445625123808,no,0.010833748162369965
1374,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this should not happen since the DTD prevents it,no,undetermined,0,0,0,no,0.009050044124305556,no,0.009962676249753624,no,0.008862392090420168,no,0.008286452655078795,no,0.01084513999225691
1375,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Need to parse off the column qualifiers; this is assuming (which is true as of now) // that this is only used from update and delete HQL statement parsing,no,undetermined,0,0,0,no,0.058519730687786965,no,0.012392670893643173,no,0.011753638846205696,no,0.011187447922209322,no,0.010817299951718012
1376,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// the current join represents the join between a many-to-many association table // and its ""target"" table.  Here we need to apply any additional filters // defined specifically on the many-to-many",no,undetermined,0,0,0,no,0.012406641244187114,no,0.003153515162782698,no,0.0028941370817200996,no,0.002569437277135053,no,0.0024026248372756224
1377,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If the from element represents a JOIN_FRAGMENT and it is // a theta-style join, convert its type from JOIN_FRAGMENT // to FROM_FRAGMENT",no,undetermined,0,0,0,no,0.004249983103639267,no,0.003542423936563987,no,0.0031562785297798916,no,0.0028235988064611232,no,0.002695091193917639
1378,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//check basic level one nullablilty,no,undetermined,0,0,0,no,0.0034803036569788282,no,0.0038048904283305733,no,0.0035142121826982355,no,0.0032584895254101818,no,0.0031770300003222804
1379,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Add a zero (or quite low) timeout option so we don't block. // Ignore any TimeoutException. Basically we forego caching the // query result in order to avoid blocking. // Reads are done with suspended tx, so they should not hold the // lock for long.  Not caching the query result is OK, since // any subsequent read will just see the old result with its // out-of-date timestamp; that result will be discarded and the // db query performed again.",no,undetermined,0,0,0,no,0.014501972708830746,no,0.012408463679594549,no,0.01140109074121242,no,0.009348382999787474,no,0.008770460868105142
1380,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//values is not null and is checkable, we'll look deeper",no,undetermined,0,0,0,no,0.015990244057335595,no,0.011966295197370224,no,0.011081849745890434,no,0.010502808035938754,no,0.010518816774897391
1381,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Possibly handle :something parameters for the query ?,no,undetermined,0,0,0,no,0.007041859905575495,no,0.01180714225707428,no,0.010724972076803518,no,0.009630833722772826,no,0.009292578272534864
1382,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//for non null args, check for components and elements containing components",no,undetermined,0,0,0,no,0.0018097625719796391,no,0.0020739466690241,no,0.0019906729331933505,no,0.0018582258702234688,no,0.0017034959612982161
1383,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If we want to handle it bidirectional and detached, we also need to load this // collection with an eager outer-join fetch, this time with Criteria and not HQL:",no,undetermined,0,0,0,no,0.01845625619312339,no,0.009965234445264566,no,0.008601833181209417,no,0.009097133341298032,no,0.008355748055083701
1384,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//cache the hashcode,no,undetermined,0,0,0,no,0.00471815279858851,no,0.006373446337016714,no,0.005783158696646502,no,0.005368179795894139,no,0.005180691526538781
1385,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*public PropertyProjection project() {
		return Projections.property(getPropertyName());
	}*/",no,undetermined,0,0,0,no,0.007189480240724587,no,0.006419915869893788,no,0.005938971435765787,no,0.005623271050447223,no,0.005359793574363216
1386,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//persistent collections may have components,no,undetermined,0,0,0,no,0.005109643337638972,no,0.0032956478894441764,no,0.0028926580677036745,no,0.002650928617011297,no,0.0025058788288109786
1387,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// We have the JBCWriteMutex, so no other *local* thread will  // be trying to write this key.  // It's possible here some remote thread has come in and // changed the values again, but since we are reading the // values to write to JBC right now, we know we are writing // the latest values; i.e. we don't assume that what we cached // in entry.update() above is what we should write to JBC *now*. // Our write could be redundant, i.e. we are writing what // some remote thread just came in an wrote.  There is a chance  // that yet another remote thread will update us, and we'll then // overwrite that later data in JBC.  But, all remote nodes will // ignore that change in their localCache; the only place it  // will live will be in JBC, where it can only effect the  // initial state transfer values on newly joined nodes  // (i.e. populateLocalCache()).",no,undetermined,0,0,0,no,0.20378100722974324,no,0.17830405839118735,no,0.1618832236645911,no,0.15716616041266543,no,0.15834162359629544
1388,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//test out the optimizer:,no,undetermined,0,0,0,no,0.0018292830048135954,no,0.0016967321594749754,no,0.0015585462435216235,no,0.0013773944021889708,no,0.0012943470926131092
1389,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//		registerColumnType( Types.VARCHAR, 16777215, ""mediumtext"" );",no,undetermined,0,0,0,no,0.004482966546868019,no,0.012411523616823298,no,0.011736274425470504,no,0.01119629208743074,no,0.010832247995066456
1390,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// IDENT might be the name of a class.,no,undetermined,0,0,0,no,0.016182846115674634,no,0.01238925508328991,no,0.011712725310821757,no,0.011203135853909925,no,0.010841416721128903
1391,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Here we don't want to suspend the tx. If we do: // 1) We might be caching query results that reflect uncommitted // changes. No tx == no WL on cache node, so other threads // can prematurely see those query results // 2) No tx == immediate replication. More overhead, plus we // spread issue #1 above around the cluster",no,undetermined,0,0,0,no,0.1602194993123846,no,0.1901253336537572,no,0.18611593018400627,no,0.18349464295552687,no,0.18351725031967797
1392,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//TODO!!!,no,undetermined,0,0,0,no,0.011655632226661484,no,0.01236577759846885,no,0.011721998039486535,no,0.011178854171809327,no,0.010821618193954203
1393,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// for regression testing against output from the old parser... // found it easiest to simply reorder the FromElements here into ascending order // in terms of injecting them into the resulting sql ast in orders relative to those // expected by the old parser; this is definitely another of those ""only needed // for regression purposes"".  The SyntheticAndFactory, then, simply injects them as it // encounters them.",no,undetermined,0,0,0,no,0.09839688457120199,no,0.012392494079576662,no,0.011735919634601036,no,0.011172761330578476,no,0.010837614088214246
1394,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//st.setTimestamp( index,  new Timestamp( cal.getTimeInMillis() ), cal ); //JDK 1.5 only",no,undetermined,0,0,0,no,0.004144324701844952,no,0.006887153101509336,no,0.0066906316482930024,no,0.006387577085233794,no,0.0060954619090142804
1395,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//arbitrary on clause ignored!!,no,undetermined,0,0,0,no,0.00044763151230293275,no,0.0005325678791461233,no,0.00047577820779723086,no,0.00042942609424394815,no,0.0003929150352315793
1396,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//st.setDate( index,  new Date( cal.getTimeInMillis() ), cal ); //JDK 1.5 only",no,undetermined,0,0,0,no,0.01122737872386595,no,0.012370645947041181,no,0.011737904877755676,no,0.0112045900441356,no,0.010848152575618691
1397,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// from javax.naming.Referenceable,no,undetermined,0,0,0,no,0.02466580112910053,no,0.012376738755150728,no,0.011715974783558432,no,0.011186742286449248,no,0.010815827695064726
1398,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// both are Timestamps,no,undetermined,0,0,0,no,0.0027467783185893477,no,0.0030574822828725885,no,0.002875898690195535,no,0.002667411325890145,no,0.0025434229941581443
1399,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// First, collect all of the select expressions. // NOTE: This must be done *before* invoking setScalarColumnText() because setScalarColumnText() // changes the AST!!!",no,undetermined,0,0,0,no,0.020454781213722226,no,0.012408114842091091,no,0.011744190650576152,no,0.011197958327997077,no,0.010839341122556898
1400,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// at least one is a plain old Date,no,undetermined,0,0,0,no,0.007469161095520433,no,0.009609969793723257,no,0.00887006251043162,no,0.008461378087575374,no,0.008458915868684998
1401,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//swallow it (the transaction _was_ successful or successfully rolled back),no,undetermined,0,0,0,no,0.003977355700326117,no,0.004209335108750092,no,0.003820884394041258,no,0.0032234918102011967,no,0.0030653271763967597
1402,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//check for all components values in the collection,no,undetermined,0,0,0,no,0.0015382093991193277,no,0.0015395986184566985,no,0.001103855499770978,no,0.0012015999833506433,no,0.0011149927090365803
1403,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// after *all* persisters and named queries are registered,no,undetermined,0,0,0,no,0.0018050523604328538,no,0.0023152884770206036,no,0.002292180846342571,no,0.0019697337195131574,no,0.001900894864419977
1404,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//do the test,no,undetermined,0,0,0,no,0.002286014685029701,no,0.0020609464432222446,no,0.0019529979157013454,no,0.0017242024904376846,no,0.0016102762277815487
1405,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// LIMIT support (ala TOP) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.000964998526111795,no,0.002201942639776012,no,0.0020596390521190893,no,0.0018978354812682794,no,0.0018114639328563238
1406,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If close() is called, guarantee unbind()",no,undetermined,0,0,0,no,0.00032399984116143787,no,0.00034359886288581865,no,0.0002998655993997222,no,0.0002636085202551496,no,0.00025237633331646174
1407,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// or BYTE // or TEXT? // or MONEY,no,undetermined,0,0,0,no,0.0022819093804059857,no,0.002301512396647802,no,0.0022337684334928164,no,0.0020095158866618884,no,0.0019054486607228696
1408,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//noop,no,undetermined,0,0,0,no,0.0009646755708812176,no,0.0009192590923223185,no,0.0008410726785932576,no,0.0007727807750535093,no,0.0006896985008705766
1409,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//			        ( implied && DotNode.useThetaStyleImplicitJoins ) ) {,no,undetermined,0,0,0,no,0.0018160438451023555,no,0.0016377427746675172,no,0.0015186429354874188,no,0.0014109874973538988,no,0.0013165328837222736
1410,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if the corresponding SQL value is NULL, the reader we got is NULL as well",no,undetermined,0,0,0,no,0.004291680694669503,no,0.003953833238307642,no,0.0036730900424846316,no,0.0034231754167574316,no,0.003175912125147791
1411,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If there is no data type for this node, and we're at the end of the path (top most dot node), then // this might be a Java constant.",no,undetermined,0,0,0,no,0.036692988049722465,no,0.012405942474401533,no,0.011728083404750818,no,0.011197093485638366,no,0.010858136248236748
1412,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Fetch Reader content up to the end - and put characters in a StringBuffer,no,undetermined,0,0,0,no,0.04548800892153925,no,0.012385717459297818,no,0.01174850362229959,no,0.011195298908014998,no,0.010823794057590489
1413,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The loop ensures atomicity of the // select + update even for no transaction // or read committed isolation level,no,undetermined,0,0,0,no,0.00111911854025745,no,0.0009490073882210219,no,0.0008123269519307327,no,0.0006636810571476089,no,0.0006066825456150009
1414,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Return StringBuffer content as a large String,no,undetermined,0,0,0,no,0.016242648413749082,no,0.012373113351556287,no,0.011727048107142094,no,0.011195451149798212,no,0.01082725386639648
1415,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The where clause was added to eliminate this statement from Brute Force Searches.,no,undetermined,0,0,0,no,0.044603922965154155,no,0.012387755663476416,no,0.01172223803924651,no,0.01119006348626439,no,0.010843808255749248
1416,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//or Types.LONGVARCHAR?,no,undetermined,0,0,0,no,0.003722596836589994,no,0.0034230838025277313,no,0.003301482552704518,no,0.003060725740675161,no,0.002910906003701979
1417,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0008158380563990274,no,0.0004622220704414844,no,0.0003947093598227315,no,0.00035164830917738625,no,0.00031812294261152036
1418,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//TODO,no,undetermined,0,0,0,no,0.011655632226661484,no,0.01236577759846885,no,0.011721998039486535,no,0.011178854171809327,no,0.010821618193954203
1419,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// We ignore minimalPutOverride. JBossCache putForExternalRead is // already about as minimal as we can get; it will promptly return // if it discovers that the node we want to write to already exists,no,undetermined,0,0,0,no,0.004128063783600552,no,0.004046563346715681,no,0.004046569215613233,no,0.003736886566696478,no,0.0035980414804879825
1420,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Forcefully remove leading ands from where fragments; the grammar will // handle adding them,no,undetermined,0,0,0,no,0.0017437720474278735,no,0.001661745645312295,no,0.0017217482054500662,no,0.0015636901369773426,no,0.0014552681298663857
1421,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// for non-arrays, we don't need to know the element class //elementType.returnedClass();",no,undetermined,0,0,0,no,0.06144225861800916,no,0.012367418285410301,no,0.011727030981134154,no,0.0111852599920999,no,0.010819778303466865
1422,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Chop off the rest of the tree.,no,undetermined,0,0,0,no,0.005484120235191848,no,0.004924480445461695,no,0.004592329103611972,no,0.004122818585717901,no,0.003964016150156745
1423,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// grab its state from the ResultSet and keep it in the Session // (but don't yet initialize the object itself) // note that we acquire LockMode.READ even if it was not requested,no,undetermined,0,0,0,no,0.0025240812188275993,no,0.002291023527255802,no,0.002002912963783843,no,0.0018626820540394015,no,0.001714147389909838
1424,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//different nullability rules for pk/fk,no,undetermined,0,0,0,no,0.008698533617821998,no,0.0046403843058338765,no,0.004206856543285969,no,0.003917289988410928,no,0.0036990298665827114
1425,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if the types report logical equivalence, return true...",no,undetermined,0,0,0,no,0.05548511337182991,no,0.012406493483238227,no,0.01173567400186468,no,0.0111952251267917,no,0.010826170050403787
1426,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//cache this,no,undetermined,0,0,0,no,0.0114206157956702,no,0.01237957022450862,no,0.011711036780516824,no,0.011175870860969146,no,0.01084868729629028
1427,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// for a subquery, the alias to use depends on a few things (we // already know this is not an overall SELECT): //      1) if this FROM_ELEMENT represents a correlation to the //          outer-most query //              A) if the outer query represents a multi-table //                  persister, we need to use the given alias //                  in anticipation of one of the multi-table //                  executors being used (as this subquery will //                  actually be used in the ""id select"" phase //                  of that multi-table executor) //              B) otherwise, we need to use the persister's //                  table name as the column qualification //      2) otherwise (not correlated), use the given alias",no,undetermined,0,0,0,no,0.23783836131805453,no,0.19554483888223306,no,0.18327851501487402,no,0.17925724564297038,no,0.17733734754334537
1428,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//only really need new array during semiresolve!,no,undetermined,0,0,0,no,0.01916335154897809,no,0.012389281016332,no,0.011736300061214996,no,0.011186246530569004,no,0.010847527636586397
1429,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// classic translator does not support collection of ordinal // param metadata,no,undetermined,0,0,0,no,0.07328687556751481,no,0.012395898674338374,no,0.011735992787729688,no,0.011200779366614658,no,0.010834485059302013
1430,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//unwrap it,no,undetermined,0,0,0,no,0.0019792963712371944,no,0.0022583965681827268,no,0.0019842685063725814,no,0.001801805549858934,no,0.001692094419163027
1431,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//cache the hashcode,no,undetermined,0,0,0,no,0.00471815279858851,no,0.006373446337016714,no,0.005783158696646502,no,0.005368179795894139,no,0.005180691526538781
1432,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// an unfetched association can only point to // an entity that already exists in the db,no,undetermined,0,0,0,no,0.004007025773758828,no,0.0030289684259646094,no,0.00438637434124241,no,0.004165009297801947,no,0.0038740262716505038
1433,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// here, we work under the following assumptions: //      ------------ valid cases -------------------------------------- //      1) datetime + {something other than datetime} : always results //              in a datetime ( db will catch invalid conversions ) //      2) datetime - datetime : always results in a DOUBLE //      3) datetime - {something other than datetime} : always results //              in a datetime ( db will catch invalid conversions ) //      ------------ invalid cases ------------------------------------ //      4) datetime + datetime //      5) {something other than datetime} - datetime //      6) datetime * {any type} //      7) datetime / {any type} //      8) {any type} / datetime // doing so allows us to properly handle parameters as either the left // or right side here in the majority of cases",no,undetermined,0,0,0,no,0.2685960115214404,no,0.2849937538534433,no,0.2729950712755349,no,0.2769451439307253,no,0.28128062115040803
1434,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// let the interceptor inspect the instance to decide,no,undetermined,0,0,0,no,0.004971111816258837,no,0.005799843273256914,no,0.005609897617325914,no,0.005342579311201569,no,0.005214781519028223
1435,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*
	 * The types represented in the SQL result set.
	 *
	 * @return The types represented in the SQL result set.
	 */",no,undetermined,0,0,0,no,0.0017865336161862057,no,0.0017200742063180853,no,0.0015652094849847977,no,0.0013669719812435086,no,0.0013064953531254245
1436,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// let the persister inspect the instance to decide,no,undetermined,0,0,0,no,0.011950409048018288,no,0.012412293427188418,no,0.0117446824487472,no,0.01117553973132101,no,0.01083527704125175
1437,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the CascadingAction contract ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0002557648981474425,no,0.00022915213441638524,no,0.00020089268803672505,no,0.00017799663409047095,no,0.00016315712575770973
1438,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//TODO!!!!!!!,no,undetermined,0,0,0,no,0.011655632226661484,no,0.01236577759846885,no,0.011721998039486535,no,0.011178854171809327,no,0.010821618193954203
1439,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// DDL support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.003238682494816171,no,0.004528136907812,no,0.0044782607017309324,no,0.004152415733411792,no,0.004003805148058978
1440,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Create a new FILTERS node as a parent of all filters,no,undetermined,0,0,0,no,0.005915590698452294,no,0.00646222088541444,no,0.006499510321493825,no,0.00594695293466469,no,0.005637348953745229
1441,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if there is no TM configured, we will not be able to access // the javax.transaction.Transaction object in order to // register a synch anyway.",no,undetermined,0,0,0,no,0.010598062888646792,no,0.01041317146096803,no,0.008739595635904056,no,0.007792831063411011,no,0.007279837948478389
1442,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
1443,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Establish the region root node with a non-locking data version,no,undetermined,0,0,0,no,0.012477734878672042,no,0.006435124803789572,no,0.0063284762165555135,no,0.005925186154358192,no,0.005650401042533563
1444,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//public Object instantiate(Object parent, SessionImplementor session) throws HibernateException;",no,undetermined,0,0,0,no,0.007324657425251983,no,0.008517523117891102,no,0.008086663620290167,no,0.00766023111745449,no,0.007404320481251833
1445,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//nothing to do,no,undetermined,0,0,0,no,0.002153585483299862,no,0.002230317838991627,no,0.002120572065431549,no,0.0019150373596986858,no,0.0017976092084052249
1446,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//nothing to do,no,undetermined,0,0,0,no,0.002153585483299862,no,0.002230317838991627,no,0.002120572065431549,no,0.0019150373596986858,no,0.0017976092084052249
1447,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we use the assumed value, if there is one, to avoid hitting // the database",no,undetermined,0,0,0,no,0.0012204225908812177,no,0.0011423937063292672,no,0.0009559554234958476,no,0.0008731202169696082,no,0.0008256231931045424
1448,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// context-entity-identifier returns null explicitly if the entity // is not associated with the persistence context; so make some // deeper checks...,no,undetermined,0,0,0,no,0.03853461525433069,no,0.012391373925372446,no,0.011719963816696074,no,0.01118945937273939,no,0.010825918414613226
1449,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//int count = 0;,no,undetermined,0,0,0,no,0.0016830758996288606,no,0.0037296439423301657,no,0.0035094542828429413,no,0.003183704838956524,no,0.0030357382773979072
1450,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// putfield // new value of the field,no,undetermined,0,0,0,no,0.003168343468132057,no,0.003835310603105855,no,0.00368914951180489,no,0.0034380308014402895,no,0.003266254600107648
1451,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//lobs cannot be compared,no,undetermined,0,0,0,no,0.003731571506587949,no,0.0057477532003658545,no,0.005359047034646947,no,0.0050011035931382545,no,0.004722698173349311
1452,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//not really necessary, I guess...",no,undetermined,0,0,0,no,0.05808186528815741,no,0.012410558840727042,no,0.011734910650456584,no,0.011197410329402012,no,0.010840658472079965
1453,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Clobs are ignored by merge() operation,no,undetermined,0,0,0,no,0.0005394113205668131,no,0.0008642620026347101,no,0.0007652137800700141,no,0.0006786381701288877,no,0.0006311532403182377
1454,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//the first key found after the given key,no,undetermined,0,0,0,no,0.0007288164813018866,no,0.0007483523291359475,no,0.0006292512389376112,no,0.0005552168710441287,no,0.0005154957802295703
1455,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// collections cannot be compared,no,undetermined,0,0,0,no,0.004503511799464488,no,0.004031638928465277,no,0.0036247738133309256,no,0.0033051555382474732,no,0.0031226228535299
1456,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//remember the uk value,no,undetermined,0,0,0,no,0.0040497510419522376,no,0.0045037987349749835,no,0.004403262423899057,no,0.004154992942626936,no,0.003981905966339094
1457,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//NOOP,no,undetermined,0,0,0,no,0.0009646755708812176,no,0.0009192590923223185,no,0.0008410726785932576,no,0.0007727807750535093,no,0.0006896985008705766
1458,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//processCollectionProperty(token, q.getCollectionPersister(collectionRole), collectionName);",no,undetermined,0,0,0,no,0.0020856569150398342,no,0.0019482586064122514,no,0.0017625252808952838,no,0.001591581421989843,no,0.0014879899036224352
1459,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//we must use the ""remembered"" uk value, since it is  //not available from the EntityEntry during assembly",no,undetermined,0,0,0,no,0.00426264865503582,no,0.007123059599163191,no,0.0064279223818251045,no,0.007348270545587232,no,0.007295704806811439
1460,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// collections don't dirty an unversioned parent entity,no,undetermined,0,0,0,no,0.026137618492460078,no,0.009061773618280203,no,0.00795187409374188,no,0.008515260525012634,no,0.008142916134555415
1461,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// return false;,no,undetermined,0,0,0,no,0.002509020307398535,no,0.0003343803766706933,no,0.0002973707317072408,no,0.00026346752688067405,no,0.00024290034670147777
1462,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// This just handles a particular case of component // projection, perhaps get rid of it and throw an exception",no,undetermined,0,0,0,no,0.2255539172426284,no,0.25303181226013033,no,0.26266521688468397,no,0.26408461398162847,no,0.26288279006112697
1463,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//NOTE: we avoid joining to the next table if the named property is just the foreign key value,no,undetermined,0,0,0,no,0.005926986800366413,no,0.007010955154418041,no,0.0060365837320779546,no,0.0056813321039134385,no,0.005229723306874468
1464,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// the key is the owning entity itself, so get the ID from the key",no,undetermined,0,0,0,no,0.0028654136715487214,no,0.0018828444881714076,no,0.002232665592885419,no,0.0020601932963104494,no,0.0018695356631662796
1465,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//checkForEnd = false;,no,undetermined,0,0,0,no,0.0018156176460747383,no,0.0006180556239404241,no,0.0005549722551339133,no,0.0004984159777152401,no,0.0004612126496127299
1466,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//ignore subselect keywords,no,undetermined,0,0,0,no,3.2711602315265276e-05,no,3.7825380684403954e-05,no,3.3185548594024044e-05,no,2.782194745318294e-05,no,2.5120574197196057e-05
1467,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// copy elements into newly empty target collection,no,undetermined,0,0,0,no,0.004628691036865475,no,0.008781146376200335,no,0.007143205809194285,no,0.007169707841552911,no,0.006692729436552538
1468,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//end of array, start filling again from start",no,undetermined,0,0,0,no,0.002432707784806746,no,0.0019234140740254722,no,0.0018199961995299593,no,0.0016297701530327193,no,0.0015079226442941424
1469,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// for a null target, or a target which is the same as the original, we // need to put the merged elements in a new collection",no,undetermined,0,0,0,no,0.00208413647426769,no,0.0015523967060931349,no,0.0012558886891116177,no,0.0011652615099753622,no,0.001072137333544464
1470,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//we ran out of keys to try,no,undetermined,0,0,0,no,0.0035493255686006885,no,0.003537504169803303,no,0.0033813020657193584,no,0.003148706724067387,no,0.0029802328473025703
1471,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// by default just use an unanticipated capacity since we don't // know how to extract the capacity to use from original here...,no,undetermined,0,0,0,no,0.07924499314591307,no,0.012379545077933839,no,0.011727347414235308,no,0.011192100258449966,no,0.010814515399255728
1472,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//the first id found after the given id,no,undetermined,0,0,0,no,0.016055047914280245,no,0.010640418194000781,no,0.009132228791822473,no,0.008453665272671418,no,0.008310068778792208
1473,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//we ran out of ids to try,no,undetermined,0,0,0,no,0.0032115344000414763,no,0.0024374456739054973,no,0.0022937928347762523,no,0.0021213496573383333,no,0.0019986166274190307
1474,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// DISCRIMINATOR,no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
1475,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// get the elements back into the target making sure to handle dirty flag,no,undetermined,0,0,0,no,0.00578610599056011,no,0.004666269456216398,no,0.004192285404582362,no,0.004034159618162,no,0.003710347939722227
1476,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// check if collection is currently being loaded,no,undetermined,0,0,0,no,0.017617030833319,no,0.012404006851078689,no,0.009666933166053422,no,0.011205660784500738,no,0.010689485681026475
1477,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// check if it is already completely loaded, but unowned",no,undetermined,0,0,0,no,0.012878633842284699,no,0.010603137205774868,no,0.009821436036976872,no,0.0090001222884209,no,0.00854165852075039
1478,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// initialize this collection,no,undetermined,0,0,0,no,0.008280821436407213,no,0.005352599026846855,no,0.0024502099870783328,no,0.003834730722511224,no,0.0036306637879339764
1479,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//TODO!!!!!!!,no,undetermined,0,0,0,no,0.011655632226661484,no,0.01236577759846885,no,0.011721998039486535,no,0.011178854171809327,no,0.010821618193954203
1480,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// create a new collection wrapper, to be initialized later",no,undetermined,0,0,0,no,0.0306770420390196,no,0.012401464639023864,no,0.011731744557078169,no,0.011180211105074632,no,0.010825260341915869
1481,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Some JDBC drivers erroneously return an empty array here for a null DB value :/,no,undetermined,0,0,0,no,0.018069174141150175,no,0.012405405101723985,no,0.01175197247376192,no,0.011208454204999465,no,0.0108366431306957
1482,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//cannot batch fetch by unique key (property-ref associations),no,undetermined,0,0,0,no,0.0019272700888951116,no,0.0009459547814819686,no,0.0007045897862567761,no,0.000620713861933433,no,0.0005781482100429863
1483,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we already know current is not null...,no,undetermined,0,0,0,no,0.02467239325925605,no,0.012380499533626792,no,0.011741642234971716,no,0.011203051079163803,no,0.0108363514424285
1484,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//the owner of the association is not the owner of the id,no,undetermined,0,0,0,no,0.004039680801050823,no,0.003806238135085745,no,0.003281387824567076,no,0.00300214526890598,no,0.0027892077008947564
1485,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ----------------------------------------------------------- Constructors,no,undetermined,0,0,0,no,0.0046777133187897125,no,0.0052426624707914305,no,0.004986222923762625,no,0.004599686869222083,no,0.004395724760355171
1486,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ----------------------------------------------------- Instance Variables,no,undetermined,0,0,0,no,9.633975200471314e-05,no,0.00024157782368034448,no,0.00021403895323100837,no,0.00018547628225148614,no,0.00017105347657933722
1487,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// --------------------------------------------------------- Public Methods,no,undetermined,0,0,0,no,0.009661554642648493,no,0.011809733274076799,no,0.011210421413953899,no,0.010669266492218174,no,0.01022882707156774
1488,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Compare the two maps for equality,no,undetermined,0,0,0,no,0.014004294289775331,no,0.010952207410471378,no,0.01025199245601445,no,0.009854865134100693,no,0.009614002263322369
1489,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Simple tests that require no synchronization,no,undetermined,0,0,0,no,0.001290561392812316,no,0.0013370231014994429,no,0.001198297922499276,no,0.0010396065634643552,no,0.0009324056307705455
1490,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//Sybase fail if we don't do that, sigh...",no,undetermined,0,0,0,no,0.002361429507897437,no,0.001311734194964282,no,0.0012437886648186199,no,0.0011589970527809575,no,0.0010836790867742524
1491,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// stream closed in the finally,no,undetermined,0,0,0,no,0.0003181276827308387,no,0.00037143601933887745,no,0.0003369174931977397,no,0.0002969817435788224,no,0.00027820562531052906
1492,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// release the jdk internal caches everytime to ensure this // plays nicely with destroyable class-loaders,no,undetermined,0,0,0,no,0.05882590326013194,no,0.012384859495980829,no,0.011737266044507356,no,0.011174565703175413,no,0.010818919625446061
1493,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// release the jdk internal caches everytime to ensure this // plays nicely with destroyable class-loaders,no,undetermined,0,0,0,no,0.05882590326013194,no,0.012384859495980829,no,0.011737266044507356,no,0.011174565703175413,no,0.010818919625446061
1494,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// try to ""pretty print"" it",no,undetermined,0,0,0,no,0.006665321480650938,no,0.006953736619263727,no,0.006364396710208949,no,0.005802667806469099,no,0.005579179342075159
1495,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// otherwise, just dump it",no,undetermined,0,0,0,no,0.0063192914395587595,no,0.007839518108195772,no,0.0053233151118403325,no,0.004712281752735581,no,0.004482017683533337
1496,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//its an interface so we can't really tell anything...,no,undetermined,0,0,0,no,0.025919657040840566,no,0.0124033188825229,no,0.01174288249639959,no,0.011191638849078058,no,0.010811938017121074
1497,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//its an interface so we can't really tell anything...,no,undetermined,0,0,0,no,0.025919657040840566,no,0.0124033188825229,no,0.01174288249639959,no,0.011191638849078058,no,0.010811938017121074
1498,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// use default behavior,no,undetermined,0,0,0,no,0.0017846398650220381,no,0.002930227191789727,no,0.002729623901861113,no,0.0024469518766693866,no,0.0023177236419556816
1499,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//NOTE: early return,no,undetermined,0,0,0,no,0.0021512406611041896,no,0.0017037143720427912,no,0.0015511988889454988,no,0.0014454937371297073,no,0.0013492809746694454
1500,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we want to be able to just use the defaults, // if JNDI environment properties are not supplied // so don't put null in anywhere",no,undetermined,0,0,0,no,0.004412700727781428,no,0.005266947801223913,no,0.004605930309300141,no,0.004323859071404719,no,0.004049986749485615
1501,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Clone //-----------------------------------------------------------------------,no,undetermined,0,0,0,no,0.00014607650512934347,no,0.00019752209967823422,no,0.00018569134347650845,no,0.00016343620221744983,no,0.00015087578376257507
1502,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Serialize //-----------------------------------------------------------------------,no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
1503,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// warning: can cause a recursive calls! (proxy initialization),no,undetermined,0,0,0,no,0.0046083954789351515,no,0.0042158046859322095,no,0.00391408084164285,no,0.0035332755972866297,no,0.003339804228403945
1504,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// stream closed in the finally,no,undetermined,0,0,0,no,0.0003181276827308387,no,0.00037143601933887745,no,0.0003369174931977397,no,0.0002969817435788224,no,0.00027820562531052906
1505,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* static methods only - hide constructor */,no,undetermined,0,0,0,no,0.003947274829310751,no,0.004435478293034613,no,0.004375158065794021,no,0.0040772602522418785,no,0.0039088251958988955
1506,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*&& !('_'==character)*/,no,undetermined,0,0,0,no,0.0005840144694964808,no,0.0008301562217373906,no,0.0007501396588274945,no,0.0006923265787673883,no,0.0006410181259679735
1507,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// returnign null!,no,undetermined,0,0,0,no,0.000383803063198239,no,0.00025014428549086857,no,0.00022739031463802565,no,0.00020029935476155122,no,0.00018476817726937773
1508,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// returnign null!,no,undetermined,0,0,0,no,0.000383803063198239,no,0.00025014428549086857,no,0.00022739031463802565,no,0.00020029935476155122,no,0.00018476817726937773
1509,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// includes last '.',no,undetermined,0,0,0,no,0.002589565762119815,no,0.0030421993167458446,no,0.0028582184620941737,no,0.002657966108417241,no,0.0025024505596487395
1510,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// +1 to include the following '.',no,undetermined,0,0,0,no,0.0026665498313604855,no,0.002019073855795824,no,0.0017601589199411525,no,0.001650920875126509,no,0.0015316038342091606
1511,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// first time we find match!,no,undetermined,0,0,0,no,0.0006922349485174395,no,0.0007030306907652769,no,0.0006276853478128779,no,0.0005524696260048433,no,0.0005126996683182212
1512,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// entityNames may now include slashes for the representations //classname may be an inner class,no,undetermined,0,0,0,no,0.0039836436924697675,no,0.004854202671851783,no,0.004270597348487978,no,0.00411745045066716,no,0.003919562590243962
1513,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// wrapped iterators,no,undetermined,0,0,0,no,0.07158481192466501,no,0.012387822536105422,no,0.011714966806389239,no,0.011175893198510131,no,0.010818211635896103
1514,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// index of current iterator in the wrapped iterators array,no,undetermined,0,0,0,no,0.010268840448408253,no,0.00713742072236518,no,0.006506325020001508,no,0.006117173332829986,no,0.005732828925036938
1515,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the current iterator,no,undetermined,0,0,0,no,0.0011561169518353378,no,0.0007182007187374891,no,0.0005978830112973433,no,0.0005439891769239999,no,0.0004997364797892311
1516,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the last used iterator,no,undetermined,0,0,0,no,0.0012435672837465966,no,0.0009130316153993401,no,0.0008099440511503083,no,0.0007404649717246976,no,0.0006779389452703619
1517,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//it was a boolean expression,no,undetermined,0,0,0,no,0.0004621773873613189,no,0.0005609134253292827,no,0.0005292349326222821,no,0.00046432285669908307,no,0.00042808068723864957
1518,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// call this before any Iterator method to make sure that the current Iterator // is not exhausted,no,undetermined,0,0,0,no,0.020270942637783514,no,0.01238457909921652,no,0.011734005979795199,no,0.011186201452862051,no,0.010845041741153524
1519,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//doable if needed,no,undetermined,0,0,0,no,0.5248912487010831,no,0.5168004885846823,no,0.5177621541787744,no,0.534115148144274,no,0.5397201357285825
1520,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// set last used iterator here, in case the user calls remove // before calling hasNext() or next() (although they shouldn't)",no,undetermined,0,0,0,no,0.05537899686733402,no,0.01237858229204842,no,0.011735747266651721,no,0.011194179530373443,no,0.010837483879369624
1521,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// peek ahead,no,undetermined,0,0,0,no,0.003058542798483122,no,0.002978101505531057,no,0.0027339268443882857,no,0.002501785553278305,no,0.002387969764375078
1522,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if we reach the end of the string w/o finding the // matching end, that is an exception",no,undetermined,0,0,0,no,0.002972624505105203,no,0.0029916296339392756,no,0.002885557595650223,no,0.0026854108556836473,no,0.00254681133265089
1523,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// there were no queued additions // and the role has a cache,no,undetermined,0,0,0,no,0.002314191472056002,no,0.0038431910945888118,no,0.0032283274322081564,no,0.0025733649678394885,no,0.0024352901654896794
1524,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Print page,no,undetermined,0,0,0,no,0.003567889670588895,no,0.004154247667764861,no,0.0038536252793965964,no,0.003580669223504444,no,0.003433881355315778
1525,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// and this is not a forced initialization during flush,no,undetermined,0,0,0,no,0.011269619174251887,no,0.009401807725647977,no,0.00847502530108438,no,0.008944462119044438,no,0.008514832751168813
1526,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we have a placeholder, spin forward till we find the end",no,undetermined,0,0,0,no,0.009229173200555385,no,0.012380266207715549,no,0.011735836978484836,no,0.01118511359101888,no,0.010838645242451954
1527,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// make sure spinning forward did not put us past the end of the buffer...,no,undetermined,0,0,0,no,0.009127978641700004,no,0.012406729812989539,no,0.011738656374615661,no,0.01119221077099435,no,0.010828939351411172
1528,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// First, try to locate this resource through the current // context classloader.",no,undetermined,0,0,0,no,0.008477161681954363,no,0.006113508812906317,no,0.00522022647416084,no,0.0045897311087572295,no,0.004342591187485817
1529,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Next, try to locate this resource through this class's classloader",no,undetermined,0,0,0,no,0.022370783671435024,no,0.01238784972248965,no,0.011748361870289456,no,0.011185530878837308,no,0.010814291936139687
1530,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Next, try to locate this resource through the system classloader",no,undetermined,0,0,0,no,0.017296514106453414,no,0.011578024192066197,no,0.010665489075593776,no,0.009973950634233134,no,0.009504897607072621
1531,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Anywhere else we should look?,no,undetermined,0,0,0,no,0.03096817293882008,no,0.01236125087430813,no,0.011732341362500372,no,0.011191371574813288,no,0.01082232866652844
1532,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// would need an IdentitySet for this!,no,undetermined,0,0,0,yes,0.6132659015289801,no,0.5091162589857829,no,0.5078717702281911,no,0.5188880333713971,no,0.5240325015708277
1533,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Arrays.asList doesn't do primitive arrays,no,undetermined,0,0,0,no,0.00604324726352328,no,0.006140364775266519,no,0.00901960602041372,no,0.008913506856926197,no,0.010203283501083458
1534,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_0,no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
1535,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//faster?,no,undetermined,0,0,0,no,0.008338618068336748,no,0.008917744200350967,no,0.01082871379331174,no,0.010330478164237222,no,0.009946967353565943
1536,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//pass the entity-name, if not a collection-id",no,undetermined,0,0,0,no,0.010423531870294529,no,0.0061534381504742,no,0.00691056504609361,no,0.008923977820366058,no,0.008550836667086711
1537,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// right represents a joins originating from left; or // both right and left reprersent joins originating from the same FromElement,no,undetermined,0,0,0,no,0.005410146426017249,no,0.004877490742847444,no,0.004670966029976534,no,0.004319461420997562,no,0.004075018606406897
1538,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the name of a class,no,undetermined,0,0,0,no,0.0012074556710797188,no,0.0013130044280373304,no,0.0012229587452961559,no,0.0011082393494492699,no,0.0010343259708268993
1539,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Its the listener class name,no,undetermined,0,0,0,no,0.005978325882766399,no,0.004303223706771947,no,0.0043096581162363375,no,0.004071454725979412,no,0.003868052370897922
1540,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//allow 9,8,7,6,5,4,3,2,1",no,undetermined,0,0,0,no,0.006382021841698564,no,0.0056363975945783115,no,0.005294359360554129,no,0.00503165927352046,no,0.0048353802977860886
1541,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// default to element set if no elements() specified,no,undetermined,0,0,0,no,0.000281013047743248,no,0.0002914885428153892,no,0.00025829250740138157,no,0.00022344041644055594,no,0.00021423823667946474
1542,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// look for the instance by uuid,no,undetermined,0,0,0,no,0.0024182082728372674,no,0.00240840333722598,no,0.0021454538079747286,no,0.0019408531665574358,no,0.0019284717420977116
1543,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// first, lets determine whether to apply cglib or javassist based instrumentation...",no,undetermined,0,0,0,no,0.0019631871330710537,no,0.00160701250709962,no,0.0015255150229683326,no,0.0013830224245116559,no,0.0012694625208648324
1544,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Make sure we don't override previous set values,no,undetermined,0,0,0,no,0.0009353007704748715,no,0.0011265624004762214,no,0.0010054230383888354,no,0.0009005274722538618,no,0.0008390201243605865
1545,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//entirely optional!!,no,undetermined,0,0,0,no,0.0070939386434365785,no,0.008942767330751958,no,0.0067044538256579985,no,0.006339354442147969,no,0.006053117998531769
1546,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Its the listener instance (or better be),no,undetermined,0,0,0,no,0.08317111469697146,no,0.012377771127434467,no,0.011728059355845642,no,0.011181307373673005,no,0.010845958101698432
1547,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//context.unbind(boundName);,no,undetermined,0,0,0,no,0.0061468811997129015,no,0.005924224521979157,no,0.0055835940964337975,no,0.005041987122463806,no,0.0047988012998770365
1548,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//readResolveObject,no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
1549,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//cfg.setProperty(""hibernate.show_sql"", ""true"");",no,undetermined,0,0,0,no,0.0022403298604043898,no,0.004793528442840331,no,0.0045374013513303805,no,0.004099405442627789,no,0.003900350245621105
1550,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Defensive, convenience methods",no,undetermined,0,0,0,no,0.001638522609860176,no,0.0018179776498579853,no,0.0015938042932468874,no,0.001464243900054683,no,0.001370032270548475
1551,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Make sure you log the exception, as it might be swallowed",no,undetermined,0,0,0,no,0.017422676097346587,no,0.012394760899968002,no,0.011740133253214541,no,0.011207202574737623,no,0.01084654530671767
1552,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Begin unit of work,no,undetermined,0,0,0,no,0.011480954522725174,no,0.008675038519321237,no,0.008352228727867695,no,0.007972417093844395,no,0.0076785335715182385
1553,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Write HTML header,no,undetermined,0,0,0,no,0.0014325304334948871,no,0.0017375315728693744,no,0.0016449596413462973,no,0.0014839604701229181,no,0.0014203863677343432
1554,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Handle actions,no,undetermined,0,0,0,no,0.0028458870790983182,no,0.002915177150538758,no,0.0028595044250916235,no,0.00263429378234846,no,0.002777848292555122
1555,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Start the session to be used for this request,no,undetermined,0,0,0,no,0.007602199554620091,no,0.005436941849654096,no,0.005148408584150662,no,0.004746707617917333,no,0.004586860367411745
1556,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// cleanup code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.07310009513464963,no,0.012411435915794394,no,0.011716429257684482,no,0.01118290121554231,no,0.010832482050122995
1557,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// make the session available to the session factory's ""current context""",no,undetermined,0,0,0,no,0.004891566920843055,no,0.004745063029660753,no,0.004368995921533021,no,0.0041862492487822955,no,0.004023302230541637
1558,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// remove session from ""current context""",no,undetermined,0,0,0,no,0.004579105128472653,no,0.0038414559144047964,no,0.0035651864351241513,no,0.0032355620425378916,no,0.0030861194435484905
1559,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Eager fetch the collection so we can use it detached,no,undetermined,0,0,0,no,0.00363855779213564,no,0.0025445958388933426,no,0.0014375013792998204,no,0.001702325992141318,no,0.0016080466269627301
1560,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*
        Event anEvent = (Event) session
                .createCriteria(Event.class).setFetchMode(""participants"", FetchMode.JOIN)
                .add( Expression.eq(""id"", eventId) )
                .uniqueResult(); // Eager fetch the colleciton so we can use it detached
        */",no,undetermined,0,0,0,no,0.01658919797015303,no,0.009040610555441721,no,0.009024034873414456,no,0.00870550542823714,no,0.008332586476754132
1561,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// End of first unit of work,no,undetermined,0,0,0,no,0.0092194073573297,no,0.005856292824351909,no,0.005470632943603675,no,0.005156167373729742,no,0.004913988847481761
1562,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// or bidirectional safety method, setting both sides: aPerson.addToEvent(anEvent);",no,undetermined,0,0,0,no,0.00045282493788165125,no,0.0003760881275449892,no,0.00033785697876107104,no,0.00030276206695015596,no,0.000275356350520301
1563,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Begin second unit of work,no,undetermined,0,0,0,no,0.014813411178330776,no,0.011283628856556701,no,0.011513370833158836,no,0.011000689842346131,no,0.010485007334013115
1564,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Reattachment of aPerson,no,undetermined,0,0,0,no,0.0008766170780119664,no,0.0011284159154654817,no,0.0010261881986278172,no,0.00093197380717248,no,0.0008613941587018302
1565,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The getEmailAddresses() might trigger a lazy load of the collection,no,undetermined,0,0,0,no,0.045854495066155375,no,0.012408455425846343,no,0.011755332230855616,no,0.0111990700880624,no,0.010822889780008345
1566,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// We need our tm, so get it now and avoid doing other work // if there is a problem",no,undetermined,0,0,0,no,0.05394514419810138,no,0.012392927845509735,no,0.01173810600891034,no,0.011218088204878988,no,0.010851496591647006
1567,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Don't hold the JBC node lock throughout the tx, as that // prevents reads and other updates",no,undetermined,0,0,0,no,0.007535391165715553,no,0.004910197487766125,no,0.004555247055163081,no,0.004222328130222756,no,0.00390585333160269
1568,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// JBC put a version in the node when it created as part of // some internal operation. We are always newer, but if // the JBC version is > 1 something odd has happened",no,undetermined,0,0,0,no,0.026907779255117507,no,0.012405886882474343,no,0.011737691215759162,no,0.011170199013440256,no,0.010831588631400609
1569,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Not null if the Isolation level has been specified in the configuration file. // Otherwise, it is left to the Driver's default value.",no,undetermined,0,0,0,no,0.004446081570854109,no,0.003225992191912849,no,0.0025453300245397987,no,0.0022734658936031348,no,0.002140805899085979
1570,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Configured outside of Hibernate (i.e. Servlet container, or Java Bean Container // already has Proxool pools running, and this provider is to just borrow one of these",no,undetermined,0,0,0,no,0.03950370404243079,no,0.012389306996539754,no,0.011757591663998038,no,0.011203528560690314,no,0.010821560120587227
1571,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// loading collection xrefs ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0036630760476111883,no,0.003108443066141194,no,0.0015624082975261879,no,0.001252911449169361,no,0.0011838800297905767
1572,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Collection load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0033462549311427886,no,0.002034427860063915,no,0.0009246478172175544,no,0.0013121491360478948,no,0.0012376431290885264
1573,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*package*/,no,undetermined,0,0,0,no,0.0034329566677213947,no,0.003569072397892384,no,0.0033560416804782572,no,0.003095855193458484,no,0.0030481677094872563
1574,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the cache of the actual plans...,no,undetermined,0,0,0,no,0.0028777956644865325,no,0.003732392570248392,no,0.0028950382235635513,no,0.002678691459343418,no,0.002533817768537126
1575,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// (AS is always optional, for consistency with SQL/OQL)",no,undetermined,0,0,0,no,0.004482891705969158,no,0.00407406777675404,no,0.003702095603953517,no,0.003322723433554604,no,0.0030921110143691233
1576,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*package*/,no,undetermined,0,0,0,no,0.0034329566677213947,no,0.003569072397892384,no,0.0033560416804782572,no,0.003095855193458484,no,0.0030481677094872563
1577,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// assumes that types are all of span 1,no,undetermined,0,0,0,no,0.0021148559091931428,no,0.002065883718090638,no,0.0019492166182948285,no,0.0017837580550407483,no,0.0016742421926919534
1578,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// process the ""new"" HQL style where aliases are assigned // _after_ the class name or path expression ie. using // the AS construction",no,undetermined,0,0,0,no,0.0023140967275144344,no,0.0036022860898917565,no,0.003217874248328822,no,0.002899979933464474,no,0.002715258669627279
1579,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// is a primitive type // invokespecial,no,undetermined,0,0,0,no,0.0011472674133230685,no,0.001254503747991063,no,0.0011939637045758633,no,0.0011079294382971975,no,0.0010523985280274323
1580,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Start performing the updates,no,undetermined,0,0,0,no,0.0009402112303401682,no,0.0005725579977652913,no,0.0005150713882715461,no,0.0004310641148559341,no,0.0003986273280566086
1581,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// array of primitive type // do nothing,no,undetermined,0,0,0,no,0.001670871154044088,no,0.002227509755869839,no,0.0018528046213963044,no,0.001686147739622141,no,0.001577828287800146
1582,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// jdbc params are 1-based,no,undetermined,0,0,0,no,0.0041763837002295814,no,0.004422996650539413,no,0.004114519106341601,no,0.0038254457977560333,no,0.0035764892990738885
1583,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// don't care...,no,undetermined,0,0,0,no,0.0034856530525402387,no,0.0022900873430587395,no,0.002043543437644144,no,0.0018285190069995308,no,0.0017380886872163492
1584,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// on the inverse, it makes sense that if a ThreadLocalSessionContext- // bound session then gets deserialized to go ahead and re-bind it to // the ThreadLocalSessionContext session map.",no,undetermined,0,0,0,no,0.012462583575799307,no,0.012382263281003015,no,0.01174306752767972,no,0.011185205884299916,no,0.010826108276702665
1585,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Recognition code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.009668377185366252,no,0.008658352574904252,no,0.008413520629510533,no,0.008046204875328599,no,0.007770270184557969
1586,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// handle a path expression or class name that // appears at the start, in the ""new"" HQL // style or an alias that appears at the start // in the ""old"" HQL style",no,undetermined,0,0,0,no,0.03530406725078857,no,0.012373048427800121,no,0.011735344387243529,no,0.01119854934204202,no,0.010824059326783476
1587,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//important: reuse the same event instances for performance!,no,undetermined,0,0,0,no,0.016243316338551236,no,0.01239548572587403,no,0.011724786400132905,no,0.01121185448551929,no,0.010833298923950326
1588,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// don't care...,no,undetermined,0,0,0,no,0.0034856530525402387,no,0.0022900873430587395,no,0.002043543437644144,no,0.0018285190069995308,no,0.0017380886872163492
1589,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// don't care about other param types here, just those explicitly user-defined...",no,undetermined,0,0,0,no,0.0933925855523064,no,0.012376625016714037,no,0.011717416563651401,no,0.011193526393321619,no,0.010832079624331177
1590,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//handle <=, >=, !=, is not, not between, not in",no,undetermined,0,0,0,no,0.044781676934447026,no,0.012379135132507322,no,0.011738766183165182,no,0.011197733009434217,no,0.01084396048897544
1591,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// jdbc params are 1-based,no,undetermined,0,0,0,no,0.0041763837002295814,no,0.004422996650539413,no,0.004114519106341601,no,0.0038254457977560333,no,0.0035764892990738885
1592,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// named parameter,no,undetermined,0,0,0,no,0.009588833761969713,no,0.006892892495662241,no,0.006012686969625975,no,0.005617738692376042,no,0.005424157304563845
1593,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// could be either an ordinal or JPA-positional parameter,no,undetermined,0,0,0,no,0.03336608438651063,no,0.012375739035899053,no,0.011752344886052628,no,0.011187939160427809,no,0.010823190892474252
1594,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// strip the "" where """,no,undetermined,0,0,0,no,0.0021939884452182312,no,0.0018445891372829081,no,0.0016544497782854922,no,0.0014607030463373793,no,0.0013807490169513573
1595,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// a peek ahead showed this as an JPA-positional parameter,no,undetermined,0,0,0,no,0.018947872853830774,no,0.012396474727659753,no,0.011752815369004499,no,0.011175029004225909,no,0.010846190889803417
1596,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// make sure this ""name"" is an integral",no,undetermined,0,0,0,no,0.0184073617037565,no,0.012406510198168104,no,0.011755425636402991,no,0.01120455871026653,no,0.010839223975863486
1597,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// at the very least cleanup the data :),no,undetermined,0,0,0,no,0.07752867737325456,no,0.012391616941229252,no,0.011754375617336004,no,0.01121034958301024,no,0.010824554923743068
1598,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//60 seconds,no,undetermined,0,0,0,no,0.005668261617847649,no,0.0010884151823004873,no,0.0010043857154733806,no,0.0009125922672012871,no,0.0008595328877158856
1599,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//cannot be instantiated,no,undetermined,0,0,0,no,0.0010416018019503818,no,0.0010630598673401373,no,0.0009179150930604762,no,0.0008304998845825274,no,0.0007635711711158201
1600,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// transfer an explicitly defined entity name // handle the lazy attribute,no,undetermined,0,0,0,no,0.0211038508698294,no,0.012130420886809148,no,0.011748527331315008,no,0.011184998245774952,no,0.010842925597133629
1601,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//keep the behavior consistent even for boundary usages,no,undetermined,0,0,0,no,0.0027401693263364143,no,0.003215830651319787,no,0.003177844066791043,no,0.0029229153691875598,no,0.0027627253845703714
1602,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//keep the behavior consistent even for boundary usages,no,undetermined,0,0,0,no,0.0027401693263364143,no,0.003215830651319787,no,0.003177844066791043,no,0.0029229153691875598,no,0.0027627253845703714
1603,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// perform the actual work,no,undetermined,0,0,0,no,0.02337098719106106,no,0.012409535861685922,no,0.011727916850410823,no,0.011210382906729436,no,0.010821111993219642
1604,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ignore,no,undetermined,0,0,0,no,0.00014335230378915544,no,0.00013958636484248836,no,0.00012005421643621465,no,0.00010252236131852231,no,9.386482826389979e-05
1605,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//do the failfast put outside the scope of the JTA txn,no,undetermined,0,0,0,no,0.006601550302476032,no,0.005178160703924795,no,0.0045412837159846025,no,0.004318058750815175,no,0.004141492491715002
1606,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// get meta's from // <joined-subclass>,no,undetermined,0,0,0,no,0.009346924622689821,no,0.010976081042169612,no,0.010722715843661168,no,0.010139017284416171,no,0.00983451514820798
1607,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//ignore!,no,undetermined,0,0,0,no,0.00014335230378915544,no,0.00013958636484248836,no,0.00012005421643621465,no,0.00010252236131852231,no,9.386482826389979e-05
1608,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// parameters on the property mapping should // override parameters in the typedef,no,undetermined,0,0,0,no,0.008718319834792723,no,0.007117401145958249,no,0.006712924155437401,no,0.006293445331953187,no,0.007165970859206809
1609,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//NOTE SPECIAL CASE: // default to join and non-lazy for the ""second join"" // of the many-to-many",no,undetermined,0,0,0,no,0.015787143841559968,no,0.0054645320370219925,no,0.004803590365335584,no,0.00439647315430782,no,0.0042755463011418145
1610,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// create the node initially with the param name so that it shows // appropriately in the ""original text"" attribute",no,undetermined,0,0,0,no,0.03715058303640282,no,0.012408542483963968,no,0.011732773447779602,no,0.01118624104385981,no,0.010824526110512616
1611,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// DYNAMIC INSERT,no,undetermined,0,0,0,no,0.0006642624322637262,no,0.0012371312471199205,no,0.001258780195912675,no,0.0011462847305517634,no,0.0011433437374991286
1612,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// so we ""clock over"" on the first invocation",no,undetermined,0,0,0,no,0.0010151505289843893,no,0.0010081869016693751,no,0.000900347020643332,no,0.0008130966883475166,no,0.000753900317434495
1613,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// state ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0003011093400535459,no,0.00025652366089902446,no,0.00021904173054622877,no,0.0001879597314525569,no,0.00017260358637449197
1614,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// finally handle the exception,no,undetermined,0,0,0,no,0.0023860870323189156,no,0.00222768778516558,no,0.002173071532900183,no,0.002011249694540375,no,0.0018965623392373327
1615,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// a ""detached"" collection that belonged to a different entity",no,undetermined,0,0,0,no,0.013464835948032198,no,0.007635365251193297,no,0.006851046285655863,no,0.009314229729151803,no,0.00879920535988772
1616,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	void setComponentTuplizerFactory(ComponentTuplizerFactory componentTuplizerFactory) { //		this.componentTuplizerFactory = componentTuplizerFactory; //	},no,undetermined,0,0,0,no,0.006195085063456607,no,0.007606810594785518,no,0.0070006190139214,no,0.006907537457744506,no,0.006685726081533402
1617,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//element //index -> id,no,undetermined,0,0,0,no,0.0033142857315801794,no,0.0035580304871169997,no,0.003401913070049,no,0.00298726164512443,no,0.002936841887356089
1618,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// note that it might be better to iterate the snapshot but this is safe, // assuming the user implements equals() properly, as required by the Set // contract!",no,undetermined,0,0,0,no,0.07407400067211319,no,0.012372567847328366,no,0.011732570909481174,no,0.011175856853403466,no,0.010828893639554353
1619,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// collections detect changes made via their public interface and mark // themselves as dirty as a performance optimization,no,undetermined,0,0,0,no,0.019945812577295875,no,0.012394169389815635,no,0.011735587317575978,no,0.011207571290229729,no,0.010846599287628555
1620,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//saveOrUpdateCopy() is deprecated!,no,undetermined,0,0,0,no,0.024147526356855735,no,0.012405990127910662,no,0.011754849933714168,no,0.011179750668421713,no,0.010833889876186843
1621,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Set it!,no,undetermined,0,0,0,no,0.0014502479535081177,no,0.0022777715584037304,no,0.002121214292814287,no,0.0019154693485069472,no,0.0020877611289954086
1622,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// collectionPersister should not be null, but we don't want to throw // an exception if it is null",no,undetermined,0,0,0,no,0.09002095570702948,no,0.01239817841898702,no,0.011757758907333478,no,0.011206236646536107,no,0.010851872679332011
1623,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Case 1: Multi token keywords GROUP BY and ORDER BY // The next token ( LT(2) ) should be 'by'... otherwise, this is just an ident.",no,undetermined,0,0,0,no,0.008289241851065653,no,0.006632593936017191,no,0.005289897804313404,no,0.004898746088236218,no,0.004485661400472813
1624,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The default SQLExceptionConverter for all dialects is based on SQLState // since SQLErrorCode is extremely vendor-specific.  Specific Dialects // may override to return whatever is most appropriate for that vendor.,no,undetermined,0,0,0,no,0.01203749398760668,no,0.009572817580164705,no,0.009014773781030045,no,0.008664764397992636,no,0.008410468349510643
1625,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//only necessary for postgre < 7.4 //http://anoncvs.postgresql.org/cvsweb.cgi/pgsql/doc/src/sgml/ref/create_sequence.sgml,no,undetermined,0,0,0,no,0.013260448460783404,no,0.010260289502870291,no,0.008880595870554894,no,0.008523680648022485,no,0.008227243481769793
1626,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// otherwise a null or brand new collection // this will also (inefficiently) handle arrays, which // have no snapshot, so we can't do any better //processArrayOrNewCollection(collection, type);",no,undetermined,0,0,0,no,0.10768402696919924,no,0.0924808000457691,no,0.01173373639494729,no,0.011218707278295022,no,0.010856791150542866
1627,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// a ""detached"" collection that originally belonged to the same entity",no,undetermined,0,0,0,no,0.005899943850235827,no,0.0045790516269168515,no,0.004660742171433526,no,0.0053697456099955545,no,0.005171588767134244
1628,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// add the comment // nest the main query in an outer select // add the rownnumber bit into the outer query select list,no,undetermined,0,0,0,no,0.0021621910107544476,no,0.004427014668998695,no,0.004119614879311139,no,0.0036091850564092492,no,0.0034509432025416186
1629,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		 You may still have other ResultSets or update counts left to process here  //		 but you can't do it now or the ResultSet you just got will be closed ,no,undetermined,0,0,0,no,0.02223116792487464,no,0.012378896862354332,no,0.011741295230194208,no,0.011200999159889632,no,0.01084007557118338
1630,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Note: For object <-> SQL datatype mappings see: //	 Configuration Manager | Advanced | SQL | System DDL Datatype Mappings // //	TBD	registerColumnType(Types.BINARY,        ""binary($1)""); // changed 08-11-2005, jsl",no,undetermined,0,0,0,no,0.006459270563166697,no,0.012384983251477457,no,0.01174262210157327,no,0.011199942068068559,no,0.01081673433101438
1631,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// See if the second lookahed token can be an identifier.,no,undetermined,0,0,0,no,0.0026788895438130526,no,0.0023607324177648825,no,0.0022576622703927803,no,0.002032781722334934,no,0.0018554443583197655
1632,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Case 2: The current token is after FROM and before '.'.,no,undetermined,0,0,0,no,0.001675085456402475,no,0.0013928897421444846,no,0.0012130880952258283,no,0.0010713931817723657,no,0.0010080410832852787
1633,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//do nothing,no,undetermined,0,0,0,no,0.003567039198701599,no,0.0035809063232813327,no,0.0032638962675140735,no,0.0029708308193493326,no,0.0028174548825522466
1634,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// TRIM(end_keyword string-expression-1 FROM string-expression-2) // use Hibernate implementation ""From"" is one of the parameters they pass in position ?3 //registerFunction( ""trim"", new SQLFunctionTemplate(Hibernate.STRING, ""trim(?1 ?2 from ?3)"") );",no,undetermined,0,0,0,no,0.009876071047345189,no,0.012391847648269588,no,0.011747077496042873,no,0.011199188572688423,no,0.010833720116738235
1635,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Whether this dialect has an Identity clause added to the data type or a completely seperate identity // data type,no,undetermined,0,0,0,no,0.011728112907243333,no,0.012413576197200049,no,0.01172953268363576,no,0.011193587229007424,no,0.010851735954035152
1636,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// (EQ NULL b) => (IS_NULL b),no,undetermined,0,0,0,no,0.007649956857148659,no,0.0051890717378312795,no,0.004939946228422908,no,0.004633613142924073,no,0.004447017045343302
1637,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Create nodes that track line and column number.,no,undetermined,0,0,0,no,0.0010649232762851364,no,0.0010082053946905377,no,0.0008891580312002107,no,0.0007736222746551307,no,0.0007192171264164871
1638,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//do nothing,no,undetermined,0,0,0,no,0.003567039198701599,no,0.0035809063232813327,no,0.0032638962675140735,no,0.0029708308193493326,no,0.0028174548825522466
1639,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Add NOT if it's negated.,no,undetermined,0,0,0,no,0.002448433801023236,no,0.002411412925697668,no,0.0022309555132574497,no,0.002044482596929222,no,0.0018690896645829006
1640,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// (EQ a NULL) => (IS_NULL a),no,undetermined,0,0,0,no,0.007649956857148659,no,0.0051890717378312795,no,0.004939946228422908,no,0.004633613142924073,no,0.004447017045343302
1641,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// The path AST should be a DotNode, and it should have been evaluated already.",no,undetermined,0,0,0,no,0.06083055336940385,no,0.012401988248711766,no,0.011732687538895746,no,0.011184110959693896,no,0.010825286015702805
1642,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Force a substitution!,no,undetermined,0,0,0,no,0.0012441883482727433,no,0.0012313629113838052,no,0.0011438626514287736,no,0.0010089898255688967,no,0.000942660885294423
1643,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if // if // Otherwise, handle the error normally.",no,undetermined,0,0,0,no,0.00239229786022537,no,0.002219337838093992,no,0.001326880967600662,no,0.001149282379227928,no,0.0010694313863848027
1644,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// the database now holds a lock + the object is flushed from the cache, // so release the soft lock",no,undetermined,0,0,0,no,0.004055778675538441,no,0.005469136414113348,no,0.004790168189824739,no,0.004389012965904978,no,0.004145860083603299
1645,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// now update the object .. has to be outside the main if block above (because of collections),no,undetermined,0,0,0,no,0.005174436110415381,no,0.00584331611283482,no,0.004601371316717164,no,0.004227159218474446,no,0.004036078282922403
1646,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Named Queries:,no,undetermined,0,0,0,no,0.001160942713540731,no,0.0021458693046755946,no,0.0023586111200151146,no,0.0020398062070150504,no,0.001936068418516492
1647,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this is a situation where the entity id is assigned by a post-insert generator // and was saved outside the transaction forcing it to be delayed,no,undetermined,0,0,0,no,0.08119883265339364,no,0.012366885791160517,no,0.011731237620240257,no,0.011195548376621586,no,0.010837324792337137
1648,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//grab its state saved at deletion,no,undetermined,0,0,0,no,0.002470260211593067,no,0.0022512975319932548,no,0.0019841570738519765,no,0.0018124688471865497,no,0.0017222951041972728
1649,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// grab its current state,no,undetermined,0,0,0,no,0.00079990913030374,no,0.0006040537813136954,no,0.0005122036403634118,no,0.0004521290558806837,no,0.00041550197874261303
1650,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this will throw an error if there's something wrong.,no,undetermined,0,0,0,no,0.12915928225790954,no,0.09787615649221594,no,0.011734982082891882,no,0.011199359991559701,no,0.010842994836380966
1651,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// collection deletions are a special case since update() can add // deletions of collections not loaded by the session.,no,undetermined,0,0,0,no,0.0055922338444866345,no,0.0030881958363376772,no,0.0022151351254322874,no,0.0020826822491502328,no,0.0020295934014615685
1652,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if the natural-id is marked as non-mutable, it is not retrieved during a // normal database-snapshot operation...",no,undetermined,0,0,0,no,0.002132713709793274,no,0.002928875783478726,no,0.0033204529410448755,no,0.0032087834863178152,no,0.0030035425237052793
1653,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// watch out for a case where old is still referenced // somewhere in the object graph! (which is a user error),no,undetermined,0,0,0,no,0.042882771025862416,no,0.012370185060990926,no,0.011731815728707917,no,0.011182992352657638,no,0.010817506739255313
1654,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//slice, to get the columns for this component //property",no,undetermined,0,0,0,no,0.016317767864094154,no,0.01238063427289872,no,0.011752077290501173,no,0.011204894719246367,no,0.010836084848797875
1655,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// schedule the update // note that we intentionally do _not_ pass in currentPersistentState!,no,undetermined,0,0,0,no,0.015015379339543356,no,0.01240842185670023,no,0.01173437602801621,no,0.011197131437931458,no,0.010852659189267972
1656,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// substitutes into values by side-effect,no,undetermined,0,0,0,no,0.003852644397937377,no,0.012378405863805033,no,0.011731673386073636,no,0.011207027966266988,no,0.01084346130143082
1657,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// give the Interceptor a chance to process property values, if the properties // were modified by the Interceptor, we need to set them back to the object",no,undetermined,0,0,0,no,0.004862215406697944,no,0.006754984408735866,no,0.005917901828712653,no,0.005591934156826047,no,0.005304463380834876
1658,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// (NOT (EQ a b) ) => (NE a b),no,undetermined,0,0,0,no,0.0252760938253986,no,0.012363785799530918,no,0.011744266605868888,no,0.011195048850025329,no,0.010820870608628384
1659,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// compare to cached state (ignoring collections unless versioned),no,undetermined,0,0,0,no,0.004287689507436214,no,0.0020132529213211714,no,0.0017704871593252104,no,0.001597076048369262,no,0.0015040268172130298
1660,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// if it was dirtied by a collection only,no,undetermined,0,0,0,no,0.0027166043449131853,no,0.0029617137990191095,no,0.0021689519258011754,no,0.0027752809315831706,no,0.002553065540778642
1661,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// check nullability but do not perform command execute // we'll use scheduled updates for that.,no,undetermined,0,0,0,no,0.014371227125560302,no,0.012377051999831714,no,0.01173366514838641,no,0.011184812173099752,no,0.010834871111917497
1662,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This 'dot' expression now refers to the resulting from element.,no,undetermined,0,0,0,no,0.013195841963563056,no,0.006435770538295522,no,0.006025338297001004,no,0.005593048694548297,no,0.005361330683684933
1663,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// (NOT (LIKE a b) ) => (NOT_LIKE a b),no,undetermined,0,0,0,no,0.0177974696124424,no,0.012407261268274752,no,0.011734725241326112,no,0.011179426617686285,no,0.010809620319360959
1664,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The CollectionEntry.isReached() stuff is just to detect any silly users   // who set up circular or shared references between/to collections.,no,undetermined,0,0,0,no,0.03941961473152029,no,0.012394584215847852,no,0.01173718539056862,no,0.011191880612559307,no,0.010832427460048484
1665,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// detached collection wrappers that get found + reattached // during flush shouldn't be ignored,no,undetermined,0,0,0,no,0.004288450451830324,no,0.002885036157631015,no,0.0022683190774365597,no,0.002863971437291411,no,0.002595513795404916
1666,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// (NOT (IS_NOT_NULL a b) ) => (IS_NULL a b),no,undetermined,0,0,0,no,0.011672679473715865,no,0.01237708236284457,no,0.01172458778782478,no,0.0111730540342355,no,0.01081601728113963
1667,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// The unique property value represented here may or may not be // serializable, so we do an explicit check here in order to generate // a better error message",no,undetermined,0,0,0,no,0.06923813559293915,no,0.012366241123455352,no,0.011727350841205195,no,0.011190813063796995,no,0.010836304660988139
1668,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if the version of a newly instantiated object is not the same // as the version seed value, use that as the unsaved-value",no,undetermined,0,0,0,no,0.007362952088804584,no,0.005171561561878738,no,0.004336089621293427,no,0.003872953997692762,no,0.003628331577212559
1669,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ie. we never have to null out a reference to // an uninitialized proxy,no,undetermined,0,0,0,no,0.007559459284205124,no,0.012363969941968563,no,0.011748528467242962,no,0.011189457095623214,no,0.010819586475865792
1670,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// (NOT (NOT_LIKE a b) ) => (LIKE a b),no,undetermined,0,0,0,no,0.0177974696124424,no,0.012407261268274752,no,0.011734725241326112,no,0.011179426617686285,no,0.010809620319360959
1671,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//give the Interceptor a chance to modify property values,no,undetermined,0,0,0,no,0.007159052987602978,no,0.01239082181131512,no,0.011741561310241103,no,0.011197877825094096,no,0.010844396088094543
1672,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//now we might need to recalculate the dirtyProperties array,no,undetermined,0,0,0,no,0.06405120124636562,no,0.012371455377202897,no,0.011713684768020663,no,0.01121024366260762,no,0.010814474595682747
1673,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//use the current version,no,undetermined,0,0,0,no,0.003995652143766845,no,0.003977500669621365,no,0.0036782675574720735,no,0.0034161175017528972,no,0.0032346401372492064
1674,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// object loaded by update(),no,undetermined,0,0,0,no,0.0024010494798990182,no,0.002125593696603543,no,0.001869433615766284,no,0.0017067088597698525,no,0.0016094201867071663
1675,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// ignore this row, the collection is in process of // being loaded somewhere further ""up"" the stack",no,undetermined,0,0,0,no,0.006461108211619881,no,0.004872977333790796,no,0.003920331432407809,no,0.004322267722991288,no,0.004000180860634415
1676,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Entity load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // 	* currently, not yet used...",no,undetermined,0,0,0,no,0.31033312611009567,no,0.21393469354365502,no,0.23085320010316523,no,0.2490738189059844,no,0.25088182366309436
1677,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// dirty check against the usual snapshot of the entity,no,undetermined,0,0,0,no,0.004476732067710216,no,0.0035399493497254935,no,0.0046368048726238825,no,0.004767297066602008,no,0.004544997832871461
1678,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// this implementation is supposed to tolerate incorrect unsaved-value // mappings, for the purpose of backward-compatibility",no,undetermined,0,0,0,no,0.06181545073521179,no,0.01238224927336844,no,0.011724948581244045,no,0.011185585024937559,no,0.010828006063647387
1679,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// this implementation is supposed to tolerate incorrect unsaved-value // mappings, for the purpose of backward-compatibility",no,undetermined,0,0,0,no,0.06181545073521179,no,0.01238224927336844,no,0.011724948581244045,no,0.011185585024937559,no,0.010828006063647387
1680,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// wrap up any new collections directly referenced by the object // or its components,no,undetermined,0,0,0,no,0.002945350435457904,no,0.0023023609282654366,no,0.002629361098171639,no,0.002401602698869502,no,0.002324863277518326
1681,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// skip this check for composite-ids relating to dom4j entity-mode; // alternatively, we could add a check to make sure the incoming id value is // an instance of Element...",no,undetermined,0,0,0,no,0.23696722288215127,no,0.1112897490636401,no,0.1201590484546458,no,0.12261372553628153,no,0.12433772956861013
1682,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// upgrade the lock if necessary: //lock(result, lockMode);",no,undetermined,0,0,0,no,0.002220687373029785,no,0.0029573651715615735,no,0.0030459456445689624,no,0.0027500056357319157,no,0.0025456772527502995
1683,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// now, any collections that are initialized // inside this block do not get updated - they // are ignored until the next flush",no,undetermined,0,0,0,no,0.02501977903711159,no,0.011114996017495694,no,0.009883874102726323,no,0.010863961249868291,no,0.010433740520809072
1684,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// (NOT (NE a b) ) => (EQ a b),no,undetermined,0,0,0,no,0.0252760938253986,no,0.012363785799530918,no,0.011744266605868888,no,0.011195048850025329,no,0.010820870608628384
1685,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//we must clone embedded composite identifiers, or  //we will get back the same instance that we pass in",no,undetermined,0,0,0,no,0.007144305480266072,no,0.004636035539804538,no,0.004663614059426011,no,0.004339261245119883,no,0.004190088064659962
1686,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Sub-insertions should occur before containing insertion so // Try to do the callback now,no,undetermined,0,0,0,no,0.0036240993923467558,no,0.0034576773565095724,no,0.0033407266258233767,no,0.0030437907822446057,no,0.002848151778965281
1687,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// (NOT (LE a b) ) => (GT a b),no,undetermined,0,0,0,no,0.011672679473715865,no,0.01237708236284457,no,0.01172458778782478,no,0.0111730540342355,no,0.01081601728113963
1688,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// (NOT (GE a b) ) => (LT a b),no,undetermined,0,0,0,no,0.011672679473715865,no,0.01237708236284457,no,0.01172458778782478,no,0.0111730540342355,no,0.01081601728113963
1689,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// (NOT (LT a b) ) => (GE a b),no,undetermined,0,0,0,no,0.011672679473715865,no,0.01237708236284457,no,0.01172458778782478,no,0.0111730540342355,no,0.01081601728113963
1690,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//the entity is not associated with the session, so //try interceptor and unsaved-value",no,undetermined,0,0,0,no,0.001437882612965376,no,0.0009892545530708196,no,0.0009302327799837724,no,0.0008549241352675895,no,0.0007995908395085189
1691,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// ... and the expected token type was an identifier, then:",no,undetermined,0,0,0,no,0.0027959349266663256,no,0.0026975502967173837,no,0.0026183651109733704,no,0.0023536733992388956,no,0.0022027121275697034
1692,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// igndore it...,no,undetermined,0,0,0,no,0.0028034010841930107,no,0.003881346196039441,no,0.0036170998898757555,no,0.003139592138081879,no,0.0030714003921373627
1693,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// [jsd] The fix for HHH-558...,no,undetermined,0,0,0,no,0.04390959256403634,no,0.012394030329492897,no,0.011757510886952849,no,0.011181190339795102,no,0.010819782934271743
1694,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// If the token can tell us if it could be an identifier...,no,undetermined,0,0,0,no,0.023517918656406525,no,0.012374795995184382,no,0.011725709109852399,no,0.011185090536212913,no,0.010854698621397468
1695,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we are now at a new tree level,no,undetermined,0,0,0,no,0.028370101369667687,no,0.012406843530339908,no,0.011756639116469863,no,0.011186365615327485,no,0.010821916119589521
1696,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// dirty check against the database snapshot, if possible/necessary",no,undetermined,0,0,0,no,0.009072358030755815,no,0.010847476442786172,no,0.011757152379853131,no,0.011194901790252343,no,0.010849068828148576
1697,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the Interceptor handled the dirty checking,no,undetermined,0,0,0,no,0.08411123776509628,no,0.012405070470224655,no,0.01174011651994962,no,0.011219024032532663,no,0.010856724157523607
1698,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Use the delegate.,no,undetermined,0,0,0,no,0.003502859926000323,no,0.003483379393544214,no,0.002871317608492502,no,0.002599421926846601,no,0.002458189426341379
1699,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ( (Column) ( (SimpleValue) ic.getIndex() ).getColumnIterator().next() // ).setNullable(false);,no,undetermined,0,0,0,no,0.003380831937568682,no,0.0020560845061603,no,0.0018497825175740079,no,0.0017055445430929684,no,0.0016155834027089934
1700,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//60 seconds,no,undetermined,0,0,0,no,0.005668261617847649,no,0.0010884151823004873,no,0.0010043857154733806,no,0.0009125922672012871,no,0.0008595328877158856
1701,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// get meta's from <subclass>,no,undetermined,0,0,0,no,0.009346924622689821,no,0.010976081042169612,no,0.010722715843661168,no,0.010139017284416171,no,0.00983451514820798
1702,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// evict() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.003041302687396098,no,0.003448047261273936,no,0.003158255469903013,no,0.0028388711784548366,no,0.0026753604335622897
1703,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//ignore!,no,undetermined,0,0,0,no,0.00014335230378915544,no,0.00013958636484248836,no,0.00012005421643621465,no,0.00010252236131852231,no,9.386482826389979e-05
1704,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// get the id from the object,no,undetermined,0,0,0,no,0.01167811283482548,no,0.012394617650638779,no,0.011648816749596402,no,0.010995086752561918,no,0.01059977070962288
1705,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// do the put outside the scope of the JTA txn,no,undetermined,0,0,0,no,0.006601550302476032,no,0.005178160703924795,no,0.0045412837159846025,no,0.004318058750815175,no,0.004141492491715002
1706,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//what is the version on the database?,no,undetermined,0,0,0,no,0.015480788267469976,no,0.011490976210312533,no,0.010397369487792218,no,0.009708315331515492,no,0.009255010832424198
1707,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/// HHH-2378,no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
1708,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//stops flush being called multiple times if this method is recursively called,no,undetermined,0,0,0,no,0.025286558196446575,no,0.011010795889160567,no,0.007801123199684817,no,0.007062904839100952,no,0.006923467844488369
1709,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//will result in a SQL UPDATE:,no,undetermined,0,0,0,no,0.0016622544539995961,no,0.001774977721870893,no,0.0015776466869122678,no,0.0013908050686990755,no,0.0013104437968678698
1710,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//else do nothing (don't even reassociate object!),no,undetermined,0,0,0,no,0.0046466733500898465,no,0.004750170179365192,no,0.004273126218576759,no,0.0038879544238247265,no,0.0036677678032427112
1711,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// no existing row - do an insert,no,undetermined,0,0,0,no,0.0004048318228400566,no,0.0006970461326419299,no,0.0007429793862158709,no,0.0006602656851349367,no,0.0006227177096448079
1712,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// --- Inner classes (moved here from sql-gen.g) ---,no,undetermined,0,0,0,no,0.03604059694946624,no,0.012368523511353698,no,0.011750240319199698,no,0.011168766803530406,no,0.010829316998126165
1713,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// reference type,no,undetermined,0,0,0,no,0.0060764953654464495,no,0.0059977849846347886,no,0.004959937249975449,no,0.00456133268915316,no,0.004334517458868238
1714,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Use the delegate.,no,undetermined,0,0,0,no,0.003502859926000323,no,0.003483379393544214,no,0.002871317608492502,no,0.002599421926846601,no,0.002458189426341379
1715,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// should be the first, but just to be safe...",no,undetermined,0,0,0,no,0.0013643017495720841,no,0.001212190269633456,no,0.001004962550298661,no,0.0009226891572207,no,0.000848525196104192
1716,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//return a proxy if appropriate,no,undetermined,0,0,0,no,0.0032704930202888905,no,0.002695981927065297,no,0.002418672021224139,no,0.002291119927965453,no,0.00216831365251259
1717,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// some filters affecting the collection are enabled on the session, so do not do the put into the cache.",no,undetermined,0,0,0,no,0.008536147389691964,no,0.010433385282206116,no,0.008679042057622672,no,0.00826439886667752,no,0.007886130536034014
1718,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Generate an explicit join for the root dot node.   The implied joins will be collected and passed up // to the root dot node.,no,undetermined,0,0,0,no,0.0013389352520422812,no,0.0007381820280621432,no,0.0006608800424584591,no,0.0006016995770724572,no,0.0005367169873021448
1719,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// A session is considered to contain an entity only if the entity has // an entry in the session's persistence context and the entry reports // that the entity has not been removed,no,undetermined,0,0,0,no,0.0033004118397951324,no,0.001762050449378047,no,0.002604387696672016,no,0.0025561652389839867,no,0.0029722077725259127
1720,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ... and the token could be an identifer and the error is // a mismatched token error ...,no,undetermined,0,0,0,no,0.02795310359823954,no,0.01237076534604103,no,0.01174163245919103,no,0.011214080223830102,no,0.010823584829914523
1721,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If a where clause was specified in the update/delete query, use it to limit the // returned ids here...",no,undetermined,0,0,0,no,0.010857054312202087,no,0.012396591072641464,no,0.011740211322823456,no,0.011039740972087871,no,0.010682463419041095
1722,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Default implementation: // If this node has a data type, and that data type is not an association, then this is scalar.",no,undetermined,0,0,0,no,0.03125633860736032,no,0.012392726661863515,no,0.011716809600607326,no,0.011206378960262536,no,0.010837847004245275
1723,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Resolve the LHS fully, generate implicit joins.  Pass in the property name so that the resolver can // discover foreign key (id) properties.",no,undetermined,0,0,0,no,0.007262551421342264,no,0.006033054284793795,no,0.005859764405925417,no,0.005472796662866756,no,0.005207513144146787
1724,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If the propertyType is null and there isn't a parent, just // stop now... there was a problem resolving the node anyway.",no,undetermined,0,0,0,no,0.010877399886822866,no,0.012396965891310303,no,0.011733779473347005,no,0.011207098527625201,no,0.010850830927690841
1725,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//We do not look for an existing join on the same path, because //it makes sense to join twice on the same collection role",no,undetermined,0,0,0,no,0.019314692973011797,no,0.012376602705848828,no,0.011750998318921714,no,0.01121660614204496,no,0.010834716232470124
1726,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// return new uninitialized proxy,no,undetermined,0,0,0,no,0.0009754737596909287,no,0.00101013900364399,no,0.0009104165700471099,no,0.0008235740022833238,no,0.0007708653826798926
1727,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this object was already loaded,no,undetermined,0,0,0,no,0.013938177340762834,no,0.012385506180162523,no,0.011746990393318677,no,0.01119432111789775,no,0.010825644711753402
1728,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Entity was found in second-level cache...,no,undetermined,0,0,0,no,0.01046320097119804,no,0.00840272698800349,no,0.008953405666126167,no,0.008882693009707725,no,0.008419027844903816
1729,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// intializes result by side-effect,no,undetermined,0,0,0,no,0.002192707279574077,no,0.012401738608068664,no,0.01174965544623423,no,0.011213122053979544,no,0.01084437305854333
1730,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// NOTE : ( max - 1 ) because first is zero-based while max is not...,no,undetermined,0,0,0,no,0.009375260476926701,no,0.011562253022201721,no,0.010528703309828295,no,0.010173445072871792,no,0.009728159195030813
1731,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// A shallow query is ok (although technically there should be no fetching here...),no,undetermined,0,0,0,no,0.0015142168565629092,no,0.003902535237312098,no,0.0035895765919801035,no,0.00453484436114652,no,0.004282403643065557
1732,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Delegate to the QueryLoader...,no,undetermined,0,0,0,no,0.002527995908198527,no,0.0020921729900172537,no,0.0017156775048162401,no,0.001523033071747858,no,0.0014327320790496734
1733,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Remember the parameters for the compilation.,no,undetermined,0,0,0,no,0.003416376244780708,no,0.003094857705757166,no,0.002872662302800521,no,0.002665693473714019,no,0.002543185307781262
1734,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// -- Package local methods for the QueryLoader delegate --,no,undetermined,0,0,0,no,0.0077341703748496785,no,0.007907327532491052,no,0.006535144762057936,no,0.006046001687797385,no,0.0059271317784733825
1735,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Delegate to the QueryLoader...,no,undetermined,0,0,0,no,0.002527995908198527,no,0.0020921729900172537,no,0.0017156775048162401,no,0.001523033071747858,no,0.0014327320790496734
1736,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// double,no,undetermined,0,0,0,no,0.0010344587833293097,no,0.001159506722976161,no,0.0010856997163940082,no,0.0009905562529812612,no,0.0009333044214954557
1737,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//now done in EntityIdentityInsertAction //persister.setIdentifier( entity, id, source.getEntityMode() );",no,undetermined,0,0,0,no,0.015023314131528997,no,0.010565110352826639,no,0.011745174608357712,no,0.01119312032056621,no,0.01083965567271779
1738,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// double,no,undetermined,0,0,0,no,0.0010344587833293097,no,0.001159506722976161,no,0.0010856997163940082,no,0.0009905562529812612,no,0.0009333044214954557
1739,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Use the token as an identifier.,no,undetermined,0,0,0,no,0.0016724070230599688,no,0.001977867381100653,no,0.0017717105710070204,no,0.001578815932763021,no,0.0014524788968924996
1740,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//some statistics,no,undetermined,0,0,0,no,0.012008067669425911,no,0.011404645413846445,no,0.010757401450038097,no,0.010247557813263267,no,0.009940600004557886
1741,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//safe from concurrent modification because of how entryList() is implemented on IdentityMap,no,undetermined,0,0,0,no,0.025119283669048812,no,0.012405257595969265,no,0.011738583107096141,no,0.01119796432904935,no,0.010835529590014702
1742,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Transform the tree.,no,undetermined,0,0,0,no,0.002866926761098101,no,0.00307255854499769,no,0.00279534560185802,no,0.0025156961894987,no,0.0024113788381058356
1743,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Parse the query string into an HQL AST.,no,undetermined,0,0,0,no,0.00961040950933415,no,0.006011606320444465,no,0.005435910668227355,no,0.004893228376377173,no,0.004694223047111766
1744,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we do not actually propogate ANTLRExceptions as a cause, so // log it here for diagnostic purposes",no,undetermined,0,0,0,no,0.017370405358425864,no,0.01238712045796883,no,0.011735214285796911,no,0.011183259961043322,no,0.010837640643176742
1745,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// So this needs to be safe from concurrent modification problems. // It is safe because of how IdentityMap implements entrySet(),no,undetermined,0,0,0,no,0.053355545182666185,no,0.012378414069637156,no,0.01171625982964721,no,0.011175402333302747,no,0.010821722390788359
1746,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//only needed during compilation phase...,no,undetermined,0,0,0,no,0.003756330187005269,no,0.0056291549950872,no,0.005372162561610801,no,0.005862097091306975,no,0.005549221931841336
1747,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Update the status of the object and if necessary, schedule an update",no,undetermined,0,0,0,no,0.0056397538551373316,no,0.006056022824774,no,0.005497634030180083,no,0.005174612009191541,no,0.004928837839236808
1748,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Schedule updates to collections:,no,undetermined,0,0,0,no,0.005153342414467889,no,0.0022226969097154706,no,0.0019642518347089354,no,0.001713672752930638,no,0.0016154789720182626
1749,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we need to lock the collection caches before // executing entity inserts/updates in order to // account for bidi associations,no,undetermined,0,0,0,no,0.010288996432828596,no,0.005861453249463984,no,0.0050674048537725945,no,0.005343795952194617,no,0.004930743391134956
1750,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//the database has changed now, so the subselect results need to be invalidated",no,undetermined,0,0,0,no,0.005149545543845871,no,0.006881454844096269,no,0.005545766506880234,no,0.005103669516439593,no,0.004906334316060067
1751,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if the collection is dereferenced, remove from the session cache //iter.remove(); //does not work, since the entrySet is not backed by the set",no,undetermined,0,0,0,no,0.02984017478503629,no,0.012410684960789614,no,0.011718346433599548,no,0.011180659209858472,no,0.01081702286844215
1752,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// PHASE 1 : Parse the HQL into an AST.,no,undetermined,0,0,0,no,0.01103665351030696,no,0.005230317309097666,no,0.004863449534270139,no,0.004552019665332194,no,0.0043385930842231345
1753,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// key is an entity involved with the operation performed by the listener; // value is a flag indicating if the listener explicitly operates on the entity,no,undetermined,0,0,0,no,0.002859565428621164,no,0.0021398398434436237,no,0.0030275481823713603,no,0.002849735630975285,no,0.0026510004243305877
1754,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//get a snapshot,no,undetermined,0,0,0,no,0.0012219096296900735,no,0.0029870752096642387,no,0.006710685477352427,no,0.0065444533017567615,no,0.006264491717830132
1755,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*public final Currency getCurrency(int col) throws HibernateException {
		return (Currency) get(col);
	}*/",no,undetermined,0,0,0,no,0.004538432134844202,no,0.0056857698073423096,no,0.005572862343517002,no,0.005244501088144405,no,0.004962901733632552
1756,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// right represents a joins originating from left...,no,undetermined,0,0,0,no,0.0020226918928843143,no,0.0019621170857327683,no,0.0018919355375039918,no,0.0017301363612990815,no,0.0016133319772865973
1757,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//overriden to avoid System.exit,no,undetermined,0,0,0,no,0.0035681875308595317,no,0.0037224853104907314,no,0.003434371546491781,no,0.0032493957420689254,no,0.003083834904244918
1758,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If the query is already compiled, skip the compilation.",no,undetermined,0,0,0,no,0.0015082615253221954,no,0.0008841693250531604,no,0.0007946458966668396,no,0.0006746720251692787,no,0.0006186941456866796
1759,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* package-private */,no,undetermined,0,0,0,no,0.007324499569675553,no,0.0025515341346191754,no,0.0024015864803768826,no,0.00222281963095376,no,0.0021565627506037366
1760,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* package-private */,no,undetermined,0,0,0,no,0.007324499569675553,no,0.0025515341346191754,no,0.0024015864803768826,no,0.00222281963095376,no,0.0021565627506037366
1761,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// remember that ordinal parameters numbers are 1-based!!!,no,undetermined,0,0,0,no,0.018337823552400198,no,0.012387195326891061,no,0.011745016839197786,no,0.011183080035668097,no,0.010827448388831104
1762,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//overriden to avoid System.exit,no,undetermined,0,0,0,no,0.0035681875308595317,no,0.0037224853104907314,no,0.003434371546491781,no,0.0032493957420689254,no,0.003083834904244918
1763,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// all clear,no,undetermined,0,0,0,no,0.0019686763154544,no,0.00163330029990781,no,0.0014960381273184345,no,0.001383740054429685,no,0.0013077464142072232
1764,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Ignore the token class name parameter, and use a specific token class.",no,undetermined,0,0,0,no,0.0033475893168824497,no,0.003345591219590495,no,0.00301923829337186,no,0.0027834882556032497,no,0.002632246834506432
1765,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//this is a query and we are loading multiple instances of the same collection role,no,undetermined,0,0,0,no,0.1277748792848725,no,0.12142683186616934,no,0.09917522206684001,no,0.0111801113284728,no,0.010823960671405609
1766,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// EARLY EXIT!!!,no,undetermined,0,0,0,no,0.0005905483870258867,no,0.0006314912289696719,no,0.0005659715806632397,no,0.0005143622300302791,no,0.0004802970847279881
1767,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// before any callbacks, etc, so subdeletions see that this deletion happened first",no,undetermined,0,0,0,no,0.007414753024244634,no,0.00776446280441582,no,0.00785877067156396,no,0.007613663737298121,no,0.007231778390267445
1768,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Ensures that containing deletions happen before sub-deletions,no,undetermined,0,0,0,no,0.0003295990107158509,no,0.0004041420430813591,no,0.0003852733680516572,no,0.0003384510504781432,no,0.00031117526333203214
1769,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// cascade-delete to collections BEFORE the collection owner is deleted,no,undetermined,0,0,0,no,0.0024426114670978,no,0.002841067956083704,no,0.0026952279411997164,no,0.002649364675679223,no,0.0024228297817944725
1770,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// cascade-delete to many-to-one AFTER the parent was deleted,no,undetermined,0,0,0,no,0.0030556106777001615,no,0.003295807952877294,no,0.003140541469150546,no,0.00284218341502942,no,0.0031242533199357984
1771,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if it is an initialized proxy, let cascade // handle it later on",no,undetermined,0,0,0,no,0.01425019649197547,no,0.012371639887574865,no,0.011738986030465587,no,0.011203777692696745,no,0.01082325867134594
1772,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//assign the requested id to the proxy, *before* //reassociating the proxy",no,undetermined,0,0,0,no,0.00129585023736385,no,0.0011775039753516767,no,0.0010909085139018484,no,0.0009738698345061363,no,0.0009117847508734424
1773,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// an uninitialized proxy, noop, don't even need to // return an id, since it is never a save()",no,undetermined,0,0,0,no,0.023329950293233502,no,0.012399878428215468,no,0.011726685455246553,no,0.011215987666694545,no,0.010852903122948874
1774,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//initialize properties of the event:,no,undetermined,0,0,0,no,0.0017171993902276932,no,0.0015762268985972834,no,0.0014777161523798692,no,0.0013549188488436686,no,0.0012728144361754345
1775,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//return the id in the event object,no,undetermined,0,0,0,no,0.05222997381381702,no,0.012406823304879803,no,0.011718938665891037,no,0.011208276917438023,no,0.010832153178091037
1776,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//TRANSIENT or DELETED,no,undetermined,0,0,0,no,0.005536239357972845,no,0.006690667376564693,no,0.006345179643693684,no,0.005838535296113285,no,0.0056528031741056185
1777,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// assume this is a newly instantiated transient object // which should be saved rather than updated,no,undetermined,0,0,0,no,0.29985032565952385,no,0.25900469662355774,no,0.2593685430993755,no,0.26333617456606123,no,0.26302086100614946
1778,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this is a transient object with existing persistent state not loaded by the session,no,undetermined,0,0,0,no,0.026407547021697966,no,0.012375675955571708,no,0.011724027508539334,no,0.011175752565428881,no,0.010855757276336793
1779,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// check two ""adjecent"" nodes at the top of the from-clause tree",no,undetermined,0,0,0,no,0.004342747030454779,no,0.00475540395398002,no,0.004439365237277301,no,0.003996117772778548,no,0.004072944177352314
1780,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//cachedState,",no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
1781,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//a ""detached"" collection!",no,undetermined,0,0,0,no,0.0035513000926513925,no,0.0018544164267232921,no,0.000403985511046133,no,0.0008268480676094154,no,0.00077831513293289
1782,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if the collection belonged to a different entity, // clean up the existing state of the collection",no,undetermined,0,0,0,no,0.009357869311177802,no,0.0056152249536907265,no,0.004230777291040546,no,0.005263788333607763,no,0.004903109089341235
1783,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//log.debug( ""calling onLoad()"" );",no,undetermined,0,0,0,no,0.001880551862392608,no,0.002020695581824905,no,0.0019342167411789623,no,0.001752016009868223,no,0.0016678820936939644
1784,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//EARLY EXIT!,no,undetermined,0,0,0,no,0.0005905483870258867,no,0.0006314912289696719,no,0.0005659715806632397,no,0.0005143622300302791,no,0.0004802970847279881
1785,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// note: performExecutions() clears all collectionXxxxtion  // collections (the collection actions) in the session,no,undetermined,0,0,0,no,0.006007072143611391,no,0.0029262315821418816,no,0.0021293028698730503,no,0.002158790656940255,no,0.0021598644010862346
1786,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//ie. the entity came in from update(),no,undetermined,0,0,0,no,0.0028132831507923753,no,0.012374823184561,no,0.011723473992904389,no,0.011208519014471665,no,0.010854115518726743
1787,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//we need to check even if it was not initialized, because of delayed adds!",no,undetermined,0,0,0,no,0.008615852110418395,no,0.010879858477635488,no,0.008717729021872745,no,0.00813207986706932,no,0.007673358506872606
1788,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//NOTE: EARLY EXIT!,no,undetermined,0,0,0,no,0.0021531618463119678,no,0.0020327342500316434,no,0.0018253944961150069,no,0.0016843563046879404,no,0.0015823869429030268
1789,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// if template is null we just write the function out as it appears in the hql statement,no,undetermined,0,0,0,no,0.005920469281890225,no,0.005553620485694143,no,0.005189398336420408,no,0.0048242505042386695,no,0.004612500013305614
1790,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// semantic action processing ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.010463494935484952,no,0.012071384241824657,no,0.011263576874509467,no,0.010040314554716495,no,0.009818822489267106
1791,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// find any entities that are still transient after retry,no,undetermined,0,0,0,no,0.0222380465412511,no,0.01239651205114306,no,0.01171468832135765,no,0.011191955704154597,no,0.01084187878897181
1792,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Initialize SQL nodes here.,no,undetermined,0,0,0,no,0.005502666845471983,no,0.0068695447376943275,no,0.006351853099608466,no,0.005673521459465003,no,0.005396670350437724
1793,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//EARLY EXIT!,no,undetermined,0,0,0,no,0.0005905483870258867,no,0.0006314912289696719,no,0.0005659715806632397,no,0.0005143622300302791,no,0.0004802970847279881
1794,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Check the persistence context for an entry relating to this // entity to be merged...,no,undetermined,0,0,0,no,0.0215509845776912,no,0.012383173444392348,no,0.011742640923403139,no,0.01121556948170284,no,0.010843064065695976
1795,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//DELETED,no,undetermined,0,0,0,no,0.0005969851271554059,no,0.00201310966354626,no,0.0018896717208623933,no,0.0016640128248823778,no,0.0015903391846720154
1796,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Set the unresolved path in this node and the parent. // Set the text for the parent.,no,undetermined,0,0,0,no,0.008772736280785324,no,0.007819537606087104,no,0.007195987791237027,no,0.006596391822471156,no,0.006316962270417501
1797,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// 60 second lock timeout,no,undetermined,0,0,0,no,0.001314787347272684,no,0.0013190817938769004,no,0.0013499012925057188,no,0.0010380377363296168,no,0.0009402022963657782
1798,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*
				 * Property prop = new Property(); prop.setName(""id"");
				 * prop.setPropertyAccessorName(""embedded""); prop.setValue(id);
				 * entity.setIdentifierProperty(prop);
				 */",no,undetermined,0,0,0,no,0.005135049647032964,no,0.004324410054235293,no,0.004167968301815306,no,0.00391492699103956,no,0.0037465293865915797
1799,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//before cascade!,no,undetermined,0,0,0,no,0.0017992820422301908,no,0.005550919860954098,no,0.006101219734044174,no,0.00580584638990631,no,0.0052280505688934616
1800,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// continue...; we'll find out if it ends up not getting saved later,no,undetermined,0,0,0,no,0.018987591976914728,no,0.012399668557339764,no,0.011756717445437147,no,0.011170828176647423,no,0.010836616005116274
1801,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// cascade first, so that all unsaved objects get their // copy created before we actually copy",no,undetermined,0,0,0,no,0.0009027833448162208,no,0.0021248929373135043,no,0.0021271820616269015,no,0.0019031145777139206,no,0.0017848918085922808
1802,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// check that entity id = requestedId,no,undetermined,0,0,0,no,0.009721832715646264,no,0.00630153585351101,no,0.008693852904091639,no,0.008764441659559538,no,0.008410259289012997
1803,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Not a collection? // Return the entity property mapping.,no,undetermined,0,0,0,no,0.00623859707764093,no,0.0035450060366942443,no,0.0027365437442829206,no,0.0030991339026641717,no,0.0036936850723893865
1804,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// collection of <many-to-any/> mappings... // used to circumvent the component-collection check below...,no,undetermined,0,0,0,no,0.01288127506152592,no,0.011198185417370532,no,0.006855355406191718,no,0.008501635317346495,no,0.008388304760677518
1805,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Otherwise, the destination node was implied by the FROM clause and the FROM clause processor // will automatically add it in the right place.",no,undetermined,0,0,0,no,0.010781913958094316,no,0.008381248715872492,no,0.006903113490873122,no,0.006571068351000214,no,0.0061094558493020494
1806,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If the first identifier in the path referrs to the class alias (not the class name), then this // is a correlated subselect.  If it's a correlated sub-select, use the existing table alias.  Otherwise // generate a new one.",no,undetermined,0,0,0,no,0.005385764307108874,no,0.0035233992267709167,no,0.002916024194601648,no,0.002679898634305118,no,0.002565672013976151
1807,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// This uses a PathExpressionParser but notice that compound paths are not valid, // only bare names and simple paths:",no,undetermined,0,0,0,no,0.03594876086368774,no,0.012366696252688002,no,0.011730043958486364,no,0.011176233062883296,no,0.010828835281699239
1808,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		origin.addDestination(destination); // Add the query spaces.,no,undetermined,0,0,0,no,0.0048900751612974015,no,0.006253179055624286,no,0.005713465926326393,no,0.005080513422891712,no,0.004771555137271923
1809,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Reset the node type, because the rest of the system is expecting FROM_FRAGMENT, all we wanted was // for the factory to create the right sub-class.  This might get reset again later on anyway to make the // SQL generation simpler.",no,undetermined,0,0,0,no,0.05642438404943526,no,0.012387022662761645,no,0.011741253052639226,no,0.011201626952274679,no,0.010822138249953024
1810,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//explicit = true;	// This is an explict Select. //ArrayList sqlResultTypeList = new ArrayList();,no,undetermined,0,0,0,no,0.006934193250062567,no,0.006931897966429081,no,0.006660831190212586,no,0.006345050536089511,no,0.006052614989227739
1811,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//sqlResultTypeList.add( type ); // Generate the select expression.,no,undetermined,0,0,0,no,0.006668347264883732,no,0.003755822275270384,no,0.0033893392625713066,no,0.0031422248213602588,no,0.0029439176341419146
1812,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If the expression list has exactly one expression, and the type of the expression is a collection // then this might be a collection function, such as index(c) or size(c).",no,undetermined,0,0,0,no,0.09410098973866832,no,0.012379329326311143,no,0.011711682683620769,no,0.011172502752454804,no,0.010840226857947758
1813,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The uber-rule here is that we need to include  subclass joins if // the FromElement is in any way dereferenced by a property from // the subclass table; otherwise we end up with column references // qualified by a non-existent table reference in the resulting SQL...,no,undetermined,0,0,0,no,0.05482032360286108,no,0.012373018305546537,no,0.011722930485445008,no,0.011196744372751541,no,0.010819930051117123
1814,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//before cascade!,no,undetermined,0,0,0,no,0.0017992820422301908,no,0.005550919860954098,no,0.006101219734044174,no,0.00580584638990631,no,0.0052280505688934616
1815,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// cascade first, so that all unsaved objects get their  // copy created before we actually copy",no,undetermined,0,0,0,no,0.0009027833448162208,no,0.0021248929373135043,no,0.0021271820616269015,no,0.0019031145777139206,no,0.0017848918085922808
1816,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//copyValues works by reflection, so explicitly mark the entity instance dirty",no,undetermined,0,0,0,no,0.05512982882434291,no,0.012392514291332283,no,0.011724306605407105,no,0.011195978036827817,no,0.010829857067173257
1817,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The following variables are stacks that keep information about each subexpression // in the list of nested subexpressions we are currently processing.,no,undetermined,0,0,0,no,0.02523620345089999,no,0.012372857884093608,no,0.011737014325967389,no,0.011202137493019182,no,0.01083033253755815
1818,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// no need to even collect this information if the persister is considered multi-table,no,undetermined,0,0,0,no,0.034132401208967544,no,0.012366785638981822,no,0.011740550198948369,no,0.011193372606422418,no,0.010845194167088991
1819,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// as soon as we encounter our first letter, return the substring // from that position",no,undetermined,0,0,0,no,0.0025319728844907376,no,0.0024604972519136686,no,0.0022182848259225912,no,0.0020531875787498663,no,0.001927494987715973
1820,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Retrieve the value of the designated column in the current row of this // ResultSet object as a java.io.Reader object,no,undetermined,0,0,0,no,0.010030820643388477,no,0.009738768752669588,no,0.00854812645022774,no,0.008100130484361616,no,0.0077488988081396174
1821,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//for arrays, replaceElements() may return a different reference, since //the array length might not match",no,undetermined,0,0,0,no,0.03522059808520159,no,0.012391813761425804,no,0.011742608134138206,no,0.011189618640532072,no,0.010827142309166777
1822,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// should not be able to reach last without maxPosition being set // unless there are no results,no,undetermined,0,0,0,no,0.0032478053379404828,no,0.004046510180161025,no,0.0037089088308226922,no,0.0034499735053740207,no,0.003225509935734754
1823,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//do not use proxiesByKey, since not all //proxies that point to this session's //instances are in that collection!",no,undetermined,0,0,0,no,0.02038426870753658,no,0.012371275664537738,no,0.011758326867631999,no,0.01120207520561899,no,0.010845740346690697
1824,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//this should be a call to resolve(), not resolveIdentifier(),  //'cos it might be a property-ref, and we did not cache the //referenced value",no,undetermined,0,0,0,no,0.06018309082754179,no,0.012400808431366333,no,0.011749758281202368,no,0.01119436746320587,no,0.010835971675424428
1825,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If we have <tt>not-found=""ignore""</tt> association mapped to a // formula, we always need to dirty check it, so we can update the // second-level cache",no,undetermined,0,0,0,no,0.027289691079472527,no,0.012373694162634341,no,0.011742714188859069,no,0.01117952907912439,no,0.010842173908852412
1826,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// We now have the value of the property-ref we reference.  However, // we need to dig a little deeper, as that property might also be // an entity type, in which case we need to resolve its identitifier",no,undetermined,0,0,0,no,0.13760456988759331,no,0.056599649898319254,no,0.01171326935818685,no,0.011175887299898725,no,0.010844391985356165
1827,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//true if this is a query and we are loading multiple instances of the same collection role //otherwise this is a CollectionInitializer and we are loading up a single collection or batch,no,undetermined,0,0,0,no,0.12241194220531144,no,0.11016043108279895,no,0.0629001277329676,no,0.011199970617036238,no,0.010839502893512109
1828,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// PERSISTER,no,undetermined,0,0,0,no,0.014265064612808392,no,0.009449688829097677,no,0.009692140647363384,no,0.008601222716180027,no,0.008142829598044146
1829,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This method should be implemented assuming it's valid to  // do start/stop/start -- leave state appropriate for another start,no,undetermined,0,0,0,no,0.06157132680550342,no,0.01239583241909276,no,0.011759341924907026,no,0.011201086181290421,no,0.010857179380531469
1830,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// We don't want to waste effort setting an option if JBC is // already in LOCAL mode. If JBC is REPL_(A)SYNC then check // if they passed an config option to disable query replication,no,undetermined,0,0,0,no,0.010075149413868875,no,0.011084647671553448,no,0.01126385602935288,no,0.010425760979042431,no,0.00998497791816909
1831,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// See if we had a 2nd invalidation from the same initial // preinvalidation timestamp. If so, only increment // if the new current value is an increase",no,undetermined,0,0,0,no,0.0006238785119447027,no,0.0006546987177492174,no,0.0006267806316053986,no,0.0005630809572391695,no,0.000517435882152698
1832,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If the workspace node has null as well, OK; if not we've // been modified in a non-comparable manner, which we have to // treat as us being newer",no,undetermined,0,0,0,no,0.009112710283356877,no,0.008321762774798694,no,0.007956242047621494,no,0.007646976798515462,no,0.007195067923582321
1833,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//maintain correct duplication if loaded in a cartesian product,no,undetermined,0,0,0,no,0.004438134589083267,no,0.004348925302364779,no,0.0038452294707979383,no,0.003597254004807573,no,0.0034521635658525036
1834,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// local cache, so we use synchronization",no,undetermined,0,0,0,no,0.002450090770975744,no,0.0030517440110035413,no,0.002777042242261489,no,0.0023316937186133365,no,0.0021605593252473107
1835,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*DataSource unpooled = DataSources.unpooledDataSource(
				jdbcUrl, props.getProperty(Environment.USER), props.getProperty(Environment.PASS)
			);*/",no,undetermined,0,0,0,no,0.0010117788510322205,no,0.0011265086244159938,no,0.0010663790482234514,no,0.0009810280149959148,no,0.000920380971120812
1836,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Don't need to lock the cache here, since if someone // else inserted the same pk first, the insert would fail",no,undetermined,0,0,0,no,0.00786678670805549,no,0.00624381078813995,no,0.00608082206742474,no,0.005645090032276584,no,0.005629446084487056
1837,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we need to grab the version value from the entity, otherwise // we have issues with generated-version entities that may have // multiple actions queued during the same flush",no,undetermined,0,0,0,no,0.03758726850406895,no,0.0124014149602876,no,0.011744562597115966,no,0.011187404676625733,no,0.010834754110599266
1838,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// short-circuit(s) // no new elements, the old list contains only Orphans // no old elements, so no Orphans neither",no,undetermined,0,0,0,no,0.0011055255369899685,no,0.002378002767426644,no,0.0024001860552544272,no,0.0022492202872986767,no,0.0020661955056986087
1839,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//test out the optimizer:,no,undetermined,0,0,0,no,0.0018292830048135954,no,0.0016967321594749754,no,0.0015585462435216235,no,0.0013773944021889708,no,0.0012943470926131092
1840,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// get the updated snapshot of the entity state by cloning current state; // it is safe to copy in place, since by this time no-one else (should have) // has a reference  to the array",no,undetermined,0,0,0,no,0.01197212076094392,no,0.010915003891112888,no,0.0117309162954305,no,0.01120856396386659,no,0.010842562098369023
1841,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*!persister.isCacheInvalidationRequired()*/,no,undetermined,0,0,0,no,0.014265064612808392,no,0.009449688829097677,no,0.009692140647363384,no,0.008601222716180027,no,0.008142829598044146
1842,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// long,no,undetermined,0,0,0,no,0.006027455724331034,no,0.00683802480411424,no,0.006317515149910514,no,0.0060047785744141245,no,0.00576392792540691
1843,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Set the existing pool flag to true,no,undetermined,0,0,0,no,0.003482216658624352,no,0.0037154616706558887,no,0.0034862664552384585,no,0.0031837731239280514,no,0.00306636098419641
1844,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Validate that an alias name was provided to determine which pool to use,no,undetermined,0,0,0,no,0.014918385388022024,no,0.012364813267858273,no,0.011753123152165408,no,0.011183682071810239,no,0.010831143760562252
1845,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// We have created the pool ourselves, so shut it down",no,undetermined,0,0,0,no,0.00328489217267351,no,0.003465554809204884,no,0.0032251672577306924,no,0.0030121096525340743,no,0.0028439681167734513
1846,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//the load() which takes an entity does not pass an entityName,no,undetermined,0,0,0,no,0.004299187537229074,no,0.003859872107961294,no,0.004569308283786494,no,0.004525843747378676,no,0.004299990107018657
1847,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Note : expected in the syntax: //      type=listenerClass //          ({sep}type=listenerClass)* // where {sep} is any whitespace or comma,no,undetermined,0,0,0,no,0.012750100281658159,no,0.012389753095641937,no,0.011750029197370435,no,0.011199513170527711,no,0.01084641705093482
1848,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// tree cache in optimistic mode seems to have as very difficult // time with remove calls on non-existent nodes (NPEs)...,no,undetermined,0,0,0,no,0.12080529837478797,no,0.10234607311963553,no,0.09820159361550033,no,0.011175917872370704,no,0.010841938189016189
1849,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// We ignore minimalPutOverride. JBossCache putForExternalRead is // already about as minimal as we can get; it will promptly return // if it discovers that the node we want to write to already exists,no,undetermined,0,0,0,no,0.004128063783600552,no,0.004046563346715681,no,0.004046569215613233,no,0.003736886566696478,no,0.0035980414804879825
1850,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//it does not refer to an alias of a projection, //look for a property",no,undetermined,0,0,0,no,0.0193367435991881,no,0.012401620699597589,no,0.011753040473198334,no,0.011198467387139546,no,0.010842323055184207
1851,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// do nothing for persistent instances,no,undetermined,0,0,0,no,0.01157941660760949,no,0.009298998878220619,no,0.008669608307585439,no,0.00728407332161608,no,0.006882829505645006
1852,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// OptimisticCache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.006140888174090093,no,0.004901065980396148,no,0.004578600266881531,no,0.004352388675445458,no,0.006026218188316145
1853,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//			option.setDataVersion( NonLockingDataVersion.INSTANCE );,no,undetermined,0,0,0,no,0.0017567411175652863,no,0.0024674097304650936,no,0.0024420956345408426,no,0.002245500661338688,no,0.002129823423072233
1854,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//assume true, since we don't really know, and it doesn't matter",no,undetermined,0,0,0,no,0.12236117396897453,no,0.11640988232434767,no,0.1104028861076646,no,0.10753166878518355,no,0.11839796126324789
1855,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Show the modified AST.,no,undetermined,0,0,0,no,0.0025140231702245317,no,0.001643197787084247,no,0.0015559506982436447,no,0.001435743690388461,no,0.0013617046538970032
1856,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// NOTE : firstRow is zero-based,no,undetermined,0,0,0,no,0.010431780035316878,no,0.010449890363382487,no,0.009693624158800332,no,0.00910223290741896,no,0.008588124550994747
1857,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Initialize dirty flags for arrays + collections with composite elements // and reset reached, doupdate, etc.",no,undetermined,0,0,0,no,0.03652659833444926,no,0.0123836901053424,no,0.011725952753322135,no,0.011175427442851623,no,0.010844993327546926
1858,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Use the delegate.,no,undetermined,0,0,0,no,0.003502859926000323,no,0.003483379393544214,no,0.002871317608492502,no,0.002599421926846601,no,0.002458189426341379
1859,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Use the delegate.,no,undetermined,0,0,0,no,0.003502859926000323,no,0.003483379393544214,no,0.002871317608492502,no,0.002599421926846601,no,0.002458189426341379
1860,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Tell the dot node about the join type.,no,undetermined,0,0,0,no,0.005280704626140509,no,0.003101742316475279,no,0.0028876341658382937,no,0.0026748620566715052,no,0.0024727048089688373
1861,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This 'dot' expression now refers to the resulting from element.,no,undetermined,0,0,0,no,0.013195841963563056,no,0.006435770538295522,no,0.006025338297001004,no,0.005593048694548297,no,0.005361330683684933
1862,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Among other things, updateReachables() will recursively load all // collections that are moving roles. This might cause entities to // be loaded.",no,undetermined,0,0,0,no,0.09154515652103676,no,0.012395937695045272,no,0.011715444089072996,no,0.01119700568574154,no,0.010831196910432196
1863,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // Post-flushing section // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0013257604067786852,no,0.0013256415924411207,no,0.0015973547465549446,no,0.0014731279885304032,no,0.001391322520493457
1864,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//otherwise recreate the mapping between the collection and its key,no,undetermined,0,0,0,no,0.0019545844482421466,no,0.002185446706645295,no,0.0010370427492571324,no,0.000953787332488734,no,0.001044698307311541
1865,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Create a parameter specification for the collection filter...,no,undetermined,0,0,0,no,0.01450693491372522,no,0.010824377855202693,no,0.007623523109085892,no,0.008544890570073203,no,0.00816056258580213
1866,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Attach any mapping-defined ""ORDER BY"" fragments",no,undetermined,0,0,0,no,0.0009458923259472423,no,0.0007286337613737958,no,0.0006359033170057776,no,0.0005640819255677389,no,0.0006185019115355569
1867,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we found some extends attributes referencing entities which were // not already processed.  here we need to locate all entity-names // and class-names contained in this document itself, making sure // that these get removed from the extendz list such that only // extends names which require us to delay processing (i.e. // external to this document and not yet processed) are contained // in the returned result",no,undetermined,0,0,0,no,0.17867946891520503,no,0.17500507877579305,no,0.21914343651177473,no,0.22158463683593718,no,0.21438695650837547
1868,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Make sure that the persister is versioned,no,undetermined,0,0,0,no,0.008820566401940509,no,0.007299466588032403,no,0.007003890961036475,no,0.006164128499360521,no,0.0056641564708914925
1869,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// for native-sql queries, the param metadata is determined outside // any relation to a query plan, because query plan creation and/or // retreival for a native-sql query depends on all of the return // types having been set, which might not be the case up-front when // param metadata would be most useful",no,undetermined,0,0,0,no,0.1047885222756536,no,0.07534627749163997,no,0.011732210663395304,no,0.011217807916367476,no,0.01082036109002944
1870,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this function has a template -> redirect output and catch the arguments,no,undetermined,0,0,0,no,0.0022574404803124663,no,0.004226342557498806,no,0.003826073521194893,no,0.003572871063855082,no,0.003440061976838998
1871,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// use the id assigned to the instance,no,undetermined,0,0,0,no,0.00763012399617375,no,0.0060456468754003945,no,0.005099536539174274,no,0.004726531183120396,no,0.0044795705320375126
1872,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if no array holder we found an unwrappered array (this can't occur, // because we now always call wrap() before getting to here) // return (ah==null) ? true : searchForDirtyCollections(ah, type);",no,undetermined,0,0,0,no,0.009605917410307687,no,0.01148411808855036,no,0.00966049266782068,no,0.008933061796177586,no,0.008472077118092817
1873,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// a collection loaded in the current session // can not possibly be the collection belonging // to the entity passed to update(),no,undetermined,0,0,0,no,0.005226251334378253,no,0.005355674535220963,no,0.0038683628065671453,no,0.0045539053753446855,no,0.004335613321710228
1874,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If the data type is not an association type, it could not have been in the FROM clause.",no,undetermined,0,0,0,no,0.02205483560669151,no,0.012409254677205918,no,0.01174579790109425,no,0.01118392437050932,no,0.010846308092287866
1875,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// We need to generate ids as part of this bulk insert. // // Note that this is only supported for sequence-style generators and // post-insert-style generators; basically, only in-db generators",no,undetermined,0,0,0,no,0.05165040068844308,no,0.0123898103617065,no,0.01175034916536506,no,0.011182998259935061,no,0.010846195520260168
1876,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//first look for a reference to a projection alias,no,undetermined,0,0,0,no,0.0039129123968833866,no,0.0038957535550405,no,0.003390055609065597,no,0.0031280486673328197,no,0.0030978868140550124
1877,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//first look for a reference to a projection alias,no,undetermined,0,0,0,no,0.0039129123968833866,no,0.0038957535550405,no,0.003390055609065597,no,0.0031280486673328197,no,0.0030978868140550124
1878,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0049067910499512495,no,0.004744873634309048,no,0.0046054100539297685,no,0.004235492110777513,no,0.004042746457915209
1879,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If there are no collection fetches, then no further checks are needed",no,undetermined,0,0,0,no,0.0022989126996202404,no,0.00219993232238364,no,0.001643374532234149,no,0.0016600135223400544,no,0.00155908422688814
1880,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// --Commented out by Inspection (12/11/04 10:56 AM): int getWarningCount();,no,undetermined,0,0,0,no,0.0021199075373425705,no,0.001916245170627467,no,0.0018096979271687086,no,0.0016756140117849508,no,0.0015855791172563964
1881,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if a ThreadLocalSessionContext-bound session happens to get // serialized, to be completely correct, we need to make sure // that unbinding of that session occurs.",no,undetermined,0,0,0,no,0.011731653755109239,no,0.01081227923661956,no,0.009964979089520891,no,0.009438759508689165,no,0.008895867474455142
1882,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Make #@%$^#^&# sure no alias is applied to the table name,no,undetermined,0,0,0,no,0.003643023171354706,no,0.003266975965549907,no,0.003233907298420693,no,0.002892599769975548,no,0.0026873412956940203
1883,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Delegate to the QueryLoader...,no,undetermined,0,0,0,no,0.002527995908198527,no,0.0020921729900172537,no,0.0017156775048162401,no,0.001523033071747858,no,0.0014327320790496734
1884,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// switch,no,undetermined,0,0,0,no,0.0022060031678396803,no,0.0037587274116183582,no,0.0036624205633588513,no,0.0034044400633343416,no,0.0032736271486462497
1885,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we do not actually propogate ANTLRExceptions as a cause, so // log it here for diagnostic purposes",no,undetermined,0,0,0,no,0.017370405358425864,no,0.01238712045796883,no,0.011735214285796911,no,0.011183259961043322,no,0.010837640643176742
1886,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Use the explicitly declared select expression; determine the // return types indicated by each select token,no,undetermined,0,0,0,no,0.006349730696885942,no,0.005144448277030389,no,0.004696862707952763,no,0.0042716826238469,no,0.003982885486913625
1887,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// select clauses for insert statements should alwasy be treated as shallow,no,undetermined,0,0,0,no,0.008582877718488544,no,0.012395101810556669,no,0.011741079926796578,no,0.011172521925477902,no,0.010847286499440651
1888,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// After that, process the JOINs. // Invoke a delegate to do the work, as this is farily complex.",no,undetermined,0,0,0,no,0.027757357476897667,no,0.012393920799203284,no,0.011733037132240925,no,0.011209286472741964,no,0.010838335717922441
1889,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Cache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.00608119234392458,no,0.006506576858929597,no,0.006067024049951349,no,0.005660785659908245,no,0.0070781276273690396
1890,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// simple cache of param metadata based on query string.  Ideally, the // original ""user-supplied query"" string should be used to retreive this // metadata (i.e., not the para-list-expanded query string) to avoid // unnecessary cache entries. // Used solely for caching param metadata for native-sql queries, see // getSQLParameterMetadata() for a discussion as to why...",no,undetermined,0,0,0,no,0.08369062930325183,no,0.012410401478412715,no,0.011744633227987347,no,0.011185879635027299,no,0.010853058966467703
1891,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Use the delegate.,no,undetermined,0,0,0,no,0.003502859926000323,no,0.003483379393544214,no,0.002871317608492502,no,0.002599421926846601,no,0.002458189426341379
1892,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Alias references and identifiers use the same node class.,no,undetermined,0,0,0,no,0.011222068226049993,no,0.009705316335198179,no,0.00894696056270724,no,0.008435382548244249,no,0.008109900204994903
1893,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// make a new one,no,undetermined,0,0,0,no,0.002653805020170185,no,0.002863061179810851,no,0.002700725553000232,no,0.002475419049306417,no,0.002439175149393612
1894,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,///////////////////////////////////////////////////////////////////////,no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
1895,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// these are just two unrelated table references,no,undetermined,0,0,0,no,0.017402973712821578,no,0.01238810283740948,no,0.01174736651910383,no,0.011176511153362297,no,0.010832973425277264
1896,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// again, both should be FromElements",no,undetermined,0,0,0,no,0.016652202522057253,no,0.012382280193154228,no,0.011726885858070166,no,0.011181349746476325,no,0.010825940468411467
1897,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// check a set of parent/child nodes in the from-clause tree // to determine if a comma is required between them,no,undetermined,0,0,0,no,0.015305994161226912,no,0.012387503463328745,no,0.01172460131943882,no,0.011198350189682266,no,0.01085170771110828
1898,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// PHASE 2 : Analyze the HQL AST, and produce an SQL AST.",no,undetermined,0,0,0,no,0.002506471133798079,no,0.001214192240026908,no,0.001088352432069189,no,0.0009919047676237751,no,0.0009316493445214459
1899,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// PHASE 3 : Generate the SQL.,no,undetermined,0,0,0,no,0.0015428862803429073,no,0.0018921897084032083,no,0.001628628850476314,no,0.0015155695904810588,no,0.0014167224663570398
1900,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Otherwise, we have a non-scalar select with defined collection fetch(es). // Make sure that there is only a single root entity in the return (no tuples)",no,undetermined,0,0,0,no,0.0061692377777508405,no,0.003627376607928692,no,0.0022360932948468975,no,0.002115922552258377,no,0.0019219558702446957
1901,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//			paramTranslations = new ParameterTranslationsImpl( collectedParameterSpecifications );,no,undetermined,0,0,0,no,0.0007331217137823508,no,0.000981836705468619,no,0.0009672985146750711,no,0.0008501913685675985,no,0.0007968272559977449
1902,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we are already processing a dot-structure,no,undetermined,0,0,0,no,0.016352478724891477,no,0.012403146681546946,no,0.011748563808864632,no,0.011212722836384711,no,0.010842893964270777
1903,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Should mean that no such property was found,no,undetermined,0,0,0,no,0.011213592230182144,no,0.012153796316923713,no,0.011471943419213523,no,0.011040846727342239,no,0.010559020062360572
1904,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Initialize the error handling delegate.,no,undetermined,0,0,0,no,0.003962150628232965,no,0.0029614096551590814,no,0.002507306638894057,no,0.002210864159534086,no,0.002099141487845665
1905,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Was there an explicit select expression?,no,undetermined,0,0,0,no,0.0013027134368929175,no,0.0012895585304596906,no,0.0011244708517658298,no,0.0010284451632040451,no,0.000941165000622207
1906,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Resolve everything up to this dot, but don't resolve the placeholders yet.",no,undetermined,0,0,0,no,0.06368241160346992,no,0.012391342103323539,no,0.011717855457243796,no,0.011195610898146531,no,0.010816386257784997
1907,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// (NOT (NOT_BETWEEN a b) ) => (BETWEEN a b),no,undetermined,0,0,0,no,0.01273856196090466,no,0.007592660547669072,no,0.007134543804319075,no,0.006994236600285009,no,0.006666712014746609
1908,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Just add a 'not' parent.,no,undetermined,0,0,0,no,0.008125863450161284,no,0.008196604519790677,no,0.0076475449412786315,no,0.007049810124601957,no,0.006700718651021475
1909,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// First, save off the pertinent ids, as the return value",no,undetermined,0,0,0,no,0.0036203449487685825,no,0.0019397459672181845,no,0.0018019337009474278,no,0.001657298462685322,no,0.0015401977722288376
1910,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// check to see if the connection is in auto-commit  // mode (no connection means aggressive connection // release outside a JTA transaction context, so MUST // be autocommit mode)",no,undetermined,0,0,0,no,0.030889052345297187,no,0.01240044870417364,no,0.011717925273522022,no,0.011186246624950427,no,0.010837307940208965
1911,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// First, save off the pertinent ids, saving the number of pertinent ids for return",no,undetermined,0,0,0,no,0.007549714467620501,no,0.00396546345524038,no,0.0039013210038701053,no,0.003706884574898406,no,0.003524122606410364
1912,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Start performing the deletes,no,undetermined,0,0,0,no,0.001137775388828136,no,0.0007321542469583001,no,0.0007989290748389509,no,0.0006987435668050536,no,0.0006500235246164384
1913,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Don't forget to resolve the argument! // Resolve the collection function now.,no,undetermined,0,0,0,no,0.006646205796703956,no,0.005843681032914386,no,0.00469185282902617,no,0.004756468036430177,no,0.004543558339933896
1914,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// otherwise, everything ok.",no,undetermined,0,0,0,no,0.0012942803368305202,no,0.001815403640608517,no,0.0011217870946467908,no,0.0010127067565617977,no,0.0009445399535206586
1915,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Re-arrange the tree so that the collection function is the root and the lhs is the path.,no,undetermined,0,0,0,no,0.0007251380498767988,no,0.0007691734888938134,no,0.0006993431480445887,no,0.0006110651889499625,no,0.0005590900553031714
1916,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//    protected RegionRootListener listener;,no,undetermined,0,0,0,no,0.011895542317597079,no,0.012402775977266491,no,0.011736665614419514,no,0.011187986837892527,no,0.01082733448485426
1917,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// inject the WHERE after the parent,no,undetermined,0,0,0,no,0.004708130483166796,no,0.004311193518322248,no,0.003797089282721282,no,0.003378884292517754,no,0.003228528761691357
1918,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Never include subclasses for implied from elements.,no,undetermined,0,0,0,no,0.001322305305482761,no,0.0018446285319619336,no,0.0017407987237664107,no,0.0016023432027160705,no,0.0014636985931467514
1919,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Establish the region root node with a non-locking data version,no,undetermined,0,0,0,no,0.012477734878672042,no,0.006435124803789572,no,0.0063284762165555135,no,0.005925186154358192,no,0.005650401042533563
1920,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// For pessimistic locking, we just want to toss out our ref // to any old invalid root node and get the latest (may be null)            ",no,undetermined,0,0,0,no,0.030362340501129403,no,0.01238109839468456,no,0.011750046383359858,no,0.01119876103063266,no,0.010824290883757874
1921,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// The rest only matters for optimistic locking, where we // need to establish the proper data version on the region root",no,undetermined,0,0,0,no,0.03540176824339087,no,0.012382600151521735,no,0.011746687812169716,no,0.01119614156343244,no,0.010818503248819744
1922,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Prepare the left hand side and get the data type.,no,undetermined,0,0,0,no,0.0007372674264329022,no,0.004078990188675025,no,0.0036386910768568246,no,0.0033939510387294186,no,0.00318318936219878
1923,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Prepare the left hand side and get the data type.,no,undetermined,0,0,0,no,0.0007372674264329022,no,0.004078990188675025,no,0.0036386910768568246,no,0.0033939510387294186,no,0.00318318936219878
1924,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If this dot has already been resolved, stop now.",no,undetermined,0,0,0,no,0.004993915473380681,no,0.003223165578697033,no,0.0030427600145946283,no,0.0029003302333134645,no,0.0028186381830294367
1925,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// PROPERTIES,no,undetermined,0,0,0,no,0.002769086247947564,no,0.0027472130994571136,no,0.0024584517939946096,no,0.0022565050745577166,no,0.002155903587709979
1926,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The property is another class..,no,undetermined,0,0,0,no,0.013595727474481602,no,0.012066900786113624,no,0.011515100780635246,no,0.010623776495531817,no,0.010240694104390935
1927,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Otherwise, this is a primitive type.",no,undetermined,0,0,0,no,0.004801523746236492,no,0.005167084303205466,no,0.002471647565036802,no,0.002322686019355069,no,0.002215553439131991
1928,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//foo.bars.size (also handles deprecated stuff like foo.bars.maxelement for backwardness),no,undetermined,0,0,0,no,0.004234542799631536,no,0.0035456191474963305,no,0.004009076285693357,no,0.0036748753719047377,no,0.003517302306297957
1929,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Use the delegate.,no,undetermined,0,0,0,no,0.003502859926000323,no,0.003483379393544214,no,0.002871317608492502,no,0.002599421926846601,no,0.002458189426341379
1930,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// For Timestamps, we default to a separate config",no,undetermined,0,0,0,no,0.004030320975911542,no,0.003679420812398147,no,0.0033095235448176515,no,0.0030913106132189594,no,0.0029436085947734604
1931,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//optimistic-lock=""all"", include all updatable properties //optimistic-lock=""dirty"", include all properties we are updating this time",no,undetermined,0,0,0,no,0.004526806383022452,no,0.0026939272264167612,no,0.0022671844923047866,no,0.002340424499124322,no,0.0022108045256484152
1932,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// this property belongs to the table, and it is not specifically // excluded from optimistic locking by optimistic-lock=""false""",no,undetermined,0,0,0,no,0.027547887430546213,no,0.012389690006672562,no,0.011725001275109358,no,0.011188186584364088,no,0.010836079620822926
1933,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//information about properties of this class, //including inherited properties //(only really needed for updatable/insertable properties)",no,undetermined,0,0,0,no,0.02420104350312922,no,0.012392515153313875,no,0.011742888737752758,no,0.011184353390370338,no,0.01083787800703518
1934,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Here we render the select column list based on the properties defined as being generated. // For partial component generation, we currently just re-select the whole component // rather than trying to handle the individual generated portions.",no,undetermined,0,0,0,no,0.07061890629194212,no,0.012386323969365436,no,0.011736357864720564,no,0.01119206107289291,no,0.01083412763759877
1935,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// NOTE : addDuplicateAlias() already performs nullness checks on the alias.,no,undetermined,0,0,0,no,0.01733437228077236,no,0.012389870222639609,no,0.011734778050768476,no,0.011201015587585345,no,0.010820652865475686
1936,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if the from-clauses are the same, we can be a little more aggressive in terms of what we reuse",no,undetermined,0,0,0,no,0.12262036491404199,no,0.1563466998454109,no,0.14572249359120643,no,0.14566388098076408,no,0.14733565460911932
1937,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_0,no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
1938,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// again, null != null here",no,undetermined,0,0,0,no,0.003434052641982189,no,0.0022801895782371263,no,0.002156686006916989,no,0.002003668921218343,no,0.0018945186590031086
1939,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// otherwise (subquery case) dont reuse the fromElement if we are processing the from-clause of the subquery,no,undetermined,0,0,0,no,0.0050101320559893065,no,0.01064844899189579,no,0.008223241402406873,no,0.007396064078978324,no,0.0070672235303981985
1940,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we know only the lhs-hand type, so use that",no,undetermined,0,0,0,no,0.0017157757821692986,no,0.00493698608845081,no,0.00460374032852724,no,0.004297613770078737,no,0.004114367724248688
1941,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the referenced node text is the special 'id',no,undetermined,0,0,0,no,0.0028914649176598637,no,0.0016055263733058826,no,0.002286064252137724,no,0.0020381168385251846,no,0.0019400968328226913
1942,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// only the identifier property field name can be a reference to the associated entity's PK...,no,undetermined,0,0,0,no,0.00666957160436444,no,0.0063367654947500615,no,0.0066440365473395225,no,0.006673036415134465,no,0.006318516992902062
1943,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// special shortcut for id properties, skip the join! // this must only occur at the _end_ of a path expression",no,undetermined,0,0,0,no,0.026333013525931325,no,0.012372864502960977,no,0.011730236885098045,no,0.011180820585133729,no,0.010832693583317963
1944,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Append the new property name onto the unresolved path.,no,undetermined,0,0,0,no,0.007973341273131797,no,0.009157267192320571,no,0.008493032993339596,no,0.008087357087764478,no,0.007794838333923003
1945,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Tell the destination fromElement to 'includeSubclasses'.,no,undetermined,0,0,0,no,0.013922658304438446,no,0.011766221079434378,no,0.011352026536121206,no,0.010745611737058335,no,0.01013150712796998
1946,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If the lhs is a collection, use CollectionPropertyMapping",no,undetermined,0,0,0,no,0.0015663508189784833,no,0.0012735296500085444,no,0.0009702689673268861,no,0.0010991084464493388,no,0.0010233829109754196
1947,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Don't resolve the node again.,no,undetermined,0,0,0,no,0.008156355712957268,no,0.004419426351231247,no,0.004123149592545083,no,0.0038138723156823586,no,0.0036155459506201555
1948,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//lists, arrays //sets, maps, bags",no,undetermined,0,0,0,no,0.007406539517791228,no,0.009484047435096751,no,0.010302425617767397,no,0.009842011294097616,no,0.010363773439561961
1949,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we have something like : ""? [op] rhs""",no,undetermined,0,0,0,no,0.021657279722961716,no,0.010699576518745058,no,0.009607903983811531,no,0.008991152612591171,no,0.0086343785219561
1950,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Configure the cache to use our TM,no,undetermined,0,0,0,no,0.006200384866044899,no,0.008700431904506718,no,0.0078466967975449,no,0.007447639637579442,no,0.007226431029164874
1951,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Make sure JBC doesn't look one up,no,undetermined,0,0,0,no,0.0011803734162255484,no,0.001170760540921556,no,0.0010427824982978025,no,0.0009283717276397447,no,0.0009223878211416408
1952,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we finish all the ""removes"" first to take care of possible unique // constraints and so that we can take better advantage of batching",no,undetermined,0,0,0,no,0.0058116760291926466,no,0.012382516466984515,no,0.011746405179622204,no,0.011214355147849492,no,0.010856106516109102
1953,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//use a combination of foreign key columns and pk columns, since //the ordering of removal and addition is not guaranteed when //a child moves from one parent to another",no,undetermined,0,0,0,no,0.016414022667569667,no,0.012376790343725725,no,0.01173072324359149,no,0.011186994686009713,no,0.010840153540556247
1954,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Make sure we don't re-release the same cache,no,undetermined,0,0,0,no,0.00629573860728058,no,0.009585741533487964,no,0.008849614399972361,no,0.0080111595401875,no,0.007743812827886564
1955,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// We use a different delegate than the non-optimistic superclass default,no,undetermined,0,0,0,no,0.0029421104311253892,no,0.00247042581040222,no,0.002146473345264989,no,0.0020084033676878803,no,0.0018818532608021132
1956,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we have something like : ""lhs [op] ?""",no,undetermined,0,0,0,no,0.005283076271784085,no,0.0032455121177710276,no,0.0029323656449616927,no,0.002682243480262048,no,0.0025493487247917153
1957,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// don't create a unique key, 'cos some // databases don't like a UK on nullable // columns //getCollectionTable().createUniqueKey( getIdentifier().getConstraintColumns() );",no,undetermined,0,0,0,no,0.009154273462361863,no,0.012386260524097137,no,0.011746858292880436,no,0.011185183247298605,no,0.010824779316882171
1958,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//isSet = collection.isSet(); //isSorted = collection.isSorted();,no,undetermined,0,0,0,no,0.0035513000926513925,no,0.0018544164267232921,no,0.000403985511046133,no,0.0008268480676094154,no,0.00077831513293289
1959,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we know only the rhs-hand type, so use that",no,undetermined,0,0,0,no,0.0035041304602722112,no,0.012392685070271211,no,0.011743902783151374,no,0.011202810480334164,no,0.010837987972605866
1960,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If JBC is using INVALIDATION, we don't want to propagate changes. // We use the Timestamps cache to manage invalidation",no,undetermined,0,0,0,no,0.013180212438432128,no,0.01221792749615058,no,0.01134166940036252,no,0.010798884710278376,no,0.010365583588290182
1961,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// long,no,undetermined,0,0,0,no,0.006027455724331034,no,0.00683802480411424,no,0.006317515149910514,no,0.0060047785744141245,no,0.00576392792540691
1962,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Don't hold the JBC node lock throughout the tx, as that // prevents updates // Add a zero (or low) timeout option so we don't block // waiting for tx's that did a put to commit",no,undetermined,0,0,0,no,0.002383327437063966,no,0.0018421496323351271,no,0.0017186508993559091,no,0.001463954344403867,no,0.0013398419907020476
1963,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Double check the distributed cache,no,undetermined,0,0,0,no,0.0010288456770603596,no,0.0017501689890076632,no,0.001600533961889406,no,0.0014416903117519045,no,0.0013653198105789475
1964,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Get an exclusive right to update JBC for this key from this node.,no,undetermined,0,0,0,no,0.02773953963915429,no,0.01238066694369548,no,0.01173530948743511,no,0.011179835013391202,no,0.010827309098383154
1965,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// one or the other needs to be a datetime for us to get into this method in the first place...,no,undetermined,0,0,0,no,0.09022412645553969,no,0.012407334900636587,no,0.011727324027947834,no,0.011212578970850087,no,0.01083555780698888
1966,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// #2,no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
1967,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// nothing to do,no,undetermined,0,0,0,no,0.002153585483299862,no,0.002230317838991627,no,0.002120572065431549,no,0.0019150373596986858,no,0.0017976092084052249
1968,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Add the condition to the join sequence that qualifies the indexed element.,no,undetermined,0,0,0,no,0.005290399024964431,no,0.0026013019995942683,no,0.0024611452579538957,no,0.002215211847352449,no,0.0021025571915855917
1969,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Sometimes use the element table alias, sometimes use the... umm... collection table alias (many to many)",no,undetermined,0,0,0,no,0.01276917413028354,no,0.008758879861532027,no,0.007836417425804758,no,0.007809876602281944,no,0.008319700258582701
1970,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Now, set the text for this node.  It should be the element columns.",no,undetermined,0,0,0,no,0.02190046751904168,no,0.012376614334444893,no,0.011713157215422019,no,0.011176206196346471,no,0.010831667187354715
1971,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Get the function return value type, based on the type of the first argument.",no,undetermined,0,0,0,no,0.0035341433595869644,no,0.004434445681810766,no,0.004479517746900027,no,0.004207787025950474,no,0.003969767264479177
1972,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This will call initialize(tok)!,no,undetermined,0,0,0,no,0.00899979013109921,no,0.010933109945833432,no,0.010290387535502953,no,0.010001009744709244,no,0.009623537727931156
1973,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// mutation depends on the types of nodes invloved...,no,undetermined,0,0,0,no,0.01461412824052478,no,0.012392194654386518,no,0.011744580814957124,no,0.011204388371786935,no,0.010843542377822547
1974,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// logic operators by definition resolve to booleans,no,undetermined,0,0,0,no,0.015230291304892786,no,0.012380293123090328,no,0.01160704863825816,no,0.011026134923377333,no,0.010600473809282952
1975,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Generated select expressions are already resolved, nothing to do.",no,undetermined,0,0,0,no,0.010279859323887327,no,0.010482567875641103,no,0.011749076784871495,no,0.011194262443761312,no,0.01053921709275811
1976,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The path may be a reference to an alias defined in the parent query.,no,undetermined,0,0,0,no,0.007480570983249278,no,0.009612045399129436,no,0.008410642074867459,no,0.007765209789874639,no,0.007382149637978532
1977,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The HQL class alias refers to the class name.,no,undetermined,0,0,0,no,0.003489189961160756,no,0.0025668005674568347,no,0.0024293833168386814,no,0.002211997268791056,no,0.002104419205751536
1978,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Associate the table alias with the element.,no,undetermined,0,0,0,no,0.019437168765950388,no,0.012410565932531382,no,0.0117458557956983,no,0.011206034138095396,no,0.010839523844808675
1979,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// try the parent FromClause...,no,undetermined,0,0,0,no,0.0017640620640190494,no,0.0018778589788400713,no,0.0017149527871271292,no,0.0014712323572860855,no,0.001379475360336347
1980,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Make sure that all from elements registered with this FROM clause are actually in the AST.,no,undetermined,0,0,0,no,0.01974637356058464,no,0.012088925207609971,no,0.01146831648799487,no,0.010658457951138652,no,0.010153236257497814
1981,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Invoke setScalarColumnText on each constructor argument.,no,undetermined,0,0,0,no,0.001465598493829475,no,0.0015020181492240016,no,0.00139666775054005,no,0.0012084132433029821,no,0.0011220907889196708
1982,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Collect the select expressions, skip the first child because it is the class name.",no,undetermined,0,0,0,no,0.0006188588652183022,no,0.00040857041358016683,no,0.0004035507416123212,no,0.0003603540080842047,no,0.00031570584720709593
1983,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// return an empty Type array,no,undetermined,0,0,0,no,0.008616231969392155,no,0.007791080071116203,no,0.007318497636030877,no,0.006883184295763266,no,0.006517799743853388
1984,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// We ensure ASYNC semantics (JBCACHE-1175),no,undetermined,0,0,0,no,0.01993714528338898,no,0.011609673285437975,no,0.010577033064585092,no,0.010133990192763403,no,0.009797750973695722
1985,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if there is no order by, make one",no,undetermined,0,0,0,no,0.0005990039657871028,no,0.0005300459772300021,no,0.0004422524088759564,no,0.00039150195813164606,no,0.0003594551021427754
1986,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Initial load from JBC,no,undetermined,0,0,0,no,0.0002566163872401348,no,0.00025654220868144193,no,0.00023069523398694717,no,0.0002035150509157896,no,0.0001882751972398711
1987,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Find the WHERE; if there is no WHERE, find the FROM...",no,undetermined,0,0,0,no,0.0018334086219455304,no,0.0019977819604761683,no,0.0017759422007845207,no,0.0015578084017109708,no,0.0014390208611951183
1988,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Now, inject the newly built ORDER BY into the tree",no,undetermined,0,0,0,no,0.011845015397574047,no,0.01240498310551373,no,0.011700599925060179,no,0.010656778405828814,no,0.010052987683726197
1989,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// logic operators by definition resolve to boolean.,no,undetermined,0,0,0,no,0.0033294776068211887,no,0.003214275125416025,no,0.0029408006365045977,no,0.002714512425222998,no,0.002554704220313089
1990,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Render the identifier select fragment using the table alias.,no,undetermined,0,0,0,no,0.00318652124302741,no,0.0023455866946752502,no,0.0022238345926435736,no,0.002040790225282034,no,0.001910744858664167
1991,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Class names in the FROM clause result in a JoinSequence (the old FromParser does this).,no,undetermined,0,0,0,no,0.013353735112421179,no,0.012405981329764414,no,0.011753657082808502,no,0.011192878439330155,no,0.010828692080205773
1992,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// will still be issued when it used to be null,no,undetermined,0,0,0,no,0.04065816307458733,no,0.0123884484373457,no,0.011721865341321986,no,0.011189877788669622,no,0.010845558993316318
1993,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Otherwise, use the property mapping.",no,undetermined,0,0,0,no,0.0023885817180928537,no,0.002269172456817205,no,0.0015421010099261779,no,0.001339261340942414,no,0.0016567625106606503
1994,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// We ensure ASYNC semantics (JBCACHE-1175),no,undetermined,0,0,0,no,0.01993714528338898,no,0.011609673285437975,no,0.010577033064585092,no,0.010133990192763403,no,0.009797750973695722
1995,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The standard comparator types are not Serializable but are singletons,no,undetermined,0,0,0,no,0.026137894807184023,no,0.012391614614225822,no,0.011760992512741816,no,0.011184623491865718,no,0.010825735943232932
1996,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ignore!,no,undetermined,0,0,0,no,0.00014335230378915544,no,0.00013958636484248836,no,0.00012005421643621465,no,0.00010252236131852231,no,9.386482826389979e-05
1997,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ignore it,no,undetermined,0,0,0,no,0.0004577003960435737,no,0.00048819379544075563,no,0.0004320653359911463,no,0.0003685236398288353,no,0.00034548202714878586
1998,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Generate implicit joins, only if necessary.",no,undetermined,0,0,0,no,0.008155915503921644,no,0.012385176462049808,no,0.011747327816104594,no,0.011199807794121818,no,0.01082534910455859
1999,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If the property is a special collection property name, return a CollectionPropertyMapping.",no,undetermined,0,0,0,no,0.005621222409329394,no,0.0038218439783740013,no,0.0032253388179048566,no,0.0034554270978280326,no,0.0032488232680457714
2000,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Collection of components.,no,undetermined,0,0,0,no,0.0023133888473067673,no,0.001860758447514432,no,0.0010481467676152585,no,0.001278628293672306,no,0.0011870781610358152
2001,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// construct the cache,no,undetermined,0,0,0,no,0.0009724082067768033,no,0.0012043273186071153,no,0.0010561454441506178,no,0.0009338252263132118,no,0.0008144159996798325
2002,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// local cache, so we use synchronization",no,undetermined,0,0,0,no,0.002450090770975744,no,0.0030517440110035413,no,0.002777042242261489,no,0.0023316937186133365,no,0.0021605593252473107
2003,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//ie. 60 seconds,no,undetermined,0,0,0,no,0.0027951494326338274,no,0.012367659157836771,no,0.011728199595758496,no,0.011174398384674353,no,0.010845039954998676
2004,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// We need to seed the version value as part of this bulk insert,no,undetermined,0,0,0,no,0.04432423151615729,no,0.012377867401125434,no,0.011721987058562063,no,0.011180826673002329,no,0.010827356509340406
2005,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// make sure the lhs is ""assignable""...",no,undetermined,0,0,0,no,0.0006850721417489293,no,0.0007398090920816474,no,0.000683871052367743,no,0.00059089345698344,no,0.0005439132851190108
2006,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// false indicates to not generate parens around the assignment,no,undetermined,0,0,0,no,0.020298064275537146,no,0.012391082905426074,no,0.011736958900680135,no,0.011212637682567292,no,0.010829271117845525
2007,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// currently allowed...,no,undetermined,0,0,0,no,0.004748568412949021,no,0.004774478697240275,no,0.004323219161704322,no,0.003965210758695034,no,0.00379535253095297
2008,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// in non-select queries, the only time we should need to join is if we are in a subquery from clause",no,undetermined,0,0,0,no,0.011782596261988217,no,0.012363890290678688,no,0.011744089918194835,no,0.011182423801363773,no,0.010844750148423161
2009,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//return classAlias == null ? className : classAlias;,no,undetermined,0,0,0,no,0.0007942938125845855,no,0.0007926374244434229,no,0.0007215181056980362,no,0.0006566729536404342,no,0.0006116499839450256
2010,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This is an explicit FROM element.,no,undetermined,0,0,0,no,0.022483452696926146,no,0.012387029039713187,no,0.011748705785335899,no,0.011211817793179917,no,0.010840785846290139
2011,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//swaldman 2006-08-28: define c3p0-style configuration parameters for initialPoolSize, which //                     hibernate sensibly lets default to minPoolSize, but we'll let users //                     override it with the c3p0-style property if they want.",no,undetermined,0,0,0,no,0.009984835489678734,no,0.012206445449058417,no,0.010950381604670432,no,0.010399582334939919,no,0.009950568626621834
2012,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ParameterContainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.006140888174090093,no,0.004901065980396148,no,0.004578600266881531,no,0.004352388675445458,no,0.006026218188316145
2013,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Fetch can't be used with scroll() or iterate().,no,undetermined,0,0,0,no,0.029336995053421758,no,0.012373925310206039,no,0.01173878697173313,no,0.011202198893066341,no,0.010847545279983866
2014,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// If it's not implied or it is implied and it's a many to many join where the target wasn't found.,no,undetermined,0,0,0,no,0.008311475174163679,no,0.0034044585953844192,no,0.0028824425057535174,no,0.0025981287204054505,no,0.0031859589763826674
2015,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we need to wrtap the param in a cast(),no,undetermined,0,0,0,no,0.40480131128668173,no,0.2811415324025484,no,0.25953837213937603,no,0.25849361123088466,no,0.2600842703656163
2016,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Since this is an explicit FROM element, it can't be implied in the FROM clause.",no,undetermined,0,0,0,no,0.017687841458545277,no,0.012371613452949235,no,0.011710305300562081,no,0.011172336009933769,no,0.010824833408231854
2017,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Do nothing, eplicit from elements are *always* in the projection list.",no,undetermined,0,0,0,no,0.004871921873243166,no,0.00770089168758818,no,0.007259592627425854,no,0.006866404146636305,no,0.006448105351728394
2018,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// propertyName refers to something like collection.size...,no,undetermined,0,0,0,no,0.03413297720501661,no,0.012410733215681839,no,0.011745666577222171,no,0.01120280599056433,no,0.010846003628119981
2019,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// property name is a sub-path of a component...,no,undetermined,0,0,0,no,0.00758170969480104,no,0.005188006543752821,no,0.004900309763006751,no,0.004661092339566487,no,0.004435774183257246
2020,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Always add the collection's query spaces.,no,undetermined,0,0,0,no,0.00920208543537171,no,0.011325244200559028,no,0.008231213663033213,no,0.007846967580843574,no,0.007554398917071109
2021,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// nothing to do; even if the operand is a parameter, no way we could // infer an appropriate expected type here",no,undetermined,0,0,0,no,0.24361570004270977,no,0.24661491790473983,no,0.2505688684582463,no,0.2609033275946885,no,0.2624013563735327
2022,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Notify the FROM element that it is being referenced by the select.,no,undetermined,0,0,0,no,0.011280713692464807,no,0.007303717326081244,no,0.0098926485543759,no,0.009275098052612308,no,0.00944565337381029
2023,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// logic operators by definition resolve to booleans,no,undetermined,0,0,0,no,0.015230291304892786,no,0.012380293123090328,no,0.01160704863825816,no,0.011026134923377333,no,0.010600473809282952
2024,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// DotNode uses null here...,no,undetermined,0,0,0,no,0.03969377533532521,no,0.012361584565234335,no,0.01175671188984784,no,0.011182940535327293,no,0.01082902926345267
2025,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// We represent a from-clause alias,no,undetermined,0,0,0,no,0.0162372271745303,no,0.012405315172252246,no,0.01174022612488928,no,0.011197073894342907,no,0.01084431641563763
2026,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we are the RHS of the DOT representing a naked comp-prop-ref,no,undetermined,0,0,0,no,0.006049587249123619,no,0.003287478273607721,no,0.0025664810229540287,no,0.002382381757693416,no,0.0022799810157329596
2027,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we represent a naked (simple) prop-ref,no,undetermined,0,0,0,no,0.0018974096600559217,no,0.0010575649436286808,no,0.0008103463005907268,no,0.0007545376109015687,no,0.0007171962761009063
2028,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// EARLY EXIT!!!  return so the resolve call explicitly coming from DotNode can // resolve this...,no,undetermined,0,0,0,no,0.020432697117832632,no,0.012375496210354239,no,0.011744660558601419,no,0.011200987489055519,no,0.010853217891747693
2029,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// assume this ident's text does *not* refer to a property on the given persister,no,undetermined,0,0,0,no,0.04099735801363667,no,0.012388259527238687,no,0.011753200888430303,no,0.01119927924336218,no,0.010831476471098203
2030,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// just ignore it for now, it'll get resolved later...",no,undetermined,0,0,0,no,0.007627259548855109,no,0.0077239650452082245,no,0.007287687141363726,no,0.006562577787295304,no,0.006409194751083082
2031,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// This is not actually a constant, but a reference to FROM element.",no,undetermined,0,0,0,no,0.15964444084929325,no,0.12710975887441925,no,0.1214416747688361,no,0.12060950574655614,no,0.1281913655758829
2032,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// check to see if our ""propPath"" actually // represents a property on the persister",no,undetermined,0,0,0,no,0.008216779527634239,no,0.006298570668136116,no,0.006182983710440368,no,0.005758066358187867,no,0.005468702989416794
2033,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// these pieces are needed for usage in select clause,no,undetermined,0,0,0,no,0.005628878606034164,no,0.005617057867189321,no,0.005151556717845526,no,0.00476256798564225,no,0.004515828125318046
2034,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// assume we do *not* refer to a property on the given persister,no,undetermined,0,0,0,no,0.02281416177309316,no,0.009000721962942649,no,0.008355344467452418,no,0.007833841258587384,no,0.007487720475887771
2035,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// TRUE if the pool is borrowed from the outside, FALSE if we used to create it",no,undetermined,0,0,0,no,0.004516246584288951,no,0.002985340628047334,no,0.0027296470881305384,no,0.002547174658930774,no,0.0024056053447169823
2036,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// assume we do *not* refer to a property on the given persister,no,undetermined,0,0,0,no,0.02281416177309316,no,0.009000721962942649,no,0.008355344467452418,no,0.007833841258587384,no,0.007487720475887771
2037,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// get a connection from the pool (thru DriverManager, cfr. Proxool doc)",no,undetermined,0,0,0,no,0.002804963008595954,no,0.0035877147175368274,no,0.0034431632828502545,no,0.0031309932726887877,no,0.0029958803619718104
2038,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// set the Transaction Isolation if defined,no,undetermined,0,0,0,no,0.0007680736604600702,no,0.0005893593825663961,no,0.0005077454333389962,no,0.00041047807144150206,no,0.0003803323710221917
2039,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// naked property-refs cannot be used with an aliased from element,no,undetermined,0,0,0,no,0.005854978422515462,no,0.005150845942908262,no,0.00490423478937701,no,0.004561433911081443,no,0.004391221393580719
2040,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// do *not* over-write the column text, as that has already been // ""rendered"" during resolve",no,undetermined,0,0,0,no,0.01147015139488814,no,0.01240018475363104,no,0.011749447976501157,no,0.011195781580038694,no,0.010842005696459668
2041,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Look up class name using the first identifier in the path.,no,undetermined,0,0,0,no,0.000502378801424856,no,0.0005604169629940852,no,0.00048625464106966164,no,0.0004330634433591303,no,0.0004051767715233112
2042,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// toggle autoCommit to false if set,no,undetermined,0,0,0,no,0.002040052602662623,no,0.0018697335104160219,no,0.0017245680206671896,no,0.0016072996393757524,no,0.0015331817483372713
2043,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Add to the query spaces.,no,undetermined,0,0,0,no,0.007585055896546136,no,0.009600884285654173,no,0.008694758769546075,no,0.007682881529801666,no,0.00742139794140811
2044,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// return the connection,no,undetermined,0,0,0,no,0.008217096818797143,no,0.007991413450754149,no,0.007212927275141081,no,0.006632305211305446,no,0.0064052677911524926
2045,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If the from element isn't in the same clause, create a new from element.",no,undetermined,0,0,0,no,0.014325029131693097,no,0.0089098195284201,no,0.00840064892010113,no,0.007946975223420494,no,0.007993436331672139
2046,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Correlated subqueries create 'special' implied from nodes // because correlated subselects can't use an ANSI-style join,no,undetermined,0,0,0,no,0.002018198994464404,no,0.0032780560218331964,no,0.0029184105531645196,no,0.002622938504954642,no,0.0024049601855671474
2047,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// super-duper-classic-parser-regression-testing-mojo-magic...,no,undetermined,0,0,0,no,0.040500810355111,no,0.012388480074952912,no,0.011735461384067622,no,0.011185808854904966,no,0.010826073112047207
2048,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Get the configurator files (if available),no,undetermined,0,0,0,no,0.0006751111692337388,no,0.0009305587294214871,no,0.0009270766331933485,no,0.0009389002145139885,no,0.0008677933382218835
2049,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// A collection of entities...,no,undetermined,0,0,0,no,0.00931830464510912,no,0.012394007245477795,no,0.00952893420436076,no,0.011198783311256282,no,0.01085736285954444
2050,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// A collection of components...,no,undetermined,0,0,0,no,0.0023133888473067673,no,0.001860758447514432,no,0.0010481467676152585,no,0.001278628293672306,no,0.0011870781610358152
2051,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Default the Proxool alias setting,no,undetermined,0,0,0,no,0.00024687106548887616,no,0.0002465295998792167,no,0.00021831059480462102,no,0.0001931010324028293,no,0.0001772459281739783
2052,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// A collection of scalar elements...,no,undetermined,0,0,0,no,0.005326478763205454,no,0.0043440653616979505,no,0.0023884515428972512,no,0.002975597782328078,no,0.0027788696280476306
2053,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Validate that an alias name was provided to determine which pool to use,no,undetermined,0,0,0,no,0.014918385388022024,no,0.012364813267858273,no,0.011753123152165408,no,0.011183682071810239,no,0.010831143760562252
2054,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// We only build caches if *none* were passed in.  Passing in // caches counts as a clear statement of exactly what is wanted,no,undetermined,0,0,0,no,0.017306090967050384,no,0.012388370313415149,no,0.011738618836027313,no,0.01119459122489908,no,0.010853164245874817
2055,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Validate that an alias name was provided to determine which pool to use,no,undetermined,0,0,0,no,0.014918385388022024,no,0.012364813267858273,no,0.011753123152165408,no,0.011183682071810239,no,0.010831143760562252
2056,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Don't include sub-classes for implied collection joins or subquery joins.,no,undetermined,0,0,0,no,0.0019240706569169624,no,0.0012010561064583036,no,0.0008909711865734701,no,0.0009144147503677353,no,0.0008407594077656057
2057,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Treat explict from elements in sub-queries properly.,no,undetermined,0,0,0,no,0.0015282252094173969,no,0.0033506958916670777,no,0.0037483793058563893,no,0.003452819684128557,no,0.003221497020675383
2058,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// semantic action handling ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.00824153249524817,no,0.007364350039460957,no,0.006815013937022627,no,0.006209695420055993,no,0.0060275372783023355
2059,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Append the stem to the proxool pool alias,no,undetermined,0,0,0,no,0.0056033148066811376,no,0.006302884095280227,no,0.00579361572328562,no,0.005482905797129218,no,0.005309672316049819
2060,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Configured using the JAXP Configurator,no,undetermined,0,0,0,no,0.004692237969952457,no,0.004046247240585025,no,0.003719578318112946,no,0.003431943805889047,no,0.003231318769543359
2061,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Append the stem to the proxool pool alias,no,undetermined,0,0,0,no,0.0056033148066811376,no,0.006302884095280227,no,0.00579361572328562,no,0.005482905797129218,no,0.005309672316049819
2062,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Append the stem to the proxool pool alias,no,undetermined,0,0,0,no,0.0056033148066811376,no,0.006302884095280227,no,0.00579361572328562,no,0.005482905797129218,no,0.005309672316049819
2063,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Configured using the Properties File Configurator,no,undetermined,0,0,0,no,0.003669418787929695,no,0.003119013229146362,no,0.002832993786071222,no,0.0026284978077618726,no,0.002482329179883507
2064,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Remember Isolation level,no,undetermined,0,0,0,no,0.021027188975774293,no,0.012397888559598258,no,0.011732490338727228,no,0.011196761773482266,no,0.010830853552368985
2065,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// If the provider was leeching off an existing pool don't close it,no,undetermined,0,0,0,no,0.0008613316844674894,no,0.0011561329173319645,no,0.001064203000490692,no,0.0009537469578402588,no,0.0008877918022430507
2066,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// NOTE: Because we're using ASTUtil.createParent(), the tree must be created from the bottom up. // IS EMPTY x => (EXISTS (QUERY (SELECT_FROM (FROM x) ) ) )",no,undetermined,0,0,0,no,0.010137152020269984,no,0.012404911352995793,no,0.011735155689037529,no,0.011189164980732653,no,0.010821786671325287
2067,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// the ""root from-element"" in correlated subqueries do need this piece",no,undetermined,0,0,0,no,0.06222517826002738,no,0.012398073335844941,no,0.011747412371501977,no,0.011185056621610677,no,0.010818082835742017
2068,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Create the FROM element for the target (the elements of the collection).,no,undetermined,0,0,0,no,0.0005661978783288953,no,0.0004566751365239508,no,0.0003918683130189349,no,0.00036319232449688355,no,0.0003292218944260298
2069,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If the join is implied, then don't include sub-classes on the element.",no,undetermined,0,0,0,no,0.0031285596585782127,no,0.0016960365244371933,no,0.0016096487491287519,no,0.0014563037190649325,no,0.0013471186110507692
2070,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0008158380563990274,no,0.0004622220704414844,no,0.0003947093598227315,no,0.00035164830917738625,no,0.00031812294261152036
2071,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// not really a many-to-one association *necessarily*,no,undetermined,0,0,0,no,0.026933453213380917,no,0.01241292138009271,no,0.011738228533377531,no,0.011213483252715394,no,0.010841232377314483
2072,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// The associated entity is implied, but it must be included in the FROM. // The collection alias is the role.",no,undetermined,0,0,0,no,0.026125206133676655,no,0.012373047892681246,no,0.011718864167382525,no,0.011186715949727526,no,0.010843581345411819
2073,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// not really a many-to-one association *necessarily*,no,undetermined,0,0,0,no,0.026933453213380917,no,0.01241292138009271,no,0.011738228533377531,no,0.011213483252715394,no,0.010841232377314483
2074,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//always overwrite nonversioned data,no,undetermined,0,0,0,no,0.0008493886418854179,no,0.0010465298874736126,no,0.0009430547983016962,no,0.0008412157500258313,no,0.0007816339837036602
2075,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Tag this node as a JOIN. // Don't include subclasses in the join. // This is a clollection join.,no,undetermined,0,0,0,no,0.005509454068365682,no,0.004468396334300547,no,0.004237894186853757,no,0.003945288617474532,no,0.0035802827243035956
2076,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//public Currency getCurrency(int col) throws HibernateException;,no,undetermined,0,0,0,no,0.007901264832289874,no,0.008441636418509242,no,0.008298811945395956,no,0.007859129218575636,no,0.007521945293358508
2077,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Get the class name of the associated entity.,no,undetermined,0,0,0,no,0.002270829588462667,no,0.002608648890934776,no,0.003878553260546987,no,0.00415201528316328,no,0.0039653344566527955
2078,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// default is POJO,no,undetermined,0,0,0,no,0.0004071994126131248,no,0.00039157315530177875,no,0.00035749913348270536,no,0.00032345518778379426,no,0.00030040545802869885
2079,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// use setParameter for null values,no,undetermined,0,0,0,no,0.000539878993851801,no,0.00084381625716628,no,0.0007509688511142774,no,0.000682303405732358,no,0.000636522043030207
2080,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//  origin, path, implied, columns, classAlias,",no,undetermined,0,0,0,no,0.0008044582907437907,no,0.0019604397639145896,no,0.0017958555547319779,no,0.001679349437893253,no,0.0015631067045759944
2081,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*implied*/,no,undetermined,0,0,0,no,0.0018160438451023555,no,0.0016377427746675172,no,0.0015186429354874188,no,0.0014109874973538988,no,0.0013165328837222736
2082,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// For implied many-to-many, just add the end join.",no,undetermined,0,0,0,no,0.01805459112392422,no,0.005876867569229281,no,0.005162828576889763,no,0.004810526338362953,no,0.004984652923003231
2083,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Interceptor returned null, so do the dirtycheck ourself, if possible",no,undetermined,0,0,0,no,0.0025884032468293286,no,0.002388222703752315,no,0.00221841827858592,no,0.001965248361235331,no,0.0018410983466649533
2084,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// use setParameter for null values,no,undetermined,0,0,0,no,0.000539878993851801,no,0.00084381625716628,no,0.0007509688511142774,no,0.000682303405732358,no,0.000636522043030207
2085,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Note this!!,no,undetermined,0,0,0,no,0.0888703265026777,no,0.012372703584139421,no,0.011720208814383164,no,0.011181596864353932,no,0.010816887249016274
2086,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0008158380563990274,no,0.0004622220704414844,no,0.0003947093598227315,no,0.00035164830917738625,no,0.00031812294261152036
2087,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0008158380563990274,no,0.0004622220704414844,no,0.0003947093598227315,no,0.00035164830917738625,no,0.00031812294261152036
2088,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Error message constants.,no,undetermined,0,0,0,no,0.0037726436741148312,no,0.004396656870156534,no,0.00402338238184225,no,0.003673217567968499,no,0.0035107220028846716
2089,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the standard SQL function name is current_timestamp...,no,undetermined,0,0,0,no,0.0011528576209925531,no,0.0024736632981831974,no,0.002285427721101741,no,0.002136045841067751,no,0.0020381136547144327
2090,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//scan for next non-whitespace token,no,undetermined,0,0,0,no,0.0025933319918715458,no,0.002750212047012667,no,0.0026124196077012946,no,0.00245151195305537,no,0.002326535002277465
2091,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This causes the factory to instantiate the desired class.,no,undetermined,0,0,0,no,0.018732681310226106,no,0.012403745396850477,no,0.011716361952060049,no,0.01118770092176367,no,0.01084587749167822
2092,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//private Type[] sqlResultTypes;,no,undetermined,0,0,0,no,0.005578991846730555,no,0.001134721948525826,no,0.0010011211375850805,no,0.0009106078695504253,no,0.0008478021067007254
2093,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//private CacheEntry cacheEntry;,no,undetermined,0,0,0,no,0.003991448428929314,no,0.0032553028910016608,no,0.0031023497681130544,no,0.0029172058452006386,no,0.0027741808408028763
2094,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Make 100% certain that this is called before any subsequent ScheduledUpdate.afterTransactionCompletion()!!,no,undetermined,0,0,0,no,0.020691256355343465,no,0.012398226432501408,no,0.01174464618222323,no,0.0111791399357245,no,0.010836599422632731
2095,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//		TypeFactory.deepCopy( currentState, propTypes, persister.getPropertyUpdateability(), deletedState, session );",no,undetermined,0,0,0,no,0.0055831096245319844,no,0.005375892136665349,no,0.005343178802653426,no,0.004840311895402224,no,0.00460514820016866
2096,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Frontbase has no known variation of a ""SELECT ... FOR UPDATE"" syntax...",no,undetermined,0,0,0,no,0.0027572916375849963,no,0.004281908193598983,no,0.003955098476612106,no,0.003725815053482188,no,0.0035081637154423355
2097,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*public Type[] getSqlResultTypes() {
		return sqlResultTypes;
	}*/",no,undetermined,0,0,0,no,0.01157171704918891,no,0.010471217924615079,no,0.009452745680186819,no,0.008946934266014728,no,0.008613311550510223
2098,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//sqlResultTypeList.addAll( constructorArgumentTypeList );,no,undetermined,0,0,0,no,0.006968584276176598,no,0.007459188430919233,no,0.0067440776096833,no,0.0063460851041192605,no,0.005935024539497282
2099,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//sqlResultTypeList.add( type );,no,undetermined,0,0,0,no,0.004022833001579703,no,0.0034907263025202107,no,0.003293826474219273,no,0.003066490893884646,no,0.0029355156391050975
2100,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Always add the type to the return type list.,no,undetermined,0,0,0,no,0.011224181368169809,no,0.011082125076389464,no,0.011752966730288117,no,0.01120507464041097,no,0.010840847524898167
2101,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// have the entity entry perform post-update processing, passing it the // update state and the new version (if one).",no,undetermined,0,0,0,no,0.003491377609305447,no,0.0022999461237998677,no,0.0026796290245385684,no,0.002455462242053901,no,0.002382140653334363
2102,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// this entity defines proeprty generation, so process those generated // values...",no,undetermined,0,0,0,no,0.005927708167887078,no,0.004310979819304449,no,0.00461450933567753,no,0.004642445970286298,no,0.004394431061702904
2103,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// add the fetched entities,no,undetermined,0,0,0,no,0.0047694722974678,no,0.009208339893412748,no,0.011008465902004458,no,0.010649451389307415,no,0.010338781076881246
2104,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Get ready to start adding nodes.,no,undetermined,0,0,0,no,0.00904919547224853,no,0.007989403927114303,no,0.008412838867688411,no,0.007418821047998083,no,0.007094048214319435
2105,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//EARLY EXIT!,no,undetermined,0,0,0,no,0.0005905483870258867,no,0.0006314912289696719,no,0.0005659715806632397,no,0.0005143622300302791,no,0.0004802970847279881
2106,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*|| oj.getJoinable().consumesCollectionAlias() */,no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
2107,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// just especially for the trivial collection filter,no,undetermined,0,0,0,no,0.01005417560988321,no,0.009720163268411734,no,0.007082806212311395,no,0.007606405840019078,no,0.007096381816671512
2108,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// need to look it up from the persistence-context,no,undetermined,0,0,0,no,0.01640315626460765,no,0.012396873634355095,no,0.011733818373161415,no,0.011210161657692959,no,0.010841324521881381
2109,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//sort first by role name,no,undetermined,0,0,0,no,0.005000833133634463,no,0.004720544472852562,no,0.003938777056922455,no,0.0031066341889687144,no,0.0029298181278168377
2110,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// function support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0016821868204068564,no,0.012368055356522271,no,0.011748166410577413,no,0.011218070443775796,no,0.010812230237598627
2111,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//update last non-whitespace token, if necessary",no,undetermined,0,0,0,no,0.0013686771158867037,no,0.0016470223423044282,no,0.0015034923447372083,no,0.0013693503092234683,no,0.001279832447653073
2112,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//then by fk,no,undetermined,0,0,0,no,0.025604563310630366,no,0.012389925747014481,no,0.011752922502338886,no,0.011188281861159565,no,0.010855277712777124
2113,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*sqlResultTypeList,*/",no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
2114,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// nothing to do		,no,undetermined,0,0,0,no,0.002153585483299862,no,0.002230317838991627,no,0.002120572065431549,no,0.0019150373596986858,no,0.0017976092084052249
2115,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*ArrayList sqlResultTypeList,*/",no,undetermined,0,0,0,no,0.0015257284732920272,no,0.001869047417057527,no,0.0017376506077754674,no,0.0015912060308383243,no,0.00151956586223618
2116,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// nothing to do,no,undetermined,0,0,0,no,0.002153585483299862,no,0.002230317838991627,no,0.002120572065431549,no,0.0019150373596986858,no,0.0017976092084052249
2117,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this method is called when a new non-null collection is persisted // or when an existing (non-null) collection is moved to a new owner,no,undetermined,0,0,0,no,0.041164090799827226,no,0.01239757343117004,no,0.011744437064996362,no,0.011207015321068204,no,0.01084173279127909
2118,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//notAfterClassTokens.add("","");",no,undetermined,0,0,0,no,0.0018028323737446217,no,0.001823166990705323,no,0.0016184853580926925,no,0.0015035043781657673,no,0.0014228872698990747
2119,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//beforeClassTokens.add(""new""); DEFINITELY DON'T HAVE THIS!!",no,undetermined,0,0,0,no,0.00913486755411506,no,0.008172500408497476,no,0.008415172701959208,no,0.008003764933557244,no,0.007485454635720297
2120,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0020829320059605493,no,0.0029240203399885025,no,0.002940671970198513,no,0.0027184969999099794,no,0.0025559954639326073
2121,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//TODO:,no,undetermined,0,0,0,no,0.011655632226661484,no,0.01236577759846885,no,0.011721998039486535,no,0.011178854171809327,no,0.010821618193954203
2122,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// remove initial "", """,no,undetermined,0,0,0,no,0.0002630581857245164,no,0.00031658963486149377,no,0.0002748415272711787,no,0.0002415238533988821,no,0.0002234694602181765
2123,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Add the type to the list of returned sqlResultTypes.,no,undetermined,0,0,0,no,0.002646246484934006,no,0.0024881384335168964,no,0.0024597740480558415,no,0.0022941269575282902,no,0.0021595914600542774
2124,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Generate the select expression.,no,undetermined,0,0,0,no,0.004596422041517031,no,0.0025473998285078306,no,0.002324129399455045,no,0.0021490107595870445,no,0.0019889662871046964
2125,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// now update all changed or added rows fks,no,undetermined,0,0,0,no,0.0011363699945070207,no,0.0013186801209715713,no,0.001138610144282827,no,0.0010294289635314241,no,0.0009682735748446511
2126,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//			boolean put = persister.getCache().insert(ck, cacheEntry);",no,undetermined,0,0,0,no,0.0013942284518984763,no,0.001828084703152377,no,0.0018880159275659826,no,0.0016857514512207735,no,0.0016261057843346405
2127,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// union subclass support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.01667423958743694,no,0.012370596953964901,no,0.01172303114850134,no,0.011197117557617316,no,0.010834619682640103
2128,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Skip 'DISTINCT' and 'ALL', so we return the first expression node.",no,undetermined,0,0,0,no,0.0032491455590446133,no,0.001853684621220426,no,0.0016933795512450588,no,0.0015514922740501405,no,0.0014270065374522778
2129,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Generate the property select tokens.,no,undetermined,0,0,0,no,0.0031734725788711902,no,0.00369040318760287,no,0.003230918545527045,no,0.00304962638641891,no,0.002880005760527795
2130,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Get the function name node.,no,undetermined,0,0,0,no,0.000945355082125061,no,0.0023296193061969343,no,0.0023806730674828048,no,0.0021817501373343436,no,0.002053964121021875
2131,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_0,no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
2132,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// This handles HHH-354, where there is a strange property name in a where clause. // If the lookahead contains a DOT then something that isn't an IDENT...",no,undetermined,0,0,0,no,0.01732118783749253,no,0.012392615256963314,no,0.011738037440074017,no,0.011210651038523227,no,0.010840885472039888
2133,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Method expressions in a SELECT should always be considered scalar.,no,undetermined,0,0,0,no,0.011838106068178176,no,0.012398515405448013,no,0.011728351160050663,no,0.011197960854746296,no,0.010815791127210218
2134,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// areturn // return the value of the field,no,undetermined,0,0,0,no,0.003673614889046194,no,0.00356274096103557,no,0.0032054184903576163,no,0.0030223072849227747,no,0.0028702213590530014
2135,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//do nothing - we only need to notify the cache...,no,undetermined,0,0,0,no,0.010630008358201434,no,0.01239261833352987,no,0.011736573916488123,no,0.01120127814709379,no,0.010842915135840906
2136,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//sort first by entity name,no,undetermined,0,0,0,no,0.0025887877379229584,no,0.0017935167110098538,no,0.0019001667715874708,no,0.0020360484370606073,no,0.0019167625887909167
2137,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// If this is 'elements' then create a new FROM element.,no,undetermined,0,0,0,no,0.01771252910872857,no,0.012390513810460285,no,0.011722442380051601,no,0.011179329051406053,no,0.010822403038484302
2138,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//then by id,no,undetermined,0,0,0,no,0.00867492446118358,no,0.006284560188293494,no,0.005860061769212848,no,0.005348096553339031,no,0.0051589305155808896
2139,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Not elements(x),no,undetermined,0,0,0,no,0.004324920117843046,no,0.005021202794185807,no,0.004746173520829735,no,0.0044137443159808385,no,0.004089871952695686
2140,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Dialect function,no,undetermined,0,0,0,no,0.004349376766804109,no,0.012385784803862137,no,0.01172835644536068,no,0.011186618564094692,no,0.010833287067615329
2141,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// to be safe...,no,undetermined,0,0,0,no,0.002144746015406481,no,0.001581020095213459,no,0.0013690585544357747,no,0.0012760226623536948,no,0.001194679308316657
2142,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Collection 'property function',no,undetermined,0,0,0,no,0.0021024666335473924,no,0.0027809901764496462,no,0.001704139770975038,no,0.002099348511154736,no,0.0019740476108721173
2143,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If the constant is an IDENT, figure out what it means...",no,undetermined,0,0,0,no,0.03374381574429427,no,0.012380250599306303,no,0.011750143128725684,no,0.011207026627282434,no,0.01083753122280462
2144,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// no transformations took place, so handle it as we would a // non-instrumented class",no,undetermined,0,0,0,no,0.00324395042783385,no,0.0035591763874198543,no,0.0039265587545239955,no,0.003549303087772826,no,0.0032681901076807643
2145,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// IDENT is a class alias in the FROM.,no,undetermined,0,0,0,no,0.011762835450142627,no,0.0106003493083068,no,0.010006392562827785,no,0.009155232221062315,no,0.008911758367303194
2146,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Resolve to an identity column.,no,undetermined,0,0,0,no,0.005683869492403767,no,0.004288481890079259,no,0.006716719902367436,no,0.006317795207338171,no,0.007237204791271027
2147,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// see if the entry represents a class file,no,undetermined,0,0,0,no,0.0004391279436473639,no,0.00041005047487154684,no,0.0004052197809586121,no,0.00037003055476291245,no,0.0003426310154493571
2148,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Otherwise, it's a literal.",no,undetermined,0,0,0,no,0.005191120216435179,no,0.0055861908101994505,no,0.003515622563485039,no,0.003056547950849915,no,0.0028835304449181635
2149,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the name of an entity class,no,undetermined,0,0,0,no,0.006351338576842067,no,0.0042984004453912655,no,0.006907081621664902,no,0.00799406037787857,no,0.007685349655925122
2150,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// see if the entry represents a class file,no,undetermined,0,0,0,no,0.0004391279436473639,no,0.00041005047487154684,no,0.0004052197809586121,no,0.00037003055476291245,no,0.0003426310154493571
2151,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//the class discriminator value,no,undetermined,0,0,0,no,0.0010135555850929337,no,0.001251390278363972,no,0.0012421426661195934,no,0.001149893774703714,no,0.001088820968755937
2152,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Add a space before the display text.,no,undetermined,0,0,0,no,0.0004217220231462629,no,0.00045719887811554243,no,0.00042942859188847804,no,0.0003834638828358524,no,0.00036017507313468
2153,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// intentionally empty,no,undetermined,0,0,0,no,0.0037763070001841895,no,0.004249508276831321,no,0.003857183339794085,no,0.003525943555307979,no,0.0033151150666807525
2154,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Find or create the WHERE clause,no,undetermined,0,0,0,no,0.005251641589775293,no,0.005364457452089982,no,0.004995867636673626,no,0.004665404239227841,no,0.0043999011060759565
2155,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// child == parent.getFirstChild(),no,undetermined,0,0,0,no,0.0022336745833463857,no,0.0016323423834372801,no,0.0014654041746155232,no,0.001333044730234679,no,0.0012499876823751097
2156,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// set the name of bulk accessor.,no,undetermined,0,0,0,no,0.0023823634307663234,no,0.003290630561941989,no,0.002935807576449921,no,0.00271273228061109,no,0.002603281215172084
2157,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_0,no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
2158,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_0,no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
2159,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// invokespecial,no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
2160,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// return,no,undetermined,0,0,0,no,0.0006289585196806323,no,0.0005663290584469739,no,0.0005106554160617964,no,0.0004696337633428153,no,0.00043772048256313556
2161,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Find or create the WHERE clause,no,undetermined,0,0,0,no,0.005251641589775293,no,0.005364457452089982,no,0.004995867636673626,no,0.004665404239227841,no,0.0043999011060759565
2162,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_1 // load bean,no,undetermined,0,0,0,no,0.003669435015104875,no,0.0031104344056759664,no,0.002917469105459893,no,0.0027162859837094075,no,0.0026141300624309342
2163,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Filter conditions need to be inserted before the HQL where condition and the // theta join node.  This is because org.hibernate.loader.Loader binds the filter parameters first, // then it binds all the HQL query parameters, see org.hibernate.loader.Loader.processFilterParameters().",no,undetermined,0,0,0,no,0.006502157079989536,no,0.00654707816634125,no,0.00569409540867743,no,0.005084948915032344,no,0.004777016225577393
2164,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// checkcast // cast bean,no,undetermined,0,0,0,no,0.0096929690416028,no,0.0062330235117456605,no,0.0056313882487282006,no,0.005214049625610379,no,0.005046087201277207
2165,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Put the FILTERS node before the HQL condition and theta joins,no,undetermined,0,0,0,no,0.0036125829257466005,no,0.0025486873009888224,no,0.002457877859004691,no,0.002224442726407333,no,0.0020815301522765332
2166,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// astore_3 // store bean,no,undetermined,0,0,0,no,0.0012012886147390008,no,0.0012948990444306599,no,0.001185371480913059,no,0.0010764356604217185,no,0.001022613710782065
2167,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// add the current fragment to the FILTERS node,no,undetermined,0,0,0,no,0.0053914566145101366,no,0.004315501177769516,no,0.004285978962271643,no,0.003992960215662978,no,0.003798388992217785
2168,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Create a new THETA_JOINS node as a parent of all filters,no,undetermined,0,0,0,no,0.006226193741999753,no,0.006290119732306628,no,0.006196364708919253,no,0.00567723796879214,no,0.005430705856308973
2169,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_2 // args,no,undetermined,0,0,0,no,0.006748820650985756,no,0.006416793039791818,no,0.0060997367014663404,no,0.005794526331765147,no,0.005537881275311024
2170,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Put the THETA_JOINS node before the HQL condition, after the filters.",no,undetermined,0,0,0,no,0.002132782038114,no,0.0015367279486780269,no,0.0014293134835734792,no,0.0012835100266163843,no,0.001206708506380505
2171,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// First, try to get the persister using the given name directly.",no,undetermined,0,0,0,no,0.0075846183538550585,no,0.010403724483836996,no,0.0106660932300601,no,0.009744383954670427,no,0.009599678906022816
2172,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// iconst_i // continue to aastore // growing stack is 1,no,undetermined,0,0,0,no,0.004353824108903922,no,0.004163627778126639,no,0.0036950303017272653,no,0.003452975625546567,no,0.003291183946966665
2173,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// unable to locate it using this name,no,undetermined,0,0,0,no,0.006501611318780562,no,0.005595704785741033,no,0.004633486076826919,no,0.004360205979983285,no,0.004123623037654112
2174,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If that didn't work, try using the 'import' name.",no,undetermined,0,0,0,no,0.013666850209464563,no,0.011888303137707959,no,0.010792895463569785,no,0.010251575373094797,no,0.009909487003113717
2175,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Implicit joins use theta style (WHERE pk = fk), explicit joins use JOIN (after from)",no,undetermined,0,0,0,no,0.008415434160704035,no,0.009297470417528519,no,0.008209777841046538,no,0.007528111200600629,no,0.007130925007723172
2176,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// locate the registered function by the given name,no,undetermined,0,0,0,no,0.0018396076034913897,no,0.002728634933097078,no,0.00228924658329438,no,0.0020284248459367087,no,0.0018986758091462772
2177,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// determine the type of the first argument...,no,undetermined,0,0,0,no,0.0013253256086100094,no,0.001238463735118061,no,0.0011445628772660142,no,0.0010363735761682394,no,0.0009614115582846826
2178,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_0,no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
2179,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Use the DOT node to emit the first column name. // Create the column names, folled by the column aliases.",no,undetermined,0,0,0,no,0.0026186779882701764,no,0.0025607847625956255,no,0.002279053159069891,no,0.0021132271129454157,no,0.001989178578057209
2180,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Append the text of the current node.,no,undetermined,0,0,0,no,0.0017442110605916056,no,0.0019521592599760639,no,0.001709291253481008,no,0.001574211005505679,no,0.0014763165574778964
2181,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If the node has a first child, recurse into the first child.",no,undetermined,0,0,0,no,0.0014427426190215021,no,0.0010802807908618962,no,0.0009678992796023369,no,0.0008905625584259887,no,0.0008218963986134667
2182,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// new,no,undetermined,0,0,0,no,0.0007331217137823508,no,0.000981836705468619,no,0.0009672985146750711,no,0.0008501913685675985,no,0.0007968272559977449
2183,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If there is a second child (RHS), recurse into that child.",no,undetermined,0,0,0,no,0.005050242998922796,no,0.0037237496861341987,no,0.0036255895492900356,no,0.003420974685140991,no,0.003164909525402862
2184,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// dup,no,undetermined,0,0,0,no,0.00199580217869232,no,0.0022201631194370504,no,0.0020526429513180195,no,0.0018854055309910408,no,0.0017863422171816702
2185,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_3 // load the raw bean,no,undetermined,0,0,0,no,0.0016308873357913332,no,0.0015792222663356965,no,0.0014329265384484004,no,0.0012996334149844475,no,0.0012423054559532682
2186,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// invokeinterface,no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
2187,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// invokevirtual,no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
2188,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// invokevirtual,no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
2189,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aastore // args,no,undetermined,0,0,0,no,0.006748820650985756,no,0.006416793039791818,no,0.0060997367014663404,no,0.005794526331765147,no,0.005537881275311024
2190,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// istore_3 // store i,no,undetermined,0,0,0,no,0.00038330606521936667,no,0.0005217538444678056,no,0.0004809161076691433,no,0.0004255006250678932,no,0.00039646541701046433
2191,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_1 // load the bean,no,undetermined,0,0,0,no,0.0030614208882428977,no,0.0025793633984535023,no,0.002405807062537642,no,0.0022232229094516047,no,0.0021355808265799666
2192,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* current stack len = 0 */,no,undetermined,0,0,0,no,0.0016736993877385223,no,0.0017207101316894056,no,0.0015576044191052793,no,0.00143987476527587,no,0.001352684152335985
2193,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Iterate through the alias,JoinSequence pairs and generate SQL token nodes.",no,undetermined,0,0,0,no,0.0028577110043646343,no,0.002828611219598154,no,0.002403217913329164,no,0.0021093213545107475,no,0.001984770382139452
2194,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this is used during SqlGenerator processing,no,undetermined,0,0,0,no,0.030404671473228815,no,0.012413916432985823,no,0.011740862769730801,no,0.01117899977908918,no,0.010812972633437674
2195,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// start region to handling exception (BulkAccessorException),no,undetermined,0,0,0,no,0.006713757161454825,no,0.004969262869492785,no,0.004612076243675852,no,0.0042239455708514406,no,0.004035530614999611
2196,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If there is a FROM fragment and the FROM element is an explicit, then add the from part.",no,undetermined,0,0,0,no,0.008801389754902978,no,0.005351841797975107,no,0.005175083936524224,no,0.0046412672982806946,no,0.004408803523237345
2197,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*&& StringHelper.isNotEmpty( frag )*/,no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
2198,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// iinc 3, 1",no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
2199,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// The FROM fragment will probably begin with ', '.  Remove this if it is present.",no,undetermined,0,0,0,no,0.12727711983812579,no,0.10105068113163,no,0.10270689037752864,no,0.10412649861917868,no,0.10120064120589148
2200,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// This uses a PathExpressionParser but notice that compound paths are not valid, // only bare names and simple paths:",no,undetermined,0,0,0,no,0.03594876086368774,no,0.012366696252688002,no,0.011730043958486364,no,0.011176233062883296,no,0.010828835281699239
2201,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload 4 // load the raw bean,no,undetermined,0,0,0,no,0.0016308873357913332,no,0.0015792222663356965,no,0.0014329265384484004,no,0.0012996334149844475,no,0.0012423054559532682
2202,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// SELECT p FROM p IN CLASS eg.Person ORDER BY p.Name, p.Address, p",no,undetermined,0,0,0,no,0.0025628223897668986,no,0.0019712453694135505,no,0.0016979063736767966,no,0.0015666287028588573,no,0.0014376261159236986
2203,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The reason for this is SQL doesn't let you sort by an expression you are // not returning in the result set.,no,undetermined,0,0,0,no,0.1193091505225926,no,0.11472436660793,no,0.11822209002020599,no,0.11457298777857856,no,0.11497484454407417
2204,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// oracle sql-state code for deadlock,no,undetermined,0,0,0,no,0.001644432433394951,no,0.0021364677120838476,no,0.00202543626833028,no,0.0018782439953119946,no,0.0017619184441059882
2205,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_2 // load the args,no,undetermined,0,0,0,no,0.00429955369964301,no,0.0037414959963445234,no,0.0035759181352644728,no,0.003327461778749351,no,0.0031953977303616353
2206,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Otherwise, try to use the no-arg constructor",no,undetermined,0,0,0,no,0.0043596301366295226,no,0.004936314445765453,no,0.003222030697082994,no,0.0028000670251923034,no,0.002649055697412308
2207,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// iconst_i,no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
2208,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// eat it and try next,no,undetermined,0,0,0,no,0.0051546486451398,no,0.0043163974384429855,no,0.004058090597407241,no,0.0036954150385024296,no,0.0034310918019136447
2209,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aaload,no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
2210,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// checkcast,no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
2211,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//default mode,no,undetermined,0,0,0,no,0.0016086118421285596,no,0.0016038054101820563,no,0.0014714668682878275,no,0.0013197942715857196,no,0.001248248261871065
2212,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// checkcast (case of reference type),no,undetermined,0,0,0,no,0.006443871298469209,no,0.0069589173673715535,no,0.005354721666444561,no,0.004976620516675028,no,0.004734209656581579
2213,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* current stack len = 2 */,no,undetermined,0,0,0,no,0.0016736993877385223,no,0.0017207101316894056,no,0.0015576044191052793,no,0.00143987476527587,no,0.001352684152335985
2214,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// at some point the processing went bad, so we need to: //      1) make sure the connection handle gets released //      2) try to cleanup the JTA context as much as possible",no,undetermined,0,0,0,no,0.10480274663901704,no,0.10004536341638737,no,0.09214506894706578,no,0.011186057982733017,no,0.010818640249129862
2215,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// end region to handling exception (BulkAccessorException),no,undetermined,0,0,0,no,0.014991871040557466,no,0.012408449737583954,no,0.01174659466207566,no,0.011198625870840773,no,0.010835070252024813
2216,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// register in exception table,no,undetermined,0,0,0,no,0.0010861496756202334,no,0.001984508146631768,no,0.0020246265290768143,no,0.0019346317460181147,no,0.0017966544927292471
2217,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Private constructor - stops checkstyle from complaining.,no,undetermined,0,0,0,no,0.0015330586791093028,no,0.0009938649023275876,no,0.0009774295761672016,no,0.0008831233451384556,no,0.0008235229387153062
2218,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//reset the dotcount (but not the path) //after reset!,no,undetermined,0,0,0,no,0.0027839858365692675,no,0.002327877548604792,no,0.0020413820474002114,no,0.0018537952350733352,no,0.0017715198104874316
2219,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_0,no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
2220,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//after reset!,no,undetermined,0,0,0,no,0.001191677050888006,no,0.0010559258730619629,no,0.0009197811954549371,no,0.0008181918221850636,no,0.0007859537215035889
2221,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Following methods we don't delegate since they have so little logic // it's clearer to just implement them here,no,undetermined,0,0,0,no,0.11833033641322283,no,0.0881212770429493,no,0.011736962481705663,no,0.011211319887502931,no,0.010849620044466794
2222,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_0,no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
2223,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// return,no,undetermined,0,0,0,no,0.0006289585196806323,no,0.0005663290584469739,no,0.0005106554160617964,no,0.0004696337633428153,no,0.00043772048256313556
2224,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// return,no,undetermined,0,0,0,no,0.0006289585196806323,no,0.0005663290584469739,no,0.0005106554160617964,no,0.0004696337633428153,no,0.00043772048256313556
2225,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// invokevirtual,no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
2226,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// checkcast,no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
2227,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// dotcount>=2,no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
2228,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* local variables | target obj | each oldvalue | */,no,undetermined,0,0,0,no,0.0009279415724831028,no,0.00123345564243728,no,0.0010920655824413195,no,0.0009674093502056675,no,0.000904373199712588
2229,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// astore 5 // store exception,no,undetermined,0,0,0,no,0.00026836497059432826,no,0.00042043527387856244,no,0.00039530584891675914,no,0.0003546416994171302,no,0.00032972176753915213
2230,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload 5 // load exception,no,undetermined,0,0,0,no,0.0008162766400788703,no,0.0009727243225360423,no,0.0009368206086798731,no,0.0008683062979345823,no,0.0008188046392307082
2231,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* | this | bean | args | raw bean | */,no,undetermined,0,0,0,no,0.009067074946438247,no,0.008459632195599944,no,0.007753287130704611,no,0.0074499614130207415,no,0.007260636295726204
2232,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// iload_3 // i,no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
2233,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Do the corresponding RHS,no,undetermined,0,0,0,no,0.0013178861519151691,no,0.0013902902076133848,no,0.0012960198829486806,no,0.0011719099595051525,no,0.0010839597709844419
2234,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// invokespecial // BulkAccessorException.<init>,no,undetermined,0,0,0,no,0.0016015170958704403,no,0.0017482374529398156,no,0.0017950664122136641,no,0.0015997679601355644,no,0.0015142303369104282
2235,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// athrow,no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
2236,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// WARNING: classfile only,no,undetermined,0,0,0,no,0.000558594948992881,no,0.0006456938427124821,no,0.0006115201540905424,no,0.0005424301206388617,no,0.0005029565141541487
2237,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if its ""id""",no,undetermined,0,0,0,no,0.009155926835195595,no,0.005910728074739428,no,0.005207733302305789,no,0.004841312509364308,no,0.0046180191031962
2238,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//swallow,no,undetermined,0,0,0,no,0.0011613908221678752,no,0.001309974709998177,no,0.001199199865448098,no,0.0010930007238387912,no,0.001025830808975368
2239,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//or its the id property name,no,undetermined,0,0,0,no,0.021587413389384604,no,0.012061057952142488,no,0.010397414532972724,no,0.009810280579555922,no,0.009469566962049125
2240,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//join = q.createJoinFragment(useThetaStyleJoin);,no,undetermined,0,0,0,no,0.0020949686365327558,no,0.0014499790146454185,no,0.0013523889456682544,no,0.0012039679113603435,no,0.0010680803887685812
2241,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* local variable | this | */,no,undetermined,0,0,0,no,0.005952526387631686,no,0.008464579602854638,no,0.008768312151600984,no,0.008583565677749368,no,0.00839639454256695
2242,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//important!!,no,undetermined,0,0,0,no,0.00505822337943484,no,0.005891732325520675,no,0.005567709845033918,no,0.005272888027792169,no,0.005066381511060366
2243,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// an association,no,undetermined,0,0,0,no,0.0015575244440630812,no,0.0015441312561451403,no,0.0014354570925701794,no,0.0013603766505549753,no,0.0012155772482231842
2244,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_0 // load this,no,undetermined,0,0,0,no,0.009996573221968012,no,0.008301456035023726,no,0.007391157133808364,no,0.007494754638365842,no,0.007289790475194606
2245,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//allow index() function:,no,undetermined,0,0,0,no,0.0024162631293528575,no,0.007353643044828346,no,0.007071293696839099,no,0.0066909215793933274,no,0.006428551250434632
2246,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_0 // load this,no,undetermined,0,0,0,no,0.009996573221968012,no,0.008301456035023726,no,0.007391157133808364,no,0.007494754638365842,no,0.007289790475194606
2247,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_1 // load callback,no,undetermined,0,0,0,no,0.0013003372432193547,no,0.001078054763134787,no,0.0009980362866378403,no,0.0009378735521817724,no,0.0008696083679875236
2248,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// case of non-static field,no,undetermined,0,0,0,no,0.013164595912002907,no,0.012389311214812085,no,0.011713788560186712,no,0.01118427822393025,no,0.010825935594063505
2249,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// log a message about potential connection leaks,no,undetermined,0,0,0,no,0.016141921923695724,no,0.012390623174379922,no,0.011754300650453992,no,0.011189257520162577,no,0.01082600772194443
2250,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// getfield // get each field,no,undetermined,0,0,0,no,0.0022136040493393205,no,0.0025128247003698865,no,0.002379864291439825,no,0.0020764382052631384,no,0.0019298382640090504
2251,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// invokeinterface // invoke Enabled.getInterceptFieldCallback(),no,undetermined,0,0,0,no,0.0009697550322812637,no,0.001018720557012518,no,0.0009647771213743416,no,0.0008606364265607556,no,0.0007983537703813803
2252,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ifnonnull,no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
2253,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// *return // each type,no,undetermined,0,0,0,no,0.0035441781589150303,no,0.0030946453813233436,no,0.0026876202139945534,no,0.002376500501994506,no,0.002233534586988735
2254,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// *return // each type,no,undetermined,0,0,0,no,0.0035441781589150303,no,0.0030946453813233436,no,0.0026876202139945534,no,0.002376500501994506,no,0.002233534586988735
2255,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// *store_1 // each type,no,undetermined,0,0,0,no,0.0032041574343914777,no,0.0028346944147059354,no,0.002447356632933681,no,0.0021081447578745363,no,0.0019629135819527266
2256,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//many-to-many,no,undetermined,0,0,0,no,0.039865232891606574,no,0.006980258527029455,no,0.006102101517782938,no,0.0056883602483420595,no,0.006096826764054654
2257,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ldc // name of the field,no,undetermined,0,0,0,no,0.0038479050852668665,no,0.004222205975598404,no,0.004037707835913282,no,0.003719233401243704,no,0.003562383529340651
2258,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//opening paren in new Foo ( ... ),no,undetermined,0,0,0,no,0.002019631330954039,no,0.002144797959392492,no,0.0027825212545427302,no,0.0025849590978935036,no,0.0024791473059694617
2259,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if we are inside a new Result(), but not inside a nested function",no,undetermined,0,0,0,no,0.004208812368113882,no,0.005800586381704145,no,0.0057412393415011325,no,0.010153211162269749,no,0.009709582424624195
2260,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// invokeinterface // invoke Callback.read*() // each type,no,undetermined,0,0,0,no,0.0009245314321100733,no,0.0007257643910082165,no,0.0006193728113982028,no,0.0005422028773328431,no,0.0004896818096913465
2261,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//special case,no,undetermined,0,0,0,no,0.0035154969752068284,no,0.003277517663931308,no,0.002981738845891231,no,0.002666083820726995,no,0.0025506262323650403
2262,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the name of an SQL function,no,undetermined,0,0,0,no,0.0021048558854961175,no,0.006263755510607747,no,0.006213994217619078,no,0.005890725177647816,no,0.005622254295230654
2263,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//this is basically a copy/paste of OrderByParser ... might be worth refactoring,no,undetermined,0,0,0,no,0.4749085266617071,no,0.5159456165163033,no,0.517276324592974,no,0.5389563578679206,no,0.5421956716084408
2264,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// SELECT p FROM p IN CLASS eg.Person GROUP BY p.Name, p.Address, p",no,undetermined,0,0,0,no,0.0052020882661601665,no,0.004194747632978477,no,0.0038712852351967504,no,0.003729910207092453,no,0.0035066064875357537
2265,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// return aliases not supported in classic translator!,no,undetermined,0,0,0,no,0.010905886843932004,no,0.007288441486279332,no,0.006869279755134287,no,0.006469982748222725,no,0.006275217500712395
2266,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// int,no,undetermined,0,0,0,no,0.0009928243151342742,no,0.0010459168343463564,no,0.0009698417983399365,no,0.0008646939440563784,no,0.0008144543119898794
2267,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//register collection role,no,undetermined,0,0,0,no,0.00858033193876126,no,0.00893873529054403,no,0.0049133990104603216,no,0.004129068875803498,no,0.0038969787914868172
2268,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// just do the regular thing if you can't find the ctor // Your AST must have default ctor to use this.,no,undetermined,0,0,0,no,0.02366677613666191,no,0.012411450118788147,no,0.011728206341380401,no,0.011196014082220537,no,0.010823989001631344
2269,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// return,no,undetermined,0,0,0,no,0.0006289585196806323,no,0.0005663290584469739,no,0.0005106554160617964,no,0.0004696337633428153,no,0.00043772048256313556
2270,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// The keyword used to specify an identity column, if identity column key generation is supported.",no,undetermined,0,0,0,no,0.0015952252449374226,no,0.0015451597070252445,no,0.002972245607727587,no,0.0027503145656661613,no,0.003148339124000864
2271,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//.getElementPropertyMapping();,no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
2272,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// dup,no,undetermined,0,0,0,no,0.00199580217869232,no,0.0022201631194370504,no,0.0020526429513180195,no,0.0018854055309910408,no,0.0017863422171816702
2273,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//following doesn't handle (null, not null) but unnecessary //since this would mean all rows",no,undetermined,0,0,0,no,0.05319175051743183,no,0.012391406595490985,no,0.011724323927951245,no,0.011181841413084847,no,0.01082821176776197
2274,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// checkcast,no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
2275,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// checkcast,no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
2276,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//crossJoins.add(name);,no,undetermined,0,0,0,no,0.0030711143633486444,no,0.003549669985977661,no,0.003386179115337075,no,0.0031837005844528306,no,0.003061631089357968
2277,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//ie no select clause in HQL,no,undetermined,0,0,0,no,0.001617506215192264,no,0.0053615002758615185,no,0.004940371913258348,no,0.004641942884398408,no,0.0044078805014269975
2278,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// invokeinterface // enabled.getInterceptFieldCallback(),no,undetermined,0,0,0,no,0.0007402335333915588,no,0.0011515580525371548,no,0.001072233376670681,no,0.0009803478028022332,no,0.0009174712595331867
2279,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// invokeinterface // enabled.getInterceptFieldCallback(),no,undetermined,0,0,0,no,0.0007402335333915588,no,0.0011515580525371548,no,0.001072233376670681,no,0.0009803478028022332,no,0.0009174712595331867
2280,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ifnonnull (label1),no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
2281,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we are the LHS of the DOT representing a naked comp-prop-ref,no,undetermined,0,0,0,no,0.002850932414952418,no,0.001691382676432348,no,0.0013590785976110983,no,0.0012432243901795903,no,0.0011830746625742846
2282,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// *load_1,no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
2283,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// *load_1,no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
2284,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//ie. no select clause,no,undetermined,0,0,0,no,0.0012345325500852959,no,0.012373734851576605,no,0.01173231339194385,no,0.011213710427398755,no,0.01083517087613912
2285,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// putfield,no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
2286,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//there _was_ a select clause,no,undetermined,0,0,0,no,0.0012286276820848625,no,0.0011494692364258053,no,0.0009787397067369077,no,0.0009140689667496694,no,0.0008352587614364834
2287,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// return ;,no,undetermined,0,0,0,no,0.0006289585196806323,no,0.0005663290584469739,no,0.0005106554160617964,no,0.0004696337633428153,no,0.00043772048256313556
2288,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ldc // field name,no,undetermined,0,0,0,no,0.005470673309988075,no,0.006270235476381977,no,0.005875423209864604,no,0.005533290772009116,no,0.005330052791686805
2289,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// getfield // old value of the field,no,undetermined,0,0,0,no,0.004106764716497087,no,0.004398986793093884,no,0.004178366206726037,no,0.003932650934616574,no,0.0037316599300757157
2290,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// reference type,no,undetermined,0,0,0,no,0.0060764953654464495,no,0.0059977849846347886,no,0.004959937249975449,no,0.00456133268915316,no,0.004334517458868238
2291,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// return the concrete type, or the underlying type if a concrete type // was not specified",no,undetermined,0,0,0,no,0.006209116968683811,no,0.006128416561928318,no,0.005330440687406519,no,0.005005386646604985,no,0.004776773690585417
2292,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//many-to-many,no,undetermined,0,0,0,no,0.039865232891606574,no,0.006980258527029455,no,0.006102101517782938,no,0.0056883602483420595,no,0.006096826764054654
2293,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// reference type,no,undetermined,0,0,0,no,0.0060764953654464495,no,0.0059977849846347886,no,0.004959937249975449,no,0.00456133268915316,no,0.004334517458868238
2294,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// not array,no,undetermined,0,0,0,no,0.002225793670717475,no,0.0020578657967222054,no,0.0019477872409050722,no,0.0017901102836785459,no,0.0016341900693845257
2295,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// array of reference type,no,undetermined,0,0,0,no,0.0036040884917097763,no,0.003686695276437767,no,0.0031426371039198833,no,0.0028961392210482303,no,0.002686942911778263
2296,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//q.addCollection(collectionName, collectionRole);",no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
2297,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// boolean,no,undetermined,0,0,0,no,3.2752576528842926e-06,no,7.51638805025323e-06,no,6.434088268399235e-06,no,5.2301383856398e-06,no,4.5420920102689284e-06
2298,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// char,no,undetermined,0,0,0,no,0.00015589790258442997,no,0.00016036494453190915,no,0.00011925246236804897,no,0.00010490578466002485,no,9.492801679358796e-05
2299,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// short,no,undetermined,0,0,0,no,0.001567910706587861,no,0.012373625659577869,no,0.011746332042957962,no,0.01121331660059663,no,0.010839528539340308
2300,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// classic parser does not support bulk manipulation statements,no,undetermined,0,0,0,no,0.004406362033968315,no,0.012399616436692932,no,0.011755398924928695,no,0.011204704828354183,no,0.01082728139491601
2301,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// double,no,undetermined,0,0,0,no,0.0010344587833293097,no,0.001159506722976161,no,0.0010856997163940082,no,0.0009905562529812612,no,0.0009333044214954557
2302,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_0,no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
2303,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// float,no,undetermined,0,0,0,no,0.0010067086183472422,no,0.0011123344781662496,no,0.0010418841951772707,no,0.0009408435665328365,no,0.0008460160255291966
2304,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// float,no,undetermined,0,0,0,no,0.0010067086183472422,no,0.0011123344781662496,no,0.0010418841951772707,no,0.0009408435665328365,no,0.0008460160255291966
2305,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This is called when it's time to fully resolve a path expression.,no,undetermined,0,0,0,no,0.08703873823404047,no,0.012395867470285656,no,0.011759198275041426,no,0.01121258175290154,no,0.010831109271429771
2306,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// long,no,undetermined,0,0,0,no,0.006027455724331034,no,0.00683802480411424,no,0.006317515149910514,no,0.0060047785744141245,no,0.00576392792540691
2307,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// can't cache this stuff either (per-invocation),no,undetermined,0,0,0,no,0.022128736002355143,no,0.012411037004649567,no,0.011757415411764926,no,0.011210612566399974,no,0.010816552291224272
2308,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This is the legacy behaviour for HQL queries...,no,undetermined,0,0,0,no,0.0030557198749843035,no,0.004040638436655967,no,0.004627013413482616,no,0.004387182559501924,no,0.0041490168043812154
2309,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// long,no,undetermined,0,0,0,no,0.006027455724331034,no,0.00683802480411424,no,0.006317515149910514,no,0.0060047785744141245,no,0.00576392792540691
2310,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// bad type,no,undetermined,0,0,0,no,0.02984547854941382,no,0.01239459911484939,no,0.011733604050876943,no,0.011183957822105538,no,0.010837962796190419
2311,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// bad type,no,undetermined,0,0,0,no,0.02984547854941382,no,0.01239459911484939,no,0.011733604050876943,no,0.011183957822105538,no,0.010837962796190419
2312,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// not known!,no,undetermined,0,0,0,no,0.0031931950054822984,no,0.0015347881107668944,no,0.0013767584225123054,no,0.0012743393491127008,no,0.0011692223525854794
2313,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// boolean, byte, char, int, short",no,undetermined,0,0,0,no,0.00011625721782510007,no,0.0004643194019040743,no,0.0003864598135788517,no,0.00034500734030297264,no,0.0003179392408796958
2314,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// not known!,no,undetermined,0,0,0,no,0.0031931950054822984,no,0.0015347881107668944,no,0.0013767584225123054,no,0.0012743393491127008,no,0.0011692223525854794
2315,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// boolean, byte, char, int, short",no,undetermined,0,0,0,no,0.00011625721782510007,no,0.0004643194019040743,no,0.0003864598135788517,no,0.00034500734030297264,no,0.0003179392408796958
2316,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// not known!,no,undetermined,0,0,0,no,0.0031931950054822984,no,0.0015347881107668944,no,0.0013767584225123054,no,0.0012743393491127008,no,0.0011692223525854794
2317,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// reference type,no,undetermined,0,0,0,no,0.0060764953654464495,no,0.0059977849846347886,no,0.004959937249975449,no,0.00456133268915316,no,0.004334517458868238
2318,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// not known!,no,undetermined,0,0,0,no,0.0031931950054822984,no,0.0015347881107668944,no,0.0013767584225123054,no,0.0012743393491127008,no,0.0011692223525854794
2319,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//Need this, since join condition can appear inside parens!",no,undetermined,0,0,0,no,0.04120398448900832,no,0.012392546938716074,no,0.011731186270175942,no,0.01119319235490565,no,0.010830685559319476
2320,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// double,no,undetermined,0,0,0,no,0.0010344587833293097,no,0.001159506722976161,no,0.0010856997163940082,no,0.0009905562529812612,no,0.0009333044214954557
2321,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// float,no,undetermined,0,0,0,no,0.0010067086183472422,no,0.0011123344781662496,no,0.0010418841951772707,no,0.0009408435665328365,no,0.0008460160255291966
2322,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// float,no,undetermined,0,0,0,no,0.0010067086183472422,no,0.0011123344781662496,no,0.0010418841951772707,no,0.0009408435665328365,no,0.0008460160255291966
2323,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// bad type,no,undetermined,0,0,0,no,0.02984547854941382,no,0.01239459911484939,no,0.011733604050876943,no,0.011183957822105538,no,0.010837962796190419
2324,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// bad type,no,undetermined,0,0,0,no,0.02984547854941382,no,0.01239459911484939,no,0.011733604050876943,no,0.011183957822105538,no,0.010837962796190419
2325,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// boolean, byte, char, int, short",no,undetermined,0,0,0,no,0.00011625721782510007,no,0.0004643194019040743,no,0.0003864598135788517,no,0.00034500734030297264,no,0.0003179392408796958
2326,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//expressionOpeners.add("",""); // deliberately excluded",no,undetermined,0,0,0,no,0.0013184726244339835,no,0.0014140555969133668,no,0.001310107470228101,no,0.001203252388862424,no,0.0011455490018935192
2327,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// skip finalize methods,no,undetermined,0,0,0,no,0.0014391549220024369,no,0.00044484871531037215,no,0.00039044086286634124,no,0.00035078289882958867,no,0.000317707607677337
2328,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Mainly for OSCache,no,undetermined,0,0,0,no,0.0026452457298600887,no,0.00252095263400067,no,0.0023349150229979294,no,0.002126959120626478,no,0.002025861572889429
2329,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//decrement the lock,no,undetermined,0,0,0,no,0.0012468309453089648,no,0.0010656977321164356,no,0.0010057990213960138,no,0.0009242704132932805,no,0.0008581805531014986
2330,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//recache the updated state,no,undetermined,0,0,0,no,0.001496624727729747,no,0.0012197583904039028,no,0.0010692672870178084,no,0.0009473851232740531,no,0.0008890249029423762
2331,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// noop,no,undetermined,0,0,0,no,0.0009646755708812176,no,0.0009192590923223185,no,0.0008410726785932576,no,0.0007727807750535093,no,0.0006896985008705766
2332,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//null clientLock is remotely possible but will never happen in practice,no,undetermined,0,0,0,no,0.0015608774008853232,no,0.00208323120819136,no,0.0018991616222486533,no,0.0016857293467926664,no,0.0015797346930299552
2333,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//by requiring <, we rely on lock timeout in the case of an unsuccessful update!",no,undetermined,0,0,0,no,0.007639929779963734,no,0.007771250056504462,no,0.007157208391147242,no,0.005926328634029514,no,0.0055931934857348055
2334,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// the user provided resulttransformer, not the one used with ""select new"". Here to avoid mangling // transformed/non-transformed results.",no,undetermined,0,0,0,no,0.025508753655513874,no,0.012399057977955399,no,0.011736949210904934,no,0.011171282131211694,no,0.0108457724193877
2335,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// disassemble positional parameters,no,undetermined,0,0,0,no,0.001650447208606124,no,0.0014419731156098917,no,0.0013573861372731804,no,0.0012309854990077212,no,0.0011537588850999184
2336,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//ie. 60 seconds,no,undetermined,0,0,0,no,0.0027951494326338274,no,0.012367659157836771,no,0.011728199595758496,no,0.011174398384674353,no,0.010845039954998676
2337,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// noop,no,undetermined,0,0,0,no,0.0009646755708812176,no,0.0009192590923223185,no,0.0008410726785932576,no,0.0007727807750535093,no,0.0006896985008705766
2338,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// otherwise, a trim-specification and/or a trim-character // have been specified;  we need to decide which options // are present and ""do the right thing"" // should leading trim-characters be trimmed? // should trailing trim-characters be trimmed? // the trim-character (what is to be trimmed off?) // the trim-source (from where should it be trimmed?)",no,undetermined,0,0,0,no,0.04795161754459356,no,0.015861922756704484,no,0.011758303443445759,no,0.011185006752780323,no,0.010831285734019045
2339,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//noop,no,undetermined,0,0,0,no,0.0009646755708812176,no,0.0009192590923223185,no,0.0008410726785932576,no,0.0007727807750535093,no,0.0006896985008705766
2340,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//noop,no,undetermined,0,0,0,no,0.0009646755708812176,no,0.0009192590923223185,no,0.0008410726785932576,no,0.0007727807750535093,no,0.0006896985008705766
2341,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this is called from SettingsFactory irregardless; trivial to simply disregard,no,undetermined,0,0,0,no,0.013895062622106954,no,0.012383959377192255,no,0.011724230018680682,no,0.011199768042889514,no,0.01084513978669986
2342,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Do nothing; subclasses may override.,no,undetermined,0,0,0,no,0.0019382774303887493,no,0.002726717994015292,no,0.0025891243426357153,no,0.0023943110815400725,no,0.0022569193931574034
2343,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Do nothing; subclasses may override.,no,undetermined,0,0,0,no,0.0019382774303887493,no,0.002726717994015292,no,0.0025891243426357153,no,0.0023943110815400725,no,0.0022569193931574034
2344,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// TABLE,no,undetermined,0,0,0,no,0.0005187246094518545,no,0.0007843422095474706,no,0.000997988720887678,no,0.0009177718028567297,no,0.0008291817861361002
2345,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Inside a BETWEEN ... AND ... expression,no,undetermined,0,0,0,no,0.009550651913146621,no,0.0064351740000967335,no,0.0062804036529099895,no,0.009202542835593503,no,0.008815173575613252
2346,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//were an odd or even number of NOTs encountered //the join string built up by compound paths inside this expression //a flag indicating if the subexpression is known to be boolean,no,undetermined,0,0,0,no,0.011334478289593022,no,0.008788193928217536,no,0.008988377046916638,no,0.009883603458213498,no,0.009256536836132668
2347,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//ie. a many-to-many,no,undetermined,0,0,0,no,0.017605256715624195,no,0.012395551639385806,no,0.011748816394866551,no,0.01120636109102069,no,0.010820902405963565
2348,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//Cope with [,]",no,undetermined,0,0,0,no,0.010124471190299288,no,0.0029013310595337894,no,0.002660178989985896,no,0.0023284233386052892,no,0.0022126899606523414
2349,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Cope with a continued path expression (ie. ].baz),no,undetermined,0,0,0,no,0.0058034944997555115,no,0.012375870106136395,no,0.01173728021887883,no,0.011190977049878955,no,0.01082732710049759
2350,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//NOTE: early return,no,undetermined,0,0,0,no,0.0021512406611041896,no,0.0017037143720427912,no,0.0015511988889454988,no,0.0014454937371297073,no,0.0013492809746694454
2351,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Cope with a subselect,no,undetermined,0,0,0,no,0.010124471190299288,no,0.0029013310595337894,no,0.002660178989985896,no,0.0023284233386052892,no,0.0022126899606523414
2352,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// use the id value of a newly instantiated instance as the unsaved-value,no,undetermined,0,0,0,no,0.006591894888996223,no,0.005262981875059025,no,0.004351865046114922,no,0.003866052769925508,no,0.0036535065477601597
2353,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Close extra brackets we opened,no,undetermined,0,0,0,no,0.00019829764196243837,no,0.00018667297729311748,no,0.00016078961963588508,no,0.00014233882351779656,no,0.00012705493856798433
2354,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//take note when this is a boolean expression,no,undetermined,0,0,0,no,0.009796330167131027,no,0.009646197206265939,no,0.009052791498042816,no,0.009074646246557386,no,0.00848604306548298
2355,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//persister.setIdentifier(result, id); //before calling interceptor, for consistency with normal load",no,undetermined,0,0,0,no,0.017031207147844972,no,0.00972523054250758,no,0.010083204538662486,no,0.008811659225881108,no,0.008382085727675384
2356,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// no-op; CCS did not have such a concept,no,undetermined,0,0,0,no,0.00040576297611822075,no,0.0003332353899424223,no,0.00029313735699609367,no,0.00025711105956893916,no,0.0002369507956261365
2357,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// JoinProcessor needs to know if the where clause fragment came from a dynamic filter or not so it // can put the where clause fragment in the right place in the SQL AST.   'hasFilterCondition' keeps track // of that fact.,no,undetermined,0,0,0,no,0.060199903586730955,no,0.012384240715765814,no,0.01172888605520646,no,0.011191561779462001,no,0.010828051873464244
2358,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// no-op; CCS did not have such a concept,no,undetermined,0,0,0,no,0.00040576297611822075,no,0.0003332353899424223,no,0.00029313735699609367,no,0.00025711105956893916,no,0.0002369507956261365
2359,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// assumes that types are all of span 1,no,undetermined,0,0,0,no,0.0021148559091931428,no,0.002065883718090638,no,0.0019492166182948285,no,0.0017837580550407483,no,0.0016742421926919534
2360,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// again, CCS did not have such a concept; however a reasonable // proximity is to clear the cache.  For non-transaction aware // caches, we will also do a clear at the end of the transaction",no,undetermined,0,0,0,no,0.026633438565937657,no,0.012378345367131408,no,0.011729246519828748,no,0.011191452617513531,no,0.010812710170496096
2361,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//process a token, mapping OO path expressions to SQL expressions",no,undetermined,0,0,0,no,0.001854588806528066,no,0.003260133117080479,no,0.004340985401421347,no,0.004078881004147033,no,0.004319238231639152
2362,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Open any extra brackets we might need.,no,undetermined,0,0,0,no,0.06138870022524634,no,0.012401750445007421,no,0.011741109374255872,no,0.011170598411536442,no,0.010851924271448442
2363,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//Cope with special cases of AND, NOT, )",no,undetermined,0,0,0,no,0.011741444271450503,no,0.011678527029262817,no,0.010950942268417306,no,0.010246867751162451,no,0.00977452325871965
2364,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the next one up must also be,no,undetermined,0,0,0,no,0.005248489928612821,no,0.0051608931179235144,no,0.004711528651169651,no,0.00441410745273266,no,0.004443844512318367
2365,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Add any joins,no,undetermined,0,0,0,no,0.0024571940983696087,no,0.0021721075847107147,no,0.0021354049653287683,no,0.0019936975977959456,no,0.0018883147053066517
2366,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//named query parameter,no,undetermined,0,0,0,no,0.007380292858184892,no,0.007903807570883511,no,0.006713417083998138,no,0.005880360929620854,no,0.005702727639496364
2367,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// get meta's from <hibernate-mapping>,no,undetermined,0,0,0,no,0.0017118744628855072,no,0.00415124189802895,no,0.0040024124751983255,no,0.0035693062819898477,no,0.004195995914731163
2368,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// get meta's from <class>,no,undetermined,0,0,0,no,0.004210043086789787,no,0.00537655912008713,no,0.005224641870698372,no,0.004876528941533231,no,0.00465426832239732
2369,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//path expression,no,undetermined,0,0,0,no,0.003900168062493049,no,0.001626257643037535,no,0.0015189049423393235,no,0.0013993489361793657,no,0.0013110572596737335
2370,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// DB-OBJECTNAME,no,undetermined,0,0,0,no,0.00047277382929105933,no,0.0004087032829212873,no,0.0003764399927344891,no,0.00032879314309291997,no,0.0003062656895961343
2371,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// just decrement the lock, don't recache // (we don't know which transaction won)",no,undetermined,0,0,0,no,0.020827235262632925,no,0.01240176091459728,no,0.011753816592671627,no,0.011197066341150879,no,0.010843450709484226
2372,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// saves / updates don't cascade to uninitialized collections,no,undetermined,0,0,0,no,0.0040951189592291,no,0.003323783124695008,no,0.00316298581718917,no,0.0028604316118105793,no,0.002672579443281728
2373,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// MUTABLE,no,undetermined,0,0,0,no,0.0010774714433293,no,0.0021077128564061143,no,0.0019259575145586204,no,0.0017485477784323063,no,0.0016480826509286907
2374,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// A container for collections we load up when the owning entity is not // yet loaded ... for now, this is purely transient!",no,undetermined,0,0,0,no,0.0781444620860076,no,0.012395551615585733,no,0.011753234222660213,no,0.011205848227235271,no,0.01084866223244444
2375,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// WHERE,no,undetermined,0,0,0,no,0.0088881928639692,no,0.00950705830066516,no,0.009076599205842271,no,0.008070931788361234,no,0.007747070406663091
2376,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// CHECK,no,undetermined,0,0,0,no,0.000125453080546129,no,0.00036918862083880225,no,0.0004019855623738632,no,0.0003587122530445089,no,0.000335550120193971
2377,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// POLYMORPHISM,no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
2378,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// properties that we have tried to load, and not found in the database",no,undetermined,0,0,0,no,0.010663032427050904,no,0.009924608699575352,no,0.00820685672319498,no,0.007666036128192994,no,0.007361133443129516
2379,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// TODO:,no,undetermined,0,0,0,no,0.011655632226661484,no,0.01236577759846885,no,0.011721998039486535,no,0.011178854171809327,no,0.010821618193954203
2380,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// persists don't cascade to uninitialized collections,no,undetermined,0,0,0,no,0.006396708155547006,no,0.007002471406881795,no,0.006876509414948579,no,0.006404213032647537,no,0.0060070476625594185
2381,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//anything else,no,undetermined,0,0,0,no,0.002128465788569152,no,0.0020198521191581668,no,0.0017752926875631964,no,0.0016781605230290174,no,0.001583790015162358
2382,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the path expression continues after a ],no,undetermined,0,0,0,no,0.004081372155444105,no,0.0023677530835323805,no,0.0020992511494768214,no,0.0019331596094050933,no,0.0018512101843094226
2383,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// careful with this!,no,undetermined,0,0,0,no,0.013498051858162873,no,0.009856645330422709,no,0.00910640614915419,no,0.00857760612269617,no,0.00826552982892841
2384,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the path expression ends at the ],no,undetermined,0,0,0,no,0.015493743421158564,no,0.011777652036153531,no,0.01117131800517818,no,0.010642077243343807,no,0.010330707809488663
2385,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// ""finish off"" the join",no,undetermined,0,0,0,no,0.006672404667722131,no,0.0040904175385974816,no,0.0038631207641870334,no,0.0035663282666399776,no,0.0032623735016827785
2386,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//NOTICE: no "" or . since they are part of (compound) identifiers",no,undetermined,0,0,0,no,0.012413751926423824,no,0.012086748270103066,no,0.011072992627600675,no,0.00998134128138943,no,0.009748860586394185
2387,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//cannot instantiate,no,undetermined,0,0,0,no,0.0007495501996094857,no,0.0012082452781663703,no,0.0011485780215518113,no,0.0010566587684907682,no,0.0009913987257065982
2388,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// start by looking for HQL keywords...,no,undetermined,0,0,0,no,0.00043492286014953907,no,0.00029085911462021,no,0.000259835836190286,no,0.00022387645679599553,no,0.00020369226894447918
2389,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// inner joins can be abbreviated to 'join',no,undetermined,0,0,0,no,0.005549207950150922,no,0.00599078967219522,no,0.005552413692290733,no,0.005084112474308442,no,0.004753751861831562
2390,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// 'outer' is optional and is ignored,no,undetermined,0,0,0,no,0.00024086593534636676,no,0.0002612187682216744,no,0.00023024345765896583,no,0.00020188594367009032,no,0.00018374669839202158
2391,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// now anything that is not a HQL keyword,no,undetermined,0,0,0,no,0.00427415990791967,no,0.002966462159301908,no,0.002642968078662635,no,0.0024310278167594076,no,0.0023230895852250004
2392,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// process the ""old"" HQL style where aliases appear _first_ // ie. using the IN or IN CLASS constructions",no,undetermined,0,0,0,no,0.0033597073320135967,no,0.009443720876337562,no,0.00857489626718237,no,0.007824728252534104,no,0.007468390117106752
2393,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// treat it as a classname,no,undetermined,0,0,0,no,0.003253237527319088,no,0.003144948182849087,no,0.0027569920729232232,no,0.0024575751662187237,no,0.0022844524631869863
2394,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// treat it as a path expression,no,undetermined,0,0,0,no,0.007483968512491203,no,0.00434609847091153,no,0.003883914372601648,no,0.0035047197232609276,no,0.00326439489673731
2395,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// starts with a path expression (new style),no,undetermined,0,0,0,no,0.004210460022173702,no,0.005990202599065325,no,0.005505623960810776,no,0.005189543480926052,no,0.004952823011783418
2396,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ID,no,undetermined,0,0,0,no,0.006288423455310951,no,0.0045959156015637345,no,0.0041378929181734156,no,0.0037110381762554497,no,0.003573127090237974
2397,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//allow ODMG OQL style: from Person p, p.cars c",no,undetermined,0,0,0,no,0.003459291370443482,no,0.006909496525960161,no,0.006131391632894632,no,0.00579217311581823,no,0.005558298969417349
2398,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//handle quoted strings,no,undetermined,0,0,0,no,0.008682026885287577,no,0.008843398967362621,no,0.010172946976838586,no,0.00974582144341084,no,0.009363290291589207
2399,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// VERSION / TIMESTAMP,no,undetermined,0,0,0,no,0.001401246330327075,no,0.0019440919948238977,no,0.0018582387886687678,no,0.0017341169442709726,no,0.0016284888968640034
2400,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// DISCRIMINATOR,no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
2401,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Primary key constraint,no,undetermined,0,0,0,no,0.0026068104771843166,no,0.0016983902686931805,no,0.0015328668055601471,no,0.001406410271412482,no,0.001316871179414761
2402,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// this is either a <version/> tag with no type attribute, // or a <timestamp/> tag",no,undetermined,0,0,0,no,0.005963006106774148,no,0.010764726397587732,no,0.010014757817035862,no,0.009646924490886883,no,0.009208417589605566
2403,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Object insertions, updates, and deletions have list semantics because // they must happen in the right order so as to respect referential // integrity",no,undetermined,0,0,0,no,0.015092945792371575,no,0.012367157387911516,no,0.011720367737299925,no,0.011215377183112862,no,0.010853096947280125
2404,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// ""finish off"" the join",no,undetermined,0,0,0,no,0.006672404667722131,no,0.0040904175385974816,no,0.0038631207641870334,no,0.0035663282666399776,no,0.0032623735016827785
2405,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//ignore whitespace,no,undetermined,0,0,0,no,0.000570473441179305,no,0.0006218084192420468,no,0.0005482318644861454,no,0.000486318077638092,no,0.0004542710820549286
2406,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//do replacements,no,undetermined,0,0,0,no,0.02565241011749004,no,0.012371417000205265,no,0.011732064686721017,no,0.011179232819884562,no,0.01083054063675471
2407,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//handle HQL2 collection syntax,no,undetermined,0,0,0,no,0.006384374833465762,no,0.012375823531999097,no,0.0066195023619543426,no,0.007924332727823216,no,0.007577222021874554
2408,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// uuid.hex is deprecated,no,undetermined,0,0,0,no,0.020766683552401133,no,0.012412005432163973,no,0.011758641979790242,no,0.011200793383622716,no,0.010836442621120483
2409,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// AbstractSelectingDelegate impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.006140888174090093,no,0.004901065980396148,no,0.004578600266881531,no,0.004352388675445458,no,0.006026218188316145
2410,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//hilo params,no,undetermined,0,0,0,no,0.004378084331404792,no,0.0035367586227886645,no,0.0033720863778265923,no,0.003149566269878805,no,0.0029235877250972067
2411,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//sql = query;,no,undetermined,0,0,0,no,0.0020853870349626354,no,0.004562018454398581,no,0.00344549449293748,no,0.002938162848942639,no,0.0028118290842108133
2412,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//for EJB3,no,undetermined,0,0,0,no,0.00017492629787686786,no,0.00017410018949443368,no,0.00015919794537707133,no,0.00013412341087149619,no,0.00012180180650492888
2413,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// performance opt,no,undetermined,0,0,0,no,0.01211247131612642,no,0.012376493904754706,no,0.011746929576468541,no,0.01120204163866262,no,0.010836766601670265
2414,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//sql = update;,no,undetermined,0,0,0,no,0.0009191232771646777,no,0.0012851847679309504,no,0.0010956962690405212,no,0.0009921398007296477,no,0.0009380943022397156
2415,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// DISCRIMINATOR,no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
2416,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//hilo config,no,undetermined,0,0,0,no,0.0040764821627402555,no,0.004101616536190318,no,0.0037755211882645,no,0.0035399481911322136,no,0.00336815548246726
2417,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// so we ""clock over"" on the first invocation",no,undetermined,0,0,0,no,0.0010151505289843893,no,0.0010081869016693751,no,0.000900347020643332,no,0.0008130966883475166,no,0.000753900317434495
2418,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// don't allow comments on these insert statements as comments totally // blow up the Oracle getGeneratedKeys ""support"" :(",no,undetermined,0,0,0,no,0.0075972031047220655,no,0.012241991026467504,no,0.011743709888183018,no,0.011192859856692463,no,0.010824335562666971
2419,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//throw new IdentifierGenerationException(""save associated object first, or disable cascade for inverse association"");",no,undetermined,0,0,0,no,0.0024658768466277207,no,0.0036774886610870263,no,0.003932578185489386,no,0.003702774267366041,no,0.0033577533290198385
2420,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//count++;,no,undetermined,0,0,0,no,0.0023445893741188056,no,0.006553995537467018,no,0.006168189636027107,no,0.0056647324506089985,no,0.005433562823736246
2421,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// go ahead and set the lazy here, since pojo.proxy can override it.",no,undetermined,0,0,0,no,0.007505298960801037,no,0.007919644153692854,no,0.007090791149921882,no,0.006552491793632472,no,0.0067352657681475775
2422,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// DYNAMIC UPDATE,no,undetermined,0,0,0,no,0.0006052110954717559,no,0.0011251618552478519,no,0.0009832040481771375,no,0.0008980230321058975,no,0.0008480994463772034
2423,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// IMPORT,no,undetermined,0,0,0,no,0.003277688608841835,no,0.0034674382800296897,no,0.003079483259971401,no,0.0028760967822650594,no,0.0027302209482747996
2424,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// BATCH SIZE,no,undetermined,0,0,0,no,0.007172421586841792,no,0.005779210980266926,no,0.004742802585764576,no,0.0042125261520221165,no,0.00400143100828444
2425,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we need to dirty check collections, since they can cause an owner // version number increment",no,undetermined,0,0,0,no,0.028150266574917794,no,0.012403689050856056,no,0.011752289886952462,no,0.011201968095130637,no,0.010844213957074472
2426,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// SELECT BEFORE UPDATE,no,undetermined,0,0,0,no,0.0008251509221381552,no,0.0007560073861980268,no,0.000673574747329931,no,0.0006018357544972725,no,0.0005532292160878166
2427,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// OPTIMISTIC LOCK MODE,no,undetermined,0,0,0,no,0.0047750186654335796,no,0.004166968852521133,no,0.004140534267226603,no,0.0038309660482024476,no,0.0036106082307375484
2428,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// intentionally empty,no,undetermined,0,0,0,no,0.0037763070001841895,no,0.004249508276831321,no,0.003857183339794085,no,0.003525943555307979,no,0.0033151150666807525
2429,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//first element of array is reserved for the actual instance we are loading!,no,undetermined,0,0,0,no,0.008442990139949208,no,0.006711443254238379,no,0.005922329404702524,no,0.004535947174604586,no,0.004377716333885219
2430,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//keep the behavior consistent even for boundary usages,no,undetermined,0,0,0,no,0.0027401693263364143,no,0.003215830651319787,no,0.003177844066791043,no,0.0029229153691875598,no,0.0027627253845703714
2431,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// so we ""clock over"" on the first invocation",no,undetermined,0,0,0,no,0.0010151505289843893,no,0.0010081869016693751,no,0.000900347020643332,no,0.0008130966883475166,no,0.000753900317434495
2432,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// do nothing until we hit the rsult set containing the generated id,no,undetermined,0,0,0,no,0.016471659133579467,no,0.012405631795734442,no,0.01174216095801797,no,0.011194787077397215,no,0.010837703019351597
2433,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Use the delegate, resolve identifiers as FROM element aliases.",no,undetermined,0,0,0,no,0.007571668774971827,no,0.005697390158264433,no,0.004832616845974252,no,0.004415574773390059,no,0.0042795210426089855
2434,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// PERSISTER,no,undetermined,0,0,0,no,0.014265064612808392,no,0.009449688829097677,no,0.009692140647363384,no,0.008601222716180027,no,0.008142829598044146
2435,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// CUSTOM SQL,no,undetermined,0,0,0,no,0.0014378860619458742,no,0.001103956897338759,no,0.000977419833098711,no,0.0008804344508510066,no,0.0008249138854628948
2436,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Loaded entity instances, by EntityKey",no,undetermined,0,0,0,no,0.009269237502786487,no,0.004698355611330185,no,0.004598696473528981,no,0.004114167726044776,no,0.003878430615300807
2437,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// if the given name is un-qualified we may neen to qualify it,no,undetermined,0,0,0,no,0.010839056724614271,no,0.012391690531916157,no,0.011722928458596148,no,0.011192368752379254,no,0.010848710758187606
2438,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the default...,no,undetermined,0,0,0,no,9.449706673239793e-05,no,0.00010657974394865403,no,9.432099328017377e-05,no,7.975987871285227e-05,no,7.239079779956074e-05
2439,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// cascade-save to many-to-one BEFORE the parent is saved,no,undetermined,0,0,0,no,0.011629242175243863,no,0.01153323948066847,no,0.011722563581188561,no,0.011192025510246065,no,0.01083097857581049
2440,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// get meta's from <subclass>,no,undetermined,0,0,0,no,0.009346924622689821,no,0.010976081042169612,no,0.010722715843661168,no,0.010139017284416171,no,0.00983451514820798
2441,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// properties,no,undetermined,0,0,0,no,0.002769086247947564,no,0.0027472130994571136,no,0.0024584517939946096,no,0.0022565050745577166,no,0.002155903587709979
2442,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// joined subclasses,no,undetermined,0,0,0,no,0.00036711223931474473,no,0.0009197377428884206,no,0.0008693654544301822,no,0.0007776411144452777,no,0.0007197862972447588
2443,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// KEY,no,undetermined,0,0,0,no,0.000286828744266094,no,0.00015095523696608606,no,0.00013257455750651122,no,0.0001136598335623921,no,0.00010223686598934938
2444,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// CHECK,no,undetermined,0,0,0,no,0.000125453080546129,no,0.00036918862083880225,no,0.0004019855623738632,no,0.0003587122530445089,no,0.000335550120193971
2445,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// properties,no,undetermined,0,0,0,no,0.002769086247947564,no,0.0027472130994571136,no,0.0024584517939946096,no,0.0022565050745577166,no,0.002155903587709979
2446,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// intentionally empty,no,undetermined,0,0,0,no,0.0037763070001841895,no,0.004249508276831321,no,0.003857183339794085,no,0.003525943555307979,no,0.0033151150666807525
2447,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// KEY,no,undetermined,0,0,0,no,0.000286828744266094,no,0.00015095523696608606,no,0.00013257455750651122,no,0.0001136598335623921,no,0.00010223686598934938
2448,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//even process null collections,no,undetermined,0,0,0,no,0.001600828056070747,no,0.0010168664230850702,no,0.0008946023775177015,no,0.0007734346033316801,no,0.000716335080249667
2449,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//keep the existing version number in the case of replicate!,no,undetermined,0,0,0,no,0.0025338607852569126,no,0.0023111616690467433,no,0.002375929740544167,no,0.0022190284000284284,no,0.00207857501047982
2450,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//source.getPersistenceContext().removeNonExist( new EntityKey( id, persister, source.getEntityMode() ) );",no,undetermined,0,0,0,no,0.003555464239539445,no,0.002942348541715833,no,0.002960222421171475,no,0.0026050203091322805,no,0.002468786330599653
2451,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// substitutes into values by side-effect,no,undetermined,0,0,0,no,0.003852644397937377,no,0.012378405863805033,no,0.011731673386073636,no,0.011207027966266988,no,0.01084346130143082
2452,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Identity map of CollectionEntry instances, by the collection wrapper",no,undetermined,0,0,0,no,0.0038686018232489353,no,0.0024041062633685622,no,0.003059305722888917,no,0.0026504980492322834,no,0.0028509530446937477
2453,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// TABLENAME,no,undetermined,0,0,0,no,0.0026158127987457405,no,0.002952874676347217,no,0.00269370637800881,no,0.002501600448420812,no,0.002364383897215754
2454,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// table-specific parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0010502338774873014,no,0.001020031085535252,no,0.001055484154606363,no,0.0009670067696700645,no,0.0008955740972152367
2455,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// join.getKey().setType( new Type( lazz.getIdentifier() ) );,no,undetermined,0,0,0,no,0.004990929378654423,no,0.0036456615425025643,no,0.0029118512399547453,no,0.0026086518729685876,no,0.0023672856039435148
2456,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//source.getBatcher().executeBatch(); //found another way to ensure that all batched joined inserts have been executed,no,undetermined,0,0,0,no,0.01887140250279771,no,0.01239408294524811,no,0.011726644832887457,no,0.011202036047278055,no,0.010836809304448587
2457,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// IdentifierGenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.011654097931266767,no,0.012362946118485506,no,0.011729176290080516,no,0.011187856792255672,no,0.010825633769515314
2458,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// PROPERTIES,no,undetermined,0,0,0,no,0.002769086247947564,no,0.0027472130994571136,no,0.0024584517939946096,no,0.0022565050745577166,no,0.002155903587709979
2459,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// PersistentIdentifierGenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.011654097931266767,no,0.012362946118485506,no,0.011729176290080516,no,0.011187856792255672,no,0.010825633769515314
2460,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// prepare and execute the insert,no,undetermined,0,0,0,no,0.0005235053253201714,no,0.0007310183195242489,no,0.0007313453729347984,no,0.0006657557381500391,no,0.0006428287192718372
2461,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// COLUMN(S),no,undetermined,0,0,0,no,0.002071145599192847,no,0.002357852389478916,no,0.002056857709792891,no,0.001811403990242998,no,0.0017147658170537207
2462,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if everything went ok, commit the transaction and close the obtained // connection handle...",no,undetermined,0,0,0,no,0.000818072824254833,no,0.0007518034600000316,no,0.0006927202532214551,no,0.0004786766437361693,no,0.0004419017469910244
2463,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// prepare and execute the insert,no,undetermined,0,0,0,no,0.0005235053253201714,no,0.0007310183195242489,no,0.0007313453729347984,no,0.0006657557381500391,no,0.0006428287192718372
2464,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//fetch the generated id in a separate query,no,undetermined,0,0,0,no,0.023217725263994096,no,0.012394867408455572,no,0.011719685414028196,no,0.011186325283870162,no,0.010839394813226762
2465,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we just hit the last position,no,undetermined,0,0,0,no,0.0012860747895763376,no,0.0011697639984368162,no,0.0010583328885017493,no,0.0009633209416224952,no,0.0008892047264995745
2466,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// scroll ahead,no,undetermined,0,0,0,no,0.011492413522064055,no,0.010933707136587242,no,0.010214454877971513,no,0.009637217589554553,no,0.009320128714970344
2467,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// scroll backward,no,undetermined,0,0,0,no,0.007708505480938306,no,0.012397697649177452,no,0.011735243803399926,no,0.011198421701034595,no,0.010832966592914764
2468,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// column index,no,undetermined,0,0,0,no,0.0012585076089463457,no,0.002352394625963485,no,0.002088981889408743,no,0.0018799649192810415,no,0.0017834494676613884
2469,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we have not yet hit the last result...,no,undetermined,0,0,0,no,0.010765671783045331,no,0.00998001049226718,no,0.010155245338009227,no,0.009289804611386262,no,0.008874632025063951
2470,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// State ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0003011093400535459,no,0.00025652366089902446,no,0.00021904173054622877,no,0.0001879597314525569,no,0.00017260358637449197
2471,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0032124005900349873,no,0.007886020004512469,no,0.007597317110747978,no,0.007344429384259274,no,0.008964624598903683
2472,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//column unique-key,no,undetermined,0,0,0,no,0.0009839442977656657,no,0.0010206085822503147,no,0.0008722881129574411,no,0.000773081277072911,no,0.0007207775414768439
2473,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// do this when all the properties are updateable since there is // a certain likelihood that the information will already be // snapshot-cached.,no,undetermined,0,0,0,no,0.012768253189744868,no,0.012398191282207158,no,0.011720941107931298,no,0.011192668746759067,no,0.010829676721035976
2474,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// State ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0003011093400535459,no,0.00025652366089902446,no,0.00021904173054622877,no,0.0001879597314525569,no,0.00017260358637449197
2475,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0032124005900349873,no,0.007886020004512469,no,0.007597317110747978,no,0.007344429384259274,no,0.008964624598903683
2476,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Caches,no,undetermined,0,0,0,no,0.005806240695523184,no,0.003076120070073097,no,0.0028343149678571756,no,0.0026385687034091343,no,0.002542722106988471
2477,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Generators:,no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
2478,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// cache region is defined by the root-class in the hierarchy...,no,undetermined,0,0,0,no,0.00536934586301031,no,0.005037069562441007,no,0.004537929044791094,no,0.004157936691324135,no,0.0039368067037698195
2479,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// PROPERTIES,no,undetermined,0,0,0,no,0.002769086247947564,no,0.0027472130994571136,no,0.0024584517939946096,no,0.0022565050745577166,no,0.002155903587709979
2480,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//JNDI + Serialization:,no,undetermined,0,0,0,no,0.006100719370723909,no,0.003508446153325056,no,0.0031329946327249103,no,0.002938340317943302,no,0.00278336171002799
2481,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//checking for named queries,no,undetermined,0,0,0,no,0.0098195711315943,no,0.012393910226210988,no,0.011713832375163349,no,0.011212532736153179,no,0.010835815761235011
2482,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//stats,no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
2483,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// EntityNotFoundDelegate,no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
2484,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Check named HQL queries,no,undetermined,0,0,0,no,0.0013846081265017076,no,0.0019249675788002242,no,0.0020480618764828888,no,0.0018067854651713285,no,0.001710231806570808
2485,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this will throw an error if there's something wrong.,no,undetermined,0,0,0,no,0.12915928225790954,no,0.09787615649221594,no,0.011734982082891882,no,0.011199359991559701,no,0.010842994836380966
2486,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//prevents this session from adding things to cache,no,undetermined,0,0,0,no,0.015766243540190548,no,0.012390965147095302,no,0.01173339884254017,no,0.011209661899737223,no,0.01082620426141241
2487,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// look for the instance by uuid,no,undetermined,0,0,0,no,0.0024182082728372674,no,0.00240840333722598,no,0.0021454538079747286,no,0.0019408531665574358,no,0.0019284717420977116
2488,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//for a dynamic-class,no,undetermined,0,0,0,no,0.0017088461849699356,no,0.0032614258817495784,no,0.0029365692271553926,no,0.0027859286653474434,no,0.002651454299271722
2489,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//test this entity to see if we must query it,no,undetermined,0,0,0,no,0.012566060305318079,no,0.01164041662845093,no,0.011555955572097399,no,0.011174802130556098,no,0.01063668639154525
2490,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//NOTE EARLY EXIT,no,undetermined,0,0,0,no,0.0021531618463119678,no,0.0020327342500316434,no,0.0018253944961150069,no,0.0016843563046879404,no,0.0015823869429030268
2491,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// for backward-compatability,no,undetermined,0,0,0,no,0.0021665385934419626,no,0.009237938332625342,no,0.008693928132649357,no,0.008219339830994335,no,0.00795393301740183
2492,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ignore this error for now,no,undetermined,0,0,0,no,0.010851666508809789,no,0.009943658354288978,no,0.008341241852177092,no,0.007742160159330914,no,0.007438064579063152
2493,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//must add to JNDI _after_ adding to HashMaps, because some JNDI servers use serialization",no,undetermined,0,0,0,no,0.034815583090573005,no,0.01237095185150082,no,0.011730838892689196,no,0.011187092928500285,no,0.01082869051135053
2494,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// look for existing collection as part of the persistence context,no,undetermined,0,0,0,no,0.008731522968117496,no,0.005768496495026068,no,0.004581896714958193,no,0.00452220440771225,no,0.004374700683922665
2495,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Make sure this is a defined parameter and check the incoming value type,no,undetermined,0,0,0,no,0.015199672075016168,no,0.01239594944029837,no,0.011740765026631355,no,0.011185862384016955,no,0.010848931195866067
2496,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// for each of the defined parameters, make sure its value // has been set",no,undetermined,0,0,0,no,0.0014693078695592065,no,0.001214018617596714,no,0.0010871449420500896,no,0.0009634839856231953,no,0.000890186744220649
2497,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//we never need to apply locks to the SQL,no,undetermined,0,0,0,no,0.009725296196012256,no,0.008613973543470235,no,0.007803506833147449,no,0.007366273085833012,no,0.00694881225956119
2498,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// deletes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0022463834562699843,no,0.0017799876269980021,no,0.0020115932113202867,no,0.0018453047588348596,no,0.001738606202405019
2499,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// updates ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0018812768146358677,no,0.0013117665462481346,no,0.0012027901318104875,no,0.0010400615371765228,no,0.0009738985546787626
2500,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// cache the actual id of the object, not the value of the // property-ref, which might not be initialized",no,undetermined,0,0,0,no,0.1000697160124973,no,0.05423616082166647,no,0.011725435497257993,no,0.011181860979065355,no,0.010819399895668698
2501,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// loading ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.002276788603248896,no,0.002627671393081527,no,0.002389686488842816,no,0.0015897734340961334,no,0.0015163856126175
2502,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// select-range is terminated by declaration of ""from""",no,undetermined,0,0,0,no,0.007707276242294296,no,0.007970519065640549,no,0.007351113166178839,no,0.00676888340323083,no,0.006386821798504606
2503,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// for an any,no,undetermined,0,0,0,no,0.005805623301435061,no,0.0036594435573666833,no,0.0034623707422318318,no,0.0032416884828435047,no,0.003040922791048285
2504,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// insertable simply because that is the user did not specify // anything; just override it,no,undetermined,0,0,0,no,0.0036395035716778107,no,0.004163810073330781,no,0.004518403685939049,no,0.00406657415841386,no,0.0038826727390378814
2505,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// properties generated on update can never be updateable...,no,undetermined,0,0,0,no,0.012279333939860618,no,0.01131442266717598,no,0.010445482400287425,no,0.009889070423012831,no,0.009540467203908646
2506,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// updateable only because the user did not specify  // anything; just override it,no,undetermined,0,0,0,no,0.001520575082560401,no,0.001750724815266912,no,0.0017514265175646228,no,0.0016088379553431094,no,0.0014790175101203002
2507,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// the user specifically supplied update=""true"", // which constitutes an illegal combo",no,undetermined,0,0,0,no,0.0024583648222900557,no,0.0021030910818580387,no,0.0017067890619066836,no,0.0015037094489029265,no,0.0014212054330671397
2508,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ROLENAME,no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
2509,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//final boolean forceCacheRefresh,",no,undetermined,0,0,0,no,4.831321800315259e-05,no,0.00011866707450128473,no,0.00010480601569777407,no,9.045731615516229e-05,no,8.140465500433203e-05
2510,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// first, try to load it from the temp PC associated to this SS",no,undetermined,0,0,0,no,0.0033301943400336517,no,0.003832225399477842,no,0.00365280870322309,no,0.0032149999804649922,no,0.003032266028787279
2511,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// otherwise immediately materialize it,no,undetermined,0,0,0,no,0.0030394826048771063,no,0.0028214812259088518,no,0.0018274711719781472,no,0.001572003945276589,no,0.0015032899986021566
2512,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/////////////////////////////////////////////////////////////////////////////////////////////////////,no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
2513,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// no auto-flushing to support in stateless session,no,undetermined,0,0,0,no,0.001912734192781399,no,0.0027765015745586214,no,0.002576976890787287,no,0.0024435789872478807,no,0.0023484792694400958
2514,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// FETCH STRATEGY,no,undetermined,0,0,0,no,0.0038194490498765295,no,0.0124021285611792,no,0.011723495661634468,no,0.011188041594571655,no,0.010839141784698466
2515,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// TABLE,no,undetermined,0,0,0,no,0.0005187246094518545,no,0.0007843422095474706,no,0.000997988720887678,no,0.0009177718028567297,no,0.0008291817861361002
2516,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//after setting values to object, entityMode",no,undetermined,0,0,0,no,0.00034511079868502993,no,0.0003730555658343078,no,0.00030902227633407286,no,0.00027587659605241114,no,0.0002572758261295727
2517,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// SORT,no,undetermined,0,0,0,no,0.002685494796178122,no,0.0027888165781345823,no,0.0026139983247433335,no,0.0024109477566378063,no,0.00229055093725925
2518,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// do a check,no,undetermined,0,0,0,no,0.0035545922926994173,no,0.005418489563515824,no,0.005573758752052223,no,0.005198495617277262,no,0.004983518198969781
2519,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// saveOrUpdate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.003041302687396098,no,0.003448047261273936,no,0.003158255469903013,no,0.0028388711784548366,no,0.0026753604335622897
2520,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// update() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0010962810091802936,no,0.0012073235519163518,no,0.0010619782495614155,no,0.0009351943672306722,no,0.0008766150665206211
2521,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// lock() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0016234730565999644,no,0.0020296571539508215,no,0.00198583110180867,no,0.0017941896852200318,no,0.0016564561684583852
2522,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// persist() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.003041302687396098,no,0.003448047261273936,no,0.003158255469903013,no,0.0028388711784548366,no,0.0026753604335622897
2523,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// persistOnFlush() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.003041302687396098,no,0.003448047261273936,no,0.003158255469903013,no,0.0028388711784548366,no,0.0026753604335622897
2524,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// delete() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0021436919536311503,no,0.0018035265117801256,no,0.0016484064753899048,no,0.00146068704799918,no,0.0013665088713994955
2525,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// load()/get() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0018506711978306086,no,0.0021031366201234355,no,0.0020061934155216543,no,0.0017958178639280846,no,0.0016827207199365006
2526,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// refresh() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0031933740591751116,no,0.0036382551408661464,no,0.00331827111358411,no,0.003057991378126897,no,0.0028557419073029712
2527,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// CUSTOM SQL,no,undetermined,0,0,0,no,0.0014378860619458742,no,0.001103956897338759,no,0.000977419833098711,no,0.0008804344508510066,no,0.0008249138854628948
2528,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// unsorted, natural, comparator.class.name",no,undetermined,0,0,0,no,0.014856698466056235,no,0.012392263298334249,no,0.011737041759936846,no,0.011199013628773277,no,0.01083286384381259
2529,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// replicate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.003041302687396098,no,0.003448047261273936,no,0.003158255469903013,no,0.0028388711784548366,no,0.0026753604335622897
2530,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// set up second pass,no,undetermined,0,0,0,no,0.0010037982175678361,no,0.001587451170873876,no,0.0019109962539136604,no,0.0017625801515261227,no,0.0016590532559707467
2531,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// do not auto-flush while outside a transaction,no,undetermined,0,0,0,no,0.022442288813340695,no,0.012091022889802027,no,0.010193896993504332,no,0.009185963836019486,no,0.008813132267145921
2532,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this is an internal error of some sort...,no,undetermined,0,0,0,no,0.16593124713836654,no,0.14671951644242368,no,0.14417048645080527,no,0.14655543490337355,no,0.14678974955305135
2533,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//do not return a proxy! //(this option indicates we are initializing a proxy),no,undetermined,0,0,0,no,0.01599592034683574,no,0.012382593132685575,no,0.01173729389599104,no,0.011202533807201247,no,0.01084815329172762
2534,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ignore,no,undetermined,0,0,0,no,0.00014335230378915544,no,0.00013958636484248836,no,0.00012005421643621465,no,0.00010252236131852231,no,9.386482826389979e-05
2535,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// for an any // we will have to use reflection,no,undetermined,0,0,0,no,0.04467902341193999,no,0.012383257848453231,no,0.011728509445583287,no,0.011190595629836198,no,0.010853281942173693
2536,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//only collections belonging to deleted entities are allowed to be dereferenced in the case of orphan delete,no,undetermined,0,0,0,no,0.007853258580764083,no,0.007266210226798514,no,0.007432816843733292,no,0.0070402605016902835,no,0.006690675711394376
2537,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if it was previously unreferenced, we need to flush in order to // get its state into the database in order to execute query",no,undetermined,0,0,0,no,0.004926650352541382,no,0.004657355366486237,no,0.0033338469528911294,no,0.0029500859713426576,no,0.0027096737557668216
2538,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// not for internal use:,no,undetermined,0,0,0,no,0.004197478281196626,no,0.005183844637632431,no,0.004782194851457893,no,0.00446427708587594,no,0.0042606708937816045
2539,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// otherwise, we only need to flush if there are in-memory changes // to the queried tables",no,undetermined,0,0,0,no,0.040158290747916076,no,0.012376483823279756,no,0.01172573595901872,no,0.011209590569897244,no,0.010825389196739204
2540,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// aload_0,no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
2541,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if it is initialized, see if the underlying //instance is contained, since we need to  //account for the fact that it might have been //evicted",no,undetermined,0,0,0,no,0.019858673552242027,no,0.012384812804145747,no,0.01175325214315961,no,0.011195307980523582,no,0.010830784574614089
2542,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//stops flush being called multiple times if this method is recursively called,no,undetermined,0,0,0,no,0.025286558196446575,no,0.011010795889160567,no,0.007801123199684817,no,0.007062904839100952,no,0.006923467844488369
2543,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// decode row selection...,no,undetermined,0,0,0,no,0.0011324728251388505,no,0.0013174068845721687,no,0.0012038291929776042,no,0.001084936834245681,no,0.0010012002691553122
2544,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// basically just an adapted copy of find(CriteriaImpl),no,undetermined,0,0,0,no,0.023341358216250916,no,0.012384359899042758,no,0.011718481246400953,no,0.0111929232689862,no,0.010856292884288543
2545,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ignore this error for now,no,undetermined,0,0,0,no,0.010851666508809789,no,0.009943658354288978,no,0.008341241852177092,no,0.007742160159330914,no,0.007438064579063152
2546,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we need to writeObject() on this since interceptor is user defined,no,undetermined,0,0,0,no,0.01888885839545135,no,0.012367397745501272,no,0.0117446069464571,no,0.011209499760481955,no,0.010839879630457272
2547,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the old-time stand-by...,no,undetermined,0,0,0,no,0.0026130504842582776,no,0.0024669187352872463,no,0.002305404217519902,no,0.002075910017791971,no,0.0019510772475031845
2548,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// parameter bind values...,no,undetermined,0,0,0,no,0.0005126943664011225,no,0.0005624255280488818,no,0.0005026716082698941,no,0.0004521986368444045,no,0.0004238826743220407
2549,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Parameter handling code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.029158216147950295,no,0.012379007325892501,no,0.011726065879597063,no,0.011191600500782231,no,0.010824434453016781
2550,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Execution methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.002831498977746507,no,0.0032601543852880076,no,0.002980281697081353,no,0.002772753570009709,no,0.0026034058810041542
2551,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//NOTE SPECIAL CASE: // one-to-one constrained=false cannot be proxied, // so default to join and non-lazy",no,undetermined,0,0,0,no,0.0021668692692173096,no,0.0014966622788505726,no,0.0013263684202435503,no,0.0011885254075334735,no,0.0011346236377936985
2552,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// use old (HB 2.1) defaults if outer-join is specified,no,undetermined,0,0,0,no,0.0014032787223750393,no,0.0018052527852559985,no,0.001679569400857885,no,0.0015307316530629926,no,0.001380678035268974
2553,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we have a CGLIB enhanced entity,no,undetermined,0,0,0,no,0.006123219192544634,no,0.004324587257843905,no,0.006195678676593149,no,0.006462762347463002,no,0.0062684519998081395
2554,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we have a CGLIB enhanced entity,no,undetermined,0,0,0,no,0.006123219192544634,no,0.004324587257843905,no,0.006195678676593149,no,0.006462762347463002,no,0.0062684519998081395
2555,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we have a Javassist enhanced entity,no,undetermined,0,0,0,no,0.006123219192544634,no,0.004324587257843905,no,0.006195678676593149,no,0.006462762347463002,no,0.0062684519998081395
2556,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we have a Javassist enhanced entity,no,undetermined,0,0,0,no,0.006123219192544634,no,0.004324587257843905,no,0.006195678676593149,no,0.006462762347463002,no,0.0062684519998081395
2557,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// FieldInterceptor impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.006140888174090093,no,0.004901065980396148,no,0.004578600266881531,no,0.004352388675445458,no,0.006026218188316145
2558,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// subclass accesses ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.004619999585335304,no,0.0048418737050289345,no,0.004507031772642682,no,0.004225134880730133,no,0.004077712627076295
2559,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// FieldHandler impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.006140888174090093,no,0.004901065980396148,no,0.004578600266881531,no,0.004352388675445458,no,0.006026218188316145
2560,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// should *not* need to grow beyond the size of the total number of columns in the rs,no,undetermined,0,0,0,no,0.03944307568127176,no,0.012410797765104214,no,0.011721403939785909,no,0.011205572731205633,no,0.010825726336032694
2561,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// should probably no-op commit/rollback here, at least in JTA scenarios",no,undetermined,0,0,0,no,0.02697159904976035,no,0.01239689627057913,no,0.011751366994097368,no,0.011199012306625152,no,0.010843592089555258
2562,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Various Expectation instances ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.007460668373782063,no,0.006616659413154644,no,0.006254689454012968,no,0.005204685739314511,no,0.004977740962036814
2563,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// explicitly perform no checking...,no,undetermined,0,0,0,no,0.021890704676469516,no,0.012405230568732406,no,0.011728913240585826,no,0.01119661113572988,no,0.010835755043497567
2564,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// used from testsuite,no,undetermined,0,0,0,no,0.028248185359634203,no,0.012385844701888573,no,0.011752619991968638,no,0.011202289332170554,no,0.01085214588770306
2565,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// assume we are in an auto-commit state,no,undetermined,0,0,0,no,0.001833719591595923,no,0.0017328020226988258,no,0.001563550696876561,no,0.001435922927184145,no,0.001363996601273858
2566,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*package*/,no,undetermined,0,0,0,no,0.0034329566677213947,no,0.003569072397892384,no,0.0033560416804782572,no,0.003095855193458484,no,0.0030481677094872563
2567,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// GENERATOR,no,undetermined,0,0,0,no,0.027413268783346233,no,0.012387293070149154,no,0.011758395207223346,no,0.011185417917843613,no,0.010840900770494329
2568,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// register synch; stats.connect(),no,undetermined,0,0,0,no,0.0010225697683113107,no,0.0012022064058170919,no,0.0010978619954194924,no,0.0010216487825012073,no,0.00096582550410115
2569,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// calls executeBatch(),no,undetermined,0,0,0,no,0.02401387892497435,no,0.0124075053837716,no,0.011753224952718917,no,0.011195953045392133,no,0.010814576933439478
2570,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//no big deal,no,undetermined,0,0,0,no,0.0020523474076116475,no,0.0029769751777863084,no,0.0027024853978863286,no,0.002513226293679232,no,0.002394518570553346
2571,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// no big deal,no,undetermined,0,0,0,no,0.0020523474076116475,no,0.0029769751777863084,no,0.0027024853978863286,no,0.002513226293679232,no,0.002394518570553346
2572,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// no big deal,no,undetermined,0,0,0,no,0.0020523474076116475,no,0.0029769751777863084,no,0.0027024853978863286,no,0.002513226293679232,no,0.002394518570553346
2573,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// see explanation above...,no,undetermined,0,0,0,no,0.0053683507917320185,no,0.0077540544584692,no,0.007270207548927591,no,0.0068655129322319165,no,0.0065776378079560075
2574,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If we are in the process of releasing, no sense // checking for aggressive-release possibility.",no,undetermined,0,0,0,no,0.023873199082392698,no,0.012410380242980443,no,0.011750399638490576,no,0.011193936203726183,no,0.010845163099005666
2575,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// EARLY EXIT!!!!,no,undetermined,0,0,0,no,0.0005905483870258867,no,0.0006314912289696719,no,0.0005659715806632397,no,0.0005143622300302791,no,0.0004802970847279881
2576,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// ResultSet impl (""overridden"") ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",no,undetermined,0,0,0,no,0.0012139022475687131,no,0.001112515833108961,no,0.0010077817184304862,no,0.0009288827746029932,no,0.001026882774614786
2577,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ResultSet impl (delegated) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0013886799195493996,no,0.0012446058516160246,no,0.0011162793811593213,no,0.0010114068451693768,no,0.0011336078321560134
2578,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ID UNSAVED-VALUE,no,undetermined,0,0,0,no,0.0036575668196307167,no,0.0022593795492580923,no,0.0019430502516552656,no,0.0017123831230063495,no,0.0016369865528974561
2579,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// VERSION UNSAVED-VALUE,no,undetermined,0,0,0,no,0.0019231555338533992,no,0.0014018301537101782,no,0.0012151259306118225,no,0.0010668023024064108,no,0.001004232806163147
2580,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// not necessarily a *unique* property reference,no,undetermined,0,0,0,no,0.008823297531940855,no,0.007644354207496213,no,0.006528666533687927,no,0.006063781111842312,no,0.005189182690141603
2581,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Bind the where,no,undetermined,0,0,0,no,0.0011277321913991027,no,0.001076149759569865,no,0.0009681653139635553,no,0.0008432941426168169,no,0.000791597077399373
2582,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// refer to comment in StatefulPersistenceContext.addCollection(),no,undetermined,0,0,0,no,0.0017065916221815226,no,0.0028480831080869846,no,0.002718091407121274,no,0.0025187435317816447,no,0.0023916773406967022
2583,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ConnectionManager.Callback implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0033484317617498757,no,0.003081251583546806,no,0.0028283977254024467,no,0.0027194918521322854,no,0.002542287325820014
2584,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Note : success = false, because we don't know the outcome of the transaction",no,undetermined,0,0,0,no,0.01740255922702927,no,0.012393965393002311,no,0.011754700987164638,no,0.011190239826486127,no,0.010835389341581368
2585,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Bind the order-by,no,undetermined,0,0,0,no,0.0003105105861024406,no,0.00029860701274220047,no,0.00024559631188468084,no,0.00021455197166293297,no,0.00019208867327744154
2586,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// we already have a callback registered; either a local // (org.hibernate.Transaction) transaction has accepted // callback responsibilities, or we have previously // registered a transaction synch.",no,undetermined,0,0,0,no,0.0018941929005738213,no,0.0017890704935827734,no,0.0016827003429719445,no,0.0013857092233019678,no,0.001264693524829373
2587,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Bind the filters,no,undetermined,0,0,0,no,0.0010112685308630292,no,0.0011868097316888111,no,0.001140661107912568,no,0.001020925726738074,no,0.0009529585986857379
2588,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// overriding inherited meta attribute. HBX-621 & HBX-793			,no,undetermined,0,0,0,no,0.0025375984470231918,no,0.0028208427431096555,no,0.002563036701369903,no,0.0023677139394782964,no,0.0022309553281628356
2589,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// first, iterate over all elements capable of defining an extends attribute // collecting all found extends references if they cannot be resolved // against the already processed mappings.",no,undetermined,0,0,0,no,0.0016433310485146682,no,0.0016996130919354924,no,0.0017034505855736011,no,0.0015554418804933706,no,0.0014544002927353505
2590,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//+ ""_"" + referencedColumnName not used for backward compatibility",no,undetermined,0,0,0,no,0.007702811379867821,no,0.012407413890751812,no,0.011749699317290235,no,0.011200180503824935,no,0.010832716845917122
2591,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//SessionFactory name:,no,undetermined,0,0,0,no,0.0023682796287576055,no,0.0026978955527680953,no,0.002399221339203305,no,0.0022109738849312474,no,0.002113517171814138
2592,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//JDBC and connection settings:,no,undetermined,0,0,0,no,0.001214553529734516,no,0.0022951595826336047,no,0.001978364086061405,no,0.0017962922148842136,no,0.0016985736640925547
2593,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//JDBC and connection settings:,no,undetermined,0,0,0,no,0.001214553529734516,no,0.0022951595826336047,no,0.001978364086061405,no,0.0017962922148842136,no,0.0016985736640925547
2594,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Interrogate JDBC metadata,no,undetermined,0,0,0,no,0.001377913340671514,no,0.0009347772027301288,no,0.0007831423156596134,no,0.0007145249737889771,no,0.0006713471554890187
2595,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// user supplied JDBC connections,no,undetermined,0,0,0,no,0.0005208100025290897,no,0.0006559980382610545,no,0.000548970896069782,no,0.0005010160853446456,no,0.0004593358756551146
2596,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Transaction settings:,no,undetermined,0,0,0,no,0.000534158054561431,no,0.0005985059141123851,no,0.0005122597906662478,no,0.00040995867664880684,no,0.0003784516579196173
2597,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//SQL Generation settings:,no,undetermined,0,0,0,no,0.0004165472434483977,no,0.0006385994756541194,no,0.0005626833883387388,no,0.0005100973370541214,no,0.0004801104154511431
2598,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Query parser settings:,no,undetermined,0,0,0,no,0.0013876512122395234,no,0.00263530645555356,no,0.00224374853682189,no,0.001948157471761039,no,0.0018462142814242794
2599,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Second-level / query cache:,no,undetermined,0,0,0,no,0.00925861943864613,no,0.012007038376091211,no,0.011566447066683706,no,0.010022647137008303,no,0.009617449837168853
2600,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//SQL Exception converter:,no,undetermined,0,0,0,no,0.0028637835036934498,no,0.003959678349636043,no,0.003506075669383659,no,0.0032879095297025014,no,0.0031640704358045332
2601,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Statistics and logging:,no,undetermined,0,0,0,no,0.0024002997970425034,no,0.002013656592516569,no,0.001824593265079565,no,0.0016186250456331193,no,0.001523167091180915
2602,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		settings.setShowSqlEnabled(showSql);,no,undetermined,0,0,0,no,8.544046648788744e-06,no,1.570024540151889e-05,no,1.3057810880570778e-05,no,1.0966073655851722e-05,no,9.689475711694234e-06
2603,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//postInitialize() will be called after initialization,no,undetermined,0,0,0,no,0.0013007829101580712,no,0.0015786530709208002,no,0.001195449340696759,no,0.001081479359631851,no,0.0011408592796840927
2604,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		settings.setFormatSqlEnabled(formatSql);,no,undetermined,0,0,0,no,8.544046648788744e-06,no,1.570024540151889e-05,no,1.3057810880570778e-05,no,1.0966073655851722e-05,no,9.689475711694234e-06
2605,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// cannot handle single quotes,no,undetermined,0,0,0,no,0.0035861013252550798,no,0.004657062238107724,no,0.004603166479366953,no,0.004227876616900297,no,0.003952824034922517
2606,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Schema export:,no,undetermined,0,0,0,no,0.004223745147724458,no,0.006167210413144372,no,0.005752920405665274,no,0.005313051253925707,no,0.005104665023091648
2607,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// todo : for 4.0 //	private static final Logger log = LoggerFactory.getLogger( SQLStatementLogger.class ); // this is the legacy logging 'category'...,no,undetermined,0,0,0,yes,0.7862732329147117,yes,0.764772368270423,yes,0.7655651821035042,yes,0.7758267024665769,yes,0.7825629177577436
2608,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//if dotted and not load-collection nor return-join //regular property,no,undetermined,0,0,0,no,0.007474285388803097,no,0.004891112528277387,no,0.003840960782445157,no,0.004127366981373886,no,0.0038014199404137494
2609,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// don't even bother trying to read further,no,undetermined,0,0,0,no,0.008409481106891574,no,0.007304719639092716,no,0.006784978545489833,no,0.006350979077739065,no,0.006031245120035428
2610,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	private ComponentTuplizerFactory componentTuplizerFactory; todo : HHH-3517 and HHH-1907 //	private BytecodeProvider bytecodeProvider;,no,undetermined,0,0,0,yes,0.917044476866541,no,0.0035475378375793842,no,0.00339218528216915,no,0.0031656081207043045,no,0.003015461568658017
2611,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// public getters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0033840526141061793,no,0.004189913809511502,no,0.0039215389444124,no,0.0036817294185234107,no,0.0035151861878047154
2612,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// generated properties can *never* be insertable...,no,undetermined,0,0,0,no,0.014748391808400495,no,0.012375542436870189,no,0.011721673085037425,no,0.011195617630811826,no,0.010834114490827258
2613,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	public ComponentTuplizerFactory getComponentTuplizerFactory() { //		return componentTuplizerFactory; //	},no,undetermined,0,0,0,no,0.0035678582559717804,no,0.0034211268758833654,no,0.0032313355406007535,no,0.003001633999782208,no,0.002848229696073279
2614,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// package protected setters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.011307428271194705,no,0.011213198132154125,no,0.010635234214065085,no,0.0100623703583891,no,0.009741668284857983
2615,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	public BytecodeProvider getBytecodeProvider() { //		return bytecodeProvider; //	} // //	void setBytecodeProvider(BytecodeProvider bytecodeProvider) { //		this.bytecodeProvider = bytecodeProvider; //	},no,undetermined,0,0,0,no,0.0116751053191146,no,0.012400112915995373,no,0.011760868443178857,no,0.01120274590475749,no,0.01084286768489066
2616,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// using local since the inheritedMetas at this point is not the correct map since it is always the empty map,no,undetermined,0,0,0,no,0.008212858118406729,no,0.008249146026680752,no,0.00776517771895669,no,0.006921674522669999,no,0.006931888108532001
2617,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	protected List extendsQueue;,no,undetermined,0,0,0,no,0.006589643250574364,no,0.008337392315863936,no,0.007697320438586603,no,0.007317368108077049,no,0.007011598994248783
2618,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		extendsQueue = new ArrayList();,no,undetermined,0,0,0,no,0.002316789348913764,no,0.0028968304279744076,no,0.002806382936474701,no,0.002585499804661764,no,0.00247530136580926
2619,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		componentTuplizerFactory = new ComponentTuplizerFactory();,no,undetermined,0,0,0,no,0.0007331217137823508,no,0.000981836705468619,no,0.0009672985146750711,no,0.0008501913685675985,no,0.0007968272559977449
2620,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if doc is null, then for whatever reason, the cached file cannot be used...",no,undetermined,0,0,0,no,0.0015679686224915911,no,0.0031367578057210016,no,0.0030201347030992328,no,0.0028161753562756645,no,0.0026786487679932706
2621,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// position cursor to the last row,no,undetermined,0,0,0,no,0.0004513553688359942,no,0.0005413567878256131,no,0.00048455802032744286,no,0.00042882836547867767,no,0.00039040438398514615
2622,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// sequentially read the result set in reverse until we recognize // a change in the key value.  At that point, we are pointed at // the last physical sequential row for the logical row in which // we are interested in processing",no,undetermined,0,0,0,no,0.0013954448905958556,no,0.0013327334539190276,no,0.001166079948933402,no,0.0009803043654622967,no,0.0009195890794056024
2623,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Read backwards until we read past the first physical sequential // row with the key we are interested in loading,no,undetermined,0,0,0,no,0.0005006099052934192,no,0.0005534473461685749,no,0.00047603605709684266,no,0.0003749929842842939,no,0.00034155132408885156
2624,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Finally, read ahead one row to position result set cursor // at the first physical row we are interested in loading",no,undetermined,0,0,0,no,0.0007172820385750675,no,0.0007309685041802489,no,0.0006353943912818645,no,0.0005044420418446271,no,0.00047995647266578723
2625,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This method may be called many times!!,no,undetermined,0,0,0,no,0.12517566335751992,no,0.07587844370460399,no,0.011727498428684795,no,0.011181585321700398,no,0.010818074764199865
2626,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// force the proxy to resolve itself,no,undetermined,0,0,0,no,0.006902877051280222,no,0.0045041573158640415,no,0.0040673424906605025,no,0.003665703375219445,no,0.0034643300910995774
2627,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this is equivalent to the old behavior...,no,undetermined,0,0,0,no,0.013488956438860828,no,0.012380841421218878,no,0.011743495466832165,no,0.011196872558556012,no,0.010848663290469959
2628,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if null, owner will be retrieved from session",no,undetermined,0,0,0,no,0.0019478366588544659,no,0.0024065095673832036,no,0.0022096684354444653,no,0.00206652922001552,no,0.0019245825635469144
2629,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//			Iterator iterator = extendsQueue.iterator();,no,undetermined,0,0,0,no,0.0016599232115839027,no,0.0010744206249247857,no,0.0008899321722949473,no,0.0008186444339279642,no,0.0007462371671949687
2630,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		Iterator iter = extendsQueue.iterator();,no,undetermined,0,0,0,no,0.0017364594504782579,no,0.001120873864629645,no,0.0009546633475560709,no,0.0008865434201139024,no,0.0008076353399467352
2631,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// found,no,undetermined,0,0,0,no,0.0008857672667190108,no,0.0008650989212136806,no,0.0007792036099283254,no,0.0006971833635781544,no,0.0006484560531167713
2632,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// found,no,undetermined,0,0,0,no,0.0008857672667190108,no,0.0008650989212136806,no,0.0007792036099283254,no,0.0006971833635781544,no,0.0006484560531167713
2633,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		settings.setComponentTuplizerFactory( this.getComponentTuplizerFactory() );,no,undetermined,0,0,0,no,0.000341002279934591,no,0.0006231232599722529,no,0.0005059006387149485,no,0.000490430797200771,no,0.0004562584826292721
2634,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//final String queryString, ",no,undetermined,0,0,0,no,0.0013815271168579335,no,0.0021015986760147013,no,0.0019167031605195994,no,0.0017675183139209687,no,0.0016674587676923749
2635,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	private final List extendsQueue;,no,undetermined,0,0,0,no,0.001833921786049015,no,0.001384827797214863,no,0.00126507613686998,no,0.0011645608713896484,no,0.001083878284436442
2636,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//<String, String>",no,undetermined,0,0,0,no,0.003436374555191641,no,0.0032975115234361225,no,0.003080286446453743,no,0.002876729413996237,no,0.0027554602814707815
2637,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//<String, String>",no,undetermined,0,0,0,no,0.003436374555191641,no,0.0032975115234361225,no,0.003080286446453743,no,0.002876729413996237,no,0.0027554602814707815
2638,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// invokeinterface,no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
2639,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//end of array, start filling again from start",no,undetermined,0,0,0,no,0.002432707784806746,no,0.0019234140740254722,no,0.0018199961995299593,no,0.0016297701530327193,no,0.0015079226442941424
2640,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Set USE_REFLECTION_OPTIMIZER to false to fix HHH-227,no,undetermined,0,0,0,no,0.19785213616229747,no,0.1838243811239836,no,0.18109831335085222,no,0.18264186981356414,no,0.18317316671231282
2641,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//orphan delete not supported for EntityMode.DOM4J,no,undetermined,0,0,0,no,0.013048105421355913,no,0.010289179557588873,no,0.009509701009421428,no,0.009032725752371622,no,0.008748469208284149
2642,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//element = XMLHelper.generateDom4jElement( persister.getNodeName() );,no,undetermined,0,0,0,no,0.009215510392930608,no,0.006356001753321704,no,0.006276757570396062,no,0.005488754384870831,no,0.005318073205915816
2643,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// intentionally empty,no,undetermined,0,0,0,no,0.0037763070001841895,no,0.004249508276831321,no,0.003857183339794085,no,0.003525943555307979,no,0.0033151150666807525
2644,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//we can reuse it for each row,no,undetermined,0,0,0,no,0.00139329676381994,no,0.00311067997855273,no,0.002813533937420731,no,0.0024646757931769923,no,0.0023084804537186194
2645,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//orphan delete not supported for EntityMode.DOM4J,no,undetermined,0,0,0,no,0.013048105421355913,no,0.010289179557588873,no,0.009509701009421428,no,0.009032725752371622,no,0.008748469208284149
2646,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//can't reuse in this case,no,undetermined,0,0,0,no,0.019881872997361744,no,0.012374590797176706,no,0.011749705559569156,no,0.011190718335191205,no,0.010827291471530082
2647,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//element = XMLHelper.generateDom4jElement( persister.getNodeName() );,no,undetermined,0,0,0,no,0.009215510392930608,no,0.006356001753321704,no,0.006276757570396062,no,0.005488754384870831,no,0.005318073205915816
2648,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//needed for SOAP libraries, etc",no,undetermined,0,0,0,no,0.005351972121649553,no,0.007194484158379802,no,0.006825461425594127,no,0.006473513162470737,no,0.0061400581725813705
2649,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//EARLY EXIT!,no,undetermined,0,0,0,no,0.0005905483870258867,no,0.0006314912289696719,no,0.0005659715806632397,no,0.0005143622300302791,no,0.0004802970847279881
2650,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// any earlier proxy takes precedence,no,undetermined,0,0,0,no,0.001957750245339741,no,0.0011719415212198873,no,0.0011164072274692355,no,0.0010186433444236925,no,0.0009470863557509235
2651,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// First we need to suspend any current JTA transaction and obtain // a JDBC connection,no,undetermined,0,0,0,no,0.00750686919409666,no,0.008321637903972513,no,0.007329048526886466,no,0.006420656475155421,no,0.0060587435906587234
2652,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//getResultList(results);,no,undetermined,0,0,0,no,0.0028171757440152703,no,0.005144406839955848,no,0.004708203692887382,no,0.0045069093515443335,no,0.004304851249145563
2653,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if we only returned one entity, query by key is more efficient",no,undetermined,0,0,0,no,0.018820747096911505,no,0.012411374223318384,no,0.0117474991086428,no,0.011199884039775955,no,0.010839639869728478
2654,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the element has been removed from the set,no,undetermined,0,0,0,no,0.002270682469434765,no,0.0018914505506680995,no,0.0017997031810969629,no,0.001618947093405203,no,0.0015754367347950732
2655,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the element has changed,no,undetermined,0,0,0,no,0.0005379352370652869,no,0.0005160432256295155,no,0.000446513025572583,no,0.0003937650846315717,no,0.0003807347767191519
2656,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0049067910499512495,no,0.004744873634309048,no,0.0046054100539297685,no,0.004235492110777513,no,0.004042746457915209
2657,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Careful: these methods do not initialize the collection.,no,undetermined,0,0,0,no,0.016082922616336096,no,0.012322406414904088,no,0.008861602127762583,no,0.009273768251856518,no,0.008915177552310865
2658,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//needed so that we remove this collection from the second-level cache,no,undetermined,0,0,0,no,0.025006650038435933,no,0.012365021314141545,no,0.01171465350378339,no,0.011202122843036167,no,0.010821661988847407
2659,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// override on some subclasses,no,undetermined,0,0,0,no,0.0026340292614860836,no,0.0035131947592594117,no,0.003428140299017429,no,0.0031749902861301733,no,0.002977340463369413
2660,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//override on some subclasses,no,undetermined,0,0,0,no,0.0026340292614860836,no,0.0035131947592594117,no,0.003428140299017429,no,0.0031749902861301733,no,0.002977340463369413
2661,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//do this bit after setting initialized to true or it will recurse,no,undetermined,0,0,0,no,0.061064743821515,no,0.01239755592857152,no,0.01174334395174688,no,0.011178507133944313,no,0.010824776661805457
2662,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// create the collection holding the Orphans,no,undetermined,0,0,0,no,0.0016139067197721972,no,0.0016094362953250532,no,0.0011220741862008365,no,0.0012016349898498029,no,0.001127616891599247
2663,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// collect EntityIdentifier(s) of the *current* elements - add them into a HashSet for fast access,no,undetermined,0,0,0,no,0.011921409079934457,no,0.010836706625148,no,0.01033240757395747,no,0.009876725892429442,no,0.009323119015922764
2664,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// iterate over the *old* list,no,undetermined,0,0,0,no,0.0018126230353867766,no,0.0019174216734906557,no,0.001756543049599034,no,0.0016177481857262484,no,0.0015090294800638648
2665,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// intentionally empty,no,undetermined,0,0,0,no,0.0037763070001841895,no,0.004249508276831321,no,0.003857183339794085,no,0.003525943555307979,no,0.0033151150666807525
2666,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*(array==null) ? tempList.get(i) :*/,no,undetermined,0,0,0,no,0.0005903680537082376,no,0.0005773053202679353,no,0.0005609128765685747,no,0.0004996063997801404,no,0.0004531339166961669
2667,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// a many-to-many; // decrement currentDepth here to allow join across the association table // without exceeding MAX_FETCH_DEPTH (i.e. the ""currentDepth - 1"" bit)",no,undetermined,0,0,0,no,0.061467469768338195,no,0.012375746826216104,no,0.011740045202609425,no,0.011195741717491612,no,0.01081844644576197
2668,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//write(); -- doesn't,no,undetermined,0,0,0,no,0.0008212787079299006,no,0.000935091121491326,no,0.0009092163863029703,no,0.0008092646144937233,no,0.0007615127460421946
2669,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//write(); -- doesn't,no,undetermined,0,0,0,no,0.0008212787079299006,no,0.000935091121491326,no,0.0009092163863029703,no,0.0008092646144937233,no,0.0007615127460421946
2670,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this is the regression style determination which matches the logic of the classic translator,no,undetermined,0,0,0,no,0.0020804428530608217,no,0.0023529022620173428,no,0.002067841308318505,no,0.0019095133820883823,no,0.0018182728719228411
2671,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// a collection loaded in the current session // can not possibly be the collection belonging // to the entity passed to update(),no,undetermined,0,0,0,no,0.005226251334378253,no,0.005355674535220963,no,0.0038683628065671453,no,0.0045539053753446855,no,0.004335613321710228
2672,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// handle empty collection,no,undetermined,0,0,0,no,0.018474206950398562,no,0.01241318450549522,no,0.005957556984495442,no,0.006930756395169604,no,0.006589961300785422
2673,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//handle empty collections,no,undetermined,0,0,0,no,0.010551943645513534,no,0.005629809597521482,no,0.005338329487445203,no,0.004761911758775184,no,0.004552619495619802
2674,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// else this is not a collection initializer (and empty collections will // be detected by looking for the owner's identifier in the result set),no,undetermined,0,0,0,no,0.012470825605239386,no,0.009313996892779893,no,0.008098445580704631,no,0.007383731572719331,no,0.006961906787568633
2675,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//needed for SOAP libraries, etc",no,undetermined,0,0,0,no,0.005351972121649553,no,0.007194484158379802,no,0.006825461425594127,no,0.006473513162470737,no,0.0061400581725813705
2676,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// finally, what it's all about...",no,undetermined,0,0,0,no,0.03067740685570068,no,0.012379484814007718,no,0.011728776445066404,no,0.011189276044084847,no,0.010819728273345501
2677,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// here we do not bother with the discriminator.,no,undetermined,0,0,0,no,0.06808586174281643,no,0.012392935832136414,no,0.011748680597462188,no,0.011186598708256876,no,0.010827166596616446
2678,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// validate() instances of Validatable,no,undetermined,0,0,0,no,0.017186146635088866,no,0.012389287672181223,no,0.011733728276121723,no,0.011203954146497209,no,0.010839303614580279
2679,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//null version means the object is in the process of being loaded somewhere else in the ResultSet,no,undetermined,0,0,0,no,0.013024334701144764,no,0.009033535562165814,no,0.007842553264648366,no,0.008043298349093706,no,0.007630295666195083
2680,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//problematic for <key-many-to-one>!,no,undetermined,0,0,0,no,0.003900781850441464,no,0.0012942756951088501,no,0.0011194497923012123,no,0.0009897939735498463,no,0.0014496037662350629
2681,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//use the id passed in,no,undetermined,0,0,0,no,0.0049978821689832245,no,0.0046632839767576555,no,0.004355092734969574,no,0.003975663196291766,no,0.003806453767314443
2682,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The property is a collection...,no,undetermined,0,0,0,no,0.010804461099813605,no,0.004779836079514113,no,0.002963287807608974,no,0.0034609919764997292,no,0.003256651879324114
2683,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Anyway, here we implement <set> semantics for a // <one-to-many> <bag>!",no,undetermined,0,0,0,yes,0.6733325071994528,yes,0.5627165684668821,yes,0.5438287038855637,yes,0.5573383426076098,yes,0.6241575229358135
2684,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//a shortcut if its location didn't change!,no,undetermined,0,0,0,no,0.007077468650304328,no,0.012380993785589788,no,0.01172103565244388,no,0.011178485651086326,no,0.010824491700581628
2685,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//search for it //note that this code is incorrect for other than one-to-many,no,undetermined,0,0,0,no,0.40570367422784376,no,0.24323380997537844,no,0.2394316234057093,no,0.2442723901442938,no,0.31637504488379
2686,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//a composite key,no,undetermined,0,0,0,no,0.0013825643632338683,no,0.0009209811815493886,no,0.0008249892782942234,no,0.0007337136413984311,no,0.000673353460269815
2687,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if no batch, use ""foo = ? and bar = ?""",no,undetermined,0,0,0,no,0.00444496341677607,no,0.004711022422029489,no,0.0046236566624036,no,0.004171145025626726,no,0.0039817810976537325
2688,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//it must be a collection fetch,no,undetermined,0,0,0,no,0.008945859636148825,no,0.0052295089283955565,no,0.0036134936781078656,no,0.0042261280081146,no,0.004079822359578713
2689,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// needed later for many-to-many/filter application,no,undetermined,0,0,0,no,0.04299408129705845,no,0.012383337685903956,no,0.01174307801911212,no,0.0111942806788868,no,0.010850827517489666
2690,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*&& etype.isReferenceToPrimaryKey()*/,no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
2691,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Collection wrappers, by the CollectionKey //key=CollectionKey, value=PersistentCollection",no,undetermined,0,0,0,no,0.0005836587966064161,no,0.0005924320328861657,no,0.00042682082258359104,no,0.0004301384052659117,no,0.00037241496672581523
2692,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// it might still need to apply a collection ordering based on a // many-to-many defined order-by...,no,undetermined,0,0,0,no,0.09391715590708519,no,0.01236997523077642,no,0.011730594648419551,no,0.01120262342144609,no,0.010840670944356454
2693,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// belong to other persister // belong to other persister,no,undetermined,0,0,0,no,0.06101813963627698,no,0.012401771837757813,no,0.011745586167804785,no,0.011175137360825626,no,0.010820824240634111
2694,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we found it,no,undetermined,0,0,0,no,0.0012451532139387443,no,0.0011148183407270707,no,0.0010145546101416889,no,0.0009083308543185531,no,0.0008328280881573979
2695,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//we can use an inner join for the many-to-many,no,undetermined,0,0,0,no,0.028301089249061624,no,0.010532792185265276,no,0.009222535946177378,no,0.008687976114196558,no,0.009334471557705113
2696,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//disable a join back to this same association,no,undetermined,0,0,0,no,0.010340107656579566,no,0.006565708847049913,no,0.006255850776749143,no,0.005823321915942724,no,0.005239447452061688
2697,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//NOTE: unlike all other Loaders, this one is NOT //      multithreaded, or cacheable!!",no,undetermined,0,0,0,no,0.03424162490691934,no,0.012405229575832285,no,0.011751826453518646,no,0.011207277434191004,no,0.01084836961550691
2698,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//the user visible aliases, which are unknown to the superclass, //these are not the actual ""physical"" SQL aliases",no,undetermined,0,0,0,no,0.002850658003239997,no,0.00259769250393079,no,0.0021885035946547253,no,0.002010855409562691,no,0.0019053751786630585
2699,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Let return-propertys override whatever the persister has for aliases.,no,undetermined,0,0,0,no,0.0033472621451709128,no,0.0029603566000497156,no,0.002916514015145602,no,0.002682962941525168,no,0.0025268869494551637
2700,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//alias may be null //EARLY EXIT,no,undetermined,0,0,0,no,0.002616283206793829,no,0.002868569909829448,no,0.0025678677354868925,no,0.0024162974764185643,no,0.002293436654291794
2701,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// if it is a compound path,no,undetermined,0,0,0,no,0.011387817711235216,no,0.010431213685040406,no,0.009774972368995832,no,0.008923667386456984,no,0.008601105702394562
2702,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if its the root criteria, we are done",no,undetermined,0,0,0,no,0.0013795125609555496,no,0.002399830361388434,no,0.0021802230616195404,no,0.0020603281803915478,no,0.001928583406956106
2703,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// otherwise, recurse",no,undetermined,0,0,0,no,0.004434072262151241,no,0.004191507495190072,no,0.0026645018678049517,no,0.002353679107046119,no,0.0022014046158341477
2704,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//the criteria instance,no,undetermined,0,0,0,no,0.0007259099083599794,no,0.004157860783743275,no,0.0039358104023816615,no,0.003661866307573228,no,0.0035191000108623018
2705,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the entity name,no,undetermined,0,0,0,no,0.004176549195819226,no,0.0025092002336115915,no,0.003759085332441482,no,0.005079707850675353,no,0.004867894009140281
2706,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//not found in inner query , try the outer query",no,undetermined,0,0,0,no,0.0015823190384735384,no,0.002684897448643986,no,0.0022486136391292656,no,0.0018728000447903585,no,0.0017783043655070817
2707,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//not found in inner query , try the outer query",no,undetermined,0,0,0,no,0.0015823190384735384,no,0.002684897448643986,no,0.0022486136391292656,no,0.0018728000447903585,no,0.0017783043655070817
2708,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//it refers to an alias of a projection,no,undetermined,0,0,0,no,0.007623785017868059,no,0.008862102166786246,no,0.008536901750788318,no,0.007765830192007436,no,0.007534840019878466
2709,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//should never happen, i think",no,undetermined,0,0,0,no,0.00404955013307654,no,0.005033087602974943,no,0.0048647424544119335,no,0.004547088804478365,no,0.004317060202189259
2710,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Convert the string value into the proper type.,no,undetermined,0,0,0,no,0.017742437141497237,no,0.012398565995173843,no,0.011761016696784,no,0.011197088381209506,no,0.010820136422256614
2711,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//needed for SOAP libraries, etc",no,undetermined,0,0,0,no,0.005351972121649553,no,0.007194484158379802,no,0.006825461425594127,no,0.006473513162470737,no,0.0061400581725813705
2712,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// and the qualifier is not the alias of this criteria //      -> check to see if we belong to some criteria other //          than the one that created us,no,undetermined,0,0,0,no,0.035921202968794426,no,0.012376171123175591,no,0.01173007912434317,no,0.011193834274702438,no,0.010813975266785807
2713,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//it does not refer to an alias of a projection, //look for a property",no,undetermined,0,0,0,no,0.0193367435991881,no,0.012401620699597589,no,0.011753040473198334,no,0.011198467387139546,no,0.010842323055184207
2714,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//search for it //note that this code is incorrect for other than one-to-many,no,undetermined,0,0,0,no,0.40570367422784376,no,0.24323380997537844,no,0.2394316234057093,no,0.2442723901442938,no,0.31637504488379
2715,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Otherwise, this is an ordinary value.",no,undetermined,0,0,0,no,0.014841433449849326,no,0.01240821755257806,no,0.009796196493349172,no,0.009783722271186988,no,0.00937043190840084
2716,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Currently *not* cachable if autodiscover types is in effect (e.g. ""select * ..."")",no,undetermined,0,0,0,no,0.0364987315127773,no,0.01236863762873801,no,0.01172224020021308,no,0.011172311235961227,no,0.010808718391702086
2717,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// List OPERATIONS:,no,undetermined,0,0,0,no,0.0029287883943200903,no,0.003334392766373954,no,0.002996090088102746,no,0.0027317034670077387,no,0.002561705562184655
2718,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	private final String[] sqlAliases; //	private final String[] sqlAliasSuffixes;,no,undetermined,0,0,0,no,0.0025620453862538833,no,0.0018898079706587603,no,0.0017281686900497719,no,0.0015987719990316713,no,0.0015018090534128774
2719,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this is only needed (afaict) for ResultTransformer processing...,no,undetermined,0,0,0,no,0.01803156061517834,no,0.012398482524365288,no,0.011742513331999778,no,0.01119884073099348,no,0.010829793941747932
2720,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// determine if the collection elements are entities...,no,undetermined,0,0,0,no,0.004090636674687714,no,0.006080145345020024,no,0.00554418101422568,no,0.006291974150993931,no,0.00575688070206796
2721,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// replace {....} with corresponding column aliases,no,undetermined,0,0,0,no,0.004025725384798742,no,0.004000092176076776,no,0.0036204662424668094,no,0.0033409010922024656,no,0.0031549163536296722
2722,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// No additional open braces found in the string, append the // rest of the string in its entirty and quit this loop",no,undetermined,0,0,0,no,0.0077866167473225984,no,0.008318389610411198,no,0.007277075202137893,no,0.0067500321112944845,no,0.006469971032449767
2723,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// apend everything up until the next encountered open brace,no,undetermined,0,0,0,no,0.006216045076482215,no,0.007049797445199967,no,0.006585048576582912,no,0.005800717922353707,no,0.0055455652232143235
2724,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//pad with nulls from the current last element up to the new index,no,undetermined,0,0,0,no,0.0020977289855047833,no,0.0031849963685723947,no,0.002998060616109692,no,0.00279955022144145,no,0.002681074834194361
2725,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// it is a simple table alias {foo},no,undetermined,0,0,0,no,0.0007492365390014546,no,0.0007361892318537978,no,0.0008388336593673343,no,0.0007603271210336336,no,0.0007171481395865669
2726,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// passing through anything we do not know : to support jdbc escape sequences HB-898,no,undetermined,0,0,0,no,0.011201631384902173,no,0.012396237909324414,no,0.01174773196018172,no,0.011174877873493515,no,0.010831595329428175
2727,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// passing through anything we do not know : to support jdbc escape sequences HB-898,no,undetermined,0,0,0,no,0.011201631384902173,no,0.012396237909324414,no,0.01174773196018172,no,0.011174877873493515,no,0.010831595329428175
2728,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The current alias is referencing the collection to be eagerly fetched,no,undetermined,0,0,0,no,0.01488337395196955,no,0.01147166327082883,no,0.009376432393503893,no,0.009840115132020284,no,0.009541809806127715
2729,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// it is a property reference {foo.bar},no,undetermined,0,0,0,no,0.008503713303607274,no,0.008322829825242656,no,0.008441225269779246,no,0.007795267893737354,no,0.0075865862862052975
2730,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*package*/,no,undetermined,0,0,0,no,0.0034329566677213947,no,0.003569072397892384,no,0.0033560416804782572,no,0.003095855193458484,no,0.0030481677094872563
2731,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//NOTE: EARLY EXIT!,no,undetermined,0,0,0,no,0.0021531618463119678,no,0.0020327342500316434,no,0.0018253944961150069,no,0.0016843563046879404,no,0.0015823869429030268
2732,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	private final List scalarTypes = new ArrayList(); //	private final List scalarColumnAliases = new ArrayList();,no,undetermined,0,0,0,no,0.002894288044807872,no,0.002950035757717071,no,0.0028033542333741925,no,0.002609968061507029,no,0.0024686564681578363
2733,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Now, process the returns",no,undetermined,0,0,0,no,0.0007300912494665523,no,0.0006554540331343871,no,0.0005879469342042175,no,0.0005252601255001104,no,0.00048305877627680127
2734,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// already been processed...,no,undetermined,0,0,0,no,0.0014011716340807878,no,0.001055068562013,no,0.0013697308491924462,no,0.0011688341568185897,no,0.0010906007455995276
2735,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// already been processed...,no,undetermined,0,0,0,no,0.0014011716340807878,no,0.001055068562013,no,0.0013697308491924462,no,0.0011688341568185897,no,0.0010906007455995276
2736,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Make sure the owner alias is known...,no,undetermined,0,0,0,no,0.0016478733627507225,no,0.0014495517732865059,no,0.0013011863858755708,no,0.001156241605857003,no,0.0010593506554062396
2737,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		scalarColumnAliases.add( typeReturn.getColumnAlias() ); //		scalarTypes.add( typeReturn.getType() );,no,undetermined,0,0,0,no,0.0020065769460199142,no,0.001682831320309304,no,0.001587651004170023,no,0.001457688649769495,no,0.0013820294859505974
2738,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If this return's alias has not been processed yet, do so b4 further processing of this return",no,undetermined,0,0,0,no,0.05712520862305597,no,0.012393453577100755,no,0.011726561124332343,no,0.011208083457276415,no,0.010817484645187421
2739,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//			collectionOwnerAliases.add( ownerAlias );,no,undetermined,0,0,0,no,0.0018028323737446217,no,0.001823166990705323,no,0.0016184853580926925,no,0.0015035043781657673,no,0.0014228872698990747
2740,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//needed for SOAP libraries, etc",no,undetermined,0,0,0,no,0.005351972121649553,no,0.007194484158379802,no,0.006825461425594127,no,0.006473513162470737,no,0.0061400581725813705
2741,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//needed for SOAP libraries, etc",no,undetermined,0,0,0,no,0.005351972121649553,no,0.007194484158379802,no,0.006825461425594127,no,0.006473513162470737,no,0.0061400581725813705
2742,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// from Map,no,undetermined,0,0,0,no,0.0025348904233894647,no,0.0023407390234633993,no,0.0023415576449143877,no,0.0021545618696771057,no,0.0020003300925923737
2743,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// from SortedMap,no,undetermined,0,0,0,no,0.011680510386081347,no,0.012392726244032285,no,0.01172896240289319,no,0.011186431574114888,no,0.010822378236002602
2744,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// cannot be instantiated,no,undetermined,0,0,0,no,0.0010416018019503818,no,0.0010630598673401373,no,0.0009179150930604762,no,0.0008304998845825274,no,0.0007635711711158201
2745,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//inject the data,no,undetermined,0,0,0,no,0.005081463748656045,no,0.004751318813318167,no,0.004411162993105707,no,0.004100232043946613,no,0.0038860868188140395
2746,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//default pool size 20,no,undetermined,0,0,0,no,0.002005085793747546,no,0.002000110051275906,no,0.0018751602548855758,no,0.0017067510956547882,no,0.001634274228257955
2747,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if debug level is enabled, then log the password, otherwise mask it",no,undetermined,0,0,0,no,0.006293577811447642,no,0.0061996533102152305,no,0.005196830400066555,no,0.004655235015621008,no,0.004410275737212024
2748,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// register a cleanup synch,no,undetermined,0,0,0,no,0.005843268300034071,no,0.005525336347389839,no,0.0051982067740536046,no,0.004800213271728328,no,0.004605192931772471
2749,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// wrap the session in the transaction-protection proxy,no,undetermined,0,0,0,no,0.001709740281329298,no,0.0013462881997907358,no,0.0010688679197888987,no,0.000875316141339108,no,0.0008223365779749378
2750,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// then bind it,no,undetermined,0,0,0,no,0.0017923378519370335,no,0.0019096125549188901,no,0.0017891897392334044,no,0.0016242715346431451,no,0.001553651016069669
2751,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// this property belongs on the table and is to be inserted,no,undetermined,0,0,0,no,0.1299496751104242,no,0.10255514886211699,no,0.10756864526137554,no,0.11085020769451592,no,0.10764111280513906
2752,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// limit the methods available if no transaction is active,no,undetermined,0,0,0,no,0.0021152616004037365,no,0.002642037535505096,no,0.0023615030494569655,no,0.0021760110967833563,no,0.002062216779505576
2753,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// allow these (deprecated) methods to pass through,no,undetermined,0,0,0,no,0.051282881365927124,no,0.012387229686677756,no,0.011737495636920814,no,0.011200525146717759,no,0.010848157795507069
2754,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.006100719370723909,no,0.003508446153325056,no,0.0031329946327249103,no,0.002938340317943302,no,0.00278336171002799
2755,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// add temp entry so that the next step is circular-reference // safe - only needed because some types don't take proper // advantage of two-phase-load (esp. components),no,undetermined,0,0,0,no,0.011815413945536365,no,0.01238416106409054,no,0.011737915579409714,no,0.011199787556840642,no,0.010840936721585382
2756,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// this is the second pass through on a merge op, so here we limit the // replacement to associations types (value types were already replaced // during the first pass)",no,undetermined,0,0,0,no,0.01762909408618528,no,0.01237038630008151,no,0.011730621871367143,no,0.011208187122543675,no,0.01085490868302599
2757,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//EARLY EXIT,no,undetermined,0,0,0,no,0.0005905483870258867,no,0.0006314912289696719,no,0.0005659715806632397,no,0.0005143622300302791,no,0.0004802970847279881
2758,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Handle collection-fiter compilation. // IMPORTANT NOTE: This is modifying the INPUT (HQL) tree, not the output tree!",no,undetermined,0,0,0,no,0.01640738440320692,no,0.012152555514444236,no,0.010338144916049823,no,0.010237427613426619,no,0.009773039912635777
2759,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Initialize the error handling delegate.,no,undetermined,0,0,0,no,0.003962150628232965,no,0.0029614096551590814,no,0.002507306638894057,no,0.002210864159534086,no,0.002099141487845665
2760,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//cannot be instantiated,no,undetermined,0,0,0,no,0.0010416018019503818,no,0.0010630598673401373,no,0.0009179150930604762,no,0.0008304998845825274,no,0.0007635711711158201
2761,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//private String propertyName;,no,undetermined,0,0,0,no,0.006245687847495723,no,0.0016543295390394402,no,0.0015406927481208313,no,0.0014239932826903754,no,0.0013382050728696635
2762,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Use the delegate.,no,undetermined,0,0,0,no,0.003502859926000323,no,0.003483379393544214,no,0.002871317608492502,no,0.002599421926846601,no,0.002458189426341379
2763,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//String[] fk = StringHelper.qualify( ""collection_"", cp.getKeyColumnNames() );",no,undetermined,0,0,0,no,0.016022526252743557,no,0.012390822313826854,no,0.01172742353122526,no,0.011199343053763135,no,0.010841105920927047
2764,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//"" collection_ where "" +",no,undetermined,0,0,0,no,0.0088881928639692,no,0.00950705830066516,no,0.009076599205842271,no,0.008070931788361234,no,0.007747070406663091
2765,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//unsupported,no,undetermined,0,0,0,no,0.0023469971499042942,no,0.002513522150806802,no,0.002356238560885852,no,0.0021918813963011925,no,0.002085895723030439
2766,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//unsupported,no,undetermined,0,0,0,no,0.0023469971499042942,no,0.002513522150806802,no,0.002356238560885852,no,0.0021918813963011925,no,0.002085895723030439
2767,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// if not a composite key, use ""foo in (?, ?, ?)"" for batching // if no batch, and not a composite key, use ""foo = ?""",no,undetermined,0,0,0,no,0.0025826344661200157,no,0.002296484936300304,no,0.0024210003426876066,no,0.0021668003450149203,no,0.0020262899884854455
2768,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// currently only the Hibernate-supplied DbTimestampType is supported here,no,undetermined,0,0,0,no,0.015592554162198258,no,0.012382094432945513,no,0.011731643597307646,no,0.011185677137859592,no,0.010850353260444288
2769,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//cannot be instantiated,no,undetermined,0,0,0,no,0.0010416018019503818,no,0.0010630598673401373,no,0.0009179150930604762,no,0.0008304998845825274,no,0.0007635711711158201
2770,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This is called when it's time to fully resolve a path expression.,no,undetermined,0,0,0,no,0.08703873823404047,no,0.012395867470285656,no,0.011759198275041426,no,0.01121258175290154,no,0.010831109271429771
2771,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//implicit polymorphism not supported (would need a union),no,undetermined,0,0,0,no,0.06135823331099705,no,0.012396431927416506,no,0.01173181190157763,no,0.011192872311307785,no,0.010812070075195057
2772,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//pull off the last "", """,no,undetermined,0,0,0,no,0.0026417602063770083,no,0.0026461257672161466,no,0.002448891689327028,no,0.0022674263883290264,no,0.00213882814185513
2773,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//$NON-NLS-1,no,undetermined,0,0,0,no,0.0016091351235899116,no,0.0016956585586789513,no,0.0015395419759010338,no,0.0014137379987611187,no,0.0013435304587366133
2774,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//always do an INSERT, and let it fail by constraint violation",no,undetermined,0,0,0,no,0.003470111942215036,no,0.0029303151514856966,no,0.0033362148708442688,no,0.0030910879066589955,no,0.0030042142720088988
2775,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//by default, natural-ids are ""immutable"" (constant)",no,undetermined,0,0,0,no,0.004514562149453126,no,0.003016342841580835,no,0.002748744708604058,no,0.002559487298779003,no,0.0024081488561777066
2776,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we have the form: trim(from trimSource). //      This is functionally equivalent to trim(trimSource),no,undetermined,0,0,0,no,0.006932188064679654,no,0.0123867157198791,no,0.011761978057854778,no,0.011199416663898041,no,0.010841966710062687
2777,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// NOT_SUPPORTED_SHOULD_USE_JDBC3_PreparedStatement.getGeneratedKeys_method,no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
2778,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// make a new one,no,undetermined,0,0,0,no,0.002653805020170185,no,0.002863061179810851,no,0.002700725553000232,no,0.002475419049306417,no,0.002439175149393612
2779,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// astore 4 // store the raw bean,no,undetermined,0,0,0,no,0.0007050629302478187,no,0.0008287015711697646,no,0.0007382227865248601,no,0.0006570388488757852,no,0.0006218993385155037
2780,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0008158380563990274,no,0.0004622220704414844,no,0.0003947093598227315,no,0.00035164830917738625,no,0.00031812294261152036
2781,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// not so sure this is even valid subtree.  but if it was, it'd // represent two unrelated table references...",no,undetermined,0,0,0,no,0.06642123578801774,no,0.0123726923755078,no,0.011732595467468743,no,0.011192192509702666,no,0.010826056025170934
2782,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// NOTE : firstRow is zero-based,no,undetermined,0,0,0,no,0.010431780035316878,no,0.010449890363382487,no,0.009693624158800332,no,0.00910223290741896,no,0.008588124550994747
2783,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// grrr... for differentiation of mysql storage engines,no,undetermined,0,0,0,no,0.00019455892260468598,no,0.00044834939982116246,no,0.00039959038551462843,no,0.0003575035232428169,no,0.0003296070851657228
2784,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* current stack len = 0 */,no,undetermined,0,0,0,no,0.0016736993877385223,no,0.0017207101316894056,no,0.0015576044191052793,no,0.00143987476527587,no,0.001352684152335985
2785,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//String[] keyCols = collPersister.getKeyColumnNames();,no,undetermined,0,0,0,no,0.003436374555191641,no,0.0032975115234361225,no,0.003080286446453743,no,0.002876729413996237,no,0.0027554602814707815
2786,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Oracle did add support for ANSI CASE statements in 9i,no,undetermined,0,0,0,no,0.0005793813489973078,no,0.0013231160404581555,no,0.0013003354639357875,no,0.0012010042500177624,no,0.0011345105467062014
2787,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the standard SQL function name is current_timestamp...,no,undetermined,0,0,0,no,0.0011528576209925531,no,0.0024736632981831974,no,0.002285427721101741,no,0.002136045841067751,no,0.0020381136547144327
2788,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//refresh() does not pass an entityName,no,undetermined,0,0,0,no,0.003946698414708168,no,0.004615807527307331,no,0.004756370778666946,no,0.00456071345329084,no,0.004283439414489344
2789,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Informix doesn't have a bit type,no,undetermined,0,0,0,no,0.01769508229678577,no,0.012392196141206504,no,0.011736101657307022,no,0.011201813953527453,no,0.010830360782872762
2790,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// (NOT (GT a b) ) => (LE a b),no,undetermined,0,0,0,no,0.011672679473715865,no,0.01237708236284457,no,0.01172458778782478,no,0.0111730540342355,no,0.01081601728113963
2791,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// strip table-owner because Informix always returns constraint names as ""<table-owner>.<constraint-name>""",no,undetermined,0,0,0,no,0.0017009913451132657,no,0.002335867178421627,no,0.0023413500942222024,no,0.0021772933774838773,no,0.002003420830354492
2792,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// build the map of standard ANSI SQL aggregation functions ~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0004819170307271552,no,0.0005683657244104384,no,0.0005072307419135574,no,0.0004571904602117301,no,0.0004246467836527457
2793,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//pre H3.2 behavior: super.getReturnType(ct, m);",no,undetermined,0,0,0,no,0.019389273994533968,no,0.012413006438293525,no,0.011742053451120341,no,0.011213321665063277,no,0.010825919964658644
2794,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// finally use the sqltype if == on Hibernate types did not find a match.,no,undetermined,0,0,0,no,0.0029247548936968317,no,0.0045799412875469,no,0.004272113481392039,no,0.0038958653594273703,no,0.0036205227796220246
2795,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//because numeric can be anything,no,undetermined,0,0,0,no,0.004620227856579332,no,0.009202386463629548,no,0.0074831845814704095,no,0.007145198216870138,no,0.0068299279620022335
2796,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// constructors and factory methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.011662461488282512,no,0.012385038193422066,no,0.011754186225384669,no,0.011193125481668894,no,0.01082081980084297
2797,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// standard sql92 functions (can be overridden by subclasses),no,undetermined,0,0,0,no,0.0003436268947357563,no,0.00047994817778857114,no,0.00042733243598308394,no,0.0003793975100752107,no,0.0003448990920004716
2798,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//map second/minute/hour/day/month/year to ANSI extract(), override on subclasses",no,undetermined,0,0,0,no,0.00243906730705024,no,0.0028426859629533292,no,0.0027805126658113893,no,0.002577232531846027,no,0.0023969400831278815
2799,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// database type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.004204130706514752,no,0.005106972866844825,no,0.004273057768538645,no,0.003888279728970124,no,0.00479146039937575
2800,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// hibernate type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0030285883645411018,no,0.009401164420033966,no,0.008475178357092189,no,0.0077770318683478366,no,0.009423802993625623
2801,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//private Type[] sqlResultTypes;,no,undetermined,0,0,0,no,0.005578991846730555,no,0.001134721948525826,no,0.0010011211375850805,no,0.0009106078695504253,no,0.0008478021067007254
2802,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// native identifier generatiion ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0008145824006797294,no,0.0008597927621506914,no,0.0005190543780499668,no,0.0004621307629918521,no,0.0004257426143660712
2803,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// IDENTITY support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0018815456089426236,no,0.0027041480940545033,no,0.005132384717751349,no,0.004834533896808129,no,0.005902415188248762
2804,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// SEQUENCE support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0039548795762178075,no,0.003972531411437183,no,0.0036820479027355195,no,0.003416146156083729,no,0.0032662128153709306
2805,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// limit/offset support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0010819597100201887,no,0.0023641942252381155,no,0.0022105721948712945,no,0.001995082446163987,no,0.001907744936083796
2806,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// by default we report no support,no,undetermined,0,0,0,no,0.01231690611914509,no,0.010336096536608162,no,0.009870900347694257,no,0.009388128790271476,no,0.0091145147408474
2807,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//sqlResultTypes = selectClause.getSqlResultTypes();,no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
2808,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// by default we report no support for NOWAIT lock semantics,no,undetermined,0,0,0,no,0.04487763391683727,no,0.012386780947659447,no,0.01172316348040007,no,0.011212799064214001,no,0.010835907432265566
2809,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.03866403830668925,no,0.012393945739222971,no,0.011725497922203381,no,0.011170124990491307,no,0.01082199434039412
2810,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.005382821827658146,no,0.007013573213432863,no,0.006749682905747068,no,0.00641014760514175,no,0.006221149531485857
2811,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// current timestamp support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.001121297397306508,no,0.001922588498348467,no,0.0017859457824367742,no,0.0016727567724333268,no,0.0015851223041691146
2812,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.003238682494816171,no,0.004528136907812,no,0.0044782607017309324,no,0.004152415733411792,no,0.004003805148058978
2813,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// identifier quoting support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0035136799727993697,no,0.005139319372588252,no,0.004705694589544869,no,0.004360761939322715,no,0.004159986234109496
2814,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//by default,no,undetermined,0,0,0,no,0.00017581817236591487,no,0.00014504196994096855,no,0.0001253017959076428,no,0.00010801064238413063,no,9.789009685027312e-05
2815,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// This is now handled earlier in this method.,no,undetermined,0,0,0,no,0.05076154896554932,no,0.012415508626061156,no,0.011761301391215647,no,0.01120262883436707,no,0.010840739381666584
2816,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// -- Loader implementation --,no,undetermined,0,0,0,no,0.00357727449288599,no,0.00403163978208367,no,0.0036452739519330477,no,0.003421412733060364,no,0.003274207893053534
2817,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// -- Loader overrides --,no,undetermined,0,0,0,no,0.0010587611422782025,no,0.0011648866497287358,no,0.0010458586120421158,no,0.0009512686971755444,no,0.0009008989310787647
2818,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// (NOT (IS_NULL a b) ) => (IS_NOT_NULL a b),no,undetermined,0,0,0,no,0.011672679473715865,no,0.01237708236284457,no,0.01172458778782478,no,0.0111730540342355,no,0.01081601728113963
2819,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// here assume SQLServer2005 using snapshot isolation, which does not have this problem",no,undetermined,0,0,0,no,0.15890733939497853,no,0.2280610905081684,no,0.37852644647274875,no,0.39595960993874346,no,0.3994840214979239
2820,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//NONE, because its the requested lock mode, not the actual! ",no,undetermined,0,0,0,no,0.001853870683806994,no,0.002210453191829561,no,0.0018714165482560886,no,0.0017151909086481547,no,0.0015828106379193161
2821,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// --- Query translator methods ---,no,undetermined,0,0,0,no,0.00689638477879694,no,0.007713703384299051,no,0.00696274877571234,no,0.00607153104762302,no,0.005850600195543422
2822,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Oracle8 and previous define only a ""DATE"" type which //      is used to represent all aspects of date/time",no,undetermined,0,0,0,no,0.015023661804343504,no,0.012200035757111719,no,0.010834726241920079,no,0.010188305495586612,no,0.00980334795943815
2823,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//starts with 1, implicitly",no,undetermined,0,0,0,no,0.004935554892289586,no,0.006732175746991517,no,0.00650129729791484,no,0.006139882055615268,no,0.005914949271063858
2824,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//"" cascade"";",no,undetermined,0,0,0,no,0.0017964860388637138,no,0.005018310308683846,no,0.005816279071950336,no,0.005564479586164535,no,0.005128152615213522
2825,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// -- Implementation private methods --,no,undetermined,0,0,0,no,0.010440506462692928,no,0.004945753457331359,no,0.004509629737023138,no,0.004274452058068108,no,0.004054966009453374
2826,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//trim off the length/precision/scale,no,undetermined,0,0,0,no,0.005620623317202409,no,0.007263282364722793,no,0.0073267086667246125,no,0.006719730709479642,no,0.006399712734109735
2827,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// CHECK VIOLATION,no,undetermined,0,0,0,no,0.000125453080546129,no,0.00036918862083880225,no,0.0004019855623738632,no,0.0003587122530445089,no,0.000335550120193971
2828,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// UNIQUE VIOLATION,no,undetermined,0,0,0,no,0.0037240230608498962,no,0.0036850629827783923,no,0.0032756675255322504,no,0.003025641223955776,no,0.00292612478742013
2829,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// FOREIGN KEY VIOLATION,no,undetermined,0,0,0,no,0.0007305490717038414,no,0.0007736386062650279,no,0.0006875210501089223,no,0.0006033706897783843,no,0.0005429670536779947
2830,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//deduplicate unique constraints sharing the same columns //this is needed by Hibernate Annotations since it creates automagically // unique constraints for the user,no,undetermined,0,0,0,no,0.0006435053833877652,no,0.003008932220511578,no,0.002697856575176778,no,0.0024062034402527704,no,0.0023885756248590248
2831,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0008158380563990274,no,0.0004622220704414844,no,0.0003947093598227315,no,0.00035164830917738625,no,0.00031812294261152036
2832,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// to support dialects that have their own identity data type,no,undetermined,0,0,0,no,0.01024620224464967,no,0.008664607503923595,no,0.011744791055276375,no,0.011213142069687107,no,0.010838270759373918
2833,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// NOT NULL VIOLATION,no,undetermined,0,0,0,no,0.008337915131633141,no,0.0040293312978862935,no,0.003548036408277381,no,0.003318223850999307,no,0.0031117061980318623
2834,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ALL OTHER,no,undetermined,0,0,0,no,0.0029607549357526307,no,0.0018092747183154078,no,0.0015961831316569938,no,0.001454314165928901,no,0.0014509364021394694
2835,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Register the type of the out param - PostgreSQL uses Types.OTHER,no,undetermined,0,0,0,no,0.0786591266077717,no,0.012375449840968797,no,0.01172062353268285,no,0.0111767934848575,no,0.01082955539227465
2836,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// seems to have spotty LOB suppport,no,undetermined,0,0,0,no,0.05861346623151259,no,0.012376565670842709,no,0.01172226745269481,no,0.011199023696058635,no,0.010815178489926858
2837,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// HHH-2300,no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
2838,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ignore (probably H2 not in the classpath),no,undetermined,0,0,0,no,0.04435642811995701,no,0.012378824656901842,no,0.01172267416902184,no,0.011192668327970596,no,0.010850198882730968
2839,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Prepare the left hand side and get the data type.,no,undetermined,0,0,0,no,0.0007372674264329022,no,0.004078990188675025,no,0.0036386910768568246,no,0.0033939510387294186,no,0.00318318936219878
2840,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Numeric Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0012136648629755,no,0.0008613297065033774,no,0.0007233151334104428,no,0.0006530198617644537,no,0.0006068060546255748
2841,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//used also for generation of FK names!,no,undetermined,0,0,0,no,0.025196348002104924,no,0.01240249535738215,no,0.011737228824898673,no,0.011194557954375224,no,0.01084237657489362
2842,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//usually useless,no,undetermined,0,0,0,no,0.0009705697293326968,no,0.001013904345486558,no,0.0009248299540566995,no,0.0008444338318747301,no,0.0007945060512142159
2843,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//do not add unique constraint on DB not supporting unique and nullable columns,no,undetermined,0,0,0,no,0.006512642617966419,no,0.008459418786864206,no,0.0077264729867550655,no,0.007203395245638361,no,0.00700152581726281
2844,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//for backward compatibility, disable this:",no,undetermined,0,0,0,no,0.0020470753769235624,no,0.009267823352713662,no,0.00884139561457677,no,0.008503252014414861,no,0.008236933599614922
2845,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//may be final //may be final //may be final,no,undetermined,0,0,0,no,0.004085548516043049,no,0.011710733617320605,no,0.010234337108561637,no,0.009704805212970685,no,0.009320983417617416
2846,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//may be final,no,undetermined,0,0,0,no,0.004085548516043049,no,0.011710733617320605,no,0.010234337108561637,no,0.009704805212970685,no,0.009320983417617416
2847,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// may be final,no,undetermined,0,0,0,no,0.004085548516043049,no,0.011710733617320605,no,0.010234337108561637,no,0.009704805212970685,no,0.009320983417617416
2848,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Custom SQL,no,undetermined,0,0,0,no,0.0014378860619458742,no,0.001103956897338759,no,0.000977419833098711,no,0.0008804344508510066,no,0.0008249138854628948
2849,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Primary key constraint,no,undetermined,0,0,0,no,0.0026068104771843166,no,0.0016983902686931805,no,0.0015328668055601471,no,0.001406410271412482,no,0.001316871179414761
2850,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ignore it...,no,undetermined,0,0,0,no,0.0004577003960435737,no,0.00048819379544075563,no,0.0004320653359911463,no,0.0003685236398288353,no,0.00034548202714878586
2851,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Time and Date Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.002020308603623248,no,0.0012376008626643457,no,0.0011093938508572173,no,0.0009788792205165258,no,0.0009175505428358857
2852,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// System Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.002149144343967275,no,0.0017723955942770357,no,0.0016225284672235203,no,0.0015022118272326828,no,0.0013958534546491326
2853,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// not null is implicit,no,undetermined,0,0,0,no,0.03908513194205846,no,0.012373234068667555,no,0.011746009976947266,no,0.011174159914716505,no,0.010835107874908496
2854,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Display the dialect version.,no,undetermined,0,0,0,no,0.011673815601975166,no,0.012404533915705227,no,0.011728093963677955,no,0.011199732592075663,no,0.010840145615131759
2855,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// nothing to do in a stateful session,no,undetermined,0,0,0,no,0.0016442619672427927,no,0.0015607714892342378,no,0.0014945681554841739,no,0.0013752673003570896,no,0.0013060447971606482
2856,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// The RDMS concat() function only supports 2 parameters,no,undetermined,0,0,0,no,0.001939333008363703,no,0.003486645528531193,no,0.0034053782228333144,no,0.0031712206789598334,no,0.00296413437756983
2857,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//flat recursive algorithm,no,undetermined,0,0,0,no,0.005067215883216423,no,0.004458728226228945,no,0.004188477136404465,no,0.003930576060415697,no,0.0037774066612143815
2858,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//an identifier mapper => getKey will be included in the getNonDuplicatedPropertyIterator() //and checked later, so it needs to be excluded",no,undetermined,0,0,0,no,0.013027448842211287,no,0.012240031050385368,no,0.011197449872005738,no,0.010651470484858708,no,0.010251462540675271
2859,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* current stack len = 0 */,no,undetermined,0,0,0,no,0.0016736993877385223,no,0.0017207101316894056,no,0.0015576044191052793,no,0.00143987476527587,no,0.001352684152335985
2860,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Dialect method overrides ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.006870642441257595,no,0.01238967735006949,no,0.011741483223638816,no,0.011205179582872303,no,0.01081477123738912
2861,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Custom SQL,no,undetermined,0,0,0,no,0.0014378860619458742,no,0.001103956897338759,no,0.000977419833098711,no,0.0008804344508510066,no,0.0008249138854628948
2862,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Primary key constraint,no,undetermined,0,0,0,no,0.0026068104771843166,no,0.0016983902686931805,no,0.0015328668055601471,no,0.001406410271412482,no,0.001316871179414761
2863,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// Original Dialect.java returns "" for update"";",no,undetermined,0,0,0,no,0.008348211847357824,no,0.011374699774178307,no,0.010704804808268882,no,0.01011423579140226,no,0.009764343245467341
2864,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//pass the column name (a generated id almost always has a single column),no,undetermined,0,0,0,no,0.012307887608603373,no,0.012407173216528851,no,0.011735154449483082,no,0.01121882528747741,no,0.010843687064285137
2865,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//needed to satisfy KeyValue,no,undetermined,0,0,0,no,0.01039160407303306,no,0.012382934320997008,no,0.01172166478664112,no,0.011175332488651879,no,0.010817036865201588
2866,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Verify the state of this new method in Hibernate 3.0 Dialect.java,no,undetermined,0,0,0,no,0.01823431853491783,no,0.012399806526586224,no,0.011746488266210978,no,0.011204327724402517,no,0.010844476642362209
2867,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Origial Dialect.java returns true;,no,undetermined,0,0,0,no,0.022836136378212683,no,0.012375526655761504,no,0.011739283786350876,no,0.01120223221624476,no,0.010813447174306457
2868,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// index should be last column listed,no,undetermined,0,0,0,no,0.002795380917916514,no,0.005133219837173928,no,0.004706814079951793,no,0.004403182830465123,no,0.004131283142731239
2869,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// *** Sequence methods - start. The RDMS dialect needs these,no,undetermined,0,0,0,no,0.04539212667893638,no,0.012398089762859252,no,0.011754317745132765,no,0.011204411475935486,no,0.01085291460119851
2870,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// methods to make it possible to use the Native Id generator,no,undetermined,0,0,0,no,0.10694577970190951,no,0.08739398769181135,no,0.011733190967663171,no,0.011200540987578719,no,0.01084674171401627
2871,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if it is a formula index, use the element columns in the PK",no,undetermined,0,0,0,no,0.002696722422436937,no,0.008746366392038398,no,0.008002611419991536,no,0.007200940465360619,no,0.0074884313198293855
2872,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// don't create a unique key, 'cos some // databases don't like a UK on nullable // columns",no,undetermined,0,0,0,no,0.009154273462361863,no,0.012386260524097137,no,0.011746858292880436,no,0.011185183247298605,no,0.010824779316882171
2873,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// *** Sequence methods - end,no,undetermined,0,0,0,no,0.00511585799620633,no,0.0033547727084345847,no,0.0030547905167416702,no,0.0028503600672640976,no,0.0026958713820307
2874,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// },no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
2875,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//starts with 1, implicitly",no,undetermined,0,0,0,no,0.004935554892289586,no,0.006732175746991517,no,0.00650129729791484,no,0.006139882055615268,no,0.005914949271063858
2876,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Used with DROP TABLE to delete all records in the table.,no,undetermined,0,0,0,no,0.011708431860808954,no,0.011805981041396726,no,0.011722136133266222,no,0.011205566410596413,no,0.010816341370326677
2877,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// no foreign key element of for a one-to-many,no,undetermined,0,0,0,no,0.003129149724024206,no,0.0020209890519904796,no,0.0017663996537754475,no,0.0015700437281483757,no,0.002142520137901661
2878,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//TODO: we could just return all false...,no,undetermined,0,0,0,yes,0.9933472596593041,no,0.012403549633432796,no,0.01173909891485478,no,0.011199673228023918,no,0.010845498970269532
2879,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the case of a foreign key to something other than the pk is handled in createPropertyRefConstraints,no,undetermined,0,0,0,no,0.008130338073335247,no,0.005578922447418864,no,0.005087298971758206,no,0.004467563221064955,no,0.0042335213280332105
2880,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// the object is persistent,no,undetermined,0,0,0,no,0.004273380947163972,no,0.004672023956460821,no,0.004263738400223964,no,0.0040303901311902505,no,0.0038534869483636508
2881,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// RDMS supports the UNION ALL clause.,no,undetermined,0,0,0,no,0.008065115907840835,no,0.004957005691056128,no,0.004663956421798679,no,0.004441276418431802,no,0.004188784601783957
2882,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Multi-param dialect functions...,no,undetermined,0,0,0,no,0.056816297463281096,no,0.011709532318192687,no,0.011019144788636236,no,0.010477299337188366,no,0.010113072431861346
2883,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// function templates,no,undetermined,0,0,0,no,0.000682785021249174,no,0.0017424142402400068,no,0.0016443956581679929,no,0.0015097943358509957,no,0.0014206670658623607
2884,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//TODO: we could just return all false...,no,undetermined,0,0,0,yes,0.9933472596593041,no,0.012403549633432796,no,0.01173909891485478,no,0.011199673228023918,no,0.010845498970269532
2885,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//not null is implicit,no,undetermined,0,0,0,no,0.03908513194205846,no,0.012373234068667555,no,0.011746009976947266,no,0.011174159914716505,no,0.010835107874908496
2886,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// this assumes schema support, which is present in 1.8.0 and later...",no,undetermined,0,0,0,no,0.023465152234631647,no,0.012381465522911196,no,0.011722215503927599,no,0.011176551230481923,no,0.010827528853698178
2887,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//columnUpdateability.length==0 ||,no,undetermined,0,0,0,no,0.0064338423838434045,no,0.006639376070382346,no,0.006485806590010214,no,0.005789512267918224,no,0.0055805604993071495
2888,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// HSQLDB only supports READ_UNCOMMITTED transaction isolation,no,undetermined,0,0,0,no,0.006309139680104572,no,0.005421719195221789,no,0.005029796352860966,no,0.004308878645180381,no,0.004035597300971249
2889,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//the entity is associated with the session, so check its status",no,undetermined,0,0,0,no,0.0024770651064071197,no,0.0018164139111000411,no,0.0019929636535251623,no,0.0019233100932486036,no,0.001798163409366087
2890,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Multi-param string dialect functions...,no,undetermined,0,0,0,no,0.06368130080645681,no,0.012398382907445816,no,0.011712952182035104,no,0.011209956396902544,no,0.010848669278736352
2891,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Multi-param numeric dialect functions...,no,undetermined,0,0,0,no,0.0391433866734119,no,0.011510618779952355,no,0.010035839168545474,no,0.009556228710204583,no,0.009169270761334664
2892,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Multi-param date dialect functions...,no,undetermined,0,0,0,no,0.0637239640882115,no,0.012409607284043486,no,0.011741552693559896,no,0.011185997638394628,no,0.010833371624277248
2893,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// simple nullability constraint,no,undetermined,0,0,0,no,0.0006244274966099525,no,0.0005556850843330406,no,0.0004806970828612187,no,0.0004426817042922193,no,0.00041479656767545785
2894,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0008158380563990274,no,0.0004622220704414844,no,0.0003947093598227315,no,0.00035164830917738625,no,0.00031812294261152036
2895,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0008158380563990274,no,0.0004622220704414844,no,0.0003947093598227315,no,0.00035164830917738625,no,0.00031812294261152036
2896,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// return,no,undetermined,0,0,0,no,0.0006289585196806323,no,0.0005663290584469739,no,0.0005106554160617964,no,0.0004696337633428153,no,0.00043772048256313556
2897,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//	register the type of the out param - an Oracle specific type,no,undetermined,0,0,0,no,0.019479240180438298,no,0.012391854101845446,no,0.011756020651644055,no,0.011205599130872603,no,0.010836143784889826
2898,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// TimesTen has no BLOB/CLOB support, but these types may be suitable  // for some applications. The length is limited to 4 million bytes.",no,undetermined,0,0,0,no,0.03464467569028305,no,0.01239050624260619,no,0.011739252084304663,no,0.011216646335950075,no,0.010829664046550778
2899,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// new methods in dialect3,no,undetermined,0,0,0,no,0.004856648647745406,no,0.005641768922456277,no,0.005317582191474806,no,0.005032373458145508,no,0.004802061551191779
2900,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*public boolean supportsForUpdateNowait() {
		return false;
	}*/",no,undetermined,0,0,0,no,0.00033438847333887805,no,0.00016897075556160203,no,0.00015154268487741076,no,0.00013221072767109884,no,0.00011885294515615986
2901,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// TimesTen has no known variation of a ""SELECT ... FOR UPDATE"" syntax...",no,undetermined,0,0,0,no,0.0018256223894069859,no,0.002128232649970358,no,0.0019643674317949395,no,0.0018164099058705912,no,0.0017185859631412255
2902,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// iterate entries ordered by capacity to find first fit,no,undetermined,0,0,0,no,0.0015934719265712155,no,0.0014762634423380213,no,0.001311751021733316,no,0.0011995687563156685,no,0.0011130698145110267
2903,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// add new ordered map,no,undetermined,0,0,0,no,0.0021730897755960384,no,0.0021973232616057,no,0.0021513476631536397,no,0.001975712484248632,no,0.0018361476854305842
2904,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// expected type is intrinsic here...,no,undetermined,0,0,0,no,0.010064054084829976,no,0.009786504142357001,no,0.010474953837624982,no,0.009955817801592064,no,0.009634603458916619
2905,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,no,undetermined,0,0,0,no,0.0008158380563990274,no,0.0004622220704414844,no,0.0003947093598227315,no,0.00035164830917738625,no,0.00031812294261152036
2906,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//},no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
2907,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//},no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
2908,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//return memberPersister.getPropertyType(propertyName);,no,undetermined,0,0,0,no,0.0006289585196806323,no,0.0005663290584469739,no,0.0005106554160617964,no,0.0004696337633428153,no,0.00043772048256313556
2909,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//return memberPersister.toColumns(alias, propertyName);",no,undetermined,0,0,0,no,0.0074784025756401695,no,0.007617983129069396,no,0.007037504380235268,no,0.006735439274037982,no,0.006492633094512519
2910,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//return memberPersister.getType();,no,undetermined,0,0,0,no,0.002025930229716254,no,0.0014969946628379058,no,0.0014258137206335075,no,0.0013103044622164444,no,0.0012325924207225085
2911,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*&& !indexIsFormula*/,no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
2912,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		return !isOneToMany();,no,undetermined,0,0,0,no,0.0006289585196806323,no,0.0005663290584469739,no,0.0005106554160617964,no,0.0004696337633428153,no,0.00043772048256313556
2913,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//instanceof AssociationType;,no,undetermined,0,0,0,no,0.014968329348952229,no,0.012374389846043048,no,0.011740655161750272,no,0.011192211313088988,no,0.010841302375576798
2914,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// we need to determine the best way to know that two joinables // represent a single many-to-many...,no,undetermined,0,0,0,no,0.47046160143449295,no,0.3223869473934045,no,0.314579950401424,no,0.3180499575949455,no,0.3517108839175781
2915,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//strip leading ','",no,undetermined,0,0,0,no,0.001067769729634927,no,0.000977910459836626,no,0.0008676117080337794,no,0.0007950895473081625,no,0.00075019868560295
2916,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//public boolean isSubselectLoadable();,no,undetermined,0,0,0,no,0.00011341663822385483,no,0.00016459830305617042,no,0.0001496492068898442,no,0.00013037245519243834,no,0.000117321081273149
2917,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//columns,no,undetermined,0,0,0,no,9.946545103664118e-05,no,0.0018132268097156765,no,0.0016402448185332977,no,0.001514241369047862,no,0.0014354166544958155
2918,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//SQL statements,no,undetermined,0,0,0,no,0.0009062799874506007,no,0.0018533317357483467,no,0.0016891340474490917,no,0.0015774777289985602,no,0.0014749925482916172
2919,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//extra information about the element type,no,undetermined,0,0,0,no,0.011821148905763058,no,0.009818643855592045,no,0.008758678101323934,no,0.008156585501621306,no,0.007849305737148145
2920,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//types,no,undetermined,0,0,0,no,0.009095895962357436,no,0.008299088161878085,no,0.007939322313008364,no,0.007594392966348965,no,0.007245944972240469
2921,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// sql server just returns automatically,no,undetermined,0,0,0,no,0.008147470122001003,no,0.010872982662206767,no,0.009906724979466219,no,0.009580250164825525,no,0.009222317286619942
2922,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// custom sql,no,undetermined,0,0,0,no,0.0014378860619458742,no,0.001103956897338759,no,0.000977419833098711,no,0.0008804344508510066,no,0.0008249138854628948
2923,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//private final String unquotedIdentifierColumnName;,no,undetermined,0,0,0,no,0.0025620453862538833,no,0.0018898079706587603,no,0.0017281686900497719,no,0.0015987719990316713,no,0.0015018090534128774
2924,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//		return ""select CURRENT_TIMESTAMP from RDB$DATABASE"";",no,undetermined,0,0,0,no,0.0028582683523263727,no,0.0022909555079045976,no,0.001970835868721257,no,0.0017946614290451379,no,0.0016738020377380569
2925,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// dynamic filters specifically for many-to-many inside the collection,no,undetermined,0,0,0,no,0.011288609103450156,no,0.005427534019616016,no,0.004511758873409544,no,0.006429285463534498,no,0.006783747042217795
2926,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// dynamic filters for the collection,no,undetermined,0,0,0,no,0.00313420057318252,no,0.003757361001662593,no,0.002843314178896652,no,0.003084741294249996,no,0.0028811105743038693
2927,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//registerColumnType data types,no,undetermined,0,0,0,no,0.0029343043090991863,no,0.012373703446802553,no,0.011721381287059835,no,0.01120280519513327,no,0.010841155977446051
2928,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// IBID for current_time and current_date,no,undetermined,0,0,0,no,0.0011264731614991986,no,0.000676113206738701,no,0.0006092706891657828,no,0.0005448752683289871,no,0.0005028275742093801
2929,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// If we've been blocking for the mutex, perhaps another // thread has already reestablished the root. // In case the node was reestablised via replication, confirm it's  // marked ""resident"" (a status which doesn't replicate)",no,undetermined,0,0,0,no,0.039234886191557725,no,0.01238251040778949,no,0.011731625213507447,no,0.011185650836566214,no,0.010817938309512231
2930,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Tell hibernate to use getBytes instead of getBinaryStream,no,undetermined,0,0,0,no,0.03252834880840563,no,0.012385235500916053,no,0.011738624266827936,no,0.011205258145935225,no,0.010835868557119238
2931,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// No batch statements,no,undetermined,0,0,0,no,0.0011680004812277267,no,0.001476089524552544,no,0.0012620273725354107,no,0.001118667475826629,no,0.0010314991917985507
2932,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//ELEMENT,no,undetermined,0,0,0,no,0.0009757160683088469,no,0.0007172033295747296,no,0.0006709108468161723,no,0.0005705871176665449,no,0.0005397091862436496
2933,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"/*
		 * We might want a special case for 19,2. This is very common for money types
		 * and here it is converted to 18,1
		 */",no,undetermined,0,0,0,no,0.4804404574952893,no,0.39763644861907826,no,0.3968869257264243,no,0.3992867950639322,no,0.4030236620433484
2934,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//no pointbase BIT,no,undetermined,0,0,0,no,0.007450012442239994,no,0.00919968109036853,no,0.008959255684973888,no,0.008473853287142591,no,0.00828023595945801
2935,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//no pointbase TINYINT,no,undetermined,0,0,0,no,0.011659584487666578,no,0.012375327867211123,no,0.011730798718173648,no,0.01118776352054675,no,0.010825833542233881
2936,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// NativeSQL: collect element column and auto-aliases,no,undetermined,0,0,0,no,0.0016730881951624772,no,0.0014624699628286073,no,0.0012949851127846404,no,0.0011809563996483547,no,0.0011263175210585088
2937,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// INDEX AND ROW SELECT,no,undetermined,0,0,0,no,0.0006650576130851514,no,0.0009379047381347295,no,0.0008160538056241427,no,0.0007262036361251632,no,0.0006571058207488601
2938,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//starts with 1, implicitly",no,undetermined,0,0,0,no,0.004935554892289586,no,0.006732175746991517,no,0.00650129729791484,no,0.006139882055615268,no,0.005914949271063858
2939,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// SQL Server (at least up through 2005) does not support defining // cascade delete constraints which can circel back to the mutating // table,no,undetermined,0,0,0,no,0.0040836598743049166,no,0.012374906647964782,no,0.0117332885284762,no,0.011191099427355288,no,0.010843448139786036
2940,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// NativeSQL: collect index column and auto-aliases,no,undetermined,0,0,0,no,0.0014050433713904858,no,0.0017513594830296587,no,0.0015543624132983173,no,0.0014324591409289875,no,0.001336633824070028
2941,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// here assume SQLServer2005 using snapshot isolation, which does not have this problem",no,undetermined,0,0,0,no,0.15890733939497853,no,0.2280610905081684,no,0.37852644647274875,no,0.39595960993874346,no,0.3994840214979239
2942,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//		registerColumnType( Types.CLOB, 16777215, ""mediumtext"" ); //		registerColumnType( Types.CLOB, 65535, ""text"" );",no,undetermined,0,0,0,no,0.001673096503189955,no,0.01240675112544617,no,0.01173843405163017,no,0.011177410938639158,no,0.010811658264800274
2943,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//		registerColumnType( Types.VARCHAR, 16777215, ""mediumtext"" ); //		registerColumnType( Types.VARCHAR, 65535, ""text"" );",no,undetermined,0,0,0,no,0.004220966095899591,no,0.011463400051123585,no,0.01078148944280357,no,0.010262871101412196,no,0.009920712968891918
2944,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//starts with 1, implicitly",no,undetermined,0,0,0,no,0.004935554892289586,no,0.006732175746991517,no,0.00650129729791484,no,0.006139882055615268,no,0.005914949271063858
2945,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//GENERATE THE SQL:,no,undetermined,0,0,0,no,0.0015428862803429073,no,0.0018921897084032083,no,0.001628628850476314,no,0.0015155695904810588,no,0.0014167224663570398
2946,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* package-private */,no,undetermined,0,0,0,no,0.007324499569675553,no,0.0025515341346191754,no,0.0024015864803768826,no,0.00222281963095376,no,0.0021565627506037366
2947,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//not all classpersisters implement PropertyMapping!,no,undetermined,0,0,0,no,0.06599021432711959,no,0.012385544416385274,no,0.011748792022358625,no,0.011209524618763247,no,0.010813573597804585
2948,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Handle any filters applied to this collection for many-to-many,no,undetermined,0,0,0,no,0.05671983880173628,no,0.01240160288485988,no,0.011719237032632706,no,0.011177139064694273,no,0.010854107374869434
2949,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//if there is a user-specified loader, return that //TODO: filters!?",no,undetermined,0,0,0,yes,0.6401742777533976,yes,0.6367636514283129,yes,0.6400186101771334,yes,0.6481110027241361,yes,0.6495272254577954
2950,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Take care of any entities that might have // been evicted!	,no,undetermined,0,0,0,no,0.015216537868947532,no,0.01240390625209111,no,0.011741638210833861,no,0.01121571874834077,no,0.01082148535355441
2951,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"//strip leading ','",no,undetermined,0,0,0,no,0.001067769729634927,no,0.000977910459836626,no,0.0008676117080337794,no,0.0007950895473081625,no,0.00075019868560295
2952,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Run a subquery loader,no,undetermined,0,0,0,no,0.002594110648816859,no,0.002853069748352374,no,0.0025086227579427123,no,0.0023336906975198204,no,0.0022085183463395543
2953,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// We can't change the TM on a running cache; just check // if the cache has no TM and we're OK with that,no,undetermined,0,0,0,no,0.005044463471005728,no,0.010297851052813702,no,0.009685381363878242,no,0.008999731933143266,no,0.00861904332767704
2954,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//Sybase BIT type does not support null values,no,undetermined,0,0,0,no,0.01683413560701463,no,0.012411687030204628,no,0.011737541297628799,no,0.011201949164879134,no,0.01083871025269226
2955,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,"// We could register the session against the transaction even though it is // not started, but we'd have no guarentee of ever getting the map // entries cleaned up (aside from spawning threads).",no,undetermined,0,0,0,no,0.0012697778743825413,no,0.0017627378436252813,no,0.0016102448177729549,no,0.0014072394520974747,no,0.0013091604794101886
2956,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//needed by arrays,no,undetermined,0,0,0,no,0.013714966632380102,no,0.012374908970923904,no,0.011740408693869261,no,0.011203355503256523,no,0.010846529870330782
2957,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// ignore,no,undetermined,0,0,0,no,0.00014335230378915544,no,0.00013958636484248836,no,0.00012005421643621465,no,0.00010252236131852231,no,9.386482826389979e-05
2958,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//		 This assumes you will want to ignore any update counts,no,undetermined,0,0,0,no,0.005583811641669572,no,0.004652785376407015,no,0.004210941488734872,no,0.004007746867795804,no,0.0038084720264213983
2959,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//TODO: something with formulas...,no,undetermined,0,0,0,yes,0.9999971637669047,no,0.012370154652255449,no,0.011753892623633074,no,0.01117032732649582,no,0.010826909661242577
2960,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//an assertion,no,undetermined,0,0,0,no,0.0056919813122310045,no,0.008320430439733236,no,0.007340646518219216,no,0.006964119264248205,no,0.006680390119644847
2961,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,// Remove all the old entries,no,undetermined,0,0,0,no,0.0021694444964673125,no,0.0018961371790089348,no,0.0017537587189657784,no,0.001616317111796257,no,0.0015227381654812817
2962,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/* local variables | target obj | each oldvalue | */,no,undetermined,0,0,0,no,0.0009279415724831028,no,0.00123345564243728,no,0.0010920655824413195,no,0.0009674093502056675,no,0.000904373199712588
2963,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//create all the new entries,no,undetermined,0,0,0,no,0.001022843656087957,no,0.0009214182188828632,no,0.0008482212365343561,no,0.0007673340983649405,no,0.0007207286854496183
2964,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*&& !indexIsFormula*/,no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
2965,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,/*&& !indexIsFormula*/,no,undetermined,0,0,0,no,0.01169459817274121,no,0.012377359662574784,no,0.011722226664673223,no,0.011186429330002823,no,0.010826112182498007
2966,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//delete all the deleted entries,no,undetermined,0,0,0,no,0.00048152738017577653,no,0.0003411622363154691,no,0.00031086295533128063,no,0.00026742571644909136,no,0.00024818279235206574
2967,hibernate-distribution-3.3.2.GA,WITHOUT_CLASSIFICATION,//insert all the new entries,no,undetermined,0,0,0,no,0.0007339914016055901,no,0.000713160542315128,no,0.0007456920681766684,no,0.0006656820254604212,no,0.0006627367003898768
